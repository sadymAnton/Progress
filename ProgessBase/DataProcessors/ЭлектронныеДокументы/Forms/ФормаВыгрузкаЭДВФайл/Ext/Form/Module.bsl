&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ИзменитьВидимостьДоступность()
	
	ВыгрузкаВЭП = (СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезЭлектроннуюПочту"));
	Элементы.СтраницаПисьмо.Доступность = ВыгрузкаВЭП;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьВидимостьДоступностьПриСозданииНаСервере()
	
	Текст = Нстр("ru = 'Выгрузка документов в файл'");
	Если ТаблицаДанных.Количество() > 1 Тогда
		ТекстГиперссылки = НСтр("ru = 'Открыть список электронных документов (%1)'");
		ТекстГиперссылки = СтрЗаменить(ТекстГиперссылки, "%1", ТаблицаДанных.Количество());
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Электронный документ: %1'");
		ТекстГиперссылки = СтрЗаменить(ТекстГиперссылки, "%1", ТаблицаДанных[0].НаименованиеФайла);
	КонецЕсли;
	Элементы.ПредварительныйПросмотрДокумента.Заголовок = ТекстГиперссылки;
	ЭтаФорма.Заголовок = Текст;
	
	Если СпособВыгрузки <> Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
		СпособВыгрузки = Перечисления.СпособыОбменаЭД.ЧерезКаталог;
	Иначе
		ИзменитьСпособВыгрузки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиЭДНаПросмотр(СтрокаДанных)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПолноеИмяФайла");
	СтруктураПараметров.Вставить("НаименованиеФайла");
	СтруктураПараметров.Вставить("НаправлениеЭД");
	СтруктураПараметров.Вставить("Контрагент");
	СтруктураПараметров.Вставить("УникальныйИдентификатор");
	СтруктураПараметров.Вставить("ВладелецЭД");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, СтрокаДанных);
	ФормаПросмотраЭД = ОткрытьФорму("Обработка.ЭлектронныеДокументы.Форма.ФормаЗагрузкиПросмотраЭД",
		Новый Структура("СтруктураЭД", СтруктураПараметров), ЭтаФорма, СтруктураПараметров.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьУчетнуюЗапись()
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УчетныеЗаписиЭлектроннойПочты.Ссылка
	|ИЗ
	|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	|ГДЕ
	|	НЕ УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления
	|	И УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляОтправки";
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Количество() = 1 Тогда
		Результат.Следующий();
		Возврат Результат.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка();

КонецФункции

&НаКлиенте
Функция ВыгрузитьЭД(ТекстСообщения)
	
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(СпособВыгрузки) Тогда
		ТекстСообщения = Нстр("ru = 'Необходимо указать способ выгрузки.'");
		Отказ = Истина;
	КонецЕсли;
	Если СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезЭлектроннуюПочту")
		И НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ТекстСообщения = ТекстСообщения + ?(ЗначениеЗаполнено(ТекстСообщения), Символы.ПС, "")
			+ Нстр("ru = 'Необходимо указать учетную запись.'");
		Отказ = Истина;
	КонецЕсли;
	Если НЕ Отказ Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("СпособВыгрузки",  СпособВыгрузки);
		СтруктураПараметров.Вставить("ПутьККаталогу");
		СтруктураПараметров.Вставить("УчетнаяЗапись",   УчетнаяЗапись);
		СтруктураПараметров.Вставить("АдресПолучателя", АдресПолучателя);
		
		МассивСтруктур = Новый Массив;
		
		Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
			СтруктураОбмена = Новый Структура;
			СтруктураОбмена.Вставить("ПолноеИмяФайла",    СтрокаДанных.ПолноеИмяФайла);
			СтруктураОбмена.Вставить("НаименованиеФайла", СтрокаДанных.НаименованиеФайла);
			СтруктураОбмена.Вставить("НаправлениеЭД",     СтрокаДанных.НаправлениеЭД);
			СтруктураОбмена.Вставить("Контрагент",        СтрокаДанных.Контрагент);
			СтруктураОбмена.Вставить("УникальныйИдентификатор", СтрокаДанных.УникальныйИдентификатор);
			СтруктураОбмена.Вставить("ВладелецЭД",        СтрокаДанных.ВладелецЭД);
			СтруктураОбмена.Вставить("АдресХранилища",    СтрокаДанных.АдресХранилища);
			
			МассивСтруктур.Добавить(СтруктураОбмена);
		КонецЦикла;
		
		БыстрыйОбменВыгрузитьЭД(МассивСтруктур, СтруктураПараметров);
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаСервере
Процедура ИзменитьСпособВыгрузки()
	
	Если СпособВыгрузки = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
		Если ЗначениеЗаполнено(Контрагент) И Не ЗначениеЗаполнено(АдресПолучателя) Тогда
			АдресПолучателя = ЭлектронныеДокументыПереопределяемый.АдресЭлектроннойПочтыКонтрагента(Контрагент);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
			УчетнаяЗапись = ПолучитьУчетнуюЗапись();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БыстрыйОбменВыгрузитьЭД(МассивСтруктурОбмена, СтруктураПараметров)
	
	Перем ПутьККаталогу;
	
	Если СтруктураПараметров.СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезКаталог") Тогда
		Для Каждого СтруктураОбмена Из МассивСтруктурОбмена Цикл
			ДанныеФайлаДляСохранения = Новый Структура;
			ДанныеФайлаДляСохранения.Вставить("Расширение", "zip");
			ДанныеФайлаДляСохранения.Вставить("ПолноеНаименование", СтруктураОбмена.НаименованиеФайла);
			ДанныеФайлаДляСохранения.Вставить("АдресХранилища", СтруктураОбмена.АдресХранилища);
			
			ЭлектронныеДокументыКлиент.СохранитьКак(ДанныеФайлаДляСохранения);
		КонецЦикла;
	Иначе
		ПараметрыФормы = Новый Структура;
		Если МассивСтруктурОбмена.Количество() > 1 Тогда
			ТемаПисьма = "Пакты электронных документов";
		Иначе
			ТемаПисьма = "Пакет электронного документа: " + МассивСтруктурОбмена[0].НаименованиеФайла;
		КонецЕсли;
		ПараметрыФормы.Вставить("Тема", ТемаПисьма);
		ПараметрыФормы.Вставить("УчетнаяЗапись", СтруктураПараметров.УчетнаяЗапись);
		ПараметрыФормы.Вставить("Кому", СтруктураПараметров.АдресПолучателя);
		Вложения = Новый СписокЗначений;
		Для Каждого СтруктураОбмена Из МассивСтруктурОбмена Цикл
			Вложения.Добавить(СтруктураОбмена.АдресХранилища, СтруктураОбмена.НаименованиеФайла + ".zip");
		КонецЦикла;
		ПараметрыФормы.Вставить("Вложения", Вложения);
		Форма = ОткрытьФорму("ОбщаяФорма.РедактированиеНовогоПисьма", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПодготовленныеДанныеЭД()
	
	ТаблицаЭД = ПолучитьИзВременногоХранилища(АдресХранилища);
	Для каждого Строка Из ТаблицаЭД Цикл
		Строка.АдресХранилища = ПоместитьВоВременноеХранилище(Строка.ДвоичныеДанныеПакета, УникальныйИдентификатор);
	КонецЦикла;
	ТаблицаДанных.Загрузить(ТаблицаЭД);
	
	ИзменитьВидимостьДоступностьПриСозданииНаСервере();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗаданияДляЭД()

	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
			ЗагрузитьПодготовленныеДанныеЭД();
			ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗаданияДляЭД",
				ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗапуститьОбработчикОжидания()
	
	Если НЕ РезультатВыполненияЗадания.ЗаданиеВыполнено Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗаданияДляЭД", ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
		
		ИдентификаторЗадания = РезультатВыполненияЗадания.ИдентификаторЗадания;
		АдресХранилища       = РезультатВыполненияЗадания.АдресХранилища;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	
	ОчиститьСообщения();
	
	ТекстСообщения = "";
	Отказ = ВыгрузитьЭД(ТекстСообщения);
	
	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура СпособВыгрузкиПриИзменении(Элемент)
	
	ИзменитьСпособВыгрузки();
	ИзменитьВидимостьДоступность();
	ЭтаФорма.Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	
	Если ТаблицаДанных.Количество() > 1 Тогда
		МассивСтруктур = Новый Массив;
		Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("ПолноеИмяФайла", СтрокаДанных.ПолноеИмяФайла);
			СтруктураПараметров.Вставить("НаименованиеФайла", СтрокаДанных.НаименованиеФайла);
			СтруктураПараметров.Вставить("НаправлениеЭД", СтрокаДанных.НаправлениеЭД);
			СтруктураПараметров.Вставить("Контрагент", СтрокаДанных.Контрагент);
			СтруктураПараметров.Вставить("УникальныйИдентификатор", СтрокаДанных.УникальныйИдентификатор);
			СтруктураПараметров.Вставить("ВладелецЭД", СтрокаДанных.ВладелецЭД);
			МассивСтруктур.Добавить(СтруктураПараметров);
		КонецЦикла;
		ФормаПросмотраЭД = ОткрытьФорму("Обработка.ЭлектронныеДокументы.Форма.ФормаСпискаВыгружаемыхДокументов",
			Новый Структура("СтруктураЭД", МассивСтруктур), ЭтаФорма);
	Иначе
		ВывестиЭДНаПросмотр(ТаблицаДанных[0]);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Загружаем каталог.
	СтруктураКаталога = "";
	Если Параметры.Свойство("СтруктураКаталога", СтруктураКаталога) Тогда
		
		НастройкиОбмена = Новый Структура;
		НастройкиОбмена.Вставить("СоглашениеЭД",
			Новый Структура("СпособОбменаЭД", Перечисления.СпособыОбменаЭД.БыстрыйОбмен));
		НастройкиОбмена.Вставить("Организация", СтруктураКаталога.Организация);
		НастройкиОбмена.Вставить("ИдентификаторОрганизации", ЭлектронныеДокументыПереопределяемый.ПолучитьИДКонтрагента(
			СтруктураКаталога.Организация, "Организация"));
		
		СтруктураВозврата = ЭлектронныеДокументыВнутренний.СформироватьКаталогНоменклатуры(НастройкиОбмена, СтруктураКаталога);
		Если НЕ ЗначениеЗаполнено(СтруктураВозврата) Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаДанных.Добавить();
		НоваяСтрока.ПолноеИмяФайла = СтруктураВозврата.ПолноеИмяФайла;
		НоваяСтрока.НаименованиеФайла = СтруктураВозврата.Наименование;
		
		ДвоичныеДанныеПакета = Обработки.ЭлектронныеДокументы.СформироватьЭДПрисоединенныйФайлПакетаТакском(СтруктураВозврата);
		НоваяСтрока.АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанныеПакета, УникальныйИдентификатор);
		
		ИзменитьВидимостьДоступностьПриСозданииНаСервере();
		
	КонецЕсли;
	
	// Загружаем документы.
	МассивСсылокНаОбъект = Новый Массив;
	Если Параметры.Свойство("СтруктураЭД", МассивСсылокНаОбъект) Тогда
		Если МассивСсылокНаОбъект.Количество() = 0 Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		ИБФайловая = ОбщегоНазначения.ИнформационнаяБазаФайловая();
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
		ИдентификаторЗадания = Неопределено;
		
		Если ИБФайловая Тогда
			АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
			Обработки.ЭлектронныеДокументы.ПодготовитьДанныеДляЗаполненияДокументов(МассивСсылокНаОбъект, АдресХранилища);
			РезультатВыполненияЗадания = Новый Структура("ЗаданиеВыполнено", Истина);
		Иначе
			НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование электронного документа.'");
			РезультатВыполненияЗадания = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
				УникальныйИдентификатор,
				"Обработки.ЭлектронныеДокументы.ПодготовитьДанныеДляЗаполненияДокументов",
				МассивСсылокНаОбъект,
				НаименованиеФоновогоЗадания);
				
			АдресХранилища       = РезультатВыполненияЗадания.АдресХранилища;
		КонецЕсли;
		
		Если РезультатВыполненияЗадания.ЗаданиеВыполнено Тогда
			ЗагрузитьПодготовленныеДанныеЭД();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(РезультатВыполненияЗадания) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ЗапуститьОбработчикОжидания", 1, Истина);
	КонецЕсли;
	
	ИзменитьВидимостьДоступность();
	
КонецПроцедуры
