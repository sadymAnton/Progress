
// Хранит соответствие, при помощи которого храним и показываем содержимое пачки
Перем СоответствиеСсылокИОбъектов Экспорт;

////////////////////////////////////////////////////////////////////////////////

// Процедура выводить сообщения в специальное окно сообщений
// тексты сообщений берутся из переменной МассивСообщений
//
Процедура ВывестиСообщенияОбОшибках(МассивСообщений) Экспорт
	
	Если МассивСообщений.Количество() > 0 Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		ОбработкаКомментариев.ДобавитьСообщение("Подготовка данных для передачи в ФНС", Перечисления.ВидыСообщений.Раздел);
		Для каждого ЭлементМассива Из МассивСообщений Цикл
			Если ЭлементМассива.РасшифровкаСообщения <> Неопределено И ЭлементМассива.РасшифровкаСообщения.Количество() > 1 Тогда
				РодительскаяСтрока = ОбработкаКомментариев.ДобавитьСообщение(ЭлементМассива.ТекстСообщения, ЭлементМассива.ВидСообщения);
				Для Каждого ЭлементРасшифровки Из ЭлементМассива.РасшифровкаСообщения Цикл
					МассивРасшифровки = Новый Массив;
					МассивРасшифровки.Добавить(Новый Структура("Представление, Расшифровка", ЭлементРасшифровки.Представление, ЭлементРасшифровки.Расшифровка));
					ОбработкаКомментариев.ДобавитьСообщение("", Перечисления.ВидыСообщений.Информация, МассивРасшифровки, РодительскаяСтрока);
					
				КонецЦикла;
			Иначе
				ОбработкаКомментариев.ДобавитьСообщение(ЭлементМассива.ТекстСообщения, ЭлементМассива.ВидСообщения, ЭлементМассива.РасшифровкаСообщения);
			КонецЕсли
			
		КонецЦикла;
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;	
	
КонецПроцедуры // ВывестиСообщенияОбОшибках()

// Создает структуру, с параметрами выводимого сообщения 
// для помещения в массив сообщений-структур
Функция СоздатьСообщениеСтруктуру(ТекстСообщения, ВидСообщения, РасшифровкаСообщения = Неопределено) Экспорт 
	СтруктураСообщения = Новый Структура;
	СтруктураСообщения.Вставить("ТекстСообщения", ТекстСообщения);
	СтруктураСообщения.Вставить("ВидСообщения", ВидСообщения);
	СтруктураСообщения.Вставить("РасшифровкаСообщения", РасшифровкаСообщения);
	Возврат СтруктураСообщения
КонецФункции // СоздатьСообщениеСтруктуру()

////////////////////////////////////////////////////////////////////////////////

// Получает значения общих для всех видов документов реквизитов
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   Структура, содержащая значения реквизитов
//
Функция СтруктураОбщихРеквизитовДокумента(НеВключатьДоходыПоЦеннымБумагам = Ложь)
	
	СтруктураРеквизитов = Новый Структура("Организация, НалоговыйПериод, КодИФНС, ОснованиеДляПредставленияСправок, Ответственный,ГлавныйБухгалтер, Телефон, СправкуПодписал, ДолжностьПодписавшегоЛица, Дата, ОрганизацияЭтоЮрЛицо, НеВключатьДоходыПоЦеннымБумагам");
	СтруктураРеквизитов.Дата = ОбщегоНазначенияЗК.ПолучитьРабочуюДату(); 
	СтруктураРеквизитов.Организация = Организация;
	СтруктураРеквизитов.НалоговыйПериод = НалоговыйПериод;
	СтруктураРеквизитов.ОснованиеДляПредставленияСправок = Перечисления.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность;
	СтруктураРеквизитов.НеВключатьДоходыПоЦеннымБумагам = НеВключатьДоходыПоЦеннымБумагам;
	СтруктураРеквизитов.ОрганизацияЭтоЮрЛицо = ОбщегоНазначенияЗКПереопределяемый.ЭтоЮрЛицо(Организация);
	СтруктураРеквизитов.КодИФНС = ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Организация,"КодИМНС");
	Если НалоговыйПериод < 2015 Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Организация, СтруктураРеквизитов.Дата));
	Иначе
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Организация, СтруктураРеквизитов.Дата), "Телефон");
	КонецЕсли;
	СтруктураРеквизитов.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	Если СтруктураРеквизитов.Ответственный.Пустая() Тогда
		СтруктураРеквизитов.Ответственный = глЗначениеПеременной("глТекущийПользователь")
	КонецЕсли;
	
	Возврат СтруктураРеквизитов
	
КонецФункции // СтруктураОбщихРеквизитовДокумента()

Процедура ЗаполнитьДанныеСправок(НовыйДок, НомерПервойСправки)

	Если НалоговыйПериод < 2011 Тогда
		НовыйДок.СотрудникиОрганизации.Загрузить(СправкиПоНДФЛ.ДанныеСотрудников(НовыйДок.СотрудникиОрганизации.Выгрузить(,"Сотрудник, Ставка"), НовыйДок.Дата, НалоговыйПериод));
	Иначе
		НовыйДок.СотрудникиОрганизации.Загрузить(СправкиПоНДФЛ.ДанныеСотрудников(НовыйДок.СотрудникиОрганизации.Выгрузить(,"Сотрудник"), НовыйДок.Дата, НалоговыйПериод));
	КонецЕсли;
	Для каждого СтрокаТЧ Из НовыйДок.СотрудникиОрганизации Цикл
		СтрокаТЧ.НомерСправки = НомерПервойСправки + НовыйДок.СотрудникиОрганизации.Индекс(СтрокаТЧ)
	КонецЦикла;
	СтруктураДанных = СправкиПоНДФЛ.ДанныеОДоходах(НовыйДок.СотрудникиОрганизации.Выгрузить(), НовыйДок.НалоговыйПериод, НовыйДок.Организация, ОбщегоНазначенияЗК.ГоловнаяОрганизация(НовыйДок.Организация), ?(НовыйДок.НалоговыйПериод + 1 < Год(ПроведениеРасчетов.ДатаПереходаНаКодыОКТМО()), НовыйДок.ОКАТО_КПП, НовыйДок.ОКТМО_КПП), НачалоМесяца(НовыйДок.Дата), НовыйДок.НалоговыйПериод + 1 >= Год(ПроведениеРасчетов.ДатаПереходаНаКодыОКТМО()), ?(НовыйДок.НалоговыйПериод > 2014,Истина,НовыйДок.НеВключатьДоходыПоЦеннымБумагам));
	НовыйДок.СведенияОДоходах.Загрузить(СтруктураДанных.Доходы);
	НовыйДок.СведенияОВычетах.Загрузить(СтруктураДанных.Вычеты);
	ТаблицаИтогов = СтруктураДанных.Итоги;
	РеквизитыУведомления = СправкиПоНДФЛ.РеквизитыУведомлений(НалоговыйПериод);
	Если НовыйДок.НалоговыйПериод < 2011 Тогда
		Для каждого СтрокаТЧ Из НовыйДок.СотрудникиОрганизации Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, ТаблицаИтогов.Найти(СтрокаТЧ.НомерСправки, "НомерСправки"),, "Ставка");
		КонецЦикла;
	Иначе
		НовыйДок.СуммыНалогов.Загрузить(СтруктураДанных.Итоги);
		СтруктураПоиска = Новый Структура("НомерСправки");
		Для каждого СтрокаТЧ Из НовыйДок.СотрудникиОрганизации Цикл
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЧ);
			СтрокиИтогов = ТаблицаИтогов.НайтиСтроки(СтруктураПоиска);
			Если СтрокиИтогов.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокиИтогов[0], РеквизитыУведомления);
				СправкиПоНДФЛ.УточнитьСтатусРаботающегоПоПатенту(НалоговыйПериод, СтрокиИтогов, СтрокаТЧ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьДанныеСправок()

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьТаблицуРеестров() Экспорт 
	
	СоответствиеСсылокИОбъектов = Новый Соответствие;
	Документы2НДФЛ.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НалоговыйПериод", НалоговыйПериод);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкаПоНДФЛВНалоговыйОрган.Ссылка,
	|	СправкаПоНДФЛВНалоговыйОрган.Номер КАК Номер,
	|	2 КАК Порядок
	|ИЗ
	|	Документ.СправкаПоНДФЛВНалоговыйОрган КАК СправкаПоНДФЛВНалоговыйОрган
	|ГДЕ
	|	СправкаПоНДФЛВНалоговыйОрган.Организация = &Организация
	|	И СправкаПоНДФЛВНалоговыйОрган.НалоговыйПериод = &НалоговыйПериод
	|	И НЕ СправкаПоНДФЛВНалоговыйОрган.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкаПоНДФЛВНалоговыйОрганС2015.Ссылка,
	|	СправкаПоНДФЛВНалоговыйОрганС2015.Номер,
	|	1
	|ИЗ
	|	Документ.СправкаПоНДФЛВНалоговыйОрганС2015 КАК СправкаПоНДФЛВНалоговыйОрганС2015
	|ГДЕ
	|	СправкаПоНДФЛВНалоговыйОрганС2015.Организация = &Организация
	|	И СправкаПоНДФЛВНалоговыйОрганС2015.НалоговыйПериод = &НалоговыйПериод
	|	И НЕ СправкаПоНДФЛВНалоговыйОрганС2015.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	Номер";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Документы2НДФЛ.Добавить().Справка = Выборка.Ссылка;
		СоответствиеСсылокИОбъектов.Вставить(Выборка.Ссылка,Выборка.Ссылка.ПолучитьОбъект()) 
	КонецЦикла;
	
КонецПроцедуры 

Функция Автозаполнение(НеВключатьДоходыПоЦеннымБумагам = Ложь) Экспорт
	
	ТекущаяСтрока = Неопределено;
	
	ДатаСозданияДокументов = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
	
	// информация об ошибках
	МассивСообщений = Новый Массив;
	
	// Рассчитаем номер первой справки о доходах
	НомерПервойСправки = СправкиПоНДФЛ.НомерПервойСправки(Организация, НалоговыйПериод, ДатаСозданияДокументов);
	
    Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаДокумента",ДатаСозданияДокументов);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ДатаЗакона229ФЗ", ПроведениеРасчетов.ДатаЗакона229ФЗ());
	Запрос.УстановитьПараметр("ЗаменятьБеженцаНерезидентом", НалоговыйПериод < Год(ПроведениеРасчетов.ДатаЗакона285ФЗ())); // беженцы до начала действия Федерального закона 285-ФЗ соответствуют обычным нерезидентам
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);
	Запрос.УстановитьПараметр("КонецНП",КонецГода(Дата(НалоговыйПериод,1,1)));
	Запрос.УстановитьПараметр("ДатаПодачиСведений", НачалоМесяца(ДатаСозданияДокументов));
	Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
	Запрос.УстановитьПараметр("ПустойКодПоОКТМО","");
	Запрос.УстановитьПараметр("ПустойКПП","");
	
	Если НалоговыйПериод + 1 < Год(ПроведениеРасчетов.ДатаПереходаНаКодыОКТМО()) Тогда
		ИмяКодаТерритории = "ОКАТО_КПП";
		ИмяПоляТерритории = "КодПоОКАТО";
	Иначе
		ИмяКодаТерритории = "ОКТМО_КПП";
		ИмяПоляТерритории = "КодПоОКТМО";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДФЛСведенияОДоходах.ФизЛицо,
	|	НДФЛСведенияОДоходах.КодДохода,
	|	НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.КодПоОКАТО <> &ПустойКодПоОКАТО
	|			ТОГДА НДФЛСведенияОДоходах.КодПоОКАТО
	|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО
	|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
	|	КОНЕЦ КАК КодПоОКАТО,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.КПП <> &ПустойКПП
	|			ТОГДА НДФЛСведенияОДоходах.КПП
	|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
	|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП
	|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КПП, &ПустойКПП)
	|	КОНЕЦ КАК КПП
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|ГДЕ
	|	НДФЛСведенияОДоходах.ОбособленноеПодразделение = &Организация
	|	И ГОД(НДФЛСведенияОДоходах.Период) = &ГодНП
	|	И НЕ НДФЛСведенияОДоходах.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И НДФЛСведенияОДоходах.ПериодРегистрации < &ДатаПодачиСведений";
	Если Не НеВключатьДоходыПоЦеннымБумагам Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И НЕ НДФЛСведенияОДоходах.ВключатьВДекларациюПоНалогуНаПрибыль", "");
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "КодПоОКАТО", ИмяПоляТерритории);
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДФЛСведенияОДоходах.КодПоОКАТО,
	|	НДФЛСведенияОДоходах.КПП
	|ИЗ
	|	ВТДоходы КАК НДФЛСведенияОДоходах";
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "КодПоОКАТО", ИмяПоляТерритории);
	ТаблицаОКАТО_КПП = Запрос.Выполнить().Выгрузить();
	ТаблицаОКАТО_КПП.Колонки.Добавить(ИмяКодаТерритории, Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(21)));
	Для каждого СтрокаТЗ Из ТаблицаОКАТО_КПП Цикл
		СтрокаТЗ[ИмяКодаТерритории] = СправкиПоНДФЛ.СуммаОКАТОиКПП(СтрокаТЗ[ИмяПоляТерритории],СтрокаТЗ.КПП)
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДФЛСведенияОДоходах.КодПоОКАТО,
	|	НДФЛСведенияОДоходах.КПП,
	|	НДФЛСведенияОДоходах.ОКАТО_КПП
	|ПОМЕСТИТЬ ВТСоответствиеОКАТО_КПП
	|ИЗ
	|	&ТаблицаОКАТО_КПП КАК НДФЛСведенияОДоходах";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОКАТО_КПП", ИмяКодаТерритории);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "КодПоОКАТО", ИмяПоляТерритории);
	Запрос.УстановитьПараметр("Таблица" + ИмяКодаТерритории, ТаблицаОКАТО_КПП);
    Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Статусы.ФизЛицо,
	|	ВЫБОР
	|		КОГДА &ЗаменятьБеженцаНерезидентом
	|				И Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Беженец)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|		ИНАЧЕ Статусы.Статус
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ ВТРезидентствоФизлицНаКонецГода
	|ИЗ
	|	РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
	|			&КонецНП,
	|			ФизЛицо В
	|				(ВЫБРАТЬ
	|					ФизическиеЛица.ФизЛицо
	|				ИЗ
	|					ВТДоходы КАК ФизическиеЛица)) КАК Статусы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыРегистра.ФизЛицо КАК ФизЛицо,
	|	ПериодыРегистра.МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА &ЗаменятьБеженцаНерезидентом
	|				И СтатусНалогоплательщика.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Беженец)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|		ИНАЧЕ ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ ВТРезидентствоФизлицНаКонецМесяца
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Физлица.ФизЛицо КАК ФизЛицо,
	|		Физлица.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		МАКСИМУМ(СтатусНалогоплательщика.Период) КАК Период
	|	ИЗ
	|		ВТДоходы КАК Физлица
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	|			ПО Физлица.ФизЛицо = СтатусНалогоплательщика.ФизЛицо
	|				И (СтатусНалогоплательщика.Период <= КОНЕЦПЕРИОДА(Физлица.МесяцНалоговогоПериода, МЕСЯЦ))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Физлица.ФизЛицо,
	|		Физлица.МесяцНалоговогоПериода) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	|		ПО ПериодыРегистра.ФизЛицо = СтатусНалогоплательщика.ФизЛицо
	|			И ПериодыРегистра.Период = СтатусНалогоплательщика.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Физлица.ФизЛицо,
	|	Физлица.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА Физлица.МесяцНалоговогоПериода < &ДатаЗакона229ФЗ
	|			ТОГДА ЕСТЬNULL(РезидентствоФизлицНаКонецГода.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|		ИНАЧЕ РезидентствоФизлицНаКонецМесяца.Статус
	|	КОНЕЦ КАК ТекущийСтатус,
	|	ЕСТЬNULL(РезидентствоФизлицНаКонецГода.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус
	|ПОМЕСТИТЬ ВТСтатусы
	|ИЗ
	|	ВТДоходы КАК Физлица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезидентствоФизлицНаКонецМесяца КАК РезидентствоФизлицНаКонецМесяца
	|		ПО Физлица.ФизЛицо = РезидентствоФизлицНаКонецМесяца.ФизЛицо
	|			И Физлица.МесяцНалоговогоПериода = РезидентствоФизлицНаКонецМесяца.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезидентствоФизлицНаКонецГода КАК РезидентствоФизлицНаКонецГода
	|		ПО Физлица.ФизЛицо = РезидентствоФизлицНаКонецГода.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДФЛСведенияОДоходах.ФизЛицо КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА &ГодНП > 2010
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.ПустаяСсылка)
	|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|			ТОГДА ВЫБОР
	|					КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|							И Статусы.ТекущийСтатус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|				КОНЕЦ
	|		КОГДА Статусы.ТекущийСтатус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			ТОГДА ВЫБОР
	|					КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		КОГДА НДФЛСведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ КАК Ставка,
	|	СоответствиеОКАТО_КПП.ОКАТО_КПП КАК ОКАТО_КПП,
	|	НДФЛСведенияОДоходах.ФизЛицо.Наименование КАК Порядок
	|ИЗ
	|	ВТДоходы КАК НДФЛСведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
	|		ПО НДФЛСведенияОДоходах.ФизЛицо = Статусы.ФизЛицо
	|			И НДФЛСведенияОДоходах.МесяцНалоговогоПериода = Статусы.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеОКАТО_КПП КАК СоответствиеОКАТО_КПП
	|		ПО НДФЛСведенияОДоходах.КодПоОКАТО = СоответствиеОКАТО_КПП.КодПоОКАТО
	|			И НДФЛСведенияОДоходах.КПП = СоответствиеОКАТО_КПП.КПП
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОКАТО_КПП,
	|	Порядок";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОКАТО_КПП", ИмяКодаТерритории);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "КодПоОКАТО", ИмяПоляТерритории);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("По организации " + ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Организация,"Наименование") + " не обнаружено сведений о заработке!", Перечисления.ВидыСообщений.Ошибка));
		ВывестиСообщенияОбОшибках(МассивСообщений);
		Возврат Неопределено
	КонецЕсли;
	
	Если ДатаСозданияДокументов < Дата(НалоговыйПериод,1,1) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("При составлении справок учтены данные, зарегистрированные по " + Формат(НачалоМесяца(ДатаСозданияДокументов) - 1,"ДЛФ=DD"), Перечисления.ВидыСообщений.ВажнаяИнформация));
	КонецЕсли;
	
	СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента(НеВключатьДоходыПоЦеннымБумагам);
	
	Выборка = РезультатЗапроса.Выбрать();
	БылоСтрок = Документы2НДФЛ.Количество();
	НовыйДок = Неопределено;
	Пока Выборка.СледующийПоЗначениюПоля(ИмяКодаТерритории) Цикл
		
		ТекущийКодНО = ?(СтруктураРеквизитов.ОрганизацияЭтоЮрЛицо, СправкиПоНДФЛ.КодНалоговогоОрганаПоОКАТО_КППиОрганизации(Организация, СтруктураРеквизитов.ОрганизацияЭтоЮрЛицо, Выборка[ИмяКодаТерритории]), СтруктураРеквизитов.КодИФНС);
		Если НовыйДок <> Неопределено Тогда
			ЗаполнитьДанныеСправок(НовыйДок, НомерПервойСправки);
			НомерПервойСправки = НомерПервойСправки + НовыйДок.СотрудникиОрганизации.Количество();
		КонецЕсли;
		НовыйДок = СоздатьРеестр2НДФЛ(СтруктураРеквизитов);
		ЗаполнитьЗначенияСвойств(НовыйДок,Выборка,ИмяКодаТерритории);
		НовыйДок.КодИФНС = ТекущийКодНО;
		НовыйДок.ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(СтруктураРеквизитов.Организация, СтруктураРеквизитов.Дата, СтруктураРеквизитов.ОрганизацияЭтоЮрЛицо, ТекущийКодНО);

		Пока Выборка.СледующийПоЗначениюПоля("Порядок") Цикл
			Пока Выборка.Следующий() Цикл
				
				Если НовыйДок.СотрудникиОрганизации.Количество() = 3000 Тогда
					ЗаполнитьДанныеСправок(НовыйДок, НомерПервойСправки);
					НомерПервойСправки = НомерПервойСправки + НовыйДок.СотрудникиОрганизации.Количество();
					НовыйДок = СоздатьРеестр2НДФЛ(СтруктураРеквизитов);
					ЗаполнитьЗначенияСвойств(НовыйДок,Выборка,ИмяКодаТерритории);
					НовыйДок.КодИФНС = ТекущийКодНО;
					НовыйДок.ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(СтруктураРеквизитов.Организация, СтруктураРеквизитов.Дата, СтруктураРеквизитов.ОрганизацияЭтоЮрЛицо, ТекущийКодНО);
				КонецЕсли; 
				
				СтрокаТабличнойЧасти = НовыйДок.СотрудникиОрганизации.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
				Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Фамилия + СтрокаТабличнойЧасти.Имя + СтрокаТабличнойЧасти.Отчество) Тогда
					Фамилия = ""; Имя = ""; Отчество = "";
					ОбщегоНазначенияЗК.ФамилияИнициалыФизЛица(Выборка.Порядок,Фамилия,Имя,Отчество);
					СтрокаТабличнойЧасти.Фамилия = Фамилия;
					СтрокаТабличнойЧасти.Имя = Имя;
					СтрокаТабличнойЧасти.Отчество = Отчество;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	Если НовыйДок <> Неопределено Тогда
		ЗаполнитьДанныеСправок(НовыйДок, НомерПервойСправки);
	КонецЕсли;
	
	ТекущаяСтрока = Документы2НДФЛ[БылоСтрок];
	
	Если МассивСообщений.Количество() > 0 Тогда
		ВывестиСообщенияОбОшибках(МассивСообщений);
	КонецЕсли; 
	
	Возврат ТекущаяСтрока
	
КонецФункции

Функция СоздатьРеестр2НДФЛ(СтруктураРеквизитов = Неопределено, ИзменятьПозициюСтроки = Ложь, ТабличноеПоле = Неопределено) Экспорт
	
	Если СтруктураРеквизитов = Неопределено Тогда
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
	КонецЕсли;
	
	Если НалоговыйПериод < 2015 Тогда
		ДокОбъект = Документы.СправкаПоНДФЛВНалоговыйОрган.СоздатьДокумент();
	Иначе
		ДокОбъект = Документы.СправкаПоНДФЛВНалоговыйОрганС2015.СоздатьДокумент();
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДокОбъект, СтруктураРеквизитов);
	ДокОбъект.УстановитьНовыйНомер();
	Если НалоговыйПериод < 2015 Тогда
		ДокОбъект.УстановитьСсылкуНового(Документы.СправкаПоНДФЛВНалоговыйОрган.ПолучитьСсылку());
	Иначе
		ДокОбъект.УстановитьСсылкуНового(Документы.СправкаПоНДФЛВНалоговыйОрганС2015.ПолучитьСсылку());
	КонецЕсли;
	ДокОбъект.ИмяФайла = СправкиПоНДФЛ.ИмяФайлаОбмена(СтруктураРеквизитов.Организация, СтруктураРеквизитов.Дата, СтруктураРеквизитов.ОрганизацияЭтоЮрЛицо);
	
	СтрокаПачки = Документы2НДФЛ.Добавить();
	СтрокаПачки.Справка = ДокОбъект.ПолучитьСсылкуНового();
	СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.Справка, ДокОбъект);
	Если ИзменятьПозициюСтроки Тогда
		ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
	КонецЕсли;
	
	Возврат ДокОбъект
	
КонецФункции

Функция ДоходыПоЦеннымБумагамВУчете(ИскатьДоходыПоЦеннымБумагам, Организация, НалоговыйПериод) Экспорт

	Если Не ИскатьДоходыПоЦеннымБумагам Тогда
		Возврат Ложь
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);
	Запрос.УстановитьПараметр("ДатаПодачиСведений", НачалоМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату()));
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НДФЛСведенияОДоходах.ФизЛицо
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|ГДЕ
	|	НДФЛСведенияОДоходах.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И НДФЛСведенияОДоходах.ОбособленноеПодразделение = &Организация
	|	И ГОД(НДФЛСведенияОДоходах.Период) = &ГодНП
	|	И НДФЛСведенияОДоходах.ПериодРегистрации < &ДатаПодачиСведений";
	
	Возврат Не Запрос.Выполнить().Пустой()
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////

СоответствиеСсылокИОбъектов = Новый Соответствие;
