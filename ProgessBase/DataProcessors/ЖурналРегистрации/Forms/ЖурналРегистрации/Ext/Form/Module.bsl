//////////////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтборЖурналаРегистрации = Новый Структура;
	
	Если Не ПустаяСтрока(Параметры.Пользователь) Тогда
		
		ИмяПользователя = Параметры.Пользователь;
		ОтборПоПользователю = Новый СписокЗначений;
		ПоПользователю = ОтборПоПользователю.Добавить(ИмяПользователя);
		Если ПустаяСтрока(ИмяПользователя) Тогда
			ПоПользователю.Представление = ПользователиСервер.ПолноеИмяНеУказанногоПользователя();
		Иначе
			ПоПользователю.Представление = ИмяПользователя;
		КонецЕсли;
		
		ОтборЖурналаРегистрации.Вставить("Пользователь", ОтборПоПользователю);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СобытиеЖурналаРегистрации) Тогда
		ОтборПоСобытию = Новый СписокЗначений;
		ОтборПоСобытию.Добавить(Параметры.СобытиеЖурналаРегистрации, Параметры.СобытиеЖурналаРегистрации);
		ОтборЖурналаРегистрации.Вставить("Событие", ОтборПоСобытию);
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаНачала") Тогда
		ОтборЖурналаРегистрации.Вставить("ДатаНачала", Параметры.ДатаНачала);
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаОкончания") Тогда
		ОтборЖурналаРегистрации.Вставить("ДатаОкончания", Параметры.ДатаОкончания);
	КонецЕсли;
	
	Если Параметры.Свойство("Данные") Тогда
		ОтборЖурналаРегистрации.Вставить("Данные", Параметры.Данные);
	КонецЕсли;
	
	КоличествоПоказываемыхСобытий = 200;
	
	ПрочитатьЖурнал();
	
	Десериализовать(ОтборЖурналаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущийСписок() 
	
	ПрочитатьЖурнал();
	
	// Позиционирование в конец списка
	Если Журнал.Количество() > 0 Тогда
		Элементы.Журнал.ТекущаяСтрока = Журнал[Журнал.Количество() - 1].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОтбор()
	
	ОтборЖурналаРегистрации = Новый ФиксированнаяСтруктура;
	ОбновитьТекущийСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДанныеДляПросмотра()
	
	ЖурналРегистрацииКлиент.ОткрытьДанныеДляПросмотра(Элементы.Журнал.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрТекущегоСобытияВОтдельномОкне()
	
	ЖурналРегистрацииКлиент.ПросмотрТекущегоСобытияВОтдельномОкне(Элементы.Журнал.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалДатДляПросмотра()
	
	Сериализовать(ОтборЖурналаРегистрации);
	
	Если ЖурналРегистрацииКлиент.УстановитьИнтервалДатДляПросмотра(
			ИнтервалДат, 
			ОтборЖурналаРегистрации
		) Тогда
		
		ОбновитьТекущийСписок();
		
	КонецЕсли;
	
	Десериализовать(ОтборЖурналаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор()
	
	ОтборФормы = Новый СписокЗначений;
	Для Каждого КлючИЗначение Из ОтборЖурналаРегистрации Цикл
		ОтборФормы.Добавить(КлючИЗначение.Значение, КлючИЗначение.Ключ);
	КонецЦикла;
	
	ОткрытьФорму(
		"Обработка.ЖурналРегистрации.Форма.ОтборЖурналаРегистрации", 
		Новый Структура("Отбор", ОтборФормы), 
		ЭтаФорма
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Сериализовать(ОтборЖурналаРегистрации);
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") И ВыбранноеЗначение.Свойство("Событие") Тогда
		
		Если ВыбранноеЗначение.Событие = "УстановленОтборЖурналаРегистрации" Тогда
			
			ОтборЖурналаРегистрации.Очистить();
			Для Каждого ЭлементСписка Из ВыбранноеЗначение.Отбор Цикл
				ОтборЖурналаРегистрации.Вставить(ЭлементСписка.Представление, ЭлементСписка.Значение);
			КонецЦикла;
			ОбновитьТекущийСписок();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Десериализовать(ОтборЖурналаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоЗначениюВТекущейКолонке()
	
	Сериализовать(ОтборЖурналаРегистрации);
	
	КолонкиИсключения = Новый Массив;
	КолонкиИсключения.Добавить("Дата");
	
	Если ЖурналРегистрацииКлиент.УстановитьОтборПоЗначениюВТекущейКолонке(
			Элементы.Журнал.ТекущиеДанные, 
			Элементы.Журнал.ТекущийЭлемент, 
			ОтборЖурналаРегистрации, 
			КолонкиИсключения
		) Тогда
		
		ОбновитьТекущийСписок();
		
	КонецЕсли;
	
	Десериализовать(ОтборЖурналаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПоказываемыхСобытийПриИзменении(Элемент)
	
	ОбновитьТекущийСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ЖурналВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Сериализовать(ОтборЖурналаРегистрации);
	
	ЖурналРегистрацииКлиент.СобытияВыбор(
		Элементы.Журнал.ТекущиеДанные, 
		Поле, 
		ИнтервалДат, 
		ОтборЖурналаРегистрации
	);
	
	Десериализовать(ОтборЖурналаРегистрации);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры

&НаСервере
Процедура ПрочитатьЖурнал()
	
	ЖурналРегистрации.ПрочитатьСобытияЖурналаРегистрации(Журнал, ОтборЖурналаРегистрации, КоличествоПоказываемыхСобытий, УникальныйИдентификатор, Обработки.ЖурналРегистрации);
	
	ЖурналРегистрации.СформироватьПредставлениеОтбора(ПредставлениеОтбора, ОтборЖурналаРегистрации);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Сериализовать(ТекущееЗначение)
	Если ТипЗнч(ТекущееЗначение) = Тип("ФиксированнаяСтруктура") Тогда
		ВременнаяПеременная = Новый Структура;
		Для Каждого КлючИзначение Из ТекущееЗначение Цикл
			ВременнаяПеременная.Вставить(КлючИзначение.Ключ, КлючИзначение.Значение);
		КонецЦикла;
		ТекущееЗначение = ВременнаяПеременная;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Десериализовать(ТекущееЗначение)
	Если ТипЗнч(ТекущееЗначение) = Тип("Структура") Тогда
		ТекущееЗначение = Новый ФиксированнаяСтруктура(ТекущееЗначение);
	КонецЕсли;
КонецПроцедуры
