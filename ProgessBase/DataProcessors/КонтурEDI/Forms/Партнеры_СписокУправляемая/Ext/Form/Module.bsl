&НаСервере
Перем ОбработкаОбъект; 

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции 

&НаКлиенте
Функция ПолучитьФормуОбработки(ИмяФормы, ПараметрыФормы = Неопределено , ВладелецФормы  = Неопределено, КлючУникальности = Неопределено, ЗакрыватьПризакрытииВладельца = Ложь)
	
	ПолучаемаяФорма=	ПолучитьФорму(ПутьКФормам+ИмяФормы
										, ПараметрыФормы
										,
										, КлючУникальности);
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		ПолучаемаяФорма.ВладелецФормы=	ВладелецФормы;
	КонецЕсли;
	
	Возврат ПолучаемаяФорма;
	
КонецФункции

&НаКлиенте
Процедура КоманднаяПанельТСОткрыть(Кнопка)
		
	ОткрытьФормуТорговойСети();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуТорговойСети()
	
	ТекСтрока = Элементы.СписокПартнеров.ТекущиеДанные;
	
	Если НЕ ТекСтрока=Неопределено Тогда
		Если ЗначениеЗаполнено(ТекСтрока.Ссылка) Тогда
			
			ПараметрыФормы=	Новый Структура;
			ПараметрыФормы.Вставить("СсылкаНаПартнера", ТекСтрока.Ссылка);
			
			Если Параметры.МодальностьЗапрещена Тогда   
				Выполнить("ОткрытьФормуОбъектаМодально(ПутьКФормам + ""Партнеры_ЭлементУправляемая"", ПараметрыФормы,""ОбработчикПослередактированияПартнера"")");//,ДополнительныеПараметры);
			Иначе
				ФормаЭлемента=ПолучитьФормуОбработки("Партнеры_ЭлементУправляемая",ПараметрыФормы);
				ФормаЭлемента.Параметры.СсылкаНаПартнера = ТекСтрока.Ссылка;
				ФормаЭлемента.ОткрытьМодально();
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.МодальностьЗапрещена=МодульОбъекта().МодальностьЗапрещена();
	ПутьКФормам = МодульОбъекта().Метаданные().ПолноеИмя() + ".Форма.";
	
	Если НЕ ОпределитьВидКомпанииСервер() = "Поставщик" Тогда
		Элементы.ФормаДобавитьТорговуюСеть.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено,РежимБлокирования = Неопределено)
	//отказ от модальности
	Если РежимБлокирования = Неопределено Тогда
		РежимБлокирования=	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика=	ЭтаФорма;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика=	Неопределено;
	Иначе	
		Выполнить("ОписаниеОбработчика=	Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика)");
	КонецЕсли;
	
	Выполнить("ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецОбработчика, , , ,  ОписаниеОбработчика, РежимБлокирования)");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПослередактированияПартнера(ПараметрыЗакрытияИнтерактивнойФормы=неопределено, ДополнительныеПараметры=неопределено) Экспорт
	Элементы.СписокПартнеров.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТорговуюСеть(Команда)
	
	ПараметрыФормы=	Новый Структура;
	ПараметрыФормы.Вставить("ОткрытаКакДобавлениеПартнера",Истина);
	
	Состояние("Запрашиваю данные по сетям...",30,,);
	
	Если ОпределитьВидКомпанииСервер() = "Поставщик" Тогда
		
		Если Параметры.МодальностьЗапрещена Тогда       
			Выполнить("ОткрытьФормуОбъектаМодально(ПутьКФормам + ""Сервис_СтартовыйПомощникУправляемая"", ПараметрыФормы,""ОбработчикПослередактированияПартнера"")");//,ДополнительныеПараметры);
		Иначе
			
			ФормаЭлемента=ПолучитьФормуОбработки("Сервис_СтартовыйПомощникУправляемая",ПараметрыФормы);
			//ФормаЭлемента.СсылкаНаПартнера = ТекСтрока.Ссылка;
			ФормаЭлемента.ОткрытьМодально();
			ОбработчикПослередактированияПартнера();
		КонецЕсли;
	Иначе
		
		Если Параметры.МодальностьЗапрещена Тогда       
			Выполнить("ОткрытьФормуОбъектаМодально(ПутьКФормам + ""Партнеры_ЭлементУправляемая"", ПараметрыФормы,""ОбработчикПослередактированияПартнера"")");//,ДополнительныеПараметры);
		Иначе
			
			ФормаЭлемента=ПолучитьФормуОбработки("Партнеры_ЭлементУправляемая",ПараметрыФормы);
			//ФормаЭлемента.СсылкаНаПартнера = ТекСтрока.Ссылка;
			ФормаЭлемента.ОткрытьМодально();
			ОбработчикПослередактированияПартнера()
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьВидКомпанииСервер()
	Возврат МодульОбъекта().ПолучитьВидКомпании();
КонецФункции

&НаКлиенте
Процедура ДобавитьТСВручную(Команда)
	ПараметрыФормы=	Новый Структура;
	Если Параметры.МодальностьЗапрещена Тогда  
		Выполнить("ОткрытьФормуОбъектаМодально(ПутьКФормам + ""Партнеры_ЭлементУправляемая"", ПараметрыФормы,""ОбработчикПослередактированияПартнера"")");
	Иначе
		ФормаЭлемента=ПолучитьФормуОбработки("Партнеры_ЭлементУправляемая",ПараметрыФормы);
		ФормаЭлемента.ОткрытьМодально();
		ОбработчикПослередактированияПартнера()
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПартнеровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	
	Если Параметры.ОткрытаКакВыбор Тогда
		ТекСтрока = Элементы.СписокПартнеров.ТекущиеДанные;
		Если ЗначениеЗаполнено(ТекСтрока.Ссылка) Тогда
			ЭтаФорма.Закрыть(ТекСтрока.Ссылка);
		КонецЕсли;
	иначе
		ОткрытьФормуТорговойСети();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПартнеровПередУдалением(Элемент, Отказ)
	отказ = истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокПартнеровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	отказ = истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокПартнеровПередНачаломИзменения(Элемент, Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УдалитьТорговуюСеть(Команда)
	
	ТекСтрока = Элементы.СписокПартнеров.ТекущиеДанные;
	
	
	
	Если НЕ ТекСтрока = Неопределено Тогда
		ТекстВопроса ="Партнер """+ТекСтрока.Наименование+""" будет удален. Продолжить?";
		КнопкиВопроса=новый СписокЗначений;
		КнопкиВопроса.Добавить("Да, удалить партнера");
		КнопкиВопроса.Добавить("Отмена");
		ДопПараметрДляПередачиВОбработчик=ТекСтрока;
		РезультатВопроса = Неопределено;
		
		Если Параметры.МодальностьЗапрещена Тогда
			Выполнить("ПоказатьВопрос(Новый ОписаниеОповещения(""ОбработчикПодтвержденияУдаленияПартнера"", ЭтаФорма, ДопПараметрДляПередачиВОбработчик), ТекстВопроса, КнопкиВопроса,,,""Контур.EDI"")");
		Иначе
			РезультатВопроса = Вопрос(ТекстВопроса, КнопкиВопроса,,,"Контур.EDI");
			ОбработчикПодтвержденияУдаленияПартнера(РезультатВопроса,ДопПараметрДляПередачиВОбработчик);
		КонецЕсли;	
		
	КонецЕсли;

	//Оповестить("КонтурEDI_ОбновитьСписокПартнеров");    //скорее всего не понадобится
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработчикПодтвержденияУдаленияПартнера(РезультатВопроса,ДопПараметрПереданныйВОбработчик=Неопределено) Экспорт

	Если РезультатВопроса="Да, удалить партнера" Тогда
		УдалитьТорговуюСетьСервер(ДопПараметрПереданныйВОбработчик.Ссылка);
		Элементы.СписокПартнеров.Обновить();

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УдалитьТорговуюСетьСервер(СсылкаНаПартнера)

	МодульОбъекта().УдалитьЭлементСправочника("Партнеры",СсылкаНаПартнера);
	
КонецПроцедуры // УдалитьТорговуюСетьСервер()


