&НаСервере
Перем ОбработкаОбъект; 

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции 

&НаКлиенте
Функция ПолучитьФормуОбработки(ИмяФормы, ПараметрыФормы = Неопределено , ВладелецФормы  = Неопределено, КлючУникальности = Неопределено, ЗакрыватьПризакрытииВладельца = Ложь)
	
	ПолучаемаяФорма=	ПолучитьФорму(ПутьКФормам+ИмяФормы
										, ПараметрыФормы
										,
										, КлючУникальности);
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		ПолучаемаяФорма.ВладелецФормы=	ВладелецФормы;
	КонецЕсли;
	
	Возврат ПолучаемаяФорма;
	
КонецФункции

&НаКлиенте
Процедура КоманднаяПанельСпискаКнопкаДобавить(Кнопка)
	
	ОткрытьФормуОрганизацииДляРедактированияИлиДобавления(Истина);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.МодальностьЗапрещена=МодульОбъекта().МодальностьЗапрещена();
	ПутьКФормам = МодульОбъекта().Метаданные().ПолноеИмя() + ".Форма.";
	
	ОбновитьСписокСправочника();
		
    УстановитьЗаголовокОсновнойКнопки();
КонецПроцедуры

// Устанавливает заголовок основной кнопки в "Открыть" или в "Выбрать"
&НаСервере
Процедура УстановитьЗаголовокОсновнойКнопки()

	Если Параметры.ФормаОткрытаКакВыбор Тогда
		
		Элементы.ФормаОткрыть.Заголовок = "Выбрать";
		
	КонецЕсли;
	
КонецПроцедуры // ()


&НаСервере
Процедура ОбновитьСписокСправочника()
	
	СправочникСписок.Очистить();
	
	НашиОрганизации = МодульОбъекта().ПолучитьСписокЭлементовСправочника("НашиОрганизации");
		
	Для каждого Стр ИЗ НашиОрганизации Цикл
			
		НоваяСтрока = СправочникСписок.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОсновноеДействие(Команда)
	
	Если Параметры.ФормаОткрытаКакВыбор Тогда
		Если Элементы.СправочникСписок.ТекущиеДанные<>Неопределено Тогда 
			ЭтаФорма.Закрыть(Элементы.СправочникСписок.ТекущиеДанные.Ссылка);
		Иначе
			Сообщить("Выберите организацию API");
		КонецЕсли;
	иначе
		ОткрытьФормуОрганизацииДляРедактированияИлиДобавления(ложь);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено,РежимБлокирования = Неопределено)
	//отказ от модальности
	Если РежимБлокирования = Неопределено Тогда
		РежимБлокирования=	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика=	ЭтаФорма;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика=	Неопределено;
	Иначе	
		Выполнить("ОписаниеОбработчика=	Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика)");
	КонецЕсли;
	
	Выполнить("ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецОбработчика, , , ,  ОписаниеОбработчика, РежимБлокирования)");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОрганизацииДляРедактированияИлиДобавления(ЭтоДобавление=Ложь)
	
	ТекСтрока = Элементы.СправочникСписок.ТекущиеДанные;
	
	Если (НЕ ТекСтрока=Неопределено) или ЭтоДобавление=Истина Тогда
		Если ТекСтрока<>Неопределено и ЗначениеЗаполнено(ТекСтрока.Ссылка) и не ЭтоДобавление Тогда
			СсылкаНаОрганизацию = ТекСтрока.Ссылка;
		иначе
			СсылкаНаОрганизацию = Неопределено;
		КонецЕсли;
		
		ПараметрыФормы=	Новый Структура;
		ПараметрыФормы.Вставить("Ссылка", СсылкаНаОрганизацию);
		ПараметрыФормы.Вставить("Новая", ЭтоДобавление);
		//ПараметрыФормы.Вставить("МодальностьЗапрещена", Параметры.МодальностьЗапрещена);
		
		Если Параметры.МодальностьЗапрещена Тогда       //УФ-ОФ переход   //на ОФ всегда разрешена модальность, оставлено для дальнейшего открытия УФ-УФ
			Выполнить("ОткрытьФормуОбъектаМодально(ПутьКФормам + ""НашиОрганизации_ЭлементУправляемая"", ПараметрыФормы,""ОбработчикПослеРедактированияОрганизации"")");//,ДополнительныеПараметры);
		Иначе
			ФормаЭлемента=ПолучитьФормуОбработки("НашиОрганизации_ЭлементУправляемая",ПараметрыФормы);
			ФормаЭлемента.Ссылка = СсылкаНаОрганизацию;
			ФормаЭлемента.ОткрытьМодально();
			ОбновитьСписокСправочника();	
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПослеРедактированияОрганизации(ПараметрыЗакрытияИнтерактивнойФормы, ДополнительныеПараметры) Экспорт
	
	//обновить список организаций
	ОбновитьСписокСправочника();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьССервера(Команда)
	ОбновитьССервераСервер();
КонецПроцедуры

&НаСервере
Процедура ОбновитьССервераСервер()
	
	МодульОбъекта().ПротоколОбмена_КонтурEDI = МодульОбъекта().ПолучитьКонстантуEDI("ПротоколОбмена_КонтурEDI");
	
	Если МодульОбъекта().ПротоколОбмена_КонтурEDI <> "API" Тогда
//		ВывестиПредупреждение_КонтурEDI("Только для API");
		//убрать видимость кнопки
		Возврат;
	КонецЕсли;
	
	МодульОбъекта().ОбновитьСписокОрганизацийПоУчетнымЗаписям();
	ОбновитьСписокСправочника();
	
КонецПроцедуры	

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыполнитьОсновноеДействие("");

КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	ОткрытьФормуОрганизацииДляРедактированияИлиДобавления(ложь);	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ=Истина;
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокПередУдалением(Элемент, Отказ)
	Отказ=Истина;
КонецПроцедуры
