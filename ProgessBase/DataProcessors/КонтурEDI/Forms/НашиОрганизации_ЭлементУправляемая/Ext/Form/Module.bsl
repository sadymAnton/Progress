&НаСервере
Перем ОбработкаОбъект; 

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции 


&НаСервере
Процедура УстановитьТипПоля1С(ИмяНаФорме,Тип1С)
	
	ПолеФормы	= Элементы[ИмяНаФорме];
	ТипПоля		= МодульОбъекта().ПолучитьТипЗначенияОбъекта(Тип1С);
			
	Если ТипПоля = Неопределено Тогда
		
		Сообщить("Не задан тип объекта 1С для поля с типом "+Тип1С);
		
	Иначе	
		
		Элементы[ИмяНаФорме].ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		
		Если НЕ ЗначениеЗаполнено(ЭтаФорма[ИмяНаФорме]) Тогда
			
			ЭтаФорма[ИмяНаФорме] = МодульОбъекта().ПолучитьПустуюСсылкуОбъекта(Тип1С);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВыполнитьНажатие(Команда)
	
	УспешноеСохранение = СохранитьНашуОрганизациюСервер();

	Если УспешноеСохранение=Истина Тогда 
		Оповестить("КонтурEDI_ОбновитьСписокНашихОрганизаций");//вообще нам нет смысла что-то обновлять
		
		Соединение = Неопределено;
		
		ЭтаФорма.Закрыть(Истина);
	Иначе
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СохранитьНашуОрганизациюСервер()
	
	Если НЕ ПроверитьЗначенияФормы() Тогда
		Возврат ложь;
	КонецЕсли;
	
	СтруктураПолей = СоздатьСтруктуруСправочникаДляСохранения();  

	МодульОбъекта().СохранитьЭлементСправочника("НашиОрганизации", Ссылка, СтруктураПолей);
	
    Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПроверитьЗначенияФормы()
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция  СоздатьСтруктуруСправочникаДляСохранения()
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("PartyId", 									partyId);
	СтруктураПолей.Вставить("Наименование", 							Наименование);
	СтруктураПолей.Вставить("GLN", 										GLN);
	СтруктураПолей.Вставить("УчетнаяЗапись",							УчетнаяЗапись);
	СтруктураПолей.Вставить("ОсновнойЯщик",								ОсновнойЯщик);
	СтруктураПолей.Вставить("Неактивная",								Неактивная);
	Возврат СтруктураПолей;
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ЭтаОбработка.ПриОткрытииФормы(ЭтаФорма);       такое на УФ не вызываем!
	Параметры.МодальностьЗапрещена=МодульОбъекта().МодальностьЗапрещена();
	ПутьКФормам = МодульОбъекта().Метаданные().ПолноеИмя() + ".Форма.";
	
	Ссылка=Параметры.Ссылка;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		СтруктураПолей = МодульОбъекта().ПолучитьЭлементСправочника("НашиОрганизации", Ссылка);
		
		Если НЕ СтруктураПолей = Неопределено Тогда
		
			partyId 		= СтруктураПолей.partyId;
			Наименование 	= СтруктураПолей.Наименование;
			GLN 			= СтруктураПолей.GLN;
			УчетнаяЗапись 	= СтруктураПолей.УчетнаяЗапись;
			ОсновнойЯщик 	= СтруктураПолей.ОсновнойЯщик;
			Неактивная		= СтруктураПолей.Неактивная;
//			УчетнаяЗаписьПредставление = ПолучитьПредставлениеЭлементаСправочника(УчетнаяЗапись);
			
			//показать транспортные ящики
			ОбновитьСписокТранспортныхЯщиков();
			
		КонецЕсли;
		
	КонецЕсли;
	
//	УстановитьТипПоля1С("Организация",	"ЮрФизЛицоСвое");
	//// + Внешнее хранилище. kns 2014.09.10
	//Если НЕ ЭтаОбработка.КэшСеансаКонтурEDI.ВнешнееХранилище Тогда
	//// - Внешнее хранилище. kns 2014.09.10		
	//	УстановитьТипПоля1С("Подразделение","ПодразделениеСвое");
	//КонецЕсли;
	//
	//Оповестить("КонтурEDI_АктивизироватьФормуОшибок","Открытие",ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОсновнойЯщик(Команда)
	Если Элементы.ТранспортныеЯщики.ТекущиеДанные<>Неопределено Тогда
		ОсновнойЯщик = Элементы.ТранспортныеЯщики.ТекущиеДанные.Ссылка;
		ОбновитьСписокТранспортныхЯщиков();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокТранспортныхЯщиков()
	
	СписокЯщиков = МодульОбъекта().ПолучитьСписокЭлементовСправочника("ТранспортныеЯщики",Ссылка);
	ТранспортныеЯщики.Очистить();
	Для Каждого СтрокаЯщиков Из СписокЯщиков Цикл
		НовСтрока = ТранспортныеЯщики.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока,СтрокаЯщиков);
		НовСтрока.Основной = (НовСтрока.Ссылка = ОсновнойЯщик);
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ТранспортныеЯщикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ОткрытьФормуТранспортногоЯщика();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено,РежимБлокирования = Неопределено)
	//отказ от модальности
	Если РежимБлокирования = Неопределено Тогда
		РежимБлокирования=	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика=	ЭтаФорма;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика=	Неопределено;
	Иначе	
		Выполнить("ОписаниеОбработчика=	Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика)");
	КонецЕсли;
	
	Выполнить("ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецОбработчика, , , ,  ОписаниеОбработчика, РежимБлокирования)");
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФормуОбработки(ИмяФормы, ПараметрыФормы = Неопределено , ВладелецФормы  = Неопределено, КлючУникальности = Неопределено, ЗакрыватьПризакрытииВладельца = Ложь)
	
	ПолучаемаяФорма=	ПолучитьФорму(ПутьКФормам+ИмяФормы
										, ПараметрыФормы
										,
										, КлючУникальности);
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		ПолучаемаяФорма.ВладелецФормы=	ВладелецФормы;
	КонецЕсли;
	
	Возврат ПолучаемаяФорма;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуТранспортногоЯщика()
	
	ТекСтрока = Элементы.ТранспортныеЯщики.ТекущиеДанные;
	
	Если ТекСтрока<>Неопределено Тогда
		СсылкаНаЯщик = ТекСтрока.Ссылка;
		
		ПараметрыФормы=	Новый Структура;
		ПараметрыФормы.Вставить("Ссылка", СсылкаНаЯщик);
		ПараметрыФормы.Вставить("Новая", Ложь);
		ПараметрыФормы.Вставить("МодальностьЗапрещена", Параметры.МодальностьЗапрещена);
		
		Если Параметры.МодальностьЗапрещена Тогда       //УФ-ОФ переход   //на ОФ всегда разрешена модальность, оставлено для дальнейшего открытия УФ-УФ
			Выполнить("ОткрытьФормуОбъектаМодально(ПутьКФормам + ""ТранспортныеЯщики_ЭлементУправляемая"", ПараметрыФормы,""ОбработчикПослеРедактированияТранспортногоЯщика"")");//,ДополнительныеПараметры);
		Иначе
			ФормаЭлемента=ПолучитьФормуОбработки("ТранспортныеЯщики_ЭлементУправляемая",ПараметрыФормы);
			ФормаЭлемента.Ссылка = СсылкаНаЯщик;
			ФормаЭлемента.ОткрытьМодально();
			ОбновитьСписокТранспортныхЯщиков();	
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПослеРедактированияТранспортногоЯщика(ПараметрыЗакрытияИнтерактивнойФормы, ДополнительныеПараметры) Экспорт
	
	//обновить список организаций
	ОбновитьСписокТранспортныхЯщиков();	
	
КонецПроцедуры

