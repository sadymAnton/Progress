
&НаСервере
Перем ОбработкаОбъект;

&НаСервере
Функция МодульОбъекта()

	Если ОбработкаОбъект = Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// по умолчанию предложим архивировать сообщения старше года
	АрхивироватьДоДаты = ТекущаяДата() - 60*60*24*365; 
	АрхивироватьДоДатыПриИзмененииСервер(АрхивироватьДоДаты);
	МодальностьЗапрещена = Параметры.МодальностьЗапрещена;
	УстановитьВидимостьДоступностьЭлементов(); 	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаАрхивировать(Команда)
	
	Если КоличествоСообщенийДляАрхивирования = 0 Тогда
		ТекстПредупреждения = "За выбранный период не найдено сообщений для архивирования.";
		
		Если МодальностьЗапрещена Тогда 
			Выполнить("ПоказатьПредупреждение(, ТекстПредупреждения, , ""Контур.EDI"")");
		Иначе
			Предупреждение(ТекстПредупреждения, , "Контур.EDI");
		КонецЕсли;
		Возврат;
	КонецЕсли;

	ТекПароль = "";
	ТекстПросьбы = "Введите пароль от учетной записи Контур.EDI";
	ДопПараметрДляПередачиВОбработчик = Неопределено;
	
	Если МодальностьЗапрещена Тогда 
		Выполнить("ПоказатьВводСтроки(Новый ОписаниеОповещения(""ОбработчикВводаПароля"", ЭтаФорма, ДопПараметрДляПередачиВОбработчик), ТекПароль, ТекстПросьбы, , ложь)"); 
	Иначе
		Если ВвестиСтроку(ТекПароль, ТекстПросьбы) Тогда
			ОбработчикВводаПароля(ТекПароль);	
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВводаПароля(ТекПароль, ДопПараметрОбработчика = Неопределено) Экспорт
	
	ТекущийПарольПользователя = ПолучитьПарольВызовСервера();
	
	ВерныйПароль = Ложь;
	Если СокрЛП(ТекПароль) = СокрЛП(ТекущийПарольПользователя) 
		ИЛИ СокрЛП(ТекПароль) = "******" Тогда
		ВерныйПароль = Истина;
	КонецЕсли;
	Если НЕ ВерныйПароль И ТекПароль = Неопределено Тогда
		Возврат;  //отказ от ввода
	ИначеЕсли НЕ ВерныйПароль Тогда
		ТекстПредупреждения = "Указан неверный пароль";
		ДопПараметрДляПередачиВОбработчик = Неопределено;
		Если МодальностьЗапрещена Тогда 
			Выполнить("ПоказатьПредупреждение(,ТекстПредупреждения,,""Контур.EDI"")");
		Иначе
			Предупреждение(ТекстПредупреждения,,"Контур.EDI");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("АрхивироватьДоДаты", АрхивироватьДоДаты);
	СтруктураВозврата.Вставить("КоличествоСообщенийДляАрхивирования", КоличествоСообщенийДляАрхивирования);
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры // ОбработчикВводаПароля()

&НаСервере
Функция ПолучитьПарольВызовСервера()

	Возврат МодульОбъекта().ПараметрыПользователяEDI.Пароль;	

КонецФункции // ПолучитьПарольВызовСервера()

&НаКлиенте
Процедура АрхивироватьДоДатыПриИзменении(Элемент)
	
	Состояние("Расчет количества сообщений для архивирования");
	АрхивироватьДоДатыПриИзмененииСервер(АрхивироватьДоДаты);
	
КонецПроцедуры

&НаСервере
Процедура АрхивироватьДоДатыПриИзмененииСервер(АрхивироватьДоДаты)

	КоличествоСообщенийДляАрхивирования = МодульОбъекта().ПосчитатьКоличествоСообщенийДляАрхивирования(АрхивироватьДоДаты);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()

	Если МодульОбъекта().ПараметрыПользователяEDI.РольПользователяEDI <> "ПолныеПрава" Тогда
		
		Элементы.НадписьПредупреждениеПраваПользователяEDI.Видимость = Истина;
		Элементы.КнопкаАрхивировать.Доступность = Ложь;
		
	КонецЕсли;

КонецПроцедуры 

