&НаСервере
Перем ОбработкаОбъект;

&НаСервере
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Процедура УдалитьСобытие(Команда)
	
	ТекущаяСтрока = Элементы.События.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущаяСтрокаИндекс = События.Индекс(Элементы.События.ТекущиеДанные);
	
	//удаляем
	События.Удалить(Элементы.События.ТекущиеДанные);
	
	//позиционируем: остаемся в этой же строке или поднимаемся на строку выше
	Количество = События.Количество();
	Если Не Количество = 0 Тогда
		Если Количество > ТекущаяСтрокаИндекс Тогда
			ТекСтрока=События.Получить(ТекущаяСтрокаИндекс);
			Элементы.События.ТекущаяСтрока = ТекСтрока.ПолучитьИдентификатор();
		Иначе
			ПредСтрока=События.Получить(ТекущаяСтрокаИндекс-1);
			Элементы.События.ТекущаяСтрока = ПредСтрока.ПолучитьИдентификатор();
		КонецЕсли;
	Иначе
		Код.УстановитьТекст("");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСобытие(Команда)
	
	//получаем события и просим пользователя выбрать
	СписокВыбора = ПолучитьСписокЗначенийОписаниеСобытийПодключаемогоМодуляРасширенийВызовСервера();
	
	Если Параметры.МодальностьЗапрещена Тогда 
		Выполнить("ПоказатьВыборИзСписка(Новый ОписаниеОповещения(""ОбработчикВыбораСобытияРасширения"",ЭтаФорма), СписокВыбора)"); 
	Иначе
		ВыбранноеЗначение=ВыбратьИзСписка(СписокВыбора,Элементы.ГруппаСобытий);
		ОбработчикВыбораСобытияРасширения(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораСобытияРасширения(ВыбранноеСобытие,ДопПараметр=Неопределено) Экспорт
	
	РезультатДобавления = Новый Структура("Успешно,ПовторноеДобавление,ОписаниеОшибки,ИмяСобытия",Ложь,Ложь,"","");

	//////////////////////////////////
	Если ВыбранноеСобытие = Неопределено Тогда
		РезультатДобавления.Успешно = Ложь;
		Возврат;
	КонецЕсли;
	
	//проверяем на присутствие
	ДобавленноеРанееСобытиеМассив = События.НайтиСтроки( Новый Структура("Имя",ВыбранноеСобытие.Значение));
	Если Не ДобавленноеРанееСобытиеМассив.Количество() = 0 Тогда
		РезультатДобавления.Успешно = Ложь;
		РезультатДобавления.ПовторноеДобавление = Истина;
		РезультатДобавления.ИмяСобытия = ВыбранноеСобытие.Значение;
		//на него и прыгнем
		НовоеСобытиеМассив = События.НайтиСтроки(Новый Структура("Имя",РезультатДобавления.ИмяСобытия));
		Если НовоеСобытиеМассив.Количество()>0 Тогда 
			НовоеСобытие=НовоеСобытиеМассив[0];
			Если Не НовоеСобытие = Неопределено Тогда
				Элементы.События.ТекущаяСтрока = НовоеСобытие.ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	//добавляем в список   - поход на сервер неизбежен!!!

	НовоеСобытие = События.Добавить();
	НовоеСобытие.Имя = ВыбранноеСобытие.Значение;
	НовоеСобытие.Код = СформироватьКомментарийСобытия(ВыбранноеСобытие.Значение);
	
	РезультатДобавления.Успешно = Истина;
	РезультатДобавления.ИмяСобытия = НовоеСобытие.Имя;
	
	//обработка результата добавления
	
	НовоеСобытиеМассив = События.НайтиСтроки(Новый Структура("Имя",РезультатДобавления.ИмяСобытия));
	Если НовоеСобытиеМассив.Количество()>0 Тогда 
		НовоеСобытие=НовоеСобытиеМассив[0];
		Если Не НовоеСобытие = Неопределено Тогда
			Элементы.События.ТекущаяСтрока = НовоеСобытие.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработчикВыбораСобытияРасширения()

&НаСервере
Функция СформироватьКомментарийСобытия(ИмяСобытия)
	
	ТаблицаСобытий = МодульОбъекта().ПолучитьОписаниеСобытийПодключаемогоМодуляРасширений();
	СтрокаОписания = ТаблицаСобытий.Найти(ИмяСобытия,"Имя");
	
	_ОписаниеСобытия = СтрокаОписания.Описание;
	_ОписаниеСобытия = СтрЗаменить(_ОписаниеСобытия,Символы.ПС,Символы.ПС + "// " + Символы.Таб);
	
	Комментарий = "";
	Комментарий = Комментарий + "// " + "Описание:" + Символы.ПС;
	Комментарий = Комментарий + "// " + Символы.Таб + _ОписаниеСобытия + "." + Символы.ПС;
	Комментарий = Комментарий + "// " + Символы.ПС;
	Комментарий = Комментарий + "// " + "Параметры:" + Символы.ПС;
	
	Для Каждого Параметр Из СтрокаОписания.Параметры Цикл
		
		_ОписаниеПараметра = Параметр.Значение.Описание;
		_ОписаниеПараметра = СтрЗаменить(_ОписаниеПараметра,Символы.ПС,Символы.ПС + "// " + Символы.Таб);
		
		Комментарий = Комментарий + "// " + Символы.Таб + Параметр.Значение.Представление + " - " + Параметр.Значение.Тип + " - " + _ОписаниеПараметра + "." + Символы.ПС;
		
	КонецЦикла;
	
	Если СтрокаОписания.СтандартнаяОбработкаEDI = Истина Тогда
		Комментарий = Комментарий + "// " + Символы.Таб + "СтандартнаяОбработкаEDI" + + " - " + "Булево" + " - " + "флаг стандартной обработки" + "." + Символы.ПС;
	КонецЕсли;
	
	Если СтрокаОписания.ВозвращаемоеЗначение.Наличие = Истина Тогда
		
		_ОписаниеВозврата = СтрокаОписания.ВозвращаемоеЗначение.Описание;
		_ОписаниеВозврата = СтрЗаменить(_ОписаниеВозврата,Символы.ПС,Символы.ПС + "// " + Символы.Таб);
		
		Комментарий = Комментарий + "// " + Символы.ПС;
		Комментарий = Комментарий + "// " + "Возвращаемое значение:" + Символы.ПС;
		Комментарий = Комментарий + "// " + Символы.Таб + СтрокаОписания.ВозвращаемоеЗначение.Тип + Символы.ПС;
		Комментарий = Комментарий + "// " + Символы.Таб + _ОписаниеВозврата + Символы.ПС;
		
	КонецЕсли;
	
	Возврат Комментарий;
	
КонецФункции

&НаСервере
Функция ПолучитьСписокЗначенийОписаниеСобытийПодключаемогоМодуляРасширенийВызовСервера()

	ТаблицаСобытий = МодульОбъекта().ПолучитьОписаниеСобытийПодключаемогоМодуляРасширений();
	//Вернем СписокЗначений
	СписокСобытий = Новый СписокЗначений;
	
	СписокСобытий.ЗагрузитьЗначения(ТаблицаСобытий.ВыгрузитьКолонку("Имя")); 
	
	Возврат СписокСобытий; 
	
КонецФункции // ПолучитьОписаниеСобытийПодключаемогоМодуляРасширенийВызовСервера()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РасширениеСсылка  = Параметры.РасширениеСсылка;
	
	ЗаполнитьДанныеРасширения();
	
	Если Не События.Количество() = 0 Тогда
		ТекущееСобытие = События[0].Имя;
		Код.УстановитьТекст(События[0].Код);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	
	Если События.Количество() = 0 Тогда
		Элементы.СобытияУдалитьСобытие.Доступность = Ложь;
		Элементы.СобытияОткрытьИсходныйКод.Доступность = Ложь;
	Иначе
		Элементы.СобытияУдалитьСобытие.Доступность = Истина;
		Элементы.СобытияОткрытьИсходныйКод.Доступность = Истина;
	КонецЕсли;
		
	//доступность наименование
	Если Не РасширениеСсылка = Неопределено Тогда
		Элементы.Наименование.Доступность = Ложь;
	КонецЕсли;
	
	//доступность кнопки листинга исходного кода
	ТекущаяСтрока = Элементы.События.ТекущиеДанные;
	
	Если Не ТекущаяСтрока = Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущаяСтрока.ИсходныйКод) Тогда
			Элементы.СобытияОткрытьИсходныйКод.Доступность = Истина;	
		Иначе
			Элементы.СобытияОткрытьИсходныйКод.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеРасширения()
	
	Если Не РасширениеСсылка = Неопределено Тогда
        	
		ЭлементРасширение = МодульОбъекта().ПолучитьЭлементСправочника("Расширения",РасширениеСсылка);
		Наименование 	  = ЭлементРасширение.Наименование;
		
		ЗаполнитьСобытия();
		ЗаполнитьОписание();
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСобытия()
	
	ЭлементРасширение = МодульОбъекта().ПолучитьЭлементСправочника("Расширения",РасширениеСсылка);
	Реквизиты 		  = ЭлементРасширение.ДополнительныеРеквизиты;
	
	//добавляем исполняемый код событий
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ИмяРеквизита","ИсполняемыйКод");
	РеквизитыСобытий = Реквизиты.НайтиСтроки(ПараметрыОтбора);
	Для Каждого Реквизит Из РеквизитыСобытий Цикл
		НовоеСобытие = События.Добавить();
		НовоеСобытие.Имя = Реквизит.Значение;
		НовоеСобытие.Код = Реквизит.ЗначениеСтрока;		
	КонецЦикла;
	
	//добавляем исходный исполняемый код событий
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ИмяРеквизита","ИсходныйИсполняемыйКод");
	РеквизитыИсходныхСобытий = Реквизиты.НайтиСтроки(ПараметрыОтбора);
	Для Каждого Реквизит Из РеквизитыИсходныхСобытий Цикл
		ИмяИсходногоСобытия = Реквизит.Значение;
		
		СтрокиСобытия = События.НайтиСтроки(Новый Структура("Имя",ИмяИсходногоСобытия));
		//СтрокаСобытие = События.Найти(ИмяИсходногоСобытия,"Имя");
		Если СтрокиСобытия.Количество() = 1 Тогда
			СтрокиСобытия[0].ИсходныйКод = Реквизит.ЗначениеСтрока;		
		КонецЕсли;
	КонецЦикла;	
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписание()
	
	ЭлементРасширение = МодульОбъекта().ПолучитьЭлементСправочника("Расширения",РасширениеСсылка);
				
	Реквизиты = ЭлементРасширение.ДополнительныеРеквизиты;
	
	РеквизитОписаниеПолное = Реквизиты.Найти("ОписаниеПолное","ИмяРеквизита");
	Если Не РеквизитОписаниеПолное = Неопределено Тогда
		ТекстОписания = РеквизитОписаниеПолное.ЗначениеСтрока;
	КонецЕсли;
	
	ТекстОписания = СтрЗаменить(ТекстОписания,"¶","");
	ТекстОписания = СокрЛП(ТекстОписания);
	
	ОписаниеПолное = ТекстОписания;	
	
КонецПроцедуры

&НаКлиенте
Процедура СобытияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СобытияПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СобытияПриАктивизацииЯчейки(Элемент)
	
	СохранитьКодТекущегоСобытия();
	
	//показываем код активизированного события
	ТекущаяСтрока = Элементы.События.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущееСобытие = ТекущаяСтрока.Имя;
	
	Код.УстановитьТекст(ТекущаяСтрока.Код);
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКодТекущегоСобытия()
	
	//пытаемся сохранить код текущего события
	СтрокиСобытия = События.НайтиСтроки(Новый Структура("Имя",ТекущееСобытие));
	Если СтрокиСобытия.Количество()=1 Тогда
		СтрокиСобытия[0].Код = Код.ПолучитьТекст();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьРасширение(Команда)
	СохранитьКодТекущегоСобытия();
	
	Успешно = СохранитьРасширениеВызовСервера();
	Если Успешно Тогда 
		ЭтаФорма.Закрыть(ИдентификаторНовогоРасширения);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СохранитьРасширениеВызовСервера()

	РезультатСохранения = МодульОбъекта().СохранитьРасширение(ЭтаФорма,Истина); //Истина Управляемая
	
	Если Не РезультатСохранения.Успешно Тогда
		Если Не РезультатСохранения.ТаблицаОшибокПроверки.Количество() = 0 Тогда 		//не прошли проверку
			Для Каждого СтрокаОшибки Из РезультатСохранения.ТаблицаОшибокПроверки Цикл
				Сообщить(СтрокаОшибки.ОписаниеОшибки);
			КонецЦикла;
		Иначе	                                                                 		//не удалось записать в базу
			Сообщить(РезультатСохранения.ОписаниеОшибки);
		КонецЕсли;
		Возврат Ложь;
	Иначе                                                                        		//запись прошла успешно
		ИдентификаторНовогоРасширения = РезультатСохранения.Идентификатор;
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // СохранитьРасширениеВызовСервера()

&НаСервере
Функция Удалить_СохранитьРасширение()
	                                                                   
	РезультатСохранения = МодульОбъекта().СохранитьРасширение(ЭтаФорма,Истина); //Истина Управляемая
	
	Возврат РезультатСохранения;

	
	//вынесено в МО СохранитьРасширение
	
	//РезультатСохранения = Новый Структура("Успешно,ОписаниеОшибкиСохранения,ТаблицаОшибокПроверки,Идентификатор",Ложь,"","");
	//
	//РезультатПроверки = МодульОбъекта().ПроверитьКорректностьДанныхРасширения(ЭтаФорма,Истина);
	//Если Не РезультатПроверки.Успешно Тогда
	//	РезультатСохранения.ТаблицаОшибокПроверки = РезультатПроверки.ТаблицаОшибок;
	//	Возврат РезультатСохранения;
	//КонецЕсли;
	//
	//ТаблицаДанныеРасширения = МодульОбъекта().ИнициализироватьТаблицуДополнительныхРеквизитовРасширения();
	//
	//ИдентификаторРасширения = Неопределено;
	//
	//Если РасширениеСсылка = Неопределено Тогда
	//	
	//	//добавляем данные нового события
	//	Идентификатор = ТаблицаДанныеРасширения.Добавить();
	//	Идентификатор.ИмяРеквизита 				= "Идентификатор";
	//	Идентификатор.Значение 					= Формат(ТекущаяДата(),"ДФ=ггггММддЧЧммсс");;
	//	НаименованиеРасширения = ТаблицаДанныеРасширения.Добавить();
	//	НаименованиеРасширения.ИмяРеквизита 	= "Наименование";
	//	НаименованиеРасширения.Значение 		= Наименование;
	//	ВерсияРасширения = ТаблицаДанныеРасширения.Добавить();
	//	ВерсияРасширения.ИмяРеквизита 			= "ВерсияРасширения";
	//	ВерсияРасширения.Значение 				= "0.0";
	//	РекомендуемаяВерсияМодуля = ТаблицаДанныеРасширения.Добавить();
	//	РекомендуемаяВерсияМодуля.ИмяРеквизита 	= "РекомендуемаяВерсияМодуля";
	//	РекомендуемаяВерсияМодуля.Значение 		= "0.00.000.00";
	//	Обязательный = ТаблицаДанныеРасширения.Добавить();
	//	Обязательный.ИмяРеквизита 				= "Обязательный";
	//	Обязательный.Значение 					= Ложь;
	//	Интерфейс = ТаблицаДанныеРасширения.Добавить();
	//	Интерфейс.ИмяРеквизита 					= "Интерфейс";
	//	Интерфейс.Значение 						= Ложь;
	//	ПорядокВыполнения = ТаблицаДанныеРасширения.Добавить();
	//	ПорядокВыполнения.ИмяРеквизита 			= "ПорядокВыполнения";
	//	ПорядокВыполнения.Значение 				= МодульОбъекта().ПолучитьСледующийПорядокВыполненияРасширения();
	//	Использование = ТаблицаДанныеРасширения.Добавить();
	//	Использование.ИмяРеквизита 				= "Использование";
	//	Использование.Значение 					= Истина;
	//	
	//	ИдентификаторРасширения	= Идентификатор.Значение;
	//	
	//КонецЕсли;
	//
	////добавляем даные обработчиков событий
	//Для Каждого Событие Из События Цикл
	//	НовыйРеквизит = ТаблицаДанныеРасширения.Добавить();
	//	НовыйРеквизит.ИмяРеквизита 		= "ИсполняемыйКод";
	//	НовыйРеквизит.Значение 			= Событие.Имя;
	//	НовыйРеквизит.ЗначениеСтрока 	= Событие.Код;
	//КонецЦикла;
	//
	////добавляем данные описания
	//НовыйРеквизит = ТаблицаДанныеРасширения.Добавить();
	//НовыйРеквизит.ИмяРеквизита 		= "ОписаниеПолное";
	//НовыйРеквизит.ЗначениеСтрока 	= ОписаниеПолное;
	//
	//МодульОбъекта().СохранитьЭлементСправочника("Расширения",РасширениеСсылка,ТаблицаДанныеРасширения);
	//Если РасширениеСсылка = Неопределено Тогда
	//	РезультатСохранения.ОписаниеОшибкиСохранения = "Не удалось записать расширение в базу данных.";
	//	Возврат РезультатСохранения;
	//КонецЕсли;
	//	
	//РезультатСохранения.Успешно 		= Истина;
	//РезультатСохранения.Идентификатор	= ИдентификаторРасширения;
	
	 
КонецФункции

&НаКлиенте
Процедура ОткрытьИсходныйКод(Команда)
	
	ОткрытьЛистингИсходногоКода();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЛистингИсходногоКода()
	
	ТекущаяСтрокаДанные = Элементы.События.ТекущиеДанные;
	Если ТекущаяСтрокаДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Очистить();
	ТекстовыйДокумент.УстановитьТекст(ТекущаяСтрокаДанные.ИсходныйКод);
	ТекстовыйДокумент.ТолькоПросмотр = Истина;
	ТекстовыйДокумент.Показать("Исходный код обработчика события """ + ТекущаяСтрокаДанные.Имя + """");
	
КонецПроцедуры

&НаКлиенте
Процедура ОРасширенииНажатие(Элемент)
	
	Если РасширениеСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ПоказатьСвойства(ТабДокумент);
	
	ТабДокумент.ОтображатьСетку=Ложь;
	ТабДокумент.ТолькоПросмотр=Истина;
	ОбластьЗаголовка=ТабДокумент.Область("R2");
	ОбластьЗаголовка.Шрифт = Новый Шрифт(,14,);
	
	ТабДокумент.Показать();
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьСвойства(ТабДокумент)
	
	МодульОбъекта().ПоказатьСвойстваРасширения(ТабДокумент,РасширениеСсылка);

КонецПроцедуры
