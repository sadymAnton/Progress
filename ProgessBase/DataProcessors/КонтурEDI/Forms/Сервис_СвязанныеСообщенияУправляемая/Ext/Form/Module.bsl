&НаСервере
Перем ОбработкаОбъект;

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		
		Если Параметры.КэшироватьМодульОбъекта Тогда
			Если Параметры.АдресХранилища<>"" Тогда
				_Структура = ПолучитьИзВременногоХранилища(Параметры.АдресХранилища);
				Если ТипЗнч(_Структура) = Тип("Структура") Тогда
					_Структура.Свойство("ОбработкаОбъект",ОбработкаОбъект);
				КонецЕсли;
			КонецЕсли;
			
			Если ОбработкаОбъект=Неопределено Тогда
				ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
				ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
				Параметры.АдресХранилища = ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект",ОбработкаОбъект),УникальныйИдентификатор);
				ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
			КонецЕсли;
		Иначе
			ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
			ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
			ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено, РежимБлокирования = Неопределено)
	//отказ от модальности
	Если РежимБлокирования = Неопределено Тогда
		РежимБлокирования =	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика = ЭтаФорма;
	КонецЕсли;
	
	Если ВладелецФормы = Неопределено Тогда
		ВладелецФормы =	ЭтаФорма.ВладелецФормы;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика = Неопределено;
	Иначе	
		Выполнить("ОписаниеОбработчика = Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика)");
	КонецЕсли;
	
	Выполнить("ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецФормы, , , , ОписаниеОбработчика, РежимБлокирования)");
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФормуОбработки(ИмяФормы, ПараметрыФормы = Неопределено , ВладелецФормы  = Неопределено, КлючУникальности = Неопределено, ЗакрыватьПризакрытииВладельца = Ложь)
	
	Если ВладелецФормы = Неопределено Тогда
		ВладелецФормы =	ЭтаФорма.ВладелецФормы;
	КонецЕсли;
	
	ПолучаемаяФорма =	ПолучитьФорму(ПутьКФормам + ИмяФормы
										, ПараметрыФормы
										,
										, КлючУникальности);
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		ПолучаемаяФорма.ВладелецФормы =	ВладелецФормы;
	КонецЕсли;
	
	Возврат ПолучаемаяФорма;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументСсылка 	= Параметры.ДокументСсылка;
	СообщениеСсылка = Параметры.СообщениеСсылка;
	
    Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
		Сообщить("Не удалось найти связанные сообщения!");
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Параметры.МодальностьЗапрещена= МодульОбъекта().МодальностьЗапрещена();

	ОбновитьДеревоДокументов();
	
	ПутьКФормам = МодульОбъекта().Метаданные().ПолноеИмя() + ".Форма.";
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоДокументов()
	
	ДокументСсылка 	= Параметры.ДокументСсылка;
	СообщениеСсылка = Параметры.СообщениеСсылка;
	
	ДеревоДокументов1 = МодульОбъекта().ПолучитьСвязанныеСообщения(СообщениеСсылка, ДокументСсылка);
	
	УстановитьИконкиПодстрок(ДеревоДокументов1); 
	
	ЗначениеВРеквизитФормы(ДеревоДокументов1, "ДеревоДокументов");
	
	
	Если МодульОбъекта().НастройкиМодуля.МыПоставщик Тогда
		Если ЗначениеЗаполнено(ДокументСсылка)
			И ТипЗнч(ДокументСсылка) = Тип(МодульОбъекта().ПолучитьТипЗначенияОбъекта("ВходящийЗаказПокупателя"))
		Тогда
			//покажем вторую закладку и кнопку
			Элементы.ДеревоДокументовКоманднаяПанельСообщенийОтвязатьДокумент.Доступность = Истина;
			Элементы.СтраницаДокументыДляПривязки.Видимость = Истина;
			
			ДатаНач = ДокументСсылка.Дата;
			ДатаКон = ДокументСсылка.Дата;
			
			КоманднаяПанельПохожихДокументовОбновитьСервер();
		Иначе
			//скроем вторую закладку и кнопку
			Элементы.ДеревоДокументовКоманднаяПанельСообщенийОтвязатьДокумент.Доступность = Ложь;
			Элементы.СтраницаДокументыДляПривязки.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура КоманднаяПанельПохожихДокументовОбновитьСервер()
	
	ТаблицаПохожихДокументов1 = МодульОбъекта().ПолучитьТаблицуДокументовДляПривязки_к_ORDERS(ДокументСсылка,ДатаНач,ДатаКон);
	ЗначениеВРеквизитФормы(ТаблицаПохожихДокументов1, "ТаблицаПохожихДокументов");

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДерево(Команда)
	ОбновитьДеревоДокументов();
	
	РазвернутьУзлыДерева();
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьУзлыДерева()
    КоллекцияЭлементовДерева =  ДеревоДокументов.ПолучитьЭлементы();
                                    
    //Развернуть дерево 
 
    Для Каждого Строка Из КоллекцияЭлементовДерева Цикл    
        ИдентификаторСтроки = Строка.ПолучитьИдентификатор();
        Элементы.ДеревоДокументов.Развернуть(ИдентификаторСтроки, Истина);
    КонецЦикла;   
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДокументовПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	ОткрытьФормуТекущейСтроки();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлемент(Команда)
	ОткрытьФормуТекущейСтроки();
КонецПроцедуры

&НаСервере
Процедура УстановитьИконкиПодстрок(Дерево)
Для Каждого Подстрока Из Дерево.Строки Цикл

//обработка подстроки 
  	Если Подстрока.Вид = "Сообщение" Тогда
		Если Подстрока.Направление = "Входящее" Тогда
			Подстрока.Иконка=0;
		Иначе
			Подстрока.Иконка=1;
		КонецЕсли;
		//Если Подстрока.Ссылка = СообщениеСсылка Тогда
		//	УСЛОВНОЕ ОФОРМЛЕНИЕ			
		//КонецЕсли;
	ИначеЕсли Подстрока.Вид = "ГруппаСообщений" Тогда
			Подстрока.Иконка=5;
	ИначеЕсли Подстрока.Вид = "Документ" Тогда
		Если Подстрока.Проведен = Истина Тогда
			Подстрока.Иконка=2;
		ИначеЕсли Подстрока.ПометкаУдаления = Истина Тогда
			Подстрока.Иконка=4;
		Иначе
			Подстрока.Иконка=3;
		КонецЕсли;
		//Если Подстрока.Ссылка = Параметры.ДокументСсылка и не ЗначениеЗаполнено(Параметры.СообщениеСсылка) Тогда
		//	УСЛОВНОЕ ОФОРМЛЕНИЕ			
		//КонецЕсли;
	КонецЕсли;	

//
УстановитьИконкиПодстрок(Подстрока);

КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьФормуТекущейСтроки();
	
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуТекущейСтроки()
	
	ТекДанные = Элементы.ДеревоДокументов.ТекущиеДанные;
	Состояние("Открываю форму сообщения");
	
	Если НЕ ТекДанные = Неопределено Тогда
		Если ТекДанные.Иконка = 2
			или ТекДанные.Иконка = 3
			или ТекДанные.Иконка = 4
			Тогда  //документ
			ОткрытьЗначение(ТекДанные.Ссылка);
			
		Иначе
			Если ЗначениеЗаполнено(ТекДанные.Ссылка) Тогда
				Если ТипСообщенияДоступенСервер(ТекДанные.ТипСообщения) Тогда
					
					СсылкаНаСообщение = ТекДанные.Ссылка;	
					
					ПараметрыФормы = Новый Структура;
					ПараметрыФормы.Вставить("СообщениеСсылка",	СсылкаНаСообщение);
					ПараметрыФормы.Вставить("ТипСообщения",		ПолучитьРеквизитСсылки(СсылкаНаСообщение,"ТипСообщения"));
					ПараметрыФормы.Вставить("Направление",		ПолучитьРеквизитСсылки(СсылкаНаСообщение,"Направление"));
					ПараметрыФормы.Вставить("Документ1С",		ПолучитьРеквизитСсылки(СсылкаНаСообщение,"Документ"));
					ПараметрыФормы.Вставить("РежимРаботы",		Параметры.РежимРаботы);
					ПараметрыФормы.Вставить("ТолькоПросмотр",	истина);
					
					Если Параметры.МодальностьЗапрещена Тогда 
						Выполнить("ОткрытьФормуОбъектаМодально(ПутьКФормам + ""ФормаСообщенияУправляемая"", ПараметрыФормы,)");//,ДополнительныеПараметры);
					Иначе
						ПолучитьФормуОбработки("ФормаСообщенияУправляемая",ПараметрыФормы).ОткрытьМодально();
					КонецЕсли;
				Иначе
					ТекстПредупреждения = "Недостаточно прав для работы с сообщением";
					Если Параметры.МодальностьЗапрещена Тогда 
						Выполнить("ПоказатьПредупреждение(,ТекстПредупреждения,,""Контур.EDI"")");
					Иначе
						Предупреждение(ТекстПредупреждения,,"Контур.EDI");
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;	
			
			ОбновитьДеревоДокументов();
			РазвернутьУзлыДерева();
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТипСообщенияДоступенСервер(ТипСообщения)
	
	Возврат МодульОбъекта().ТипСообщенияДоступенПользователюEDI(ТипСообщения);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизитСсылки(СсылкаНаСообщение,ИмяРеквизита)
	ЗначениеРеквизита=неопределено;
	Выполнить("ЗначениеРеквизита=СсылкаНаСообщение."+ИмяРеквизита);
	Возврат ЗначениеРеквизита;
	
КонецФункции


&НаКлиенте
Процедура КоманднаяПанельПохожихДокументовОткрыть(Команда)
	
	Если Элементы.ТаблицаПохожихДокументов.ТекущиеДанные<>Неопределено и ЗначениеЗаполнено(Элементы.ТаблицаПохожихДокументов.ТекущиеДанные.Ссылка) тогда
		
		ТекСсылка = Элементы.ТаблицаПохожихДокументов.ТекущиеДанные.Ссылка;
		Если Параметры.МодальностьЗапрещена Тогда
			Выполнить("ПоказатьЗначение(,ТекСсылка)"); 
		Иначе
			ОткрытьЗначение(ТекСсылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТипЗначенияОбъектаВызовСервера(НазваниеОбъектаEDI)
	Возврат МодульОбъекта().ПолучитьТипЗначенияОбъекта(НазваниеОбъектаEDI);
КонецФункции

&НаКлиенте
Процедура КоманднаяПанельСообщенийОтвязатьДокумент(Команда)
	
	ТекСтрока = Элементы.ДеревоДокументов.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		Если ТекСтрока.Вид = "Документ"
			И ТипЗнч(ТекСтрока.Ссылка) = Тип(ПолучитьТипЗначенияОбъектаВызовСервера("ВходящийЗаказПокупателя"))	Тогда
			
			ОтвязываемыйДокумент = ТекСтрока.Ссылка;
			
			Если ОтвязываемыйДокумент=ДокументСсылка Тогда
				ТекстПредупреждения="Нельзя отвязывать текущий документ";
				Если Параметры.МодальностьЗапрещена Тогда 
					Выполнить("ПоказатьПредупреждение(,ТекстПредупреждения,,""Контур.EDI"")");
				Иначе
					Предупреждение(ТекстПредупреждения,,"Контур.EDI");
				КонецЕсли;
				Возврат;
			КонецЕсли;	
			
			ТекстВопроса ="Отвязать от данного заказа документ "+ОтвязываемыйДокумент+"?";
			КнопкиВопроса=новый СписокЗначений;
			КнопкиВопроса.Добавить("Отвязать");
			КнопкиВопроса.Добавить("Отмена");
			ДопПараметрДляПередачиВОбработчик=новый Структура;
			ДопПараметрДляПередачиВОбработчик.Вставить("ОтвязываемыйДокумент",ОтвязываемыйДокумент);
			РезультатВопроса = Неопределено;
			
			Если Параметры.МодальностьЗапрещена Тогда
				Выполнить("ПоказатьВопрос(Новый ОписаниеОповещения(""ОбработчикСогласияОтвязкиДокумента"", ЭтаФорма, ДопПараметрДляПередачиВОбработчик), ТекстВопроса, КнопкиВопроса,,,""Контур.EDI"")");
			Иначе
				РезультатВопроса = Вопрос(ТекстВопроса, КнопкиВопроса,,,"Контур.EDI");
				ОбработчикСогласияОтвязкиДокумента(РезультатВопроса,ДопПараметрДляПередачиВОбработчик);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСогласияОтвязкиДокумента(РезультатВопроса,ДопПараметрДляПередачиВОбработчик) Экспорт
	
	Если РезультатВопроса="Отвязать" Тогда 	
		ОтвязываемыйДокумент=ДопПараметрДляПередачиВОбработчик.ОтвязываемыйДокумент;
		УбратьВиртуальныйORDERSВызовСервера(ОтвязываемыйДокумент);
		
	КонецЕсли;
	
	ОбновитьДеревоДокументов();
	
КонецПроцедуры

&НаСервере
Процедура УбратьВиртуальныйORDERSВызовСервера(ОтвязываемыйДокумент)
	
	ТабВиртуальныхСообщений = МодульОбъекта().ПолучитьВиртуальныеСвязанныеORDERS(ОтвязываемыйДокумент);
	
	Если ТабВиртуальныхСообщений.Количество()=1 Тогда
		Сообщить("Это единственный привязанный документ, его невозможно отвязать");
		Возврат;
	КонецЕсли;	
	МодульОбъекта().УбратьВиртуальныйORDERS(ОтвязываемыйДокумент);
	
КонецПроцедуры // УбратьВиртуальныйORDERSВызовСервера()

&НаКлиенте
Процедура КоманднаяПанельПохожихДокументовОбновить(Команда)
	
	Состояние("Строю список похожих документов 1С за период...",50,,);
	КоманднаяПанельПохожихДокументовОбновитьСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельСообщенийПривязатьНакладную(Команда)
	
	ТекСтрока = Элементы.ТаблицаПохожихДокументов.ТекущиеДанные;
	
	Если ТекСтрока=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДокументДляПривязки = ТекСтрока.Ссылка;
	//создаем копию ORDERS.
	
	ДобавитьВиртуальныйORDERSВызовСервера(ДокументСсылка,ДокументДляПривязки);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВиртуальныйORDERSВызовСервера(ТекущийДокумент,ДокументДляПривязки) Экспорт//ТекущийДокумент,ПривязываемыйДокумент
	
	МодульОбъекта().ДобавитьВиртуальныйORDERS(ТекущийДокумент,ДокументДляПривязки);
	
	ОбновитьДеревоДокументов();//перерисовать
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачПриИзменении(Элемент)
	Если ДатаНач>ДатаКон Тогда 
		ДатаНач = ДатаКон;
	КонецЕсли;	
	
	КоманднаяПанельПохожихДокументовОбновить("");
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонПриИзменении(Элемент)
	Если ДатаКон<ДатаНач Тогда 
		ДатаКон = ДатаНач;
	КонецЕсли;	
	
	КоманднаяПанельПохожихДокументовОбновить("");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПохожихДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПохожихДокументовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаПохожихДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	КоманднаяПанельПохожихДокументовОткрыть("");
КонецПроцедуры

