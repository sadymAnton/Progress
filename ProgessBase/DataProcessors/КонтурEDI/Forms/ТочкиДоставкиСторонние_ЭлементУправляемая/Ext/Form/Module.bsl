&НаСервере
Перем ОбработкаОбъект; 

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПутьКФормам 					= МодульОбъекта().Метаданные().ПолноеИмя() + ".Форма.";
	Параметры.МодальностьЗапрещена	= МодульОбъекта().МодальностьЗапрещена();
	СсылкаТочкиДоставки 			= Параметры.СсылкаТочкиДоставки;
	Партнер 						= Параметры.Партнер;
	
	ОпределитьТипСвоегоСправочникаТочекДоставки();
	
	Если ЗначениеЗаполнено(СсылкаТочкиДоставки) Тогда
		
		СтруктураЭлемента = МодульОбъекта().ПолучитьЭлементСправочника("ТочкиДоставкиСторонние", СсылкаТочкиДоставки);
		
		Если Не СтруктураЭлемента = Неопределено Тогда
			
			Наименование				= СтруктураЭлемента.Наименование;
			Партнер						= СтруктураЭлемента.Партнер;
			
			Если МодульОбъекта().ВнешнееХранилище Тогда
				ПредставлениеПартнера 	= МодульОбъекта().СоединениеСХранилищем.ЗначениеИзСтрокиВнутр(Партнер).Наименование;
			Иначе
				ПредставлениеПартнера 	= СокрЛП(Партнер);
			КонецЕсли;
			GLN							= СтруктураЭлемента.GLN;
			АдресДоставки				= СтруктураЭлемента.АдресДоставки;
			ЮрФизЛицо					= СтруктураЭлемента.ЮрФизЛицо;
			ТочкаДоставкиСвойСправочник = СтруктураЭлемента.ТочкаДоставкиСвойСправочник;
			
			Если СтруктураЭлемента.Свойство("ЗагружатьСообщенияПоТочкеДоставки") Тогда
				ЗагружатьСообщенияПоТочкеДоставки = СтруктураЭлемента.ЗагружатьСообщенияПоТочкеДоставки;
			КонецЕсли;	
			
		КонецЕсли;
		
	Иначе
		
		Партнер = Параметры.Партнер;
		Наименование = Параметры.Наименование;
		АдресДоставки = Параметры.АдресДоставки;
		GLN = Параметры.GLN;
		ЮрФизЛицо = Параметры.ЮрФизЛицо;
		
		Если МодульОбъекта().ВнешнееХранилище Тогда
			ПредставлениеПартнера = МодульОбъекта().СоединениеСХранилищем.ЗначениеИзСтрокиВнутр(Партнер).Наименование;
		Иначе
			ПредставлениеПартнера = СокрЛП(Партнер);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МодульОбъекта().ПараметрыПользователяEDI.ФильтрОбменаПоТочкамДоставки = Истина Тогда
		Элементы.ГруппаЗагружатьСообщения.Видимость = Истина;
	Иначе
		Элементы.ГруппаЗагружатьСообщения.Видимость = Ложь;
	КонецЕсли;
		
	Если Не МодульОбъекта().ВнешнееХранилище Тогда
		УстановитьТипПоля1С("Партнер",		"Партнер");
	КонецЕсли;	
	УстановитьТипПоля1С("ЮрФизЛицо",	"ЮрФизЛицоСтороннее");
	
	УстановитьЗаголовокПодсказкиЮрФизлица();
	УправлениеВидимостьюСправочникаТочекДоставок();	
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьТипСвоегоСправочникаТочекДоставки()
	
	СвойСправочникТочекДоставки = МодульОбъекта().ПолучитьКонстантуEDI("СвойСправочникТочекДоставки");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипПоля1С(ИмяНаФорме,Тип1С)
	
	ПолеФормы	= Элементы[ИмяНаФорме];
	ТипПоля		= МодульОбъекта().ПолучитьТипЗначенияОбъекта(Тип1С);
			
	Если ТипПоля = Неопределено Тогда
		СП = Новый СообщениеПользователю;
		СП.Текст = "Не задан тип объекта 1С для поля с типом "+Тип1С;
		СП.Сообщить();
	Иначе	
		Элементы[ИмяНаФорме].ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		Если НЕ ЗначениеЗаполнено(ЭтаФорма[ИмяНаФорме]) Тогда
			ЭтаФорма[ИмяНаФорме] = МодульОбъекта().ПолучитьПустуюСсылкуОбъекта(Тип1С);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьДанные()
	
	Успешно = Ложь;
	
	Если НЕ ПроверитьЗначенияФормы() Тогда
		Возврат Успешно;
	КонецЕсли;
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Партнер",								Партнер);
	СтруктураПолей.Вставить("Наименование",							Наименование);
	СтруктураПолей.Вставить("GLN",									GLN);
	СтруктураПолей.Вставить("АдресДоставки",						АдресДоставки);
	СтруктураПолей.Вставить("ЮрФизЛицо",							ЮрФизЛицо);
    СтруктураПолей.Вставить("ТочкаДоставкиСвойСправочник",			ТочкаДоставкиСвойСправочник);
    СтруктураПолей.Вставить("ЗагружатьСообщенияПоТочкеДоставки",	ЗагружатьСообщенияПоТочкеДоставки);
	
	МодульОбъекта().СохранитьЭлементСправочника("ТочкиДоставкиСторонние",СсылкаТочкиДоставки,СтруктураПолей);
	
	Успешно = Истина;
	
	Возврат Успешно;
		
КонецФункции

&НаСервере
Функция ПроверитьЗначенияФормы()
	
	// 1. инициализируем таблицу вывода ошибок
	ТаблицаОшибок = МодульОбъекта().ИнициализироватьТаблицуОшибок();
	
	// 2. передать структуру для проверки
	МодульОбъекта().ПроверитьПолеФормы(ТаблицаОшибок, Партнер,					, Истина, "Партнер");
	МодульОбъекта().ПроверитьПолеФормы(ТаблицаОшибок, АдресДоставки,			, Истина, "АдресДоставки");
	МодульОбъекта().ПроверитьПолеФормы(ТаблицаОшибок, GLN, 				"GLN"	, Истина, "GLN");

	//Уникальность точек доставки проверять нальзя т.к. реальна ситуация нескольких GLN на 1 адрес доставки и как результат неуникальность ТД
	//МодульОбъекта().ПроверитьСвязанныеСправочникиТочкиДоставкиНаПовтор(Партнер,СсылкаТочкиДоставки,ТаблицаОшибок, ЮрФизЛицо, ТочкаДоставкиСвойСправочник);
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		Если ПустаяСтрока(Наименование) Тогда
			ТекстЗаголовка = "При заполнении точки доставки найдены ошибки.";
		Иначе
			ТекстЗаголовка = "При заполнении точки доставки """+СокрЛП(Наименование)+""" найдены ошибки.";
		КонецЕсли;
		//ОткрытьФормуВыводаОшибок(ТекстЗаголовка,ТаблицаОшибок,ЭтаФорма);
		Для Каждого Строка Из ТаблицаОшибок Цикл
			СП = Новый СообщениеПользователю;
			СП.Текст = Строка.СведенияОбОшибках;
			СП.Поле = Строка.ИмяПоля;
			СП.Сообщить();
		КонецЦикла;
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
	// 3. обработать результат
	
КонецФункции


&НаКлиенте
Функция ПолучитьФормуОбработки(ИмяФормы, ПараметрыФормы = Неопределено , ВладелецФормы  = Неопределено, КлючУникальности = Неопределено, ЗакрыватьПризакрытииВладельца = Ложь)
	
	ПолучаемаяФорма=	ПолучитьФорму(ПутьКФормам+ИмяФормы
										, ПараметрыФормы
										,
										, КлючУникальности);
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		ПолучаемаяФорма.ВладелецФормы=	ВладелецФормы;
	КонецЕсли;
	
	Возврат ПолучаемаяФорма;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьНастройки(Команда)
	
	Если Параметры.МодальностьЗапрещена Тогда 
		Выполнить("ОткрытьФормуОбъектаМодально(ПутьКФормам + ""СервисНастройкиУправляемая"",)");//,ДополнительныеПараметры);
	Иначе
		ПолучитьФормуОбработки("СервисНастройкиУправляемая",,ЭтаФорма).ОткрытьМодально();
	КонецЕсли;

	УправлениеВидимостьюСправочникаТочекДоставок();
	УстановитьЗаголовокПодсказкиЮрФизлица();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено,РежимБлокирования = Неопределено)
	//отказ от модальности
	Если РежимБлокирования = Неопределено Тогда
		РежимБлокирования=	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика=	ЭтаФорма;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика=	Неопределено;
	Иначе	
		Выполнить("ОписаниеОбработчика=	Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика)");
	КонецЕсли;
	
	Выполнить("ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецОбработчика, , , ,  ОписаниеОбработчика, РежимБлокирования)");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Параметры.ПараметрыАвтотестирования) Тогда
		ПодключитьОбработчикОжидания("ЗаписатьНастройкиАвтотестирования",0.1,Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройкиАвтотестирования()
	
	ОК("");
	
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостьюСправочникаТочекДоставок()
	
	ОпределитьТипСвоегоСправочникаТочекДоставки();
	
	Если НЕ ЗначениеЗаполнено(СвойСправочникТочекДоставки) Тогда
		
		Элементы.ТочкаДоставкиСвойСправочник.Доступность 	= Ложь;
		Элементы.ГруппаСвязанныеОбъектыПодсказка.Видимость	= Истина;
			
	Иначе
		
		Элементы.ТочкаДоставкиСвойСправочник.Доступность 		= Истина;
		Элементы.ТочкаДоставкиСвойСправочник.ОграничениеТипа 	= Новый ОписаниеТипов("СправочникСсылка."+СокрЛП(СвойСправочникТочекДоставки));
		Если НЕ ЗначениеЗаполнено(ТочкаДоставкиСвойСправочник) Тогда
			ТочкаДоставкиСвойСправочник = ПредопределенноеЗначение("Справочник."+СвойСправочникТочекДоставки+".ПустаяСсылка");
		КонецЕсли;
		Элементы.ГруппаСвязанныеОбъектыПодсказка.Видимость		= Ложь;
		
	КонецЕсли;
	      	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокПодсказкиЮрФизлица()
	ГрузополучательИзЮрФизЛицаТД						= (МодульОбъекта().ПолучитьКонстантуEDI("ГрузополучательИзЮрФизЛицаТД") = Истина);
	ЗаполняемоеПолеВЗаказе = ?(ГрузополучательИзЮрФизЛицаТД, "Грузополучатель","Контрагент");
	Элементы.ПодсказкаЮрФизЛицо.Заголовок = "Согласно текущим настройкам, будет использовано для заполнения поля """+ЗаполняемоеПолеВЗаказе+""" в документе заказа.";
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ДанныеУспешноЗаписаны = ЗаписатьДанные();	
	
	Если ДанныеУспешноЗаписаны Тогда 
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры


