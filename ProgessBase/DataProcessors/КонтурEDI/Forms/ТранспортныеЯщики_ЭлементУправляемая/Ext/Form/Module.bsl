&НаСервере
Перем ОбработкаОбъект; 

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции 


&НаСервере
Процедура УстановитьТипПоля1С(ИмяНаФорме,Тип1С)
	
	ПолеФормы	= Элементы[ИмяНаФорме];
	ТипПоля		= МодульОбъекта().ПолучитьТипЗначенияОбъекта(Тип1С);
			
	Если ТипПоля = Неопределено Тогда
		
		Сообщить("Не задан тип объекта 1С для поля с типом "+Тип1С);
		
	Иначе	
		
		Элементы[ИмяНаФорме].ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		
		Если НЕ ЗначениеЗаполнено(ЭтаФорма[ИмяНаФорме]) Тогда
			
			ЭтаФорма[ИмяНаФорме] = МодульОбъекта().ПолучитьПустуюСсылкуОбъекта(Тип1С);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВыполнитьНажатие(Команда)
	
	УспешноеСохранение = СохранитьТранспортныйЯщикСервер();

	Если УспешноеСохранение=Истина Тогда 
		Оповестить("КонтурEDI_ОбновитьСписокУчетныхЗаписей");
		
		Соединение = Неопределено;
		
		ЭтаФорма.Закрыть(Истина);
	Иначе
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СохранитьТранспортныйЯщикСервер()
	
	Если НЕ ПроверитьЗначенияФормы() Тогда
		Возврат ложь;
	КонецЕсли;
	
	СтруктураПолей = СоздатьСтруктуруСправочникаДляСохранения();  

	МодульОбъекта().СохранитьЭлементСправочника("ТранспортныеЯщики", Ссылка, СтруктураПолей);
	
    Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПроверитьЗначенияФормы()

	//// 1. инициализируем таблицу вывода ошибок
	//ТаблицаОшибок = МодульОбъекта().ИнициализироватьТаблицуОшибок();
	//
	//// 2. передать структуру для проверки
	//МодульОбъекта().ПроверитьПолеФормы(ТаблицаОшибок, Логин,	"Строка50", Истина, "Логин");
	//МодульОбъекта().ПроверитьПолеФормы(ТаблицаОшибок, Пароль, 	"Строка50",	Истина, "Пароль");
	//
	//Если ТаблицаОшибок.Количество() > 0 Тогда
	//	
	//	Если ПустаяСтрока(Логин) Тогда
	//		
	//		ТекстЗаголовка = "При заполнении учетной записи найдены ошибки.";
	//		
	//	Иначе
	//		
	//		ТекстЗаголовка = "При заполнении учетной записи """+СокрЛП(Логин)+""" найдены ошибки.";
	//		
	//	КонецЕсли;
	//		
	//	//МодульПроверкиДанных.ОткрытьФормуВыводаОшибок(ТекстЗаголовка,ТаблицаОшибок,ЭтаФорма);
	//	
	//	Возврат Ложь;
	//	
	//Иначе
	//	
	//	Возврат Истина;
	//	
	//КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция  СоздатьСтруктуруСправочникаДляСохранения()
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("id", 									id);
	СтруктураПолей.Вставить("Наименование", 						id);
	СтруктураПолей.Вставить("ОрганизацияAPI",						ОрганизацияAPI);
	СтруктураПолей.Вставить("lastEventId",							ДатаИдентификаторПоследнегоСообщения);
	СтруктураПолей.Вставить("НеАктивный",							НеАктивный);
	СтруктураПолей.Вставить("GLNЯщика",								GLNЯщика);
	СтруктураПолей.Вставить("Тестовый",								Тестовый);
	Возврат СтруктураПолей;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ЭтаОбработка.ПриОткрытииФормы(ЭтаФорма);       такое на УФ не вызываем!
	
	Ссылка = Параметры.Ссылка;
	МодальностьЗапрещена = Параметры.МодальностьЗапрещена;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		СтруктураЭлемента = МодульОбъекта().ПолучитьЭлементСправочника("ТранспортныеЯщики", Ссылка);
		
		Если НЕ СтруктураЭлемента = Неопределено Тогда
		
			id 										= СтруктураЭлемента.id;
			Наименование 							= СтруктураЭлемента.Наименование;
			ДатаИдентификаторПоследнегоСообщения 	= СтруктураЭлемента.lastEventId;
			ОрганизацияAPI 							= СтруктураЭлемента.ОрганизацияAPI;
			НеАктивный	 							= СтруктураЭлемента.НеАктивный;
			Тестовый	 							= СтруктураЭлемента.Тестовый;
			GLNЯщика			 					= СтруктураЭлемента.GLNЯщика;
			ОрганизацияПредставление 				= МодульОбъекта().ПолучитьПредставлениеЭлементаСправочника(ОрганизацияAPI);
			
		КонецЕсли;
		
	КонецЕсли;
	
	//УстановитьТипПоля1С("Организация",	"ЮрФизЛицоСвое");
	//// + Внешнее хранилище. kns 2014.09.10
	//Если НЕ ЭтаОбработка.КэшСеансаКонтурEDI.ВнешнееХранилище Тогда
	//// - Внешнее хранилище. kns 2014.09.10		
	//	УстановитьТипПоля1С("Подразделение","ПодразделениеСвое");
	//КонецЕсли;
	//
	//Оповестить("КонтурEDI_АктивизироватьФормуОшибок","Открытие",ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДатаИдентификаторПоследнегоСообщенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	_Дата = ТекущаяДата();
	
	Если МодальностьЗапрещена Тогда
		Выполнить("ПоказатьВводДаты(Новый ОписаниеОповещения(""ОбработчикВыбораДаты"", ЭтотОбъект), _Дата, ""Контур.EDI"", ЧастиДаты.Дата);");
	Иначе
		Если ВвестиДату(_Дата,, ЧастиДаты.Дата) Тогда
			ДатаИдентификаторПоследнегоСообщения = Формат(_Дата, "ДФ=yyyyMMdd");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораДаты(ВыбраннаяДата, ДопПараметры = Неопределено) Экспорт

	Если ВыбраннаяДата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДатаИдентификаторПоследнегоСообщения = Формат(ВыбраннаяДата, "ДФ=yyyyMMdd");

КонецПроцедуры // ОбработчикВыбораДаты()

