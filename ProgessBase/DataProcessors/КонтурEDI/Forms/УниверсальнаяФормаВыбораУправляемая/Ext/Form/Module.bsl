&НаСервере
Перем ОбработкаОбъект;

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()
	
	Если ОбработкаОбъект=Неопределено Тогда
		
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
		
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции


&НаКлиенте
Функция ФлажокВыбран()

	Для Каждого Строка Из ТаблицаВыбора Цикл
		Если Строка.Выбор=Истина Тогда 
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
    Возврат Ложь;
	
КонецФункции // Флажок выбран()


&НаКлиенте
Процедура Выбрать(Команда)
	
	//Если выбор 1 значения и флажок не установлен - значит выбрали активную строку
	Если ВыборНесколькихЗначений=Ложь и ФлажокВыбран()=Ложь Тогда 
		Элементы.ТаблицаВыбора.ТекущиеДанные.Выбор=Истина;
	ИначеЕсли ВыборНесколькихЗначений=Ложь и ФлажокВыбран()=Ложь Тогда 
		ТекстПредупреждения="Выберите хотя бы одно значение";
		Если Параметры.МодальностьЗапрещена Тогда 
			Выполнить("ПоказатьПредупреждение(,ТекстПредупреждения,,""Контур.EDI"")");
		Иначе
			Предупреждение(ТекстПредупреждения,,"Контур.EDI");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если ВыборОбязателен=Истина и ФлажокВыбран()=Ложь Тогда 
		ТекстВопроса ="Значение не выбрано. Вы уверены что хотите отказаться от выбора?";
		КнопкиВопроса=новый СписокЗначений;
		КнопкиВопроса.Добавить("Отказ от выбора");
		КнопкиВопроса.Добавить("Выбрать заново");
		ДопПараметрДляПередачиВОбработчик=Неопределено;
		РезультатВопроса = Неопределено;
		
		Если Параметры.МодальностьЗапрещена Тогда
			Выполнить("ПоказатьВопрос(Новый ОписаниеОповещения(""ОбработчикРешенияОбОтказеВыбора"", ЭтаФорма, ДопПараметрДляПередачиВОбработчик), ТекстВопроса, КнопкиВопроса,,,""Контур.EDI"")");
		Иначе
			РезультатВопроса = Вопрос(ТекстВопроса, КнопкиВопроса,,,"Контур.EDI");
			ОбработчикРешенияОбОтказеВыбора(РезультатВопроса,ДопПараметрДляПередачиВОбработчик);
		КонецЕсли;
	Иначе
		
		ПоместитьРезультатВХранилище();	
		ЭтаФорма.Закрыть(АдресТаблицыВХранилище);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикРешенияОбОтказеВыбора(РезультатВопроса,ДопПараметрПереданныйВОбработчик=Неопределено) Экспорт

	Если РезультатВопроса="Отказ от выбора" Тогда 
		ПоместитьРезультатВХранилище();	
		ЭтаФорма.Закрыть(АдресТаблицыВХранилище);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПоместитьРезультатВХранилище()

	АдресТаблицыВХранилище = ПоместитьВоВременноеХранилище(РеквизитФормыВЗначение("ТаблицаВыбора"));
    Возврат АдресТаблицыВХранилище;
	
КонецФункции // ПоместитьРезультатВХранилище()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресТаблицыВХранилище=Параметры.АдресТаблицыВХранилище;
	ВыборОбязателен=Параметры.ВыборОбязателен;
	
	ВыборНесколькихЗначений=Параметры.ВыборНесколькихЗначений;
	ЭтаФорма.Заголовок="Выберите "+?(ВыборНесколькихЗначений," необходимые значения...","одно из предложенных значений...");
	
	ТаблицаЗначений=ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыВХранилище);
	
	ЗаполнитьПолеФормыДаннымиТаблицы(ТаблицаЗначений);
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолеФормыДаннымиТаблицы(ТаблицаЗначений)
	
	МассивШириныКолонок = ОпределитьШиринуКолонокПоЗначениюВТЗ(ТаблицаЗначений);
	МассивДобавляемыхРеквизитов = Новый Массив;
	
	й=0;
	Для каждого Колонка Из ТаблицаЗначений.Колонки  Цикл
		//вытащить тип из этой колонки и присвоить
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипЗнч(ТаблицаЗначений[0][й]));
		МассивТипов.Добавить(Тип("Строка"));
		ПараметрыЧисла = Новый КвалификаторыЧисла(15, 2);
		ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов,ПараметрыЧисла);
		Если Колонка.Имя<>"Выбор" Тогда 
			МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя,ДопустимыеТипы,"ТаблицаВыбора", Колонка.Имя));  //составной тип сделать: любая ссылка, число, дата, строка, булево
		КонецЕсли;
		й=й+1;
	КонецЦикла;
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов); 
	й=0;
	Для каждого Колонка Из ТаблицаЗначений.Колонки  Цикл
		//теперь создать колонки
		НоваяКолонка = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ЭтаФорма.Элементы.ТаблицаВыбора); 
        НоваяКолонка.Заголовок = Колонка.Имя; 
        НоваяКолонка.ПутьКДанным = "ТаблицаВыбора."+Колонка.Имя; 
        НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
        НоваяКолонка.Ширина = МассивШириныКолонок[й];  // как узнать правильную ширину?
		НоваяКолонка.ТолькоПросмотр=Истина;
		й=й+1;
	КонецЦикла;
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		НоваяСтрокаНаФорме=ТаблицаВыбора.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНаФорме,СтрокаТаблицы);
	КонецЦикла;
	
	Если ВыборНесколькихЗначений<>Истина Тогда 
		//прячем колонку выбор
		Элементы.ТаблицаВыбораВыбор.Видимость=Ложь;
	КонецЕсли;

КонецПроцедуры // ЗаполнитьПолеФормыДаннымиТаблицы()

&НаСервере
Функция ОпределитьШиринуКолонокПоЗначениюВТЗ(ТаблицаЗначений)
	
	МассивШирины = новый Массив;
	Для Каждого Колонка из ТаблицаЗначений.Колонки Цикл
		МассивШирины.Добавить(0);	
	КонецЦикла;
		
	Для Каждого СтрокаТЗ из ТаблицаЗначений Цикл
		й=0;
		Для каждого Колонка из ТаблицаЗначений.Колонки Цикл
			ЗначениеТипаСсылка=Ложь;//под ссылку дадим 10 симв
			МаксимальнаяДлинаСодержимого=0;
			
			ТипЯчейкиСтрока = Строка(ТипЗнч(СтрокаТЗ[й]));
			Если Найти(ТипЯчейкиСтрока,"Ссылка")>0 Тогда 
				МассивШирины[й]=7;//под ссылки 7 знаков
			Иначе
				ДлинаСодержимого=СтрДлина(СокрЛП(Строка(СтрокаТЗ[й])));
				МассивШирины[й]= Макс(МассивШирины[й],ДлинаСодержимого);
			КонецЕсли;
			
			й=й+1;
		КонецЦикла;
		
	КонецЦикла;

	Возврат МассивШирины;
КонецФункции // ОпределитьШиринуКолонкиПоЗначениюВней()

&НаКлиенте
Процедура ТаблицаВыбораВыборПриИзменении(Элемент)
	
	Если ВыборНесколькихЗначений=Ложь Тогда 
		//сбросить остальные флажки
		Для Каждого Строка Из ТаблицаВыбора Цикл
			Строка.Выбор=Ложь;
		КонецЦикла;
		Элементы.ТаблицаВыбора.ТекущиеДанные.Выбор=Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыборНесколькихЗначений<>Истина Тогда 
		//это даблклик при выборе одного из
		Выбрать("");
	КонецЕсли;
	
КонецПроцедуры

