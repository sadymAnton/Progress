&НаСервере
Перем ОбработкаОбъект; 

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции 

&НаКлиенте
Функция ПолучитьФормуОбработки(ИмяФормы, ПараметрыФормы = Неопределено , ВладелецФормы  = Неопределено, КлючУникальности = Неопределено, ЗакрыватьПризакрытииВладельца = Ложь)
	
	ПолучаемаяФорма=	ПолучитьФорму(ПутьКФормам+ИмяФормы
										, ПараметрыФормы
										,
										, КлючУникальности);
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		ПолучаемаяФорма.ВладелецФормы=	ВладелецФормы;
	КонецЕсли;
	
	Возврат ПолучаемаяФорма;
	
КонецФункции

&НаКлиенте
Процедура КоманднаяПанельСпискаКнопкаДобавить(Кнопка)
	
	ОткрытьФормуУчетнойЗаписиДляРедактированияИлиДобавления(Истина);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОсновной(Команда)
	
	ТекСтрока = Элементы.СписокУчетныхЗаписей.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		
		УстановитьУчетнуюЗаписьОсновнойСервер(ТекСтрока.Ссылка);
		ОбновитьСписокУчетныхЗаписей();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.МодальностьЗапрещена=МодульОбъекта().МодальностьЗапрещена();
	ПутьКФормам = МодульОбъекта().Метаданные().ПолноеИмя() + ".Форма.";
	
	ОбновитьСписокУчетныхЗаписей();

КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокУчетныхЗаписей()
	
	УчетнаяЗаписьПоУмолчанию = МодульОбъекта().ПолучитьКонстантуEDI("УчетнаяЗаписьПоУмолчанию");
	
	СписокУчетныхЗаписей.Очистить();
	
	УчетныеЗаписи = МодульОбъекта().ПолучитьСписокЭлементовСправочника("УчетныеЗаписи");
		
	Для каждого Стр ИЗ УчетныеЗаписи Цикл
			
		НоваяСтрока = СписокУчетныхЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
		
		Если Стр.Ссылка = УчетнаяЗаписьПоУмолчанию Тогда
			НоваяСтрока.Основная = Истина;
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУчетнуюЗаписьОсновнойСервер(УчетнаяЗаписьСсылка)
	
	МодульОбъекта().УстановитьГлобальноеСвойство("УчетнаяЗаписьПоУмолчанию", УчетнаяЗаписьСсылка);
	
КонецПроцедуры // УстановитьУчетнуюЗаписьОсновнойСервер()

&НаКлиенте
Процедура ОткрытьФормуУчетнойЗаписи(Команда)
	
	ОткрытьФормуУчетнойЗаписиДляРедактированияИлиДобавления(ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено,РежимБлокирования = Неопределено)
	//отказ от модальности
	Если РежимБлокирования = Неопределено Тогда
		РежимБлокирования=	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика=	ЭтаФорма;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика=	Неопределено;
	Иначе	
		Выполнить("ОписаниеОбработчика=	Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика)");
	КонецЕсли;
	
	Выполнить("ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецОбработчика, , , ,  ОписаниеОбработчика, РежимБлокирования)");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуУчетнойЗаписиДляРедактированияИлиДобавления(ЭтоДобавление=Ложь)
	
	ТекСтрока = Элементы.СписокУчетныхЗаписей.ТекущиеДанные;
	
	Если (НЕ ТекСтрока=Неопределено) или ЭтоДобавление=Истина Тогда
		Если ТекСтрока<>Неопределено и ЗначениеЗаполнено(ТекСтрока.Ссылка) и не ЭтоДобавление Тогда
			СсылкаНаУЗ = ТекСтрока.Ссылка;
		иначе
			СсылкаНаУЗ = Неопределено;
		КонецЕсли;
		
		ПараметрыФормы=	Новый Структура;
		ПараметрыФормы.Вставить("СсылкаУчетнойЗаписи", СсылкаНаУЗ);
		ПараметрыФормы.Вставить("Новая", ЭтоДобавление);
		
		Если Параметры.МодальностьЗапрещена Тогда       //УФ-ОФ переход   //на ОФ всегда разрешена модальность, оставлено для дальнейшего открытия УФ-УФ
			Выполнить("ОткрытьФормуОбъектаМодально(ПутьКФормам + ""УчетныеЗаписи_ЭлементУправляемая"", ПараметрыФормы,""ОбработчикПослеРедактированияУчетнойЗаписи"")");//,ДополнительныеПараметры);
		Иначе
			ФормаЭлемента=ПолучитьФормуОбработки("УчетныеЗаписи_ЭлементУправляемая",ПараметрыФормы);
			ФормаЭлемента.СсылкаУчетнойЗаписи = СсылкаНаУЗ;
			ФормаЭлемента.ОткрытьМодально();
			ОбновитьСписокУчетныхЗаписей();	
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПослеРедактированияУчетнойЗаписи(ПараметрыЗакрытияИнтерактивнойФормы, ДополнительныеПараметры) Экспорт
	
	//обновить список УЗ
	ОбновитьСписокУчетныхЗаписей();	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокУчетныхЗаписейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьФормуУчетнойЗаписиДляРедактированияИлиДобавления(Ложь);
КонецПроцедуры
