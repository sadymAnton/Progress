&НаСервере
Перем ОбработкаОбъект;

&НаСервере
Перем ПараметрыВывода;

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции 


&НаСервере
Процедура ДобавитьОписаниеОшибки(ТаблицаОшибок, ТекстОшибки)
	
	НоваяСтрока = ТаблицаОшибок.Добавить();
	НоваяСтрока.ТекстОшибки = ТекстОшибки;	
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВходныеПараметры()
	
	Успешно = Истина;	
	ТаблицаОшибок = Новый ТаблицаЗначений;
	ТаблицаОшибок.Колонки.Добавить("ТекстОшибки");
	
	ВидРасхождения = Параметры.ВидРасхождения;
	
	Если ВидРасхождения = "РасхожденияЗаказа" Тогда
		
		Если Не ЗначениеЗаполнено(Параметры.Заказ) Тогда
			Успешно = Ложь;
			ДобавитьОписаниеОшибки(ТаблицаОшибок, "Отсутствует документ заказа в 1С.");
		КонецЕсли;	
		
	ИначеЕсли ВидРасхождения = "РасхожденияПриемки" Тогда
		
		Если Не ЗначениеЗаполнено(Параметры.Накладная) Тогда
			Успешно = Ложь;
			ДобавитьОписаниеОшибки(ТаблицаОшибок, "Отсутствует документ накладной в 1С.");
		КонецЕсли;
		
	ИначеЕсли ВидРасхождения = "РасхожденияВерсийЗаказа" Тогда
		
		Если Не ЗначениеЗаполнено(Параметры.Заказ) Тогда
			Успешно = Ложь;
			ДобавитьОписаниеОшибки(ТаблицаОшибок, "Отсутствует Ссылка на сообщение в 1С.");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Успешно Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Невозможно выполнить анализ расхождений:";
		СообщениеПользователю.Сообщить();
		Для Каждого Строка Из ТаблицаОшибок Цикл
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = Строка.ТекстОшибки;
			СообщениеПользователю.Сообщить();
        КонецЦикла;
	КонецЕсли;
	
	Возврат Успешно;	
	
КонецФункции

&НаСервере
Функция ПроверитьПараметрыВывода()
	
	Если Не ПараметрыВывода.Успешно	Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Невозможно выполнить анализ расхождений: " + ПараметрыВывода.ОписаниеОшибки;
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	
	Возврат ПараметрыВывода.Успешно;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Макет = МодульОбъекта().ПолучитьМакет("МакетСравненияТабличныхЧастей");
	
	ВходныеПараметрыВалидны = ПроверитьВходныеПараметры();
	
	Если ВходныеПараметрыВалидны Тогда
		
		ПараметрыРасхождения = Новый Структура;
		Если ЗначениеЗаполнено(Параметры.Параметры) И ТипЗнч(Параметры.Параметры) = Тип("Структура") Тогда
			ПараметрыРасхождения = Параметры.Параметры;
		КонецЕсли;
		Если ЗначениеЗаполнено(Параметры.СравниваемыеПоля) Тогда
			ПараметрыРасхождения.Вставить("СравниваемыеПоля", Параметры.СравниваемыеПоля);
		КонецЕсли;
		
		ВидРасхождения = Параметры.ВидРасхождения;
			
		Если ВидРасхождения = "РасхожденияЗаказа" Тогда
			
			Заказ 					= Параметры.Заказ;
			ПараметрыВывода 		= МодульОбъекта().ПолучитьДанныеРасхожденияЗаказаПокупателя(Заказ, ПараметрыРасхождения);
						
		ИначеЕсли ВидРасхождения = "РасхожденияПриемки" Тогда
			
			Накладная				= Параметры.Накладная;
			ПараметрыВывода 		= МодульОбъекта().ПолучитьДанныеРасхожденияПриемки(Накладная, ПараметрыРасхождения);
			
		ИначеЕсли ВидРасхождения = "РасхожденияВерсийЗаказа" Тогда
			
			Заказ					= Параметры.Заказ;
			ПараметрыВывода 		= МодульОбъекта().ПолучитьДанныеРасхожденияВерсийЗаказа(Заказ, ПараметрыРасхождения);
			
		КонецЕсли; 
		
		ПараметрыВыводаВалидны = ПроверитьПараметрыВывода();
		
		Если ПараметрыВыводаВалидны Тогда
			
			МодульОбъекта().ВывестиРасхождения(Таблица, Макет, ПараметрыВывода);	
			
		КонецЕсли;
		
	КонецЕсли;
	    	
КонецПроцедуры