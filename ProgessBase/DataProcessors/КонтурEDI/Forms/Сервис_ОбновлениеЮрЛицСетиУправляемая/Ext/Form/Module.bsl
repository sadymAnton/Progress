&НаСервере
Перем ОбработкаОбъект;

//инициализация модуля и его экспортных функций
&НаСервере
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
		
		//Если Параметры.АдресХранилища<>"" Тогда
		//	ОбработкаОбъект = ПолучитьИзВременногоХранилища(Параметры.АдресХранилища);
		//	Возврат ОбработкаОбъект;
		//КонецЕсли;
		//
		//Если ОбработкаОбъект=Неопределено Тогда
		//	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		//	ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
		//КонецЕсли;
		//
		//Параметры.АдресХранилища = ПоместитьВоВременноеХранилище(ОбработкаОбъект,УникальныйИдентификатор);
	
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено,РежимБлокирования = Неопределено)
	//отказ от модальности
	Если РежимБлокирования = Неопределено Тогда
		РежимБлокирования=	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика=	ЭтаФорма;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика=	Неопределено;
	Иначе	
		Выполнить("ОписаниеОбработчика=	Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика)");
	КонецЕсли;
	
	Выполнить("ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецОбработчика, , , ,  ОписаниеОбработчика, РежимБлокирования)");
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФормуОбработки(ИмяФормы, ПараметрыФормы = Неопределено , ВладелецФормы  = Неопределено, КлючУникальности = Неопределено, ЗакрыватьПризакрытииВладельца = Ложь)
	
	ПолучаемаяФорма=	ПолучитьФорму(ПутьКФормам+ИмяФормы
										, ПараметрыФормы
										,
										, КлючУникальности);
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		ПолучаемаяФорма.ВладелецФормы=	ВладелецФормы;
	КонецЕсли;
	
	Возврат ПолучаемаяФорма;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьДанныеЮрЛиц(Команда)
	//заберем все добавленные и запишем Юр лица
	ОбновитьЮрЛицаСервер();
	ЭтаФорма.Закрыть();
	//рефакторинг дополнить валидациями
КонецПроцедуры

&НаСервере
Процедура ОбновитьЮрЛицаСервер()

	Для Каждого СтрокаЮрЛиц Из ЮрЛицаСети Цикл 
		Если НЕ СтрокаЮрЛиц.Заблокировано
			И ЗначениеЗаполнено(СтрокаЮрЛиц.Контрагент)Тогда
			
			НачатьТранзакцию();
			МодульОбъекта().УстановитьЗначениеСвойстваОбъекта(СтрокаЮрЛиц.Контрагент, "ПартнерКонтрагента",	Партнер);
			МодульОбъекта().УстановитьЗначениеСвойстваОбъекта(СтрокаЮрЛиц.Контрагент, "GLN_Контрагента",	СтрокаЮрЛиц.GLN);
			ЗафиксироватьТранзакцию();			
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ОбновитьЮрЛицаСервер()


&НаКлиенте
Процедура ЮрЛицаСетиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = истина;
КонецПроцедуры

&НаКлиенте
Процедура ЮрЛицаСетиПередУдалением(Элемент, Отказ)
	Отказ = истина;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Параметры.КодСети) Тогда 
		Сообщить("В форму не передан код сети!");
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Партнер) Тогда 
		Сообщить("В форму не передана торговая сеть!");
		Отказ=Истина;
		Возврат;
	иначе
		Партнер = Параметры.Партнер;
	КонецЕсли;
	
	
	ДанныеПоТС = МодульОбъекта().ПолучитьСтруктуруДанныхТорговойСети(Параметры.КодСети);
	Если НЕ ДанныеПоТС = Неопределено Тогда
		
		ЮрФизЛицаТС = ДанныеПоТС.ЮрФизЛица;
		
		КоличествоНайденных = 0;
		
		Для Каждого СтрЮФ Из ЮрФизЛицаТС Цикл
			НайденныйКонтрагент=Неопределено; //найденный в настройках
			НайденныйКонтрагент = КонтрагентНастроен(СтрЮФ, Новый Структура("Код",Параметры.КодСети));
			
			СтрокаКонтрагента = ЮрЛицаСети.Добавить();
			
			СтрокаКонтрагента.Наименование = СтрЮФ.Наименование;
			СтрокаКонтрагента.ИНН = СтрЮФ.ИНН;
			СтрокаКонтрагента.КПП = СтрЮФ.КПП;
			СтрокаКонтрагента.GLN = СтрЮФ.GLN;
			
			Если ЗначениеЗаполнено(НайденныйКонтрагент) Тогда
				СтрокаКонтрагента.Заблокировано = истина;
				СтрокаКонтрагента.Контрагент = НайденныйКонтрагент;
				СтрокаКонтрагента.Иконка = БиблиотекаКартинок.СинтаксическийКонтроль;
				
			Иначе
				СтрокаКонтрагента.Контрагент = МодульОбъекта().НайтиЮрФизЛицоСтороннееПоРеквизитам(СтрЮФ.ИНН,СтрЮФ.КПП);;
			КонецЕсли;
			
			//Если ЗначениеЗаполнено(СтрокаКонтрагента.Контрагент) Тогда
			//	КоличествоНайденных=КоличествоНайденных+1;
			//КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция КонтрагентНастроен(СтрЮФ,СтрСети)  //вернем контрагента или неопределено
	Запрос = МодульОбъекта().ИнициализироватьЗапрос_КонтурEDI(ложь);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтурEDI_ДополнительныеРеквизиты.Объект
	|ПОМЕСТИТЬ КонтрагентТорговойСети
	|ИЗ
	|	РегистрСведений.КонтурEDI_ДополнительныеРеквизиты КАК КонтурEDI_ДополнительныеРеквизиты
	|ГДЕ
	|	КонтурEDI_ДополнительныеРеквизиты.Свойство = ""ПартнерКонтрагента""
	|	И КонтурEDI_ДополнительныеРеквизиты.Значение = &Значение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтурEDI_ДополнительныеРеквизиты.Объект,
	|	КонтурEDI_ДополнительныеРеквизиты.Значение КАК GLN
	|ИЗ
	|	РегистрСведений.КонтурEDI_ДополнительныеРеквизиты КАК КонтурEDI_ДополнительныеРеквизиты
	|ГДЕ
	|	КонтурEDI_ДополнительныеРеквизиты.Свойство = ""GLN_Контрагента""
	|	И КонтурEDI_ДополнительныеРеквизиты.Объект В
	|			(ВЫБРАТЬ
	|				КонтрагентТорговойСети.Объект
	|			ИЗ
	|				КонтрагентТорговойСети)";
	
	
	Запрос.УстановитьПараметр("Значение",Партнер);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока  Выборка.Следующий() Цикл
		Если СтрЮФ.GLN = Выборка.GLN Тогда
			Возврат Выборка.Объект;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//проверим, есть ли что показать
	Если ЮрЛицаСети.Количество() = 0 Тогда 
		ТекстПредупреждения="Для этой торговой сети не обнаружено юр. лиц.";
		ДопПараметрДляПередачиВОбработчик=Неопределено;
		Если Параметры.МодальностьЗапрещена Тогда 
			Выполнить("ПоказатьПредупреждение(Новый ОписаниеОповещения(""ОбработчикЗакрытьФорму"", ЭтаФорма, ДопПараметрДляПередачиВОбработчик),ТекстПредупреждения,,""Контур.EDI"")");
		Иначе
			Предупреждение(ТекстПредупреждения,,"Контур.EDI");
			ОбработчикЗакрытьФорму(ДопПараметрДляПередачиВОбработчик);
		КонецЕсли;
	Иначе
	//есть или нет ненастроенные
	//Если Есть ненастроенные - ткнем пертом
	//если все настроено - сообщим что настроено все
	ЕстьНенастроенные = Ложь;
	й=-1;
	Для Каждого Строка Из ЮрЛицаСети цикл
		й=й+1;
		Если Не ЗначениеЗаполнено(Строка.Контрагент) Тогда 
			ЕстьНенастроенные=Истина;
			Сп = новый СообщениеПользователю;
			Сп.Текст = "Выберите соответствующих контрагентов в вашей 1С";
			Сп.Поле = 	"ЮрЛицаСети["+Формат(й,"ЧГ=")+"].Контрагент";
			Сп.Сообщить();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если не ЕстьНенастроенные Тогда 
		Сообщить("Мы не нашли новых юр. лиц торговой сети на нашем сервере.");
		Сообщить("Похоже, что все соответствия установлены.");
		Элементы.ФормаЗаписатьДанныеЮрЛиц.Видимость=Ложь;
	КонецЕсли;
	
	
КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикЗакрытьФорму(ДопПараметрПереданныйВОбработчик=Неопределено) Экспорт
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры 

&НаКлиенте
Процедура ЮрЛицаСетиЮрЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//показать выбор из спр-ка контрагентов
	ИмяФормыВыбора = ПолучитьИмяСпрваочникаКонтрагенты()+".ФормаВыбора";
	ПараметрыФормыВыбораКонтрагента = новый Структура;
	ДополнительныеПараметры  = новый Структура;
	ДополнительныеПараметры.Вставить("Элемент",Элемент);
	Если Параметры.МодальностьЗапрещена Тогда 
		Выполнить("ОткрытьФормуОбъектаМодально(ИмяФормыВыбора, ПараметрыФормыВыбораКонтрагента,""ОбработчикПодбораКонтрагента"",ДополнительныеПараметры)");
	Иначе
		ВыбраныйЭлемент=ПолучитьФорму(ИмяФормыВыбора,ПараметрыФормыВыбораКонтрагента).ОткрытьМодально();
		ОбработчикПодбораКонтрагента(ВыбраныйЭлемент,ДополнительныеПараметры);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПодбораКонтрагента(ВыбраныйЭлемент,ДополнительныеПараметры=Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ВыбраныйЭлемент)
		И ДополнительныеПараметры<>Неопределено
		И ДополнительныеПараметры.Свойство("Элемент") Тогда
		
		ТекСтрока = Элементы.ЮрЛицаСети.ТекущиеДанные;

		ТекСтрока.Контрагент = ВыбраныйЭлемент;
		ТекСтрока.Иконка = БиблиотекаКартинок.СоздатьЭлементСписка;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработчикПодбораКонтрагента()

&НаСервере
Функция ПолучитьИмяСпрваочникаКонтрагенты()

	ИмяСправочникаКонтрагенты = "Справочник."+МодульОбъекта().ПолучитьТипЗначенияОбъекта("ЮрФизЛицоСтороннее",,Истина);
	Если не ЗначениеЗаполнено(ИмяСправочникаКонтрагенты) Тогда 
		ИмяСправочникаКонтрагенты = "Справочник.Контрагенты";//default	
	КонецЕсли;
	
	Возврат ИмяСправочникаКонтрагенты;

КонецФункции // ПолучитьИмяСпрваочникаКонтрагенты()
