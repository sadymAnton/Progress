
Функция ОкруглитьСумму(РезультатДляОкругления) Экспорт
	
	Если НеОкруглять Тогда
		Возврат РезультатДляОкругления
	ИначеЕсли НЕ ОкруглятьВСторонуУвеличения Тогда
		// округляем до рубля
		Возврат Окр(РезультатДляОкругления, 0);
	Иначе // округляем большую сторону
		
		РезультатПослеОкругления = Цел(РезультатДляОкругления);
		Если РезультатДляОкругления > РезультатПослеОкругления Тогда
			РезультатПослеОкругления = РезультатПослеОкругления + 1;
		КонецЕсли;
		Возврат РезультатПослеОкругления;
	КонецЕсли;
	
КонецФункции


/////////////////////////////////////////////////
// Работа с историей

// Функция получает историю повышения окладов штатного расписания
// Параметры 
//		Период - Дата на которую необходимо получить список штатных единиц, которые проиндексировали
//		ВернутьСписокШтатныхЕдиниц - надо вернуть не список периодов, а список штатных единиц на дату - Период 
//
Функция ПолучитьТаблицуИсторииШтатногоРасписания(Период = Неопределено, ВернутьСписокШтатныхЕдиниц = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ДатаПовышения", ДатаПовышения);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = ИндексацияЗаработкаПереопределяемый.ПолучитьТекстЗапросаДляИсторииШтатногоРасписания();
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтатноеРасписание.Период КАК Период,
	|	МАКСИМУМ(ШтатноеРасписаниеДопТаблица.Период) КАК ПериодПредыдущий,
	|	ШтатноеРасписание.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ШтатноеРасписание.Должность КАК Должность
	|ПОМЕСТИТЬ ВТПериодыШтатногоРасписания
	|ИЗ
	|	ВТШтатноеРасписание КАК ШтатноеРасписание
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтатноеРасписание КАК ШтатноеРасписаниеДопТаблица
	|		ПО ШтатноеРасписание.ПодразделениеОрганизации = ШтатноеРасписаниеДопТаблица.ПодразделениеОрганизации
	|			И ШтатноеРасписание.Должность = ШтатноеРасписаниеДопТаблица.Должность
	|			И ШтатноеРасписание.Период > ШтатноеРасписаниеДопТаблица.Период
	|ГДЕ
	|	(&Период = НЕОПРЕДЕЛЕНО
	|			ИЛИ ШтатноеРасписание.Период = &Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ШтатноеРасписание.Период,
	|	ШтатноеРасписание.Должность,
	|	ШтатноеРасписание.ПодразделениеОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыШтатногоРасписания.Период КАК Период,
	|	ПериодыШтатногоРасписания.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ПериодыШтатногоРасписания.Должность КАК Должность
	|ПОМЕСТИТЬ ВТПовышенияШтатногоРасписания
	|ИЗ
	|	ВТПериодыШтатногоРасписания КАК ПериодыШтатногоРасписания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтатноеРасписание КАК ШтатноеРасписаниеНовое
	|		ПО ПериодыШтатногоРасписания.ПодразделениеОрганизации = ШтатноеРасписаниеНовое.ПодразделениеОрганизации
	|			И ПериодыШтатногоРасписания.Должность = ШтатноеРасписаниеНовое.Должность
	|			И ПериодыШтатногоРасписания.Период = ШтатноеРасписаниеНовое.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтатноеРасписание КАК ШтатноеРасписаниеСтарое
	|		ПО ПериодыШтатногоРасписания.ПодразделениеОрганизации = ШтатноеРасписаниеСтарое.ПодразделениеОрганизации
	|			И ПериодыШтатногоРасписания.Должность = ШтатноеРасписаниеСтарое.Должность
	|			И ПериодыШтатногоРасписания.ПериодПредыдущий = ШтатноеРасписаниеСтарое.Период
	|ГДЕ
	|	(НЕ ШтатноеРасписаниеСтарое.Период ЕСТЬ NULL )
	|	И ШтатноеРасписаниеНовое.МесячнаяСтавка1 > ШтатноеРасписаниеСтарое.МесячнаяСтавка1
	|	И ШтатноеРасписаниеНовое.МесячнаяСтавка2 > ШтатноеРасписаниеСтарое.МесячнаяСтавка2";
	Запрос.Выполнить();
	
	Если ВернутьСписокШтатныхЕдиниц Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТПовышенияШтатногоРасписания.ПодразделениеОрганизации,
		|	ВТПовышенияШтатногоРасписания.Должность
		|ИЗ
		|	ВТПовышенияШтатногоРасписания КАК ВТПовышенияШтатногоРасписания";
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	Иначе  // получаем периоды повышения штатного расписания
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ШтатноеРасписаниеОрганизацийСрезПоследних.Период) КАК Количество
		|ПОМЕСТИТЬ ВТКоличествоШтатныхЕдиниц
		|ИЗ
		|	РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(&ДатаПовышения, ПодразделениеОрганизации.Владелец = &Организация) КАК ШтатноеРасписаниеОрганизацийСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПовышенияШтатногоРасписания.Период,
		|	КОЛИЧЕСТВО(ВТПовышенияШтатногоРасписания.ПодразделениеОрганизации) КАК Количество
		|ПОМЕСТИТЬ ВТПериодыПовышения
		|ИЗ
		|	ВТПовышенияШтатногоРасписания КАК ВТПовышенияШтатногоРасписания
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТПовышенияШтатногоРасписания.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПериодыПовышения.Период КАК ДатаПовышения
		|ИЗ
		|	ВТПериодыПовышения КАК ВТПериодыПовышения
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоШтатныхЕдиниц КАК ВТКоличествоШтатныхЕдиниц
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВТПериодыПовышения.Количество >= ВТКоличествоШтатныхЕдиниц.Количество / 2";
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецФункции // ПолучитьТаблицуИсторииШтатногоРасписания()

Функция ПолучитьТаблицуИсторииДолжностныхОкладов() Экспорт

	Запрос = Новый Запрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КоэффициентИндексацииЗаработка.Период КАК ДатаПовышения
	|ИЗ
	|	РегистрСведений.КоэффициентИндексацииЗаработка КАК КоэффициентИндексацииЗаработка
	|ГДЕ
	|	КоэффициентИндексацииЗаработка.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	КоэффициентИндексацииЗаработка.Период";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьТаблицуИсторииДолжностныхОкладов()

Функция ПолучитьТаблицуИсторииТарифныхРазрядов(Период = Неопределено, ВернутьСписокТарифныхРазрядов = Ложь) Экспорт

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ДатаПовышения", ДатаПовышения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыТарифов.Период,
	|	ПериодыТарифов.ТарифныйРазряд КАК ТарифныйРазряд,
	|	НЕОПРЕДЕЛЕНО КАК Владелец
	|ПОМЕСТИТЬ ВТПериодыТарифныхРазрядов
	|ИЗ
	|	(ВЫБРАТЬ
	|		РазмерТарифныхСтавок.Период КАК Период,
	|		РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
	|		МАКСИМУМ(РазмерТарифныхСтавокПредыдущийПериод.Период) КАК ПериодПредыдущий
	|	ИЗ
	|		РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавокПредыдущийПериод
	|			ПО РазмерТарифныхСтавок.ТарифныйРазряд = РазмерТарифныхСтавокПредыдущийПериод.ТарифныйРазряд
	|				И РазмерТарифныхСтавок.Период > РазмерТарифныхСтавокПредыдущийПериод.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РазмерТарифныхСтавок.Период,
	|		РазмерТарифныхСтавок.ТарифныйРазряд) КАК ПериодыТарифов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|		ПО ПериодыТарифов.Период = РазмерТарифныхСтавок.Период
	|			И ПериодыТарифов.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавокПредыдущийПериод
	|		ПО ПериодыТарифов.ПериодПредыдущий = РазмерТарифныхСтавокПредыдущийПериод.Период
	|			И ПериодыТарифов.ТарифныйРазряд = РазмерТарифныхСтавокПредыдущийПериод.ТарифныйРазряд
	|ГДЕ
	|	(НЕ РазмерТарифныхСтавокПредыдущийПериод.Период ЕСТЬ NULL )
	|	И РазмерТарифныхСтавок.Валюта = РазмерТарифныхСтавокПредыдущийПериод.Валюта
	|	И РазмерТарифныхСтавок.Размер > РазмерТарифныхСтавокПредыдущийПериод.Размер
	|	И ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТарифныйРазряд";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕОПРЕДЕЛЕНО КАК Владелец", ИндексацияЗаработкаПереопределяемый.ПолучитьПолеВладелецЗапросаПериодыТарифныхРазрядов());
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ИСТИНА", ИндексацияЗаработкаПереопределяемый.ПолучитьУсловиеЗапросаПериодыТарифныхРазрядов());
	Запрос.Выполнить();
	
	Если ВернутьСписокТарифныхРазрядов Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПериодыТарифныхРазрядов.ТарифныйРазряд КАК ТарифныйРазряд,
		|	ПериодыТарифныхРазрядов.Владелец КАК Владелец
		|ИЗ
		|	ВТПериодыТарифныхРазрядов КАК ПериодыТарифныхРазрядов";
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	Иначе  // получаем периоды повышения штатного расписания
		
		Запрос.Текст = ИндексацияЗаработкаПереопределяемый.ПолучитьТекстЗапросаКоличествоПовышенийТарифнойСетки();
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецФункции // ПолучитьТаблицуИсторииТарифныхРазрядов()

Процедура ЗаполнитьТаблицуИстории() Экспорт

	ТаблицаИстории.Очистить();
	
	ТабИсторииШтатногоРасписания = ПолучитьТаблицуИсторииШтатногоРасписания();
	Для каждого СтрокаТЗ Из ТабИсторииШтатногоРасписания Цикл
		НоваяСтрока = ТаблицаИстории.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		НоваяСтрока.ШтатноеРасписание = Истина;
	КонецЦикла;
	
	ТабИсторииДолжностныхОкладов = ПолучитьТаблицуИсторииДолжностныхОкладов();
	Для каждого СтрокаТЗ Из ТабИсторииДолжностныхОкладов Цикл
		НоваяСтрока = ТаблицаИстории.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		НоваяСтрока.ДолжностныеОклады = Истина;
	КонецЦикла;
	
	ТабИсторииТарифныхРазрядов = ПолучитьТаблицуИсторииТарифныхРазрядов();
	Для каждого СтрокаТЗ Из ТабИсторииТарифныхРазрядов Цикл
		НоваяСтрока = ТаблицаИстории.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		НоваяСтрока.ТарифныеРазряды = Истина;
	КонецЦикла;
	
	ТабИсторииДопТарифныхРазрядов = ИндексацияЗаработкаПереопределяемый.ПолучитьТаблицуИсторииДопТарифныхРазрядов(ДатаПовышения);
	Для каждого СтрокаТЗ Из ТабИсторииДопТарифныхРазрядов Цикл
		НоваяСтрока = ТаблицаИстории.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		НоваяСтрока.ДопТарифныеРазряды = Истина;
	КонецЦикла;
	
	ТаблицаИстории.Свернуть("ДатаПовышения", "ШтатноеРасписание,ДолжностныеОклады,ТарифныеРазряды,ДопТарифныеРазряды");
	ТаблицаИстории.Сортировать("ДатаПовышения Убыв");
	
КонецПроцедуры // ЗаполнитьТаблицуИстории()


/////////////////////////////////////////////////
// Заполнение таблиц

Функция ПолучитьТаблицуДолжностныеОклады(ТаблицаПлохихСтрок) Экспорт
	
	ГоловнаяОрганизация = ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаПовышения", ДатаПовышения);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ВидДоговора", ВидДоговора);

	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизацийСрезПоследних.Регистратор,
	|	РаботникиОрганизацийСрезПоследних.Период,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
	|	КОНЕЦ КАК Организация,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ЗанимаемыхСтавокЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ЗанимаемыхСтавок
	|	КОНЕЦ КАК ЗанимаемыхСтавок,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ГрафикРаботыЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ГрафикРаботы
	|	КОНЕЦ КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТРаботникиОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&ДатаПовышения,
	|			Организация = &ГоловнаяОрганизация
	|				И Сотрудник.ВидДоговора = &ВидДоговора) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
	|		КОНЕЦ = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеНачисленияСрезПоследних.Регистратор,
	|	ПлановыеНачисленияСрезПоследних.Период,
	|	ПлановыеНачисленияСрезПоследних.Сотрудник,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.ВидРасчетаЗавершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ВидРасчета
	|	КОНЕЦ КАК ВидРасчета,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Показатель1Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Показатель1
	|	КОНЕЦ КАК Показатель1,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Показатель2Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Показатель2
	|	КОНЕЦ КАК Показатель2,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Показатель3Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Показатель3
	|	КОНЕЦ КАК Показатель3,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Показатель4Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Показатель4
	|	КОНЕЦ КАК Показатель4,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Показатель5Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Показатель5
	|	КОНЕЦ КАК Показатель5,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Показатель6Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Показатель6
	|	КОНЕЦ КАК Показатель6,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.ТарифныйРазряд1Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ТарифныйРазряд1
	|	КОНЕЦ КАК ТарифныйРазряд1,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.ТарифныйРазряд2Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ТарифныйРазряд2
	|	КОНЕЦ КАК ТарифныйРазряд2,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.ТарифныйРазряд3Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ТарифныйРазряд3
	|	КОНЕЦ КАК ТарифныйРазряд3,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.ТарифныйРазряд4Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ТарифныйРазряд4
	|	КОНЕЦ КАК ТарифныйРазряд4,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.ТарифныйРазряд5Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ТарифныйРазряд5
	|	КОНЕЦ КАК ТарифныйРазряд5,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.ТарифныйРазряд6Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ТарифныйРазряд6
	|	КОНЕЦ КАК ТарифныйРазряд6,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Валюта1Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Валюта1
	|	КОНЕЦ КАК Валюта1,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Валюта2Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Валюта2
	|	КОНЕЦ КАК Валюта2,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Валюта3Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Валюта3
	|	КОНЕЦ КАК Валюта3,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Валюта4Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Валюта4
	|	КОНЕЦ КАК Валюта4,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Валюта5Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Валюта5
	|	КОНЕЦ КАК Валюта5,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &ДатаПовышения
	|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеНачисленияСрезПоследних.Валюта6Завершения
	|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.Валюта6
	|	КОНЕЦ КАК Валюта6
	|ПОМЕСТИТЬ ВТОсновныеНачисления
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|			&ДатаПовышения,
	|			ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|				И Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТРаботникиОрганизации.Сотрудник
	|					ИЗ
	|						ВТРаботникиОрганизации)) КАК ПлановыеНачисленияСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеНачисленияПоказатели.Ссылка КАК ВидРасчета,
	|	ОсновныеНачисленияПоказатели.Показатель,
	|	ОсновныеНачисленияПоказатели.НомерСтроки КАК НомерПоказателя
	|ПОМЕСТИТЬ ВТПоказателиНачислений
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияПоказатели
	|ГДЕ
	|	ОсновныеНачисленияПоказатели.Показатель.ТарифнаяСтавка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТРаботникиОрганизации.Период = &ДатаПовышения
	|			ТОГДА ВТРаботникиОрганизации.Регистратор
	|		КОГДА (НЕ КоэффициентИндексацииЗаработка.Период ЕСТЬ NULL )
	|			ТОГДА КоэффициентИндексацииЗаработка.Регистратор
	|		КОГДА ВТОсновныеНачисления.Период = &ДатаПовышения
	|			ТОГДА ВТОсновныеНачисления.Регистратор
	|		ИНАЧЕ ВТРаботникиОрганизации.Регистратор
	|	КОНЕЦ КАК Регистратор,
	|	ВТРаботникиОрганизации.Период,
	|	ВТРаботникиОрганизации.Организация,
	|	ВТРаботникиОрганизации.Сотрудник,
	|	ВТРаботникиОрганизации.Физлицо,
	|	ВТРаботникиОрганизации.Должность,
	|	ВТРаботникиОрганизации.ПодразделениеОрганизации,
	|	ВТРаботникиОрганизации.ЗанимаемыхСтавок,
	|	ВТРаботникиОрганизации.ГрафикРаботы,
	|	ВЫБОР
	|		КОГДА ВТОсновныеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ВТПоказателиНачислений.НомерПоказателя, 1)
	|	КОНЕЦ КАК НомерПоказателяОклада,
	|	ВЫБОР
	|		КОГДА ВТРаботникиОрганизации.Период = &ДатаПовышения
	|				ИЛИ ВТОсновныеНачисления.Период = &ДатаПовышения
	|				ИЛИ (НЕ КоэффициентИндексацииЗаработка.Период ЕСТЬ NULL )
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибки,
	|	ВТОсновныеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
	|	ВТОсновныеНачисления.ВидРасчета,
	|	ВТОсновныеНачисления.Показатель1,
	|	ВТОсновныеНачисления.Показатель2,
	|	ВТОсновныеНачисления.Показатель3,
	|	ВТОсновныеНачисления.Показатель4,
	|	ВТОсновныеНачисления.Показатель5,
	|	ВТОсновныеНачисления.Показатель6,
	|	ВТОсновныеНачисления.ТарифныйРазряд1,
	|	ВТОсновныеНачисления.ТарифныйРазряд2,
	|	ВТОсновныеНачисления.ТарифныйРазряд3,
	|	ВТОсновныеНачисления.ТарифныйРазряд4,
	|	ВТОсновныеНачисления.ТарифныйРазряд5,
	|	ВТОсновныеНачисления.ТарифныйРазряд6,
	|	ВТОсновныеНачисления.Валюта1,
	|	ВТОсновныеНачисления.Валюта2,
	|	ВТОсновныеНачисления.Валюта3,
	|	ВТОсновныеНачисления.Валюта4,
	|	ВТОсновныеНачисления.Валюта5,
	|	ВТОсновныеНачисления.Валюта6,
	|	0 КАК СтарыйОклад,
	|	0 КАК НовыйОклад,
	|	ВТРаботникиОрганизации.Сотрудник.Наименование КАК СотрудникНаименование
	|ИЗ
	|	ВТРаботникиОрганизации КАК ВТРаботникиОрганизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОсновныеНачисления КАК ВТОсновныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНачислений КАК ВТПоказателиНачислений
	|			ПО ВТОсновныеНачисления.ВидРасчета = ВТПоказателиНачислений.ВидРасчета
	|		ПО ВТРаботникиОрганизации.Сотрудник = ВТОсновныеНачисления.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоэффициентИндексацииЗаработка КАК КоэффициентИндексацииЗаработка
	|		ПО ВТРаботникиОрганизации.Сотрудник = КоэффициентИндексацииЗаработка.Сотрудник
	|			И (КоэффициентИндексацииЗаработка.Период = &ДатаПовышения)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование";
	
	ТаблицаВсехСотрудников = Запрос.Выполнить().Выгрузить();
	Отбор = Новый Структура("ЕстьОшибки");
	Отбор.ЕстьОшибки = Ложь;
	ТаблицаОкладов = ТаблицаВсехСотрудников.Скопировать(Отбор);
	Для каждого СтрокаТаблицы Из ТаблицаОкладов Цикл
		Если СтрокаТаблицы.НомерПоказателяОклада > 0 Тогда
			СтрокаТаблицы.СтарыйОклад = СтрокаТаблицы["Показатель"+СтрокаТаблицы.НомерПоказателяОклада];
		КонецЕсли;
		СтрокаТаблицы.НовыйОклад = ОкруглитьСумму(СтрокаТаблицы.СтарыйОклад * КоэффициентПовышения);
	КонецЦикла;
	
	Отбор.ЕстьОшибки = Истина;
	ТаблицаПлохихСтрок = ТаблицаВсехСотрудников.Скопировать(Отбор);
	
	Возврат ТаблицаОкладов;

КонецФункции

Функция ПолучитьТаблицуШтатноеРасписание(ТаблицаПлохихСтрок) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаПовышения", ДатаПовышения);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВидДоговора", ВидДоговора);
	
	Запрос.Текст = ИндексацияЗаработкаПереопределяемый.ПолучитьТекстЗапросаДляШтатногоРасписания(); 
	
	ТаблицаВсехШтатныхЕдиниц = Запрос.Выполнить().Выгрузить();
	Отбор = Новый Структура("ЕстьОшибки");
	Отбор.ЕстьОшибки = Ложь;
	ТаблицаШтатныхЕдиниц = ТаблицаВсехШтатныхЕдиниц.Скопировать(Отбор);
	Для каждого СтрокаТаблицы Из ТаблицаШтатныхЕдиниц Цикл
		СтрокаТаблицы.НоваяМесячнаяСтавка1 = ОкруглитьСумму(СтрокаТаблицы.МесячнаяСтавка1 * КоэффициентПовышения);
		СтрокаТаблицы.НоваяМесячнаяСтавка2 = ОкруглитьСумму(СтрокаТаблицы.МесячнаяСтавка2 * КоэффициентПовышения);
	КонецЦикла;
	
	Отбор.ЕстьОшибки = Истина;
	ТаблицаПлохихСтрок = ТаблицаВсехШтатныхЕдиниц.Скопировать(Отбор);
	
	Возврат ТаблицаШтатныхЕдиниц;

КонецФункции // ПолучитьТаблицуШтатноеРасписание()   

Функция ПолучитьТаблицуТарифныхРазрядов(ТаблицаПлохихСтрок) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаПовышения", ДатаПовышения);
	
	Запрос.Текст = ИндексацияЗаработкаПереопределяемый.ПолучитьТекстЗапросаДляТарифныхРазрядов(); 
	
	ТаблицаВсехТарифныхРазрядов = Запрос.Выполнить().Выгрузить();
	Отбор = Новый Структура("ЕстьОшибки");
	Отбор.ЕстьОшибки = Ложь;
	ТаблицаТарифныхРазрядов = ТаблицаВсехТарифныхРазрядов.Скопировать(Отбор);
	Для каждого СтрокаТаблицы Из ТаблицаТарифныхРазрядов Цикл
		СтрокаТаблицы.НовыйРазмер = ОкруглитьСумму(СтрокаТаблицы.Размер * КоэффициентПовышения);
	КонецЦикла;
	
	Отбор.ЕстьОшибки = Истина;
	ТаблицаПлохихСтрок = ТаблицаВсехТарифныхРазрядов.Скопировать(Отбор);
	
	Возврат ТаблицаТарифныхРазрядов;
	
КонецФункции // ПолучитьТаблицуТарифныхРазрядов()

Функция ПолучитьТаблицуДопТарифныхРазрядов(ТаблицаПлохихСтрок) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаПовышения", ДатаПовышения);
	
	Запрос.Текст = ИндексацияЗаработкаПереопределяемый.ПолучитьТекстЗапросаДляДопТарифныхРазрядов(); 
	
	ТаблицаВсехТарифныхРазрядов = Запрос.Выполнить().Выгрузить();
	Отбор = Новый Структура("ЕстьОшибки");
	Отбор.ЕстьОшибки = Ложь;
	ТаблицаТарифныхРазрядов = ТаблицаВсехТарифныхРазрядов.Скопировать(Отбор);
	Для каждого СтрокаТаблицы Из ТаблицаТарифныхРазрядов Цикл
		СтрокаТаблицы.НовыйРазмер = ОкруглитьСумму(СтрокаТаблицы.Размер * КоэффициентПовышения);
	КонецЦикла;
	
	Отбор.ЕстьОшибки = Истина;
	ТаблицаПлохихСтрок = ТаблицаВсехТарифныхРазрядов.Скопировать(Отбор);
	
	Возврат ТаблицаТарифныхРазрядов;

КонецФункции

////////////////////////////////////////////////
// Регистрация повышений

Функция ЗарегистрироватьИзмененияШтатногоРасписания() Экспорт

	ТаблицаШтатногоРасписания = ИндексацияЗаработкаПереопределяемый.ПолучитьТаблицуДляЗаписиШтаногоРасписания(ЭтотОбъект);
	
	// получим надбавки по тем штатным единицам, которые проиндексируем
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТабШтатноеРасписание", ТаблицаШтатногоРасписания);
	Запрос.УстановитьПараметр("ДатаПовышения", ДатаПовышения);
	Запрос.УстановитьПараметр("Организация", Организация);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШтатноеРасписание.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ШтатноеРасписание.Должность КАК Должность
	|ПОМЕСТИТЬ ВТСписокШтатныхЕдиниц
	|ИЗ
	|	&ТабШтатноеРасписание КАК ШтатноеРасписание
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодразделениеОрганизации,
	|	Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтатноеРасписаниеСрезПоследних.Период,
	|	ШтатноеРасписаниеСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ШтатноеРасписаниеСрезПоследних.Должность КАК Должность
	|ПОМЕСТИТЬ ВТШтатноеРасписаниеСрез
	|ИЗ
	|	РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(&ДатаПовышения, ПодразделениеОрганизации.Владелец = &Организация) КАК ШтатноеРасписаниеСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСписокШтатныхЕдиниц КАК СписокШтатныхЕдиниц
	|		ПО ШтатноеРасписаниеСрезПоследних.ПодразделениеОрганизации = СписокШтатныхЕдиниц.ПодразделениеОрганизации
	|			И ШтатноеРасписаниеСрезПоследних.Должность = СписокШтатныхЕдиниц.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ДатаПовышения КАК Период,
	|	НадбавкиПоШтатномуРасписанию.ПодразделениеОрганизации,
	|	НадбавкиПоШтатномуРасписанию.Должность,
	|	НадбавкиПоШтатномуРасписанию.ВидНадбавки,
	|	НадбавкиПоШтатномуРасписанию.Показатель1,
	|	НадбавкиПоШтатномуРасписанию.Показатель2,
	|	НадбавкиПоШтатномуРасписанию.Показатель3,
	|	НадбавкиПоШтатномуРасписанию.Показатель4,
	|	НадбавкиПоШтатномуРасписанию.Показатель5,
	|	НадбавкиПоШтатномуРасписанию.Показатель6,
	|	НадбавкиПоШтатномуРасписанию.Валюта1,
	|	НадбавкиПоШтатномуРасписанию.Валюта2,
	|	НадбавкиПоШтатномуРасписанию.Валюта3,
	|	НадбавкиПоШтатномуРасписанию.Валюта4,
	|	НадбавкиПоШтатномуРасписанию.Валюта5,
	|	НадбавкиПоШтатномуРасписанию.Валюта6
	|ИЗ
	|	РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиПоШтатномуРасписанию
	|ГДЕ
	|	(НадбавкиПоШтатномуРасписанию.Период, НадбавкиПоШтатномуРасписанию.ПодразделениеОрганизации, НадбавкиПоШтатномуРасписанию.Должность) В
	|			(ВЫБРАТЬ
	|				ВТШтатноеРасписаниеСрез.Период,
	|				ВТШтатноеРасписаниеСрез.ПодразделениеОрганизации,
	|				ВТШтатноеРасписаниеСрез.Должность
	|			ИЗ
	|				ВТШтатноеРасписаниеСрез)";
    ТаблицаНадбавок = Запрос.Выполнить().Выгрузить();

	// запишем штатное расписание
	НаборЗаписей = РегистрыСведений.ШтатноеРасписаниеОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаПовышения);
	Для каждого СтрокаТЗ Из ТаблицаШтатногоРасписания Цикл
		
		НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(СтрокаТЗ.ПодразделениеОрганизации);
		НаборЗаписей.Отбор.Должность.Установить(СтрокаТЗ.Должность);
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = ДатаПовышения;
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТЗ);
		
		Если Не ОбщегоНазначенияЗК.ЗаписатьНабор(НаборЗаписей) Тогда
			Возврат Ложь
		КонецЕсли;
		
		НаборЗаписей.Очистить();
	
	КонецЦикла;
	
	// Запишем надбавки по штатному расписанию
	НаборЗаписей = РегистрыСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаПовышения);
	Для каждого СтрокаТЗ Из ТаблицаШтатногоРасписания Цикл
		
		НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(СтрокаТЗ.ПодразделениеОрганизации);
		НаборЗаписей.Отбор.Должность.Установить(СтрокаТЗ.Должность);
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ПодразделениеОрганизации", СтрокаТЗ.ПодразделениеОрганизации);
		СтруктураПоиска.Вставить("Должность", СтрокаТЗ.Должность);
		
		СтрокиТаблицыНадбавок = ТаблицаНадбавок.НайтиСтроки(СтруктураПоиска);
		
		Для каждого СтрокаТН Из СтрокиТаблицыНадбавок Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), СтрокаТН);
		КонецЦикла; 
		
		Если Не ОбщегоНазначенияЗК.ЗаписатьНабор(НаборЗаписей) Тогда
			Возврат Ложь
		КонецЕсли;
		
		НаборЗаписей.Очистить();
	
	КонецЦикла;
	
	Возврат Истина;

КонецФункции

Функция ЗарегистрироватьИзмененияДолжностныхОкладов() Экспорт

	ДокументПеремещение = Документы.КадровоеПеремещениеОрганизаций.СоздатьДокумент();
	ДокументПеремещение.Дата  							= ДатаПовышения;
	ДокументПеремещение.ИндексацияЗаработка    			= Истина;
	ДокументПеремещение.КоэффициентИндексацииЗаработка 	= КоэффициентПовышения;
	ДокументПеремещение.Организация   					= Организация;
	ДокументПеремещение.Ответственный 					= глЗначениеПеременной("глТекущийПользователь");
	ДокументПеремещение.Комментарий = "Индексация заработной платы от " + Формат(ДатаПовышения, "ДФ=dd.MM.yyyy") + ", коэффициент повышения: " +КоэффициентПовышения;
	
	ДокументИндексации = Документы.ВводКоэффициентовИндексацииЗаработка.СоздатьДокумент();
	ДокументИндексации.Дата  				= ДатаПовышения;
	ДокументИндексации.ПериодРегистрации	= НачалоМесяца(ДатаПовышения);
	ДокументИндексации.Коэффициент			= КоэффициентПовышения;
	ДокументИндексации.Организация   		= Организация;
	ДокументИндексации.Ответственный 		= глЗначениеПеременной("глТекущийПользователь");
	ДокументИндексации.Комментарий = "Индексация заработной платы от " + Формат(ДатаПовышения, "ДФ=dd.MM.yyyy") + ", коэффициент повышения: " +КоэффициентПовышения;
	
	Для каждого СтрокаТЧ Из ДолжностныеОклады Цикл
		
		Если СтрокаТЧ.НомерПоказателяОклада > 0 и СтрокаТЧ.НовыйОклад <> 0 Тогда
			
			НоваяСтрока = ДокументПеремещение.РаботникиОрганизации.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			НоваяСтрока.ДатаНачала = ДатаПовышения;
			
			НоваяСтрока = ДокументПеремещение.ОсновныеНачисления.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			НоваяСтрока.Действие = Перечисления.ВидыДействияСНачислением.Изменить;
			НоваяСтрока["Показатель"+СтрокаТЧ.НомерПоказателяОклада] = СтрокаТЧ.НовыйОклад;
			
		ИначеЕсли СтрокаТЧ.НомерПоказателяОклада = 0 Тогда
			
			ЗаполнитьЗначенияСвойств(ДокументИндексации.РаботникиОрганизации.Добавить(), СтрокаТЧ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументПеремещение.РаботникиОрганизации.Количество() > 0 Тогда
		
		Попытка
			ДокументПеремещение.Записать(РежимЗаписиДокумента.Проведение); 
		Исключение
			
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПолучитьПричинуОшибки(ИнформацияОбОшибке()).Описание);
			
			Возврат Ложь;
			
		КонецПопытки;
		
	КонецЕсли;
	
	Если ДокументИндексации.РаботникиОрганизации.Количество() > 0 Тогда
		
		Попытка
			ДокументИндексации.Записать(РежимЗаписиДокумента.Проведение); 
		Исключение
			
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПолучитьПричинуОшибки(ИнформацияОбОшибке()).Описание);
			
			Возврат Ложь;
			
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

Функция ЗарегистрироватьИзмененияТарифныхРазрядов() Экспорт

	ТаблицаТарифныеРазряды = ТарифныеРазряды.Выгрузить();
	ТаблицаТарифныеРазряды.Колонки.Размер.Имя = "СтарыйРазмер";
	ТаблицаТарифныеРазряды.Колонки.НовыйРазмер.Имя = "Размер";
	
	НаборЗаписей = РегистрыСведений.РазмерТарифныхСтавок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаПовышения);
	Для каждого СтрокаТЗ Из ТаблицаТарифныеРазряды Цикл
		
		НаборЗаписей.Отбор.ТарифныйРазряд.Установить(СтрокаТЗ.ТарифныйРазряд);
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = ДатаПовышения;
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТЗ);
		
		Если Не ОбщегоНазначенияЗК.ЗаписатьНабор(НаборЗаписей) Тогда
			Возврат Ложь
		КонецЕсли;
		
		НаборЗаписей.Очистить();
	
	КонецЦикла;
	
	Возврат Истина;

КонецФункции // ЗарегистрироватьИзмененияТарифныхРазрядов()

////////////////////////////////////////////////
// Отмена повышений

Функция ОтменитьПовышениеДолжностныхОкладов(ДатаОтмены) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОтмены", ДатаОтмены);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КоэффициентИндексацииЗаработка.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.КоэффициентИндексацииЗаработка КАК КоэффициентИндексацииЗаработка
	|ГДЕ
	|	КоэффициентИндексацииЗаработка.Организация = &Организация
	|	И КоэффициентИндексацииЗаработка.Период = &ДатаОтмены
	|
	|СГРУППИРОВАТЬ ПО
	|	КоэффициентИндексацииЗаработка.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";
	
	РезультатаЗапроса = Запрос.Выполнить();
	Выборка = РезультатаЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Исключение
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПолучитьПричинуОшибки(ИнформацияОбОшибке()).Описание);
			Возврат Ложь;
		КонецПопытки;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции // ОтменитьПовышениеДолжностныхОкладов()
 
Функция ОтменитьПовышениеШтатноеРасписание(ДатаОтмены) Экспорт

	ТаблицаШтатногоРасписания = ПолучитьТаблицуИсторииШтатногоРасписания(ДатаОтмены, Истина);
	
	НаборЗаписей = РегистрыСведений.ШтатноеРасписаниеОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаОтмены);
	Для каждого СтрокаТЗ Из ТаблицаШтатногоРасписания Цикл
		
		НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(СтрокаТЗ.ПодразделениеОрганизации);
		НаборЗаписей.Отбор.Должность.Установить(СтрокаТЗ.Должность);
		Если Не ОбщегоНазначенияЗК.ЗаписатьНабор(НаборЗаписей) Тогда
			Возврат Ложь
		КонецЕсли;
	
	КонецЦикла;
	
	// Запишем надбавки по штатному расписанию
	НаборЗаписей = РегистрыСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаОтмены);
	Для каждого СтрокаТЗ Из ТаблицаШтатногоРасписания Цикл
		
		НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(СтрокаТЗ.ПодразделениеОрганизации);
		НаборЗаписей.Отбор.Должность.Установить(СтрокаТЗ.Должность);
		
		Если Не ОбщегоНазначенияЗК.ЗаписатьНабор(НаборЗаписей) Тогда
			Возврат Ложь
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции // ОтменитьПовышениеШтатноеРасписание()

Функция ОтменитьПовышениеТарифныхРазрядов(ДатаОтмены) Экспорт

	ТаблицаТарифныеРазряды = ПолучитьТаблицуИсторииТарифныхРазрядов(ДатаОтмены, Истина);
	
	НаборЗаписей = РегистрыСведений.РазмерТарифныхСтавок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаОтмены);
	Для каждого СтрокаТЗ Из ТаблицаТарифныеРазряды Цикл
		
		НаборЗаписей.Отбор.ТарифныйРазряд.Установить(СтрокаТЗ.ТарифныйРазряд);
		Если Не ОбщегоНазначенияЗК.ЗаписатьНабор(НаборЗаписей) Тогда
			Возврат Ложь
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции // ОтменитьПовышениеШтатноеРасписание()







