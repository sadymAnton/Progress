
//Перем спСправочники Экспорт;

//////////////////////////////
///////ЗАПРОСЫ ПО КУБАМ///////
//////////////////////////////

Процедура ЗапросКуб_АнализПервичныхПродаж()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПродажиОбороты.КоличествоОборот КАК Продажи_количество,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_с_НДС,
	               |	ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот КАК Сумма_скидки_с_НДС,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.СтоимостьБезСкидокОборот = ПродажиОбороты.СтоимостьОборот
	               |			ТОГДА 0
	               |		ИНАЧЕ ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот
	               |	КОНЕЦ КАК Сумма_скидки_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_в_валюте_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_в_валюте_с_НДС,
	               |	Запр.Сумма_скидки_Итого_с_НДС КАК Сумма_скидки_Итого_с_НДС,
	               |	Запр.Сумма_скидки_Итого_без_НДС КАК Сумма_скидки_Итого_без_НДС,
	               |	ПродажиОбороты.ДокументПродажи.Склад КАК Склад,
	               |	ПродажиОбороты.Номенклатура КАК КодSKU,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.СтоимостьБезСкидокОборот = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ (ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот) / ПродажиОбороты.СтоимостьБезСкидокОборот
	               |	КОНЕЦ КАК Скидка,
	               |	ПродажиОбороты.ДокументПродажи.Дата КАК ДатаПродажи,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки = ЗНАЧЕНИЕ(Справочник.АдресаПоставки.ПустаяСсылка)
	               |				ИЛИ ПродажиОбороты.ПРГАдресПоставки = НЕОПРЕДЕЛЕНО
	               |			ТОГДА ПродажиОбороты.ДокументПродажи.Грузополучатель
	               |		ИНАЧЕ ПродажиОбороты.ПРГАдресПоставки
	               |	КОНЕЦ КАК АдресПоставки,
	               |	ВЫБОР
	               |		КОГДА ВЫБОР
	               |				КОГДА ПродажиОбороты.ПРГАдресПоставки = ЗНАЧЕНИЕ(справочник.АдресаПоставки.ПустаяСсылка)
	               |						ИЛИ ПродажиОбороты.ПРГАдресПоставки = НЕОПРЕДЕЛЕНО
	               |					ТОГДА ПродажиОбороты.ДокументПродажи.Грузополучатель
	               |				ИНАЧЕ ПродажиОбороты.ПРГАдресПоставки
	               |			КОНЕЦ ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ""АдресаПоставки""
	               |		ИНАЧЕ ""Контрагенты""
	               |	КОНЕЦ КАК ТипСправочника_АдресПоставки,
	               |	ПродажиОбороты.Регистратор КАК Документ,
	               |	ПродажиОбороты.Регистратор.Номер КАК НомерДокумента,
	               |	ПродажиОбороты.Регистратор.Сделка.Номер КАК НомерЗаказаПокупателя,
	               |	ПродажиОбороты.Регистратор.ВалютаДокумента КАК ВалютаДокумента,
	               |	ПродажиОбороты.Регистратор.Дата КАК ДатаДокумента,
	               |	ПродажиОбороты.Регистратор.Сделка.КП_УсловиеПоставки КАК КП_УсловиеПоставки,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	               |			ТОГДА ""Продажа""
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ПродажиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	               |					ТОГДА ""Возврат""
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА ПродажиОбороты.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	               |							ТОГДА ""КорректировкаРеализации""
	               |						ИНАЧЕ ВЫБОР
	               |								КОГДА ПродажиОбороты.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
	               |									ТОГДА ""КорректировкаЗаписейРегистров""
	               |								ИНАЧЕ """"
	               |							КОНЕЦ
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ВидДокумента
	               |{ВЫБРАТЬ
	               |	Продажи_количество,
	               |	Продажи_без_НДС,
	               |	Продажи_с_НДС,
	               |	Сумма_скидки_с_НДС,
	               |	Сумма_скидки_без_НДС,
	               |	Продажи_в_валюте_без_НДС,
	               |	Продажи_в_валюте_с_НДС,
	               |	Сумма_скидки_Итого_с_НДС,
	               |	Сумма_скидки_Итого_без_НДС,
	               |	Склад.*,
	               |	КодSKU.*,
	               |	Скидка,
	               |	ДатаПродажи,
	               |	АдресПоставки.*,
	               |	ТипСправочника_АдресПоставки,
	               |	Документ.*,
	               |	НомерДокумента,
	               |	ДатаДокумента,
	               |	ВалютаДокумента.*,
	               |	НомерЗаказаПокупателя,
	               |	КП_УсловиеПоставки.*,
	               |	ВидДокумента}
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода {(&НачалоПериода)}, &КонецПериода {(&КонецПериода)}, Регистратор, ) КАК ПродажиОбороты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ПродажиОборотыВлож.ДокументПродажи КАК ДокументПродажи,
	               |			СУММА(ПродажиОборотыВлож.СтоимостьБезСкидокОборот - ПродажиОборотыВлож.СтоимостьОборот) КАК Сумма_скидки_Итого_с_НДС,
	               |			СУММА(ВЫБОР
	               |					КОГДА ПродажиОборотыВлож.СтоимостьБезСкидокОборот = ПродажиОборотыВлож.СтоимостьОборот
	               |						ТОГДА 0
	               |					ИНАЧЕ ПродажиОборотыВлож.СтоимостьБезСкидокОборот - ПродажиОборотыВлож.СтоимостьОборот - ПродажиОборотыВлож.НДСОборот
	               |				КОНЕЦ) КАК Сумма_скидки_Итого_без_НДС,
	               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажиОборотыВлож.Номенклатура) КАК КоличествоSKU
	               |		ИЗ
	               |			РегистрНакопления.Продажи.Обороты(&НачалоПериода {(&НачалоПериода)}, &КонецПериода {(&КонецПериода)}, , ) КАК ПродажиОборотыВлож
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ПродажиОборотыВлож.ДокументПродажи) КАК Запр
	               |		ПО (Запр.ДокументПродажи = ПродажиОбороты.ДокументПродажи)
	               |{ГДЕ
	               |	Запр.ДокументПродажи.*,
	               |	ПродажиОбороты.ДокументПродажи.Склад.* КАК Склад,
	               |	ПродажиОбороты.Номенклатура.*,
	               |	ПродажиОбороты.ПРГАдресПоставки.* КАК АдресПоставки,
	               |	ПродажиОбороты.ДокументПродажи.*}
	               |{ИТОГИ ПО
	               |	Продажи_количество,
	               |	Продажи_без_НДС,
	               |	Продажи_с_НДС,
	               |	Сумма_скидки_с_НДС,
	               |	Сумма_скидки_без_НДС,
	               |	Продажи_в_валюте_без_НДС,
	               |	Продажи_в_валюте_с_НДС,
	               |	Сумма_скидки_Итого_с_НДС,
	               |	Сумма_скидки_Итого_без_НДС,
	               |	Склад.*,
	               |	КодSKU.*,
	               |	Скидка,
	               |	ДатаПродажи,
	               |	АдресПоставки.*,
	               |	ТипСправочника_АдресПоставки,
	               |	Документ.*,
	               |	НомерДокумента,
	               |	ДатаДокумента,
	               |	ВалютаДокумента.*,
	               |	НомерЗаказаПокупателя,
	               |	КП_УсловиеПоставки.*,
	               |	ВидДокумента}";
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	ПостроительОтчета.Текст = ТекстЗапроса;
	мУниверсальныйОтчет = Отчеты.УниверсальныйОтчет.Создать();
	мУниверсальныйОтчет.ПостроительОтчета = ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	СтруктураПредставлениеПолей.Вставить("АдресПоставки", "Адрес поставки");
	СтруктураПредставлениеПолей.Вставить("ДатаПродажи", "Дата продажи");
	СтруктураПредставлениеПолей.Вставить("ДокументПродажи", "Документ продажи");
	
	мУниверсальныйОтчет.УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
		
КонецПроцедуры

Процедура ЗапросКуб_СкладскойАнализ()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код, """") КАК Бренд,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект, """") КАК Проект,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.НСИ_Брендообъем, """") КАК Брендообъем,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.МКЮ.Код, """") КАК КодMKU,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.МКЮ.Наименование, """") КАК НаименованиеMKU,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.Код, """") КАК КодSKU,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.Наименование, """") КАК НаименованиеSKU,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Склад.Код, """") КАК КодСклада,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Склад.ВидСклада, """") КАК ТипСклада,
	               |	ТоварыНаСкладахОстаткиИОбороты.Регистратор КАК ДокументВыработки,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток, 0) КАК ОстатокКоличество,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.КоличествоОборот, 0) КАК КоличествоОборот,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.КоличествоПриход, 0) КАК ВыработкаШТ
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Регистратор, , ) КАК ТоварыНаСкладахОстаткиИОбороты
	               |{ГДЕ
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код, """")) КАК Бренд,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект, """")).* КАК Проект,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.НСИ_Брендообъем, """")).* КАК Брендообъем,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.МКЮ.Код, """")) КАК КодMKU,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.МКЮ.Наименование, """")) КАК НаименованиеMKU,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.Код, """")) КАК КодSKU,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Номенклатура.Наименование, """")) КАК НаименованиеSKU,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Склад.Код, """")) КАК КодСклада,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.Склад.ВидСклада, """")).* КАК ТипСклада,
	               |	ТоварыНаСкладахОстаткиИОбороты.Регистратор.* КАК ДокументВыработки,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток, 0)) КАК ОстатокКоличество,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.КоличествоОборот, 0)) КАК КоличествоОборот,
	               |	(ЕСТЬNULL(ТоварыНаСкладахОстаткиИОбороты.КоличествоПриход, 0)) КАК ВыработкаШТ,
	               |	ТоварыНаСкладахОстаткиИОбороты.Регистратор.Организация.* КАК Организация}";
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	ПостроительОтчета.Текст = ТекстЗапроса;
	мУниверсальныйОтчет = Отчеты.УниверсальныйОтчет.Создать();
	мУниверсальныйОтчет.ПостроительОтчета = ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	
	мУниверсальныйОтчет.УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);

КонецПроцедуры

Процедура ЗапросКуб_Дебиторка()
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВзаиморасчетыСКонтрагентами.Организация КАК Организация,
	               |	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |	ВзаиморасчетыСКонтрагентами.Контрагент КАК Контрагент,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |				ТОГДА ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |							ТОГДА 0
	               |						ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |					КОНЕЦ
	               |			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |				ТОГДА ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |							ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |						ИНАЧЕ 0
	               |					КОНЕЦ
	               |		КОНЕЦ) КАК ПриходКон,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |				ТОГДА ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |							ТОГДА 0
	               |						ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |					КОНЕЦ
	               |			КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |				ТОГДА ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |							ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |						ИНАЧЕ 0
	               |					КОНЕЦ
	               |		КОНЕЦ) КАК РасходКон,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВзаиморасчетыСКонтрагентами.Период < &НачалоПериода
	               |				ТОГДА ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |							ТОГДА ВЫБОР
	               |									КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |										ТОГДА 0
	               |									ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |								КОНЕЦ
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |							ТОГДА ВЫБОР
	               |									КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |										ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |									ИНАЧЕ 0
	               |								КОНЕЦ
	               |					КОНЕЦ
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ПриходНач,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВзаиморасчетыСКонтрагентами.Период < &НачалоПериода
	               |				ТОГДА ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |							ТОГДА ВЫБОР
	               |									КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |										ТОГДА 0
	               |									ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |								КОНЕЦ
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |							ТОГДА ВЫБОР
	               |									КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |										ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |									ИНАЧЕ 0
	               |								КОНЕЦ
	               |					КОНЕЦ
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК РасходНач,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &НачалоПериода И &КонецПериода
	               |				ТОГДА ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |							ТОГДА ВЫБОР
	               |									КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |										ТОГДА 0
	               |									ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |								КОНЕЦ
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |							ТОГДА ВЫБОР
	               |									КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |										ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |									ИНАЧЕ 0
	               |								КОНЕЦ
	               |					КОНЕЦ
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Приход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &НачалоПериода И &КонецПериода
	               |				ТОГДА ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |							ТОГДА ВЫБОР
	               |									КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |										ТОГДА 0
	               |									ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |								КОНЕЦ
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |							ТОГДА ВЫБОР
	               |									КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |										ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |									ИНАЧЕ 0
	               |								КОНЕЦ
	               |					КОНЕЦ
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Расход
	               |ПОМЕСТИТЬ ТаблКонтр
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	               |ГДЕ
	               |	ВзаиморасчетыСКонтрагентами.Период <= &КонецПериода
	               |	И ВзаиморасчетыСКонтрагентами.Активность
	               |	И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВидДоговора В(&ВидДоговора)
	               |{ГДЕ
	               |	ВзаиморасчетыСКонтрагентами.Контрагент.*,
	               |	ВзаиморасчетыСКонтрагентами.Организация.*}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВзаиморасчетыСКонтрагентами.Организация,
	               |	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента,
	               |	ВзаиморасчетыСКонтрагентами.Контрагент
	               |
	               |ИМЕЮЩИЕ
	               |	(СУММА(ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |					ТОГДА ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |								ТОГДА 0
	               |							ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |						КОНЕЦ
	               |				КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |					ТОГДА ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |								ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |							ИНАЧЕ 0
	               |						КОНЕЦ
	               |			КОНЕЦ - ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |					ТОГДА ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |								ТОГДА 0
	               |							ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |						КОНЕЦ
	               |				КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |					ТОГДА ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |								ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |							ИНАЧЕ 0
	               |						КОНЕЦ
	               |			КОНЕЦ) <> 0
	               |		ИЛИ СУММА(ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.Период < &НачалоПериода
	               |					ТОГДА ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |								ТОГДА ВЫБОР
	               |										КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |											ТОГДА 0
	               |										ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |									КОНЕЦ
	               |							КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |								ТОГДА ВЫБОР
	               |										КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |											ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |										ИНАЧЕ 0
	               |									КОНЕЦ
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ - ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.Период < &НачалоПериода
	               |					ТОГДА ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |								ТОГДА ВЫБОР
	               |										КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |											ТОГДА 0
	               |										ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |									КОНЕЦ
	               |							КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |								ТОГДА ВЫБОР
	               |										КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |											ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |										ИНАЧЕ 0
	               |									КОНЕЦ
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ) <> 0
	               |		ИЛИ СУММА(ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &НачалоПериода И &КонецПериода
	               |					ТОГДА ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |								ТОГДА ВЫБОР
	               |										КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |											ТОГДА 0
	               |										ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |									КОНЕЦ
	               |							КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |								ТОГДА ВЫБОР
	               |										КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |											ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |										ИНАЧЕ 0
	               |									КОНЕЦ
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ) <> 0
	               |		ИЛИ СУММА(ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.Период МЕЖДУ &НачалоПериода И &КонецПериода
	               |					ТОГДА ВЫБОР
	               |							КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |								ТОГДА ВЫБОР
	               |										КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |											ТОГДА 0
	               |										ИНАЧЕ ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |									КОНЕЦ
	               |							КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |								ТОГДА ВЫБОР
	               |										КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |											ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |										ИНАЧЕ 0
	               |									КОНЕЦ
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ) <> 0)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Организация,
	               |	ДоговорКонтрагента,
	               |	Контрагент
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Контрагент.Код КАК КодКлиента,
	               |	Дебиторка.Регистратор.Дата КАК ДатаУчетаДокумента,
	               |	Дебиторка.ДатаОплаты,
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Контрагент.НСИ_Вывеска КАК Вывеска
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Регистратор, , ) КАК ВзаиморасчетыСКонтрагентамиОстаткиИОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВзаиморасчетыСКонтрагентами.Организация КАК Организация,
	               |			ВзаиморасчетыСКонтрагентами.Контрагент КАК Контрагент,
	               |			ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |			ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.АП_ДатаДокумента <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |					ТОГДА ВзаиморасчетыСКонтрагентами.АП_ДатаДокумента
	               |				ИНАЧЕ ВзаиморасчетыСКонтрагентами.Период
	               |			КОНЕЦ КАК Дата,
	               |			ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.АП_ДокументДвижения <> &ПустойДокумент
	               |					ТОГДА ВзаиморасчетыСКонтрагентами.АП_ДокументДвижения
	               |				ИНАЧЕ ВзаиморасчетыСКонтрагентами.Регистратор
	               |			КОНЕЦ КАК Регистратор,
	               |			ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.АП_ДатаОплаты <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |					ТОГДА ВзаиморасчетыСКонтрагентами.АП_ДатаОплаты
	               |				КОГДА ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	               |					ТОГДА РеализацияТоваровУслуг.АП_ДатаОплаты
	               |				ИНАЧЕ ВзаиморасчетыСКонтрагентами.Период
	               |			КОНЕЦ КАК ДатаОплаты,
	               |			СУММА(ВЫБОР
	               |					КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов > 0
	               |									ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход)
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |									ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК Приход,
	               |			СУММА(ВЫБОР
	               |					КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход)
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов > 0
	               |									ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов < 0
	               |									ТОГДА ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетов * -1
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК Расход,
	               |			СУММА(ТаблКонтр.ПриходНач) КАК ПриходНач,
	               |			СУММА(ТаблКонтр.РасходНач) КАК РасходНач,
	               |			СУММА(ТаблКонтр.ПриходКон) КАК ПриходКон,
	               |			СУММА(ТаблКонтр.РасходКон) КАК РасходКон
	               |		ИЗ
	               |			РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |				ПО ВзаиморасчетыСКонтрагентами.Регистратор = РеализацияТоваровУслуг.Ссылка
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблКонтр КАК ТаблКонтр
	               |				ПО ВзаиморасчетыСКонтрагентами.Организация = ТаблКонтр.Организация
	               |					И ВзаиморасчетыСКонтрагентами.Контрагент = ТаблКонтр.Контрагент
	               |					И ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента = ТаблКонтр.ДоговорКонтрагента
	               |		ГДЕ
	               |			ВзаиморасчетыСКонтрагентами.Период <= &НачалоПериода
	               |			И ВзаиморасчетыСКонтрагентами.Активность
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВзаиморасчетыСКонтрагентами.Организация,
	               |			ВзаиморасчетыСКонтрагентами.Контрагент,
	               |			ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента,
	               |			ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.АП_ДатаДокумента <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |					ТОГДА ВзаиморасчетыСКонтрагентами.АП_ДатаДокумента
	               |				ИНАЧЕ ВзаиморасчетыСКонтрагентами.Период
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.АП_ДокументДвижения <> &ПустойДокумент
	               |					ТОГДА ВзаиморасчетыСКонтрагентами.АП_ДокументДвижения
	               |				ИНАЧЕ ВзаиморасчетыСКонтрагентами.Регистратор
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА ВзаиморасчетыСКонтрагентами.АП_ДатаОплаты <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |					ТОГДА ВзаиморасчетыСКонтрагентами.АП_ДатаОплаты
	               |				КОГДА ВзаиморасчетыСКонтрагентами.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	               |					ТОГДА РеализацияТоваровУслуг.АП_ДатаОплаты
	               |				ИНАЧЕ ВзаиморасчетыСКонтрагентами.Период
	               |			КОНЕЦ) КАК Дебиторка
	               |		ПО (Дебиторка.Контрагент = ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Контрагент)
	               |			И (Дебиторка.Организация = ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Организация)";
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	МассивВидовДоговоров = Новый Массив;
	МассивВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	//МассивВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.Прочее);
	МассивВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	ПостроительОтчета.Параметры.Вставить("ВидДоговора", МассивВидовДоговоров);
	ПостроительОтчета.Параметры.Вставить("ПустойДокумент", Документы.ДокументРасчетовСКонтрагентом.ПустаяСсылка());
	ПостроительОтчета.Текст = ТекстЗапроса;
	мУниверсальныйОтчет = Отчеты.УниверсальныйОтчет.Создать();
	мУниверсальныйОтчет.ПостроительОтчета = ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	
	мУниверсальныйОтчет.УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);

КонецПроцедуры

Процедура ЗапросКуб_Себестоимость()

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПродажиОбороты.КоличествоОборот КАК Продажи_количество,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_с_НДС,
	               |	ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот КАК Сумма_скидки_с_НДС,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.СтоимостьБезСкидокОборот = ПродажиОбороты.СтоимостьОборот
	               |			ТОГДА 0
	               |		ИНАЧЕ ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот
	               |	КОНЕЦ КАК Сумма_скидки_без_НДС,
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код, """") КАК АдресПоставки,
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент.НСИ_Страна.Наименование, """") КАК Страна,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента, """") КАК Канал,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Дивизион,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Офис,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента, """") КАК Вывеска,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.КаналПродаж, """")
	               |		ИНАЧЕ ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КаналПродаж, """")
	               |	КОНЕЦ КАК КаналТП,
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент.НСИ_Вывеска, """") КАК ТорговаяМарка,
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент.НСИ_Город, """") КАК Город,
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент.НСИ_Регион, """") КАК Регион,
	               |	ЕСТЬNULL(ПродажиОбороты.ДокументПродажи.Номер, """") КАК НомерДокумента,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Адрес,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КлассТТ, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КлассТочки,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.Дивизион, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КАМ,
	               |	ЕСТЬNULL(КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Код, """") КАК КодКАМ,
	               |	ЕСТЬNULL(КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Наименование, """") КАК ИмяКАМ,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КодТП,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки, """") КАК АдресДоставки,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Наименование, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК ИмяТП,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код, """") КАК Бренд,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект, """") КАК Проект,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_Брендообъем, """") КАК Брендообъем,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Код, """") КАК КодMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Наименование, """") КАК НаименованиеMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Код, """") КАК КодSKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Наименование, """") КАК НаименованиеSKU
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода , &КонецПериода , Регистратор, ) КАК ПродажиОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.МенеджерыПокупателя КАК КонтрагентыМенеджерыПокупателя
	               |		ПО ПродажиОбороты.Контрагент = КонтрагентыМенеджерыПокупателя.Ссылка
	               |{ГДЕ
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ПродажиОбороты.ДокументПродажи.Номер КАК НомерДокумента,
	               |	ПродажиОбороты.Контрагент.НСИ_Страна.Наименование КАК Страна,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Адрес,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_КлассТТ
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КлассТочки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.КаналПродаж
	               |			ИНАЧЕ ПродажиОбороты.ПРГАдресПоставки.НСИ_КаналПродаж
	               |		КОНЕЦ).* КАК КаналТП,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК ДивизионКАМ,
	               |	(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код) КАК ПолныйКодКлиента,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Код КАК КодКАМ,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Наименование КАК ИмяКАМ,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КодТП,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента.* КАК Канал,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки КАК АдресДоставки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Дивизион,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Офис,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Наименование
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК ИмяТП,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код КАК Бренд,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект.* КАК Проект,
	               |	ПродажиОбороты.Номенклатура.НСИ_Брендообъем.* КАК Брендообъем,
	               |	ПродажиОбороты.Номенклатура.Производитель.Код КАК КодПроизводителя,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Код КАК КодMKU,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Наименование КАК НаименованиеMKU,
	               |	ПродажиОбороты.Номенклатура.Вкус.Наименование КАК ВкусMKU,
	               |	ПродажиОбороты.Номенклатура.Код КАК КодSKU,
	               |	ПродажиОбороты.Номенклатура.Наименование КАК НаименованиеSKU,
	               |	ПродажиОбороты.ДокументПродажи.Дата КАК ДатаПродажи,
	               |	(НЕДЕЛЯ(ПродажиОбороты.ДокументПродажи.Дата)) КАК НеделяПродажи,
	               |	(ГОД(ПродажиОбороты.ДокументПродажи.Дата)) КАК ГодПродажи,
	               |	(МЕСЯЦ(ПродажиОбороты.ДокументПродажи.Дата)) КАК МесяцПродажи,
	               |	ПродажиОбороты.Организация.*}";
	
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	ПостроительОтчета.Текст = ТекстЗапроса;
	мУниверсальныйОтчет = Отчеты.УниверсальныйОтчет.Создать();
	мУниверсальныйОтчет.ПостроительОтчета = ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	
	мУниверсальныйОтчет.УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
КонецПроцедуры

Процедура ЗапросКуб_Отчет2()

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПродажиОбороты.КоличествоОборот КАК Продажи_количество,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_с_НДС,
	               |	ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот КАК Сумма_скидки_с_НДС,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.СтоимостьБезСкидокОборот = ПродажиОбороты.СтоимостьОборот
	               |			ТОГДА 0
	               |		ИНАЧЕ ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот
	               |	КОНЕЦ КАК Сумма_скидки_без_НДС,
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код, """") КАК АдресПоставки,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Наименование, """") КАК ТорговыйПредставительИмя,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КодТП,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента, """") КАК Канал,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Дивизион,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Офис,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_Регион, """") КАК Регион,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_Город, """") КАК Город,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код, """") КАК Бренд,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект, """") КАК Проект,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_Брендообъем.Наименование, """") КАК Брендообъем,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_Брендообъем.Код, """") КАК БрендообъемКод,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Код, """") КАК КодMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Наименование, """") КАК НаименованиеMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Код, """") КАК КодSKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Наименование, """") КАК НаименованиеSKU,
	               |	ЕСТЬNULL(ПродажиОбороты.ДокументПродажи.Дата, """") КАК ДатаПродажи,
	               |	НЕДЕЛЯ(ПродажиОбороты.ДокументПродажи.Дата) КАК НеделяПродажи,
	               |	ГОД(ПродажиОбороты.ДокументПродажи.Дата) КАК ГодПродажи,
	               |	МЕСЯЦ(ПродажиОбороты.ДокументПродажи.Дата) КАК МесяцПродажи
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ) КАК ПродажиОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.МенеджерыПокупателя КАК КонтрагентыМенеджерыПокупателя
	               |		ПО ПродажиОбороты.Контрагент = КонтрагентыМенеджерыПокупателя.Ссылка
	               |{ГДЕ
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ПродажиОбороты.ДокументПродажи.Номер КАК НомерДокумента,
	               |	ПродажиОбороты.Контрагент.НСИ_Страна.Наименование КАК Страна,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Адрес,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_КлассТТ
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КлассТочки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.КаналПродаж
	               |			ИНАЧЕ ПродажиОбороты.ПРГАдресПоставки.НСИ_КаналПродаж
	               |		КОНЕЦ).* КАК КаналТП,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК ДивизионКАМ,
	               |	(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код) КАК ПолныйКодКлиента,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Код КАК КодКАМ,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Наименование КАК ИмяКАМ,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КодТП,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента.* КАК Канал,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки КАК АдресДоставки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Дивизион,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Офис,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Наименование
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК ИмяТП,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код КАК Бренд,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект.* КАК Проект,
	               |	ПродажиОбороты.Номенклатура.НСИ_Брендообъем.* КАК Брендообъем,
	               |	ПродажиОбороты.Номенклатура.Производитель.Код КАК КодПроизводителя,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Код КАК КодMKU,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Наименование КАК НаименованиеMKU,
	               |	ПродажиОбороты.Номенклатура.Вкус.Наименование КАК ВкусMKU,
	               |	ПродажиОбороты.Номенклатура.Код КАК КодSKU,
	               |	ПродажиОбороты.Номенклатура.Наименование КАК НаименованиеSKU,
	               |	ПродажиОбороты.ДокументПродажи.Дата КАК ДатаПродажи,
	               |	(НЕДЕЛЯ(ПродажиОбороты.ДокументПродажи.Дата)) КАК НеделяПродажи,
	               |	(ГОД(ПродажиОбороты.ДокументПродажи.Дата)) КАК ГодПродажи,
	               |	(МЕСЯЦ(ПродажиОбороты.ДокументПродажи.Дата)) КАК МесяцПродажи,
	               |	ПродажиОбороты.Организация.*,
	               |	ПродажиОбороты.Подразделение.*}";
	
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	ПостроительОтчета.Текст = ТекстЗапроса;
	мУниверсальныйОтчет = Отчеты.УниверсальныйОтчет.Создать();
	мУниверсальныйОтчет.ПостроительОтчета = ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	
	мУниверсальныйОтчет.УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);

КонецПроцедуры

Процедура ЗапросКуб_Отгрузки()

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПродажиОбороты.КоличествоОборот КАК Продажи_количество,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_с_НДС,
	               |	ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот КАК Сумма_скидки_с_НДС,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.СтоимостьБезСкидокОборот = ПродажиОбороты.СтоимостьОборот
	               |			ТОГДА 0
	               |		ИНАЧЕ ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот
	               |	КОНЕЦ КАК Сумма_скидки_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_в_валюте_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_в_валюте_с_НДС,
	               |	Запр.Сумма_скидки_Итого_с_НДС КАК Сумма_скидки_Итого_с_НДС,
	               |	Запр.Сумма_скидки_Итого_без_НДС КАК Сумма_скидки_Итого_без_НДС,
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ЕСТЬNULL(ПродажиОбороты.ДокументПродажи.Номер, """") КАК НомерДокумента,
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент.НСИ_Страна.Наименование, """") КАК Страна,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Адрес,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КлассТТ, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КлассТочки,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.КаналПродаж, """")
	               |		ИНАЧЕ ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КаналПродаж, """")
	               |	КОНЕЦ КАК КаналТП,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.Дивизион, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КАМ,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код, """") КАК АдресПоставки,
	               |	ЕСТЬNULL(КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Код, """") КАК КодКАМ,
	               |	ЕСТЬNULL(КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Наименование, """") КАК ИмяКАМ,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КодТП,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента, """") КАК Канал,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки, """") КАК АдресДоставки,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Дивизион,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Офис,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Наименование, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК ИмяТП,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код, """") КАК Бренд,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект, """") КАК Проект,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_Брендообъем, """") КАК Брендообъем,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Производитель.Код, """") КАК КодПроизводителя,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Код, """") КАК КодMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Наименование, """") КАК НаименованиеMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Вкус.Наименование, """") КАК ВкусMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Код, """") КАК КодSKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Наименование, """") КАК НаименованиеSKU,
	               |	ЕСТЬNULL(ПродажиОбороты.ДокументПродажи.Дата, """") КАК ДатаПродажи,
	               |	НЕДЕЛЯ(ПродажиОбороты.ДокументПродажи.Дата) КАК НеделяПродажи,
	               |	ГОД(ПродажиОбороты.ДокументПродажи.Дата) КАК ГодПродажи,
	               |	МЕСЯЦ(ПродажиОбороты.ДокументПродажи.Дата) КАК МесяцПродажи
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ) КАК ПродажиОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.МенеджерыПокупателя КАК КонтрагентыМенеджерыПокупателя
	               |		ПО ПродажиОбороты.Контрагент = КонтрагентыМенеджерыПокупателя.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ПродажиОборотыВлож.ДокументПродажи КАК ДокументПродажи,
	               |			СУММА(ПродажиОборотыВлож.СтоимостьБезСкидокОборот - ПродажиОборотыВлож.СтоимостьОборот) КАК Сумма_скидки_Итого_с_НДС,
	               |			СУММА(ВЫБОР
	               |					КОГДА ПродажиОборотыВлож.СтоимостьБезСкидокОборот = ПродажиОборотыВлож.СтоимостьОборот
	               |						ТОГДА 0
	               |					ИНАЧЕ ПродажиОборотыВлож.СтоимостьБезСкидокОборот - ПродажиОборотыВлож.СтоимостьОборот - ПродажиОборотыВлож.НДСОборот
	               |				КОНЕЦ) КАК Сумма_скидки_Итого_без_НДС,
	               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажиОборотыВлож.Номенклатура) КАК КоличествоSKU
	               |		ИЗ
	               |			РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, , ) КАК ПродажиОборотыВлож
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ПродажиОборотыВлож.ДокументПродажи) КАК Запр
	               |		ПО (Запр.ДокументПродажи = ПродажиОбороты.ДокументПродажи)
	               |{ГДЕ
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ПродажиОбороты.ДокументПродажи.Номер КАК НомерДокумента,
	               |	ПродажиОбороты.Контрагент.НСИ_Страна.Наименование КАК Страна,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Адрес,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_КлассТТ
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КлассТочки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.КаналПродаж
	               |			ИНАЧЕ ПродажиОбороты.ПРГАдресПоставки.НСИ_КаналПродаж
	               |		КОНЕЦ).* КАК КаналТП,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК ДивизионКАМ,
	               |	(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код) КАК ПолныйКодКлиента,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Код КАК КодКАМ,
	               |	("""") КАК КодРуководителяТП,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Наименование КАК ИмяКАМ,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КодТП,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента.* КАК Канал,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки КАК АдресДоставки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Дивизион,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Офис,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Наименование
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК ИмяТП,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код КАК Бренд,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект.* КАК Проект,
	               |	ПродажиОбороты.Номенклатура.НСИ_Брендообъем.* КАК Брендообъем,
	               |	ПродажиОбороты.Номенклатура.Производитель.Код КАК КодПроизводителя,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Код КАК КодMKU,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Наименование КАК НаименованиеMKU,
	               |	ПродажиОбороты.Номенклатура.Вкус.Наименование КАК ВкусMKU,
	               |	ПродажиОбороты.Номенклатура.Код КАК КодSKU,
	               |	ПродажиОбороты.Номенклатура.Наименование КАК НаименованиеSKU,
	               |	ПродажиОбороты.ДокументПродажи.Дата КАК ДатаПродажи,
	               |	(НЕДЕЛЯ(ПродажиОбороты.ДокументПродажи.Дата)) КАК НеделяПродажи,
	               |	(ГОД(ПродажиОбороты.ДокументПродажи.Дата)) КАК ГодПродажи,
	               |	(МЕСЯЦ(ПродажиОбороты.ДокументПродажи.Дата)) КАК МесяцПродажи}";
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	ПостроительОтчета.Текст = ТекстЗапроса;
	мУниверсальныйОтчет = Отчеты.УниверсальныйОтчет.Создать();
	мУниверсальныйОтчет.ПостроительОтчета = ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	
	мУниверсальныйОтчет.УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
КонецПроцедуры

Процедура ЗапросКуб_МодельАнализМаршрутов()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПродажиОбороты.КоличествоОборот КАК Продажи_количество,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_с_НДС,
	               |	ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот КАК Сумма_скидки_с_НДС,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.СтоимостьБезСкидокОборот = ПродажиОбороты.СтоимостьОборот
	               |			ТОГДА 0
	               |		ИНАЧЕ ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот
	               |	КОНЕЦ КАК Сумма_скидки_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_в_валюте_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_в_валюте_с_НДС,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код, """") КАК АдресПоставки,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.Код, """") КАК КодАП,
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Офис,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Дивизион,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КодТП,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КлассТТ, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КлассТочки,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента, """") КАК Канал,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_Город, """") КАК ГородАП,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_Регион, """") КАК РегионАП,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_Маршрут.Код, """") КАК КодМаршрута,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Код, """") КАК КодSKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Наименование, """") КАК НаименованиеSKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Код, """") КАК КодMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Наименование, """") КАК НаименованиеMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_Брендообъем.Наименование, """") КАК Брендообъем,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_Брендообъем.Код, """") КАК БрендообъемКод,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код, """") КАК Бренд,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект, """") КАК Проект,
	               |	ЕСТЬNULL(ПродажиОбороты.ДокументПродажи.Дата, """") КАК ДатаПродажи,
	               |	НЕДЕЛЯ(ПродажиОбороты.ДокументПродажи.Дата) КАК НеделяПродажи,
	               |	ГОД(ПродажиОбороты.ДокументПродажи.Дата) КАК ГодПродажи,
	               |	МЕСЯЦ(ПродажиОбороты.ДокументПродажи.Дата) КАК МесяцПродажи
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ) КАК ПродажиОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.МенеджерыПокупателя КАК КонтрагентыМенеджерыПокупателя
	               |		ПО ПродажиОбороты.Контрагент = КонтрагентыМенеджерыПокупателя.Ссылка
	               |{ГДЕ
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ПродажиОбороты.ДокументПродажи.Номер КАК НомерДокумента,
	               |	ПродажиОбороты.Контрагент.НСИ_Страна.Наименование КАК Страна,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Адрес,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_КлассТТ
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КлассТочки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.КаналПродаж
	               |			ИНАЧЕ ПродажиОбороты.ПРГАдресПоставки.НСИ_КаналПродаж
	               |		КОНЕЦ).* КАК КаналТП,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК ДивизионКАМ,
	               |	(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код) КАК ПолныйКодКлиента,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Код КАК КодКАМ,
	               |	("""") КАК КодРуководителяТП,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Наименование КАК ИмяКАМ,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КодТП,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента.* КАК Канал,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки КАК АдресДоставки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Дивизион,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Офис,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Наименование
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК ИмяТП,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код КАК Бренд,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект.* КАК Проект,
	               |	ПродажиОбороты.Номенклатура.НСИ_Брендообъем.* КАК Брендообъем,
	               |	ПродажиОбороты.Номенклатура.Производитель.Код КАК КодПроизводителя,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Код КАК КодMKU,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Наименование КАК НаименованиеMKU,
	               |	ПродажиОбороты.Номенклатура.Вкус.Наименование КАК ВкусMKU,
	               |	ПродажиОбороты.Номенклатура.Код КАК КодSKU,
	               |	ПродажиОбороты.Номенклатура.Наименование КАК НаименованиеSKU,
	               |	ПродажиОбороты.ДокументПродажи.Дата КАК ДатаПродажи,
	               |	(НЕДЕЛЯ(ПродажиОбороты.ДокументПродажи.Дата)) КАК НеделяПродажи,
	               |	(ГОД(ПродажиОбороты.ДокументПродажи.Дата)) КАК ГодПродажи,
	               |	(МЕСЯЦ(ПродажиОбороты.ДокументПродажи.Дата)) КАК МесяцПродажи,
	               |	ПродажиОбороты.Организация.*,
	               |	ПродажиОбороты.Подразделение.*}";
	
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	ПостроительОтчета.Текст = ТекстЗапроса;
	мУниверсальныйОтчет = Отчеты.УниверсальныйОтчет.Создать();
	мУниверсальныйОтчет.ПостроительОтчета = ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Подразделение", "Подразделение");
	
	мУниверсальныйОтчет.УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);

КонецПроцедуры

Процедура ЗапросКуб_ИнструментПланирования()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ПланыПродажОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ЕСТЬNULL(ПланыПродажОбороты.ППП_АдресПоставки.ПТЛ_КодКлиента + ПланыПродажОбороты.ППП_АдресПоставки.Код, """") КАК АдресДоставки,
	               |	ПланыПродажОбороты.Контрагент.Код КАК КодКлиента,
	               |	ПланыПродажОбороты.ППП_АдресПоставки.Код КАК КодАдресаПоставки,
	               |	ПланыПродажОбороты.ППП_АдресПоставки.ДопОфис КАК Офис,
	               |	ПланыПродажОбороты.ППП_АдресПоставки.Дивизион КАК Дивизион,
	               |	ПланыПродажОбороты.ППП_ТоварнаяКатегория КАК ТоварнаяКатегория,
	               |	ПланыПродажОбороты.ППП_Брендообъем КАК Брендообъем,
	               |	ПланыПродажОбороты.Проект,
	               |	ПланыПродажОбороты.Номенклатура.Код КАК КодТовара,
	               |	ПланыПродажОбороты.Номенклатура.Наименование КАК НаименованиеТовара,
	               |	ПланыПродажОбороты.ППП_ВесБруттоОборот КАК ПланТонныБрутто,
	               |	ПланыПродажОбороты.ППП_ЛитрыОборот КАК ПланЛитры,
	               |	ПланыПродажОбороты.КоличествоОборот КАК ПланШт,
	               |	ПланыПродажОбороты.СтоимостьОборот КАК ПланРубли,
	               |	ПланыПродажОбороты.ППП_ВесНеттоОборот КАК ПланТонныНетто
	               |ИЗ
	               |	РегистрНакопления.ПланыПродаж.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ) КАК ПланыПродажОбороты
	               |{ГДЕ
	               |	ПланыПродажОбороты.Контрагент.Наименование,
	               |	ПланыПродажОбороты.Контрагент.Код,
	               |	ПланыПродажОбороты.ППП_АдресПоставки.Код,
	               |	ПланыПродажОбороты.ППП_АдресПоставки.ДопОфис.*,
	               |	ПланыПродажОбороты.ППП_АдресПоставки.Дивизион.*,
	               |	ПланыПродажОбороты.ППП_ТоварнаяКатегория.*,
	               |	ПланыПродажОбороты.ППП_Брендообъем.*,
	               |	ПланыПродажОбороты.Проект.*,
	               |	ПланыПродажОбороты.Номенклатура.Код,
	               |	ПланыПродажОбороты.Номенклатура.Наименование,
	               |	ПланыПродажОбороты.ППП_ВесБруттоОборот,
	               |	ПланыПродажОбороты.ППП_ЛитрыОборот,
	               |	ПланыПродажОбороты.КоличествоОборот,
	               |	ПланыПродажОбороты.СтоимостьОборот,
	               |	ПланыПродажОбороты.ППП_ВесНеттоОборот,
	               |	ПланыПродажОбороты.Подразделение.*}";
	
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	ПостроительОтчета.Текст = ТекстЗапроса;
	мУниверсальныйОтчет = Отчеты.УниверсальныйОтчет.Создать();
	мУниверсальныйОтчет.ПостроительОтчета = ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Подразделение", "Подразделение");
	
	мУниверсальныйОтчет.УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);

КонецПроцедуры

Процедура ЗапросКуб_ЕФОП()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПродажиОбороты.КоличествоОборот КАК Продажи_количество,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_с_НДС,
	               |	ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот КАК Сумма_скидки_с_НДС,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.СтоимостьБезСкидокОборот = ПродажиОбороты.СтоимостьОборот
	               |			ТОГДА 0
	               |		ИНАЧЕ ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот
	               |	КОНЕЦ КАК Сумма_скидки_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот - ПродажиОбороты.НДСОборот КАК Продажи_в_валюте_без_НДС,
	               |	ПродажиОбороты.СтоимостьОборот КАК Продажи_в_валюте_с_НДС,
	               |	Запр.Сумма_скидки_Итого_с_НДС КАК Сумма_скидки_Итого_с_НДС,
	               |	Запр.Сумма_скидки_Итого_без_НДС КАК Сумма_скидки_Итого_без_НДС,
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ЕСТЬNULL(ПродажиОбороты.ДокументПродажи, """") КАК ДокументПродажи,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Код, """") КАК КодSKU,
	               |	ЕСТЬNULL(ПродажиОбороты.ДокументПродажи.Номер, """") КАК НомерДокумента,
	               |	ЕСТЬNULL(ПродажиОбороты.Контрагент.НСИ_Страна.Наименование, """") КАК Страна,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Адрес,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КлассТТ, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КлассТочки,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.КаналПродаж, """")
	               |		ИНАЧЕ ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КаналПродаж, """")
	               |	КОНЕЦ КАК КаналТП,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.Дивизион, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КАМ,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код, """") КАК АдресПоставки,
	               |	ЕСТЬNULL(КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Код, """") КАК КодКАМ,
	               |	ЕСТЬNULL(КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Наименование, """") КАК ИмяКАМ,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК КодТП,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента, """") КАК Канал,
	               |	ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки, """") КАК АдресДоставки,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Дивизион,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Офис,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |			ТОГДА ЕСТЬNULL(ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Наименование, """")
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК ИмяТП,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код, """") КАК Бренд,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект, """") КАК Проект,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.НСИ_Брендообъем, """") КАК Брендообъем,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Производитель.Код, """") КАК КодПроизводителя,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Код, """") КАК КодMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.МКЮ.Наименование, """") КАК НаименованиеMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Вкус.Наименование, """") КАК ВкусMKU,
	               |	ЕСТЬNULL(ПродажиОбороты.Номенклатура.Наименование, """") КАК НаименованиеSKU,
	               |	ЕСТЬNULL(ПродажиОбороты.ДокументПродажи.Дата, """") КАК ДатаПродажи,
	               |	НЕДЕЛЯ(ПродажиОбороты.ДокументПродажи.Дата) КАК НеделяПродажи,
	               |	ГОД(ПродажиОбороты.ДокументПродажи.Дата) КАК ГодПродажи,
	               |	МЕСЯЦ(ПродажиОбороты.ДокументПродажи.Дата) КАК МесяцПродажи
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ) КАК ПродажиОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.МенеджерыПокупателя КАК КонтрагентыМенеджерыПокупателя
	               |		ПО ПродажиОбороты.Контрагент = КонтрагентыМенеджерыПокупателя.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ПродажиОборотыВлож.ДокументПродажи КАК ДокументПродажи,
	               |			СУММА(ПродажиОборотыВлож.СтоимостьБезСкидокОборот - ПродажиОборотыВлож.СтоимостьОборот) КАК Сумма_скидки_Итого_с_НДС,
	               |			СУММА(ВЫБОР
	               |					КОГДА ПродажиОборотыВлож.СтоимостьБезСкидокОборот = ПродажиОборотыВлож.СтоимостьОборот
	               |						ТОГДА 0
	               |					ИНАЧЕ ПродажиОборотыВлож.СтоимостьБезСкидокОборот - ПродажиОборотыВлож.СтоимостьОборот - ПродажиОборотыВлож.НДСОборот
	               |				КОНЕЦ) КАК Сумма_скидки_Итого_без_НДС,
	               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажиОборотыВлож.Номенклатура) КАК КоличествоSKU
	               |		ИЗ
	               |			РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, , ) КАК ПродажиОборотыВлож
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ПродажиОборотыВлож.ДокументПродажи) КАК Запр
	               |		ПО (Запр.ДокументПродажи = ПродажиОбороты.ДокументПродажи)
	               |{ГДЕ
	               |	ПродажиОбороты.Контрагент.Наименование КАК НаименованиеКлиента,
	               |	ПродажиОбороты.Контрагент.Код КАК КодКлиента,
	               |	ПродажиОбороты.ДокументПродажи.Номер КАК НомерДокумента,
	               |	ПродажиОбороты.Контрагент.НСИ_Страна.Наименование КАК Страна,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Адрес,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_КлассТТ
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КлассТочки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.КаналПродаж
	               |			ИНАЧЕ ПродажиОбороты.ПРГАдресПоставки.НСИ_КаналПродаж
	               |		КОНЕЦ).* КАК КаналТП,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК ДивизионКАМ,
	               |	(ПродажиОбороты.ПРГАдресПоставки.ПТЛ_КодКлиента + ПродажиОбороты.ПРГАдресПоставки.Код) КАК ПолныйКодКлиента,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Код КАК КодКАМ,
	               |	КонтрагентыМенеджерыПокупателя.МенеджерПокупателя.Наименование КАК ИмяКАМ,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель
	               |			ИНАЧЕ """"
	               |		КОНЕЦ).* КАК КодТП,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_КатегорияКлиента.* КАК Канал,
	               |	ПродажиОбороты.ПРГАдресПоставки.НСИ_АдресДоставки КАК АдресДоставки,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.Дивизион.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Дивизион,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.ДопОфис.Код
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Офис,
	               |	(ВЫБОР
	               |			КОГДА ПродажиОбороты.ПРГАдресПоставки ССЫЛКА Справочник.АдресаПоставки
	               |				ТОГДА ПродажиОбороты.ПРГАдресПоставки.НСИ_ТорговыйПредставитель.Наименование
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК ИмяТП,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Код КАК Бренд,
	               |	ПродажиОбороты.Номенклатура.НСИ_ТоварнаяКатегория.Проект.* КАК Проект,
	               |	ПродажиОбороты.Номенклатура.НСИ_Брендообъем.* КАК Брендообъем,
	               |	ПродажиОбороты.Номенклатура.Производитель.Код КАК КодПроизводителя,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Код КАК КодMKU,
	               |	ПродажиОбороты.Номенклатура.МКЮ.Наименование КАК НаименованиеMKU,
	               |	ПродажиОбороты.Номенклатура.Вкус.Наименование КАК ВкусMKU,
	               |	ПродажиОбороты.Номенклатура.Код КАК КодSKU,
	               |	ПродажиОбороты.Номенклатура.Наименование КАК НаименованиеSKU,
	               |	ПродажиОбороты.ДокументПродажи.Дата КАК ДатаПродажи,
	               |	(НЕДЕЛЯ(ПродажиОбороты.ДокументПродажи.Дата)) КАК НеделяПродажи,
	               |	(ГОД(ПродажиОбороты.ДокументПродажи.Дата)) КАК ГодПродажи,
	               |	(МЕСЯЦ(ПродажиОбороты.ДокументПродажи.Дата)) КАК МесяцПродажи,
	               |	ПродажиОбороты.Организация.*,
	               |	ПродажиОбороты.Подразделение.*}";
	
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	ПостроительОтчета.Текст = ТекстЗапроса;
	мУниверсальныйОтчет = Отчеты.УниверсальныйОтчет.Создать();
	мУниверсальныйОтчет.ПостроительОтчета = ПостроительОтчета;
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	
	мУниверсальныйОтчет.УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);

КонецПроцедуры


#Если ТолстыйКлиентОбычноеПриложение Тогда
Процедура ИндикаторОбработки(пСправочник, пПрогресс)
		
	Состояние("Обработка: " + СокрЛП(пСправочник) + " - " + Формат(пПрогресс,"ЧДЦ=; ЧГ=0") + "%");
	
КонецПроцедуры
#КонецЕсли

Процедура ИнициализируемПостроительОтчета(мКуб) Экспорт

	Если мКуб = "Анализ первичных продаж" Тогда
		ЗапросКуб_АнализПервичныхПродаж();
	ИначеЕсли мКуб = "Складской анализ" Тогда
		ЗапросКуб_СкладскойАнализ();
	ИначеЕсли мКуб = "Дебиторка" Тогда
		ЗапросКуб_Дебиторка();
	ИначеЕсли мКуб = "Затраты" Тогда

		
	ИначеЕсли мКуб = "Себестоимость" Тогда
		ЗапросКуб_Себестоимость();
	ИначеЕсли мКуб = "Анализ вторичных и первичных продаж, ЕФОП" Тогда
		ЗапросКуб_ЕФОП();
	ИначеЕсли мКуб = "Отчет№2" Тогда
		ЗапросКуб_Отчет2();
	ИначеЕсли мКуб = "Отгрузки" Тогда
		ЗапросКуб_Отгрузки();
	ИначеЕсли мКуб = "Модель Анализ Маршрутов" Тогда
		ЗапросКуб_МодельАнализМаршрутов();
	ИначеЕсли мКуб = "Инструмент планирования" Тогда
		ЗапросКуб_ИнструментПланирования();
	КонецЕсли;
			
КонецПроцедуры

Процедура ЗаписьВФайл(пЗапрос, пТекстЗапроса, пТекстДок, пТекСправочник, пТекИмяФайла, пРегистр = Ложь) Экспорт
	
	//Запись данных в файл
	пЗапрос.Текст = пТекстЗапроса;
	Рез = пЗапрос.Выполнить().Выгрузить();
	
	Если пРегистр Тогда //Если запрос по регистру, тогда добавим шапку таблицы
		мТекст = "";
		Для Каждого ТекКолонка Из Рез.Колонки Цикл
			мТекст = мТекст + СокрЛП(ТекКолонка.Заголовок) + ";";			
		КонецЦикла;
		пТекстДок.ДобавитьСтроку(мТекст);
		ЗаписатьФайл(пТекстДок, КаталогФайл, пТекИмяФайла);
	КонецЕсли;
	
	ТекСч = 1;
	мКолВоРеквизитов = Рез.Колонки.Количество();
	Для Каждого ТекСтрока Из Рез Цикл
		
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();					 
		#КонецЕсли				
		
		мТекст = "";
		Для счКолонка = 0 По Рез.Колонки.Количество() - 1 Цикл				
			
			#Если Клиент Тогда
				ОбработкаПрерыванияПользователя();					 
			#КонецЕсли
			
			//++ Spl_Апроф 11.11.2014 (k.russkih@a-prof.ru) Для установки имени метаданных справочника владельца, если типов больше чем 1
			Если Рез.Колонки[счКолонка].Имя = "ТипСправочника_Владелец" Тогда
				
				мИмяТипаСсылки = ВернемИмяРеквизитаПоМетаданным(ТипЗнч(ТекСтрока[счКолонка-1]));
				мТекст = мТекст + мИмяТипаСсылки + ";";
			    //Продолжить;
			ИначеЕсли НЕ Найти(Рез.Колонки[счКолонка].Имя, "ТипСправочника_") = 0 Тогда
				
				мИмяТипаСсылки = ВернемИмяРеквизитаПоМетаданным(ТипЗнч(ТекСтрока[счКолонка-1]));
				мТекст = мТекст + мИмяТипаСсылки + ";";	
			//КонецЕсли; 
			//-- Spl_Апроф					
			
			ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ТекСтрока[счКолонка])) Тогда
				Если ЗначениеЗаполнено(ТекСтрока[счКолонка]) Тогда
					мТекст = мТекст + СокрЛП(ТекСтрока[счКолонка].УникальныйИдентификатор()) + ";";
				Иначе
					мТекст = мТекст + ";";
				КонецЕсли;
			ИначеЕсли ТипЗнч(ТекСтрока[счКолонка]) = Тип("Число") Тогда
				мТекст = мТекст + Формат(ТекСтрока[счКолонка],"ЧГ=0") + ";"; 
			ИначеЕсли ТипЗнч(ТекСтрока[счКолонка]) = Тип("Дата") Тогда
				мТекст = мТекст + Формат(ТекСтрока[счКолонка],"ДЛФ=Д") + ";"; 
			ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(ТекСтрока[счКолонка])) Тогда
				мТекст = мТекст + СокрЛП(ТекСтрока[счКолонка]) + ";"; 
			Иначе
				мТекст = мТекст + ДополнительнаяОбработкаДанных(ТекСтрока[счКолонка]) + ";";
			КонецЕсли;

		КонецЦикла;
		пТекстДок.ДобавитьСтроку(мТекст);
		ТекСч = ТекСч + 1;
		
		//ыЕсли ТекСч = 3 Тогда Прервать; КонецЕсли;
		
		ИндикаторОбработки(пТекСправочник, ТекСч/Рез.Количество()*100);
	
	КонецЦикла;
	ЗаписатьФайл(пТекстДок, КаталогФайл, пТекИмяФайла);
	
КонецПроцедуры

Функция СформироватьЗапросПоРегистру(фТекРегистр, фСправочник, фРеквСпр, фИзмРег)
	
	фЗапросПоРег = Новый Структура;
	фЗапросПоРег.Вставить("Регистр", фТекРегистр);   
	фЗапросПоРег.Вставить("ТекстЗапроса", "");   
	фЗапросПоРег.Вставить("Реквизиты",	  "");  
	фЗапросПоРег.Вставить("Соединение",	  "");  
	
	фНайдРегистр = Метаданные.РегистрыСведений.Найти(фТекРегистр);
	Если НЕ фНайдРегистр = Неопределено Тогда
		фЗапрос = "ВЫБРАТЬ ";
		фРеквизиты = ""; 
		Для Каждого Измерение Из фНайдРегистр.Измерения Цикл
			фЗапрос		 = фЗапрос + СокрЛП(фНайдРегистр.Имя) + "." + СокрЛП(Измерение.Имя) + ", ";			
			фРеквизиты	 = фРеквизиты + СокрЛП(Измерение.Имя) + ";";
			
			//++ Spl_Апроф 19.11.2014 (k.russkih@a-prof.ru)			
			Если Измерение.Тип.Типы().Количество() > 1 Тогда 					
				мИмяТипаСсылки = """""";
				фЗапрос = фЗапрос + мИмяТипаСсылки + " КАК ТипСправочника_" + СокрЛП(Измерение.Имя) + ", ";				
				фРеквизиты = фРеквизиты + "ТипСправочника_" + СокрЛП(Измерение.Имя) + ";";
			КонецЕсли;
			//-- Spl_Апроф

			//фРеквизиты	 = фРеквизиты + СокрЛП(фНайдРегистр.Имя) + "." + СокрЛП(Измерение.Имя) + ";";
			
		КонецЦикла;
		Для Каждого Ресурс Из фНайдРегистр.Ресурсы Цикл
			фЗапрос		 = фЗапрос + СокрЛП(фНайдРегистр.Имя) + "." + СокрЛП(Ресурс.Имя) + ", ";
			//фРеквизиты	 = фРеквизиты + СокрЛП(фНайдРегистр.Имя) + "." + СокрЛП(Ресурс.Имя) + ";";
			фРеквизиты	 = фРеквизиты + СокрЛП(Ресурс.Имя) + ";";
		КонецЦикла;
		Для Каждого Реквизит Из фНайдРегистр.Реквизиты Цикл
			фЗапрос		 = фЗапрос + СокрЛП(фНайдРегистр.Имя) + "." + СокрЛП(Реквизит.Имя) + ", ";
			//фРеквизиты	 = фРеквизиты + СокрЛП(фНайдРегистр.Имя) + "." + СокрЛП(Реквизит.Имя) + ";";
			фРеквизиты	 = фРеквизиты + СокрЛП(Реквизит.Имя) + ";";
		КонецЦикла;
		фЗапрос = Лев(фЗапрос, СтрДлина(фЗапрос)-2) + " " + Символы.ПС;
		фЗапрос = фЗапрос + " ИЗ РегистрСведений." + фТекРегистр + " КАК " + фТекРегистр;
	
		фЗапросПоРег.Вставить("ТекстЗапроса", фЗапрос);   
		фЗапросПоРег.Вставить("Реквизиты",	 фРеквизиты);  
		фЗапросПоРег.Вставить("Соединение",	 Символы.ПС + " ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + фТекРегистр + " КАК " + фТекРегистр + " " + Символы.ПС + " ПО " + фСправочник + "." + фРеквСпр + " = " + фТекРегистр + "." + фИзмРег);  
			
	КонецЕсли; //Если НЕ НайдРегистр = Неопределено Тогда
		
	Возврат фЗапросПоРег;
	
КонецФункции

//Подключить к выгрузке данных справочника "пСправочник" указанные регистры сведений
//фСправочник - справочник
//фРеквСпр - реквизит справочника, участвующий в соединении
//фИзмРег - измерение регистра сведений, участвующий в соединении
Функция ПодключитьРегистрыСведенийКВыгрузке(фСправочник, фРеквСпр, фИзмРег)
	
	спСтруктурыЗапроса = Новый Массив; //используем массив, т.к. может подключаться несколько регистров сведений к одному справочнику
	Если фСправочник = "Контрагенты" Тогда
		фТекРегистр = "КонтактнаяИнформация";
		фСтруктураЗапроса = СформироватьЗапросПоРегистру(фТекРегистр, фСправочник, фРеквСпр, фИзмРег);
		спСтруктурыЗапроса.Добавить(фСтруктураЗапроса);
		
	ИначеЕсли фСправочник = "ИмяСправочника" Тогда
		//Например, такой =)
		//Тут указываешь регистры сведений и вызываешь функцию СформироватьЗапросПоРегистру
		фТекРегистр = "ИмяРегистра";
		фСтруктураЗапроса = СформироватьЗапросПоРегистру(фТекРегистр, фСправочник, фРеквСпр, фИзмРег);
		
	КонецЕсли; //Если фСправочник = "Контрагенты" Тогда
	
	Возврат спСтруктурыЗапроса;
	
КонецФункции

// Функция формирует прокси по настройкам прокси (передаваемому параметру)
//
// Параметры:
// 
// НастройкаПроксиСервера - Соответствие:
//		ИспользоватьПрокси - использовать ли прокси-сервер
//		НеИспользоватьПроксиДляЛокальныхАдресов - использовать ли прокси-сервер для локальных адресов
//		ИспользоватьСистемныеНастройки - использовать ли системные настройки прокси-сервера
//		Сервер       - адрес прокси-сервера
//		Порт         - порт прокси-сервера
//		Пользователь - имя пользователя для авторизации на прокси-сервере
//		Пароль       - пароль пользователя
// Протокол - строка - протокол для которого устанавливаются параметры прокси сервера, например "http", "https", "ftp"
// 
Функция СформироватьПрокси(НастройкаПроксиСервера, Протокол)
	
	Если НастройкаПроксиСервера <> Неопределено Тогда
		ИспользоватьПрокси = НастройкаПроксиСервера.Получить("ИспользоватьПрокси");
		ИспользоватьСистемныеНастройки = НастройкаПроксиСервера.Получить("ИспользоватьСистемныеНастройки");
		Если ИспользоватьПрокси Тогда
			Если ИспользоватьСистемныеНастройки Тогда
			// Системные настройки прокси-сервера
				Прокси = Новый ИнтернетПрокси(Истина);
			Иначе
			// Ручные настройки прокси-сервера
				Прокси = Новый ИнтернетПрокси;
				Прокси.Установить(Протокол, НастройкаПроксиСервера["Сервер"], НастройкаПроксиСервера["Порт"]);
				Прокси.НеИспользоватьПроксиДляЛокальныхАдресов = НастройкаПроксиСервера["НеИспользоватьПроксиДляЛокальныхАдресов"];
				Прокси.Пользователь = НастройкаПроксиСервера["Пользователь"];
				Прокси.Пароль       = НастройкаПроксиСервера["Пароль"];
			КонецЕсли;
		Иначе
			// Не использовать прокси-сервер	
			Прокси = Новый ИнтернетПрокси(Ложь);
		КонецЕсли;
	Иначе
		Прокси = Неопределено;
	КонецЕсли;
	
	Возврат Прокси;
	
КонецФункции

Функция СоздатьСоединениеFTP() Экспорт
	
	фОшибка = Ложь;
	
	НастройкиПрокси = ?(НастройкиПрокси = Неопределено, ИнтернетПоддержкаПользователейКлиент.ПолучитьПустыеНастройкиПроксиСервера(), НастройкиПрокси);
	Прокси = СформироватьПрокси(НастройкиПрокси, "ftp");
	
	Попытка
		ФТПСоединение = Новый FTPСоединение(Сервер, Порт, Пользователь, Пароль, Прокси, Истина);
		Сообщить("Соединение установлено");
	Исключение
		Сообщить("Ошибка при создании FTP-соединения с сервером!");
		фОшибка = Истина;
	КонецПопытки;
	
	Возврат фОшибка;
	
КонецФункции

Функция ЗаписатьФайл(фТекстДок, фКаталогФайл, фИмяФайла)
	
	фТекстДок.Записать(фКаталогФайл + СокрЛП(фИмяФайла) + ".csv", КодировкаТекста.ANSI);
	
	Возврат Истина;
	
КонецФункции

Функция СформироватьСписокСправочников() Экспорт;
	
	//спСправочники = Новый СписокЗначений;
	//
	//Для сч = 0 По Метаданные.Справочники.Количество()-1 Цикл
	//	спСправочники.Добавить(Метаданные.Справочники[сч].Имя, Метаданные.Справочники[сч].Синоним); 
	//КонецЦикла;
	//
	//Возврат спСправочники;
	
КонецФункции

Процедура СформироватьСписокКубов() Экспорт;
	
	спКубы = Новый СписокЗначений;
	спКубы.Добавить("Анализ первичных продаж", "Sales");
	спКубы.Добавить("Складской анализ", "Store_Analize");
	спКубы.Добавить("Дебиторка", "Receivables");
	спКубы.Добавить("Затраты", "PL1C_New");
	спКубы.Добавить("Себестоимость", "Cost_Price_Analysis");
	спКубы.Добавить("Анализ вторичных и первичных продаж, ЕФОП", "Sales_Division");
	спКубы.Добавить("Отчет№2", "Total_Analysis_Ex_NEW_Plan_Fact_ACS");
	спКубы.Добавить("Отгрузки", "Shipments");
	спКубы.Добавить("Модель Анализ Маршрутов", "Sales_Division_Tabs");
	спКубы.Добавить("Инструмент планирования", "Planning_Tool");
	
	Для Каждого ТекКуб Из спКубы Цикл
		НовСтр = Кубы.Добавить();
		НовСтр.Пометка	 = Ложь;
		НовСтр.Куб		 = ТекКуб.Значение;
		НовСтр.ИмяФайла	 = ТекКуб.Представление;
	КонецЦикла;
	
    ЗаполнитьНастройкуКубов();
	
КонецПроцедуры

Процедура ВыгрузитьДанные() Экспорт;
	
	Запрос	 = Новый Запрос;
	ТекстДок = Новый ТекстовыйДокумент;	
	ОшибкаСоединения = Ложь;
	Если нрег(Лев(КаталогФайл, 3)) = "ftp" Тогда
		ОшибкаСоединения = СоздатьСоединениеFTP();
	КонецЕсли;
	
	Если ОшибкаСоединения Тогда
		Возврат;
	КонецЕсли;
		
	Для Каждого ТекСпр Из тчСправочники Цикл
		НайдСпр = Метаданные.Справочники.Найти(ТекСпр.Справочник);
		Если НЕ НайдСпр = Неопределено Тогда
			Состояние("Обработка: " + СокрЛП(ТекСпр.Справочник));
			
			ТекстДок.Очистить();
			ЗаписатьФайл(ТекстДок, КаталогФайл, ТекСпр.ИмяФайла);
			
			мКод			 = ?(НайдСпр.ДлинаКода <> 0, СокрЛП(НайдСпр.Имя) + ".Код, ", "");
			мНаименование	 = ?(НайдСпр.ДлинаНаименования <> 0, СокрЛП(НайдСпр.Имя) + ".Наименование, ", "");
			мКодН			 = ?(НайдСпр.ДлинаКода <> 0, "Код, ", "");
			мНаименованиеН	 = ?(НайдСпр.ДлинаНаименования <> 0, "Наименование, ", "");
			мВладелец		 = ?(НайдСпр.Владельцы.Количество() <> 0, "Владелец, ", "");
			//++ Spl_Апроф 11.11.2014 (k.russkih@a-prof.ru)
			мТипСправочника	 = ?(НайдСпр.Владельцы.Количество() <> 0, "ТипСправочника_Владелец, ", "");
			мОписаниеВладелец = ?(НайдСпр.Владельцы.Количество() <> 0, """"" КАК ТипСправочника_Владелец, ", "");
			//-- Spl_Апроф
			мРодитель		 = ?(НайдСпр.Иерархический, "Родитель, ", "");
			
			//++ Spl_Апроф 11.11.2014 (k.russkih@a-prof.ru)
			//мРеквизитыСправочника = "УИД;" + СтрЗаменить(мВладелец + мРодитель + мКодН + мНаименованиеН, ",", ";");
			мРеквизитыСправочника = "УИД; " + СтрЗаменить(мВладелец + мТипСправочника + мРодитель + мКодН + мНаименованиеН, ",", ";");
			
			ЗапросыПоРегистрам = ПодключитьРегистрыСведенийКВыгрузке(ТекСпр.Справочник, "Ссылка", "Объект"); // подключаем регистры сведений к выгрузке данных из справочников
			
			//++ Spl_Апроф 11.11.2014 (k.russkih@a-prof.ru)
			//ТекстЗапроса = "ВЫБРАТЬ " + СокрЛП(НайдСпр.Имя) +  ".Ссылка, " + мВладелец + мРодитель + мКод + мНаименование;
			ТекстЗапроса = "ВЫБРАТЬ " + СокрЛП(НайдСпр.Имя) +  ".Ссылка, " + мВладелец + мОписаниеВладелец + мРодитель + мКод + мНаименование;
			
			ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-2) + " " + Символы.ПС;
			Для Каждого Реквизит Из НайдСпр.Реквизиты Цикл
				ТекстЗапроса = ТекстЗапроса + ", " + СокрЛП(НайдСпр.Имя) + "." + Реквизит.Имя + Символы.ПС;
				//мРеквизитыСправочника = мРеквизитыСправочника + СокрЛП(НайдСпр.Имя) + "." + Реквизит.Имя + ";";
				
				//++ Spl_Апроф 11.11.2014 (k.russkih@a-prof.ru)
				Если Реквизит.Тип.Типы().Количество() > 1 Тогда 					
					//мИмяТипаСсылки = ВернемИмяРеквизитаПоМетаданным(Реквизит.Тип);
					мИмяТипаСсылки = "";
					ТекстЗапроса = ТекстЗапроса + ", """ + мИмяТипаСсылки + """ КАК ТипСправочника_" + СокрЛП(Реквизит.Имя) + Символы.ПС;
					
					мРеквизитыСправочника = мРеквизитыСправочника + "ТипСправочника_" + СокрЛП(Реквизит.Имя) + ";";
				КонецЕсли; 
				
				мРеквизитыСправочника = мРеквизитыСправочника + Реквизит.Имя + ";";
			КонецЦикла;
			
			ТекстЗапроса = ТекстЗапроса + " ИЗ Справочник." + СокрЛП(НайдСпр.Имя) + " КАК " + СокрЛП(НайдСпр.Имя);
			ТекстДок.ДобавитьСтроку(СтрЗаменить(мРеквизитыСправочника, " ", ""));
			
			//++ Spl_Апроф 11.11.2014 (k.russkih@a-prof.ru)
			мИмяСправочника = "Справочник."+СокрЛП(НайдСпр.Имя);			
			//-- Spl_Апроф
			
			//Запись данных в файл
			ЗаписьВФайл(Запрос, ТекстЗапроса, ТекстДок, ТекСпр.Справочник, ТекСпр.ИмяФайла);
			Для Каждого ТекРегистр Из ЗапросыПоРегистрам Цикл
				ТекстДокРегистр = Новый ТекстовыйДокумент;
				ЗаписатьФайл(ТекстДокРегистр, КаталогФайл, ТекРегистр.Регистр);
				ЗаписьВФайл(Запрос, ТекРегистр.ТекстЗапроса, ТекстДокРегистр, ТекРегистр.Регистр, ТекРегистр.Регистр, Истина);
			КонецЦикла;
			//Запрос.Текст = ТекстЗапроса;
			//Рез = Запрос.Выполнить().Выгрузить();
			//ТекСч = 1;
			//мКолВоРеквизитов = Рез.Колонки.Количество();
			//Для Каждого ТекСтрока Из Рез Цикл
			//	
			//	#Если Клиент Тогда
			//		ОбработкаПрерыванияПользователя();					 
			//	#КонецЕсли				
			//	
			//	мТекст = "";
			//	Для счКолонка = 0 По Рез.Колонки.Количество() - 1 Цикл				
			//		
			//		#Если Клиент Тогда
			//			ОбработкаПрерыванияПользователя();					 
			//		#КонецЕсли
			//		
			//		//++ Spl_Апроф 11.11.2014 (k.russkih@a-prof.ru) Для установки имени метаданных справочника владельца, если типов больше чем 1
			//		Если Рез.Колонки[счКолонка].Имя = "ТипСправочника_Владелец" Тогда
			//			
			//			мИмяТипаСсылки = ВернемИмяРеквизитаПоМетаданным(ТипЗнч(ТекСтрока[счКолонка-1]));
			//			мТекст = мТекст + мИмяТипаСсылки + ";";
			//			//Продолжить;
			//			
			//		//КонецЕсли; 
			//		//-- Spl_Апроф					
			//		
			//		ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ТекСтрока[счКолонка])) Тогда
			//			Если ЗначениеЗаполнено(ТекСтрока[счКолонка]) Тогда
			//				мТекст = мТекст + СокрЛП(ТекСтрока[счКолонка].УникальныйИдентификатор()) + ";";
			//			Иначе
			//				мТекст = мТекст + ";";
			//			КонецЕсли;
			//		ИначеЕсли ТипЗнч(ТекСтрока[счКолонка]) = Тип("Число") Тогда
			//			мТекст = мТекст + Формат(ТекСтрока[счКолонка],"ЧГ=0") + ";"; 
			//		ИначеЕсли ТипЗнч(ТекСтрока[счКолонка]) = Тип("Дата") Тогда
			//			мТекст = мТекст + Формат(ТекСтрока[счКолонка],"ДЛФ=Д") + ";"; 
			//		Иначе
			//			//Если Рез.Колонки[счКолонка].Имя = "Ссылка" 
			//			//	ИЛИ Рез.Колонки[счКолонка].Имя = "Родитель" 
			//			//	ИЛИ Рез.Колонки[счКолонка].Имя = "Владелец" Тогда
			//			//	
			//			//	Если ЗначениеЗаполнено(ТекСтрока[счКолонка]) Тогда
			//			//		мТекст = мТекст + СокрЛП(ТекСтрока[счКолонка].УникальныйИдентификатор()) + ";";
			//			//	Иначе
			//			//		мТекст = мТекст + ";";
			//			//	КонецЕсли;
			//			//Иначе
			//			//	мТекст = мТекст + СокрЛП(ТекСтрока[счКолонка]) + ";";
			//			//КонецЕсли;
			//			мТекст = мТекст + ДополнительнаяОбработкаДанных(ТекСтрока[счКолонка]) + ";";
			//		КонецЕсли;

			//	КонецЦикла;
			//	ТекстДок.ДобавитьСтроку(мТекст);
			//	ТекСч = ТекСч + 1;
			//	
			//	ИндикаторОбработки(ТекСпр.Справочник, ТекСч/Рез.Количество()*100);
			//
			//КонецЦикла;
			//ЗаписатьФайл(ТекстДок, КаталогФайл, ТекСпр.ИмяФайла);
			//
		КонецЕсли; //Если НЕ НайдСпр = Неопределено Тогда
		
	КонецЦикла; //Для Каждого ТекСпр Из тчСправочники Цикл
	
	ВыгрузитьКубы(ТекстДок);
	
КонецПроцедуры

Функция ДополнительнаяОбработкаДанных(мСтрока)

	мСтрока = СокрЛП(мСтрока);
	мСтрока = СокрЛП(СтрЗаменить(мСтрока, ";", ","));
	мСтрока = СокрЛП(СтрЗаменить(мСтрока, Символы.ПС, ", "));
	//мСтрока = СтрЗаменить(мСтрока, Символы.ВТаб, "");
	//мСтрока = СтрЗаменить(мСтрока, Символы.ВК, "");
	//мСтрока = СтрЗаменить(мСтрока, Символы.НПП, "");
	//мСтрока = СтрЗаменить(мСтрока, Символы.ПФ, "");
	//мСтрока = СтрЗаменить(мСтрока, Символы.Таб, "");
	//мСтрока = СтрЗаменить(мСтрока, Символы., "");
    Возврат мСтрока;
	
КонецФункции
 
Процедура ВыгрузитьКубы(ТекстДок)

	ПостроительОтчета.Параметры.Вставить("НачалоПериода", НачалоДня(ДатаС));
	ПостроительОтчета.Параметры.Вставить("КонецПериода", КонецДня(ДатаПо));
	
	ПостроительОтчета.Выполнить();
	
	Для Каждого ТекКуб Из Кубы Цикл
		Если ТекКуб.Пометка Тогда
			
			Рез = ПостроительОтчета.Результат.Выгрузить();
			
			ТекстДок.Очистить();
			ЗаписатьФайл(ТекстДок, КаталогФайл, ТекКуб.ИмяФайла);
			ЗаписьТаблицыВФайл(Рез, ТекстДок, ТекКуб.Куб);
			ЗаписатьФайл(ТекстДок, КаталогФайл, ТекКуб.ИмяФайла);
				
		КонецЕсли;
	КонецЦикла;	

КонецПроцедуры
 
Функция ВернемИмяРеквизитаПоМетаданным(ТипРеквизита)
	
	Если ТипРеквизита = Тип("Строка") ИЛИ ТипРеквизита = Тип("Неопределено") Тогда	
		Возврат "";	
	КонецЕсли;
	
	мТипСсылки = Новый(ТипРеквизита);
	мИмяТипаСсылки = мТипСсылки.Метаданные().Имя;

    Возврат мИмяТипаСсылки;
	
КонецФункции // ()

Процедура ЗаписьТаблицыВФайл(мРез, мТекстДок, мТекСправочник)
	
	ТекСч = 1;
	мКолВоРеквизитов = мРез.Колонки.Количество();
	мТекст = "";
	Для Каждого ТекКолонка Из мРез.Колонки Цикл
		мТекст = мТекст + СокрЛП(ТекКолонка.Заголовок) + ";";
	КонецЦикла;
	мТекстДок.ДобавитьСтроку(мТекст);
	
	Для Каждого ТекСтрока Из мРез Цикл
		мТекст = "";
		
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();					 
		#КонецЕсли
				
		Для счКолонка = 0 По мРез.Колонки.Количество() - 1 Цикл
			
			#Если Клиент Тогда
				ОбработкаПрерыванияПользователя();					 
			#КонецЕсли
			
			Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ТекСтрока[счКолонка])) Тогда
				Если ЗначениеЗаполнено(ТекСтрока[счКолонка]) Тогда
					мТекст = мТекст + СокрЛП(ТекСтрока[счКолонка].УникальныйИдентификатор()) + ";";
				Иначе
					мТекст = мТекст + ";";
				КонецЕсли;
			ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ТекСтрока[счКолонка])) Тогда
				Если ЗначениеЗаполнено(ТекСтрока[счКолонка]) Тогда
					мТекст = мТекст + СокрЛП(ТекСтрока[счКолонка].УникальныйИдентификатор()) + ";";
				Иначе
					мТекст = мТекст + ";";
				КонецЕсли;
			ИначеЕсли ТипЗнч(ТекСтрока[счКолонка]) = Тип("Число") Тогда
				мТекст = мТекст + Формат(ТекСтрока[счКолонка],"ЧГ=0") + ";"; 
			ИначеЕсли ТипЗнч(ТекСтрока[счКолонка]) = Тип("Дата") Тогда
				мТекст = мТекст + Формат(ТекСтрока[счКолонка],"ДЛФ=Д") + ";"; 
			Иначе
				мТекст = мТекст + СокрЛП(ТекСтрока[счКолонка]) + ";";
			КонецЕсли;

		КонецЦикла;
		мТекстДок.ДобавитьСтроку(мТекст);
		ТекСч = ТекСч + 1;
		
		ИндикаторОбработки(мТекСправочник, ТекСч/мРез.Количество()*100);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНастройкуКубов()

	//Анализ первичных продаж
	ДобавимСтрокуВНастройкуКубов("Анализ первичных продаж", "Номенклатура", "Номенклатура");
	ДобавимСтрокуВНастройкуКубов("Анализ первичных продаж", "Склады", "Склады");
	ДобавимСтрокуВНастройкуКубов("Анализ первичных продаж", "АдресаПоставки", "АдресаПоставки");
	ДобавимСтрокуВНастройкуКубов("Анализ первичных продаж", "Контрагенты", "Контрагенты");
	ДобавимСтрокуВНастройкуКубов("Анализ первичных продаж", "ВидыКонтактнойИнформации", "ВидыКонтактнойИнформации");
	ДобавимСтрокуВНастройкуКубов("Анализ первичных продаж", "ЕдиницыИзмерения", "ЕдиницыИзмерения");

	//Складской анализ
	ДобавимСтрокуВНастройкуКубов("Складской анализ", "Номенклатура", "Номенклатура");
	ДобавимСтрокуВНастройкуКубов("Складской анализ", "Склады", "Склады");
	ДобавимСтрокуВНастройкуКубов("Складской анализ", "ЕдиницыИзмерения", "ЕдиницыИзмерения");
	
	//Дебиторка
	ДобавимСтрокуВНастройкуКубов("Дебиторка", "Номенклатура", "Номенклатура");
	ДобавимСтрокуВНастройкуКубов("Дебиторка", "Контрагенты", "Контрагенты");

	//Отчет№2
	ДобавимСтрокуВНастройкуКубов("Отчет№2", "Номенклатура", "Номенклатура");
	ДобавимСтрокуВНастройкуКубов("Отчет№2", "Контрагенты", "Контрагенты");
	
	//Себестоимость
	ДобавимСтрокуВНастройкуКубов("Себестоимость", "Номенклатура", "Номенклатура");
	ДобавимСтрокуВНастройкуКубов("Себестоимость", "Контрагенты", "Контрагенты");

	//Анализ вторичных и первичных продаж, ЕФОП
	ДобавимСтрокуВНастройкуКубов("Анализ вторичных и первичных продаж, ЕФОП", "Номенклатура", "Номенклатура");
	ДобавимСтрокуВНастройкуКубов("Анализ вторичных и первичных продаж, ЕФОП", "Контрагенты", "Контрагенты");

	//Отгрузки
	ДобавимСтрокуВНастройкуКубов("Отгрузки", "Номенклатура", "Номенклатура");
	ДобавимСтрокуВНастройкуКубов("Отгрузки", "Контрагенты", "Контрагенты");
	ДобавимСтрокуВНастройкуКубов("Отгрузки", "ЕдиницыИзмерения", "ЕдиницыИзмерения");

	//Модель Анализ Маршрутов
	ДобавимСтрокуВНастройкуКубов("Модель Анализ Маршрутов", "Номенклатура", "Номенклатура");
	ДобавимСтрокуВНастройкуКубов("Модель Анализ Маршрутов", "Контрагенты", "Контрагенты");
	
	//Инструмент планирования
	ДобавимСтрокуВНастройкуКубов("Инструмент планирования", "Номенклатура", "Номенклатура");
	ДобавимСтрокуВНастройкуКубов("Инструмент планирования", "Контрагенты", "Контрагенты");
	
КонецПроцедуры

Процедура ДобавимСтрокуВНастройкуКубов(мКуб, мСправочник, мИмяФайла)

	НовСтр = НастройкаВыгрузки.Добавить();
	НовСтр.Куб = мКуб;
	НовСтр.Справочник = мСправочник;
	НовСтр.ИмяФайла = мИмяФайла;	

КонецПроцедуры
 
 



