
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаголовокФормы = НСтр("ru = 'Настройка отладки обработчиков при %Событие% данных'");	
	Событие = ?(ОбработчикиСобытийЧитаемИзФайлаПравилОбмена, НСтр("ru = 'выгрузке'"), НСтр("ru = 'загрузке'"));
	ЗаголовокФормы = СтрЗаменить(ЗаголовокФормы, "%Событие%", Событие);
	ЭтаФорма.Заголовок = ЗаголовокФормы;
	
	ЗаголовокКнопки = НСтр("ru = 'Сформировать модуль отладки %Событие%'");
	Событие = ?(ОбработчикиСобытийЧитаемИзФайлаПравилОбмена, НСтр("ru = 'выгрузки'"), НСтр("ru = 'загрузки'"));
	ЗаголовокКнопки = СтрЗаменить(ЗаголовокКнопки, "%Событие%", Событие);
	Элементы.ВыгрузитьКодОбработчиков.Заголовок = ЗаголовокКнопки;
	
	УстановитьВидимость();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтладкаАлгоритмовПриИзменении(Элемент)
	
	Подсказка = Элементы.ПодсказкаОтладкаАлгоритмов;
	
	Подсказка.ТекущаяСтраница = Подсказка.ПодчиненныеЭлементы["Группа_"+РежимОтладкиАлгоритмов];
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаВнешнейОбработкиОбработчиковСобытийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр     = НСтр("ru = 'Файл внешней обработки обработчиков событий (*.epf)|*.epf'");
	ДиалогВыбораФайла.Расширение = "epf";
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выберите файл'");
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла = Элемент.ТекстРедактирования;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		ИмяФайлаВнешнейОбработкиОбработчиковСобытий = ДиалогВыбораФайла.ПолноеИмяФайла;
		
		ИмяФайлаВнешнейОбработкиОбработчиковСобытийПриИзменении(Элемент)
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаВнешнейОбработкиОбработчиковСобытийПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Готово(Команда)
	
	Отказ = Ложь;
	
	СтрокаСообщения = "";
	ПроверитьПравильностьВыполненияШаговМастера(Отказ, СтрокаСообщения);
	
	Если Отказ Тогда
		Предупреждение(НСтр("ru = 'Не все необходимые шаги выполнены:'") + Символы.ПС + Символы.ПС + СтрокаСообщения); 
		Возврат;
	КонецЕсли;
	
	УстановитьЗначенияРеквизитовОбработки();
	
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	ПоказатьОбработчикиСобытийВОкне();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьВидимость()
	
	ОтладкаАлгоритмовПриИзменении(Неопределено);
	//Выделение красным цветом шагов мастера, которые выполнены неправильно
	УстановитьВыделениеРамки("Группа_Шаг_4", ПустаяСтрока(ИмяФайлаВнешнейОбработкиОбработчиковСобытий));
	
	Элементы.ОткрытьФайл.Доступность = Не ПустаяСтрока(Объект.ИмяВременногоФайлаОбработчиковСобытий);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВыделениеРамки(ИмяРамки, НадоВыделитьРамку = Ложь) 
	
	РамкаШагаМастера = Элементы[ИмяРамки];
	
	Если НадоВыделитьРамку Тогда
		
		РамкаШагаМастера.ЦветТекстаЗаголовка = ЦветаСтиля.ЦветОсобогоТекста;
		
	Иначе
		
		РамкаШагаМастера.ЦветТекстаЗаголовка = Новый Цвет;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьПравильностьВыполненияШаговМастера(Отказ, СтрокаСообщения)
	
	Если ПустаяСтрока(ИмяФайлаВнешнейОбработкиОбработчиковСобытий) Тогда
		
		ВывестиСообщениеОбОшибке(Отказ, 4, СтрокаСообщения, НСтр("ru = 'Укажите имя файла внешней обработки.'"));
		
	КонецЕсли;
	
	ФайлВнешнейОбработкиОбработчиковСобытий = Новый Файл(ИмяФайлаВнешнейОбработкиОбработчиковСобытий);
	
	Если Не ФайлВнешнейОбработкиОбработчиковСобытий.Существует() Тогда
		
		ВывестиСообщениеОбОшибке(Отказ, 4, СтрокаСообщения, НСтр("ru = 'Указанный файл внешней обработки не существует.'"));
		
	КонецЕсли;
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСообщениеОбОшибке(Отказ, НомерШага, СтрокаСообщения, СообщениеОбОшибке) 
	
	//Выделяем рамку красным цветом
	УстановитьВыделениеРамки("Группа_Шаг_"+Строка(НомерШага), Истина);
	
	//Формируем сообщение об ошибке 
	СтрокаСообщения = НСтр("ru = 'Шаг №'") + Строка(НомерШага) + ": " + СообщениеОбОшибке;
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьКодОбработчиков(Команда)
	
	//Возможно выгрузку уже совершали ранее...
	Если Не ПустаяСтрока(Объект.ИмяВременногоФайлаОбработчиковСобытий) Тогда
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Выгрузить повторно'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Открыть модуль'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена);
		
		Ответ = Вопрос(НСтр("ru = 'Модуль отладки с кодом обработчиков уже выгружен.'"), СписокКнопок,,КодВозвратаДиалога.Нет);
		
		//Открываем имеющийся файл выгрузки
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			
			ПоказатьОбработчикиСобытийВОкне();
			
			Возврат;
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли; 
	
	Отказ = Ложь;
	
	УстановитьЗначенияРеквизитовОбработки();
	
	ВыгрузитьОбработчикиСобытийНаСервере(Отказ);
	
	Если Не Отказ Тогда
		
		УстановитьВидимость();
		
		ПоказатьОбработчикиСобытийВОкне();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОбработчикиСобытийВОкне()
	
	ИмяВызываемойФормы = ИмяОбработки + "УправляемаяФормаРедактораТекстовогоДокумента";
	ФормаОбработчиков = ПолучитьФорму(ИмяВызываемойФормы,,ЭтаФорма);
	
	ЗаполнитьПолеТекстовогоДокумента(ФормаОбработчиков, "ПолеОбработчикиСобытий",Объект.ИмяВременногоФайлаОбработчиковСобытий);
	ЗаполнитьПолеТекстовогоДокумента(ФормаОбработчиков, "ПолеОшибкиВыгрузки",Объект.ИмяВременногоФайлаПротоколаОбмена);
	
	Если Не ФормаОбработчиков.Элементы.ПанельОбработчиков.ПодчиненныеЭлементы.Страница_ПолеОшибкиВыгрузки.Видимость Тогда
		ФормаОбработчиков.Элементы.ПанельОбработчиков.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	ФормаОбработчиков.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПолеТекстовогоДокумента(ФормаОбработчиков, ИмяПоля, ИмяФайла) 
	
	Если Не ПустаяСтрока(ИмяФайла) Тогда
		
		Файл = Новый Файл(ИмяФайла);
		
		Если Файл.Существует() Тогда
			
			//Заполняем данными текстовое поле
			ФормаОбработчиков[ИмяПоля].Прочитать(ИмяФайла);
			
			//Определяем видимость страницы панели обработчиков
			ТекущаяСтраницаПанелиОбработчиков = ФормаОбработчиков.Элементы.ПанельОбработчиков.ПодчиненныеЭлементы["Страница_" + ИмяПоля];
			
			ТекущаяСтраницаПанелиОбработчиков.Видимость = (Файл.Размер() <> 0); 
			
			//Определяем текущую страницу
			Если ТекущаяСтраницаПанелиОбработчиков.Видимость Тогда
				
				ФормаОбработчиков.Элементы.ПанельОбработчиков.ТекущаяСтраница = ТекущаяСтраницаПанелиОбработчиков;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьОбработчикиСобытийНаСервере(Отказ)
	
	ОбъектДляСервера = РеквизитФормыВЗначение("Объект");
	ОбъектДляСервера.РежимОтладкиАлгоритмов = Объект.РежимОтладкиАлгоритмов;
	ОбъектДляСервера.ВыгрузитьОбработчикиСобытий(Отказ);
	ЗначениеВРеквизитФормы(ОбъектДляСервера, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияРеквизитовОбработки()
	
	Объект.ИмяФайлаВнешнейОбработкиОбработчиковСобытий = ИмяФайлаВнешнейОбработкиОбработчиковСобытий;
	Объект.РежимОтладкиАлгоритмов                      = РежимОтладкиАлгоритмов;
	Объект.ОбработчикиСобытийЧитаемИзФайлаПравилОбмена = ОбработчикиСобытийЧитаемИзФайлаПравилОбмена;
	
КонецПроцедуры
