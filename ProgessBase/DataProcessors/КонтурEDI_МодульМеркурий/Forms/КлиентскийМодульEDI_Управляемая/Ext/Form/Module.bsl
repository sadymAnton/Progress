&НаСервере
Перем ОбработкаОбъект;
Перем ОснМодуль;

&НаСервере
Перем ОсобенностиСообщений;

&НаСервере
//инициализация модуля и его экспортных функций
Функция ОсновнойМодуль()

	Если ОбработкаОбъект=Неопределено Тогда
		
		Если Параметры.КэшироватьМодульОбъекта Тогда
			Если Параметры.АдресХранилища<>"" Тогда
				_Структура = ПолучитьИзВременногоХранилища(Параметры.АдресХранилища);
				Если ТипЗнч(_Структура) = Тип("Структура") Тогда
					_Структура.Свойство("ОбработкаОбъект",ОбработкаОбъект);
					_Структура.Свойство("ОсобенностиСообщений",ОсобенностиСообщений);
				КонецЕсли;
			КонецЕсли;
			
			Если ОбработкаОбъект=Неопределено Тогда
				ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
				ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
				Параметры.АдресХранилища = ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект,ОсобенностиСообщений",ОбработкаОбъект,ОсобенностиСообщений),УникальныйИдентификатор);
				ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
			КонецЕсли;
		Иначе
			ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
			ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
			ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()
	Возврат ОсновнойМодуль().МодульМеркурий();
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено,РежимБлокирования = Неопределено)
	//отказ от модальности
	Если РежимБлокирования = Неопределено Тогда
		РежимБлокирования=	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если ПараметрыФормы=Неопределено Тогда
		ПараметрыФормы = Новый Структура;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("АдресХранилища",			Параметры.АдресХранилища);
	ПараметрыФормы.Вставить("IDОсновнойФормы",			Параметры.IDОсновнойФормы);
	ПараметрыФормы.Вставить("КэшироватьМодульОбъекта",	Параметры.КэшироватьМодульОбъекта);
	
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика=	ЭтаФорма;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика=	Неопределено;
	Иначе	
		Выполнить("ОписаниеОбработчика=	Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика)");
	КонецЕсли;
	
	Выполнить("ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецОбработчика, , , ,  ОписаниеОбработчика, РежимБлокирования)");
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФормуОбработки(ИмяФормы, ПараметрыФормы = Неопределено , ВладелецФормы  = Неопределено, КлючУникальности = Неопределено, ЗакрыватьПризакрытииВладельца = Ложь, ПутьКФормамОбработки)
	
	Если ПараметрыФормы=Неопределено Тогда
		ПараметрыФормы = Новый Структура;
	КонецЕсли;
	
	Если ВладелецФормы = Неопределено Тогда
		ВладелецФормы =	ЭтаФорма;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("АдресХранилища",							Параметры.АдресХранилища);
	ПараметрыФормы.Вставить("IDОсновнойФормы",							Параметры.IDОсновнойФормы);
	ПараметрыФормы.Вставить("КэшироватьМодульОбъекта",					Параметры.КэшироватьМодульОбъекта);
	
	ПолучаемаяФорма=	ПолучитьФорму(ПутьКФормамОбработки+ИмяФормы
										, ПараметрыФормы
										, ВладелецФормы
										, КлючУникальности);
	
	Если НЕ ПолучаемаяФорма = Неопределено и НЕ ВладелецФормы = Неопределено Тогда
		ПолучаемаяФорма.ВладелецФормы=	ВладелецФормы;
	КонецЕсли;
	
	Возврат ПолучаемаяФорма;
	
КонецФункции

&НаКлиенте
Процедура МеркурийВыполнитьЗадачу(ВыбраннаяСтрока,ПакетнаяОбработка=Ложь,КодДействия) Экспорт
	
	Если Лев(КодДействия,12) = "Отправить_M_" Тогда
		Результат = ОтправитьСообщениеМеркурий(ВыбраннаяСтрока,ПакетнаяОбработка);
		ВыбраннаяСтрока.Обработан = Результат;
	ИначеЕсли Лев(КодДействия,10) = "Принять_M_" Тогда
		Результат = ПринятьсообщениеМеркурий(ВыбраннаяСтрока,ПакетнаяОбработка);
		ВыбраннаяСтрока.Обработан = Результат;
	ИначеЕсли Лев(КодДействия,16) = "Переотправить_M_" Тогда
		Переотправка=Истина;
		Результат = ОтправитьСообщениеМеркурий(ВыбраннаяСтрока,ПакетнаяОбработка,Переотправка);
		ВыбраннаяСтрока.Обработан = Результат;
	ИначеЕсли Лев(КодДействия,13) = "Принять_M_REC" Тогда
		Переотправка=Ложь;
		Результат = ОтправитьСообщениеМеркурий(ВыбраннаяСтрока,ПакетнаяОбработка,Переотправка);
		ВыбраннаяСтрока.Обработан = Результат;
	ИначеЕсли КодДействия = "Завершить_M_PRD" Тогда
		Переотправка=Ложь;
		Результат = ЗавершитьТранзакциюПроизводства(ВыбраннаяСтрока,ПакетнаяОбработка);
		ВыбраннаяСтрока.Обработан = Результат;
	ИначеЕсли КодДействия = "РаспечататьВСД" Тогда//ГрВСД
		Переотправка=Ложь;
		Результат = РаспечататьВСД(ВыбраннаяСтрока, ПакетнаяОбработка);
		ВыбраннаяСтрока.Обработан = Результат;
	КонецЕсли;
	
	Возврат;
						
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПослеЗакрытияКарточкиСообщения(Парам1 = неопределено, Парам2 = неопределено) Экспорт
КонецПроцедуры

&НаКлиенте
Функция ОткрытьКарточкуМеркурий(ВыбраннаяСтрока, ПереотправкаСообщения = Ложь, Сообщение=Неопределено ) Экспорт
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ПереотправкаСообщения",	ПереотправкаСообщения);
	ПараметрыФормы.Вставить("СообщениеСсылка",	ВыбраннаяСтрока.СообщениеСсылка);
	ПараметрыФормы.Вставить("ТипСообщения",	ВыбраннаяСтрока.ТипСообщения);
	ПараметрыФормы.Вставить("Документ1С",	ВыбраннаяСтрока.Документ);
	ПараметрыФормы.Вставить("ТолькоПросмотрСообщения",	ВыбраннаяСтрока.ТребуемоеДействие = "Работа завершена" или 
														ВыбраннаяСтрока.ТребуемоеДействие = "Обрабатывается" Или 
														ВыбраннаяСтрока.ТребуемоеДействие = "Распечатать ВСД");
	ПараметрыФормы.Вставить("МодальностьЗапрещена", Параметры.МодальностьЗапрещена);
	ПараметрыФормы.Вставить("ПутьКФормамМеркурий", Параметры.ПутьКФормамМеркурий);
	ПараметрыФормы.Вставить("КэшироватьМодульОбъекта", Истина);

	Если Параметры.МодальностьЗапрещена Тогда 
		Выполнить("ОткрытьФормуОбъектаМодально(Параметры.ПутьКФормамМеркурий + ""Меркурий_СообщениеУправляемая"", ПараметрыФормы,""ОбработчикПослеЗакрытияКарточкиСообщения"")");//,ДополнительныеПараметры);
	Иначе
		ФормаСообщения = ПолучитьФормуОбработки("Меркурий_СообщениеУправляемая",ПараметрыФормы,,,,Параметры.ПутьКФормамМеркурий);
		Если ФормаСообщения<>Неопределено Тогда
			ФормаСообщения.ОткрытьМодально();
			ОбработчикПослеЗакрытияКарточкиСообщения();
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ОтправитьСообщениеМеркурийНаСервере(ВыбраннаяСтрока, ПереотправкаСообщения)
	
	МодульМеркурий = МодульОбъекта().МодульМеркурий();
	ТипСообщения = ВыбраннаяСтрока.ТипСообщения;
	
	Сообщение = МодульОбъекта().ПолучитьСтруктуруСообщения(ТипСообщения,"Исходящее");
	
	МодульМеркурий.ПодготовитьТранзакциюМеркурий(ВыбраннаяСтрока.ТипСообщения,ВыбраннаяСтрока.Документ,Сообщение);
	
	//сразу
	Параметры = Новый Структура();
	Параметры.Вставить("ОтправитьСообщениеИзФормы",	ложь);
	Параметры.Вставить("Сообщение",					Сообщение);
	Параметры.Вставить("ПереотправкаСообщения",	ПереотправкаСообщения);
	Параметры.Вставить("СообщениеСсылка",	ВыбраннаяСтрока.СообщениеСсылка);
	Параметры.Вставить("ИмяМетода",			МодульМеркурий.ПолучитьИмяМетодаМеркурийПоТипуСообщения(ТипСообщения));
	
	МодульМеркурий.ВыполнитьТранзакциюМеркурий(ТипСообщения,ВыбраннаяСтрока.Документ,Параметры);
	Возврат Сообщение.СообщениеСсылка;
		
КонецФункции

&НаКлиенте
Функция ОтправитьСообщениеМеркурий(ВыбраннаяСтрока, НеОткрыватьФормы = Ложь, ПереотправкаСообщения = Ложь) Экспорт
	
	
	Если НеОткрыватьФормы = Истина Тогда
		
		СообщениеСсылка = ОтправитьСообщениеМеркурийНаСервере(ВыбраннаяСтрока, ПереотправкаСообщения);
		
	Иначе
		
		Сообщение = Неопределено;
		ОткрытьКарточкуМеркурий(ВыбраннаяСтрока,ПереотправкаСообщения,Сообщение);
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(СообщениеСсылка);
	
КонецФункции

&НаСервере
Функция ПринятьСообщениеМеркурийНаСервере(ВыбраннаяСтрока)
	
	МодульМеркурий = МодульОбъекта().МодульМеркурий();
	
	Если ЗначениеЗаполнено(ВыбраннаяСтрока.СообщениеСсылка) Тогда
		
		Сообщение = МодульОбъекта().ПрочитатьСообщение(ВыбраннаяСтрока.СообщениеСсылка);
		
	Иначе
		Сообщение = МодульОбъекта().ПолучитьСтруктуруСообщения(ВыбраннаяСтрока.ТипСообщения,"Исходящее");
		
		МодульМеркурий.ПодготовитьТранзакциюМеркурий(ВыбраннаяСтрока.ТипСообщения,ВыбраннаяСтрока.Документ,Сообщение);
		
	КонецЕсли;
	ПереотправкаСообщения = ВыбраннаяСтрока.ТребуемоеДействие = "Переотправить"; //рефакторинг
	
	Параметры = Новый Структура();
	Параметры.Вставить("ОтправитьСообщениеИзФормы",	ложь);
	Параметры.Вставить("Сообщение",					Сообщение);
	Параметры.Вставить("ПереотправкаСообщения",	ПереотправкаСообщения);
	Параметры.Вставить("СообщениеСсылка",	ВыбраннаяСтрока.СообщениеСсылка);
	Параметры.Вставить("ИмяМетода",			МодульМеркурий.ПолучитьИмяМетодаМеркурийПоТипуСообщения(Сообщение.ТипСообщения));
	
	МодульМеркурий.ОтправитьТранзакциюМеркурий(Сообщение,Параметры);
	
	Возврат Сообщение.СообщениеСсылка;
	
КонецФункции

&НаКлиенте
Функция ПринятьСообщениеМеркурий(ВыбраннаяСтрока, НеОткрыватьФормы = Ложь)
	
	Сообщение = Неопределено;
	
	Если НеОткрыватьФормы = Истина Тогда
		
		СообщениеСсылка = ПринятьСообщениеМеркурийНаСервере(ВыбраннаяСтрока);
		
	Иначе
		
		ОткрытьКарточкуМеркурий(ВыбраннаяСтрока, Ложь, Сообщение);
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(СообщениеСсылка);
	
	
КонецФункции

&НаСервере
Функция ПодготовитьСообщениеЗавершениеТранзакцииПроизводства(ВыбраннаяСтрока)
	Сообщение = МодульОбъекта().МодульМеркурий().ПодготовитьСообщениеЗавершениеТранзакцииПроизводства(ВыбраннаяСтрока.ТипСообщения,ВыбраннаяСтрока.СообщениеСсылка,ВыбраннаяСтрока.Документ);
	Возврат Сообщение;
КонецФункции
	
&НаКлиенте
Функция ЗавершитьТранзакциюПроизводства(ВыбраннаяСтрока, НеОткрыватьФормы = Ложь)
	
	Если НеОткрыватьФормы = Истина Тогда
		Возврат ложь;
		//пока только через карточку
	Иначе
		
		Сообщение = ПодготовитьСообщениеЗавершениеТранзакцииПроизводства(ВыбраннаяСтрока);
		
		ОткрытьКарточкуМеркурий(ВыбраннаяСтрока,Ложь,Сообщение);
		
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(Сообщение.СообщениеСсылка);
	
КонецФункции

&НаСервере
Процедура ВыполнитьПакетТранзакцийМеркурийНаСервере(МассивМеркурий)
	Если ОсновнойМодуль().ИспользуетсяМеркурий = Истина Тогда
		ОсновнойМодуль().МодульМеркурий().ВыполнитьПакетТранзакций(МассивМеркурий);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция РаспечататьВСД(ВыбраннаяСтрока, ПакетнаяОбработка)//ГрВСД
	
	МассивМеркурийРаспечататьВСД = Новый Массив();
	МассивМеркурийРаспечататьВСД.Добавить(ВыбраннаяСтрока.СообщениеСсылка);
	ТабДокумент = ПолучитьТабличныйДокументГрупповогоВСДНаСервере(МассивМеркурийРаспечататьВСД);
	
	Если ТабДокумент = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТабДокумент.Показать("Перечень ВСД");
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументГрупповогоВСДНаСервере(МассивМеркурийРаспечататьВСД)
	
	ПрефиксТестовогоСервера = ?(ОсновнойМодуль().ПолучитьКонстантуEDI("М_ИспользуетсяТестовыйAPI")=Истина,"t2-","");
	ТабДокумент = ОсновнойМодуль().МодульМеркурий().ПолучитьТабличныйДокументПеречняВСДПоСпискуСообщений(МассивМеркурийРаспечататьВСД, ПрефиксТестовогоСервера, Истина);
	Возврат ТабДокумент;

КонецФункции

&НаСервере
Функция ПолучитьНастройкуМодуля(ИмяНастройки)
	Возврат ОсновнойМодуль().НастройкиМодуля[ИмяНастройки];
КонецФункции

&НаКлиенте
Процедура ОтправитьТранзакцииМеркурийМассово(ТабСообщения, ВыделенныеСтроки) Экспорт

	//Если не МодульОбъекта().ИспользуетсяМеркурий Тогда Возврат КонецЕсли;
	
	МассивМеркурий = Новый Массив;
	МассивМеркурийРаспечататьВСД = Новый Массив;
	
	Для Каждого ИдСтр Из ВыделенныеСтроки Цикл
		Стр = ТабСообщения.НайтиПоИдентификатору(ИдСтр);
		Если Стр = Неопределено Тогда Продолжить; КонецЕсли;
		Если Лев(Стр.ТипСообщения,2) = "M_" Тогда
			Если Стр.ТребуемоеДействие = "Распечатать ВСД" Тогда//ГрВСД
				МассивМеркурийРаспечататьВСД.Добавить(Стр.СообщениеСсылка);
			Иначе
				ЭтоПереотправкаСообщения = Лев(Стр.ТребуемоеДействие,13) = "Переотправить";
				МассивМеркурий.Добавить(Новый Структура("ТипСообщения,Документ,ПереотправкаСообщения,СообщениеСсылка",Стр.ТипСообщения,Стр.Документ,ЭтоПереотправкаСообщения,Стр.СообщениеСсылка));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	

	Если МассивМеркурий.Количество()>0 Тогда 
		ВыполнитьПакетТранзакцийМеркурийНаСервере(МассивМеркурий);
	КонецЕсли;
	
	Если ПолучитьНастройкуМодуля("ОбновлятьВесьСписокПриРаботеСЗаказами") <> Истина Тогда
		Для Каждого ИдСтр Из ВыделенныеСтроки Цикл
			Стр = ТабСообщения.НайтиПоИдентификатору(ИдСтр);
			Если НЕ Стр = Неопределено Тогда
				Если Стр.ТребуемоеДействие <> "Распечатать ВСД" Тогда//ГрВСД
					Стр.Обработан = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивМеркурийРаспечататьВСД.Количество()>0 Тогда
		
	    ТабДокумент = ПолучитьТабличныйДокументГрупповогоВСДНаСервере(МассивМеркурийРаспечататьВСД);
		ТабДокумент.Показать("Перечень ВСД");

	КонецЕсли;

		
КонецПроцедуры

//ОбработчикПослеЗакрытияКарточкиСообщения

