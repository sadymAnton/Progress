&НаСервере
Перем ОбработкаОбъект;

&НаКлиенте
Перем ИмяОбработки;

//******************************* Общие **********************************

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
//		ОбработкаОбъект.Инициализировать(ОсновнойМодуль());
				
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

//&НаСервере
////инициализация модуля и его экспортных функций
//Функция МодульОбъекта(ОбновитьКэш=Ложь)

//	КэшироватьМодульОбъекта = Истина;
//	
//	Если ОбработкаОбъект=Неопределено или ОбновитьКэш Тогда
//		//TODO перекликается с функцией ПоместитьМОВХранилище()
//		Если КэшироватьМодульОбъекта Тогда
//			Если Параметры.АдресХранилища<>"" и Не ОбновитьКэш Тогда
//				_Структура = ПолучитьИзВременногоХранилища(Параметры.АдресХранилища);
//				Если ТипЗнч(_Структура) = Тип("Структура") Тогда
//					_Структура.Свойство("ОбработкаОбъект",ОбработкаОбъект);
//				КонецЕсли;
//			КонецЕсли;
//			
//			Если ОбработкаОбъект=Неопределено или ОбновитьКэш Тогда //после некоторых действий важно обновлять кэш (например изменение ключевых настроек)
//				ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
//				//ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
//				Параметры.АдресХранилища = ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект",ОбработкаОбъект),УникальныйИдентификатор);
//				//ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
//			КонецЕсли;
//			
//		Иначе
//			ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
//			//ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
//			//ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
//		КонецЕсли;

//	КонецЕсли;	
//	
//	Возврат ОбработкаОбъект;
//	
//КонецФункции


&НаКлиенте
Процедура ПредупреждениеМеркурий_Оповещение(Парам1, Парам2) Экспорт
КонецПроцедуры

&НаКлиенте
Функция ПредупреждениеМеркурий(ТекстПредупреждения)
	
	Кнопки = новый СписокЗначений;
	Кнопки.Добавить("Всё понятно.");
	
	Если Параметры.МодальностьЗапрещена Тогда
		Выполнить("ПоказатьВопрос(Новый ОписаниеОповещения(""ПредупреждениеМеркурий_Оповещение"",ЭтаФорма),ТекстПредупреждения,Кнопки,,,""Контур.Меркурий"")");
	Иначе
		Вопрос(ТекстПредупреждения, Кнопки,,,"Контур.Меркурий");
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МодульОбъекта().ПриветствиеКонтрольМетаданных(Элементы);
	Параметры.МодальностьЗапрещена = МодульОбъекта().МодальностьЗапрещена();
	
	Попытка
		Если Элементы.ПанельПодключенияМеркурия.Видимость = Истина тогда
			НастройкиМодуляМеркурий = МодульОбъекта().ПолучитьСписокСвойствEDI(
			"МодульМеркурийТип
			|МодульМеркурийПуть
			|МодульМеркурийИмяОбработки
			|МодульМеркурийВидСправочника
			|МодульМеркурийGUID");
			МодульМеркурийТип 			= НастройкиМодуляМеркурий.МодульМеркурийТип;	
			МодульМеркурийПуть 			= НастройкиМодуляМеркурий.МодульМеркурийПуть;	
			МодульМеркурийИмяОбработки 	= НастройкиМодуляМеркурий.МодульМеркурийИмяОбработки;
			МодульМеркурийСсылка        = ПолучитьСсылкуНаМодульМеркурий(НастройкиМодуляМеркурий);
			
			Если Не ЗначениеЗаполнено(МодульМеркурийПуть) 
				И Не ЗначениеЗаполнено(МодульМеркурийТип)
				И Найти(МодульОбъекта().ИспользуемоеИмяФайла,"AppData")=0 Тогда
				 МодульМеркурийПуть = МодульОбъекта().ИспользуемоеИмяФайла;
			КонецЕсли;
			
	Элементы.МодульМеркурийИмяОбработки.СписокВыбора.Очистить();
	СписокОбработокКонфигурации = Новый СписокЗначений;
	Для Каждого Обработка Из Метаданные.Обработки Цикл
		Элементы.МодульМеркурийИмяОбработки.СписокВыбора.Добавить(Обработка.Имя);
	КонецЦикла;
			
			Если ЗначениеЗаполнено(МодульМеркурийТип) И НЕ МодульМеркурийТип = "Нет" Тогда
				МестонахождениеМодуляМеркурий = МодульМеркурийТип;
			Иначе
				МестонахождениеМодуляМеркурий = "Диск";
			КонецЕсли;
			
		КонецЕсли;
		УправлениеДоступностьюПолейНастройкиПодключенияМодуляМеркурий();

	Исключение
		
		Элементы.ПанельПодключенияМеркурия.Видимость = Ложь;
	КонецПопытки;

	
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылкуНаМодульМеркурий(НастройкиМодуляМеркурий) Экспорт
	
	ИмяСправочника = НастройкиМодуляМеркурий.МодульМеркурийВидСправочника;
	GUIDСсылка	   = НастройкиМодуляМеркурий.МодульМеркурийGUID;

	Если НЕ ИмяСправочника = Неопределено И НЕ GUIDСсылка = Неопределено Тогда
		
		НовыйGUID = Новый УникальныйИдентификатор(GUIDСсылка);
		СсылкаМодуль = Справочники[ИмяСправочника].ПолучитьСсылку(НовыйGUID);
		
		Если ЗначениеЗаполнено(СсылкаМодуль) Тогда
			Возврат СсылкаМодуль;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


&НаСервере
Процедура УправлениеДоступностьюПолейНастройкиПодключенияМодуляМеркурий()
	
	ЭлементыФормы = Элементы;
	
	//ЭлементыФормы.НадписьПодключаемыйМодульПуть.Доступность = Истина;
	ЭлементыФормы.МодульМеркурийПуть.Доступность		= Истина;
	
	ЭлементыФормы.МодульМеркурийСсылка.АвтоОтметкаНезаполненного	= Истина;
	ЭлементыФормы.МодульМеркурийПуть.ОтметкаНезаполненного			= Истина;
	ЭлементыФормы.МодульМеркурийИмяОбработки.ОтметкаНезаполненного	= Истина;
	
	//ЭлементыФормы.НадписьПодключаемыйИмяОбработки.Доступность = Истина;
	ЭлементыФормы.МодульМеркурийИмяОбработки.Доступность = Истина;
	
	ЭлементыФормы.МодульМеркурийСсылка.АвтоОтметкаНезаполненного		= Ложь;
	
	
	Если МестонахождениеМодуляМеркурий = "Диск" Тогда
		
		//ЭлементыФормы.НадписьПодключаемыйСсылка.Доступность		= Ложь;
		ЭлементыФормы.МодульМеркурийСсылка.Доступность		= Ложь;
		
		ЭлементыФормы.МодульМеркурийПуть.АвтоОтметкаНезаполненного		= Истина;
		ЭлементыФормы.МодульМеркурийСсылка.ОтметкаНезаполненного		= Ложь;
		ЭлементыФормы.МодульМеркурийИмяОбработки.ОтметкаНезаполненного	= Ложь;
		
		//ЭлементыФормы.НадписьПодключаемыйИмяОбработки.Доступность = Ложь;
		ЭлементыФормы.МодульМеркурийИмяОбработки.Доступность = Ложь;
		
	ИначеЕсли МестонахождениеМодуляМеркурий = "1С" Тогда
		
		//ЭлементыФормы.НадписьПодключаемыйМодульПуть.Доступность = Ложь;
		ЭлементыФормы.МодульМеркурийПуть.Доступность		= Ложь;
		
		ЭлементыФормы.МодульМеркурийСсылка.АвтоОтметкаНезаполненного	= Истина;
		ЭлементыФормы.МодульМеркурийСсылка.Доступность					= Истина;
		//ЭлементыФормы.НадписьПодключаемыйСсылка.Доступность				= Истина;
		ЭлементыФормы.МодульМеркурийПуть.ОтметкаНезаполненного			= Ложь;
		ЭлементыФормы.МодульМеркурийИмяОбработки.ОтметкаНезаполненного	= Ложь;
		
		//ЭлементыФормы.НадписьПодключаемыйИмяОбработки.Доступность = Ложь;
		ЭлементыФормы.МодульМеркурийИмяОбработки.Доступность = Ложь;
		
	ИначеЕсли МестонахождениеМодуляМеркурий = "Конфигурация" Тогда	
		
		//ЭлементыФормы.НадписьПодключаемыйСсылка.Доступность		= Ложь;
		ЭлементыФормы.МодульМеркурийСсылка.Доступность			= Ложь;
		//ЭлементыФормы.НадписьПодключаемыйМодульПуть.Доступность = Ложь;
		
		ЭлементыФормы.МодульМеркурийПуть.Доступность		= Ложь;
		
		ЭлементыФормы.МодульМеркурийИмяОбработки.АвтоОтметкаНезаполненного	= Истина;
		ЭлементыФормы.МодульМеркурийСсылка.ОтметкаНезаполненного			= Ложь;
		ЭлементыФормы.МодульМеркурийПуть.ОтметкаНезаполненного				= Ложь;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПриветствиеПодключитьМодульEDIНаСервере()
	СтруктураНастроек=Новый Структура;
	СтруктураНастроек.Вставить("МодульМеркурийТип",  МестонахождениеМодуляМеркурий);
	СтруктураНастроек.Вставить("МодульМеркурийПуть",	МодульМеркурийПуть);
	Если ЗначениеЗаполнено(МодульМеркурийСсылка) Тогда
		СтруктураНастроек.Вставить("МодульМеркурийВидСправочника",	СокрЛП(МодульМеркурийСсылка.Метаданные().Имя));
		СтруктураНастроек.Вставить("МодульМеркурийGUID",			СокрЛП(МодульМеркурийСсылка.УникальныйИдентификатор()));
	КонецЕсли;
	СтруктураНастроек.Вставить("МодульМеркурийИмяОбработки", 		МодульМеркурийИмяОбработки);

	Возврат МодульОбъекта().ПриветствиеПодключитьМодульEDI(СтруктураНастроек);
КонецФункции

&НаКлиенте
Процедура ПодключитьМодульEDIНажатие(Элемент)
	
	Если (МестонахождениеМодуляМеркурий = "Диск" И НЕ ЗначениеЗаполнено(МодульМеркурийПуть))
	ИЛИ (МестонахождениеМодуляМеркурий = "1С" И НЕ ЗначениеЗаполнено(МодульМеркурийСсылка))
	ИЛИ (МестонахождениеМодуляМеркурий = "Конфигурация" И НЕ ЗначениеЗаполнено(МодульМеркурийИмяОбработки))
		Тогда
		ПредупреждениеМеркурий("Выберите откуда подключить модуль Контур.Меркурий");
		Возврат;
	КонецЕсли;

	Если Элемент.Заголовок = "Подключить" Тогда 
		ПерейтиКВводуУчетнойЗаписи();
	Иначе
		
		ТекстОшибки = ПриветствиеПодключитьМодульEDIНаСервере();
		Если ТекстОшибки = "" ИЛИ ТекстОшибки = неопределено Тогда
			ТекстПредупреждения = "Модуль подключен. Теперь перезапустите модуль EDI и не забудьте ознакомиться с приложенной инструкцией
									|Попытки сэкономить время при изучении инструкции приведут к его серьезной потере в будущем.";
			Элементы.Приветствие.Заголовок = ТекстПредупреждения;
			ПредупреждениеМеркурий(ТекстПредупреждения);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ОтключитьМодульEDIНаСервере()
	Возврат МодульОбъекта().ПриветствиеОтключитьМодульEDI(Элементы.Отключить, Элементы);
КонецФункции

&НаКлиенте
Процедура ОтключитьМодульEDIНажатие(Элемент)
	ТекстПредупреждения = ОтключитьМодульEDIНаСервере();
	ПредупреждениеМеркурий(ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура МнеНужнаПомощьНажатие(Элемент)
	ЗапуститьПриложение("https://kontur.ru/support");
КонецПроцедуры

&НаКлиенте
Процедура ВводУчетнойЗаписиОповещение(Парам1, Парам2) Экспорт
	Если Парам1 = Истина Тогда
		ТекстПредупреждения = "Модуль подключен. Теперь перезапустите модуль EDI и не забудьте ознакомиться с приложенной инструкцией
		|Попытки сэкономить время при изучении инструкции приведут к его серьезной потере в будущем.";
		Элементы.Отключить.Видимость = Истина;
		Элементы.ПодключитьМодульEDI.Видимость = Ложь;
		Элементы.Приветствие.Заголовок = ТекстПредупреждения;
	Иначе
		ТекстПредупреждения = "Вы не сможете работать в интеграции с Меркурием без учетной записи.
		|Получите учетную запись и возвращайтесь...";
	КонецЕсли;
	
	Если ТекстПредупреждения<>"" Тогда
		ПредупреждениеМеркурий(ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПутьКФормам()
	Возврат МодульОбъекта().Метаданные().ПолноеИмя() + ".Форма.";
КонецФункции

&НаКлиенте
Процедура ПерейтиКВводуУчетнойЗаписи()
	
	ИмяФормыРеквизитов = ПутьКФормам()+"Меркурий_ФормаВводаРеквизитовИПроверкиПодключенияУправляемая";
	Если Параметры.МодальностьЗапрещена Тогда
		Выполнить("ОткрытьФорму(ИмяФормыРеквизитов,Новый Структура(""МодальностьЗапрещена"", Истина),ЭтаФорма,,,,Новый ОписаниеОповещения(""ВводУчетнойЗаписиОповещение"", ЭтаФорма),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)");
	Иначе
		ОткрытьФормуМодально(ИмяФормыРеквизитов,Новый Структура("МодальностьЗапрещена", Ложь),ЭтаФорма);
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакет(ИмяМакета)
	Возврат МодульОбъекта().ПолучитьМакет(ИмяМакета);
КонецФункции

&НаКлиенте
Процедура СохранитьФайлОбновленияНаДискНажатие(Элемент)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбора.Заголовок		= "Укажите файл, в который нужно сохранить обновление для вашей конфигурации";
	ДиалогВыбора.Фильтр			= "Файл конфигурации 1С (*.cf)|*.cf";      
	ДиалогВыбора.ПолноеИмяФайла = "КонтурMercury_upd.cf";
	
	Если ДиалогВыбора.Выбрать() Тогда      
		
		ПутьКФайлу = ДиалогВыбора.ПолноеИмяФайла;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ПолучитьМакет("ОбновлениеДляХраненияДанных").Записать(ПутьКФайлу);

КонецПроцедуры


&НаКлиенте
Процедура ПереключательПутьПриИзменении(Элемент)
	УправлениеДоступностьюПолейНастройкиПодключенияМодуляМеркурий();
КонецПроцедуры

&НаКлиенте
Процедура МодульМеркурийИмяОбработкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если СтрДлина(ВыбранноеЗначение) > 255 Тогда
		ПредупреждениеМеркурий("Длина имени обработки не может быть более 255 символов.");
		ВыбранноеЗначение = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МодульМеркурийПутьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	Режим = РежимДиалогаВыбораФайла.Открытие;
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	Фильтр = "Внешняя обработка 1С:Предприятия 8 (*.epf)|*.epf";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
    ДиалогОткрытияФайла.Заголовок = "Выберите файл подключаемого модуля";
    Если ДиалогОткрытияФайла.Выбрать() Тогда
         МодульМеркурийПуть = ДиалогОткрытияФайла.ПолноеИмяФайла;
    КонецЕсли;

КонецПроцедуры



