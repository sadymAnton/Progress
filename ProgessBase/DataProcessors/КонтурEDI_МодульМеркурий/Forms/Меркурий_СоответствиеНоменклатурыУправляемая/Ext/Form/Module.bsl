&НаСервере
Перем ОбработкаОбъект;
Перем ОснМодуль;

Перем КлассификаторЕдиницИзмерения;

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.Инициализировать(ОсновнойМодуль());
				
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаСервере
Функция ОсновнойМодуль()
	Если ОснМодуль = Неопределено Тогда
		ОснМодуль = ПолучитьИзВременногоХранилища(Параметры.АдресХранилища).ОбработкаОбъект;
	КонецЕсли;
	Возврат ОснМодуль;
КонецФункции

&НаСервере
Процедура УстановитьТипКолонки1С(ИмяПоля,ИмяТипа = "")
	
	Если ИмяТипа = "" Тогда
		ИмяТипа = ИмяПоля;
	КонецЕсли;
	
	ПолеФормы	= Элементы["Соответствия"+ИмяПоля];
	ТипПоля		= ОсновнойМодуль().ПолучитьТипЗначенияОбъекта(ИмяТипа);
		
	Если НЕ ТипПоля = Неопределено Тогда
			
		ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КлассификаторЕИ()

	Если КлассификаторЕдиницИзмерения = Неопределено Тогда 
		КлассификаторЕдиницИзмерения = МодульОбъекта().ПолучитьКлассификаторЕдиницИзмеренияМеркурий();
	КонецЕсли;
	
    Возврат КлассификаторЕдиницИзмерения;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТекСоответствия()

	ТаблицаСсылок = Новый ТаблицаЗначений;
	ТаблицаСсылок.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	
	НоваяСтрока = ТаблицаСсылок.Добавить();
	НоваяСтрока.Ссылка = Номенклатура;
	Результат = МодульОбъекта().СоответствиеТоваровПолучитьСоответствияСпискаНоменклатуры(ТаблицаСсылок);
	
	ТабСоответствий = Результат.Выгрузить();
	
	Для Каждого СтрокаСоответствия Из ТабСоответствий Цикл
		НоваяСтрока = Соответствия.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаСоответствия);
		
		НоваяСтрока.ЕдиницаGUID = СтрокаСоответствия.ЕдиницаИзмеренияGUID;
		
		Если ЗначениеЗаполнено(НоваяСтрока.ЕдиницаGUID) Тогда 
			НайденноеНазвание = КлассификаторЕИ().Найти(НоваяСтрока.ЕдиницаGUID,"GUID");
			Если НайденноеНазвание<>Неопределено Тогда 
				НоваяСтрока.НаименованиеЕдиницаGUID = НайденноеНазвание.Наименование;
			КонецЕсли;
		КонецЕсли;

		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьТипКолонки1С("ХарактеристикаНоменклатуры");
	УстановитьТипКолонки1С("ЕдиницаИзмерения","МеркурийЕдиницаИзмерения");
	
	Номенклатура = Параметры.Номенклатура;
	ЗаполнитьТекСоответствия();
	
	Для Каждого Стр из Соответствия Цикл
		Стр.Код = Стр.Ссылка.Код;
		Стр.Артикул = Стр.Ссылка.Артикул;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Функция ДобавитьНаСервере()
	
	НоваяСтрока = Соответствия.Добавить();
	НоваяСтрока.Ссылка = Номенклатура;
	НоваяСтрока.КоэффициентУмножения = 1;
	
	Попытка	
		НоваяСтрока.ЕдиницаИзмерения = Номенклатура.БазоваяЕдиницаИзмерения;
	Исключение
		
	КонецПопытки;
	ИмяСправочникаХарактеристики = ОсновнойМодуль().ПолучитьТипЗначенияОбъекта("ХарактеристикаНоменклатуры",,Истина);
	Если ИмяСправочникаХарактеристики<>Неопределено Тогда
		НоваяСтрока.ХарактеристикаНоменклатуры = Справочники[ИмяСправочникаХарактеристики].ПустаяСсылка();
	КонецЕсли;
	
	Возврат НоваяСтрока.ПолучитьИдентификатор();
	
КонецФункции

&НаКлиенте
Процедура Добавить(Команда)
	//выбор соответствия
	ТекИД = ДобавитьНаСервере();
	ВыбратьСоответствие(Соответствия.НайтиПоИдентификатору(ТекИд));
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораНоменклатуры(СпПараметров, ТекСтрока) Экспорт
	
	Если ЗначениеЗаполнено(СпПараметров) Тогда
		ТекСтрока.GUID = СпПараметров.GUID;
		ТекСтрока.НаименованиеМеркурий = СпПараметров.Наименование;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораЕдиницыИзмерения(СпПараметров, ТекСтрока) Экспорт
	
	Если ЗначениеЗаполнено(СпПараметров) Тогда
		ТекСтрока.ЕдиницаGUID = СпПараметров.GUID;
		ТекСтрока.НаименованиеЕдиницаGUID = СпПараметров.Наименование;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСоответствие(ТекСтрока)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресХранилища", Параметры.АдресХранилища);
	    		
	Если Параметры.МодальностьЗапрещена Тогда 
		Выполнить("ОткрытьФорму(Параметры.ПутьКФормамМеркурий+""Меркурий_НоменклатураВыборУправляемая"", ПараметрыФормы, ЭтаФорма, ,,,Новый ОписаниеОповещения(""ОбработчикВыбораНоменклатуры"", ЭтаФорма, ТекСтрока), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)");
	Иначе
		ВыбраннаяСтрока = ПолучитьФорму(Параметры.ПутьКФормамМеркурий+"Меркурий_НоменклатураВыборУправляемая",ПараметрыФормы, ЭтаФорма).ОткрытьМодально();
		ОбработчикВыбораНоменклатуры(ВыбраннаяСтрока, ТекСтрока);
	КонецЕсли;
  	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСоответствиеЕдиницыИзмерения(ТекСтрока)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресХранилища", Параметры.АдресХранилища);
	    		
	Если Параметры.МодальностьЗапрещена Тогда 
		Выполнить("ОткрытьФорму(Параметры.ПутьКФормамМеркурий+""Меркурий_ЕдиницаМеркурийВыборУправляемая"", ПараметрыФормы, ЭтаФорма, ,,,Новый ОписаниеОповещения(""ОбработчикВыбораЕдиницыИзмерения"", ЭтаФорма, ТекСтрока), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)");
	Иначе
		ВыбраннаяСтрока = ПолучитьФорму(Параметры.ПутьКФормамМеркурий+"Меркурий_ЕдиницаМеркурийВыборУправляемая",ПараметрыФормы, ЭтаФорма).ОткрытьМодально();
		ОбработчикВыбораЕдиницыИзмерения(ВыбраннаяСтрока, ТекСтрока);
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура Скопировать(Команда)
	
	ТекСтр = Элементы.Соответствия.ТекущиеДанные;
	Если ТекСтр<>Неопределено Тогда 
		НоваяСтрока = Соответствия.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтр);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	
	Если НЕ Элементы.Соответствия.ТекущиеДанные = Неопределено Тогда
		Соответствия.Удалить(Соответствия.Индекс(Элементы.Соответствия.ТекущиеДанные))
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствияПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СоответствияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура ОКНаСервере()
	МодульОбъекта().СоответствиеТоваровМеркурий_СохранитьНаборСоответствийПоНоменклатуре(Номенклатура,Соответствия);
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ПроверкиПройдены = Истина;
	
	Для Каждого СтрокаТоваров Из Соответствия Цикл
		
		Если не ЗначениеЗаполнено(СтрокаТоваров.GUID) Тогда
			Сообщить("Не выбрано соответствие!");	
			ПроверкиПройдены = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

	Если ПроверкиПройдены Тогда
		ОКНаСервере();
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсюКолонкуТекущимЗначением(Команда)
	
	ТекКолонка = СтрЗаменить(Элементы.Соответствия.ТекущийЭлемент.Имя, "Соответствия", "");
	ТекЗначение = Неопределено;
	Выполнить("ТекЗначение = Элементы.Соответствия.ТекущиеДанные."+ТекКолонка);
	
	Для Каждого СтрокаСоотв Из Соответствия Цикл
		Выполнить("СтрокаСоотв."+ТекКолонка+" = ТекЗначение");
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СоответствияХарактеристикаНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	////ограничиваем форму выбора по Номенклатуре
	//ТекСтрока = ЭлементыФормы.Соответствия.ТекущиеДанные;
	//Если ЗначениеЗаполнено(Номенклатура) Тогда
	//	Если Не ТипЗнч(Элемент.Значение) = Тип("Неопределено") Тогда
	//		СтандартнаяОбработка = Ложь;
	//		ФормаВыбора = Справочники[Метаданные.НайтиПоТипу(ТипЗнч(Элемент.Значение)).Имя].ПолучитьФормуВыбора();
	//		ФормаВыбора.ПараметрВыборПоВладельцу = Номенклатура;
	//		ВыбранноеЗначение = ФормаВыбора.ОткрытьМодально();
	//		Если Не ВыбранноеЗначение = Неопределено Тогда 
	//			ТекСтрока.ХарактеристикаНоменклатуры = ВыбранноеЗначение;
	//		КонецЕсли;
	//	КонецЕсли;
	//Иначе
	//	Предупреждение("В карточке неизвестна номенклатура");
	//КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура СоответствияНаименованиеМеркурийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьСоответствие(Элементы.Соответствия.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоответствияGUIDНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьСоответствие(Элементы.Соответствия.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоответствияНаименованиеЕдиницаGUIDНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьСоответствиеЕдиницыИзмерения(Элементы.Соответствия.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоответствияЕдиницаGUIDНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьСоответствиеЕдиницыИзмерения(Элементы.Соответствия.ТекущиеДанные);
КонецПроцедуры


//доделать СоответствияХарактеристикаНоменклатурыНачалоВыбора
//из ОК строку ПроверкиПройдены = ложь перенести в ОФ?

