&НаСервере
Перем ОбработкаОбъект;
&НаСервере
Перем ОснМодуль;

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.Инициализировать(ОсновнойМодуль());
				
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаСервере
Функция ОсновнойМодуль()
	Если ОснМодуль = Неопределено Тогда
		ОснМодуль = ПолучитьИзВременногоХранилища(Параметры.АдресХранилища).ОбработкаОбъект;
	КонецЕсли;
	Возврат ОснМодуль;
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуОбъектаМодально(ИмяФормы, ПараметрыФормы = Неопределено, ИмяОбработчика = Неопределено, ПараметрыОбработчика = Неопределено, ВладелецОбработчика = Неопределено,РежимБлокирования = Неопределено)
	//отказ от модальности
	Если РежимБлокирования = Неопределено Тогда
		РежимБлокирования=	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если ПараметрыФормы=Неопределено Тогда
		ПараметрыФормы = Новый Структура;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("АдресХранилища",			Параметры.АдресХранилища);
	//ПараметрыФормы.Вставить("IDОсновнойФормы",			Параметры.IDОсновнойФормы);
	//ПараметрыФормы.Вставить("КэшироватьМодульОбъекта",	Параметры.КэшироватьМодульОбъекта);
	
	Если ВладелецОбработчика = Неопределено Тогда
		ВладелецОбработчика=	ЭтаФорма;
	КонецЕсли;
	
	Если ИмяОбработчика = Неопределено Тогда
		ОписаниеОбработчика=	Неопределено;
	Иначе	
		Выполнить("ОписаниеОбработчика=	Новый ОписаниеОповещения(ИмяОбработчика, ВладелецОбработчика, ПараметрыОбработчика)");
	КонецЕсли;
	
	Выполнить("ОткрытьФорму(ИмяФормы, ПараметрыФормы, ВладелецОбработчика, , , ,  ОписаниеОбработчика, РежимБлокирования)");
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФормуОбработки(ПолноеИмяФормы, ПараметрыФормы = Неопределено , ВладелецФормы  = Неопределено, КлючУникальности = Неопределено, ЗакрыватьПризакрытииВладельца = Ложь)
	
	Если ПараметрыФормы=Неопределено Тогда
		ПараметрыФормы = Новый Структура;
	КонецЕсли;
	
	Если ВладелецФормы = Неопределено Тогда
		ВладелецФормы =	ЭтаФорма;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("АдресХранилища",							Параметры.АдресХранилища);
	//ПараметрыФормы.Вставить("IDОсновнойФормы",							Параметры.IDОсновнойФормы);
	//ПараметрыФормы.Вставить("КэшироватьМодульОбъекта",					Параметры.КэшироватьМодульОбъекта);
	
	ПолучаемаяФорма=	ПолучитьФорму(ПолноеИмяФормы
										, ПараметрыФормы
										, ВладелецФормы
										, КлючУникальности);
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		ПолучаемаяФорма.ВладелецФормы=	ВладелецФормы;
	КонецЕсли;
	
	Возврат ПолучаемаяФорма;
	
КонецФункции

&НаСервере
Функция ПутьКФормам()
	Возврат МодульОбъекта().Метаданные().ПолноеИмя() + ".Форма.";
КонецФункции

&НаСервере 
Процедура ВыделитьЦветом()
	МодульОбъекта().ХСПлощадкаВыделитьЦветом(ЭтаФорма, Элементы);
КонецПроцедуры


&НаКлиенте
Процедура ПредупреждениеМеркурий_Оповещение(Парам1, Парам2) Экспорт
КонецПроцедуры

&НаКлиенте
Функция ПредупреждениеМеркурий(ТекстПредупреждения)
	
	Кнопки = новый СписокЗначений;
	Кнопки.Добавить("Всё понятно.");
	
	Если Параметры.МодальностьЗапрещена Тогда
		Выполнить("ПоказатьВопрос(Новый ОписаниеОповещения(""ПредупреждениеМеркурий_Оповещение"",ЭтаФорма),ТекстПредупреждения,Кнопки,,,""Контур.Меркурий"")");
	Иначе
		Вопрос(ТекстПредупреждения, Кнопки,,,"Контур.Меркурий");
	КонецЕсли;
	
КонецФункции

///////////////////////////////////////////////////

&НаСервере
Процедура ВыполнитьНаСервере()
	
	 МодульОбъекта().ХСПлощадкаВыполнитьСопоставление(ТипОбъекта, Объект1С, GUID, Наш);	

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСопоставление(Команда)
	
	Если Не значениезаполнено(Объект1С)
		ИЛИ Не ЗначениеЗаполнено(GUID)
		Тогда
		ПредупреждениеМеркурий("не выбрано одно из ключевых полей");
		Возврат;
	КонецЕсли;

	ВыполнитьНаСервере();
	
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Объект1С,GUID,ТипОбъекта,ХСВладелец,ХСВладелецGUID");
	МодульОбъекта().ХСПлощадкаПриСозданииНаСервере(ЭтаФорма, Элементы);
	Элементы.НадписьТипОбъекта.Заголовок = ТипОбъекта;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораХС(ВыбраннаяСтрока, Парам2 = Неопределено) Экспорт
	Если ВыбраннаяСтрока<>неопределено Тогда 
		GUID = ВыбраннаяСтрока.guid;
		ВыделитьЦветом();
	Иначе
		Если ТипОбъекта = "Хозяйствующий субъект" Тогда
			Элементы.Создать.Видимость = истина;
			ПредупреждениеМеркурий("Похоже что по этому ИНН в Меркурии ничего не оказалось, но мы можем попробовать добавить этот ХС");
		Иначе//площадка
			Элементы.НайтиБезУчетаСвязи.Видимость = истина;
			ПредупреждениеМеркурий("Похоже что по этому ХС в Меркурии ничего не оказалось, но мы можем попробовать поискать среди всех площадок!"+Символы.ПС+"(Без учета связи)");
		КонецЕсли;
		Возврат;
	КонецЕсли
КонецПроцедуры


&НаКлиенте
Процедура ОбработчикВводаИНН(ВведенныйИНН, Парам2=Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ВведенныйИНН) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВариантПоиска", 3);//По ИНН
		ПараметрыФормы.Вставить("АдресХранилища", Параметры.АдресХранилища);
		
		ПараметрыФормы.Вставить("ИНН", ВведенныйИНН);
		
		Если Параметры.МодальностьЗапрещена Тогда 
			ОткрытьФормуОбъектаМодально(ПутьКФормам()+"Меркурий_ВыборХСПлощадкиУправляемая", ПараметрыФормы, "ОбработчикВыбораХС");
		Иначе
			ВыбраннаяСтрока = ПолучитьФормуОбработки(ПутьКФормам()+"Меркурий_ВыборХСПлощадкиУправляемая",ПараметрыФормы).ОткрытьМодально();
			ОбработчикВыбораХС(ВыбраннаяСтрока, Неопределено);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НайтиGUID(Команда)
	Если ТипОбъекта = "Хозяйствующий субъект" Тогда
		Если НЕ ЗначениеЗаполнено(ИНН) Тогда
			ВведеннаяСтрока = "";
			Подсказка = "Подскажите, по какому ИНН произвести поиск...";
			Если Параметры.МодальностьЗапрещена Тогда
				Выполнить("ПоказатьВводСтроки(Новый ОписаниеОповещения(""ОбработчикВводаИНН"", ЭтаФорма), ВведеннаяСтрока, Подсказка,12,Истина)");
			Иначе
				Если ВвестиСтроку(ВведеннаяСтрока,Подсказка,12,Истина) Тогда
					ОбработчикВводаИНН(ВведеннаяСтрока, "ХС");
				КонецЕсли;
			КонецЕсли;
		Иначе
			ОбработчикВводаИНН(ИНН);
		КонецЕсли;
	ИначеЕсли ТипОбъекта = "Площадка" Тогда
		Если ЗначениеЗаполнено(ХСВладелецGUID) Тогда
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ВариантПоиска", 1);//По GUID
			ПараметрыФормы.Вставить("АдресХранилища", Параметры.АдресХранилища);
		
			ПараметрыФормы.Вставить("ХС_GUID", ХСВладелецGUID);
		
			Если Параметры.МодальностьЗапрещена Тогда 
				ОткрытьФормуОбъектаМодально(ПутьКФормам()+"Меркурий_ВыборХСПлощадкиУправляемая", ПараметрыФормы, "ОбработчикВыбораХС");
			Иначе
				ВыбраннаяСтрока = ПолучитьФормуОбработки(ПутьКФормам()+"Меркурий_ВыборХСПлощадкиУправляемая",ПараметрыФормы).ОткрытьМодально();
				ОбработчикВыбораХС(ВыбраннаяСтрока, Неопределено);
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокОбъектов1СПоИНН(ИмяТипаСправочника)//ИмяТипаСправочника (ЮрФизЛицоСвое,ЮрФизЛицоСтороннее) 
	ИмяСправочника = ОсновнойМодуль().ПолучитьТипЗначенияОбъекта(ИмяТипаСправочника,,Истина);
	
    Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Объекты1С.Ссылка
	|ИЗ
	|	Справочник.ИмяСправочника КАК Объекты1С
	|ГДЕ
	|	Объекты1С.ИНН = &ИНН";
	
	Запрос.УстановитьПараметр("ИНН", ИНН );
	
	СписокОбъектов = Новый СписокЗначений;
	Если ОсновнойМодуль().ЕстьНеобходимыеМетаданные("Справочники."+ИмяСправочника+".Реквизиты.ИНН")	Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ИмяСправочника",ИмяСправочника);
		СписокОбъектов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;
	
	Возврат СписокОбъектов;
	
КонецФункции

&НаКлиенте
Процедура ОбработчикВыбораОбъекта1СИзСписка(ВыбЭлемент, ПоискатьВКонтрагентах)
	
	Если ВыбЭлемент<>Неопределено Тогда
		Объект1С = ВыбЭлемент.Значение;
		ВыделитьЦветом();
	ИначеЕсли ПоискатьВКонтрагентах Тогда
		СписокЭлем = ПолучитьСписокОбъектов1СПоИНН("ЮрФизЛицоСтороннее");
		Если СписокЭлем.Количество()>0 Тогда
			Если Параметры.МодальностьЗапрещена Тогда
				Выполнить("ПоказатьВыборИзСписка(Новый ОписаниеОповещения(""ОбработчикВыбораОбъекта1СИзСписка"", ЭтаФорма, ЛОЖЬ), СписокЭлем)");
			Иначе
				ВыбЭлемент = ВыбратьИзСписка(СписокЭлем);
				ОбработчикВыбораОбъекта1СИзСписка(ВыбЭлемент, ЛОЖЬ);
			КонецЕсли;
		Иначе
			//не нашли
			Если ВыбЭлемент = Неопределено Тогда
				ПредупреждениеМеркурий("Не нашел среди контрагентов/организаций");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиОбъект(Команда)
	
	//такой поиск пока только для ХС по ИНН
	Если ТипОбъекта = "Хозяйствующий субъект" Тогда
		Если ЗначениеЗаполнено(ИНН)  ТОгда
			СписокЭлем = ПолучитьСписокОбъектов1СПоИНН("ЮрФизЛицоСвое");
			Если СписокЭлем.Количество()>0 Тогда
				Если Параметры.МодальностьЗапрещена Тогда
					Выполнить("ПоказатьВыборИзСписка(Новый ОписаниеОповещения(""ОбработчикВыбораОбъекта1СИзСписка"", ЭтаФорма, Истина), СписокЭлем)");
				Иначе
					ВыбЭлемент = ВыбратьИзСписка(СписокЭлем);
					ОбработчикВыбораОбъекта1СИзСписка(ВыбЭлемент, Истина);
				КонецЕсли;
			Иначе
				ОбработчикВыбораОбъекта1СИзСписка(Неопределено, Истина);//будем искать среди контрагентов
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьНаСервере()
	
	Если ТипОбъекта = "Хозяйствующий субъект" Тогда
		
		ПерепроверкаИНН = МодульОбъекта().ПолучитьСписокХСПоИНН(ИНН);
		Если ПерепроверкаИНН.Количество() = 0 Тогда
			GUID = МодульОбъекта().ЗарегистрироватьНовыйХС(Объект1С,ИНН,Адрес,Наименование,ОГРН);
		Иначе
			Возврат "По ИНН уже есть ХС!";
		КонецЕсли;
		
	ИначеЕсли ТипОбъекта = "Площадка" Тогда
		Если ЗначениеЗаполнено(ХСВладелецGUID) Тогда
			GUID = МодульОбъекта().ЗарегистрироватьИлиИзменитьПлощадку(Объект1С,ИНН,Адрес,Наименование,ХСВладелецGUID);
			//и теперь свяжем сразу т.к. целесообразно сразу заявить что связь есть чтобы другие могли найти эту площадку по подчиненным
			Если ЗначениеЗаполнено(GUID) ТОгда
				Если НЕ МодульОбъекта().СвязатьПлощадкуСХС(ХСВладелецGUID,GUID).Успешно Тогда
					Возврат "Не удалось связать площадку с владельцем!";
				КонецЕсли;
			КонецЕсли;
		Иначе
			Возврат "Не знаю GUID владельца площадки - не могу зарегистрировать.";
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";

КонецФункции

&НаКлиенте
Процедура Создать(Команда)
	ТекстОшибки = СоздатьНаСервере();
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ПредупреждениеМеркурий(ТекстОшибки);
	КонецЕсли;
	ВыделитьЦветом();
КонецПроцедуры

&НаКлиенте
Процедура ФокусНажатие(Элемент)
	Если ЗначениеЗаполнено(ИНН) Тогда
		ЗапуститьПриложение("https://focus.kontur.ru/search?query="+ИНН);
	ИначеЕсли ЗначениеЗаполнено(Наименование) ИЛИ ЗначениеЗаполнено(Адрес) Тогда
		СтрокаЗапроса = СокрЛП(Наименование)+" "+СокрЛП(Адрес);
		СтрокаЗапроса=СтрЗаменить(СтрокаЗапроса,"""","");
		СтрокаЗапроса=СтрЗаменить(СтрокаЗапроса," ","+");
		ЗапуститьПриложение("https://focus.kontur.ru/search?query="+СтрокаЗапроса);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокПредприятийСОтборомНаСервере(КлючПоиска,Адрес)
	
	СписокПредприятий = Новый СписокЗначений;
	ТаблицаПредприятий =  МодульОбъекта().ПолучитьСписокПредприятийСОтбором(КлючПоиска,Адрес);
	Для Каждого стр Из ТаблицаПредприятий Цикл
		Если стр.active Тогда
			СписокПредприятий.Добавить(стр.guid, стр.name+", "+стр.Адрес+" ("+стр.guid+")")
		КонецЕсли;
	КонецЦикла;
	Возврат СписокПредприятий;
	
КонецФункции

&НаКлиенте
Процедура ОбработчикВыбораПредприятияИзСписка(ВыбЭлемент, Парам2=Неопределено) Экспорт
	Если ВыбЭлемент<>неопределено Тогда 
		GUID = ВыбЭлемент.Значение;
	Иначе
		Элементы.Создать.Видимость = истина;
		ПредупреждениеМеркурий("Лучше  изменить слова поиска и поискать еще раз"+Символы.ПС+"Если же найти так и не удается, то можно попробовать добавить площадку.");
		Возврат;
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВводаКлючаПоиска(КлючПоиска, Парам2 = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(СокрЛП(КлючПоиска)) И Не ЗначениеЗаполнено(СокрЛП(Адрес)) Тогда
		ПредупреждениеМеркурий("Укажите хотя бы одно из: 
									|- Адрес 
									|- Ключ поиска по наименованию");
		Возврат;
	КонецЕсли;
	
	СписокПредприятий = ПолучитьСписокПредприятийСОтборомНаСервере(КлючПоиска,Адрес);
	
	Если СписокПредприятий.Количество() > 0 Тогда
		Если Параметры.МодальностьЗапрещена Тогда
			Выполнить("ПоказатьВыборИзСписка(Новый ОписаниеОповещения(""ОбработчикВыбораПредприятияИзСписка"", ЭтаФорма), СписокПредприятий)");
		Иначе
			ВыбЭлемент = ВыбратьИзСписка(СписокПредприятий);
			ОбработчикВыбораПредприятияИзСписка(ВыбЭлемент, Истина);
		КонецЕсли;
	Иначе
		Элементы.Создать.Видимость = истина;
		ПредупреждениеМеркурий("Похоже что поиск не увенчался успехом, Лучше  изменить слова поиска и поискать еще раз"+Символы.ПС+"Если же найти так и не удается, то можно попробовать добавить площадку.");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НайтиБезУчетаСвязи(Команда)
	
	ВведеннаяСтрока = "";
	Подсказка = "Введите ключевые слова названия организации (если не ввести - будем искать по адресу)";
	Если Параметры.МодальностьЗапрещена Тогда
		Выполнить("ПоказатьВводСтроки(Новый ОписаниеОповещения(""ОбработчикВводаКлючаПоиска"", ЭтаФорма), ВведеннаяСтрока, Подсказка)");
	Иначе
		Если ВвестиСтроку(ВведеннаяСтрока,Подсказка) Тогда
			ОбработчикВводаКлючаПоиска(ВведеннаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура СвязатьНаСервере()
	Если ЗначениеЗаполнено(GUID) ТОгда
		РезультатУстановкиСвязи = МодульОбъекта().СвязатьПлощадкуСХС(ХСВладелецGUID,GUID);
		Если РезультатУстановкиСвязи.Успешно = Истина Тогда
			Сообщить("Создал и привязал к ХС");
		Иначе
			Сообщить(РезультатУстановкиСвязи.ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Связать(Команда)
	СвязатьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеПриИзменении(Элемент)
	ВыделитьЦветом();
КонецПроцедуры

Процедура ХСподробнееНажатие(Элемент)
	
	////откроем подробную карточку ХСа
	//ФормаХСа = ПолучитьФорму("Меркурий_ПросмотрХС",ЭтаФорма);
	//ФормаХСа.GUID = GUID;
	//ФормаХСа.Объект1С = Объект1С;
	//ФормаХСа.Наш = Наш;
	//ФормаХСа.ОткрытьМодально();
	////могли проставить соответсвия из этой формы
	
КонецПроцедуры

Процедура ХСВладелецподробнееНажатие(Элемент)
	
	////откроем подробную карточку ХСа
	//ФормаХСа = ПолучитьФорму("Меркурий_ПросмотрХС",ЭтаФорма);
	//ФормаХСа.GUID = ХСВладелецGUID;
	//ФормаХСа.Объект1С = ХСВладелец;
	//ФормаХСа.Наш = Наш;
	//ФормаХСа.ОткрытьМодально();
	
КонецПроцедуры

&НаКлиенте
Процедура ХСподробнееНажатие1(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры


//&НаСервере
////инициализация модуля и его экспортных функций
//Функция ОсновнойМодуль()

//	Если ОбработкаОбъект=Неопределено Тогда
//		
//		Если Параметры.КэшироватьМодульОбъекта Тогда
//			Если Параметры.АдресХранилища<>"" Тогда
//				_Структура = ПолучитьИзВременногоХранилища(Параметры.АдресХранилища);
//				Если ТипЗнч(_Структура) = Тип("Структура") Тогда
//					_Структура.Свойство("ОбработкаОбъект",ОбработкаОбъект);
//					_Структура.Свойство("ОсобенностиСообщений",ОсобенностиСообщений);
//				КонецЕсли;
//			КонецЕсли;
//			
//			Если ОбработкаОбъект=Неопределено Тогда
//				ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
//				ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
//				Параметры.АдресХранилища = ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект,ОсобенностиСообщений",ОбработкаОбъект,ОсобенностиСообщений),УникальныйИдентификатор);
//				ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
//			КонецЕсли;
//		Иначе
//			ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
//			ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
//			ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
//		КонецЕсли;
//		
//	КонецЕсли;	
//	
//	Возврат ОбработкаОбъект;
//	
//КонецФункции

//&НаСервере
////инициализация модуля и его экспортных функций
//Функция МодульОбъекта()
//	Возврат ОсновнойМодуль().МодульМеркурий();
//КонецФункции

