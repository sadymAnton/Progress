//////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции
&НаСервере
Процедура ЗаполнитьСписокПользователей()
	
	СписокПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	Для Каждого ТекПользователь Из СписокПользователей Цикл
		
		Элементы.Пользователь.СписокВыбора.Добавить(ТекПользователь.Имя);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокФорм()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	СписокФорм = Новый СписокЗначений;
	Обработка.ПолучитьСписокФорм(СписокФорм);
	Формы.Очистить();
	Обработка.ПолучитьСписокСохраненныхНастроек(СписокФорм, Пользователь, Формы);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивВыделенныхНастроек()
	
	МассивНастроек = Новый Массив;
	
	ВыделенныеЭлементы = Элементы.ОтфильтрованныеФормы.ВыделенныеСтроки;
	
	Для Каждого ВыделенныйЭлемент Из ВыделенныеЭлементы Цикл
		
		МассивНастроек.Добавить(Формы.НайтиПоЗначению(ОтфильтрованныеФормы.НайтиПоИдентификатору(ВыделенныйЭлемент).Значение).Значение);
		
	КонецЦикла;
	
	Возврат МассивНастроек;
	
КонецФункции

&НаСервере
Процедура СкопироватьНаСервере(ПользователиПриемник)

	МассивНастроекДляКопирования = ПолучитьМассивВыделенныхНастроек();
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.СкопироватьНастройкиФорм(Пользователь, ПользователиПриемник, МассивНастроекДляКопирования);
		
КонецПроцедуры

&НаСервере
Процедура УдалитьНаСервере()
	
	МассивНастроекДляУдаления = ПолучитьМассивВыделенныхНастроек();
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.УдалитьНастройкиФорм(Пользователь, МассивНастроекДляУдаления);
	
КонецПроцедуры

Процедура ПрименитьФильтр()
	
	ОтфильтрованныеФормы.Очистить();
	
	Для Каждого ЭлементФорма Из Формы Цикл
		
		Если Поиск = "" Или Найти(ВРег(ЭлементФорма.Представление), ВРег(Поиск)) <> 0 Тогда
			
			ОтфильтрованныеФормы.Добавить(ЭлементФорма.Значение, ЭлементФорма.Представление, ЭлементФорма.Пометка, ЭлементФорма.Картинка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПримененныйПоиск = Поиск;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////
// Обработчики команд
&НаКлиенте
Процедура ОбновитьВыполнить()
	
	ОбновитьСписокФорм();
	ПрименитьФильтр();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьВыполнить()
	
	Если Элементы.ОтфильтрованныеФормы.ВыделенныеСтроки.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Для копирования нужно выбрать настройки, которые требуется скопировать.'"));
		Возврат;
	КонецЕсли;
	
	СписокПользователей = Элементы.Пользователь.СписокВыбора.Скопировать();
	
	Если СписокПользователей.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Невозможно скопировать настройки, так как в системе не заведен ни один пользователь.'"));
		Возврат;
	КонецЕсли;
	
	ЭлементСписка = СписокПользователей.НайтиПоЗначению(Пользователь);
	Если ЭлементСписка <> Неопределено Тогда
		СписокПользователей.Удалить(ЭлементСписка);
	КонецЕсли;
	
	Если СписокПользователей.ОтметитьЭлементы(НСтр("ru = 'Отметьте пользователей, которым нужно скопировать настройки'")) Тогда
		ПользователиПриемник = Новый Массив;
		Для Каждого Элемент Из СписокПользователей Цикл
			Элементы.Пользователь.СписокВыбора.НайтиПоЗначению(Элемент.Значение).Пометка = Элемент.Пометка;
			Если Элемент.Пометка Тогда
				ПользователиПриемник.Добавить(Элемент.Значение);
			КонецЕсли;
		КонецЦикла;
		
		Если ПользователиПриемник.Количество() = 0 Тогда
			Предупреждение(НСтр("ru = 'Для копирования нужно отметить пользователей, которым требуется скопировать настройки.'"));
			Возврат;
		КонецЕсли;
		
		ТекстВопроса = НСтр("ru = 'После копирования настроек пользователю,
		|форма у пользователя будет открываться с настройками, которые ему скопируются. 
		|При этом его собственные настройки будут потеряны. 
		|Вы действительно хотите скопировать настройки выбранным пользователям?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		СкопироватьНаСервере(ПользователиПриемник);
		ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки скопированы'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВыполнить()
	
	Если Элементы.ОтфильтрованныеФормы.ВыделенныеСтроки.Количество() = 0 Тогда
		
		Предупреждение(НСтр("ru = 'Для удаления нужно выбрать настройки, которые требуется удалить.'"));
		Возврат;
		
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'После удаления настроек форма будет открываться с настройками по умолчанию. 
	|Вы действительно хотите удалить настройки?'");
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УдалитьНаСервере();
	ОбновитьСписокФорм();
	ПрименитьФильтр();
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки удалены'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьВыполнить()
	
	ПрименитьФильтр();
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////
// Обработчики событий формы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокПользователей();
	Пользователь = ИмяПользователя();
	ОбновитьСписокФорм();
	ПрименитьФильтр();
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////
// Обработчики событий элементов управления
&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ОбновитьСписокФорм();
	ПрименитьФильтр();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПриИзменении(Элемент)
	
	ПрименитьФильтр();
	
КонецПроцедуры

