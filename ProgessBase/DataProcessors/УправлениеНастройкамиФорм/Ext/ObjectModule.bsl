Процедура ПолучитьСписокФормИзСпискаМетаданныхФорм(Префикс, ПрефиксПредставления, МетаданныеФорм, Картинка, Список)
	
	Для Каждого Форма Из МетаданныеФорм Цикл
		
		Список.Добавить(Префикс + ".Форма." + Форма.Имя, ПрефиксПредставления + "." + Форма.Синоним, Ложь, Картинка);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьСтандартнуюФорму(Префикс, ПрефиксПредставления, ОбъектМетаданных, ИмяФормы, ПредставлениеФормы, Картинка, Список)
	
	Если ОбъектМетаданных["Основная" + ИмяФормы] = Неопределено Тогда
		
		Список.Добавить(Префикс + "." + ИмяФормы, ПрефиксПредставления + "." + ПредставлениеФормы, Ложь, Картинка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьСписокФормОбъектаМетаданных(СписокОбъектовМетаданных, ИмяОбъектаМетаданных, ПредставлениеОбъектаМетаданных, ИменаСтандартныхФорм, Картинка, Список)
	
	Для Каждого Объект Из СписокОбъектовМетаданных Цикл
		
		Префикс = ИмяОбъектаМетаданных + "." + Объект.Имя;
		ПрефиксПредставления = ПредставлениеОбъектаМетаданных + "." + Объект.Синоним;
		
		ПолучитьСписокФормИзСпискаМетаданныхФорм(Префикс, ПрефиксПредставления, Объект.Формы, Картинка, Список);
		
		Для Каждого ИмяСтандартнойФормы Из ИменаСтандартныхФорм Цикл
			
			ДобавитьСтандартнуюФорму(Префикс, ПрефиксПредставления, Объект, ИмяСтандартнойФормы.Значение, ИмяСтандартнойФормы.Представление, Картинка, Список);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Получает список форм, в конфигурации, при этом заполняются следующие поля:
// Значение - имя формы, идентифицирующее ее.
// Представление - синоним формы
// Картинка - картинка соответствующая объекту, к которому форма имеет отношение
// Параметры
// Список - СписокЗначений - список значений, в который будут добавлены описания форм
//
Процедура ПолучитьСписокФорм(Список) Экспорт
	
	Для Каждого Форма Из Метаданные.ОбщиеФормы Цикл
		
		Список.Добавить("ОбщаяФорма." + Форма.Имя, "Общая форма." + Форма.Синоним, Ложь, БиблиотекаКартинок.Форма);
		
	КонецЦикла;

	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаОбъекта", "Форма объекта");
	ИменаСтандартныхФорм.Добавить("ФормаГруппы", "Форма группы");
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбора", "Форма выбора");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбораГруппы", "Форма выбора группы");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.Справочники, "Справочник", "Справочник", ИменаСтандартныхФорм, БиблиотекаКартинок.Справочник, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("Форма", "Форма");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.КритерииОтбора, "КритерийОтбора", "Критерий отбора", ИменаСтандартныхФорм, БиблиотекаКартинок.КритерийОтбора, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаСохранения", "Форма сохранения");
	ИменаСтандартныхФорм.Добавить("ФормаЗагрузки", "Форма выбора");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.ХранилищаНастроек, "ХранилищеНастроек", "Хранилище настроек", ИменаСтандартныхФорм, БиблиотекаКартинок.ХранилищеНастроек, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаОбъекта", "Форма объекта");
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбора", "Форма выбора");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.Документы, "Документ", "Документ", ИменаСтандартныхФорм, БиблиотекаКартинок.Документ, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("Форма", "Форма");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.ЖурналыДокументов, "ЖурналДокументов", "Журнал документов", ИменаСтандартныхФорм, БиблиотекаКартинок.ЖурналДокументов, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбора", "Форма выбора");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.Перечисления, "Перечисление", "Перечисление", ИменаСтандартныхФорм, БиблиотекаКартинок.Перечисление, Список);

	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("Форма", "Форма");
	ИменаСтандартныхФорм.Добавить("ФормаНастроек", "Форма настроек");
	ИменаСтандартныхФорм.Добавить("ФормаВарианта", "Форма варианта");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.Отчеты, "Отчет", "Отчет", ИменаСтандартныхФорм, БиблиотекаКартинок.Отчет, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("Форма", "Форма");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.Обработки, "Обработка", "Обработка", ИменаСтандартныхФорм, БиблиотекаКартинок.Обработка, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаЗаписи", "Форма записи");
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.РегистрыСведений, "РегистрСведений", "Регистр сведений", ИменаСтандартныхФорм, БиблиотекаКартинок.РегистрСведений, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.РегистрыНакопления, "РегистрНакопления", "Регистр накопления", ИменаСтандартныхФорм, БиблиотекаКартинок.РегистрНакопления, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаОбъекта", "Форма объекта");
	ИменаСтандартныхФорм.Добавить("ФормаГруппы", "Форма группы");
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбора", "Форма выбора");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбораГруппы", "Форма выбора группы");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.ПланыВидовХарактеристик, "ПланВидовХарактеристик", "План видов характеристик", ИменаСтандартныхФорм, БиблиотекаКартинок.ПланВидовХарактеристик, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаОбъекта", "Форма объекта");
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбора", "Форма выбора");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.ПланыСчетов, "ПланСчетов", "План счетов", ИменаСтандартныхФорм, БиблиотекаКартинок.ПланСчетов, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.РегистрыБухгалтерии, "РегистрБухгалтерии", "Регистр бухгалтерии", ИменаСтандартныхФорм, БиблиотекаКартинок.РегистрБухгалтерии, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаОбъекта", "Форма объекта");
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбора", "Форма выбора");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.ПланыВидовРасчета, "ПланВидовРасчета", "План видов расчета", ИменаСтандартныхФорм, БиблиотекаКартинок.ПланВидовРасчета, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.РегистрыРасчета, "РегистрРасчета", "Регистр расчета", ИменаСтандартныхФорм, БиблиотекаКартинок.РегистрРасчета, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаОбъекта", "Форма объекта");
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбора", "Форма выбора");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.БизнесПроцессы, "БизнесПроцесс", "Бизнес процесс", ИменаСтандартныхФорм, БиблиотекаКартинок.БизнесПроцесс, Список);
	
	ИменаСтандартныхФорм = Новый СписокЗначений;
	ИменаСтандартныхФорм.Добавить("ФормаОбъекта", "Форма объекта");
	ИменаСтандартныхФорм.Добавить("ФормаСписка", "Форма списка");
	ИменаСтандартныхФорм.Добавить("ФормаДляВыбора", "Форма выбора");
	ПолучитьСписокФормОбъектаМетаданных(Метаданные.Задачи, "Задача", "Задача", ИменаСтандартныхФорм, БиблиотекаКартинок.Задача, Список);
	
КонецПроцедуры

// Отбирает из переданных форм те, для которых есть сохраненные настройки по указанному
// в параметре Пользователь пользователю. При этом отобранные формы записываются в параметр
// СписокФормССохраненнымиНастройками.
//
Процедура ПолучитьСписокСохраненныхНастроек(СписокФорм, Пользователь, СписокФормССохраненнымиНастройками) Экспорт
	
	Для Каждого Элемент Из СписокФорм Цикл
		
		Добавлен = Ложь;
		
		Описание = ХранилищеСистемныхНастроек.ПолучитьОписание(Элемент.Значение + "/НастройкиФормы", , Пользователь);
		
		Если Описание <> Неопределено Тогда
			СписокФормССохраненнымиНастройками.Добавить(Элемент.Значение, Элемент.Представление, Элемент.Пометка, Элемент.Картинка);
			Добавлен = Истина;
		КонецЕсли;
		
		Описание = ХранилищеСистемныхНастроек.ПолучитьОписание(Элемент.Значение + "/НастройкиОкна", , Пользователь);
		Если Описание <> Неопределено И НЕ Добавлен Тогда
			СписокФормССохраненнымиНастройками.Добавить(Элемент.Значение, Элемент.Представление, Элемент.Пометка, Элемент.Картинка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Копирует настройки одного пользователя ИБ другому.
// Параметры
// ПользовательИсточник - строка - имя пользователя ИБ, по которому хранятся настройки
// ПользователиПриемник - строка - имя пользователя ИБ, которому копируются настройки
// МассивНастроекДляКопирования - массив - массив строк каждая из которых - полное имя формы
//
Процедура СкопироватьНастройкиФорм(ПользовательИсточник, ПользователиПриемник, МассивНастроекДляКопирования) Экспорт
	
	Для Каждого Элемент Из МассивНастроекДляКопирования Цикл
		Настройка = ХранилищеСистемныхНастроек.Загрузить(Элемент + "/НастройкиФормы", "", , ПользовательИсточник);
		Если Настройка <> Неопределено Тогда
			Для Каждого ПользовательПриемник Из ПользователиПриемник Цикл
				ХранилищеСистемныхНастроек.Сохранить(Элемент + "/НастройкиФормы", "", Настройка, , ПользовательПриемник);
			КонецЦикла;
		КонецЕсли;
		Настройка = ХранилищеСистемныхНастроек.Загрузить(Элемент + "/НастройкиОкна", "", , ПользовательИсточник);
		Если Настройка <> Неопределено Тогда
			Для Каждого ПользовательПриемник Из ПользователиПриемник Цикл
				ХранилищеСистемныхНастроек.Сохранить(Элемент + "/НастройкиОкна", "", Настройка, , ПользовательПриемник);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура удаляет все настройки пользователя пользователя,
// имеющие отношения к формам.
// Пользователь - строка - имя пользователя ИБ
// МассивНастроекДляКопирования - массив - массив строк каждая из которых - полное имя формы
//
Процедура УдалитьНастройкиФорм(Пользователь, МассивНастроекДляУдаления) Экспорт
	
	Для Каждого Элемент Из МассивНастроекДляУдаления Цикл
		ХранилищеСистемныхНастроек.Удалить(Элемент + "/НастройкиФормы", "", Пользователь);
		ХранилищеСистемныхНастроек.Удалить(Элемент + "/НастройкиОкна", "", Пользователь);
	КонецЦикла;
	
КонецПроцедуры
