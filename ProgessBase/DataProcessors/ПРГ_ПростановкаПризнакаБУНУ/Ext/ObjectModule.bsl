Процедура ПровестиВРеглУчете(ЗапускСФормы,сДата1='00010101',сДата2='00010101',Индикатор) Экспорт
	
                        //ПолучитьБлокировкуСеансов();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Ссылка,
		|	ВложенныйЗапрос.Дата,
		|	ВложенныйЗапрос.Представление КАК СсылкаПредставление
		|ИЗ
		|	(ВЫБРАТЬ
		|		РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|		РеализацияТоваровУслуг.Представление КАК Представление,
		|		РеализацияТоваровУслуг.Дата КАК Дата
		|	ИЗ
		|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|	ГДЕ
		|		РеализацияТоваровУслуг.Дата МЕЖДУ &Дата1 И &Дата2
		|		И РеализацияТоваровУслуг.Проведен
		|		И НЕ(РеализацияТоваровУслуг.ОтражатьВБухгалтерскомУчете
		|					И РеализацияТоваровУслуг.ОтражатьВНалоговомУчете)
		|		И ((РеализацияТоваровУслуг.Сделка <> НЕОПРЕДЕЛЕНО
		|				И РеализацияТоваровУслуг.Сделка <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))
		|				ИЛИ РеализацияТоваровУслуг.СП_ЗаданиеНаПодбор <> ЗНАЧЕНИЕ(Документ.Сп_ЗаданиеНаПодбор.ПустаяСсылка))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПеремещениеТоваров.Ссылка,
		|		ПеремещениеТоваров.Представление,
		|		ПеремещениеТоваров.Дата
		|	ИЗ
		|		Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|	ГДЕ
		|		ПеремещениеТоваров.Дата МЕЖДУ &Дата1 И &Дата2
		|		И ПеремещениеТоваров.Проведен
		|		И НЕ(ПеремещениеТоваров.ОтражатьВБухгалтерскомУчете
		|					И ПеремещениеТоваров.ОтражатьВНалоговомУчете)
		|		И ПеремещениеТоваров.СП_ЗаданиеНаПодбор <> ЗНАЧЕНИЕ(Документ.Сп_ЗаданиеНаПодбор.ПустаяСсылка)
		//{15.09.2015 Островерхий заявка №43926 
		|	И ВЫБОР
		|		КОГДА НЕ ПеремещениеТоваров.ВнутреннийЗаказ = ЗНАЧЕНИЕ(Документ.ВнутреннийЗаказ.ПустаяСсылка)
		|			ТОГДА НЕ ПеремещениеТоваров.ВнутреннийЗаказ.ПРГ_ВидОперации = ЗНАЧЕНИЕ(Перечисление.ПРГ_ВидыОперацийВнутреннегоЗаказа.СП_ПередачаPOSM)
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		//15.09.2015 Островерхий} 
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КорректировкаРеализации.Ссылка,
		|		КорректировкаРеализации.Представление,
		|		КорректировкаРеализации.Дата
		|	ИЗ
		|		Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|	ГДЕ
		|		КорректировкаРеализации.Дата МЕЖДУ &Дата1 И &Дата2
		|		И КорректировкаРеализации.Проведен
		|		И НЕ(КорректировкаРеализации.ОтражатьВБухгалтерскомУчете
		|					И КорректировкаРеализации.ОтражатьВНалоговомУчете)
		|		И КорректировкаРеализации.ПР_Претензия <> ЗНАЧЕНИЕ(Документ.ПР_Претензия.ПустаяСсылка)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПРГ_СторноНакладной.Ссылка,
		|		ПРГ_СторноНакладной.Представление,
		|		ПРГ_СторноНакладной.Дата
		|	ИЗ
		|		Документ.ПРГ_СторноНакладной КАК ПРГ_СторноНакладной
		|	ГДЕ
		|		ПРГ_СторноНакладной.Дата МЕЖДУ &Дата1 И &Дата2
		|		И ПРГ_СторноНакладной.Проведен
		|		И НЕ(ПРГ_СторноНакладной.ОтражатьВБухгалтерскомУчете
		|					И ПРГ_СторноНакладной.ОтражатьВНалоговомУчете)
		|		И ПРГ_СторноНакладной.Претензия <> ЗНАЧЕНИЕ(Документ.ПР_Претензия.ПустаяСсылка)) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Дата,
		|	ВложенныйЗапрос.Ссылка";

		
	ИмяСобытия = "Проведение в регл. учете";
	времяЗав  = 0;
	Если ЗапускСФормы Тогда
			Дата1 = сДата1;
			Дата2 = КонецДня(сДата2);
	Иначе
        времяЗав = 6*3600;
		Если День(ТекущаяДата()) = 1 или  День(ТекущаяДата()) = 2 Тогда
			Дата1 = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1));
		Иначе
			Дата1 = НачалоМесяца(ТекущаяДата());
		КонецЕсли;	
		Дата2 = НачалоДня(ТекущаяДата())-1;
		ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурналаРегистрации.Информация,,,"Начало проведения c "+СокрЛП(Формат(Дата1,""))+" по "+СокрЛП(Формат(Дата2,"")));
	КонецЕсли;		
		
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Дата1));
	Запрос.УстановитьПараметр("Дата2", Дата2);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	ПараметрыСеанса.ПроведениеДокументов = Истина;
	РаботаСОбщимиПеременными.УстановитьЗначениеПеременной("ИспользоватьВерсионированиеОбъектов", Ложь, Ложь);		
	Если ЗапускСФормы Тогда
		Индикатор.Значение = 0;
		Индикатор.МаксимальноеЗначение  = ВыборкаДетальныеЗаписи.Количество();
	КонецЕсли;	
	к = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		к = к+1;
		Если ЗапускСФормы Тогда
			Индикатор.Значение = к ;
		Иначе
			Если времяЗав <> 0 Тогда
				ТекДата = ТекущаяДата();
				Если  ТекДата  > НачалоДня(ТекДата )+ времяЗав  Тогда
					ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурналаРегистрации.Ошибка,,,"Завершение проведения документов по реглам. учету, причина закончено время!!!"+ТекДата);
					возврат;
				КонецЕсли;	
			КонецЕслИ;	
		КонецЕсли;
		
		Если к % 10 = 0 и не ЗапускСФормы Тогда
			 БлокСеанс = ПолучитьБлокировкуСеансов();
			 ТекДата = ТекущаяДатаСеанса();
			 Если БлокСеанс.Установлена Тогда
				 Если ТекДата >  БлокСеанс.Начало и ТекДата < БлокСеанс.Конец Тогда
					  ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурналаРегистрации.Ошибка,,,"Завершение проведения документов по реглам. учету, причина установка блокировки!!!");
					  возврат;
				 КонецЕсли; 
			 КонецЕсли; 
		КонецЕсли;	
		#Если Клиент Тогда
		 	ОбработкаПрерыванияПользователя();	
		 #КонецЕсли 
		
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Попытка
		Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		Если Объект.Проведен Тогда
			
			Объект.ОтражатьВБухгалтерскомУчете  = Истина;
			Объект.ОтражатьВНалоговомУчете      = Истина;
			
			Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
				или ТипЗнч(Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
				ЗаполнитьЗначенияСвойств(Объект, Объект.ЗаполнитьСтруктуруСчетовУчетаШапки(Истина, Истина)); 
				СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары", Объект.Товары , Объект, Объект.ОтражатьВБухгалтерскомУчете, Объект.ОтражатьВНалоговомУчете); 
			ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары", Объект.Товары , Объект, Объект.ОтражатьВБухгалтерскомУчете, Объект.ОтражатьВНалоговомУчете); 
			ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПРГ_СторноНакладной") Тогда
			Иначе
				Если Не ЗапускСФормы Тогда
					ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурналаРегистрации.Ошибка,Объект.Метаданные(),Объект.Ссылка,"Неизвестный тип документа " + ВыборкаДетальныеЗаписи.СсылкаПредставление);
				Иначе
					Сообщить("Неизвестный тип документа " + ВыборкаДетальныеЗаписи.СсылкаПредставление);
				КонецЕсли;	
				Продолжить;;
			КонецЕсли;	
			
			Попытка
				Объект.Записать(РежимЗаписиДокумента.Проведение);	
			Исключение
				Если Не ЗапускСФормы Тогда
					ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурналаРегистрации.Ошибка,Объект.Метаданные(),Объект.Ссылка,ОписаниеОшибки());
				Иначе	
					Сообщить(Объект.Ссылка);
			    	Сообщить(ОписаниеОшибки());
				КонецЕсли;	
			КонецПопытки;
			
		 КонецЕсли;	
	 Исключение
		 	Если Не ЗапускСФормы Тогда
				ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурналаРегистрации.Ошибка,Объект.Метаданные(),Объект.Ссылка,ОписаниеОшибки());
			Иначе 
				Сообщить(Объект.Ссылка);
		    	Сообщить(ОписаниеОшибки());
			КонецЕсли;
		КонецПопытки;
		
	КонецЦикла;
	
	Если ЗапускСФормы Тогда
		Индикатор.Значение = Индикатор.МаксимальноеЗначение;
	Иначе
		ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖурналаРегистрации.Информация,,,"Закончено проведение "+СокрЛП(Формат(Дата1,""))+" по "+СокрЛП(Формат(Дата2,"")));
    КонецЕсли;
		
	
КонецПроцедуры
 