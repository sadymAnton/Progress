////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция получает список ИБ 1С:Предприятия 7.7 из системного реестра
//
Функция ПолучитьСписокИБ77() Экспорт
	
	Попытка
		ScrptCtrl=Новый COMObject("MSScriptControl.ScriptControl");
		ScrptCtrl.Language="vbscript";
		ScrptCtrl.AddCode("
		|Function Get1CV77Titles()
		|	const HKEY_CURRENT_USER = &H80000001
		|	Set oReg=GetObject(""winmgmts:{impersonationLevel=impersonate}!\\.\root\default:StdRegProv"")
		|	strKeyPath = ""Software\1C\1Cv7\7.7\Titles""
		|	oReg.EnumValues HKEY_CURRENT_USER, strKeyPath, arrValues
		|	strInfo=vbNullString
		|	if isArray(arrValues) then
		|		For i = LBound(arrValues) To UBound(arrValues)
		|			call oReg.GetStringValue(HKEY_CURRENT_USER,strKeyPath,arrValues(i),Value)
		|			strInfo=strInfo & arrValues(i) & vbTab & Value & vbCrLf
		|		Next
		|	end if
		|	Get1CV77Titles = strInfo
		|End Function
		|");
		Текст=СокрЛП(ScrptCtrl.Run("Get1CV77Titles"));
		
	Исключение
		Возврат ОписаниеОшибки();
		
	КонецПопытки;
	
	ТаблицаИБ = Новый ТаблицаЗначений;
	ТаблицаИБ.Колонки.Добавить("Имя");
	ТаблицаИБ.Колонки.Добавить("Путь");
	ТаблицаИБ.Колонки.Добавить("ЯвляетсяКонфигурациейЗиК");
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат ТаблицаИБ;
	КонецЕсли;
	
	ФайлОписанияМетаданных = Новый ТекстовыйДокумент;
	
	МассивИменФайлов = Новый Массив;
	МассивИменФайлов.Добавить("1cv7.dd");
	МассивИменФайлов.Добавить("1cv7.dds");
	
	Для Номер = 1 По СтрЧислоСтрок(Текст) Цикл
		СтрБазы		= СтрПолучитьСтроку(Текст, Номер);
		Разд		= Найти(СтрБазы, Символы.Таб);
		Путь		= Лев(СтрБазы, Разд-1);
		Название	= Прав(СтрБазы, СтрДлина(СтрБазы) - Разд);
		
		ЯвляетсяКонфигурациейЗиК = Ложь;
		Для Каждого ИмяФайла Из МассивИменФайлов Цикл
			ФайлДляПроверки = Новый Файл(Путь + ИмяФайла);
			Если ФайлДляПроверки.Существует() Тогда
				ФайлОписанияМетаданных.Прочитать(Путь + ИмяФайла);
				ЯвляетсяКонфигурациейЗиК = Найти(ФайлОписанияМетаданных.ПолучитьТекст(), "CJ447") > 0;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		НоваяСтрока = ТаблицаИБ.Добавить();
		НоваяСтрока.Имя							= Название;
		НоваяСтрока.Путь						= Путь;
		НоваяСтрока.ЯвляетсяКонфигурациейЗиК	= ЯвляетсяКонфигурациейЗиК;
	КонецЦикла;
	
	ТаблицаИБ.Сортировать("ЯвляетсяКонфигурациейЗиК УБЫВ, Имя");
	
	Возврат ТаблицаИБ;
	
КонецФункции

// Процедура записывает файлы конвертации на диск
//
Процедура ЗаписатьФайлыДляПереносаНаДиск(Знач Конвертация, ПутьДляСохранения, ЗаписыватьСПомощником = Истина) Экспорт
	Перем КонвертацияПомощник, КонвертацияОписаниеПомощника, КонвертацияОбработка, КонвертацияПравила;
	
	Попытка
		КаталогНаДиске = Новый Файл(ПутьДляСохранения);
		Если Не КаталогНаДиске.Существует() Тогда
			СоздатьКаталог(ПутьДляСохранения);
		КонецЕсли;
		
		Если ТипЗнч(Конвертация) = Тип("СправочникВыборка.КонвертацииИзИнформационныхБаз1СПредприятия77") Тогда
			КонвертацияОбработка			= Конвертация.ХранилищеОбработка.Получить();
			КонвертацияПравила				= Конвертация.ХранилищеПравила.Получить();
			
			Если	КонвертацияОбработка = Неопределено
				ИЛИ	КонвертацияПравила = Неопределено Тогда
				КонвертацияОбработка			= Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ПолучитьМакет(Конвертация.КонвертацияОбработка + "_ert");
				КонвертацияПравила				= Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ПолучитьМакет(Конвертация.КонвертацияПравила + "_xml");
			КонецЕсли;
			КонвертацияОбработка.Записать(ПутьДляСохранения + Конвертация.КонвертацияОбработка + ".ert");
			КонвертацияПравила.Записать(ПутьДляСохранения + Конвертация.КонвертацияПравила + ".xml");
			
			Если ЗаписыватьСПомощником Тогда
				КонвертацияПомощник				= Конвертация.ХранилищеПомощник.Получить();
				КонвертацияОписаниеПомощника	= Конвертация.ХранилищеОписаниеПомощника.Получить();
				
				Если	КонвертацияПомощник = Неопределено
					ИЛИ	КонвертацияОписаниеПомощника = Неопределено Тогда
					КонвертацияПомощник				= Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ПолучитьМакет(Конвертация.КонвертацияПомощник + "_ert");
					КонвертацияОписаниеПомощника	= Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ПолучитьМакет(Конвертация.КонвертацияПомощник + "_efd");
				КонецЕсли;
				
				КонвертацияПомощник.Записать(ПутьДляСохранения + Конвертация.КонвертацияПомощник + ".ert");
				КонвертацияОписаниеПомощника.Записать(ПутьДляСохранения + Конвертация.КонвертацияПомощник + ".efd");
			КонецЕсли;
			
		Иначе
			Если ТипЗнч(Конвертация) = Тип("СправочникСсылка.КонвертацииИзИнформационныхБаз1СПредприятия77") Тогда
				Конвертация = Конвертация.ПолучитьОбъект();
			КонецЕсли;
			
			КонвертацияОбработка			= Конвертация.ПолучитьМакет("V77Exp_ert");
			КонвертацияПравила				= Конвертация.ПолучитьМакет("PrB_xml");
			КонвертацияОбработка.Записать(ПутьДляСохранения + "V77Exp.ert");
			КонвертацияПравила.Записать(ПутьДляСохранения + "PrB.xml");
			
			Если ЗаписыватьСПомощником Тогда
				КонвертацияПомощник				= Конвертация.ПолучитьМакет("PrB_Wiz_ert");
				КонвертацияОписаниеПомощника	= Конвертация.ПолучитьМакет("PrB_Wiz_efd");
				КонвертацияПомощник.Записать(ПутьДляСохранения + "PrB_Wiz.ert");
				КонвертацияОписаниеПомощника.Записать(ПутьДляСохранения + "PrB_Wiz.efd");
			КонецЕсли;
			
		КонецЕсли;
		#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если ЗаписыватьСПомощником Тогда
			Предупреждение("Файлы конвертации записаны в каталог: "+ ПутьДляСохранения);
		КонецЕсли;
		#КонецЕсли
	
	Исключение
		#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если ЗаписыватьСПомощником Тогда
			Предупреждение("Файлы конвертации записать не удалось");
		КонецЕсли;
		#КонецЕсли
		
	КонецПопытки;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
