// Хранит соответствие, при помощи которого храним и показываем содержимое пачки
Перем СоответствиеСсылокИОбъектов Экспорт;

////////////////////////////////////////////////////////////////////////////////

// Процедура выводить сообщения в специальное окно сообщений
// тексты сообщений берутся из переменной МассивСообщений
//
Процедура ВывестиСообщенияОбОшибках(МассивСообщений) Экспорт
	
	Если МассивСообщений.Количество() > 0 Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		ОбработкаКомментариев.ДобавитьСообщение("Подготовка данных для передачи в ПФР", Перечисления.ВидыСообщений.Раздел);
		Для каждого ЭлементМассива Из МассивСообщений Цикл
			Если ЭлементМассива.РасшифровкаСообщения <> Неопределено И ЭлементМассива.РасшифровкаСообщения.Количество() > 1 Тогда
				РодительскаяСтрока = ОбработкаКомментариев.ДобавитьСообщение(ЭлементМассива.ТекстСообщения, ЭлементМассива.ВидСообщения);
				Для Каждого ЭлементРасшифровки Из ЭлементМассива.РасшифровкаСообщения Цикл
					МассивРасшифровки = Новый Массив;
					МассивРасшифровки.Добавить(Новый Структура("Представление, Расшифровка", ЭлементРасшифровки.Представление, ЭлементРасшифровки.Расшифровка));
					ОбработкаКомментариев.ДобавитьСообщение("", Перечисления.ВидыСообщений.Информация, МассивРасшифровки, РодительскаяСтрока);
					
				КонецЦикла;
			Иначе
				ОбработкаКомментариев.ДобавитьСообщение(ЭлементМассива.ТекстСообщения, ЭлементМассива.ВидСообщения, ЭлементМассива.РасшифровкаСообщения);
			КонецЕсли
		КонецЦикла;
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;	
	
КонецПроцедуры // ВывестиСообщенияОбОшибках()

// Создает структуру, с параметрами выводимого сообщения 
// для помещения в массив сообщений-структур
Функция СоздатьСообщениеСтруктуру(ТекстСообщения, ВидСообщения, РасшифровкаСообщения = Неопределено) Экспорт 
	СтруктураСообщения = Новый Структура;
	СтруктураСообщения.Вставить("ТекстСообщения", ТекстСообщения);
	СтруктураСообщения.Вставить("ВидСообщения", ВидСообщения);
	СтруктураСообщения.Вставить("РасшифровкаСообщения", РасшифровкаСообщения);
	Возврат СтруктураСообщения
КонецФункции // СоздатьСообщениеСтруктуру()

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьТаблицуРасчетов() Экспорт 
	
	СоответствиеСсылокИОбъектов = Новый Соответствие;
	ПачкиДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка КАК Пачка,
	|	ПередачаСЗВ4вПФР.НомерПачки КАК НомерПачки,
	|	ПередачаСЗВ4вПФР.РасчетРСВ1
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Организация = &Организация
	|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = &ОтчетныйПериод
	|	И НЕ ПередачаСЗВ4вПФР.ПометкаУдаления
	|	И НЕ ПередачаСЗВ4вПФР.НеСодержитСЗВ
	|	И ПередачаСЗВ4вПФР.РасчетРСВ1 <> ЗНАЧЕНИЕ(Документ.РегламентированныйОтчет.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПачки";
	
	ПачкиДокументов.Загрузить(Запрос.Выполнить().Выгрузить());
	Для каждого СтрокаПачки Из ПачкиДокументов Цикл
		ДокументОбъект = СтрокаПачки.Пачка.ПолучитьОбъект();
		ПустыеСтроки = ДокументОбъект.ПачкиДокументов2014.НайтиСтроки(Новый Структура("ДокументПачка", Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПустаяСсылка()));
		Если ПустыеСтроки.Количество() > 0 Тогда
			Для каждого СтрокаДокумента Из ПустыеСтроки Цикл
				ДокументОбъект.ПачкиДокументов2014.Удалить(СтрокаДокумента);
			КонецЦикла; 
		КонецЕсли;
		ПустыеСтроки = ДокументОбъект.ПачкиДокументов2014.НайтиСтроки(Новый Структура("ДокументПачка", Документы.ПачкаДокументовСЗВ_6_4.ПустаяСсылка()));
		Если ПустыеСтроки.Количество() > 0 Тогда
			Для каждого СтрокаДокумента Из ПустыеСтроки Цикл
				ДокументОбъект.ПачкиДокументов2014.Удалить(СтрокаДокумента);
			КонецЦикла; 
		КонецЕсли;
		ПустыеСтроки = ДокументОбъект.ПачкиДокументов2014.НайтиСтроки(Новый Структура("ДокументПачка", Документы.ПачкаРазделов6РасчетаРСВ_1.ПустаяСсылка()));
		Если ПустыеСтроки.Количество() > 0 Тогда
			Для каждого СтрокаДокумента Из ПустыеСтроки Цикл
				ДокументОбъект.ПачкиДокументов2014.Удалить(СтрокаДокумента);
			КонецЦикла; 
		КонецЕсли;
		ПустыеСтроки = ДокументОбъект.ПачкиДокументов2014.НайтиСтроки(Новый Структура("ДокументПачка", Неопределено));
		Если ПустыеСтроки.Количество() > 0 Тогда
			Для каждого СтрокаДокумента Из ПустыеСтроки Цикл
				ДокументОбъект.ПачкиДокументов2014.Удалить(СтрокаДокумента);
			КонецЦикла; 
		КонецЕсли;
		СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.Пачка, ДокументОбъект);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Пачки", ПачкиДокументов.ВыгрузитьКолонку("Пачка"));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|ГДЕ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка В(&Пачки)
	|	И ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка <> ЗНАЧЕНИЕ(Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПустаяСсылка)
	|	И ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка <> ЗНАЧЕНИЕ(Документ.ПачкаДокументовСЗВ_6_4.ПустаяСсылка)
	|	И ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка <> НЕОПРЕДЕЛЕНО";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеСсылокИОбъектов.Вставить(Выборка.Ссылка,Выборка.Ссылка.ПолучитьОбъект()) 
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

// Получает значения общих для всех видов документов реквизитов
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   Структура, содержащая значения реквизитов
//
Функция СтруктураОбщихРеквизитовДокумента()
	
	СтруктураРеквизитов = Новый Структура("Организация,ОтчетныйПериод,ФорматФайла,Ответственный,Руководитель,ДолжностьРуководителя,Дата");
	СтруктураРеквизитов.Дата = ОбщегоНазначенияЗК.ПолучитьРабочуюДату(); 
	СтруктураРеквизитов.Организация = Организация;
	СтруктураРеквизитов.ОтчетныйПериод = ОтчетныйПериод;
	СтруктураРеквизитов.ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07;
	ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, ПроцедурыПерсонифицированногоУчета.ДанныеРуководителяОрганизации(Организация, СтруктураРеквизитов.Дата));
	СтруктураРеквизитов.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	Если СтруктураРеквизитов.Ответственный.Пустая() Тогда
		СтруктураРеквизитов.Ответственный = глЗначениеПеременной("глТекущийПользователь")
	КонецЕсли;
	
	Возврат СтруктураРеквизитов
	
КонецФункции // СтруктураОбщихРеквизитовДокумента()

////////////////////////////////////////////////////////////////////////////////

Функция СоздатьРаздел2_5(СтруктураРеквизитов = Неопределено, ИзменятьПозициюСтроки = Ложь, ТабличноеПоле = Неопределено)
	
	Если СтруктураРеквизитов = Неопределено Тогда
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
	КонецЕсли;
	
	ДокОбъект = Документы.ПередачаСЗВ4вПФР.СоздатьДокумент();
	ЗаполнитьЗначенияСвойств(ДокОбъект, СтруктураРеквизитов);
	ДокОбъект.УстановитьНовыйНомер();
	ДокОбъект.УстановитьСсылкуНового(Документы.ПередачаСЗВ4вПФР.ПолучитьСсылку());
	
	СтрокаПачки = ПачкиДокументов.Добавить();
	СтрокаПачки.Пачка			= ДокОбъект.ПолучитьСсылкуНового();
	СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.Пачка, ДокОбъект);
	Если ИзменятьПозициюСтроки Тогда
		ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
	КонецЕсли;
	
	Возврат ДокОбъект
	
КонецФункции 

Функция СоздатьСЗВ6(ДокументОбъектРаздела2_5 = Неопределено, СтруктураРеквизитов = Неопределено, КатегорияЗастрахованныхЛиц = Неопределено, ИзменятьПозициюСтроки = Ложь, ТабличноеПоле = Неопределено) Экспорт
	
	Если СтруктураРеквизитов = Неопределено Тогда
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
	КонецЕсли;
	
	ДокОбъект = Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.СоздатьДокумент();
	ЗаполнитьЗначенияСвойств(ДокОбъект, СтруктураРеквизитов);
	ДокОбъект.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
	ДокОбъект.ТипФормДокументов = "СЗВ-6-2";
	ДокОбъект.КатегорияЗастрахованныхЛиц = КатегорияЗастрахованныхЛиц;
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ДокОбъект);
	ДокОбъект.УстановитьНовыйНомер();
	ДокОбъект.УстановитьСсылкуНового(Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПолучитьСсылку());
	
	СтрокаПачки = ДокументОбъектРаздела2_5.ПачкиДокументов2014.Добавить();
	СтрокаПачки.ДокументПачка = ДокОбъект.ПолучитьСсылкуНового();
	СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.ДокументПачка, ДокОбъект);
	Если ИзменятьПозициюСтроки Тогда
		ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
	КонецЕсли;
	
	Возврат ДокОбъект
	
КонецФункции

Функция СоздатьСЗВ64(ДокументОбъектРаздела2_5 = Неопределено, СтруктураРеквизитов = Неопределено, КатегорияЗастрахованныхЛиц = Неопределено, ИзменятьПозициюСтроки = Ложь, ТабличноеПоле = Неопределено) Экспорт
	
	Если СтруктураРеквизитов = Неопределено Тогда
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
	КонецЕсли;
	
	ДокОбъект = Документы.ПачкаДокументовСЗВ_6_4.СоздатьДокумент();
	ЗаполнитьЗначенияСвойств(ДокОбъект, СтруктураРеквизитов);
	ДокОбъект.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
	ДокОбъект.ТипФормДокументов = "СЗВ-6-4";
	ДокОбъект.ТипДоговора = Перечисления.ТипДоговораСЗВ63.Трудовой;
	ДокОбъект.КатегорияЗастрахованныхЛиц = КатегорияЗастрахованныхЛиц;
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ДокОбъект);
	ДокОбъект.УстановитьНовыйНомер();
	ДокОбъект.УстановитьСсылкуНового(Документы.ПачкаДокументовСЗВ_6_4.ПолучитьСсылку());
	
	СтрокаПачки = ДокументОбъектРаздела2_5.ПачкиДокументов2014.Добавить();
	СтрокаПачки.ДокументПачка = ДокОбъект.ПолучитьСсылкуНового();
	СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.ДокументПачка, ДокОбъект);
	Если ИзменятьПозициюСтроки Тогда
		ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
	КонецЕсли;
	
	Возврат ДокОбъект
	
КонецФункции

Функция СоздатьПачкуРазделов6РасчетаРСВ_1(ДокументОбъектРаздела2_5 = Неопределено, СтруктураРеквизитов = Неопределено, ИзменятьПозициюСтроки = Ложь, ТабличноеПоле = Неопределено) Экспорт
	
	Если СтруктураРеквизитов = Неопределено Тогда
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
	КонецЕсли;
	
	ДокОбъект = Документы.ПачкаРазделов6РасчетаРСВ_1.СоздатьДокумент();
	ЗаполнитьЗначенияСвойств(ДокОбъект, СтруктураРеквизитов);
	ДокОбъект.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ДокОбъект);
	ДокОбъект.УстановитьНовыйНомер();
	ДокОбъект.УстановитьСсылкуНового(Документы.ПачкаРазделов6РасчетаРСВ_1.ПолучитьСсылку());
	
	СтрокаПачки = ДокументОбъектРаздела2_5.ПачкиДокументов2014.Добавить();
	СтрокаПачки.ДокументПачка = ДокОбъект.ПолучитьСсылкуНового();
	СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.ДокументПачка, ДокОбъект);
	Если ИзменятьПозициюСтроки Тогда
		ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
	КонецЕсли;
	
	Возврат ДокОбъект
	
КонецФункции


Процедура ВписатьУволенногоВИсходныйРаздел6(ТаблицаЛицИсходныхРазделов6, ФизЛицо, ДокРаздела2_5, ДокРаздела6, СтруктураОбщихРеквизитов, СтрокаФизлица)
	
	Если ДокРаздела2_5.ОтчетныйПериод < ПроцедурыПерсонифицированногоУчета.ДатаВводаФормыРСВ_1за2015год() И ТаблицаЛицИсходныхРазделов6.Найти(ФизЛицо, "ФизЛицо") = Неопределено Тогда
		
		ТаблицаЛицИсходныхРазделов6.Добавить().ФизЛицо = ФизЛицо;
		
		Если ДокРаздела6 = Неопределено Или ДокРаздела6.РаботникиОрганизации.Количество() = 200 Тогда
			ДокРаздела6 = СоздатьПачкуРазделов6РасчетаРСВ_1(ДокРаздела2_5, СтруктураОбщихРеквизитов);
			ДокРаздела6.КорректируемыйПериод = "";
			СтруктураОбщихРеквизитов.Дата = СтруктураОбщихРеквизитов.Дата + 1;
		КонецЕсли; 
		
		ЗаполнитьЗначенияСвойств(ДокРаздела6.РаботникиОрганизации.Добавить(), СтрокаФизлица, , "НачисленоСтраховая, ДоначисленоСтраховая");
		
		ТаблицаЛицБезЗаработка = ДокРаздела6.ЗаписиОСтаже.ВыгрузитьКолонки();
		СтрокаСтажа = ТаблицаЛицБезЗаработка.Добавить();
		СтрокаСтажа.ФизЛицо = ФизЛицо;
		СтрокаСтажа.ДатаНачалаПериода = ОтчетныйПериод;
		СтрокаСтажа.ДатаОкончанияПериода = КонецКвартала(ОтчетныйПериод);
		
		ДополнитьСведенияОЗаработкеНулевымиСтроками(ДокРаздела6.СведенияОЗаработке, ТаблицаЛицБезЗаработка, ОтчетныйПериод);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПронумероватьСтрокиТаблицыЗначений(ТаблицаЗначений)
	
	ТаблицаЗначений.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	НомерСтроки = 0;
	Для каждого СтрокаТЗ Из ТаблицаЗначений Цикл
		СтрокаТЗ.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

Функция НоваяСтрокаДокументаПерсучета(ДокПерсучета, СтрокаФизлица, СтрокаВзносов)

	СтрокаТабличнойЧасти = ДокПерсучета.РаботникиОрганизации.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаФизлица);
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаВзносов);
	Фамилия = СтрокаТабличнойЧасти.Фамилия;
	Имя = СтрокаТабличнойЧасти.Имя;
	Отчество = СтрокаТабличнойЧасти.Отчество;
	Если Не ЗначениеЗаполнено(Фамилия + Имя + Отчество) Тогда
		ОбщегоНазначенияЗК.ФамилияИнициалыФизЛица(СтрокаФизлица.Наименование,Фамилия,Имя,Отчество);
	КонецЕсли;
	СтрокаТабличнойЧасти.Фамилия = Фамилия;
	СтрокаТабличнойЧасти.Имя = Имя;
	СтрокаТабличнойЧасти.Отчество = Отчество;
	
    Возврат СтрокаТабличнойЧасти
	
КонецФункции 

Процедура ВычеркнутьВзносыОтБазыСвышеПредельнойВеличины(ТаблицаВзносов, ТаблицаДоходов, ПериодЗаполнения) Экспорт 

	Если ПериодЗаполнения >= РасчетСтраховыхВзносов.ДатаВыделенияВзносовНаОПСсСуммПревышенияПредельнойВеличины() Тогда 
		Возврат	// в этих периодах взносы с превышения хранятся отдельно, их вычитать не надо
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("ФизЛицо, ДляИтоговыхСтрок", , Ложь);
	ПервыйМесяц = Месяц(НачалоКвартала(ПериодЗаполнения));
	ТретийМесяц = ПервыйМесяц + 2;
	Для каждого СтрокаВзносов Из ТаблицаВзносов Цикл
		
		Если СтрокаВзносов.НачисленоСтраховая = 0 Тогда
			Продолжить;		
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаВзносов);
		
		ОблагаетсяВзносамиСвышеПредельнойВеличиныПоОсновномуТарифу = 0;
		ОблагаетсяВзносамиДоПредельнойВеличины = 0;
		Для каждого СтрокаПодчиненнойТЗ Из ТаблицаДоходов.НайтиСтроки(СтруктураПоиска) Цикл
			Если СтрокаПодчиненнойТЗ.Месяц >= ПервыйМесяц И СтрокаПодчиненнойТЗ.Месяц <= ТретийМесяц Тогда
				Если СтрокаПодчиненнойТЗ.КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицПФР.НР
					Или СтрокаПодчиненнойТЗ.КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицПФР.ВПНР
					Или СтрокаПодчиненнойТЗ.КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицПФР.ВЖНР Тогда
					ОблагаетсяВзносамиСвышеПредельнойВеличиныПоОсновномуТарифу = ОблагаетсяВзносамиСвышеПредельнойВеличиныПоОсновномуТарифу + СтрокаПодчиненнойТЗ.ОблагаетсяВзносамиСвышеПредельнойВеличины;
				КонецЕсли;
				ОблагаетсяВзносамиДоПредельнойВеличины = ОблагаетсяВзносамиДоПредельнойВеличины + СтрокаПодчиненнойТЗ.ОблагаетсяВзносамиДоПредельнойВеличины;
			КонецЕсли;
		КонецЦикла;
		
		Если ОблагаетсяВзносамиДоПредельнойВеличины = 0 Тогда
			СтрокаВзносов.НачисленоСтраховая = 0
		ИначеЕсли ОблагаетсяВзносамиСвышеПредельнойВеличиныПоОсновномуТарифу > 0 Тогда
			СтрокаВзносов.НачисленоСтраховая = СтрокаВзносов.НачисленоСтраховая - Окр(ОблагаетсяВзносамиСвышеПредельнойВеличиныПоОсновномуТарифу / 10, 2)
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьТаблицыЗаработковПоТаблицеДоходов(СведенияОЗаработке, ТекущийОтчетныйПериод, ТаблицаДоходов, ТаблицаДоходовЗаВредников) Экспорт 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПервыйМесяцОтчетногоПериода", Месяц(ТекущийОтчетныйПериод));
	Запрос.УстановитьПараметр("ТаблицаДоходов", СведенияОЗаработке);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.Месяц КАК Месяц,
	|	Доходы.ДляИтоговыхСтрок,
	|	Доходы.Заработок,
	|	Доходы.ОблагаетсяВзносами,
	|	Доходы.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	Доходы.ПоДоговорамГПХДоПредельнойВеличины,
	|	Доходы.ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	Доходы.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	Доходы.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	Доходы.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	Доходы.КлассУсловийТруда
	|ПОМЕСТИТЬ ВТСведенияОЗаработке
	|ИЗ
	|	&ТаблицаДоходов КАК Доходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОЗаработке.ФизЛицо,
	|	СведенияОЗаработке.Месяц,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	СУММА(СведенияОЗаработке.Заработок) КАК Заработок,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СУММА(СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины) КАК ПоДоговорамГПХДоПредельнойВеличины
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОЗаработке.ФизЛицо КАК ФизЛицо,
	|		СведенияОЗаработке.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|		СведенияОЗаработке.Заработок КАК Заработок,
	|		0 КАК Месяц,
	|		СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|		СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|		СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины КАК ПоДоговорамГПХДоПредельнойВеличины
	|	ИЗ
	|		ВТСведенияОЗаработке КАК СведенияОЗаработке
	|	ГДЕ
	|		СведенияОЗаработке.ДляИтоговыхСтрок
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОЗаработке.ФизЛицо,
	|		СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|		СведенияОЗаработке.Заработок,
	|		СведенияОЗаработке.Месяц,
	|		СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины,
	|		СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|		СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины
	|	ИЗ
	|		ВТСведенияОЗаработке КАК СведенияОЗаработке
	|	ГДЕ
	|		НЕ СведенияОЗаработке.ДляИтоговыхСтрок
	|		И СведенияОЗаработке.Месяц >= &ПервыйМесяцОтчетногоПериода) КАК СведенияОЗаработке
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОЗаработке.ФизЛицо,
	|	СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	СведенияОЗаработке.Месяц
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СведенияОЗаработке.Заработок) <> 0
	|		ИЛИ СУММА(СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) <> 0
	|		ИЛИ СУММА(СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины) <> 0
	|		ИЛИ СУММА(СведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины) <> 0
	|		ИЛИ СведенияОЗаработке.Месяц = 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОЗаработке.ФизЛицо,
	|	СведенияОЗаработке.Месяц,
	|	СведенияОЗаработке.КлассУсловийТруда,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОЗаработке.ФизЛицо КАК ФизЛицо,
	|		СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|		СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|		СведенияОЗаработке.КлассУсловийТруда КАК КлассУсловийТруда,
	|		0 КАК Месяц
	|	ИЗ
	|		ВТСведенияОЗаработке КАК СведенияОЗаработке
	|	ГДЕ
	|		СведенияОЗаработке.ДляИтоговыхСтрок
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СведенияОЗаработке.ФизЛицо,
	|		СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|		СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|		СведенияОЗаработке.КлассУсловийТруда,
	|		СведенияОЗаработке.Месяц
	|	ИЗ
	|		ВТСведенияОЗаработке КАК СведенияОЗаработке
	|	ГДЕ
	|		НЕ СведенияОЗаработке.ДляИтоговыхСтрок
	|		И СведенияОЗаработке.Месяц >= &ПервыйМесяцОтчетногоПериода) КАК СведенияОЗаработке
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОЗаработке.ФизЛицо,
	|	СведенияОЗаработке.КлассУсловийТруда,
	|	СведенияОЗаработке.Месяц
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах) <> 0
	|		ИЛИ СУММА(СведенияОЗаработке.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах) <> 0)";
	Результаты = Запрос.ВыполнитьПакет();
	ТаблицаДоходов = Результаты[1].Выгрузить();
	ТаблицаДоходовЗаВредников = Результаты[2].Выгрузить();

КонецПроцедуры

Процедура ДополнитьСведенияОЗаработкеНулевымиСтроками(СведенияОЗаработке, ТаблицаСтажаЛицБезЗаработка, ПериодЗаполнения) Экспорт

	ВременнаяТаблица = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ВписатьКатегорииВДанныеСтажа(Организация, ПериодЗаполнения, ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод), ТаблицаСтажаЛицБезЗаработка, Истина);
    ВременнаяТаблица.Свернуть("ФизЛицо,КатегорияЗастрахованныхЛиц");
	ВременнаяТаблица.Колонки.Добавить("Месяц", Новый ОписаниеТипов("Число"));
	ВременнаяТаблица.Колонки.Добавить("ДляИтоговыхСтрок", Новый ОписаниеТипов("Булево"));
	ВременнаяТаблица.ЗаполнитьЗначения(Истина, "ДляИтоговыхСтрок");
	ВременнаяТаблица.Колонки.Добавить("Заработок", Новый ОписаниеТипов("Число"));
	ВременнаяТаблица.Колонки.Добавить("ОблагаетсяВзносами", Новый ОписаниеТипов("Число"));
	ВременнаяТаблица.Колонки.Добавить("ОблагаетсяВзносамиДоПредельнойВеличины", Новый ОписаниеТипов("Число"));
	ВременнаяТаблица.Колонки.Добавить("ОблагаетсяВзносамиСвышеПредельнойВеличины", Новый ОписаниеТипов("Число"));
	ВременнаяТаблица.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах", Новый ОписаниеТипов("Число"));
	ВременнаяТаблица.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах", Новый ОписаниеТипов("Число"));
	ВременнаяТаблица.Колонки.Добавить("ПоДоговорамГПХДоПредельнойВеличины", Новый ОписаниеТипов("Число"));
	ОбщегоНазначенияЗК.ЗагрузитьВТаблицуЗначений(ВременнаяТаблица, СведенияОЗаработке);

КонецПроцедуры


Процедура СоздатьВТАктуальныеРазделы6(ФизЛица, ОтчПериод, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчПериод);
	Запрос.УстановитьПараметр("ФизЛица", ФизЛица);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
 	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1.Ссылка,
	|	ПачкаРазделов6РасчетаРСВ_1.ФизЛицо
	|ПОМЕСТИТЬ ВТВсеРазделы6
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК ПачкаРазделов6РасчетаРСВ_1
	|ГДЕ
	|	НЕ ПачкаРазделов6РасчетаРСВ_1.Ссылка.ПометкаУдаления
	|	И ПачкаРазделов6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ)
	|	И ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1.Ссылка.ОтчетныйПериод
	|			ИНАЧЕ ПачкаРазделов6РасчетаРСВ_1.Ссылка.КорректируемыйПериод
	|		КОНЕЦ = &ОтчетныйПериод
	|	И ПачкаРазделов6РасчетаРСВ_1.ФизЛицо В(&ФизЛица)
	|	И ПачкаРазделов6РасчетаРСВ_1.Ссылка.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеРазделы6.ФизЛицо,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка КАК Раздел2_5,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка.НомерКорректировки,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка.ОтчетныйПериод
	|ПОМЕСТИТЬ ВТВсеРазделы2_5
	|ИЗ
	|	ВТВсеРазделы6 КАК ВсеРазделы6
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|		ПО ВсеРазделы6.Ссылка = ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка
	|ГДЕ
	|	НЕ ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка.ПометкаУдаления
	|	И ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка.ПринятоВПФР
	|	И ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоследниеОтчетныеПериодыРаздела2_5.ФизЛицо,
	|	ПоследниеОтчетныеПериодыРаздела2_5.НомерКорректировки,
	|	ВсеРазделы2_5.Раздел2_5
	|ПОМЕСТИТЬ ВТПоследниеРазделы2_5
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВсеРазделы2_5.ФизЛицо КАК ФизЛицо,
	|		ВсеРазделы2_5.НомерКорректировки КАК НомерКорректировки,
	|		МАКСИМУМ(ВсеРазделы2_5.ОтчетныйПериод) КАК ОтчетныйПериод
	|	ИЗ
	|		ВТВсеРазделы2_5 КАК ВсеРазделы2_5
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВсеРазделы2_5.ФизЛицо,
	|		ВсеРазделы2_5.НомерКорректировки) КАК ПоследниеОтчетныеПериодыРаздела2_5
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеРазделы2_5 КАК ВсеРазделы2_5
	|		ПО ПоследниеОтчетныеПериодыРаздела2_5.ФизЛицо = ВсеРазделы2_5.ФизЛицо
	|			И ПоследниеОтчетныеПериодыРаздела2_5.НомерКорректировки = ВсеРазделы2_5.НомерКорректировки
	|			И ПоследниеОтчетныеПериодыРаздела2_5.ОтчетныйПериод = ВсеРазделы2_5.ОтчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоследниеКорректировкиРаздела2_5.ФизЛицо,
	|	ВсеРазделы2_5.Раздел2_5
	|ПОМЕСТИТЬ ВТРазделы2_5
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВсеРазделы2_5.ФизЛицо КАК ФизЛицо,
	|		МАКСИМУМ(ВсеРазделы2_5.НомерКорректировки) КАК НомерКорректировки
	|	ИЗ
	|		ВТПоследниеРазделы2_5 КАК ВсеРазделы2_5
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВсеРазделы2_5.ФизЛицо) КАК ПоследниеКорректировкиРаздела2_5
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоследниеРазделы2_5 КАК ВсеРазделы2_5
	|		ПО ПоследниеКорректировкиРаздела2_5.ФизЛицо = ВсеРазделы2_5.ФизЛицо
	|			И ПоследниеКорректировкиРаздела2_5.НомерКорректировки = ВсеРазделы2_5.НомерКорректировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Разделы2_5.ФизЛицо,
	|	Разделы2_5.Раздел2_5,
	|	МАКСИМУМ(ВсеРазделы6.Ссылка) КАК Раздел6
	|ПОМЕСТИТЬ ВТАктуальныеРазделы6
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВсеРазделы2_5.ФизЛицо КАК ФизЛицо,
	|		МАКСИМУМ(ВсеРазделы2_5.Раздел2_5) КАК Раздел2_5
	|	ИЗ
	|		ВТРазделы2_5 КАК ВсеРазделы2_5
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВсеРазделы2_5.ФизЛицо) КАК Разделы2_5
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|		ПО Разделы2_5.Раздел2_5 = ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеРазделы6 КАК ВсеРазделы6
	|		ПО Разделы2_5.ФизЛицо = ВсеРазделы6.ФизЛицо
	|			И (ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка = ВсеРазделы6.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Разделы2_5.ФизЛицо,
	|	Разделы2_5.Раздел2_5";
	
	Запрос.Выполнить();

КонецПроцедуры

Функция ПереданныеВПФРКатегории(ФизЛица, ОтчПериод) Экспорт 

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТАктуальныеРазделы6(ФизЛица, ОтчПериод, Запрос.МенеджерВременныхТаблиц);
	
 	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АктуальныеРазделы6.ФизЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КатегорияЗастрахованныхЛиц
	|ИЗ
	|	ВТАктуальныеРазделы6 КАК АктуальныеРазделы6
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|		ПО АктуальныеРазделы6.Раздел6 = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка
	|			И АктуальныеРазделы6.ФизЛицо = ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ФизЛицо
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КатегорияЗастрахованныхЛиц ЕСТЬ НЕ NULL ";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция КорректирующиеСведенияЗаОтчетныйПериод(ФизЛица, ОтчПериод) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТАктуальныеРазделы6(ФизЛица, ОтчПериод, Запрос.МенеджерВременныхТаблиц);
	
 	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктуальныеРазделы6.ФизЛицо,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка
	|ПОМЕСТИТЬ ВТФизлицаИсходныхФорм
	|ИЗ
	|	ВТАктуальныеРазделы6 КАК АктуальныеРазделы6
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|		ПО АктуальныеРазделы6.Раздел2_5 = ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка
	|ГДЕ
	|	АктуальныеРазделы6.Раздел6.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ФизЛицо,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоНакопительная,
	|	0 КАК ДоначисленоНаОПС
	|ПОМЕСТИТЬ ВТДанныеКорректирующихФорм
	|ИЗ
	|	ВТФизлицаИсходныхФорм КАК ФизлицаИсходныхФорм
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.РаботникиОрганизации КАК ПачкаДокументовСЗВ_6_4РаботникиОрганизации
	|		ПО ФизлицаИсходныхФорм.ФизЛицо = ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ФизЛицо
	|			И ФизлицаИсходныхФорм.ДокументПачка = ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоСтраховая * ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоСтраховая + ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоНакопительная * ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоНакопительная > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.КорректируемыйПериод,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоСтраховая,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоНакопительная,
	|	0
	|ИЗ
	|	ВТФизлицаИсходныхФорм КАК ФизлицаИсходныхФорм
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации
	|		ПО ФизлицаИсходныхФорм.ФизЛицо = СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо
	|			И ФизлицаИсходныхФорм.ДокументПачка = СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоСтраховая * СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоСтраховая + СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоНакопительная * СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоНакопительная > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ФизЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка.КорректируемыйПериод,
	|	0,
	|	0,
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ДоначисленоСтраховая
	|ИЗ
	|	ВТФизлицаИсходныхФорм КАК ФизлицаИсходныхФорм
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации
	|		ПО ФизлицаИсходныхФорм.ФизЛицо = ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ФизЛицо
	|			И ФизлицаИсходныхФорм.ДокументПачка = ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ДоначисленоСтраховая * ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ДоначисленоСтраховая > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКорректирующихФорм.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ДанныеКорректирующихФорм.КорректируемыйПериод, КВАРТАЛ) КАК КорректируемыйПериод,
	|	ГОД(ДанныеКорректирующихФорм.КорректируемыйПериод) КАК КорректируемыйГод,
	|	СУММА(ДанныеКорректирующихФорм.ДоначисленоСтраховая) КАК ДоначисленоСтраховая,
	|	СУММА(ДанныеКорректирующихФорм.ДоначисленоНакопительная) КАК ДоначисленоНакопительная,
	|	СУММА(ДанныеКорректирующихФорм.ДоначисленоНаОПС) КАК ДоначисленоНаОПС
	|ИЗ
	|	ВТДанныеКорректирующихФорм КАК ДанныеКорректирующихФорм
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ДанныеКорректирующихФорм.КорректируемыйПериод, КВАРТАЛ),
	|	ГОД(ДанныеКорректирующихФорм.КорректируемыйПериод),
	|	ДанныеКорректирующихФорм.ФизЛицо
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АктуальныеРазделы6.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.КорректируемыйПериод, КВАРТАЛ),
	|	ГОД(ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.КорректируемыйПериод),
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.ДоначисленоНаОПС,
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.ДоначисленоСтраховая,
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.ДоначисленоНакопительная
	|ИЗ
	|	ВТАктуальныеРазделы6 КАК АктуальныеРазделы6
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.КорректирующиеСведения КАК ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения
	|		ПО АктуальныеРазделы6.Раздел6 = ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.Ссылка
	|ГДЕ
	|	АктуальныеРазделы6.Раздел6.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	КорректируемыйПериод";

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции 


Функция АвтозаполнениеПачек(ТекущаяСтрока = Неопределено, ИмяФормы = "") Экспорт
	
	// информация об ошибках
	МассивСообщений = Новый Массив;
	СписокФизЛицБезСтрахНомеров = Новый СписокЗначений;
	
	ДатаСозданияДокументов = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
	Если ДатаСозданияДокументов < НачалоДня(ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод)) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("При расчете сумм заработка учтены данные, зарегистрированные по " + Формат(ДатаСозданияДокументов,"ДЛФ=DD"), Перечисления.ВидыСообщений.ВажнаяИнформация));
	КонецЕсли;
	
	СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
		
	Если ТекущаяСтрока = Неопределено Тогда
		
		РСВ1 = РегламентированнаяОтчетность.СоздатьЭкземплярРСВ1(Организация, ОтчетныйПериод, ИмяФормы);
		Если РСВ1 = Неопределено Тогда
			Возврат ТекущаяСтрока
		КонецЕсли;
		СсылкаНаДокументКомплекта = РСВ1.Ссылка;
		РСВ1 = Неопределено;
		РегламентированнаяОтчетность.ЗаполнитьЭкземплярРСВ1(СсылкаНаДокументКомплекта);
		
		ОбъектРаздела2_5 = СоздатьРаздел2_5(СтруктураРеквизитов);
		СтруктураРеквизитов.Дата = СтруктураРеквизитов.Дата + 1;
		ОбъектРаздела2_5.РасчетРСВ1 = СсылкаНаДокументКомплекта;
		ОбъектРаздела2_5.НомерПачки = ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(СсылкаНаДокументКомплекта, "НомерПачки");
		ТекущаяСтрока = ПачкиДокументов[ПачкиДокументов.Количество() - 1];
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока,ОбъектРаздела2_5);
		
	Иначе
		
		ОбъектРаздела2_5 = СоответствиеСсылокИОбъектов[ТекущаяСтрока.Пачка]; 
		РегламентированнаяОтчетность.ЗаполнитьЭкземплярРСВ1(ТекущаяСтрока.РасчетРСВ1);
		Для Каждого СтрокаДокумента Из ОбъектРаздела2_5.ПачкиДокументов2014 Цикл
			СоответствиеСсылокИОбъектов.Удалить(СтрокаДокумента.ДокументПачка);
		КонецЦикла;
		ОбъектРаздела2_5.ПачкиДокументов2014.Очистить();
		
	КонецЕсли;
	
	СведенияОЗаработке = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОДоходахЗаОтчетныеПериоды(НачалоГода(ОтчетныйПериод), ОтчетныйПериод, Организация, ДатаСозданияДокументов).Выгрузить();
	ТаблицаСтажа = ПроцедурыПерсонифицированногоУчета.СведенияОСтаже_2014(ОтчетныйПериод, Организация, , , Истина, ДатаСозданияДокументов, Ложь);
	ТаблицаВзносов = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОВзносахПоСуммарномуТарифу(ОтчетныйПериод, Организация, , ДатаСозданияДокументов);
	ВычеркнутьВзносыОтБазыСвышеПредельнойВеличины(ТаблицаВзносов, СведенияОЗаработке, ОтчетныйПериод);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаВзносов",	ТаблицаВзносов);
	Запрос.УстановитьПараметр("ПервыйМесяц",	Месяц(ОтчетныйПериод));
	Запрос.УстановитьПараметр("ПоследнийМесяц",	Месяц(ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод)));
	Запрос.УстановитьПараметр("ТаблицаСтажа",	ТаблицаСтажа);
	Запрос.УстановитьПараметр("ТаблицаДоходов",	СведенияОЗаработке);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("КонецОтчетногоПериода", ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод));
	
	ТаблицаВзносов = Неопределено;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СуммыВзносов.ФизЛицо КАК ФизЛицо,
	|	СуммыВзносов.НачисленоСтраховая
	|ПОМЕСТИТЬ ВТСуммыВзносов
	|ИЗ
	|	&ТаблицаВзносов КАК СуммыВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиОСтаже.ФизЛицо КАК ФизЛицо,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет
	|ПОМЕСТИТЬ ВТЗаписиОСтаже
	|ИЗ
	|	&ТаблицаСтажа КАК ЗаписиОСтаже
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДоходов.ФизЛицо КАК ФизЛицо,
	|	ТаблицаДоходов.Месяц КАК Месяц
	|ПОМЕСТИТЬ ВТСведенияОЗаработке
	|ИЗ
	|	&ТаблицаДоходов КАК ТаблицаДоходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Лица.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	ВТСуммыВзносов КАК Лица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Лица.ФизЛицо
	|ИЗ
	|	ВТЗаписиОСтаже КАК Лица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Лица.ФизЛицо
	|ИЗ
	|	ВТСведенияОЗаработке КАК Лица
	|ГДЕ
	|	Лица.Месяц МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.ФизЛицо
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|	И СтраховыеВзносыИсчисленные.Организация = &ГоловнаяОрганизация
	|	И СтраховыеВзносыИсчисленные.Период МЕЖДУ &ОтчетныйПериод И &КонецОтчетногоПериода
	|	И НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.Период, КВАРТАЛ) > НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.ДатаПолученияДохода, КВАРТАЛ)
	|	И СтраховыеВзносыИсчисленные.ДатаПолученияДохода >= ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("По организации " + ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Организация,"Наименование") + " не обнаружено сведений о стаже, взносах и заработке!", Перечисления.ВидыСообщений.Ошибка));
		ВывестиСообщенияОбОшибках(МассивСообщений);
		Возврат ТекущаяСтрока
	КонецЕсли;
	
	ДанныеЗастрахованныхЛиц = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеЗастрахованныхЛиц(Результат.Выгрузить().ВыгрузитьКолонку("ФизЛицо"), Организация, ОтчетныйПериод, ДатаСозданияДокументов);
	Запрос.УстановитьПараметр("ДанныеЗастрахованныхЛиц", ДанныеЗастрахованныхЛиц);
	ДанныеЗастрахованныхЛиц = Неопределено;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизЛица.ФизЛицо,
	|	ФизЛица.Наименование,
	|	ФизЛица.СтраховойНомерПФР,
	|	ФизЛица.НетСтраховогоНомера,
	|	ФизЛица.СотрудникУволен,
	|	ФизЛица.Имя,
	|	ФизЛица.Отчество,
	|	ФизЛица.Фамилия
	|ПОМЕСТИТЬ ВТДанныеЗастрахованныхЛиц
	|ИЗ
	|	&ДанныеЗастрахованныхЛиц КАК ФизЛица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиОСтаже.ФизЛицо КАК ФизЛицо,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаписиОСтаже.ОсобыеУсловияТруда <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЛьготыПоУсловиямТруда,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаписиОСтаже.ОсобыеУсловияТруда = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.ПустаяСсылка)
	|					И ЗаписиОСтаже.ОснованиеВыслугиЛет <> ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЛьготыПоВыслуге,
	|	МАКСИМУМ(ЕСТЬNULL(СпрТерриториальныхУсловий.Код, """")) КАК ТерриториальныеУсловия
	|ПОМЕСТИТЬ ВТОсобенностиСтажа
	|ИЗ
	|	ВТЗаписиОСтаже КАК ЗаписиОСтаже
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТерриториальныеУсловия КАК СпрТерриториальныхУсловий
	|		ПО ЗаписиОСтаже.ТерриториальныеУсловия = СпрТерриториальныхУсловий.Ссылка
	|ГДЕ
	|	(ЗаписиОСтаже.ОсобыеУсловияТруда <> ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.ПустаяСсылка)
	|			ИЛИ ЗаписиОСтаже.ТерриториальныеУсловия <> ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловия.ПустаяСсылка)
	|			ИЛИ ЗаписиОСтаже.ОснованиеВыслугиЛет <> ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаписиОСтаже.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизЛица.ФизЛицо,
	|	ФизЛица.Наименование КАК Наименование,
	|	ФизЛица.СтраховойНомерПФР,
	|	ФизЛица.НетСтраховогоНомера,
	|	ФизЛица.Имя,
	|	ФизЛица.Отчество,
	|	ФизЛица.Фамилия,
	|	ФизЛица.СотрудникУволен,
	|	ЕСТЬNULL(Взносы.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ОсобенностиСтажа.ТерриториальныеУсловия, """") КАК ТерриториальныеУсловия,
	|	ЕСТЬNULL(ОсобенностиСтажа.ЛьготыПоУсловиямТруда, ЛОЖЬ) КАК ЛьготыПоУсловиямТруда,
	|	ЕСТЬNULL(ОсобенностиСтажа.ЛьготыПоВыслуге, ЛОЖЬ) КАК ЛьготыПоВыслуге
	|ИЗ
	|	ВТДанныеЗастрахованныхЛиц КАК ФизЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыВзносов КАК Взносы
	|		ПО ФизЛица.ФизЛицо = Взносы.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсобенностиСтажа КАК ОсобенностиСтажа
	|		ПО ФизЛица.ФизЛицо = ОсобенностиСтажа.ФизЛицо
	|ГДЕ
	|	ФизЛица.ФизЛицо В
	|			(ВЫБРАТЬ
	|				Лица.ФизЛицо КАК ФизЛицо
	|			ИЗ
	|				ВТСуммыВзносов КАК Лица
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				Лица.ФизЛицо
	|			ИЗ
	|				ВТЗаписиОСтаже КАК Лица
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				Лица.ФизЛицо
	|			ИЗ
	|				ВТСведенияОЗаработке КАК Лица
	|			ГДЕ
	|				Лица.Месяц МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТерриториальныеУсловия,
	|	ЛьготыПоУсловиямТруда,
	|	ЛьготыПоВыслуге,
	|	ФизЛица.Фамилия,
	|	ФизЛица.Имя,
	|	ФизЛица.Отчество,
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиОСтаже.ФизЛицо КАК ФизЛицо,
	|	ЗаписиОСтаже.ДатаНачалаПериода,
	|	ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ЗаписиОСтаже.КодПозицииСписка,
	|	ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ЗаписиОСтаже.ПараметрТерриториальныхУсловий,
	|	ЗаписиОСтаже.ТретийПараметрВыслугиЛет
	|ИЗ
	|	ВТЗаписиОСтаже КАК ЗаписиОСтаже
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОЗаработке КАК СведенияОЗаработке
	|		ПО ЗаписиОСтаже.ФизЛицо = СведенияОЗаработке.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеЗастрахованныхЛиц КАК ДанныеЗастрахованныхЛиц
	|		ПО ЗаписиОСтаже.ФизЛицо = ДанныеЗастрахованныхЛиц.ФизЛицо
	|ГДЕ
	|	СведенияОЗаработке.ФизЛицо ЕСТЬ NULL 
	|	И ДанныеЗастрахованныхЛиц.ФизЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыИсчисленные.ДатаПолученияДохода < ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)
	|		КОГДА СтраховыеВзносыИсчисленные.ДатаПолученияДохода < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.ДатаПолученияДохода, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу + СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличины + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличиныЕНВД) КАК ДоначисленоСтраховая,
	|	ДанныеЗастрахованныхЛиц.ФизЛицо,
	|	ДанныеЗастрахованныхЛиц.Наименование,
	|	ДанныеЗастрахованныхЛиц.СтраховойНомерПФР,
	|	ДанныеЗастрахованныхЛиц.Имя,
	|	ДанныеЗастрахованныхЛиц.Отчество,
	|	ДанныеЗастрахованныхЛиц.Фамилия,
	|	ДанныеЗастрахованныхЛиц.СотрудникУволен
	|ИЗ
	|	ВТДанныеЗастрахованныхЛиц КАК ДанныеЗастрахованныхЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|		ПО ДанныеЗастрахованныхЛиц.ФизЛицо = СтраховыеВзносыИсчисленные.ФизЛицо
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.ОбособленноеПодразделение = &ОбособленноеПодразделение
	|	И СтраховыеВзносыИсчисленные.Организация = &ГоловнаяОрганизация
	|	И СтраховыеВзносыИсчисленные.Период МЕЖДУ &ОтчетныйПериод И &КонецОтчетногоПериода
	|	И НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.Период, КВАРТАЛ) > НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.ДатаПолученияДохода, КВАРТАЛ)
	|	И СтраховыеВзносыИсчисленные.ДатаПолученияДохода >= ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)
	|	И НЕ ДанныеЗастрахованныхЛиц.НетСтраховогоНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗастрахованныхЛиц.ФизЛицо,
	|	ДанныеЗастрахованныхЛиц.Наименование,
	|	ДанныеЗастрахованныхЛиц.СтраховойНомерПФР,
	|	ДанныеЗастрахованныхЛиц.Имя,
	|	ДанныеЗастрахованныхЛиц.Отчество,
	|	ДанныеЗастрахованныхЛиц.Фамилия,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыИсчисленные.ДатаПолученияДохода < ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)
	|		КОГДА СтраховыеВзносыИсчисленные.ДатаПолученияДохода < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(2010, 7, 1, 0, 0, 0)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.ДатаПолученияДохода, КВАРТАЛ)
	|	КОНЕЦ,
	|	ДанныеЗастрахованныхЛиц.СотрудникУволен
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховая + СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД) <> 0
	|		ИЛИ СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительная + СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД) <> 0
	|		ИЛИ СУММА(СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу + СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличины + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличиныЕНВД) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КорректируемыйПериод";
	
	Результаты = Запрос.ВыполнитьПакет();
	ТаблицаЗастрахованных = Результаты[2].Выгрузить();
	
	ТаблицаДоходов = Неопределено;
	ТаблицаДоходовЗаВредников = Неопределено;
	ДополнитьСведенияОЗаработкеНулевымиСтроками(СведенияОЗаработке, Результаты[3].Выгрузить(), ОтчетныйПериод);
	СформироватьТаблицыЗаработковПоТаблицеДоходов(СведенияОЗаработке, ОтчетныйПериод, ТаблицаДоходов, ТаблицаДоходовЗаВредников);
	
	// исходные
	
	ЛьготыПоУсловиямТруда = "";
	ЛьготыПоВыслуге = "";
	ТерриториальныеУсловия = "";
	НовыйДок = Неопределено;
	
	СтруктураПоиска = Новый Структура("ФизЛицо");
	
	Для каждого СтрокаТЗ Из ТаблицаЗастрахованных Цикл
		
		// Если у физлица нет страхового номера, то в пачки его включать не будем: проверка на указание пустого или неверного страхового номера ("   -   -      ")
		Если СтрокаТЗ.НетСтраховогоНомера Тогда
			СписокФизЛицБезСтрахНомеров.Добавить(СтрокаТЗ.ФизЛицо, СтрокаТЗ.Наименование);
			Продолжить;
		КонецЕсли;	
		
		Если ЛьготыПоУсловиямТруда <> СтрокаТЗ.ЛьготыПоУсловиямТруда Или ЛьготыПоВыслуге <> СтрокаТЗ.ЛьготыПоВыслуге Или ТерриториальныеУсловия <> СтрокаТЗ.ТерриториальныеУсловия Тогда

			Если НовыйДок = Неопределено Или НовыйДок.РаботникиОрганизации.Количество() <> 0 Тогда
				НовыйДок = СоздатьПачкуРазделов6РасчетаРСВ_1(ОбъектРаздела2_5, СтруктураРеквизитов);
				СтруктураРеквизитов.Дата = СтруктураРеквизитов.Дата + 1;
			КонецЕсли;
			
			ЛьготыПоУсловиямТруда = СтрокаТЗ.ЛьготыПоУсловиямТруда;
			ЛьготыПоВыслуге = СтрокаТЗ.ЛьготыПоВыслуге;
			ТерриториальныеУсловия = СтрокаТЗ.ТерриториальныеУсловия;
			
		КонецЕсли;
		
		Если НовыйДок.РаботникиОрганизации.Количество() = 200 Тогда
			
			НовыйДок = СоздатьПачкуРазделов6РасчетаРСВ_1(ОбъектРаздела2_5, СтруктураРеквизитов);
			СтруктураРеквизитов.Дата = СтруктураРеквизитов.Дата + 1;
			
		КонецЕсли; 
		
		СтрокаТабличнойЧасти = НоваяСтрокаДокументаПерсучета(НовыйДок, СтрокаТЗ, СтрокаТЗ);
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТЗ);
		
		Для каждого СтрокаПодчиненнойТЗ Из ТаблицаДоходов.НайтиСтроки(СтруктураПоиска) Цикл
			ЗаполнитьЗначенияСвойств(НовыйДок.СведенияОЗаработке.Добавить(), СтрокаПодчиненнойТЗ);
		КонецЦикла;
		Для каждого СтрокаПодчиненнойТЗ Из ТаблицаДоходовЗаВредников.НайтиСтроки(СтруктураПоиска) Цикл
			ЗаполнитьЗначенияСвойств(НовыйДок.СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Добавить(), СтрокаПодчиненнойТЗ)
		КонецЦикла;
		Для каждого СтрокаПодчиненнойТЗ Из ТаблицаСтажа.НайтиСтроки(СтруктураПоиска) Цикл
			ЗаполнитьЗначенияСвойств(НовыйДок.ЗаписиОСтаже.Добавить(), СтрокаПодчиненнойТЗ)
		КонецЦикла;
		
	КонецЦикла;
	
	// корректирующие сведения
	
	Если Не Результаты[4].Пустой() Тогда
		
		ФизлицаКорректирующихСведений = Результаты[4].Выгрузить();

		КорректируемыеПериоды = ФизлицаКорректирующихСведений.Скопировать(,"КорректируемыйПериод");
		КорректируемыеПериоды.Свернуть("КорректируемыйПериод");
		КорректируемыеПериоды.Сортировать("КорректируемыйПериод");
		
		НовыйДокРаздела6 = Неопределено;
		Для каждого СтрокаПериода Из КорректируемыеПериоды Цикл
		
			СтруктураРеквизитов.Вставить("КорректируемыйПериод", СтрокаПериода.КорректируемыйПериод);
			
			ФизлицаДокумента = ФизлицаКорректирующихСведений.Скопировать(ФизлицаКорректирующихСведений.НайтиСтроки(Новый Структура("КорректируемыйПериод", СтрокаПериода.КорректируемыйПериод)));
			МассивФизлиц = ФизлицаДокумента.ВыгрузитьКолонку("ФизЛицо");
			
		    Если СтрокаПериода.КорректируемыйПериод < ПроведениеРасчетов.ДатаВводаДополнительногоТарифаЗаРаботыСДосрочнойПенсией() Тогда
				
				ТаблицаСтажа = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОСтажеИВзносах(ДатаСозданияДокументов, СтрокаПериода.КорректируемыйПериод, Организация, МассивФизлиц); 
				
				ТипФормДокументов = "";
				КатегорияЗЛ = "";
				НовыйДок = Неопределено;
				Для каждого СтрокаТЗ Из ТаблицаСтажа Цикл
					
					Если ТипФормДокументов <> СтрокаТЗ.ТипФормДокументов Или КатегорияЗЛ <> СтрокаТЗ.КатегорияЗастрахованныхЛиц Тогда

						Если НовыйДок = Неопределено Или НовыйДок.РаботникиОрганизации.Количество() <> 0 Тогда
							НовыйДок = СоздатьСЗВ6(ОбъектРаздела2_5, СтруктураРеквизитов);
							ЗаполнитьЗначенияСвойств(НовыйДок,СтрокаТЗ,"КатегорияЗастрахованныхЛиц, ТипФормДокументов");
							СтруктураРеквизитов.Дата = СтруктураРеквизитов.Дата + 1;
						КонецЕсли;
						
						ТипФормДокументов = СтрокаТЗ.ТипФормДокументов;
						КатегорияЗЛ = СтрокаТЗ.КатегорияЗастрахованныхЛиц;
						
						ТаблицаФизлиц = ТаблицаСтажа.Скопировать(ТаблицаСтажа.НайтиСтроки(Новый Структура("КатегорияЗастрахованныхЛиц", СтрокаТЗ.КатегорияЗастрахованныхЛиц)));
						ПронумероватьСтрокиТаблицыЗначений(ТаблицаФизлиц);
						
						ДоначисленныеВзносы = ПроцедурыПерсонифицированногоУчета.ДоначисленныеВзносыДляКорректирующегоДокумента(
								Организация, ДатаСозданияДокументов, СтрокаПериода.КорректируемыйПериод, 
								СтрокаТЗ.КатегорияЗастрахованныхЛиц, ТаблицаФизлиц).Выгрузить();
						
					КонецЕсли;
					
					Если НовыйДок.РаботникиОрганизации.Количество() = 200 Тогда
						
						НовыйДок = СоздатьСЗВ6(ОбъектРаздела2_5, СтруктураРеквизитов);
						ЗаполнитьЗначенияСвойств(НовыйДок,СтрокаТЗ,"КатегорияЗастрахованныхЛиц, ТипФормДокументов");
						СтруктураРеквизитов.Дата = СтруктураРеквизитов.Дата + 1;
						
					КонецЕсли; 
					
					СтрокаТабличнойЧасти = НоваяСтрокаДокументаПерсучета(НовыйДок, СтрокаТЗ, СтрокаТЗ);
					
					СтрокаДоначислено = ДоначисленныеВзносы.Найти(СтрокаТЗ.ФизЛицо, "ФизЛицо");
					Если СтрокаДоначислено <> Неопределено Тогда
						ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаДоначислено, "ДоначисленоСтраховая, ДоначисленоНакопительная, ДоУплаченоСтраховая, ДоУплаченоНакопительная");
					КонецЕсли;
					
					ВписатьУволенногоВИсходныйРаздел6(ТаблицаЗастрахованных, СтрокаТЗ.ФизЛицо, ОбъектРаздела2_5, НовыйДокРаздела6, СтруктураРеквизитов, СтрокаТабличнойЧасти);
					
				КонецЦикла;
				
			ИначеЕсли СтрокаПериода.КорректируемыйПериод < РасчетСтраховыхВзносов.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() Тогда
				
				ВзносыФизлиц = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОВзносахПоКатегориям(ДатаСозданияДокументов, СтрокаПериода.КорректируемыйПериод, СтрокаПериода.КорректируемыйПериод, Организация, МассивФизлиц);
				ВзносыФизлиц.Сортировать("КатегорияЗастрахованныхЛиц, ТипДоговора");
				
				ТаблицаДоходов = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОДоходахЗаОтчетныеПериоды(СтрокаПериода.КорректируемыйПериод, СтрокаПериода.КорректируемыйПериод, Организация, ДатаСозданияДокументов, МассивФизлиц).Выгрузить();
						
				ТипДоговора = "";
				КатегорияЗЛ = "";
				НовыйДок = Неопределено;
				СтруктураПоиска = Новый Структура("ФизЛицо,КатегорияЗастрахованныхЛиц,ТипДоговора");
				Для каждого СтрокаТЗ Из ВзносыФизлиц Цикл
					
					Если КатегорияЗЛ <> СтрокаТЗ.КатегорияЗастрахованныхЛиц	Или ТипДоговора <> СтрокаТЗ.ТипДоговора Тогда

						Если НовыйДок = Неопределено Или НовыйДок.РаботникиОрганизации.Количество() <> 0 Тогда
							НовыйДок = СоздатьСЗВ64(ОбъектРаздела2_5, СтруктураРеквизитов);
							ЗаполнитьЗначенияСвойств(НовыйДок,СтрокаТЗ,"КатегорияЗастрахованныхЛиц, ТипДоговора");
							СтруктураРеквизитов.Дата = СтруктураРеквизитов.Дата + 1;
						КонецЕсли;
						
						ТипДоговора = СтрокаТЗ.ТипДоговора;
						КатегорияЗЛ = СтрокаТЗ.КатегорияЗастрахованныхЛиц;
						
						ТаблицаФизлиц = ВзносыФизлиц.Скопировать(ВзносыФизлиц.НайтиСтроки(Новый Структура("КатегорияЗастрахованныхЛиц, ТипДоговора", СтрокаТЗ.КатегорияЗастрахованныхЛиц, СтрокаТЗ.ТипДоговора)));
						ПронумероватьСтрокиТаблицыЗначений(ТаблицаФизлиц);
						
						ДоначисленныеВзносы = ПроцедурыПерсонифицированногоУчета.ДоначисленныеВзносыДляКорректирующегоДокумента(
								Организация, ДатаСозданияДокументов, СтрокаПериода.КорректируемыйПериод, 
								СтрокаТЗ.КатегорияЗастрахованныхЛиц, ТаблицаФизлиц, СтрокаТЗ.ТипДоговора, ОтчетныйПериод, ВзносыФизлиц).Выгрузить();
						
					КонецЕсли;
					
					Если НовыйДок.РаботникиОрганизации.Количество() = 200 Тогда
						
						НовыйДок = СоздатьСЗВ64(ОбъектРаздела2_5, СтруктураРеквизитов);
						ЗаполнитьЗначенияСвойств(НовыйДок,СтрокаТЗ,"КатегорияЗастрахованныхЛиц, ТипДоговора");
						СтруктураРеквизитов.Дата = СтруктураРеквизитов.Дата + 1;
						
					КонецЕсли; 
					
					СтрокаТабличнойЧасти = НоваяСтрокаДокументаПерсучета(НовыйДок, ФизлицаДокумента.Найти(СтрокаТЗ.ФизЛицо, "ФизЛицо"), СтрокаТЗ);
					
					СтрокаДоначислено = ДоначисленныеВзносы.Найти(СтрокаТЗ.ФизЛицо, "ФизЛицо");
					Если СтрокаДоначислено <> Неопределено Тогда
						ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаДоначислено, "ДоначисленоСтраховая, ДоначисленоНакопительная, ДоУплаченоСтраховая, ДоУплаченоНакопительная");
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТЗ);
					СтрокиДоходов = ТаблицаДоходов.НайтиСтроки(СтруктураПоиска);
					Для каждого СтрокаДоходов Из СтрокиДоходов Цикл
						ЗаполнитьЗначенияСвойств(НовыйДок.СведенияОЗаработке.Добавить(), СтрокаДоходов);
						ТаблицаДоходов.Удалить(СтрокаДоходов);
					КонецЦикла;
					
					ВписатьУволенногоВИсходныйРаздел6(ТаблицаЗастрахованных, СтрокаТЗ.ФизЛицо, ОбъектРаздела2_5, НовыйДокРаздела6, СтруктураРеквизитов, СтрокаТабличнойЧасти);
					
				КонецЦикла;
				
			Иначе
				
				СведенияОЗаработке = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОДоходахЗаОтчетныеПериоды(НачалоГода(СтрокаПериода.КорректируемыйПериод), СтрокаПериода.КорректируемыйПериод, Организация, ДатаСозданияДокументов, МассивФизлиц, , , Истина).Выгрузить();
				ТаблицаСтажа = ПроцедурыПерсонифицированногоУчета.СведенияОСтаже_2014(СтрокаПериода.КорректируемыйПериод, Организация, МассивФизлиц, , Истина, ДатаСозданияДокументов, Истина);
				ТаблицаВзносов = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОВзносахПоСуммарномуТарифу(СтрокаПериода.КорректируемыйПериод, Организация, МассивФизлиц, ДатаСозданияДокументов, Истина);
				ВычеркнутьВзносыОтБазыСвышеПредельнойВеличины(ТаблицаВзносов, СведенияОЗаработке, СтрокаПериода.КорректируемыйПериод);
				
				ТаблицаЛицБезЗаработка = ДокументОбъектРаздела6.ЗаписиОСтаже.ВыгрузитьКолонки();
				Для каждого СтрокаТЧ Из ФизлицаДокумента Цикл
					Если СведенияОЗаработке.Найти(СтрокаТЧ.ФизЛицо,"ФизЛицо") = Неопределено Тогда
						СтрокаСтажа = ТаблицаЛицБезЗаработка.Добавить();
						СтрокаСтажа.ФизЛицо = СтрокаТЧ.ФизЛицо;
						СтрокаСтажа.ДатаНачалаПериода = СтрокаПериода.КорректируемыйПериод;
						СтрокаСтажа.ДатаОкончанияПериода = КонецКвартала(СтрокаПериода.КорректируемыйПериод);
					КонецЕсли;
				КонецЦикла;
				ДополнитьСведенияОЗаработкеНулевымиСтроками(СведенияОЗаработке, ТаблицаЛицБезЗаработка, СтрокаПериода.КорректируемыйПериод);
				
				ТаблицаДоходов = Неопределено;
				ТаблицаДоходовЗаВредников = Неопределено;
				СформироватьТаблицыЗаработковПоТаблицеДоходов(СведенияОЗаработке, СтрокаПериода.КорректируемыйПериод, ТаблицаДоходов, ТаблицаДоходовЗаВредников);
				
				КорректирующиеСведенияИсходныхФорм = КорректирующиеСведенияЗаОтчетныйПериод(МассивФизлиц, СтрокаПериода.КорректируемыйПериод);
				БывшиеКатегории = ПереданныеВПФРКатегории(МассивФизлиц, СтрокаПериода.КорректируемыйПериод);
		
				НовыйДок = Неопределено;
				СтруктураПоиска = Новый Структура("ФизЛицо");
				СтруктураПоискаКатегории = Новый Структура("ФизЛицо, КатегорияЗастрахованныхЛиц");
				Для каждого СтрокаТЗ Из ФизлицаДокумента Цикл
					
					Если НовыйДок = Неопределено Или НовыйДок.РаботникиОрганизации.Количество() = 200 Тогда
						НовыйДок = СоздатьПачкуРазделов6РасчетаРСВ_1(ОбъектРаздела2_5, СтруктураРеквизитов);
						НовыйДок.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ;
						СтруктураРеквизитов.Дата = СтруктураРеквизитов.Дата + 1;
					КонецЕсли; 
					
					СтрокаВзносов = ТаблицаВзносов.Найти(СтрокаТЗ.ФизЛицо, "ФизЛицо");
					Если СтрокаВзносов = Неопределено Тогда
						СтрокаВзносов = СтрокаТЗ
					КонецЕсли;
					СтрокаТабличнойЧасти = НоваяСтрокаДокументаПерсучета(НовыйДок, СтрокаТЗ, СтрокаВзносов);
					
					ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТЗ);
					Для каждого СтрокаПодчиненнойТЗ Из ТаблицаДоходов.НайтиСтроки(СтруктураПоиска) Цикл
						ЗаполнитьЗначенияСвойств(НовыйДок.СведенияОЗаработке.Добавить(), СтрокаПодчиненнойТЗ);
					КонецЦикла;
					Для каждого СтрокаКатегории Из БывшиеКатегории.НайтиСтроки(СтруктураПоиска) Цикл
						ЗаполнитьЗначенияСвойств(СтруктураПоискаКатегории,СтрокаКатегории);
						Если НовыйДок.СведенияОЗаработке.НайтиСтроки(СтруктураПоискаКатегории).Количество() = 0 Тогда
							ЗаполнитьЗначенияСвойств(НовыйДок.СведенияОЗаработке.Добавить(),СтрокаКатегории);
						КонецЕсли;
					КонецЦикла;
					Для каждого СтрокаПодчиненнойТЗ Из ТаблицаДоходовЗаВредников.НайтиСтроки(СтруктураПоиска) Цикл
						ЗаполнитьЗначенияСвойств(НовыйДок.СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Добавить(), СтрокаПодчиненнойТЗ)
					КонецЦикла;
					Для каждого СтрокаПодчиненнойТЗ Из ТаблицаСтажа.НайтиСтроки(СтруктураПоиска) Цикл
						ЗаполнитьЗначенияСвойств(НовыйДок.ЗаписиОСтаже.Добавить(), СтрокаПодчиненнойТЗ)
					КонецЦикла;
					Для каждого СтрокаПодчиненнойТЗ Из КорректирующиеСведенияИсходныхФорм.НайтиСтроки(СтруктураПоиска) Цикл
						ЗаполнитьЗначенияСвойств(НовыйДок.КорректирующиеСведения.Добавить(), СтрокаПодчиненнойТЗ)
					КонецЦикла;
					
					ВписатьУволенногоВИсходныйРаздел6(ТаблицаЗастрахованных, СтрокаТЗ.ФизЛицо, ОбъектРаздела2_5, НовыйДокРаздела6, СтруктураРеквизитов, СтрокаТабличнойЧасти);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если СписокФизЛицБезСтрахНомеров.Количество() > 0 Тогда
		
		МассивФизЛиц = Новый Массив;
		Для Каждого ЭлементСписка Из СписокФизЛицБезСтрахНомеров Цикл
			МассивФизЛиц.Добавить(Новый Структура("Представление, Расшифровка", ЭлементСписка.Представление, ЭлементСписка.Значение));
		КонецЦикла;
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("Следующие физические лица не включены в пачки документов перс.учета из-за отсутствия страховых номеров ПФР:", Перечисления.ВидыСообщений.ВажнаяИнформация, МассивФизЛиц));
		
	КонецЕсли; 
	
	Если МассивСообщений.Количество() > 0 Тогда
		ВывестиСообщенияОбОшибках(МассивСообщений);
	КонецЕсли; 
	
	Возврат ТекущаяСтрока
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////

Процедура ПереЗаполнитьСтажСотрудникаВРазделе6(ФизЛицо, ТекущийОтчетныйПериод, ДатаАктуальности, ТекущийТипСведенийСЗВ) Экспорт

	Для каждого СтрокаТЧ Из ДокументОбъектРаздела6.ЗаписиОСтаже.НайтиСтроки(Новый Структура("ФизЛицо",ФизЛицо)) Цикл
		ДокументОбъектРаздела6.ЗаписиОСтаже.Удалить(СтрокаТЧ)
	КонецЦикла;
	СтрокиФизлица = ПроцедурыПерсонифицированногоУчета.СведенияОСтаже_2014(ТекущийОтчетныйПериод, Организация, ФизЛицо, , Истина, ДатаАктуальности, ТекущийТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
	Для каждого СтрокаТЗ Из СтрокиФизлица Цикл
		ЗаполнитьЗначенияСвойств(ДокументОбъектРаздела6.ЗаписиОСтаже.Добавить(),СтрокаТЗ);
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаписатьДокументКакПринятыйПФР(Пачка) Экспорт
	
	Если Не ЗначениеЗаполнено(Пачка) Тогда
		Возврат
	КонецЕсли;
	
	ДокументОбъект = СоответствиеСсылокИОбъектов[Пачка];
	Попытка
		
		Если ТипЗнч(Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			
			Для Каждого СтрокаДокумента Из ДокументОбъект.ПачкиДокументов2014 Цикл
				ДокументСЗВ = СоответствиеСсылокИОбъектов[СтрокаДокумента.ДокументПачка];
				ДокументСЗВ.Записать(РежимЗаписиДокумента.Проведение);
				ДокументСЗВ.ПринятоВПФР = Истина;
				ДокументСЗВ.Записать(РежимЗаписиДокумента.Запись);
			КонецЦикла;
			
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ДокументОбъект.ПринятоВПФР = Истина;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	Исключение
		ОбщегоНазначенияЗК.ПоказатьДиалогСИнформациейОбОшибке(ОбщегоНазначенияЗК.ПолучитьПричинуОшибки(ИнформацияОбОшибке()));
		ДокументОбъект.ПринятоВПФР = Ложь;
		
	КонецПопытки;
	
	Если ТипЗнч(Пачка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
		Если ДокументОбъект.ПринятоВПФР И Не ДокументОбъект.НеСодержитСЗВ Тогда
			НаборЗаписей = РегистрыСведений.СведенияПринятыеПФР.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(ДокументОбъект.Организация);
			НаборЗаписей.Отбор.ОтчетныйПериодПерсучетаПФР.Установить(ДокументОбъект.ОтчетныйПериод);
			СтрокаНабора = НаборЗаписей.Добавить();
			СтрокаНабора.Организация = ДокументОбъект.Организация;
			СтрокаНабора.ОтчетныйПериодПерсучетаПФР = ДокументОбъект.ОтчетныйПериод;
			СтрокаНабора.КомплектДокументов = Пачка;
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленных)
	
	ЗаменяемаяСсылка = ЭлементСоответствия.Ключ;
	НовыйДокОбъект = ЭлементСоответствия.Значение;
	
	Если ТипЗнч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4")Тогда
		Если ТаблицаУдаленных.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленных[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленных.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.РаботникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.РаботникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.РаботникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ЗначениеЗаполнено(ДокументОбъектСЗВ6_1и2.Дата) Тогда
				Если ДокументОбъектСЗВ6_1и2.ЭтоНовый() Тогда
					Если ДокументОбъектСЗВ6_1и2.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
						ДокументОбъектСЗВ6_1и2 = УдаленныйДокОбъект
					КонецЕсли;
				Иначе
					Если ДокументОбъектСЗВ6_1и2.Ссылка = ЗаменяемаяСсылка Тогда
						ДокументОбъектСЗВ6_1и2 = УдаленныйДокОбъект
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			СтрокаТабличнойЧастиДокументаПередачи =  ДокументОбъектРаздела2_5.ПачкиДокументов2014.Найти(ЗаменяемаяСсылка, "ДокументПачка");
			Если СтрокаТабличнойЧастиДокументаПередачи <> Неопределено Тогда
				СтрокаТабличнойЧастиДокументаПередачи.ДокументПачка = НоваяСсылка;
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4")Тогда
		Если ТаблицаУдаленных.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленных[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленных.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.РаботникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.РаботникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.РаботникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.СведенияОЗаработке.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОЗаработке Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОЗаработке.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ЗначениеЗаполнено(ДокументОбъектСЗВ64.Дата) Тогда
				Если ДокументОбъектСЗВ64.ЭтоНовый() Тогда
					Если ДокументОбъектСЗВ64.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
						ДокументОбъектСЗВ64 = УдаленныйДокОбъект
					КонецЕсли;
				Иначе
					Если ДокументОбъектСЗВ64.Ссылка = ЗаменяемаяСсылка Тогда
						ДокументОбъектСЗВ64 = УдаленныйДокОбъект
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			СтрокаТабличнойЧастиДокументаПередачи =  ДокументОбъектРаздела2_5.ПачкиДокументов2014.Найти(ЗаменяемаяСсылка, "ДокументПачка");
			Если СтрокаТабличнойЧастиДокументаПередачи <> Неопределено Тогда
				СтрокаТабличнойЧастиДокументаПередачи.ДокументПачка = НоваяСсылка;
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1")Тогда
		Если ТаблицаУдаленных.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленных[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленных.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.РаботникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.РаботникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.РаботникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.СведенияОЗаработке.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОЗаработке Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОЗаработке.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОЗаработкеНаВредныхИТяжелыхРаботах Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОЗаработкеНаВредныхИТяжелыхРаботах.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.ЗаписиОСтаже.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.ЗаписиОСтаже Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.ЗаписиОСтаже.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ЗначениеЗаполнено(ДокументОбъектРаздела6.Дата) Тогда
				Если ДокументОбъектРаздела6.ЭтоНовый() Тогда
					Если ДокументОбъектРаздела6.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
						ДокументОбъектРаздела6 = УдаленныйДокОбъект
					КонецЕсли;
				Иначе
					Если ДокументОбъектРаздела6.Ссылка = ЗаменяемаяСсылка Тогда
						ДокументОбъектРаздела6 = УдаленныйДокОбъект
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			СтрокаТабличнойЧастиДокументаПередачи =  ДокументОбъектРаздела2_5.ПачкиДокументов2014.Найти(ЗаменяемаяСсылка, "ДокументПачка");
			Если СтрокаТабличнойЧастиДокументаПередачи <> Неопределено Тогда
				СтрокаТабличнойЧастиДокументаПередачи.ДокументПачка = НоваяСсылка;
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
		Если ТаблицаУдаленных.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленных[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленных.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.ПачкиДокументов.Очистить();
			УдаленныйДокОбъект.ПачкиДокументов2013.Очистить();
			УдаленныйДокОбъект.ПачкиДокументов2014.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.ПачкиДокументов2014 Цикл
				ДобавляемаяСтрока = УдаленныйДокОбъект.ПачкиДокументов2014.Добавить();
				ДобавляемаяСтрока.ДокументПачка = СтрокаТЧ.ДокументПачка;
			КонецЦикла;
			УдаленныйДокОбъект.СведенияОЗадолженности.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОЗадолженности Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОЗадолженности.Добавить(), СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ЗначениеЗаполнено(ДокументОбъектРаздела2_5.Дата) Тогда
				Если ДокументОбъектРаздела2_5.ЭтоНовый() Тогда
					Если ДокументОбъектРаздела2_5.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
						ДокументОбъектРаздела2_5 = УдаленныйДокОбъект
					КонецЕсли;
				Иначе
					Если ДокументОбъектРаздела2_5.Ссылка = ЗаменяемаяСсылка Тогда
						ДокументОбъектРаздела2_5 = УдаленныйДокОбъект
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			СтрокаПачки = ПачкиДокументов.Найти(ЗаменяемаяСсылка, "Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				СтрокаПачки.Пачка = НоваяСсылка;
				ЗаполнитьЗначенияСвойств(СтрокаПачки, УдаленныйДокОбъект);
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

Процедура СохранитьДанные(УдаляемыеДокументы, Организация, ОтдельныйДокумент = Неопределено) Экспорт
	
	НачатьТранзакцию();
	
	// Сохраняем измененные документы
	Если ОтдельныйДокумент = Неопределено Тогда
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ТипЗнч(ЭлементСоответствия.Ключ) = Тип("ДокументСсылка.ПередачаСЗВ4вПФР") Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЭлементСоответствия.Значение.ЭтоНовый() И ЭлементСоответствия.Значение.Модифицированность() Тогда
				ЭлементСоответствия.Значение.Записать(?(ЭлементСоответствия.Значение.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Помечаем на удаление удаляемые объекты
	Если УдаляемыеДокументы <> Неопределено Тогда
		Пока УдаляемыеДокументы.Следующий() Цикл
			ДокОбъект = УдаляемыеДокументы.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	// Записываем в базу новые, только созданные документы на место удаленных документов
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПередачаСЗВ4вПФР.Ссылка
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.ПометкаУдаления
	|	И ПередачаСЗВ4вПФР.Организация = &Организация";
	ТаблицаУдаленныхРазделов = Запрос.Выполнить().Выгрузить();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация = &Организация";
	ТаблицаУдаленныхСЗВ = Запрос.Выполнить().Выгрузить();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.ПометкаУдаления
	|	И ПачкаДокументовСЗВ_6_4.Организация = &Организация";
	ТаблицаУдаленныхСЗВ64 = Запрос.Выполнить().Выгрузить();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПачкаРазделов6РасчетаРСВ_1.Ссылка
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1.ПометкаУдаления
	|	И ПачкаРазделов6РасчетаРСВ_1.Организация = &Организация";
	ТаблицаУдаленныхРазделов6 = Запрос.Выполнить().Выгрузить();
	
	Если ОтдельныйДокумент = Неопределено Тогда
		
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ЭлементСоответствия.Значение.ЭтоНовый() Тогда
				ТипДокумента = ТипЗнч(ЭлементСоответствия.Ключ);
				Если ТипДокумента = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4") Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхСЗВ64);
				ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхСЗВ);
				ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхРазделов6);
				ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПередачаСЗВ4вПФР") Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ТипЗнч(ЭлементСоответствия.Ключ) = Тип("ДокументСсылка.ПередачаСЗВ4вПФР") Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЭлементСоответствия.Значение.ЭтоНовый() И ЭлементСоответствия.Значение.Модифицированность() Тогда
				ЭлементСоответствия.Значение.Записать(?(ЭлементСоответствия.Значение.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			КонецЕсли;
		КонецЦикла;
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ТипЗнч(ЭлементСоответствия.Ключ) <> Тип("ДокументСсылка.ПередачаСЗВ4вПФР") Тогда
				Продолжить;
			КонецЕсли;
			ДокОбъект = ЭлементСоответствия.Значение;
			Если ДокОбъект.ЭтоНовый() Тогда
				ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхРазделов);
			ИначеЕсли ДокОбъект.Модифицированность() Тогда
				ДокОбъект.Записать(?(ДокОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			ИначеЕсли ДокОбъект.Проведен И Не ДокОбъект.ПринятоВПФР Тогда
				ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если ЭлементСоответствия.Ключ = ОтдельныйДокумент Тогда
				ТипДокумента = ТипЗнч(ЭлементСоответствия.Ключ);
				Если ТипДокумента = Тип("ДокументСсылка.ПачкаДокументовСЗВ_6_4") Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхСЗВ64);
				ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4") Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхСЗВ);
				ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1") Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхРазделов6);
				ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПередачаСЗВ4вПФР") Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхРазделов);
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Функция ДокументыБылиМодифицированы() Экспорт
	
	ДокументыМодифицированы = Ложь;
	
	Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
		Если ЭлементСоответствия.Значение.Модифицированность() Тогда
			ДокументыМодифицированы = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыМодифицированы
	
КонецФункции // ДокументыМодифицированы()

Функция НеиспользуемыеДокументы(Организация, ОтчетныйПериод) Экспорт
	
	СписокДокументовДерева = Новый Массив;
	Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
		СписокДокументовДерева.Добавить(ЭлементСоответствия.Ключ);
	КонецЦикла;
	
	// получаем список удаляемых документов
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументовДерева", СписокДокументовДерева);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация = &Организация
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ОтчетныйПериод = &ОтчетныйПериод
	|	И НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления
	|	И НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка В (&СписокДокументовДерева)
	|	И НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.СпециальныйДокумент2010года
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Организация = &Организация
	|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = &ОтчетныйПериод
	|	И НЕ ПередачаСЗВ4вПФР.ПометкаУдаления
	|	И НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2010года
	|	И НЕ ПередачаСЗВ4вПФР.Ссылка В (&СписокДокументовДерева)
	|	И НЕ ПередачаСЗВ4вПФР.НеСодержитСЗВ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Организация = &Организация
	|	И ПачкаДокументовСЗВ_6_4.ОтчетныйПериод = &ОтчетныйПериод
	|	И НЕ ПачкаДокументовСЗВ_6_4.ПометкаУдаления
	|	И НЕ ПачкаДокументовСЗВ_6_4.Ссылка В (&СписокДокументовДерева)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1.Ссылка
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1.Организация = &Организация
	|	И ПачкаРазделов6РасчетаРСВ_1.ОтчетныйПериод = &ОтчетныйПериод
	|	И НЕ ПачкаРазделов6РасчетаРСВ_1.ПометкаУдаления
	|	И НЕ ПачкаРазделов6РасчетаРСВ_1.Ссылка В (&СписокДокументовДерева)";
	
	УдаляемыеДокументы = Запрос.Выполнить().Выбрать();
	
	Возврат УдаляемыеДокументы
	
КонецФункции // НеиспользуемыеДокументы()

////////////////////////////////////////////////////////////////////////////////

СоответствиеСсылокИОбъектов = Новый Соответствие;
