
Перем ЦенаСНДС;

Процедура СформируемЗаказыПокупателейНаОснованиеИмпортированногоЗаказа() Экспорт

	Для каждого Строка Из ТаблицаЗаказов Цикл
		
		Если Не Строка.Пометка ИЛИ Строка.Обработан Тогда		
			ОбщегоНазначения.Сообщение(СокрЛП(Строка.Документ) + " уже импортирован");
			Продолжить;					
		КонецЕсли; 		
		
		НовыйЗаказПокупателя = СоздатьНовыйЗаказПокупателя(Строка.Документ); /// Кунов О.В., 18.07.2017 - 68239
		
		ЦенаСНДС = Строка.Документ.СуммаВключаетНДС;
		
		СтруктураВозврат = ВыполнимПроверкуОбъемноВесовыхХарактеристикЗаказа(Строка.Документ);
		
		мРазбиватьЗаказ = Ложь;
		Если СтруктураВозврат.РазбиватьЗаказ И НЕ РазбиватьЗаказы = 3 Тогда
			
			 #Если Клиент Тогда
				 Режим = РежимДиалогаВопрос.ДаНет;
				 Текст = "Обнаружено превышение грузоподъемности/грузовместимости, разбить заказ?";
				 Ответ = Вопрос(Текст, Режим, 0,);
				 Если Ответ = КодВозвратаДиалога.Да Тогда
				 	 мРазбиватьЗаказ = Истина;
				 КонецЕсли;
			 #КонецЕсли
		
		КонецЕсли; 
		
		Если мРазбиватьЗаказ И НЕ РазбиватьЗаказы = 3 Тогда
			
			#Если Клиент Тогда                
				Состояние("Подготовка таблиц...");
			#КонецЕсли
			
			мТаблицаТоваров = Строка.Документ.Товары.Выгрузить();
			мТаблицаТоваров.Колонки.Добавить("ВесБрутто"				, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
			мТаблицаТоваров.Колонки.Добавить("Объем"					, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
			мТаблицаТоваров.Колонки.Добавить("КоличествоПаллетоМест"	, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
			мТаблицаТоваров.Колонки.Добавить("НачОстаток"				, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
			
			Для каждого лСтрока Из мТаблицаТоваров Цикл
			
				СтруктураВесов = АП_ОбщегоНазначенияКлиент.ПолучитьВесаДляСтроки("Количество", лСтрока);
				
				лСтрока.ВесБрутто 	= СтруктураВесов.ВесБрутто / 1000; 
				лСтрока.Объем 		= СтруктураВесов.Объем / 1000;
				
				лСтрока.НачОстаток 	= лСтрока.Количество;
				
				лСтрока.КоличествоПаллетоМест = лСтрока.Количество * лСтрока.ЕдиницаИзмерения.Коэффициент / ?(лСтрока.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0, 1, лСтрока.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент);
			
			КонецЦикла; 
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			               |	КП_ИмпортированныйЗаказТовары.НомерСтроки,
			               |	КП_ИмпортированныйЗаказТовары.ЕдиницаИзмерения,
			               |	КП_ИмпортированныйЗаказТовары.ЕдиницаИзмеренияМест,
			               |	КП_ИмпортированныйЗаказТовары.Количество,
			               |	КП_ИмпортированныйЗаказТовары.КоличествоМест,
			               |	КП_ИмпортированныйЗаказТовары.Коэффициент,
			               |	КП_ИмпортированныйЗаказТовары.Номенклатура,
			               |	КП_ИмпортированныйЗаказТовары.СтавкаНДС,
			               |	КП_ИмпортированныйЗаказТовары.Сумма,
			               |	КП_ИмпортированныйЗаказТовары.СуммаНДС,
			               |	КП_ИмпортированныйЗаказТовары.ХарактеристикаНоменклатуры,
			               |	КП_ИмпортированныйЗаказТовары.Цена,
			               |	КП_ИмпортированныйЗаказТовары.СерияНоменклатуры,
			               |	КП_ИмпортированныйЗаказТовары.ЦенаЗагрузки,
			               |	КП_ИмпортированныйЗаказТовары.ПЦ_ТипЦен,
			               |	КП_ИмпортированныйЗаказТовары.КП_ОСГ,
						   |	КП_ИмпортированныйЗаказТовары.ВесБрутто,
						   |	КП_ИмпортированныйЗаказТовары.Объем,
						   |	КП_ИмпортированныйЗаказТовары.КоличествоПаллетоМест,
						   |	КП_ИмпортированныйЗаказТовары.НачОстаток
			               |ПОМЕСТИТЬ М_ВремТЧ
			               |ИЗ
			               |	&ТаблицаТоваров КАК КП_ИмпортированныйЗаказТовары
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	М_ВремТЧ.НомерСтроки,
			               |	М_ВремТЧ.ЕдиницаИзмерения,
			               |	М_ВремТЧ.ЕдиницаИзмеренияМест,
			               |	М_ВремТЧ.Количество,
			               |	М_ВремТЧ.КоличествоМест,
			               |	М_ВремТЧ.Коэффициент,
			               |	М_ВремТЧ.Номенклатура,
			               |	М_ВремТЧ.СтавкаНДС,
			               |	М_ВремТЧ.Сумма,
			               |	М_ВремТЧ.СуммаНДС,
			               |	М_ВремТЧ.ХарактеристикаНоменклатуры,
			               |	М_ВремТЧ.Цена,
			               |	М_ВремТЧ.СерияНоменклатуры,
			               |	М_ВремТЧ.ЦенаЗагрузки,
			               |	М_ВремТЧ.ПЦ_ТипЦен,
			               |	М_ВремТЧ.КП_ОСГ,
						   |	М_ВремТЧ.ВесБрутто,
						   |	М_ВремТЧ.Объем,
						   |	М_ВремТЧ.КоличествоПаллетоМест,
						   |	М_ВремТЧ.НачОстаток,
						   |	М_ВремТЧ.ВесБрутто КАК ВесБруттоНачОстаток,
						   |	М_ВремТЧ.Объем КАК ОбъемНачОстаток,
						   |	М_ВремТЧ.КоличествоПаллетоМест КАК КоличествоПаллетоМестНачОстаток
						   |ИЗ
			               |	М_ВремТЧ КАК М_ВремТЧ";
						   
			Запрос.УстановитьПараметр("ТаблицаТоваров", мТаблицаТоваров);
			
			мРезультат = Запрос.Выполнить().Выгрузить(); 
			
			СтруктураВесовЗаказа = Неопределено;
			
			мТаблицаТоваров_Первичная = мТаблицаТоваров.Скопировать();
			мТаблицаТоваров.очистить();
			
			текВес = 0; текОбъем = 0; текКоличествоПаллетоМест = 0; МассивСтрокЗаказа = Новый Массив; мИзменилиСтроку = Истина;
			
			Пока НЕ мРезультат.Количество() = 0 Цикл
				
				#Если Клиент Тогда
					ОбработкаПрерыванияПользователя();
				#КонецЕсли
				
				СтрокаДок = мРезультат[0];
				
				#Если Клиент Тогда
					Состояние("Формирование заказов покупателя ...");
				#КонецЕсли
				
				Если мИзменилиСтроку Тогда
				
					текВес = текВес + СтрокаДок.ВесБрутто; 
					текОбъем = текОбъем + СтрокаДок.Объем;  
					текКоличествоПаллетоМест = текКоличествоПаллетоМест + СтрокаДок.КоличествоПаллетоМест;
					
				КонецЕсли; 
				
				мУсловиеОтбора_ПоВесу = 0; мУсловиеОтбора_ПоОбъему = 0; мУсловиеОтбора_КоличествоПаллетоМест = 0;
				
				ПроверятьПоВесу = ((СтруктураВозврат.МаксВес <= текВес) И (РазбиватьЗаказы = 0));
				ПроверятьПоОбъему = ((СтруктураВозврат.МаксОбъем <= текОбъем) И (РазбиватьЗаказы = 1));
				ПроверятьПоПаллеттам = ((СтруктураВозврат.МаксКоличествоПаллетоМест <= текКоличествоПаллетоМест) И (РазбиватьЗаказы = 2));
				
				Если ПроверятьПоВесу ИЛИ ПроверятьПоОбъему ИЛИ ПроверятьПоПаллеттам Тогда
					
					Если ПроверятьПоВесу Тогда					
						мУсловиеОтбора_ПоВесу = СтруктураВозврат.МаксВес - (текВес - СтрокаДок.ВесБрутто); //Получим вес недогруза
					КонецЕсли; 
					
					Если ПроверятьПоОбъему Тогда					
						мУсловиеОтбора_ПоОбъему = СтруктураВозврат.МаксОбъем - (текОбъем - СтрокаДок.Объем); //Получим объем недогруза
					КонецЕсли;
					
					Если ПроверятьПоПаллеттам Тогда					
						мУсловиеОтбора_КоличествоПаллетоМест = СтруктураВозврат.МаксКоличествоПаллетоМест - (текКоличествоПаллетоМест - СтрокаДок.КоличествоПаллетоМест); //Получим вес недогруза
					КонецЕсли;
					
					Если НЕ СохранятьПорядокСтрок Тогда
					
						//Дополним таблицу товаром, где условие проверки меньше текущего
						Если РазбиватьКоличество И НЕ мРезультат.Количество() = 1 Тогда						
							ПолучимСтрокиДляДоУкомплектованияЗаказа_РазбиваемПоКоличеству(мРезультат, мТаблицаТоваров, СтруктураВозврат, мУсловиеОтбора_ПоВесу, мУсловиеОтбора_ПоОбъему, мУсловиеОтбора_КоличествоПаллетоМест);
						ИначеЕсли РазбиватьКоличество И мРезультат.Количество() = 1 Тогда
							ПолучимСтрокиДляДоУкомплектованияЗаказа_РазбиваемПоКоличеству_СохраняемПорядок(мТаблицаТоваров_Первичная, СтрокаДок, мТаблицаТоваров, СтруктураВозврат, мУсловиеОтбора_ПоВесу, мУсловиеОтбора_ПоОбъему, мУсловиеОтбора_КоличествоПаллетоМест);
						ИначеЕсли мРезультат.Количество() = 1 Тогда
							
							НоваяСтрока = мТаблицаТоваров.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДок);
							
							СтрокаДок.Количество = 0;
							ПересчитаемДанныеПоСтроке(СтрокаДок);
							
							НайтиСтроки = мТаблицаТоваров_Первичная.НайтиСтроки(Новый Структура("НомерСтроки", СтрокаДок.НомерСтроки));
							
							Для каждого мСтрока Из НайтиСтроки Цикл
								мТаблицаТоваров_Первичная.Удалить(мСтрока);
							КонецЦикла;
							
						Иначе
							ПолучимСтрокиДляДоУкомплектованияЗаказа(мРезультат, мТаблицаТоваров, СтруктураВозврат, мУсловиеОтбора_ПоВесу, мУсловиеОтбора_ПоОбъему, мУсловиеОтбора_КоличествоПаллетоМест);
						КонецЕсли; 
						
					Иначе
						Если РазбиватьКоличество Тогда
							ПолучимСтрокиДляДоУкомплектованияЗаказа_РазбиваемПоКоличеству_СохраняемПорядок(мТаблицаТоваров_Первичная, СтрокаДок, мТаблицаТоваров, СтруктураВозврат, мУсловиеОтбора_ПоВесу, мУсловиеОтбора_ПоОбъему, мУсловиеОтбора_КоличествоПаллетоМест);
						Иначе
							НоваяСтрока = мТаблицаТоваров.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДок);
							
							СтрокаДок.Количество = 0;
							ПересчитаемДанныеПоСтроке(СтрокаДок);
							
							НайтиСтроки = мТаблицаТоваров_Первичная.НайтиСтроки(Новый Структура("НомерСтроки", СтрокаДок.НомерСтроки));
							
							Для каждого мСтрока Из НайтиСтроки Цикл
								мТаблицаТоваров_Первичная.Удалить(мСтрока);
							КонецЦикла;
							//мРезультат.Удалить(СтрокаДок);
						КонецЕсли;
					КонецЕсли; 
					
					Если мТаблицаТоваров.Количество() = 0 Тогда
						
						ОбщегоНазначения.СообщитьОбОшибке("Что то пошло не так, заказы не могут быть корректно разбиты, проверьте настройки и повторите попытку, или обратитесь к администратору");
						Прервать;					
					КонецЕсли; 
					
								
					//Если превысили вес или объем
					НовыйЗаказПокупателя.ДополнительныеСвойства.Вставить("мТаблицаТоваров", мТаблицаТоваров);
					НовыйЗаказПокупателя.Заполнить(Строка.Документ);
					
					Удачно = Ложь;
					Попытка		
						РассчитатьКолВоПаллетоМест(НовыйЗаказПокупателя, Истина);
						НовыйЗаказПокупателя.ПересчитатьЦены(Истина);
						//m.ionov@a-prof.ru 20.02.2015
						НовыйЗаказПокупателя.КП_СогласованиеБухгалтерией = Перечисления.КП_СогласованиеБухгалтерией.НеТребуется;
						НовыйЗаказПокупателя.ДополнительныеСвойства.Вставить("ПроводитсяИнтерактивно", Истина);
						//----m.ionov@a-prof.ru---
						//{12.05.2015 Островерхий заявка №б/н 
						Для каждого СтрТЧ Из НовыйЗаказПокупателя.Товары Цикл
							тНоваяСтрока = НовыйЗаказПокупателя.КП_ИсходныйЗаказ.Добавить();
							ЗаполнитьЗначенияСвойств(тНоваяСтрока,СтрТЧ);
						КонецЦикла;  
						//12.05.2015 Островерхий} 
						
						//{12.10.2015 Островерхий заявка №б/н 
						НовыйЗаказПокупателя.Записать(РежимЗаписиДокумента.Запись);		
						Удачно = Истина;
					Исключение
						ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
						Удачно = Ложь;
					КонецПопытки;
					
					Если Удачно Тогда
						
						НоваяСтрока = СформированныеДокументы.Добавить();
						НоваяСтрока.Документ = НовыйЗаказПокупателя.Ссылка;
						НоваяСтрока.ДокументОснование = НовыйЗаказПокупателя.ДокументОснование;
						
						//начинаем заполнять новый заказ
						текВес = СтрокаДок.ВесБрутто; 
						текОбъем = СтрокаДок.Объем; 
						текКоличествоПаллетоМест = СтрокаДок.Количество * СтрокаДок.ЕдиницаИзмерения.Коэффициент / ?(СтрокаДок.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0, 1, СтрокаДок.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент);
 
						мТаблицаТоваров.Очистить();
						
						НовыйЗаказПокупателя = СоздатьНовыйЗаказПокупателя(Строка.Документ); /// Кунов О.В., 18.07.2017 - 68239
						
					КонецЕсли;
					
				КонецЕсли;	
				
				ПроверятьПоВесу = ((СтруктураВозврат.МаксВес <= текВес) И (РазбиватьЗаказы = 0));
				ПроверятьПоОбъему = ((СтруктураВозврат.МаксОбъем <= текОбъем) И (РазбиватьЗаказы = 1));
				ПроверятьПоПаллеттам = ((СтруктураВозврат.МаксКоличествоПаллетоМест <= текКоличествоПаллетоМест) И (РазбиватьЗаказы = 2));
				
				Если ПроверятьПоВесу ИЛИ ПроверятьПоОбъему ИЛИ ПроверятьПоПаллеттам Тогда
					//значит необходимо дальше бить эту строку
					мИзменилиСтроку = Ложь;
				Иначе
					
					Если НЕ СтрокаДок.Количество = 0 Тогда
						
						НоваяСтрока = мТаблицаТоваров.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДок);						
						
					КонецЕсли; 
 
					мРезультат.Удалить(СтрокаДок);
					
					мИзменилиСтроку = Истина;
					
				КонецЕсли;
					
			КонецЦикла;
			
			Если мТаблицаТоваров.Количество() > 0 Тогда
			
				//Запишем последний заказ покупателя
				НовыйЗаказПокупателя.ДополнительныеСвойства.Вставить("мТаблицаТоваров", мТаблицаТоваров);
				НовыйЗаказПокупателя.Заполнить(Строка.Документ);
				
				Удачно = Ложь;
				Попытка		
					НовыйЗаказПокупателя.КП_СогласованиеБухгалтерией = Перечисления.КП_СогласованиеБухгалтерией.НеТребуется;
					НовыйЗаказПокупателя.ПересчитатьЦены(Истина);
					РассчитатьКолВоПаллетоМест(НовыйЗаказПокупателя, Истина);
					//m.ionov@a-prof.ru 20.02.2015
					НовыйЗаказПокупателя.ДополнительныеСвойства.Вставить("ПроводитсяИнтерактивно", Истина);
					//----m.ionov@a-prof.ru---
					//{12.05.2015 Островерхий заявка №б/н 
					Для каждого СтрТЧ Из НовыйЗаказПокупателя.Товары Цикл
						тНоваяСтрока = НовыйЗаказПокупателя.КП_ИсходныйЗаказ.Добавить();
						ЗаполнитьЗначенияСвойств(тНоваяСтрока,СтрТЧ);
					КонецЦикла;  
					//12.05.2015 Островерхий}
					НовыйЗаказПокупателя.Записать(РежимЗаписиДокумента.Запись);		
					Удачно = Истина;
				Исключение
					ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
					Удачно = Ложь;
				КонецПопытки;
				
				Если Удачно Тогда
					
					НоваяСтрока = СформированныеДокументы.Добавить();
					НоваяСтрока.Документ = НовыйЗаказПокупателя.Ссылка;
					НоваяСтрока.ДокументОснование = НовыйЗаказПокупателя.ДокументОснование;
					
				КонецЕсли;
				
			КонецЕсли; 
			
		Иначе
			
			НовыйЗаказПокупателя.Заполнить(Строка.Документ);
			Удачно = Ложь;
			Попытка		
				НовыйЗаказПокупателя.КП_СогласованиеБухгалтерией = Перечисления.КП_СогласованиеБухгалтерией.НеТребуется;
				НовыйЗаказПокупателя.ПересчитатьЦены(Истина);
				РассчитатьКолВоПаллетоМест(НовыйЗаказПокупателя, Истина);
				//m.ionov@a-prof.ru 20.02.2015
				НовыйЗаказПокупателя.ДополнительныеСвойства.Вставить("ПроводитсяИнтерактивно", Истина);
				//----m.ionov@a-prof.ru---
				//{12.05.2015 Островерхий заявка №б/н 
				Для каждого СтрТЧ Из НовыйЗаказПокупателя.Товары Цикл
					тНоваяСтрока = НовыйЗаказПокупателя.КП_ИсходныйЗаказ.Добавить();
					ЗаполнитьЗначенияСвойств(тНоваяСтрока,СтрТЧ);
				КонецЦикла;  
				//12.05.2015 Островерхий}
				НовыйЗаказПокупателя.Записать(РежимЗаписиДокумента.Запись);		
				Удачно = Истина;
			Исключение
				ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
				Удачно = Ложь;
			КонецПопытки;
			
			Если Удачно Тогда
				
				НоваяСтрока = СформированныеДокументы.Добавить();
				НоваяСтрока.Документ = НовыйЗаказПокупателя.Ссылка;
				НоваяСтрока.ДокументОснование = НовыйЗаказПокупателя.ДокументОснование;
				
			КонецЕсли;
			
		КонецЕсли;
		
		//++ Spl_Апроф 28.01.2015 (k.russkih@a-prof.ru) По заявке для проверки, что уже создали заказы покупателей
		НайтиСтроки = СформированныеДокументы.Найти(Строка.Документ, "ДокументОснование");		
		Если НЕ НайтиСтроки = Неопределено Тогда		
			Строка.Обработан = Истина;
			Строка.Пометка = Ложь;
		КонецЕсли;		
		
	КонецЦикла;

КонецПроцедуры


/// Кунов О.В., 18.07.2017 - 68239
Функция СоздатьНовыйЗаказПокупателя(ИмпортированныйЗаказ)
	
	НовыйЗаказПокупателя = Документы.ЗаказПокупателя.СоздатьДокумент();
	НовыйЗаказПокупателя.ДополнительныеСвойства.Вставить("ФормируемЧерезОбработку", Истина);
	
	ДатаВходящегоЗаказа = ИмпортированныйЗаказ.ДатаПоДаннымПокупателя;
	НовыйЗаказПокупателя.Дата = ? (ЗначениеЗаполнено(ДатаВходящегоЗаказа) И ДатаВходящегоЗаказа < НачалоДня(ТекущаяДата()), КонецДня(ДатаВходящегоЗаказа), ТекущаяДата());
	
	Возврат НовыйЗаказПокупателя;
		
КонецФункции
///


Процедура РассчитатьКолВоПаллетоМест(ТекДокумент, МожноИзменить = Ложь)
	
	ИтогоКолВоПаллетоМест = 0; мКоличествоПаллетоМест = 0;
	ЕстьНеРассчитанные = Ложь;
	
	Для каждого СтрокаТовара Из ТекДокумент.Товары Цикл
		//Коэффициент = СтрокаТовара.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент;
		ЕдПаллет = СтрокаТовара.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет;
		Если ЗначениеЗаполнено(ЕдПаллет) Тогда
			Коэффициент = ЕдПаллет.Коэффициент;
		Иначе
			Коэффициент = 0;
		КонецЕсли;
		
		Если Коэффициент = 0 Тогда
			КолВоПаллетоМест = 0;
			ЕстьНеРассчитанные = Истина;
		Иначе
			КолВоПаллетоМест = Окр(СтрокаТовара.Количество*СтрокаТовара.Коэффициент/Коэффициент,3,РежимОкругления.Окр15как20);	
		КонецЕсли;	
		ИтогоКолВоПаллетоМест = ИтогоКолВоПаллетоМест + КолВоПаллетоМест;
	КонецЦикла; 
	
	РасчетноеКолВоПаллетоМест = СокрЛП(ИтогоКолВоПаллетоМест) + " " + ?(ЕстьНеРассчитанные, "Не везде указана единица паллет", "");
	
	//m.ionov@a-prof.ru 20.02.2015
	ТемпКолВоПаллетоМест = ?((ИтогоКолВоПаллетоМест - Цел(ИтогоКолВоПаллетоМест)) > 0, Цел(ИтогоКолВоПаллетоМест) + 1, Цел(ИтогоКолВоПаллетоМест));//?(ИтогоКолВоПаллетоМест > 0 И Окр(ИтогоКолВоПаллетоМест,0) = 0,1,Окр(ИтогоКолВоПаллетоМест,0));
	//----m.ionov@a-prof.ru---
	
	Если мКоличествоПаллетоМест = ТекДокумент.КП_КоличествоПаллетоМест 
		ИЛИ ТекДокумент.КП_КоличествоПаллетоМест = 0 Тогда
		мКоличествоПаллетоМест = ТемпКолВоПаллетоМест;
	КонецЕсли;
	
	Если МожноИзменить Тогда
		Если мКоличествоПаллетоМест = ТемпКолВоПаллетоМест Тогда
			ТекДокумент.КП_КоличествоПаллетоМест = ТемпКолВоПаллетоМест;
		КонецЕсли;
	КонецЕсли;	 	
		
КонецПроцедуры

Функция ПолучимСтрокиДляДоУкомплектованияЗаказа(мТаблицаТоваров_Первичная, мТаблицаТоваров, СтруктураВозврат, мУсловиеОтбора_ПоВесу, мУсловиеОтбора_ПоОбъему, мУсловиеОтбора_КоличествоПаллетоМест)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КП_ИмпортированныйЗаказТовары.НомерСтроки,
	               |	КП_ИмпортированныйЗаказТовары.ЕдиницаИзмерения,
	               |	КП_ИмпортированныйЗаказТовары.ЕдиницаИзмеренияМест,
	               |	КП_ИмпортированныйЗаказТовары.Количество,
	               |	КП_ИмпортированныйЗаказТовары.КоличествоМест,
	               |	КП_ИмпортированныйЗаказТовары.Коэффициент,
	               |	КП_ИмпортированныйЗаказТовары.Номенклатура,
	               |	КП_ИмпортированныйЗаказТовары.СтавкаНДС,
	               |	КП_ИмпортированныйЗаказТовары.Сумма,
	               |	КП_ИмпортированныйЗаказТовары.СуммаНДС,
	               |	КП_ИмпортированныйЗаказТовары.ХарактеристикаНоменклатуры,
	               |	КП_ИмпортированныйЗаказТовары.Цена,
	               |	КП_ИмпортированныйЗаказТовары.СерияНоменклатуры,
	               |	КП_ИмпортированныйЗаказТовары.ЦенаЗагрузки,
	               |	КП_ИмпортированныйЗаказТовары.ПЦ_ТипЦен,
	               |	КП_ИмпортированныйЗаказТовары.КП_ОСГ,
	               |	КП_ИмпортированныйЗаказТовары.ВесБрутто,
	               |	КП_ИмпортированныйЗаказТовары.Объем,
				   |	КП_ИмпортированныйЗаказТовары.КоличествоПаллетоМест,
				   |	КП_ИмпортированныйЗаказТовары.НачОстаток
	               |ПОМЕСТИТЬ М_ВремТЧ
	               |ИЗ
	               |	&ТаблицаТоваров КАК КП_ИмпортированныйЗаказТовары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	М_ВремТЧ.НомерСтроки,
	               |	М_ВремТЧ.ЕдиницаИзмерения,
	               |	М_ВремТЧ.ЕдиницаИзмеренияМест,
	               |	М_ВремТЧ.Количество,
	               |	М_ВремТЧ.КоличествоМест,
	               |	М_ВремТЧ.Коэффициент,
	               |	М_ВремТЧ.Номенклатура,
	               |	М_ВремТЧ.СтавкаНДС,
	               |	М_ВремТЧ.Сумма,
	               |	М_ВремТЧ.СуммаНДС,
	               |	М_ВремТЧ.ХарактеристикаНоменклатуры,
	               |	М_ВремТЧ.Цена,
	               |	М_ВремТЧ.СерияНоменклатуры,
	               |	М_ВремТЧ.ЦенаЗагрузки,
	               |	М_ВремТЧ.ПЦ_ТипЦен,
	               |	М_ВремТЧ.КП_ОСГ,
	               |	М_ВремТЧ.ВесБрутто,
	               |	М_ВремТЧ.Объем,
				   |	М_ВремТЧ.КоличествоПаллетоМест,
				   |	М_ВремТЧ.НачОстаток,
				   |	М_ВремТЧ.ВесБрутто КАК ВесБруттоНачОстаток,
				   |	М_ВремТЧ.Объем КАК ОбъемНачОстаток,
				   |	М_ВремТЧ.КоличествоПаллетоМест КАК КоличествоПаллетоМестНачОстаток
				   |ИЗ
				   |	М_ВремТЧ КАК М_ВремТЧ
	               |ГДЕ
	               |	М_ВремТЧ.ВесБрутто <= &ВесБрутто
	               |	ИЛИ М_ВремТЧ.Объем <= &Объем
				   |	ИЛИ М_ВремТЧ.КоличествоПаллетоМест <= &КоличествоПаллетоМест";
				
	Запрос.УстановитьПараметр("ТаблицаТоваров"	, мТаблицаТоваров_Первичная);
	Запрос.УстановитьПараметр("ВесБрутто"				, мУсловиеОтбора_ПоВесу);
	Запрос.УстановитьПараметр("Объем"					, мУсловиеОтбора_ПоОбъему);
	Запрос.УстановитьПараметр("КоличествоПаллетоМест" 	, мУсловиеОтбора_КоличествоПаллетоМест);
	
	мРезультат = Запрос.Выполнить().Выгрузить();
	
	текВес = 0;
	текОбъем = 0;
	текКоличествоПаллетоМест = 0;
	//текВес = мУсловиеОтбора_ПоВесу;
	//текОбъем = мУсловиеОтбора_ПоОбъему;
	//текКоличествоПаллетоМест = мУсловиеОтбора_КоличествоПаллетоМест;
	
	Пока НЕ мРезультат.Количество() = 0 Цикл
				
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
		#КонецЕсли
		
		СтрокаДок = мРезультат[0];
		
		#Если Клиент Тогда
			Состояние("Формирование заказов покупателя ...");
		#КонецЕсли
			
		текВес = текВес + СтрокаДок.ВесБрутто; 
		текОбъем = текОбъем + СтрокаДок.Объем;
		текКоличествоПаллетоМест = текКоличествоПаллетоМест + СтрокаДок.КоличествоПаллетоМест;			
		
		ПроверятьПоВесу = ((СтруктураВозврат.МаксВес <= текВес) И (РазбиватьЗаказы = 0));
		ПроверятьПоОбъему = ((СтруктураВозврат.МаксОбъем <= текОбъем) И (РазбиватьЗаказы = 1));
		ПроверятьПоПаллеттам = ((СтруктураВозврат.МаксКоличествоПаллетоМест <= текКоличествоПаллетоМест) И (РазбиватьЗаказы = 2));
		
		Если ПроверятьПоВесу ИЛИ ПроверятьПоОбъему ИЛИ ПроверятьПоПаллеттам Тогда
			
			мРезультат.Удалить(СтрокаДок);
			//Прервать;
		Иначе
			НоваяСтрока = мТаблицаТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДок);
			 
			мРезультат.Удалить(СтрокаДок);
		КонецЕсли;
		
	КонецЦикла;
	
	//Удалим добавленные строки в заказ
	Для каждого Строка Из мТаблицаТоваров Цикл
	
		НайтиСтроки = мТаблицаТоваров_Первичная.НайтиСтроки(Новый Структура("НомерСтроки", Строка.НомерСтроки));
		
		Для каждого мСтрока Из НайтиСтроки Цикл
		
			мТаблицаТоваров_Первичная.Удалить(мСтрока);
		
		КонецЦикла; 
	
	КонецЦикла; 
	
	//Возврат мРезультат;

КонецФункции // ()

Процедура ПолучимСтрокиДляДоУкомплектованияЗаказа_РазбиваемПоКоличеству(мТаблицаТоваров_Первичная, мТаблицаТоваров, СтруктураВозврат, Знач мУсловиеОтбора_ПоВесу, Знач мУсловиеОтбора_ПоОбъему, Знач мУсловиеОтбора_КоличествоПаллетоМест)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КП_ИмпортированныйЗаказТовары.НомерСтроки,
	               |	КП_ИмпортированныйЗаказТовары.ЕдиницаИзмерения,
	               |	КП_ИмпортированныйЗаказТовары.ЕдиницаИзмеренияМест,
	               |	КП_ИмпортированныйЗаказТовары.Количество,
	               |	КП_ИмпортированныйЗаказТовары.КоличествоМест,
	               |	КП_ИмпортированныйЗаказТовары.Коэффициент,
	               |	КП_ИмпортированныйЗаказТовары.Номенклатура,
	               |	КП_ИмпортированныйЗаказТовары.СтавкаНДС,
	               |	КП_ИмпортированныйЗаказТовары.Сумма,
	               |	КП_ИмпортированныйЗаказТовары.СуммаНДС,
	               |	КП_ИмпортированныйЗаказТовары.ХарактеристикаНоменклатуры,
	               |	КП_ИмпортированныйЗаказТовары.Цена,
	               |	КП_ИмпортированныйЗаказТовары.СерияНоменклатуры,
	               |	КП_ИмпортированныйЗаказТовары.ЦенаЗагрузки,
	               |	КП_ИмпортированныйЗаказТовары.ПЦ_ТипЦен,
	               |	КП_ИмпортированныйЗаказТовары.КП_ОСГ,
	               |	КП_ИмпортированныйЗаказТовары.ВесБрутто,
	               |	КП_ИмпортированныйЗаказТовары.Объем,
				   |	КП_ИмпортированныйЗаказТовары.КоличествоПаллетоМест,
				   |	КП_ИмпортированныйЗаказТовары.НачОстаток
	               |ПОМЕСТИТЬ М_ВремТЧ
	               |ИЗ
	               |	&ТаблицаТоваров КАК КП_ИмпортированныйЗаказТовары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	М_ВремТЧ.НомерСтроки,
	               |	М_ВремТЧ.ЕдиницаИзмерения,
	               |	М_ВремТЧ.ЕдиницаИзмеренияМест,
	               |	М_ВремТЧ.Количество,
	               |	М_ВремТЧ.КоличествоМест,
	               |	М_ВремТЧ.Коэффициент,
	               |	М_ВремТЧ.Номенклатура,
	               |	М_ВремТЧ.СтавкаНДС,
	               |	М_ВремТЧ.Сумма,
	               |	М_ВремТЧ.СуммаНДС,
	               |	М_ВремТЧ.ХарактеристикаНоменклатуры,
	               |	М_ВремТЧ.Цена,
	               |	М_ВремТЧ.СерияНоменклатуры,
	               |	М_ВремТЧ.ЦенаЗагрузки,
	               |	М_ВремТЧ.ПЦ_ТипЦен,
	               |	М_ВремТЧ.КП_ОСГ,
	               |	М_ВремТЧ.ВесБрутто,
	               |	М_ВремТЧ.Объем,
				   |	М_ВремТЧ.КоличествоПаллетоМест,
				   |	М_ВремТЧ.НачОстаток,
				   |	М_ВремТЧ.ВесБрутто КАК ВесБруттоНачОстаток,
				   |	М_ВремТЧ.Объем КАК ОбъемНачОстаток,
				   |	М_ВремТЧ.КоличествоПаллетоМест КАК КоличествоПаллетоМестНачОстаток
	               |ИЗ
	               |	М_ВремТЧ КАК М_ВремТЧ
	               |ГДЕ
	               |	М_ВремТЧ.ВесБрутто <= &ВесБрутто
	               |	ИЛИ М_ВремТЧ.Объем <= &Объем
				   |	ИЛИ М_ВремТЧ.КоличествоПаллетоМест <= &КоличествоПаллетоМест";
				
	Запрос.УстановитьПараметр("ТаблицаТоваров"			, мТаблицаТоваров_Первичная);
	Запрос.УстановитьПараметр("ВесБрутто"				, мУсловиеОтбора_ПоВесу);
	Запрос.УстановитьПараметр("Объем"					, мУсловиеОтбора_ПоОбъему);
	Запрос.УстановитьПараметр("КоличествоПаллетоМест" 	, мУсловиеОтбора_КоличествоПаллетоМест);
	
	мРезультат = Запрос.Выполнить().Выгрузить();
	
	текВес = 0;
	текОбъем = 0;
	текКоличествоПаллетоМест = 0;
	
	мКоэф_Вес = 0; 
	мКоэф_Объем = 0;
	мКоэф_КоличествоПаллетоМест = 0;
	
	мИсп_КолВо = 0;
	
	Пока НЕ мРезультат.Количество() = 0 Цикл
				
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
		#КонецЕсли
		
		СтрокаДок = мРезультат[0];
		
		#Если Клиент Тогда
			Состояние("Формирование заказов покупателя ...");
		#КонецЕсли
		
		м_Вес_1шт 					= СтрокаДок.ВесБруттоНачОстаток / СтрокаДок.НачОстаток;
		м_Объем_1шт 				= СтрокаДок.ОбъемНачОстаток / СтрокаДок.НачОстаток;
		м_КоличествоПаллетоМест_1шт = СтрокаДок.КоличествоПаллетоМестНачОстаток / СтрокаДок.НачОстаток;
		
		СтруктураВесов = АП_ОбщегоНазначенияКлиент.ПолучитьВесаДляСтроки("Количество", СтрокаДок);
		
		текВес = текВес + СтруктураВесов.ВесБрутто / 1000; 
		текОбъем = текОбъем + СтруктураВесов.Объем / 1000;
		текКоличествоПаллетоМест = текКоличествоПаллетоМест + СтрокаДок.Количество * СтрокаДок.ЕдиницаИзмерения.Коэффициент / ?(СтрокаДок.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0, 1, СтрокаДок.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент);	
		
		мИсп_КолВо = СтрокаДок.Количество;
			
		ПроверятьПоВесу = ((мУсловиеОтбора_ПоВесу <= текВес) И (РазбиватьЗаказы = 0));
		ПроверятьПоОбъему = ((мУсловиеОтбора_ПоОбъему <= текОбъем) И (РазбиватьЗаказы = 1));
		ПроверятьПоПаллеттам = ((мУсловиеОтбора_КоличествоПаллетоМест <= текКоличествоПаллетоМест) И (РазбиватьЗаказы = 2));
		
		Если ПроверятьПоВесу ИЛИ ПроверятьПоОбъему ИЛИ ПроверятьПоПаллеттам Тогда
			
			Если ПроверятьПоВесу Тогда					
				м_ОтклонениеВес = текВес - мУсловиеОтбора_ПоВесу; //Получим вес недогруза
				м_Количество = м_ОтклонениеВес / м_Вес_1шт;
			КонецЕсли; 
			
			Если ПроверятьПоОбъему Тогда					
				м_ОтклонениеОбъем =  текОбъем - мУсловиеОтбора_ПоОбъему; //Получим объем недогруза
				м_Количество = м_ОтклонениеОбъем / м_Объем_1шт;
			КонецЕсли;
			
			Если ПроверятьПоПаллеттам Тогда					
				м_ОтклонениеКоличествуПаллет = текКоличествоПаллетоМест - мУсловиеОтбора_КоличествоПаллетоМест; //Получим вес недогруза
				м_Количество = м_ОтклонениеКоличествуПаллет / м_КоличествоПаллетоМест_1шт;
			КонецЕсли;
			
			КоэффициентУпаковки = ?(СтрокаДок.ЕдиницаИзмеренияМест.Коэффициент = 0, 1, СтрокаДок.ЕдиницаИзмеренияМест.Коэффициент);
			
			м_Количество = Цел((мИсп_КолВо - м_Количество) * СтрокаДок.ЕдиницаИзмерения.Коэффициент / КоэффициентУпаковки);
			
			м_Количество = м_Количество * ?(СтрокаДок.ЕдиницаИзмеренияМест = СтрокаДок.ЕдиницаИзмерения, 1, КоэффициентУпаковки);
			
			НоваяСтрока = мТаблицаТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДок);
			НоваяСтрока.Количество = м_Количество;
			НоваяСтрока.НачОстаток = 0;
			ПересчитаемДанныеПоСтроке(НоваяСтрока);
			
			текВес = текВес - мУсловиеОтбора_ПоВесу;
			текОбъем = текОбъем - мУсловиеОтбора_ПоОбъему;
			текКоличествоПаллетоМест = текКоличествоПаллетоМест - мУсловиеОтбора_КоличествоПаллетоМест;
	
			СтрокаДок.Количество = СтрокаДок.Количество - м_Количество;
			ПересчитаемДанныеПоСтроке(СтрокаДок);
						
			Если СтрокаДок.Количество = 0 Тогда			
				мРезультат.Удалить(СтрокаДок);
			КонецЕсли;
			
			Прервать;
			
		Иначе
			НоваяСтрока = мТаблицаТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДок);
			//НоваяСтрока.НачОстаток = 0;			
			мРезультат.Удалить(СтрокаДок);			 
		КонецЕсли;
		
	КонецЦикла;
	
	//Удалим добавленные строки в заказ
	Для каждого Строка Из мТаблицаТоваров Цикл
		
		НайтиСтроки = мТаблицаТоваров_Первичная.НайтиСтроки(Новый Структура("НомерСтроки", Строка.НомерСтроки));
		
		Для каждого мСтрока Из НайтиСтроки Цикл
			
			Если НЕ Строка.НачОстаток = 0 Тогда
			     мТаблицаТоваров_Первичная.Удалить(мСтрока);
			Иначе	
			     мСтрока.Количество = Строка.Количество;
			КонецЕсли; 
					
		КонецЦикла; 
	
	КонецЦикла; 
	
	//Возврат мРезультат;

КонецПроцедуры // ()

Процедура ПолучимСтрокиДляДоУкомплектованияЗаказа_РазбиваемПоКоличеству_СохраняемПорядок(мТаблицаТоваров_Первичная, СтрокаДок, мТаблицаТоваров, СтруктураВозврат, Знач мУсловиеОтбора_ПоВесу, Знач мУсловиеОтбора_ПоОбъему, Знач мУсловиеОтбора_КоличествоПаллетоМест)
	
	текВес = 0;
	текОбъем = 0;
	текКоличествоПаллетоМест = 0;
	
	мКоэф_Вес = 0; 
	мКоэф_Объем = 0;
	мКоэф_КоличествоПаллетоМест = 0;
	
	мИсп_КолВо = 0;
	
	м_Вес_1шт 					= СтрокаДок.ВесБруттоНачОстаток / СтрокаДок.НачОстаток;
	м_Объем_1шт 				= СтрокаДок.ОбъемНачОстаток / СтрокаДок.НачОстаток;
	м_КоличествоПаллетоМест_1шт = СтрокаДок.КоличествоПаллетоМестНачОстаток / СтрокаДок.НачОстаток;
	
	СтруктураВесов = АП_ОбщегоНазначенияКлиент.ПолучитьВесаДляСтроки("Количество", СтрокаДок);
	
	текВес = текВес + СтруктураВесов.ВесБрутто / 1000; 
	текОбъем = текОбъем + СтруктураВесов.Объем / 1000;
	текКоличествоПаллетоМест = текКоличествоПаллетоМест + СтрокаДок.Количество * СтрокаДок.ЕдиницаИзмерения.Коэффициент / ?(СтрокаДок.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0, 1, СтрокаДок.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент);	
	
	мИсп_КолВо = СтрокаДок.Количество;
	
	ПроверятьПоВесу = ((мУсловиеОтбора_ПоВесу <= текВес) И (РазбиватьЗаказы = 0));
	ПроверятьПоОбъему = ((мУсловиеОтбора_ПоОбъему <= текОбъем) И (РазбиватьЗаказы = 1));
	ПроверятьПоПаллеттам = ((мУсловиеОтбора_КоличествоПаллетоМест <= текКоличествоПаллетоМест) И (РазбиватьЗаказы = 2));
	
	Если ПроверятьПоВесу Тогда					
		м_ОтклонениеВес = текВес - мУсловиеОтбора_ПоВесу; //Получим вес недогруза
		м_Количество = м_ОтклонениеВес / м_Вес_1шт;
	КонецЕсли; 
	
	Если ПроверятьПоОбъему Тогда					
		м_ОтклонениеОбъем =  текОбъем - мУсловиеОтбора_ПоОбъему; //Получим объем недогруза
		м_Количество = м_ОтклонениеОбъем / м_Объем_1шт;
	КонецЕсли;
	
	Если ПроверятьПоПаллеттам Тогда					
		м_ОтклонениеКоличествуПаллет = текКоличествоПаллетоМест - мУсловиеОтбора_КоличествоПаллетоМест; //Получим вес недогруза
		м_Количество = м_ОтклонениеКоличествуПаллет / м_КоличествоПаллетоМест_1шт;
	КонецЕсли;
	
	КоэффициентУпаковки = ?(СтрокаДок.ЕдиницаИзмеренияМест.Коэффициент = 0, 1, СтрокаДок.ЕдиницаИзмеренияМест.Коэффициент);
	
	м_Количество = Цел((мИсп_КолВо - м_Количество) * СтрокаДок.ЕдиницаИзмерения.Коэффициент / КоэффициентУпаковки);
	
	м_Количество = м_Количество * ?(СтрокаДок.ЕдиницаИзмеренияМест = СтрокаДок.ЕдиницаИзмерения, 1, КоэффициентУпаковки);
	
	НоваяСтрока = мТаблицаТоваров.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДок);
	НоваяСтрока.Количество = м_Количество;
	ПересчитаемДанныеПоСтроке(НоваяСтрока);
	
	СтрокаДок.Количество = СтрокаДок.Количество - м_Количество;
	ПересчитаемДанныеПоСтроке(СтрокаДок);
	
	Если СтрокаДок.Количество = 0 Тогда			
		
		НайтиСтроки = мТаблицаТоваров_Первичная.НайтиСтроки(Новый Структура("НомерСтроки", СтрокаДок.НомерСтроки));
		
		Для каждого мСтрока Из НайтиСтроки Цикл
			мТаблицаТоваров_Первичная.Удалить(мСтрока);
		КонецЦикла; 

	КонецЕсли;
			
КонецПроцедуры // ()

Процедура ПересчитаемДанныеПоСтроке(ТекСтрока)

	ТекСтрока.Сумма    = ТекСтрока.Количество * ТекСтрока.Цена;
	ТекСтрока.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(ТекСтрока.Сумма, ЦенаСНДС, ЦенаСНДС, УчетНДС.ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС));
	
	СтруктураВесов = АП_ОбщегоНазначенияКлиент.ПолучитьВесаДляСтроки("Количество", ТекСтрока);
	
	ТекСтрока.ВесБрутто = СтруктураВесов.ВесБрутто / 1000; 
	ТекСтрока.Объем 	= СтруктураВесов.Объем / 1000;
	
	ТекСтрока.КоличествоПаллетоМест = ТекСтрока.Количество * ТекСтрока.ЕдиницаИзмерения.Коэффициент / ?(ТекСтрока.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0, 1, ТекСтрока.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент);
	
КонецПроцедуры
 
Функция ВыполнимПроверкуОбъемноВесовыхХарактеристикЗаказа(Документ) Экспорт
	
	МаксВес = Документ.КП_ТипТранспорта.Грузоподъемность;
	МаксОбъем = Документ.КП_ТипТранспорта.Грузовместимость;
	МаксКоличествоПаллетоМест = Документ.КП_ТипТранспорта.КоличествоПаллетоМест;
	
	ТабВеса = Документ.Товары.Выгрузить(,"Номенклатура,Количество,КоличествоМест,ЕдиницаИзмерения,ЕдиницаИзмеренияМест");
	
	СтуктураВесов = АП_ОбщегоНазначенияКлиент.ПолучитьИтоговыйВес(ТабВеса);
	
	Если НЕ ЗначениеЗаполнено(Документ.КП_ТипТранспорта) Тогда
			
		СтруктураВозврат = Новый Структура;
		СтруктураВозврат.Вставить("РазбиватьЗаказ"				, Ложь);
		СтруктураВозврат.Вставить("СтуктураВесов"				, СтуктураВесов);
		СтруктураВозврат.Вставить("МаксВес"						, 0);
		СтруктураВозврат.Вставить("МаксОбъем"					, 0);
		СтруктураВозврат.Вставить("МаксКоличествоПаллетоМест"	, 0);
		
		Возврат СтруктураВозврат; 		
	
	КонецЕсли;
	
	Если МаксВес = 0 И РазбиватьЗаказы = 0 Тогда	
		
		СтруктураВозврат = Новый Структура;
		СтруктураВозврат.Вставить("РазбиватьЗаказ"				, Ложь);
		СтруктураВозврат.Вставить("СтуктураВесов"				, СтуктураВесов);
		СтруктураВозврат.Вставить("МаксВес"						, 0);
		СтруктураВозврат.Вставить("МаксОбъем"					, 0);
		СтруктураВозврат.Вставить("МаксКоличествоПаллетоМест"	, 0);
		
		Возврат СтруктураВозврат;
		
	КонецЕсли;
	
	Если МаксОбъем = 0 И РазбиватьЗаказы = 1 Тогда	
		
		СтруктураВозврат = Новый Структура;
		СтруктураВозврат.Вставить("РазбиватьЗаказ"				, Ложь);
		СтруктураВозврат.Вставить("СтуктураВесов"				, СтуктураВесов);
		СтруктураВозврат.Вставить("МаксВес"						, 0);
		СтруктураВозврат.Вставить("МаксОбъем"					, 0);
		СтруктураВозврат.Вставить("МаксКоличествоПаллетоМест"	, 0);
		
		Возврат СтруктураВозврат;
		
	КонецЕсли;
	
	Если МаксКоличествоПаллетоМест = 0 И РазбиватьЗаказы = 2 Тогда	
		
		СтруктураВозврат = Новый Структура;
		СтруктураВозврат.Вставить("РазбиватьЗаказ"				, Ложь);
		СтруктураВозврат.Вставить("СтуктураВесов"				, СтуктураВесов);
		СтруктураВозврат.Вставить("МаксВес"						, 0);
		СтруктураВозврат.Вставить("МаксОбъем"					, 0);
		СтруктураВозврат.Вставить("МаксКоличествоПаллетоМест"	, 0);
		
		Возврат СтруктураВозврат;
		
	КонецЕсли;
	
	//Посчитаем количество паллето мест
	текКоличествоПаллетоМест = 0;
	Для каждого мСтрока Из Документ.Товары Цикл	
		текКоличествоПаллетоМест = текКоличествоПаллетоМест + мСтрока.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент;					
	КонецЦикла; 
	
	РазбиватьЗаказ = Ложь;
	
	Если СтуктураВесов.ВесБрутто > МаксВес И РазбиватьЗаказы = 0 Тогда
		
		ОбщегоНазначения.СообщитьОбОшибке("По заказу обнаружено превышение максильмано допустимого веса."+Символы.ПС+
		"Макс. грузоподъемность: " + СокрЛП(МаксВес) + ", текущий вес заказа: " + СокрЛП(СтуктураВесов.ВесБрутто) + ", отклонение: " + Формат(МаксВес-СтуктураВесов.ВесБрутто,"ЧЦ=15; ЧДЦ=3"));			
		РазбиватьЗаказ = Истина;
	КонецЕсли; 		
	
	Если СтуктураВесов.Объем > МаксОбъем И РазбиватьЗаказы = 1 Тогда
		
		ОбщегоНазначения.СообщитьОбОшибке("По заказу обнаружено превышение максильмано допустимого объема."+Символы.ПС+
		"Макс. грузовместимость: " + СокрЛП(МаксОбъем) + ", текущий объем заказа: " + СокрЛП(СтуктураВесов.Объем) + ", отклонение: " + Формат(МаксОбъем-СтуктураВесов.Объем,"ЧЦ=15; ЧДЦ=3"));			
		РазбиватьЗаказ = Истина;
	КонецЕсли;
	
	Если текКоличествоПаллетоМест > МаксКоличествоПаллетоМест И РазбиватьЗаказы = 2 Тогда
		
		ОбщегоНазначения.СообщитьОбОшибке("По заказу обнаружено превышение максильмано допустимого количества паллето мест."+Символы.ПС+
		"Макс. количество паллет: " + СокрЛП(МаксКоличествоПаллетоМест) + ", текущий кол-во паллето мест: " + СокрЛП(текКоличествоПаллетоМест) + ", отклонение: " + Формат(МаксКоличествоПаллетоМест - текКоличествоПаллетоМест,"ЧЦ=15; ЧДЦ=0"));			
		РазбиватьЗаказ = Истина;
	КонецЕсли;
	
	СтруктураВозврат = Новый Структура;
	СтруктураВозврат.Вставить("РазбиватьЗаказ"				, РазбиватьЗаказ);
	СтруктураВозврат.Вставить("СтуктураВесов"				, СтуктураВесов);
	СтруктураВозврат.Вставить("МаксВес"						, МаксВес);
	СтруктураВозврат.Вставить("МаксОбъем"					, МаксОбъем);
	СтруктураВозврат.Вставить("МаксКоличествоПаллетоМест"	, МаксКоличествоПаллетоМест);
	
	Возврат СтруктураВозврат; 

КонецФункции

ЦенаСНДС = Ложь;