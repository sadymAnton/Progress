
Перем МассивПустыхПолучателей;
Перем ИсточникМакета;
Перем ТаблицаФорм;
Перем мОбъектПечати;
Перем МассивНакладныхРаспечатанных;
Перем ТаблицаНакладныхИПечатныхФормРаспечатанных;

Перем ПРГ_ВсеравноПредварПросмотр Экспорт;

//начало изменений б/н пакетная печать на определенный принтер
Перем ПРГ_ИмяПринтера Экспорт;
//конец изменений 

Функция Печать() Экспорт
	
	Если СформированныеДокументы.Количество() = 0  Тогда
		Сообщить("Нет документа для печати!!!");
		Возврат Неопределено;
	КонецЕсли;
	
	ПодготовимТаблицуДокументов();
	
	мРейс = Неопределено;
	
	мТаблицаДляОбхода = СформированныеДокументы.Выгрузить();
	
	мТаблицаДляОбхода.Свернуть("Рейс, ЗаданиеНаПодбор");
	
	МассивНакладныхРаспечатанных = Новый Массив;
	
	ТаблицаНакладныхИПечатныхФормРаспечатанных = СформированныеДокументы.Выгрузить();
	ТаблицаНакладныхИПечатныхФормРаспечатанных.Очистить();
	ТаблицаНакладныхИПечатныхФормРаспечатанных.Колонки.Добавить("ПечатнаяФорма");
	
	Для каждого мСтрока Из мТаблицаДляОбхода Цикл
		
		НайдемСтроки = СформированныеДокументы.НайтиСтроки(Новый Структура("Рейс, ЗаданиеНаПодбор", мСтрока.Рейс, мСтрока.ЗаданиеНаПодбор));
		
		СписокПолучателей = Новый Массив;
		
		Для каждого мСтрокиДокументов Из НайдемСтроки Цикл
			
			//++ Печать плана доставки, по своим правилам, будет тут т.к. нужен документ план
			Если НЕ мРейс = мСтрокиДокументов.Рейс И ТипЗнч(мСтрокиДокументов.Накладная) = Тип("ДокументСсылка.ПТЛ_ПланДоставки") Тогда		
				ПолучимПорядокПечатныхФорм_ПоНакладной(мСтрока.Рейс, мСтрокиДокументов.Накладная, мСтрока.ЗаданиеНаПодбор.КомплектТСД, СписокПолучателей, Истина);
				мРейс = мСтрокиДокументов.Рейс;
				Прервать;
			КонецЕсли;
		
		КонецЦикла; 
		
		ПолучимПорядокПечатныхФорм_ПоНакладной(мСтрока.Рейс, мСтрока.ЗаданиеНаПодбор, мСтрока.ЗаданиеНаПодбор.КомплектТСД, мСтрока.ЗаданиеНаПодбор.Получатель);
						
	КонецЦикла; 	
	
	Возврат СформированныеДокументы.Выгрузить(Новый Структура("ОшибкаПечати", Истина));
	
КонецФункции

Процедура ПодготовимТаблицуДокументов()

  	Для каждого мСтрока Из СформированныеДокументы Цикл	
		Если ТипЗнч(мСтрока.Накладная) = Тип("ДокументСсылка.ПТЛ_ПланДоставки") Тогда		
			мСтрока.Порядок = 0;
		Иначе
			мСтрока.Пометка = 1;
		КонецЕсли; 	
		
		мСтрока.ВидДокумента = мСтрока.Накладная.Метаданные().Имя;
		
	КонецЦикла; 
	
	СформированныеДокументы.Сортировать("Рейс, ЗаданиеНаПодбор, Порядок");

КонецПроцедуры

Процедура ПолучимПорядокПечатныхФорм_ПоНакладной(мРейс, мНакладная, мТСД, СписокПолучателей, ЭтоПланДоставки = Ложь)
	
	ФильтрТСД = Новый Массив;
	ФильтрТСД.Добавить(мТСД);
	
	Если ЭтоПланДоставки Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ПТЛ_ПланДоставкиЗаданияНаПеревозку.ЗаданиеНаПеревозку.ЗаданиеНаПодбор.Получатель КАК Получатель,
		               |	ПТЛ_ПланДоставкиЗаданияНаПеревозку.ЗаданиеНаПеревозку.ЗаданиеНаПодбор.КомплектТСД КАК ТСД
		               |ИЗ
		               |	Документ.ПТЛ_ПланДоставки.ЗаданияНаПеревозку КАК ПТЛ_ПланДоставкиЗаданияНаПеревозку
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПТЛ_ПланДоставки.Маршруты КАК ПТЛ_ПланДоставкиМаршруты
		               |		ПО ПТЛ_ПланДоставкиЗаданияНаПеревозку.Ссылка = ПТЛ_ПланДоставкиМаршруты.Ссылка
		               |			И ПТЛ_ПланДоставкиЗаданияНаПеревозку.КлючСтроки = ПТЛ_ПланДоставкиМаршруты.КлючСтроки
		               |ГДЕ
		               |	ПТЛ_ПланДоставкиМаршруты.Рейс = &Рейс И ПТЛ_ПланДоставкиЗаданияНаПеревозку.Исключено = Ложь";
		               //|	ПТЛ_ПланДоставкиЗаданияНаПеревозку.Ссылка = &Ссылка
		               //|	И ПТЛ_ПланДоставкиМаршруты.Рейс = &Рейс";
		//Запрос.УстановитьПараметр("Ссылка", мНакладная);
		Запрос.УстановитьПараметр("Рейс", мРейс);
			
		Результат = Запрос.Выполнить().Выгрузить();
		
		СписокПолучателей = Результат.ВыгрузитьКолонку("Получатель");
		ФильтрТСД = Результат.ВыгрузитьКолонку("ТСД"); 		
				
	КонецЕсли; 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               //|	АП_ПечатныеФормы.Объект,
	               |	АП_ПечатныеФормы.ПечатнаяФорма,
	               //|	АП_ПечатныеФормы.ТСД,
	               |	МАКСИМУМ(АП_ПечатныеФормы.КоличествоЭкземпляров) КАК КоличествоЭкземпляров,
	               |	МАКСИМУМ(АП_ПечатныеФормы.СразуНаПринтер) КАК СразуНаПринтер,
	               |	МИНИМУМ(АП_ПечатныеФормы.Порядок) КАК Порядок
	               |ИЗ
	               |	РегистрСведений.АП_ПечатныеФормы КАК АП_ПечатныеФормы
	               |ГДЕ
	               |	АП_ПечатныеФормы.Объект В(&СписокПолучателей)
	               |	И АП_ПечатныеФормы.ТСД В (&ТСД)
	               |
	               |СГРУППИРОВАТЬ ПО
	               //|	АП_ПечатныеФормы.ТСД,
	               |	АП_ПечатныеФормы.ПечатнаяФорма
	               //|	АП_ПечатныеФормы.СразуНаПринтер,
	               //|	АП_ПечатныеФормы.Объект
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Порядок";
				   
	Запрос.УстановитьПараметр("СписокПолучателей", СписокПолучателей);
	Запрос.УстановитьПараметр("ТСД", ФильтрТСД);
	СписокПечатныхФормРегистр = Запрос.Выполнить().Выгрузить();
	
	//++ Spl_Апроф 10.02.2015 (k.russkih@a-prof.ru) Не нашли по получателю + ТСД, ищем по пустым получателям + ТСД
	Если СписокПечатныхФормРегистр.Количество() = 0 Тогда
		
		//m.ionov@a-prof.ru 26.02.2015
		МассивПустыхПолучателей = Новый Массив;
		Если ТипЗнч(СписокПолучателей) = Тип("СправочникСсылка.Контрагенты") Тогда
			МассивПустыхПолучателей.Добавить(Справочники.Контрагенты.ПустаяСсылка());
		ИначеЕсли ТипЗнч(СписокПолучателей) = Тип("СправочникСсылка.Склады") Тогда
			МассивПустыхПолучателей.Добавить(Справочники.Склады.ПустаяСсылка());
		Иначе
			МассивПустыхПолучателей.Добавить(Справочники.Контрагенты.ПустаяСсылка());
			МассивПустыхПолучателей.Добавить(Справочники.Склады.ПустаяСсылка());
		КонецЕсли;
		//----m.ionov@a-prof.ru--- 
	
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	АП_ПечатныеФормы.ПечатнаяФорма,
		               |	МАКСИМУМ(АП_ПечатныеФормы.КоличествоЭкземпляров) КАК КоличествоЭкземпляров,
		               |	МАКСИМУМ(АП_ПечатныеФормы.СразуНаПринтер) КАК СразуНаПринтер,
		               |	МИНИМУМ(АП_ПечатныеФормы.Порядок) КАК Порядок
		               |ИЗ
		               |	РегистрСведений.АП_ПечатныеФормы КАК АП_ПечатныеФормы
		               |ГДЕ
		               |	АП_ПечатныеФормы.Объект В(&Объект)
		               |	И АП_ПечатныеФормы.ТСД В(&ТСД)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	АП_ПечатныеФормы.ПечатнаяФорма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Порядок";
		Запрос.УстановитьПараметр("Объект", МассивПустыхПолучателей);
		Запрос.УстановитьПараметр("ТСД", ФильтрТСД);
	    СписокПечатныхФормРегистр = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	// не нашли по пустой получателю + ТСД, ищем просто по пустому получателю
	Если СписокПечатныхФормРегистр.Количество() = 0 Тогда
	
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               //|	АП_ПечатныеФормы.Объект,
		               |	АП_ПечатныеФормы.ПечатнаяФорма,
		               //|	АП_ПечатныеФормы.ТСД,
		               |	МАКСИМУМ(АП_ПечатныеФормы.КоличествоЭкземпляров) КАК КоличествоЭкземпляров,
		               |	МАКСИМУМ(АП_ПечатныеФормы.СразуНаПринтер) КАК СразуНаПринтер,
		               |	МИНИМУМ(АП_ПечатныеФормы.Порядок) КАК Порядок
		               |ИЗ
		               |	РегистрСведений.АП_ПечатныеФормы КАК АП_ПечатныеФормы
		               |ГДЕ
		               |	АП_ПечатныеФормы.Объект В (&Объект)
		               |
		               |СГРУППИРОВАТЬ ПО
		               //|	АП_ПечатныеФормы.ТСД,
		               |	АП_ПечатныеФормы.ПечатнаяФорма
		               //|	АП_ПечатныеФормы.СразуНаПринтер,
		               //|	АП_ПечатныеФормы.Объект
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Порядок";
		Запрос.УстановитьПараметр("Объект", МассивПустыхПолучателей);
	    СписокПечатныхФормРегистр = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли; 	
		
	Если ЭтоПланДоставки Тогда
		
		мСписокПечатныхФормРегистр = СписокПечатныхФормРегистр.Скопировать();
		мСписокПечатныхФормРегистр.Свернуть("ПечатнаяФорма,СразуНаПринтер,КоличествоЭкземпляров,Порядок");
		
		ПечатьДокументов(мНакладная, мСписокПечатныхФормРегистр, ТаблицаФорм, мРейс, ФильтрТСД);
		
		//Для каждого мСтрока Из СписокПечатныхФормРегистр Цикл
		//
		//	НоваяСтрока = ТаблицаНакладныхИПечатныхФормРаспечатанных.Добавить();
		//	НоваяСтрока.Накладная = мНакладная;
		//	НоваяСтрока.ПечатнаяФорма = мСтрока.ПечатнаяФорма;
		//	
		//КонецЦикла; 
					
	Иначе
		
		мСписокПечатныхФормРегистр = СписокПечатныхФормРегистр.Скопировать();
		мСписокПечатныхФормРегистр.Очистить();
		
		БылаПечать = Ложь;
		Для каждого мСтрока Из СписокПечатныхФормРегистр Цикл
			
			НайтиСтроки_Документы = СформированныеДокументы.НайтиСтроки(Новый Структура("Рейс, ЗаданиеНаПодбор, ВидДокумента", мРейс, мНакладная, мСтрока.ПечатнаяФорма.ВидДокумента));
						
			Для каждого мСтрокаДокумент Из НайтиСтроки_Документы Цикл
				
				НоваяСтрока = мСписокПечатныхФормРегистр.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, мСтрока); 
				
				НайтиСтроки = ТаблицаНакладныхИПечатныхФормРаспечатанных.НайтиСтроки(Новый Структура("Накладная, ПечатнаяФорма", мСтрокаДокумент.Накладная, мСтрока.ПечатнаяФорма)); //мНакладная
				
				Если НЕ НайтиСтроки.Количество() = 0 Тогда
					Продолжить;				
				КонецЕсли;	
				
				//НоваяСтрока = ТаблицаНакладныхИПечатныхФормРаспечатанных.Добавить();
				//ЗаполнитьЗначенияСвойств(НоваяСтрока, мСтрока);
				//НоваяСтрока.ПечатнаяФорма = мСтрока.ПечатнаяФорма;
				
				//ЗаданСпособПечати = Истина; СразуНаПринтер = мСтрока.СразуНаПринтер;
				
				ПечатьДокументов(мСтрокаДокумент.Накладная, мСписокПечатныхФормРегистр, ТаблицаФорм, мРейс, ФильтрТСД);
				
				мСписокПечатныхФормРегистр.Очистить();
				
				БылаПечать = Истина;
				
			КонецЦикла; 
				
		КонецЦикла; 
		
		Если НЕ БылаПечать Тогда
			Сообщить("Не указано ни одной печатной формы для пакетной печати документа по " + СокрЛП(мНакладная), СтатусСообщения.ОченьВажное);
			НайтиСтроки_Документы = СформированныеДокументы.НайтиСтроки(Новый Структура("Рейс, ЗаданиеНаПодбор", мРейс, мНакладная));
			Для каждого мСтрокаДокумент Из НайтиСтроки_Документы Цикл
				мСтрокаДокумент.ОшибкаПечати = Истина;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли; 	
	
КонецПроцедуры

Процедура ПечатьДокументов(Док, СписокПечатныхФормРегистр, ТаблицаФорм, мРейс = Неопределено, ФильтрТСД = Неопределено)
	
	Объект = Док.ПолучитьОбъект();
	МетаданныеОбъекта = Объект.Метаданные();
	Заголовок = ОбщегоНазначения.СформироватьЗаголовокДокумента(Док);
	
	МассивНакладныхРаспечатанных.Добавить(Док);
	

	
	Счетчик = 0;

	ТаблицаФорм.Очистить();
	
	ЕстьПечатнаяФорма = Ложь;
	
	мНомерСтроки = 0;  мПредварительныйПросмотр = Ложь;
	
	Для Каждого СтрокаПечФорм Из СписокПечатныхФормРегистр Цикл
		
		// Проверяем ПФ на фильтр, если таблица с фильтром пустая, считаем, что необходимо печатать все ПФ
		СпрПечФорма = СтрокаПечФорм.ПечатнаяФорма;
		Если ЭтотОбъект.ПечатныеФормыФильтр.Количество() > 0 Тогда
			НайденнаяСтрока = ЭтотОбъект.ПечатныеФормыФильтр.Найти(СпрПечФорма.Ссылка, "ПечатнаяФорма");
			Если НайденнаяСтрока = Неопределено Тогда
				//Если ЗначениеЗаполнено(СпрПечФорма.Ссылка) Тогда
				//	 ЕстьПечатнаяФорма = Истина;
				//КонецЕсли;
				Счетчик = Счетчик + 1;
				Продолжить;
			Иначе
				мПредварительныйПросмотр = НайденнаяСтрока.ПредварительныйПросмотр;
			КонецЕсли;
		КонецЕсли;
		
		Если мПредварительныйПросмотр = Неопределено Тогда
			мПредварительныйПросмотр = Ложь;
		КонецЕсли;
		
		//начало изменений 
		мПредварительныйПросмотр = ?(ПРГ_ВсеравноПредварПросмотр <> Неопределено и ПРГ_ВсеравноПредварПросмотр,Истина,мПредварительныйПросмотр);
		//конец изменений
				
		ТемпСразуНаПринтер = ?(мПредварительныйПросмотр, Ложь, СтрокаПечФорм.СразуНаПринтер);
		//ТемпСразуНаПринтер = СтрокаПечФорм.СразуНаПринтер;
		
		//начало изменений б/н пакетная печать на определенный принтер 
		ПРГ_НаПринтер = Неопределено;
		Если ПРГ_ИмяПринтера <> "" Тогда
			ПРГ_НаПринтер = Новый Структура("ИмяПринтера,НаПринтер",ПРГ_ИмяПринтера,ТемпСразуНаПринтер);
		КонецЕслИ;	
		//конец изменений 		
						
		Если ПустаяСтрока(СпрПечФорма.ПечатнаяФорма) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СпрПечФорма.ВидДокумента <> МетаданныеОбъекта.Имя Тогда
			Продолжить;
		КонецЕсли;
		
		мНомерСтроки = мНомерСтроки + 1;
		
		Если СпрПечФорма.ВнешняяФорма Тогда
			
			ИсточникМакета.Вставить("СсылкаНаВнешнююОбработку", Справочники.ВнешниеОбработки.НайтиПоНаименованию(СпрПечФорма.ПечатнаяФорма));
			
			СтруктураДопПараметров = Новый Структура;
			СтруктураДопПараметров.Вставить("АП_ПечатныеФормыДокументов", СпрПечФорма);
			СтруктураДопПараметров.Вставить("Рейс", мРейс);
			СтруктураДопПараметров.Вставить("ФильтрТСД", ФильтрТСД);
			//начало изменений б/н пакетная печать на определенный принтер 
			Если ПРГ_НаПринтер <> Неопределено Тогда
				СтруктураДопПараметров.Вставить("ИмяПринтера", ПРГ_НаПринтер.ИмяПринтера);
			КонецЕсли;	
			//конец изменений 
			//начало изменений б/н вставим определение сразу на принтер для внешних обработок 19.10.2016
			//чтобы иметь возможность управления просмотра или печати файлов pdf,doc,jpg,tiff
			   СтруктураДопПараметров.Вставить("ПРГ_СразуНаПринтер", ТемпСразуНаПринтер);                        
			//конец изменений 
			
			ИсточникМакета.Вставить("ДополнительныеПараметрыОбработки", СтруктураДопПараметров);
			
			ТабДок = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Док, ИсточникМакета);
			НовСтрока = ТаблицаФорм.Добавить();
			НовСтрока.НомерСтроки = ТаблицаФорм.Индекс(НовСтрока);
			НовСтрока.НомерФормы = мНомерСтроки;
			НовСтрока.Объект = Док;
			НовСтрока.ИсходныйОбъект = Док;
			
			НовСтрока.Внешняя = Истина;
			НовСтрока.Форма = ТабДок;
			
			НовСтрока.КоличествоЭкземпляров = СтрокаПечФорм.КоличествоЭкземпляров;
			НовСтрока.СразуНаПринтер = ТемпСразуНаПринтер;
			НовСтрока.ПорядокВывода = СтрокаПечФорм.Порядок;
			
		Иначе
			ИмяМакета = СпрПечФорма.ПечатнаяФорма;
			НовСтрока = ТаблицаФорм.Добавить();
			НовСтрока.НомерСтроки = ТаблицаФорм.Индекс(НовСтрока);
			НовСтрока.НомерФормы = мНомерСтроки;
			НовСтрока.Объект = Док;
			НовСтрока.ИсходныйОбъект = Док;
			
			НовСтрока.Внешняя = Ложь;
			НовСтрока.Форма = ИмяМакета;
			
			НовСтрока.КоличествоЭкземпляров = СтрокаПечФорм.КоличествоЭкземпляров;
			НовСтрока.СразуНаПринтер = ТемпСразуНаПринтер;
			НовСтрока.ПорядокВывода = СтрокаПечФорм.Порядок;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаНакладныхИПечатныхФормРаспечатанных.Добавить();
		НоваяСтрока.Накладная = Док;
		НоваяСтрока.ПечатнаяФорма = СпрПечФорма.Ссылка;//мСтрока.ПечатнаяФорма;
		НоваяСтрока.Рейс = мРейс;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	//ТекстОшибки = "Для """ + ?(ЗначениеЗаполнено(мОбъектПечати), мОбъектПечати, "пустого значения " + СокрЛП(мОбъектПечати.Метаданные().Имя)) + """";
	
	ТекстОшибки = "";
	
	Если Счетчик = 0 Тогда//И НЕ ЕстьПечатнаяФорма Тогда
		
		Если ТипЗнч(Док) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			ИЛИ ТипЗнч(Док) = Тип("ДокументСсылка.ТребованиеНакладная")
			ИЛИ ТипЗнч(Док) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			//Нам главное определить для каких накладных не распечаталось
			Сообщить(ТекстОшибки +" не указано ни одной печатной формы для пакетной печати документа " + СокрЛП(Док), СтатусСообщения.Важное);//"""+МетаданныеОбъекта.Представление()+"""!", СтатусСообщения.Важное);
		КонецЕсли;
		
	Иначе
		ТаблицаФорм.Сортировать("ПорядокВывода");
		
		Для Каждого ТекФорма Из ТаблицаФорм Цикл
			Если ТекФорма.Внешняя Тогда
				//начало изменений б/н пакетная печать на определенный принтер 
				//УниверсальныеМеханизмы.НапечататьДокумент(ТекФорма.Форма, ТекФорма.КоличествоЭкземпляров, ТекФорма.СразуНаПринтер, Заголовок);
				УниверсальныеМеханизмы.НапечататьДокумент(ТекФорма.Форма, ТекФорма.КоличествоЭкземпляров, ?(ПРГ_НаПринтер<> Неопределено,ПРГ_НаПринтер,ТекФорма.СразуНаПринтер), Заголовок);
				//конец изменений 
			Иначе
				ДокументОбъект = ТекФорма.Объект.ПолучитьОбъект();
				//начало изменений б/н пакетная печать на определенный принтер 
				//ДокументОбъект.Печать(ТекФорма.Форма, ТекФорма.КоличествоЭкземпляров, ТекФорма.СразуНаПринтер);
				ДокументОбъект.Печать(ТекФорма.Форма, ТекФорма.КоличествоЭкземпляров, ?(ПРГ_НаПринтер<>Неопределено,ПРГ_НаПринтер,ТекФорма.СразуНаПринтер));
				//конец изменений 
			конецЕсли; 
						
		КонецЦикла;
	КонецЕсли;
	
	//Возврат Неопределено;	

КонецПроцедуры
    
//МассивПустыхПолучателей = Новый Массив;
//МассивПустыхПолучателей.Добавить(Справочники.Контрагенты.ПустаяСсылка());
//МассивПустыхПолучателей.Добавить(Справочники.Склады.ПустаяСсылка());

ИсточникМакета=Новый Структура;
ИсточникМакета.Вставить("ВидПечатнойФормы",Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма);
ИсточникМакета.Вставить("ЗаменяемаяПечатнаяФорма",Неопределено);
ИсточникМакета.Вставить("НомерСтроки",1);

//начало изменений б/н пакетная печать на определенный принтер 
ПРГ_ИмяПринтера = "";
//конец изменений 

//Буферная таблица, для упорядочивания форм
ТаблицаФорм = Новый ТаблицаЗначений;
ТаблицаФорм.Колонки.Добавить("НомерСтроки");
ТаблицаФорм.Колонки.Добавить("НомерФормы");
ТаблицаФорм.Колонки.Добавить("ИсходныйОбъект");		//Вышестоящий в иерархии объект
ТаблицаФорм.Колонки.Добавить("Объект");				//Ссылка на документ
ТаблицаФорм.Колонки.Добавить("КоличествоЭкземпляров");
ТаблицаФорм.Колонки.Добавить("СразуНаПринтер");
ТаблицаФорм.Колонки.Добавить("Форма");
ТаблицаФорм.Колонки.Добавить("Внешняя");
ТаблицаФорм.Колонки.Добавить("ПорядокВывода");	//Сначала накладные, потом остальное
