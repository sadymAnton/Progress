Перем мСоответствиеНазначений Экспорт;

Перем мСтруктураДляОтбораПоКатегориям;

#Если ТолстыйКлиентОбычноеПриложение Тогда

	
Процедура ЗаполнитьНачальныеНастройки(НачальноеЗаполнение = Истина) Экспорт
	
	// структура представлений полей
	СтруктураПредставлениеПолей = Новый Структура();
	СтруктураФорматаПолей = Новый Структура();
	
	// Для использования свойств и категорий в текст запроса добавляются дополнительные поля

	ТаблицаПолей = Новый ТаблицаЗначений;
	ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
	ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
	ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
	ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
	ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
	
	мСоответствиеНазначений = Новый Соответствие;
			
	// здесь добавим свойства сотрудника
	НоваяСтрока = ТаблицаПолей.Добавить();
	НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
	НоваяСтрока.Представление = "физического лица";
	
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда
		
		Если ВыбиратьСотрудника Тогда
			
			// теперь добавим свойства физлица
			НоваяСтрока = ТаблицаПолей.Добавить();
			НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_СотрудникиОрганизаций;
			НоваяСтрока.Представление = "работника";
			
			ТекстЗапроса = "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
			|	РаботникиОрганизации.Сотрудник.Наименование КАК ФИО,
			|	РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
			|";
			
			Если ОпределятьДатыПриемаУвольнения Тогда
				
				ТекстЗапроса = ТекстЗапроса + "
				|	РаботникиОрганизации.Сотрудник.ДатаПриемаНаРаботу КАК ДатаПриема,
				|	РаботникиОрганизации.Сотрудник.ДатаУвольнения КАК ДатаУвольнения,
				|";
				
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "
			|	ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|			ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения
			|		ИНАЧЕ РаботникиОрганизации.ГрафикРаботы
			|	КОНЕЦ КАК ГрафикРаботы,
			|	ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|			ТОГДА РаботникиОрганизации.ЗанимаемыхСтавокЗавершения
			|		ИНАЧЕ РаботникиОрганизации.ЗанимаемыхСтавок
			|	КОНЕЦ КАК ЗанимаемыхСтавок,
			|	ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|			ТОГДА РаботникиОрганизации.ДолжностьЗавершения
			|		ИНАЧЕ РаботникиОрганизации.Должность
			|	КОНЕЦ КАК Должность,
			|	ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|			ТОГДА РаботникиОрганизации.ПодразделениеОрганизацииЗавершения
			|		ИНАЧЕ РаботникиОрганизации.ПодразделениеОрганизации
			|	КОНЕЦ КАК Подразделение
			|ПОМЕСТИТЬ ВТСписокРаботников
			|{ВЫБРАТЬ
			|	Сотрудник,
			|	ФИО,
			|	Физлицо,
			|";
			
			Если ОпределятьДатыПриемаУвольнения Тогда
				
				ТекстЗапроса = ТекстЗапроса + "
				|	ДатаПриема,
				|	ДатаУвольнения,
				|";
				
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "
			|	ГрафикРаботы,
			|	ЗанимаемыхСтавок,
			|	Должность,
			|	Подразделение
			|}
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизации
			|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
			|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
			|//УСЛОВИЕ
			|{ГДЕ
			|	РаботникиОрганизации.Сотрудник КАК Работник,
			|	РаботникиОрганизации.Сотрудник.Родитель КАК Группа,
			|	(ВЫБОР
			|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ТОГДА РаботникиОрганизации.ДолжностьЗавершения
			|			ИНАЧЕ РаботникиОрганизации.Должность
			|		КОНЕЦ).* КАК Должность,
			|	(ВЫБОР
			|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения
			|			ИНАЧЕ РаботникиОрганизации.ГрафикРаботы
			|		КОНЕЦ).* КАК ГрафикРаботы,
			|	РаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
			|	(ВЫБОР
			|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ТОГДА РаботникиОрганизации.ЗанимаемыхСтавокЗавершения
			|			ИНАЧЕ РаботникиОрганизации.ЗанимаемыхСтавок
			|		КОНЕЦ) КАК ЗанимаемыхСтавок,
			|	РаботникиОрганизации.Сотрудник.ДатаПриемаНаРаботу КАК ДатаПриема,
			|	РаботникиОрганизации.Сотрудник.ВидЗанятости КАК ВидЗанятости,
			|	РаботникиОрганизации.Сотрудник.ВидДоговора КАК ВидДоговора,
			|	(ВЫБОР
			|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ТОГДА РаботникиОрганизации.ПодразделениеОрганизацииЗавершения
			|			ИНАЧЕ РаботникиОрганизации.ПодразделениеОрганизации
			|		КОНЕЦ).* КАК Подразделение,
			|	(ВЫБОР
			|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ТОГДА РаботникиОрганизации.ОбособленноеПодразделениеЗавершения
			|			ИНАЧЕ РаботникиОрганизации.ОбособленноеПодразделение
			|		КОНЕЦ).* КАК ОбособленноеПодразделение
			|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
			|	//СВОЙСТВА
			|	//КАТЕГОРИИ
			|}
			|
			|";
			
			УправлениеОтчетами.ДобавитьВТекстПостроителяДанныеОФизлице(ТекстЗапроса, СтруктураПредставлениеПолей, СтруктураФорматаПолей, "РаботникиОрганизации", "Сотрудник.Физлицо");
			
			// Добавим строки запроса, необходимые для использования свойств и категорий
			ТаблицаПолей[0].ПутьКДанным = "РаботникиОрганизации.Сотрудник.Физлицо";
			ТаблицаПолей[1].ПутьКДанным = "РаботникиОрганизации.Сотрудник";
			ТекстПоляКатегорий = "";
			ТекстПоляСвойств = "";
			УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, мСоответствиеНазначений, ПостроительОтчета.Параметры,,ТекстПоляКатегорий,ТекстПоляСвойств,,,,"//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ",, мСтруктураДляОтбораПоКатегориям);
			
			Если ВключатьДоговорников Тогда
				
				Если Не ВключатьУволенных Тогда
					
					ТекстЗапроса = ТекстЗапроса + "
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Наименование,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо,
					|";
				
					Если ОпределятьДатыПриемаУвольнения Тогда
						
						ТекстЗапроса = ТекстЗапроса + "
						|	NULL,
						|	NULL,
						|";
						
					КонецЕсли;
					
					ТекстЗапроса = ТекстЗапроса + "
					|	NULL,
					|	NULL,
					|	NULL,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации
					|ИЗ
					|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
					|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
					|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
					|ГДЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала >= НАЧАЛОПЕРИОДА(&ДатаАктуальности, МЕСЯЦ)
					|	И ДоговорНаВыполнениеРаботСФизЛицом.ДатаОкончания <= КОНЕЦПЕРИОДА(&ДатаАктуальности, МЕСЯЦ)
					|	И ДоговорНаВыполнениеРаботСФизЛицом.Проведен
					|{ГДЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник КАК Работник,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Родитель КАК Группа,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Код КАК ТабельныйНомер,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.ВидЗанятости КАК ВидЗанятости,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.ВидДоговора КАК ВидДоговора,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации.* КАК Подразделение,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Организация.* КАК ОбособленноеПодразделение,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала КАК ДатаПриема
					|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
					|	//СВОЙСТВА
					|	//КАТЕГОРИИ
					|}";
					
				Иначе
					
					ТекстЗапроса = ТекстЗапроса + "
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Наименование,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо,
					|";
					
					Если ОпределятьДатыПриемаУвольнения Тогда
						
						ТекстЗапроса = ТекстЗапроса + "
						|	NULL,
						|	NULL,
						|";
						
					КонецЕсли;
					
					ТекстЗапроса = ТекстЗапроса + "
					|	NULL,
					|	NULL,
					|	NULL,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации
					|ИЗ
					|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
					|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
					|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
					|ГДЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала <= &ДатаАктуальности
					|	И ДоговорНаВыполнениеРаботСФизЛицом.ДатаОкончания >= &ДатаУволенных
					|	И ДоговорНаВыполнениеРаботСФизЛицом.Проведен
					|{ГДЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник КАК Работник,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Родитель КАК Группа,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Код КАК ТабельныйНомер,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.ВидЗанятости КАК ВидЗанятости,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.ВидДоговора КАК ВидДоговора,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации.* КАК Подразделение,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Организация.* КАК ОбособленноеПодразделение,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала КАК ДатаПриема
					|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
					|	//СВОЙСТВА
					|	//КАТЕГОРИИ
					|}";
					
				КонецЕсли;
				
				УправлениеОтчетами.ДобавитьВТекстПостроителяДанныеОФизлице(ТекстЗапроса, СтруктураПредставлениеПолей, СтруктураФорматаПолей, "ДоговорНаВыполнениеРаботСФизЛицом", "Сотрудник.Физлицо");
				
				// Добавим строки запроса, необходимые для использования свойств и категорий
				ТаблицаПолей[0].ПутьКДанным = "ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо";
				ТаблицаПолей[1].ПутьКДанным = "ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник";
				ТекстПоляКатегорий = "";
				ТекстПоляСвойств = "";
				УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, мСоответствиеНазначений, ПостроительОтчета.Параметры,,ТекстПоляКатегорий,ТекстПоляСвойств,,,,"//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ",, мСтруктураДляОтбораПоКатегориям);
				
			КонецЕсли;
			
		Иначе
			
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
			|	РаботникиОрганизации.Сотрудник.Физлицо.Наименование КАК ФИО
			|ПОМЕСТИТЬ ВТСписокРаботников
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизации
			|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
			|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
			|//УСЛОВИЕ
			|{ГДЕ
			|	РаботникиОрганизации.Сотрудник КАК Работник,
			|	РаботникиОрганизации.Сотрудник.Родитель КАК Группа,
			|	(ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|		ТОГДА РаботникиОрганизации.ДолжностьЗавершения
			|		ИНАЧЕ РаботникиОрганизации.Должность 
			|	КОНЕЦ).* КАК Должность,
			|	(ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|		ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения
			|		ИНАЧЕ РаботникиОрганизации.ГрафикРаботы 
			|	КОНЕЦ).* КАК ГрафикРаботы,
			|	РаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
			|	ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|		ТОГДА РаботникиОрганизации.ЗанимаемыхСтавокЗавершения
			|		ИНАЧЕ РаботникиОрганизации.ЗанимаемыхСтавок 
			|	КОНЕЦ КАК ЗанимаемыхСтавок,
			|	РаботникиОрганизации.Сотрудник.ДатаПриемаНаРаботу КАК ДатаПриема,
			|	РаботникиОрганизации.Сотрудник.ВидЗанятости КАК ВидЗанятости,
			|	РаботникиОрганизации.Сотрудник.ВидДоговора КАК ВидДоговора,
			|	(ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|		ТОГДА РаботникиОрганизации.ПодразделениеОрганизацииЗавершения
			|		ИНАЧЕ РаботникиОрганизации.ПодразделениеОрганизации 
			|	КОНЕЦ).* КАК Подразделение,
			|	(ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|		ТОГДА РаботникиОрганизации.ОбособленноеПодразделениеЗавершения
			|		ИНАЧЕ РаботникиОрганизации.ОбособленноеПодразделение 
			|	КОНЕЦ).* КАК ОбособленноеПодразделение
			|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
			|	//СВОЙСТВА
			|	//КАТЕГОРИИ
			|}
			|
			|";
			
			УправлениеОтчетами.ДобавитьВТекстПостроителяДанныеОФизлице(ТекстЗапроса, СтруктураПредставлениеПолей, СтруктураФорматаПолей, "РаботникиОрганизации", "Сотрудник.Физлицо");
			
			// Добавим строки запроса, необходимые для использования свойств и категорий
			ТаблицаПолей[0].ПутьКДанным = "РаботникиОрганизации.Сотрудник.Физлицо";
			ТекстПоляКатегорий = "";
			ТекстПоляСвойств = "";
			УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, мСоответствиеНазначений, ПостроительОтчета.Параметры,,ТекстПоляКатегорий,ТекстПоляСвойств,,,,"//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ",, мСтруктураДляОтбораПоКатегориям);
			
			Если ВключатьДоговорников Тогда
				
				Если Не ВключатьУволенных Тогда
					
					ТекстЗапроса = ТекстЗапроса + "
					|
					|ОБЪЕДИНИТЬ
					|
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо.Наименование
					|ИЗ
					|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
					|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
					|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
					|ГДЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала >= НАЧАЛОПЕРИОДА(&ДатаАктуальности, МЕСЯЦ)
					|	И ДоговорНаВыполнениеРаботСФизЛицом.ДатаОкончания <= КОНЕЦПЕРИОДА(&ДатаАктуальности, МЕСЯЦ)
					|	И ДоговорНаВыполнениеРаботСФизЛицом.Проведен
					|{ГДЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник КАК Работник,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Родитель КАК Группа,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Код КАК ТабельныйНомер,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.ВидЗанятости КАК ВидЗанятости,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.ВидДоговора КАК ВидДоговора,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации.* КАК Подразделение,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Организация.* КАК ОбособленноеПодразделение,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала КАК ДатаПриема
					|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
					|	//СВОЙСТВА
					|	//КАТЕГОРИИ
					|}";
					
				Иначе
					
					ТекстЗапроса = ТекстЗапроса + "
					|
					|ОБЪЕДИНИТЬ
					|
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо.Наименование
					|ИЗ
					|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
					|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
					|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
					|ГДЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала <= &ДатаАктуальности
					|	И ДоговорНаВыполнениеРаботСФизЛицом.ДатаОкончания >= &ДатаУволенных
					|	И ДоговорНаВыполнениеРаботСФизЛицом.Проведен
					|{ГДЕ
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник КАК Работник,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Родитель КАК Группа,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Код КАК ТабельныйНомер,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.ВидЗанятости КАК ВидЗанятости,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.ВидДоговора КАК ВидДоговора,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации.* КАК Подразделение,
					|	ДоговорНаВыполнениеРаботСФизЛицом.Организация.* КАК ОбособленноеПодразделение,
					|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала КАК ДатаПриема
					|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
					|	//СВОЙСТВА
					|	//КАТЕГОРИИ
					|}";
					
				КонецЕсли;
				
				УправлениеОтчетами.ДобавитьВТекстПостроителяДанныеОФизлице(ТекстЗапроса, СтруктураПредставлениеПолей, СтруктураФорматаПолей, "ДоговорНаВыполнениеРаботСФизЛицом", "Сотрудник.Физлицо");
				
				// Добавим строки запроса, необходимые для использования свойств и категорий
				ТаблицаПолей[0].ПутьКДанным = "ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо";
				ТекстПоляКатегорий = "";
				ТекстПоляСвойств = "";
				УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, мСоответствиеНазначений, ПостроительОтчета.Параметры,,ТекстПоляКатегорий,ТекстПоляСвойств,,,,"//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ",, мСтруктураДляОтбораПоКатегориям);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ВключатьУволенных Тогда
			СтрокаУсловия =
			"ГДЕ
			|	ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|			ТОГДА РаботникиОрганизации.ПричинаИзмененияСостоянияЗавершения
			|		ИНАЧЕ РаботникиОрганизации.ПричинаИзмененияСостояния
			|	КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УСЛОВИЕ", СтрокаУсловия);
			
		ИначеЕсли ЗначениеЗаполнено(ДатаУволенных) Тогда
			СтрокаУсловия =
			"ГДЕ
			|	(ВЫБОР
			|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
			|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|			ТОГДА РаботникиОрганизации.ПричинаИзмененияСостоянияЗавершения
			|		ИНАЧЕ РаботникиОрганизации.ПричинаИзмененияСостояния
			|	КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) ИЛИ (РаботникиОрганизации.Период > &ДатаУволенных)
			|";
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УСЛОВИЕ", СтрокаУсловия);
			
		КонецЕсли;
		
	Иначе
		
		ТекстПоляКатегорий = "";
		ТекстПоляСвойств = "";
		ТекстЗапроса = ФормированиеСпискаРаботниковПереопределяемый.ПолучитьТекстЗапросаНачальныеНастройкиДругиеРегистры(ЭтотОбъект, СтруктураПредставлениеПолей, СтруктураФорматаПолей, мСоответствиеНазначений, мСтруктураДляОтбораПоКатегориям, ТаблицаПолей, НоваяСтрока, ТекстПоляКатегорий, ТекстПоляСвойств);
		
	КонецЕсли;
	
	Если ИсполнятьЗапрос Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ПОМЕСТИТЬ ВТСписокРаботников","") + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФИО";
	ИначеЕсли ВыбиратьСотрудника Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник";
	Иначе 
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо";
	КонецЕсли;
	
	ПостроительОтчета.Текст = ТекстЗапроса;
	
	УправлениеОтчетами.УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, мСоответствиеНазначений, СтруктураПредставлениеПолей);
	
	//представление полей запроса
	СтруктураПредставлениеПолей.Вставить("Группа",						"Группа сотрудников");
	СтруктураПредставлениеПолей.Вставить("ОбособленноеПодразделение",	ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Организация")); 
	СтруктураПредставлениеПолей.Вставить("Работник",					"Сотрудник");
	СтруктураПредставлениеПолей.Вставить("ДатаПриема",					"Дата приема");
	СтруктураПредставлениеПолей.Вставить("ДатаНачала",					"Дата начала");
	СтруктураПредставлениеПолей.Вставить("ГрафикРаботы",				"График работы");
	СтруктураПредставлениеПолей.Вставить("ЗанимаемыхСтавок",			"Занимаемых ставок");
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда 
		СтруктураПредставлениеПолей.Вставить("ВидЗанятости",			"Вид занятости");
		СтруктураПредставлениеПолей.Вставить("ВидДоговора",				"Вид Договора");
	КонецЕсли;
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	Если НачальноеЗаполнение Тогда
		// отборы по умолчанию
		МассивОтбора = Новый Массив;
		Если ИмяРегистра = "РаботникиОрганизаций" Тогда
			МассивОтбора.Добавить("ОбособленноеПодразделение");
		КонецЕсли;
		МассивОтбора.Добавить("Подразделение");
		МассивОтбора.Добавить("Должность");
		МассивОтбора.Добавить("Работник");
		УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
		ПостроительОтчета.Отбор.Работник.ВидСравнения = ВидСравнения.ВСписке;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокРаботников() Экспорт
	
	Если НЕ УправлениеОтчетами.ЗадатьПараметрыОтбораПоКатегориям(ПостроительОтчета, мСтруктураДляОтбораПоКатегориям) Тогда
		//повторные отборы по категориям
		Возврат Новый Структура("Команда,Данные,Реквизиты","ЗаполнитьСписокРаботников");
	КонецЕсли;
	
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности", ДатаАктуальности);
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Год", Год(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Месяц", Месяц(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_День", День(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаУволенных", ДатаУволенных);
	
	Если ИсполнятьЗапрос Тогда
		
		ПостроительОтчета.Выполнить();
		РезультатОтбора = ПостроительОтчета.Результат;

		Если РезультатОтбора.Пустой() Тогда
			ОбщегоНазначенияЗК.СообщитьОбОшибке("Не обнаружено сотрудников, удовлетворяющих указанным условиям!");
		КонецЕсли;
		
		Возврат Новый Структура("Команда,Данные,Реквизиты","ЗаполнитьСписокРаботников",РезультатОтбора,Реквизиты)
	Иначе
		Возврат Новый Структура("Команда,Запрос,Реквизиты","ИсполнитьПодготовленныйЗапрос",ПостроительОтчета.ПолучитьЗапрос(),Реквизиты)
	КонецЕсли;
	
КонецФункции // ПолучитьСписокРаботников()

#КонецЕсли
