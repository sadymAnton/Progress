

Процедура Инициализировать(ДокОбъект,ИмяТабличнойЧасти,ТабличноеПолеОбъекта) Экспорт
	
	ДокументОбъект=ДокОбъект;
	
	форма=ПолучитьФорму("Форма");
	форма.открытьМодально();


КонецПроцедуры

Функция НайтиСправочник(ИмяСправочника,ЗначениеПоиска)Экспорт 

	Иерархический = Метаданные.Справочники[ИмяСправочника].Иерархический;
	ДлинаНаименования = Метаданные.Справочники["НСИ_Вывески"].ДлинаНаименования;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВложенныйЗапрос.Ссылка,
		|	ВложенныйЗапрос.Приоритет КАК Приоритет
		|ИЗ
		|	(ВЫБРАТЬ
		|		Справочник.Ссылка КАК Ссылка,
		|		1 КАК Приоритет
		|	ИЗ
		|		Справочник.НСИ_Вывески КАК Справочник
		|	ГДЕ
		|		Справочник.Код = &ЗначениеПоиска
		|		И НЕ Справочник.ПометкаУдаления
		|		И НЕ Справочник.ЭтоГруппа
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|"+?(ДлинаНаименования>0,"	
		|	ВЫБРАТЬ
		|		Справочник.Ссылка,
		|		2
		|	ИЗ
		|		Справочник.НСИ_Вывески КАК Справочник
		|	ГДЕ
		|		Справочник.Наименование = &ЗначениеПоиска
		|		И НЕ Справочник.ПометкаУдаления
		|		И НЕ Справочник.ЭтоГруппа","")+"
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗНАЧЕНИЕ(Справочник.НСИ_Вывески.ПустаяСсылка),
		|		3
		|	ИЗ
		|		Справочник.НСИ_Вывески КАК Справочник) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"НСИ_Вывески", ИмяСправочника);
	Если НЕ Иерархический Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И НЕ Справочник.ЭтоГруппа", "");
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("ЗначениеПоиска", ЗначениеПоиска);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;

КонецФункции // НайтиСправочник()
 