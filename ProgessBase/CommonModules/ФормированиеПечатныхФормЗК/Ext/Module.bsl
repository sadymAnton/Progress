
////////////////////////////////////////////////////////////////////////////////
//  Функции-проверки

// Возвращает значение истина если за, переданный период заполнен регламетированный производственный календарь
//
// Параметры:
//
//  НачалоПериода - дата начала периода
//  КонецПериода - дата конца периода
//
///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
// Измайлова Полина 21.06.2011 15:11 
//  AVT_Календарь [СправочникСсылка.AVT_ПроизводственныеКалендари] - производственный календарь
////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}                                           
Функция ЗаполненРегламентированныйПроизводственныйКалендарь(НачалоПериода, КонецПериода, AVT_Календарь = Неопределено) Экспорт
	
	///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
	// Измайлова Полина 04.07.2011 10:43 
	Если ЗначениеЗаполнено(AVT_Календарь) Тогда
		УсловиеПоКалендарю = " РегламентированныйПроизводственныйКалендарь.AVT_ПроизводственныйКалендарь = &Календарь И ";
	КонецЕсли;
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}   
	
	ТЗ = "ВЫБРАТЬ
	     |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
	     |ИЗ
	     |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	     |ГДЕ
		 		 ///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		 // Измайлова Полина 21.06.2011 15:12 
		 |	" + УсловиеПоКалендарю + "
		 ////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}  
	     |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоПериода И &КонецПериода";
		 
	Запрос = Новый Запрос(ТЗ);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
	// Измайлова Полина 04.07.2011 10:45 
	Запрос.УстановитьПараметр("Календарь", AVT_Календарь);
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА} 
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции  //ЗаполненРегламентированныйПроизводственныйКалендарь()

////////////////////////////////////////////////////////////////////////////////
//  Общие процедуры печати

// Представление незаполненой даты в печатных формах документов.
//
// Параметры
//
// Возвращаемое значение:
//   Строка   - "___"_________20__ г.
//
Функция ПустаяДатаВПечатнойФорме() Экспорт

	Возврат """___""_________20__ г."

КонецФункции // ПустаяДатаВПечатнойФорме()

// Возвращает процент северной надбавки на указаную дату
//
// Параметры:
//  ДатаРегистрации - дата регистрации записи о стаже
//  ПорядокНачисления - порядок начисления северной надбавки - ПеречислениеСсылка.ПорядокНачисленияСеверныхНадбавок
//  НачальныйПроцент - процент на дату ДатаРегистрации
//  Месяцев - количество месяцев стажа на дату ДатаРегистрации
//  Дней - количество дней стажа на дату ДатаРегистрации
//  Дата - начало периода, в котором мы получаем сведения о процентах надбавки
//
Функция ПолучитьПроцентСевернойНадбавкиНаДату(ДатаРегистрацииСеверногоСтажа, ПорядокНачисленияСеверныхНадбавок, НачальныйПроцентСевернойНадбавки, СеверныйСтажМесяцев, СеверныйСтажДней, ОкончаниеПериодаЗаполнения) Экспорт
	
	Массив = ПроведениеРасчетов.ПолучитьПроцентыСевернойНадбавкиЗаПериод(
					ДатаРегистрацииСеверногоСтажа, 
					ПорядокНачисленияСеверныхНадбавок, 
					НачальныйПроцентСевернойНадбавки,
					СеверныйСтажМесяцев,
					СеверныйСтажДней,
					ОкончаниеПериодаЗаполнения,
					ОкончаниеПериодаЗаполнения);
					
	Процент = Массив[Массив.Количество()-1].Процент;
					
	Возврат Процент;

КонецФункции //ПолучитьПроцентСевернойНадбавкиНаДату

// Функция возвращает текст запроса, в котором ответственные лица организаций помещаются во временную таблицу
//
Функция ПолучитьТекстЗапросаПоОтветственнымЛицам(ПараметрОтбораПоДате, УсловиеОтбора) Экспорт
	
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо.Наименование КАК НаименованиеФизлица,
	|	ОтветственныеЛицаСрезПоследних.Должность.Наименование КАК Должность,
	|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК Физлицо,
	|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница,
	|	ФизическиеЛица.Комментарий
	|ПОМЕСТИТЬ ВТОтветственныеЛица
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|			&" + ПараметрОтбораПоДате + ",
	|			" + УсловиеОтбора + ") КАК ОтветственныеЛицаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
	|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "". ""
	|			ИНАЧЕ """"
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
	|				ТОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "". ""
	|			ИНАЧЕ """"
	|		КОНЕЦ + ФИОФизЛицСрезПоследних.Фамилия, ОтветственныеЛицаСрезПоследних.НаименованиеФизлица) КАК НаименованиеОтветственногоЛица,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ОтветственныеЛицаСрезПоследних.НаименованиеФизлица) КАК НаименованиеОтветственногоЛицаПолное,
	|	ОтветственныеЛицаСрезПоследних.Должность,
	|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
	|	ОтветственныеЛицаСрезПоследних.Физлицо,
	|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОтветственныеЛицаСрезПоследних.Комментарий
	|ПОМЕСТИТЬ ВТДанныеОбОтветственномЛице
	|ИЗ
	|	ВТОтветственныеЛица КАК ОтветственныеЛицаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&" + ПараметрОтбораПоДате + ",
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						Ответственные.Физлицо
	|					ИЗ
	|						ВТОтветственныеЛица КАК Ответственные)) КАК ФИОФизЛицСрезПоследних
	|		ПО ОтветственныеЛицаСрезПоследних.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтруктурнаяЕдиница";
	
КонецФункции

// Выводит данные побуквенно
// Параметры:
//			Данные - Строка, котрую нужно вывести
//			Раздел - Макет (область) табличного документа в которую нужно вывести
//			ИмяПоказателя - Строка, имя ячейки в области к которой прибавляется номер позиуии в имени показателя
//			КоличествоЯчеек - Число, количество ячеек в которые нужно вывести данные
//			НачальнвяЯчейка - Число, ячейка с которой нужно начать побуквенный вывод
Процедура ВывестиДанныеПоБуквенно(Данные, Раздел, ИмяПоказателя, КоличествоЯчеек, НачальнаяЯчейка = 1) Экспорт

	Для НомЯчейки = НачальнаяЯчейка По НачальнаяЯчейка + КоличествоЯчеек - 1 Цикл
		Раздел.Области[ИмяПоказателя + Формат(НомЯчейки,"ЧГ=0")].Текст = Сред(Данные, НомЯчейки - НачальнаяЯчейка + 1, 1);
	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьПараметрыОбластиТабличногоДокумента(Область) Экспорт
	
	Для Параметр = 0 По Область.Параметры.Количество() -1 Цикл
		Область.Параметры[Параметр] = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//  Формирование общих печатных форм

#Если ТолстыйКлиентОбычноеПриложение Тогда

Функция ПечатьРасчетаСреднегоЗаработка(ДокументСсылка, ДатаСобытия, ПродолжительностьРасчетногоПериода, ОписаниеОплачиваемогоПериода, СпособРасчета, Знач ИспользоватьСреднеЧасовойЗаработок = Неопределено, СписокСоставляющихСреднегоЗаработка = Неопределено, ВыводитьЗаголовок = Истина, ОтражатьДолюВремени = Истина, СтруктураПоказателей = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Новый ТабличныйДокумент
	КонецЕсли;
	МетаданныеДокумента = ДокументСсылка.Метаданные();
	Попытка
		
		ИмяИсточникаДанных = МетаданныеДокумента.Имя;
	Исключение
		Возврат Новый ТабличныйДокумент
	КонецПопытки;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоЗаработка";
	
		///Вадим
	//Макет = ПолучитьОбщийМакет("РасчетСреднегоЗаработка");
	Макет = ПолучитьОбщийМакет("РасчетСреднегоЗаработкаПРГ");
	////Вадим
	
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	СекцияЗаголовокНачислений = Макет.ПолучитьОбласть("ЗаголовокНачислений");
	СекцияЗаголовокРабочегоМеста = Макет.ПолучитьОбласть("ЗаголовокРабочегоМеста");
	СекцияМесячныйЗаработок = Макет.ПолучитьОбласть("МесячныйЗаработок");
	СекцияСерединаОтчета = Макет.ПолучитьОбласть("СерединаОтчета");
	СекцияДоляВремени = Макет.ПолучитьОбласть("ДоляВремени");
	СекцияЗаголовокПремий = Макет.ПолучитьОбласть("ЗаголовокПремий");
	СекцияПремии = Макет.ПолучитьОбласть("Премии");
	СекцияПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			ДокументСсылка);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",		ДатаСобытия);
	Запрос.УстановитьПараметр("ИспользоватьСреднеЧасовойЗаработок", ИспользоватьСреднеЧасовойЗаработок);
	Запрос.УстановитьПараметр("Регистратор",			ДокументСсылка);
	Запрос.УстановитьПараметр("СпособРасчета",			СпособРасчета);
	Запрос.УстановитьПараметр("ОсновнойЗаработокНеиндексируемый", ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Сотрудник,
	|	Документ.Сотрудник.Физлицо КАК Физлицо
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &ДокументСсылка";
	Запрос.Текст = СтрЗаменить(ТекстЗапроса,"Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ","Документ." + ИмяИсточникаДанных + " КАК Документ");

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Запрос.УстановитьПараметр("Сотрудник",	Выборка.Сотрудник);
	Запрос.УстановитьПараметр("Физлицо",	Выборка.Физлицо);
	
	Если ВыводитьЗаголовок Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Документ.Представление,
		|	Документ.Ссылка,
		|	Документ.Сотрудник,
		|	Документ.Организация,
		|	Документ.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
		|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, Документ.Сотрудник.Наименование) КАК ФИОРаботника,
		|	Документ.Сотрудник.Код КАК ТабельныйНомер,
		|	&РасчетныйПериодНачало КАК ДатаНачалаРасчетногоПериода,
		|	&РасчетныйПериодОкончание КАК ДатаОкончанияРасчетногоПериода
		|ИЗ
		|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ","Документ." + ИмяИсточникаДанных + " КАК Документ");

		Если МетаданныеДокумента.Реквизиты.Найти("ПериодРасчетаСреднегоЗаработкаНачало") <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&РасчетныйПериодНачало","Документ.ПериодРасчетаСреднегоЗаработкаНачало");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&РасчетныйПериодОкончание","Документ.ПериодРасчетаСреднегоЗаработкаОкончание");
		Иначе
			Запрос.УстановитьПараметр("РасчетныйПериодНачало",		ДобавитьМесяц(НачалоМесяца(ДатаСобытия), - ПродолжительностьРасчетногоПериода));
			Запрос.УстановитьПараметр("РасчетныйПериодОкончание",	НачалоДня(НачалоМесяца(ДатаСобытия) - 1));
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СекцияШапка.Параметры,Выборка);
		
		СекцияШапка.Параметры.ДатаНачалаРасчетногоПериода = Формат(СекцияШапка.Параметры.ДатаНачалаРасчетногоПериода,"ДФ=dd.MM.yyyy");
		СекцияШапка.Параметры.ДатаОкончанияРасчетногоПериода = Формат(СекцияШапка.Параметры.ДатаОкончанияРасчетногоПериода,"ДФ=dd.MM.yyyy");
		СекцияШапка.Параметры.Представление = ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ДокументСсылка, МетаданныеДокумента.Синоним);
		СекцияШапка.Параметры.ОписаниеОплачиваемогоПериода = ОписаниеОплачиваемогоПериода;
		СекцияШапка.Параметры.СпособРасчета = ?(СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет,Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС,СпособРасчета);
	
		ТабДокумент.Вывести(СекцияШапка);
	КонецЕсли;
	
	ФормированиеПечатныхФормПереопределяемый.УстановитьПараметрыЗапросаСреднегоЗаработка(Запрос, СпособРасчета, СписокСоставляющихСреднегоЗаработка);
	
	Если ИспользоватьСреднеЧасовойЗаработок = Неопределено Тогда
		Если МетаданныеДокумента.Реквизиты.Найти("СпособРегистрацииВремени") <> Неопределено Тогда
			ТекстПоляИспользоватьСреднеЧасовойЗаработок = 
			"ВЫБОР
			|		КОГДА Документ.СпособРегистрацииВремени = ЗНАЧЕНИЕ(Перечисление.СпособыРегистрацииВремени.РегистрацияДляЧастиСмены) 
			|			ИЛИ ВЫБОР
			|					КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
			|							И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА ЕСТЬNULL(РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.СуммированныйУчетРабочегоВремени, ЛОЖЬ)
			|					ИНАЧЕ ЕСТЬNULL(РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) 
			|				КОНЕЦ			
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ИспользоватьСреднеЧасовойЗаработок"
		ИначеЕсли СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням 
			Или СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке Тогда
			// Решение Верховного Суда РФ от 13.07.2006 № ГКПИ06-637
			ТекстПоляИспользоватьСреднеЧасовойЗаработок = "Ложь КАК ИспользоватьСреднеЧасовойЗаработок"  
		Иначе
			ТекстПоляИспользоватьСреднеЧасовойЗаработок =
			"ВЫБОР
			|	КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
			|			И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|		ТОГДА ЕСТЬNULL(РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.СуммированныйУчетРабочегоВремени, ЛОЖЬ)
			|	ИНАЧЕ ЕСТЬNULL(РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) 
			|КОНЕЦ КАК ИспользоватьСреднеЧасовойЗаработок"
		КонецЕсли;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК ИспользоватьСреднеЧасовойЗаработок
		|ИЗ
		|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"НЕОПРЕДЕЛЕНО КАК ИспользоватьСреднеЧасовойЗаработок", ТекстПоляИспользоватьСреднеЧасовойЗаработок);
		Запрос.Текст = СтрЗаменить(ТекстЗапроса,"Документ.НачислениеОтпускаРаботникамОрганизаций КАК Документ","Документ." + ИмяИсточникаДанных + " КАК Документ");
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		ИспользоватьСреднеЧасовойЗаработок = Выборка.ИспользоватьСреднеЧасовойЗаработок;
	КонецЕсли;
	Запрос.УстановитьПараметр("ИспользоватьСреднеЧасовойЗаработок", ИспользоватьСреднеЧасовойЗаработок);
	
	// по окончательным данным проведенного документа
	// собираем итоговые данные и рассчитываем средний заработок
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетСреднегоЗаработка.ПериодРегистрации,
	|	РасчетСреднегоЗаработка.ВидРасчета,
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало,
	|	РасчетСреднегоЗаработка.БазовыйПериодКонец,
	|	РасчетСреднегоЗаработка.Сотрудник КАК Сотрудник,
	|	РасчетСреднегоЗаработка.Результат,
	|	РасчетСреднегоЗаработка.ОтработаноПоПятидневке,
	|	РасчетСреднегоЗаработка.НормаПоПятидневке,
	|	РасчетСреднегоЗаработка.ОтработаноДней,
	|	РасчетСреднегоЗаработка.ОтработаноЧасов,
	|	РасчетСреднегоЗаработка.СкидкаПоСтраховымВзносам,
	|	РасчетСреднегоЗаработка.КоэффициентИндексации,
	|	РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
	|	РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
	|	РасчетСреднегоЗаработка.СпособРасчета,
	|	РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка,
	|	РасчетСреднегоЗаработка.ЧислоМесяцев
	|ПОМЕСТИТЬ ВТДанныеОСреднем
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|ГДЕ
	|	РасчетСреднегоЗаработка.Регистратор = &Регистратор
	|	И РасчетСреднегоЗаработка.СпособРасчета = &СпособРасчета
	|	И РасчетСреднегоЗаработка.ВидРасчета В(&СписокСоставляющихСреднегоЗаработка)
	|	И (РасчетСреднегоЗаработка.Результат <> 0
	|			ИЛИ РасчетСреднегоЗаработка.ОтработаноДней <> 0
	|			ИЛИ РасчетСреднегоЗаработка.ОтработаноЧасов <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА 1
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК ПорядокЗаписей,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|						ТОГДА 1
	|					ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|				КОНЕЦ
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА РасчетСреднегоЗаработка.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоЗаработка,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеФиксированныеПремии)
	|			ТОГДА РасчетСреднегоЗаработка.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ФиксПремий,
	|	ВЫБОР
	|		КОГДА (РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|				ИЛИ РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый))
	|				И РасчетСреднегоЗаработка.Сотрудник = &Сотрудник
	|			ТОГДА ВЫБОР
	|					КОГДА &ИспользоватьСреднеЧасовойЗаработок
	|						ТОГДА РасчетСреднегоЗаработка.ОтработаноЧасов
	|					ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноДней
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоДнейРасчетногоПериода,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособий))
	|			ТОГДА РасчетСреднегоЗаработка.Результат
	|		КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|								ТОГДА 1
	|							ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|						КОНЕЦ
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|								ТОГДА 1
	|							ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|						КОНЕЦ * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|								ТОГДА 0
	|							ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|						КОНЕЦ
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиямНеИндексируемые)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|								ТОГДА 0
	|							ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|						КОНЕЦ
	|				ИНАЧЕ РасчетСреднегоЗаработка.Результат
	|			КОНЕЦ * ВЫБОР
	|				КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев > РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
	|					ТОГДА РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / РасчетСреднегоЗаработка.ЧислоМесяцев
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК ВсегоУчтеноПремий,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеФиксированныеПремии)
	|			ТОГДА РасчетСреднегоЗаработка.ОтработаноПоПятидневке
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоДнейОтработано,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеФиксированныеПремии)
	|			ТОГДА РасчетСреднегоЗаработка.НормаПоПятидневке
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоДнейПоНорме,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособий))
	|			ТОГДА ""-""
	|		КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|								ТОГДА 1
	|							ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|						КОНЕЦ
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|								ТОГДА 1
	|							ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|						КОНЕЦ
	|				ИНАЧЕ РасчетСреднегоЗаработка.Результат
	|			КОНЕЦ / РасчетСреднегоЗаработка.ЧислоМесяцев
	|	КОНЕЦ КАК МесячнаяЧастьПремий,
	|	НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодНачало, МЕСЯЦ) КАК МесяцРасчетногоПериода,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&Индексируемые)
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|						ТОГДА 1
	|					ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоэффициентИндексации,
	|	РасчетСреднегоЗаработка.Результат КАК Результат,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособий))
	|			ТОГДА 0
	|		ИНАЧЕ РасчетСреднегоЗаработка.ЧислоМесяцев
	|	КОНЕЦ КАК МесяцевПремии,
	|	РасчетСреднегоЗаработка.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			ТОГДА ""По внутр. совм-ву""
	|		ИНАЧЕ ""Основное рабочее место""
	|	КОНЕЦ КАК ВидЗанятости,
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало КАК БазовыйПериодНачало
	|ПОМЕСТИТЬ ВТОбработанныеЗаписи
	|ИЗ
	|	ВТДанныеОСреднем КАК РасчетСреднегоЗаработка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации.Наименование
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность.Наименование
	|	КОНЕЦ КАК Должность,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТДанныеСотрудника
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&ДатаНачалаСобытия,
	|			Сотрудник В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						РасчетСреднегоЗаработка.Сотрудник
	|					ИЗ
	|						ВТДанныеОСреднем КАК РасчетСреднегоЗаработка)
	|				) КАК РаботникиОрганизацийСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСреднегоЗаработка.ПорядокЗаписей КАК ПорядокЗаписей,
	|	ВЫРАЗИТЬ(РасчетСреднегоЗаработка.ВсегоЗаработка КАК ЧИСЛО(15, 2)) КАК ВсегоЗаработка,
	|	РасчетСреднегоЗаработка.ФиксПремий КАК ФиксПремий,
	|	РасчетСреднегоЗаработка.ВсегоДнейРасчетногоПериода КАК ВсегоДнейРасчетногоПериода,
	|	ВЫРАЗИТЬ(РасчетСреднегоЗаработка.ВсегоУчтеноПремий КАК ЧИСЛО(15, 2)) КАК ВсегоУчтеноПремий,
	|	РасчетСреднегоЗаработка.ВсегоДнейОтработано КАК ВсегоДнейОтработано,
	|	РасчетСреднегоЗаработка.ВсегоДнейПоНорме КАК ВсегоДнейПоНорме,
	|	ВЫРАЗИТЬ(РасчетСреднегоЗаработка.МесячнаяЧастьПремий КАК ЧИСЛО(15, 2)) КАК МесячнаяЧастьПремий,
	|	РасчетСреднегоЗаработка.МесяцРасчетногоПериода,
	|	РасчетСреднегоЗаработка.КоэффициентИндексации,
	|	РасчетСреднегоЗаработка.Результат,
	|	РасчетСреднегоЗаработка.МесяцевПремии,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации + ""; "" + РаботникиОрганизацийСрезПоследних.Должность КАК РабочееМесто,
	|	РасчетСреднегоЗаработка.Сотрудник КАК Сотрудник,
	|	РасчетСреднегоЗаработка.ВидЗанятости,
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало КАК БазовыйПериодНачало
	|ИЗ
	|	ВТОбработанныеЗаписи КАК РасчетСреднегоЗаработка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудника КАК РаботникиОрганизацийСрезПоследних
	|		ПО РасчетСреднегоЗаработка.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокЗаписей,
	|	БазовыйПериодНачало
	|ИТОГИ
	|	СУММА(ВсегоЗаработка),
	|	СУММА(ФиксПремий),
	|	СУММА(ВсегоДнейРасчетногоПериода),
	|	СУММА(ВсегоУчтеноПремий),
	|	МАКСИМУМ(ВсегоДнейОтработано),
	|	МАКСИМУМ(ВсегоДнейПоНорме)
	|ПО
	|	ОБЩИЕ,
	|	Сотрудник";
	
	Результат = Запрос.Выполнить();
	
	СтруктураПоказателей = Новый Структура("
	|ВсегоДнейРасчетногоПериода,
	|ВсегоЗаработка,
	|ВсегоУчтеноПремий,
	|ОбщийЗаработок, 
	|Средний",0,0,0,0,0);
	
	Если Не Результат.Пустой() Тогда
		
		// уточним названия колонок и показателей
		Если ИспользоватьСреднеЧасовойЗаработок Тогда
			СекцияЗаголовокРабочегоМеста.Параметры.ЕдиницаИзмерения = "часов";
			СекцияДоляВремени.Параметры.ЕдиницаИзмерения = "часов";
			СекцияПодвал.Параметры.ЕдиницаИзмерения = "часов";
			СекцияПодвал.Параметры.ОписаниеЗаработка = "Среднечасовой";
		Иначе
			СекцияЗаголовокРабочегоМеста.Параметры.ЕдиницаИзмерения = "дней";
			СекцияДоляВремени.Параметры.ЕдиницаИзмерения = "дней";
			СекцияПодвал.Параметры.ЕдиницаИзмерения = "дней";
			СекцияПодвал.Параметры.ОписаниеЗаработка = "Среднедневной";
		КонецЕсли;
		СтруктураИтоговПоРабочемуМесту = Новый Структура("
		|ВсегоДнейРасчетногоПериода,
		|ВсегоЗаработка,
		|ВсегоДнейОтработано,
		|ВсегоДнейПоНорме,
		|ДоляВремени",0,0,0,0,0);
		
		ВыводитьЗаголовокРабочегоМеста = Истина;
		ВыводитьИтогиПредыдущегоРабочегоМеста = Ложь;
		ТабДокумент.Вывести(СекцияЗаголовокНачислений);
		
		// Формирование раздела по начислениям за расчетный период по рабочим местам
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
				
				//заполнение итогами по расчету среднего заработка
				ЗаполнитьЗначенияСвойств(СтруктураПоказателей,Выборка);
				ОтражатьДолюВремени = ОтражатьДолюВремени И Выборка.ФиксПремий <> 0;
				
				СтруктураПоказателей.ОбщийЗаработок = Формат(Выборка.ВсегоЗаработка + Выборка.ВсегоУчтеноПремий, "ЧЦ=17; ЧДЦ=4; ЧН=-");
				СтруктураПоказателей.Средний = Окр(?(СтруктураПоказателей.ВсегоДнейРасчетногоПериода = 0,0, (Выборка.ВсегоЗаработка + Выборка.ВсегоУчтеноПремий) / СтруктураПоказателей.ВсегоДнейРасчетногоПериода),2);
				
			ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
				Если ВыводитьИтогиПредыдущегоРабочегоМеста Тогда // итоги предыдущего р.м.
					ЗаполнитьЗначенияСвойств(СекцияСерединаОтчета.Параметры,СтруктураИтоговПоРабочемуМесту);
					ТабДокумент.Вывести(СекцияСерединаОтчета);
					Если ОтражатьДолюВремени Тогда
						ЗаполнитьЗначенияСвойств(СекцияДоляВремени.Параметры,СтруктураИтоговПоРабочемуМесту);
						ТабДокумент.Вывести(СекцияДоляВремени);
					КонецЕсли;
				Иначе
					ВыводитьИтогиПредыдущегоРабочегоМеста = Истина;
				КонецЕсли;
				
				// заполнение итогами по очередному р.м.
				ЗаполнитьЗначенияСвойств(СтруктураИтоговПоРабочемуМесту,Выборка);
				СтруктураИтоговПоРабочемуМесту.ДоляВремени = ?(СтруктураИтоговПоРабочемуМесту.ВсегоДнейПоНорме = 0,0, Формат(СтруктураИтоговПоРабочемуМесту.ВсегоДнейОтработано / СтруктураИтоговПоРабочемуМесту.ВсегоДнейПоНорме,"ЧДЦ=10"));
				ВыводитьЗаголовокРабочегоМеста = Истина;
				
			ИначеЕсли Выборка.ПорядокЗаписей <> 3 Тогда
				Если ВыводитьЗаголовокРабочегоМеста Тогда
					ВыводитьЗаголовокРабочегоМеста = Ложь;
					ЗаполнитьЗначенияСвойств(СекцияЗаголовокРабочегоМеста.Параметры,Выборка);
					ТабДокумент.Вывести(СекцияЗаголовокРабочегоМеста);
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(СекцияМесячныйЗаработок.Параметры,Выборка);
				ТабДокумент.Вывести(СекцияМесячныйЗаработок);
			КонецЕсли;
		КонецЦикла;
		Если ВыводитьЗаголовокРабочегоМеста Тогда
			ТабДокумент.Вывести(СекцияЗаголовокРабочегоМеста);
		КонецЕсли;
		// итоги последнего по порядку р.м.
		ЗаполнитьЗначенияСвойств(СекцияСерединаОтчета.Параметры,СтруктураИтоговПоРабочемуМесту);
		ТабДокумент.Вывести(СекцияСерединаОтчета);
		Если ОтражатьДолюВремени Тогда
			ЗаполнитьЗначенияСвойств(СекцияДоляВремени.Параметры,СтруктураИтоговПоРабочемуМесту);
			ТабДокумент.Вывести(СекцияДоляВремени);
		КонецЕсли;
		
		// Формирование раздела по начисленным премиям
		ТабДокумент.Вывести(СекцияЗаголовокПремий);
		ВыводитьПустуюСтрокуПремии = Истина;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись И Выборка.ПорядокЗаписей = 3 Тогда
				ЗаполнитьЗначенияСвойств(СекцияПремии.Параметры,Выборка);
				СекцияПремии.Параметры.МесяцРасчетногоПериода = Формат(СекцияПремии.Параметры.МесяцРасчетногоПериода,"ДФ='ММММ гггг ""г.""'");
				СекцияПремии.Параметры.МесяцевПремии = ?(ЗначениеЗаполнено(СекцияПремии.Параметры.МесяцевПремии), "; за " + СекцияПремии.Параметры.МесяцевПремии + " мес.","");
				ТабДокумент.Вывести(СекцияПремии);
				ВыводитьПустуюСтрокуПремии = Ложь;
			КонецЕсли;
		КонецЦикла;
		Если ВыводитьПустуюСтрокуПремии Тогда
			СекцияПремии.Область(1,2,1,2).Текст = "";
			ТабДокумент.Вывести(СекцияПремии);
		КонецЕсли;
		
		// Итоги по расчету среднего заработка
		ЗаполнитьЗначенияСвойств(СекцияПодвал.Параметры,СтруктураПоказателей);
		ТабДокумент.Вывести(СекцияПодвал);
		
	КонецЕсли;
			/////Вадим 19.12.2012 10:20:56
 	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаботникиОрганизацийСрезПоследних.Должность
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дата, Сотрудник.Физлицо = &Физлицо) КАК РаботникиОрганизацийСрезПоследних";

	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Физлицо", ПараметрыСеанса.ТекущийПользователь.ФизЛицо);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() тогда
		должность=ВыборкаДетальныеЗаписи.Должность;
	иначе
		должность="";
	КонецЕсли;

	Подпись = Макет.ПолучитьОбласть("Подпись");
	Подпись.Параметры.Должностьпользователя=должность;
	Подпись.Параметры.ФИОпользователя=ПараметрыСеанса.ТекущийПользователь.ПолноеНаименование();
	Подпись.Параметры.дата=формат(ТекущаяДата(),"ДЛФ=D");
    ТабДокумент.Вывести(Подпись);
 
 	////ВадимКонец
	Возврат ТабДокумент;
	
КонецФункции // ПечатьРасчетаСреднегоЗаработка	

Функция АнализУчтеннойВРасчетеСреднегоСкидки(ДокументОбъект) Экспорт
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АнализУчтеннойВРасчетеСреднегоСкидки";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	// запоминаем области макета
	Макет = ПолучитьОбщийМакет("АнализУчтеннойВРасчетеСреднегоСкидки");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); 
	ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Месяц");
	
	Организация = ДокументОбъект.Организация;
	ФизЛицо = ДокументОбъект.ФизЛицо;
	Сотрудник = ДокументОбъект.Сотрудник;
	Дата = ДокументОбъект.Дата;
	
	Запрос = Новый Запрос;

	// Начинаем формировать выходной документ
	ОбластьМакетаШапка.Параметры.Представление = ДокументОбъект.Метаданные().Синоним + " № " + ОбщегоНазначенияЗК.ПолучитьНомерНаПечать(ДокументОбъект) + " от " + Формат(Дата,"ДЛФ=DD");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.НаименованиеПолное КАК НаименованиеОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация";
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.НаименованиеОрганизации = СокрЛП(Выборка.НаименованиеОрганизации);
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, СотрудникиОрганизаций.Наименование) КАК ФИОРаботника
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка = &Сотрудник";
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ОбластьМакетаШапка.Параметры,Выборка);
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета.КодДоходаСтраховыеВзносы В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПрокуроров), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенкаПрокуроров), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка))";
	Если Запрос.Выполнить().Пустой() Тогда
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("НетМатпомощи"));
		Возврат ТабДокумент
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДанныеДокумента", ДокументОбъект.РасчетСреднего.Выгрузить());
	Запрос.УстановитьПараметр("парамДатаС", ДокументОбъект.ПериодРасчетаСреднегоЗаработкаНачало);
	Запрос.УстановитьПараметр("парамДатаПо", КонецДня(ДокументОбъект.ПериодРасчетаСреднегоЗаработкаОкончание));
	Запрос.УстановитьПараметр("ДатаЗакона213ФЗ",ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(РасчетСреднего.БазовыйПериодНачало, МЕСЯЦ) КАК Период,
	|	РасчетСреднего.Результат,
	|	РасчетСреднего.СкидкаПоСтраховымВзносам
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	&ДанныеДокумента КАК РасчетСреднего
	|ГДЕ
	|	РасчетСреднего.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
	|	И (РасчетСреднего.Результат <> 0
	|			ИЛИ РасчетСреднего.СкидкаПоСтраховымВзносам <> 0)";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходахОбороты.Период КАК Период,
	|	СтраховыеВзносыСведенияОДоходахОбороты.СкидкаОборот КАК Скидка
	|ПОМЕСТИТЬ ВТДанныеУчетаСкидок
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(
	|			&парамДатаС,
	|			&парамДатаПо,
	|			Месяц,
	|			ФизЛицо = &ФизЛицо
	|				И Организация = &Организация
	|				И ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПрокуроров), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенкаПрокуроров), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка))) КАК СтраховыеВзносыСведенияОДоходахОбороты
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходахОбороты.Период >= &ДатаЗакона213ФЗ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ),
	|	СУММА(ЕСНСведенияОДоходах.Скидка)
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.ФизЛицо = &ФизЛицо
	|	И ЕСНСведенияОДоходах.Организация = &Организация
	|	И ЕСНСведенияОДоходах.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.МатпомощьПриРожденииРебенка))
	|	И ЕСНСведенияОДоходах.Период МЕЖДУ &парамДатаС И &парамДатаПо
	|	И ЕСНСведенияОДоходах.Период < &ДатаЗакона213ФЗ
	|	И ЕСНСведенияОДоходах.Скидка <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеУчетаСкидок.Период КАК Период
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	ВТДанныеУчетаСкидок КАК ДанныеУчетаСкидок
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеУчетаСкидок.Период
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеУчетаСкидок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	ЕСТЬNULL(ДанныеУчетаСкидок.Скидка, 0) Скидка,
	|	ЕСТЬNULL(ДанныеДокумента.Результат, 0) КАК Результат,
	|	ЕСТЬNULL(ДанныеДокумента.СкидкаПоСтраховымВзносам, 0) СкидкаПоСтраховымВзносам
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДокумента КАК ДанныеДокумента
	|		ПО Периоды.Период = ДанныеДокумента.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеУчетаСкидок КАК ДанныеУчетаСкидок
	|		ПО Периоды.Период = ДанныеУчетаСкидок.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("НетДанных"));
		Возврат ТабДокумент
	КонецЕсли;
	
	ТабДокумент.Вывести(Макет.ПолучитьОбласть("Заголовок"));
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрока.Параметры,Выборка);
		ТабДокумент.Вывести(ОбластьМакетаСтрока);
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // АнализУчтеннойВРасчетеСреднегоСкидки()

Функция РасчетСреднегоЗаработкаПособий2011(ДокументОбъект, ВыводитьСамостоятельныйОтчет = Истина, СтруктураПоказателей = Неопределено, ОсобоеОписаниеОплачиваемогоПериода = "") Экспорт
		
	Ссылка = ДокументОбъект.Ссылка;
	Организация = ДокументОбъект.Организация;
	ФизЛицо = ДокументОбъект.ФизЛицо;
	Сотрудник = ДокументОбъект.Сотрудник;
	Дата = ДокументОбъект.Дата;
	ДатаНачала = ДокументОбъект.ДатаНачала;
	ДатаОкончания = ДокументОбъект.ДатаОкончания;
	УчитыватьЗаработокПредыдущихСтрахователей = ДокументОбъект.УчитыватьЗаработокПредыдущихСтрахователей;
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента = МетаданныеДокумента.Имя;
	ДатаСобытия = ДокументОбъект.ДатаСобытия();
	ОграничиватьЗаработок = ДокументОбъект.ПриНачисленииПособияИспользоватьОграниченныйЗаработок();
	ОсобыйПорядокРасчетаСреднего = (Год(ДатаСобытия) = 2015 Или Год(ДатаСобытия) = 2016) И ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ФизЛицо, "ПостоянноПроживалВКрыму18Марта2014Года");

	УчитываемыхДнейВКалендарныхГодах = ПроведениеРасчетов.УчитываемыхДнейДляРасчетаСреднегоЗаработкаПособий2011(ДокументОбъект);
	ВыводитьИсключаемыеДни = ДокументОбъект.ЭтоПособиеПоМатеринству() И ДокументОбъект.ДатаСобытия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству() И ДокументОбъект.ДатаНазначенияПособия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоЗаработкаПособийС2011Года";
	
	// запоминаем области макета
	Макет = ПолучитьОбщийМакет("РасчетСреднегоЗаработкаПособийС2011Года");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Заголовок"); 
	ОбластьМакетаНеполноеВремя = Макет.ПолучитьОбласть("НеполноеВремя");
	ОбластьМакетаОкончание = Макет.ПолучитьОбласть("Окончание");
	ОбластьМакетаЗаголовокНачислений = Макет.ПолучитьОбласть("ЗаголовокНачислений"); 
	ОбластьМакетаЗаголовокТаблицыДнейБолезниУходаЗаДетьми = Макет.ПолучитьОбласть("ЗаголовокТаблицыДнейБолезниУходаЗаДетьми"); 
	ОбластьМакетаЗаголовокТаблицыСтрахователь = Макет.ПолучитьОбласть(?(ВыводитьИсключаемыеДни,"ЗаголовокТаблицыСтрахователь","ДлинныйЗаголовокТаблицыСтрахователь")); 
	//ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыСтрахователь"); 
	ОбластьМакетаСтрокаДнейБолезниУходаЗаДетьми = Макет.ПолучитьОбласть("СтрокаЗаработкаДнейБолезниУходаЗаДетьми");
	ОбластьМакетаСтрокаСтрахователь = Макет.ПолучитьОбласть(?(ВыводитьИсключаемыеДни,"СтрокаЗаработкаСтрахователь","ДлиннаяСтрокаЗаработкаСтрахователь"));
	ОбластьМакетаМаксимальныйСреднийПоМатеринству = Макет.ПолучитьОбласть("МаксимальныйСреднийПоМатеринству");
	ОбластьМакетаМаксимальныйСреднийПриОсобомПорядкеРасчета = Макет.ПолучитьОбласть("МаксимальныйСреднийПриОсобомПорядкеРасчета");
	Если ОсобыйПорядокРасчетаСреднего Тогда
		ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыНачалоБезОграничений"); 
		ОбластьМакетаСтрока = Макет.ПолучитьОбласть("СтрокаЗаработкаНачалоБезОграничений");
		ОбластьМакетаСередина = Макет.ПолучитьОбласть("СерединаБезОграничений");
		ОбластьМакетаТекущийИтог = Макет.ПолучитьОбласть("ТекущийИтогБезОграничений");
	ИначеЕсли ОграничиватьЗаработок Тогда
		ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыНачало"); 
		ОбластьМакетаСтрока = Макет.ПолучитьОбласть("СтрокаЗаработкаНачало");
		ОбластьМакетаСередина = Макет.ПолучитьОбласть("Середина");
		ОбластьМакетаТекущийИтог = Макет.ПолучитьОбласть("ТекущийИтог");
	Иначе
		ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыНачалоБезОграничений"); 
		ОбластьМакетаСтрока = Макет.ПолучитьОбласть("СтрокаЗаработкаНачалоБезОграничений");
		ОбластьМакетаСередина = Макет.ПолучитьОбласть("СерединаБезОграничений");
		ОбластьМакетаТекущийИтог = Макет.ПолучитьОбласть("ТекущийИтогБезОграничений");
	КонецЕсли;
	
	// Начинаем формировать выходной документ
	ОбластьМакетаСередина.Параметры.ДатаНачалаСобытия = Формат(ДатаСобытия, "ДФ=dd.MM.yyyy");
	ОбластьМакетаШапка.Параметры.Представление = МетаданныеДокумента.Синоним + " № " + ОбщегоНазначенияЗК.ПолучитьНомерНаПечать(ДокументОбъект) + " от " + Формат(Дата,"ДЛФ=DD");
	ОбластьМакетаШапка.Параметры.ОписаниеОплачиваемогоПериода = ?(ЗначениеЗаполнено(ОсобоеОписаниеОплачиваемогоПериода), ОсобоеОписаниеОплачиваемогоПериода, "с " + Формат(ДатаНачала, "ДФ=dd.MM.yyyy") + " по " + Формат(ДатаОкончания,"ДФ=dd.MM.yyyy"));
	
	ОписаниеРасчетныхЛет = "Не указаны";
	ВсегоСтрок = ДокументОбъект.ГодыРасчетаСреднего2011.Количество();
	Если ВсегоСтрок = 2 Тогда
		ОписаниеРасчетныхЛет = Формат(ДокументОбъект.ГодыРасчетаСреднего2011[0].Год,"ЧЦ=4; ЧГ=0") + " и " + Формат(ДокументОбъект.ГодыРасчетаСреднего2011[1].Год,"ЧЦ=4; ЧГ=0");
	ИначеЕсли ВсегоСтрок = 1 Тогда	
		ОписаниеРасчетныхЛет = Формат(ДокументОбъект.ГодыРасчетаСреднего2011[0].Год,"ЧЦ=4; ЧГ=0");
	КонецЕсли;
	ОбластьМакетаШапка.Параметры.РасчетныеГоды = ОписаниеРасчетныхЛет;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаСобытия", ДатаСобытия);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ДатаЗакона213ФЗ", ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	Запрос.УстановитьПараметр("НаименованиеОрганизации", "");
	Запрос.УстановитьПараметр("ВидРасчета", ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.СреднийЗаработок, "ПоЗаработкуПособийС2011"));

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.НаименованиеПолное КАК НаименованиеОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.НаименованиеОрганизации = СокрЛП(Выборка.НаименованиеОрганизации);
		Запрос.УстановитьПараметр("НаименованиеОрганизации", СокрЛП(Выборка.НаименованиеОрганизации));
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МинимальнаяОплатаТрудаРФСрезПоследних.Размер
	|ПОМЕСТИТЬ ВТРазмерММОТ
	|ИЗ
	|	РегистрСведений.МинимальнаяОплатаТрудаРФ.СрезПоследних(&ДатаСобытия, ) КАК МинимальнаяОплатаТрудаРФСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &ДатаСобытия
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.СокращенноеРабочееВремя
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|						ТОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОГДА РаботникиОрганизаций.ГрафикРаботы.СокращенноеРабочееВремя
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|			ТОГДА РаботникиОрганизаций.ГрафикРаботы.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Доля
	|ПОМЕСТИТЬ ВТНеполноеВремя
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, СотрудникиОрганизаций.Наименование) КАК ФИОРаботника,
	|	СотрудникиОрганизаций.Код КАК ТабельныйНомер,
	|	ЕСТЬNULL(НеполноеВремя.Доля, 1) КАК КоэффициентВремени,
	|	ЕСТЬNULL(МРОТ.Размер, 0) КАК МРОТ,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(МРОТ.Размер, 0) * ЕСТЬNULL(НеполноеВремя.Доля, 1) * 24 / 730 КАК ЧИСЛО(15, 2)) КАК СреднийМРОТ
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТ КАК МРОТ
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеполноеВремя КАК НеполноеВремя
	|		ПО (ИСТИНА)
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка = &Сотрудник";
	
	Выборка = Запрос.Выполнить().Выбрать();
	КоэффициентВремени = 1;
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ОбластьМакетаШапка.Параметры,Выборка);
		ЗаполнитьЗначенияСвойств(ОбластьМакетаСередина.Параметры,Выборка);
		ЗаполнитьЗначенияСвойств(ОбластьМакетаНеполноеВремя.Параметры,Выборка);
		ЗаполнитьЗначенияСвойств(ОбластьМакетаОкончание.Параметры,Выборка);
		КоэффициентВремени = Выборка.КоэффициентВремени;
	КонецЕсли;
	
	Если ВыводитьСамостоятельныйОтчет Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодНачало, ГОД) < &ДатаЗакона213ФЗ
	|			ТОГДА &ДатаЗакона213ФЗ
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодНачало, ГОД)
	|	КОНЕЦ КАК ДатаОграниченияЗаработка,
	|	ГОД(РасчетСреднегоЗаработка.БазовыйПериодНачало) КАК РасчетныйГод
	|ПОМЕСТИТЬ ВТДанныеРасчетаСреднего2011
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|ГДЕ
	|	РасчетСреднегоЗаработка.Регистратор = &Регистратор
	|	И РасчетСреднегоЗаработка.ВидРасчета = &ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПредельнаяВеличинаБазыСтраховыхВзносов.РазмерФСС, 0) КАК Размер,
	|	ДатыРегистра.РасчетныйГод
	|ПОМЕСТИТЬ ВТПредельнаяВеличинаЗаработкаПоГодам
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДанныеРегистра.РасчетныйГод КАК РасчетныйГод,
	|		ДанныеРегистра.ДатаОграниченияЗаработка КАК ДатаОграниченияЗаработка,
	|		МАКСИМУМ(ПредельнаяВеличинаБазыСтраховыхВзносов.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТДанныеРасчетаСреднего2011 КАК ДанныеРегистра
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|			ПО ДанныеРегистра.ДатаОграниченияЗаработка >= ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистра.ДатаОграниченияЗаработка,
	|		ДанныеРегистра.РасчетныйГод) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|		ПО ДатыРегистра.ПериодРегистра = ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.РасчетныйГод КАК РасчетныйГод,
	|	ДанныеДокумента.Заработок КАК Заработок,
	|	ДанныеДокумента.ДнейБолезниУходаЗаДетьми,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Страхователь = ЗНАЧЕНИЕ(Справочник.Работодатели.ТекущийРаботодатель)
	|			ТОГДА &НаименованиеОрганизации
	|		ИНАЧЕ ДанныеДокумента.Страхователь.Наименование
	|	КОНЕЦ КАК Страхователь,
	|	ЕСТЬNULL(ПредельнаяВеличина.Размер, 0) КАК ПредельнаяВеличина
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.РасчетСреднего2011 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличинаЗаработкаПоГодам КАК ПредельнаяВеличина
	|		ПО ДанныеДокумента.РасчетныйГод = ПредельнаяВеличина.РасчетныйГод
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетныйГод,
	|	Страхователь
	|ИТОГИ
	|	СУММА(Заработок),
	|	МАКСИМУМ(ПредельнаяВеличина)
	|ПО
	|	РасчетныйГод";
	
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокНачислений);
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	Если ВыводитьИсключаемыеДни Тогда
		ТабДокумент.Присоединить(ОбластьМакетаЗаголовокТаблицыДнейБолезниУходаЗаДетьми);
	КонецЕсли;
	Если УчитыватьЗаработокПредыдущихСтрахователей Тогда
		ТабДокумент.Присоединить(ОбластьМакетаЗаголовокТаблицыСтрахователь);
	КонецЕсли;
	
	ВсегоЗаработка = 0;
	СтрокиВыводили = Ложь;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.НачислениеПоБольничномуЛисту", "Документ." + ИмяДокумента);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			Если СтрокиВыводили Тогда
				ТабДокумент.Вывести(ОбластьМакетаТекущийИтог);
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ОбластьМакетаТекущийИтог.Параметры,Выборка);
			Если ОсобыйПорядокРасчетаСреднего Тогда
				ВсегоЗаработка = ВсегоЗаработка + Выборка.Заработок;
			ИначеЕсли ОграничиватьЗаработок Тогда
				ВсегоЗаработка = ВсегоЗаработка + Мин(Выборка.ПредельнаяВеличина, Выборка.Заработок);
			Иначе
				ВсегоЗаработка = ВсегоЗаработка + Выборка.Заработок;
			КонецЕсли;
		Иначе
			СтрокиВыводили = Истина;
			ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрока.Параметры,Выборка);
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			Если ВыводитьИсключаемыеДни Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаДнейБолезниУходаЗаДетьми.Параметры,Выборка);
				ТабДокумент.Присоединить(ОбластьМакетаСтрокаДнейБолезниУходаЗаДетьми);
			КонецЕсли;
			Если УчитыватьЗаработокПредыдущихСтрахователей Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМакетаСтрокаСтрахователь.Параметры,Выборка);
				ТабДокумент.Присоединить(ОбластьМакетаСтрокаСтрахователь);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ТабДокумент.Вывести(ОбластьМакетаТекущийИтог);
	ОбластьМакетаСередина.Параметры.ВсегоЗаработка = Формат(ВсегоЗаработка, "ЧЦ=15; ЧДЦ=2; ЧН=0.00");
	ОбластьМакетаСередина.Параметры.УчитываемыхДнейВКалендарныхГодах = УчитываемыхДнейВКалендарныхГодах;
	ОбластьМакетаСередина.Параметры.Средний = Формат(Окр(ВсегоЗаработка / УчитываемыхДнейВКалендарныхГодах, 2), "ЧЦ=15; ЧДЦ=2; ЧН=0.00");
	ТабДокумент.Вывести(ОбластьМакетаСередина);
	Если КоэффициентВремени < 1 Тогда
		ТабДокумент.Вывести(ОбластьМакетаНеполноеВремя);
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьМакетаОкончание);
	
	СреднийПредельный = 0;
	Если ОсобыйПорядокРасчетаСреднего И ОграничиватьЗаработок Тогда
		Если Год(ДатаСобытия) = 2015 Тогда
			СреднийПредельный = 1632.88;
		Иначе
			СреднийПредельный = Окр((624000 + 670000) / 730, 2);
		КонецЕсли;
		ОбластьМакетаМаксимальныйСреднийПриОсобомПорядкеРасчета.Параметры.ГодСобытия = Формат(Год(ДатаСобытия), "ЧГ=0");
		ОбластьМакетаМаксимальныйСреднийПриОсобомПорядкеРасчета.Параметры.СреднийПредельный = Формат(СреднийПредельный, "ЧЦ=15; ЧДЦ=2; ЧН=0.00");
		ТабДокумент.Вывести(ОбластьМакетаМаксимальныйСреднийПриОсобомПорядкеРасчета);
	ИначеЕсли ВыводитьИсключаемыеДни Тогда
		Год1 = Год(ДатаСобытия) - 2;
		Год2 = Год(ДатаСобытия) - 1;
		ОбластьМакетаМаксимальныйСреднийПоМатеринству.Параметры.ПредшествующиеГоды = Формат(Год1,"ЧЦ=4; ЧГ=0") + " и " + Формат(Год2,"ЧЦ=4; ЧГ=0");
		ОбластьМакетаМаксимальныйСреднийПоМатеринству.Параметры.Год1 = Формат(Год1,"ЧЦ=4; ЧГ=0");
		ОбластьМакетаМаксимальныйСреднийПоМатеринству.Параметры.Год2 = Формат(Год2,"ЧЦ=4; ЧГ=0");
		Величина1 = РегистрыСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.ПолучитьПоследнее(ДобавитьМесяц(НачалоГода(ДатаСобытия),-12) - 1).РазмерФСС;
		Величина2 = РегистрыСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.ПолучитьПоследнее(НачалоГода(ДатаСобытия) - 1).РазмерФСС;
		ОбластьМакетаМаксимальныйСреднийПоМатеринству.Параметры.Величина1 = Величина1;
		ОбластьМакетаМаксимальныйСреднийПоМатеринству.Параметры.Величина2 = Величина2;
		СреднийПредельный = Окр((Величина1 + Величина2)/730, 2);
		ОбластьМакетаМаксимальныйСреднийПоМатеринству.Параметры.СреднийПредельный = Формат(СреднийПредельный, "ЧЦ=15; ЧДЦ=2; ЧН=0.00");
		ТабДокумент.Вывести(ОбластьМакетаМаксимальныйСреднийПоМатеринству);
	КонецЕсли;
	
	СтруктураПоказателей = Новый Структура("Средний, СреднийПредельный, ЗаработокВсего", Окр(ВсегоЗаработка / УчитываемыхДнейВКалендарныхГодах, 2), СреднийПредельный, ВсегоЗаработка);
	
	Возврат ТабДокумент;
	
КонецФункции // РасчетСреднегоЗаработкаПособий2011()

// Для переданного документа формирует печатную форму Т-13
//
// Параметры
//  ДокументОбъект
//	СписокСотрудников
//
// Возвращаемое значение:
//   табличный документ
//
Функция СформироватьПечатнуюФормуТ13(ДокументОбъект, СписокСотрудников) Экспорт

	Организация = ДокументОбъект.Организация;
	ПодразделениеОрганизации = ДокументОбъект.ПодразделениеОрганизации;
	
	ФильтрСоответствия = Новый Соответствие;
	
	ФильтрСоответствия.Вставить("Организация", Организация);
	ФильтрСоответствия.Вставить("Подразделение", ПодразделениеОрганизации);
	
	ФильтрСоответствия.Вставить("ОтборОрганизации", ЗначениеЗаполнено(Организация));
	ФильтрСоответствия.Вставить("ОтборПодразделения", ЗначениеЗаполнено(ПодразделениеОрганизации));
	
	ФильтрСоответствия.Вставить("ВидСравненияОрганизации", ВидСравнения.Равно);
	ФильтрСоответствия.Вставить("ВидСравненияПодразделения", ВидСравнения.ВИерархии);

	Если ДокументОбъект.Метаданные().Реквизиты.Найти("ДатаНачалаПериода") <> Неопределено Тогда
		ФильтрСоответствия.Вставить("ДатаНачала", ДокументОбъект.ДатаНачалаПериода);
		ФильтрСоответствия.Вставить("ДатаОкончания", ДокументОбъект.ДатаОкончанияПериода);
	Иначе
		ФильтрСоответствия.Вставить("ПериодРегистрации", ДокументОбъект.ПериодРегистрации);
	КонецЕсли;
	ФильтрСоответствия.Вставить("ДатаЗаполнения",    ДокументОбъект.Дата);
	ФильтрСоответствия.Вставить("НомерДокумента",    ДокументОбъект.Номер);
	ФильтрСоответствия.Вставить("ОтветственноеЛицо", ДокументОбъект.Ответственный);
	
	Если СписокСотрудников.Количество() = 1 Тогда
		ФильтрСоответствия.Вставить("Работник", СписокСотрудников[0]);
		ФильтрСоответствия.Вставить("ВидСравненияРаботника", ВидСравнения.Равно);
		ФильтрСоответствия.Вставить("ОтборРаботника", Истина);
	ИначеЕсли СписокСотрудников.Количество() > 1 Тогда
		ФильтрСоответствия.Вставить("Работник", СписокСотрудников);
		ФильтрСоответствия.Вставить("ВидСравненияРаботника", ВидСравнения.ВСписке);
		ФильтрСоответствия.Вставить("ОтборРаботника", Истина);
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Т13";
	ТабДокумент.АвтоМасштаб        = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.Очистить();
	
	Отчет = Отчеты.УнифицированнаяФормаТ13.Создать();
	
	Отчет.УстановитьФильтр(ФильтрСоответствия);
	ТекстОшибки = "";
	Отчет.СформироватьОтчет(ТабДокумент, "Табель", ТекстОшибки);
	Если ТекстОшибки <> "" Тогда
		РаботаСДиалогами.ВывестиПредупреждение(ТекстОшибки);
		Возврат Неопределено;
	Иначе
		Возврат ТабДокумент;
	КонецЕсли;
	
КонецФункции // СформироватьПечатнуюФорму()

Функция ПечатьЗаявленияОПредоставленииДополнительныхВыходныхДней(Ссылка, Дата, Организация, Сотрудник, Физлицо, ДатаНачала, ДатаОкончания) Экспорт

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ТекущийДокумент",		Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента",			Дата);
	Запрос.УстановитьПараметр("Сотрудник",				Сотрудник);
	Запрос.УстановитьПараметр("Физлицо",				Физлицо);
	Запрос.УстановитьПараметр("ДатаНачала",				ДатаНачала);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",Организация);
	
	Запрос.Текст = ФормированиеПечатныхФормЗК.ПолучитьТекстЗапросаПоОтветственнымЛицам(
		"ДатаДокумента",
		"ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
		|И СтруктурнаяЕдиница = &СтруктурнаяЕдиница");
	Запрос.Выполнить();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(ОплатаПоСреднемуЗаработкуНачисления.НормаДней) КАК ОтработаноДней
	|ПОМЕСТИТЬ ВТДни
	|ИЗ
	|	Документ.ОплатаПоСреднемуЗаработку.Начисления КАК ОплатаПоСреднемуЗаработкуНачисления
	|ГДЕ
	|	ОплатаПоСреднемуЗаработкуНачисления.Ссылка = &ТекущийДокумент
	|	И ОплатаПоСреднемуЗаработкуНачисления.ВидРасчета = ОплатаПоСреднемуЗаработкуНачисления.Ссылка.ВидРасчета
	|	И НЕ ОплатаПоСреднемуЗаработкуНачисления.Сторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплатаПоСреднемуЗаработку.Дата КАК ДатаДок,
	|	ЕСТЬNULL(ЕСТЬNULL(ФИОФизЛицСрезПоследнихРаботника.Фамилия + "" "" + ФИОФизЛицСрезПоследнихРаботника.Имя + "" "" + ФИОФизЛицСрезПоследнихРаботника.Отчество, ОплатаПоСреднемуЗаработку.Сотрудник.Наименование), """") КАК Работник,
	|	ОплатаПоСреднемуЗаработку.Физлицо.Пол КАК ПолСотрудника,
	|	ЕСТЬNULL(ОплатаПоСреднемуЗаработку.Организация.НаименованиеПолное, """") КАК НазваниеОрганизации,
	|	ЕСТЬNULL(ОтветственныеЛицаОрганизаций.Должность, """") КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(ОтветственныеЛицаОрганизаций.НаименованиеОтветственногоЛицаПолное, """") КАК ФИОРуководителя,
	|	ЕСТЬNULL(Дни.ОтработаноДней, ВЫБОР
	|			КОГДА ОплатаПоСреднемуЗаработку.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(ОплатаПоСреднемуЗаработку.ДатаНачала, ОплатаПоСреднемуЗаработку.ДатаОкончания, ДЕНЬ) + 1
	|		КОНЕЦ) КАК КоличествоДнейУхода,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА СрезПоследнихРаботника.ПериодЗавершения <= &ДатаНачала
	|					И СрезПоследнихРаботника.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА СрезПоследнихРаботника.ПодразделениеОрганизацииЗавершения.Наименование
	|			ИНАЧЕ СрезПоследнихРаботника.ПодразделениеОрганизации.Наименование
	|		КОНЕЦ, """") КАК ПодразделениеРаботника,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА СрезПоследнихРаботника.ПериодЗавершения <= &ДатаНачала
	|					И СрезПоследнихРаботника.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА СрезПоследнихРаботника.ДолжностьЗавершения.Наименование
	|			ИНАЧЕ СрезПоследнихРаботника.Должность.Наименование
	|		КОНЕЦ, """") КАК Должность
	|ИЗ
	|	Документ.ОплатаПоСреднемуЗаработку КАК ОплатаПоСреднемуЗаработку
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК ОтветственныеЛицаОрганизаций
	|		ПО ОплатаПоСреднемуЗаработку.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, Физлицо = &Физлицо) КАК ФИОФизЛицСрезПоследнихРаботника
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачала, Сотрудник = &Сотрудник) КАК СрезПоследнихРаботника
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДни КАК Дни
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ОплатаПоСреднемуЗаработку.Ссылка = &ТекущийДокумент";
    Запрос.Текст = СтрЗаменить(ТекстЗапроса,"Документ.ОплатаПоСреднемуЗаработку", "Документ." + Ссылка.Метаданные().Имя);
	
	ТабДокумент = Новый ТабличныйДокумент;;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеОПредоставленииДополнительныхВыходныхДней";

	Макет = ПолучитьОбщийМакет("ЗаявлениеОПредоставленииДополнительныхВыходныхДней");
	
	ОбластьШапкаВерх 			= Макет.ПолучитьОбласть("ШапкаВерх");
	ОбластьШапкаСередина		= Макет.ПолучитьОбласть("ШапкаСередина");
	ОбластьШапкаНиз				= Макет.ПолучитьОбласть("ШапкаНиз");
	ОбластьДиректор				= Макет.ПолучитьОбласть("Директор");
	ОбластьДиректорБезДанных	= Макет.ПолучитьОбласть("ДиректорБезДанных");
	ОбластьСотрудник			= Макет.ПолучитьОбласть("Сотрудник");
	
 	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ТабДокумент.Вывести(ОбластьШапкаВерх);
	
	Если ЗначениеЗаполнено(Выборка.ФИОРуководителя) Тогда
		
		ФИОРуководителя = "";
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Выборка.ФИОРуководителя, 3, , ФИОРуководителя);
		ШаблонДиректор = "%1 (%2, %3)";
		СтрокаДиректор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонДиректор, ФИОРуководителя, Выборка.ДолжностьРуководителя, Выборка.НазваниеОрганизации);
		
		ОбластьДиректор.Параметры.Директор = СтрокаДиректор;
		ТабДокумент.Вывести(ОбластьДиректор);
		
	Иначе
		
		ТабДокумент.Вывести(ОбластьДиректорБезДанных);
		
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьШапкаСередина);
	
	Если ЗначениеЗаполнено(Выборка.Работник) Тогда
		
		ФИОСотрудника = "";
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Выборка.Работник, 2, Выборка.ПолСотрудника, ФИОСотрудника);
		ШаблонСотрудник = НСтр("ru = 'От %1 (%2, %3)'");
		СтрокаСотрудник = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСотрудник, ФИОСотрудника, Выборка.Должность, Выборка.ПодразделениеРаботника);
		
		ОбластьСотрудник.Параметры.Сотрудник = СтрокаСотрудник;
		ТабДокумент.Вывести(ОбластьСотрудник);
		
	Иначе
		
		ТабДокумент.Вывести(ОбластьДиректорБезДанных);
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ОбластьШапкаНиз.Параметры, Выборка);
	
	ОписаниеДней = "";
	Если ДатаНачала = ДатаОкончания Тогда
		ОписаниеДней = Формат(ДатаНачала,"ДЛФ=DD");
	ИначеЕсли НачалоМесяца(ДатаНачала) = НачалоМесяца(ДатаОкончания) Тогда
		Сч = ДатаНачала;
		Пока Сч < ДатаОкончания Цикл
			ОписаниеДней = ОписаниеДней + ?(ЗначениеЗаполнено(ОписаниеДней),", ","") + Формат(Сч,"ДФ=д");
			Сч = КонецДня(Сч) + 1
		КонецЦикла;
		ОписаниеДней = ОписаниеДней + ", " + Формат(ДатаОкончания,"ДЛФ=DD");
	Иначе
		ОписаниеДней = "с " + Формат(ДатаНачала,"ДЛФ=DD") + " по " + Формат(ДатаОкончания,"ДЛФ=DD");
	КонецЕсли;
	ОбластьШапкаНиз.Параметры.ДниУхода = ОписаниеДней;
	
	ТабДокумент.Вывести(ОбластьШапкаНиз);
	
	Возврат ТабДокумент
	
КонецФункции

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////

Процедура ПеренестиПорядок(Настройки, Структура)
	
	ТиповыеОтчеты.СкопироватьЭлементы(Настройки.Порядок, Структура.Порядок, , ложь);
	
	Структура.Порядок.Элементы.Очистить();
	
	Структура.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
	
	Если Структура.Структура.Количество() <> 0 тогда
		ПеренестиПорядок(Настройки, Структура.Структура[0]);
	КонецЕсли;
	
КонецПроцедуры //ПеренестиУпорядочивание()

// Копирует упорядочивания из элемента структуры настройки СКД в отчет
//
// Параметры:
//  Настройка - настройки схемы компоновки данных
//
Процедура ПеренестиПорядокВОтчет(Настройки) Экспорт
	
	Если Настройки.Структура.Количество() <> 0 тогда
		
		Если ТипЗнч(Настройки.Структура[0]) = Тип("ТаблицаКомпоновкиДанных") тогда
			
			Если Настройки.Структура[0].Строки.Количество() <> 0 тогда
				
				ПеренестиПорядок(Настройки, Настройки.Структура[0].Строки[0]);
				
			КонецЕсли;
			
			Если Настройки.Структура[0].Колонки.Количество() <> 0 тогда
				
				ПеренестиПорядок(Настройки, Настройки.Структура[0].Колонки[0]);
				ПеренестиПорядок(Настройки, Настройки.Структура[0].Колонки[1]);
				ПеренестиПорядок(Настройки, Настройки.Структура[0].Колонки[2]);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Настройки.Структура[0]) = Тип("ГруппировкаТаблицыКомпоновкиДанных") тогда
			
			ПеренестиПорядок(Настройки, Настройки.Структура[0].Строки[0]);
			
		ИначеЕсли ТипЗнч(Настройки.Структура[0]) = Тип("ДиаграммаКомпоновкиДанных") тогда
			
			Если Настройки.Структура[0].Серии.Количество() <> 0 тогда
				
				ПеренестиПорядок(Настройки, Настройки.Структура[0].Серии[0]);
				
			КонецЕсли;
			
			Если Настройки.Структура[0].Точки.Количество() <> 0 тогда
				
				ПеренестиПорядок(Настройки, Настройки.Структура[0].Точки[0]);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры //ПеренестиВсеУпорядочиванияВОтчет()
