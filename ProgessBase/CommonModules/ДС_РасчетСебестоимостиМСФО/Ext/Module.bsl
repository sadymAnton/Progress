Функция ПолучитьМассивСтатейТЭР(СтруктураШапкиДокумента,ВидСтатьи)
	
	// is ЯннуровВФ нач 20140702 0И-001466
	//Запрос =  Новый Запрос("ВЫБРАТЬ
	//					   |	ПРГ_СтатьиТЭРСрезПоследних.СтатьяЗатрат
	//					   |ИЗ
	//					   |	РегистрСведений.ПРГ_СтатьиТЭР.СрезПоследних(
	//					   |			&ДатКон,
	//					   |			Организация = &Организация
	//					   |				И ВидСтатьи = &ВидСтатьи) КАК ПРГ_СтатьиТЭРСрезПоследних
	//					   |ГДЕ
	//					   |	ПРГ_СтатьиТЭРСрезПоследних.Использование");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ис_СтатьиТЭРМСФОСрезПоследних.СтатьяЗатрат,
	|	ЛОЖЬ КАК НеИспользоватьПодразделение
	|ИЗ
	|	РегистрСведений.ис_СтатьиТЭРМСФО.СрезПоследних(
	|			&ДатКон,
	|			Организация = &Организация
	|				И ВидСтатьи = &ВидСтатьи) КАК ис_СтатьиТЭРМСФОСрезПоследних
	|ГДЕ
	|	ис_СтатьиТЭРМСФОСрезПоследних.СтатьяЗатрат <> ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)";
	// is ЯннуровВФ кон 20140702 
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ВидСтатьи",ВидСтатьи);
	Запрос.УстановитьПараметр("ДатКон",КонецМесяца(СтруктураШапкиДокумента.Дата));
	
	// is ЯннуровВФ нач 20150325 
	//Массив = Новый Массив;
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Массив.Добавить(Выборка.СтатьяЗатрат);
	//КонецЦикла;	
	//
	//возврат Массив;
	возврат Запрос.Выполнить().Выгрузить();
	// is ЯннуровВФ кон 20150325 
КонецФункции	
 
Функция ПолучитьЗапросПоНезавершенномуПроизводству(СтруктураШапкиДокумента)
	Запрос  = Новый Запрос("ВЫБРАТЬ
	                       |	Незавершенка.Подразделение,
	                       |	Незавершенка.СчетУчета,
	                       |	Незавершенка.СтатьяЗатрат,
	                       |	Незавершенка.НоменклатурнаяГруппа,
	                       |	Незавершенка.Заказ,
	                       |	Незавершенка.Затрата,
	                       |	Незавершенка.ХарактеристикаЗатраты,
	                       |	СУММА(Незавершенка.Количество) КАК Количество,
	                       |	СУММА(Незавершенка.Сумма) КАК Сумма,
	                       |	Незавершенка.СерияЗатраты,
	                       |	Незавершенка.Организация
	                       |ИЗ
	                       |	(ВЫБРАТЬ
	                       |		НезавершенноеПроизводство.Подразделение КАК Подразделение,
	                       |		НезавершенноеПроизводство.СчетУчета КАК СчетУчета,
	                       |		НезавершенноеПроизводство.СтатьяЗатрат КАК СтатьяЗатрат,
	                       |		НезавершенноеПроизводство.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                       |		НезавершенноеПроизводство.Заказ КАК Заказ,
	                       |		НезавершенноеПроизводство.Затрата КАК Затрата,
	                       |		НезавершенноеПроизводство.ХарактеристикаЗатраты КАК ХарактеристикаЗатраты,
	                       |		НезавершенноеПроизводство.КоличествоОстаток КАК Количество,
	                       |		НезавершенноеПроизводство.СтоимостьОстаток КАК Сумма,
	                       |		НезавершенноеПроизводство.СерияЗатраты КАК СерияЗатраты,
	                       |		НезавершенноеПроизводство.Организация КАК Организация
	                       |	ИЗ
	                       |		РегистрНакопления.НезавершенноеПроизводствоМеждународныйУчет.Остатки(
	                       |				&ДатаКонца,
	                       |				СтатьяЗатрат В (&МассивЗатрат)
	                       |					И Организация = &Организация) КАК НезавершенноеПроизводство
						   // is ЯннуровВФ нач 20150325
						   //|	
						   //|	ОБЪЕДИНИТЬ ВСЕ
						   //|	
						   //|	ВЫБРАТЬ
						   //|		ВЫБОР
						   //|			КОГДА ЗатратыНаВыпуск.ПодразделениеНЗП = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
						   //|				ТОГДА ЗатратыНаВыпуск.Подразделение
						   //|			ИНАЧЕ ЗатратыНаВыпуск.ПодразделениеНЗП
						   //|		КОНЕЦ,
						   //|		ЗатратыНаВыпуск.СчетУчета,
						   //|		ЗатратыНаВыпуск.СтатьяЗатрат,
						   //|		ВЫБОР
						   //|			КОГДА ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.Пустаяссылка)
						   //|				ТОГДА ЗатратыНаВыпуск.НоменклатурнаяГруппа
						   //|			ИНАЧЕ ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП
						   //|		КОНЕЦ,
						   //|		ЗатратыНаВыпуск.ЗаказНЗП,
						   //|		ЗатратыНаВыпуск.Затрата,
						   //|		ЗатратыНаВыпуск.ХарактеристикаЗатраты,
						   //|		-1 * ЗатратыНаВыпуск.КоличествоОборот,
						   //|		-1 * ЗатратыНаВыпуск.СуммаОборот,
						   //|		ЗатратыНаВыпуск.СерияЗатраты,
						   //|		ЗатратыНаВыпуск.Организация
						   //|	ИЗ
						   //|		РегистрНакопления.ЗатратыНаВыпускПродукцииМеждународныйУчет.Обороты(
						   //|				&ДатаНачала,
						   //|				&ДатаКонца,
						   //|				,
						   //|				СтатьяЗатрат В (&МассивЗатрат)
						   //|					И Организация = &Организация) КАК ЗатратыНаВыпуск
						   // is ЯннуровВФ кон 20150325
						   |) КАК Незавершенка
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	Незавершенка.Подразделение,
	                       |	Незавершенка.Затрата,
	                       |	Незавершенка.Заказ,
	                       |	Незавершенка.НоменклатурнаяГруппа,
	                       |	Незавершенка.СтатьяЗатрат,
	                       |	Незавершенка.СчетУчета,
	                       |	Незавершенка.ХарактеристикаЗатраты,
	                       |	Незавершенка.СерияЗатраты,
	                       |	Незавершенка.Организация");
  				   
  Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
  Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(СтруктураШапкиДокумента.Дата));
  Запрос.УстановитьПараметр("ДатаКонца",КонецМесяца(СтруктураШапкиДокумента.Дата)+1);
  
  возврат Запрос;
КонецФункции	

//начало изменений Ожиганов А. 21.03.2017 63547 распределение воды аналогично газу и электричеству 
Функция ПолучитьПостроительЗапросаПОТэрам2_1(СтруктураШапкиДокумента)
//конец изменений 	
	ПЗ = Новый ПостроительЗапроса;
	ПЗ.Текст ="ВЫБРАТЬ
	          |	Нормы.Газ КАК НормаГаз,
	          |	Нормы.Электричество КАК НормаЭлектричество,
	          |	Нормы.Вода КАК НормаВода,
	          |	Нормы.НоменклатурнаяГруппа,
	          |	Нормы.Подразделение,
	          |	СУММА(Нормы.Газ * ОтрабМашиноЧасы.МашиноЧасы) КАК ВсегоГаз,
	          |	СУММА(Нормы.Электричество * ОтрабМашиноЧасы.МашиноЧасы) КАК ВсегоЭлектричество,
			  // is ЯннуровВФ нач 20140711
	          //|	СУММА(Нормы.Вода * Нормы.Вода) КАК ВсегоВода,
	          |	СУММА(Нормы.Вода * ОтрабМашиноЧасы.МашиноЧасы) КАК ВсегоВода,
			  // is ЯннуровВФ кон 20140711
	          |	ОтрабМашиноЧасы.МашиноЧасы,
	          |	Нормы.Организация
	          |ПОМЕСТИТЬ ТаблНорм
	          |ИЗ
	          |	Документ.ПРГ_ФактическиОтработанныеМашиноЧасы.Машиночасы КАК ОтрабМашиноЧасы
	          |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПРГ_НормыПотребленияПоЛиниям.СрезПоследних(&ДатаКон, Организация = &Организация) КАК Нормы
	          |		ПО ОтрабМашиноЧасы.Подразделение = Нормы.Подразделение
	          |			И ОтрабМашиноЧасы.НоменклатурнаяГруппа = Нормы.НоменклатурнаяГруппа
	          |ГДЕ
	          |	ОтрабМашиноЧасы.Ссылка.Организация = &Организация
	          |	И ОтрабМашиноЧасы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	          |	И ОтрабМашиноЧасы.Ссылка.Проведен
	          |
	          |СГРУППИРОВАТЬ ПО
	          |	Нормы.НоменклатурнаяГруппа,
	          |	Нормы.Подразделение,
	          |	Нормы.Газ,
	          |	Нормы.Электричество,
	          |	Нормы.Вода,
	          |	ОтрабМашиноЧасы.МашиноЧасы,
	          |	Нормы.Организация
	          |;
	          |
	          |////////////////////////////////////////////////////////////////////////////////
	          |ВЫБРАТЬ
	          |	ВыпускПродукции.Подразделение КАК Подразделение,
	          |	ВыпускПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	          |	ВыпускПродукции.КоличествоОборот КАК КоличествоПродукции,
	          |	ТаблНорм.НормаГаз КАК НормаГаз,
	          |	ТаблНорм.НормаЭлектричество КАК НормаЭлектричество,
	          |	ТаблНорм.НормаВода КАК НормаВода,
	          |	ТаблНорм.ВсегоГаз КАК ВсегоГаз,
	          |	ТаблНорм.ВсегоЭлектричество КАК ВсегоЭлектричество,
	          |	ТаблНорм.ВсегоВода КАК ВсегоВода,
	          |	ТаблНорм.МашиноЧасы КАК МашиноЧасы
	          |ИЗ
	          |	РегистрНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(
	          |			&ДатаНач,
	          |			&ДатаКон,
	          |			,
	          |			(Организация, Подразделение, НоменклатурнаяГруппа) В
	          |				(ВЫБРАТЬ
	          |					ТаблНорм.Организация,
	          |					ТаблНорм.Подразделение,
	          |					ТаблНорм.НоменклатурнаяГруппа
	          |				ИЗ
	          |					ТаблНорм
	          |				СГРУППИРОВАТЬ ПО
	          |							ТаблНорм.Организация,
	          |					ТаблНорм.Подразделение,
	          |					ТаблНорм.НоменклатурнаяГруппа)) КАК ВыпускПродукции
	          |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблНорм КАК ТаблНорм
	          |		ПО ВыпускПродукции.Подразделение = ТаблНорм.Подразделение
	          |			И ВыпускПродукции.НоменклатурнаяГруппа = ТаблНорм.НоменклатурнаяГруппа
	          |{ГДЕ
	          |	ВыпускПродукции.Подразделение.*,
	          |	ВыпускПродукции.НоменклатурнаяГруппа.*}"; 
			  
  ПЗ.Параметры.Вставить("Организация",СтруктураШапкиДокумента.Организация);			  
  ПЗ.Параметры.Вставить("ДатаНач",НачалоМесяца(СтруктураШапкиДокумента.Дата));
  ПЗ.Параметры.Вставить("ДатаКон",КонецМесяца(СтруктураШапкиДокумента.Дата));
  
  возврат ПЗ;
КонецФункции	

//начало изменений Ожиганов А. 21.03.2017 63547 распределение воды аналогично газу и электричеству 
Функция ПолучитьПостроительЗапросаПОТэрам2(СтруктураШапкиДокумента)
  ПЗ = Новый ПостроительЗапроса;
  ТекстЗапроса = "ВЫБРАТЬ
          	   |	Нормы.Газ КАК НормаГаз,
          	   |	Нормы.Электричество КАК НормаЭлектричество,
          	   |	Нормы.Вода КАК НормаВода,
          	   |	Нормы.НоменклатурнаяГруппа,
          	   |	Нормы.Подразделение,
          	   |	СУММА(Нормы.Газ * ОтрабМашиноЧасы.МашиноЧасы) КАК ВсегоГаз,
          	   |	СУММА(Нормы.Электричество * ОтрабМашиноЧасы.МашиноЧасы) КАК ВсегоЭлектричество,
          	   |	СУММА(Нормы.Вода * ОтрабМашиноЧасы.МашиноЧасы) КАК ВсегоВода,
          	   |	ОтрабМашиноЧасы.МашиноЧасы,
          	   |	Нормы.Организация
          	   |ПОМЕСТИТЬ ТаблНорм
          	   |ИЗ
          	   |	Документ.ПРГ_ФактическиОтработанныеМашиноЧасы.Машиночасы КАК ОтрабМашиноЧасы
          	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПРГ_НормыПотребленияПоЛиниям.СрезПоследних(&ДатаКон, Организация = &Организация) КАК Нормы
          	   |		ПО ОтрабМашиноЧасы.Подразделение = Нормы.Подразделение
          	   |			И ОтрабМашиноЧасы.НоменклатурнаяГруппа = Нормы.НоменклатурнаяГруппа
          	   |ГДЕ
          	   |	ОтрабМашиноЧасы.Ссылка.Организация = &Организация
          	   |	И ОтрабМашиноЧасы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
          	   |	И ОтрабМашиноЧасы.Ссылка.Проведен
          	   |{ГДЕ
          	   |	Нормы.Подразделение.*,
          	   |	Нормы.НоменклатурнаяГруппа.*,
          	   |	ОтрабМашиноЧасы.Подразделение.*,
          	   |	ОтрабМашиноЧасы.НоменклатурнаяГруппа.*}
          	   |
          	   |СГРУППИРОВАТЬ ПО
          	   |	Нормы.НоменклатурнаяГруппа,
          	   |	Нормы.Подразделение,
          	   |	Нормы.Газ,
          	   |	Нормы.Электричество,
          	   |	Нормы.Вода,
          	   |	ОтрабМашиноЧасы.МашиноЧасы,
          	   |	Нормы.Организация
          	   |;
          	   |
          	   |////////////////////////////////////////////////////////////////////////////////
          	   |ВЫБРАТЬ
          	   |	ВыпускПродукцииБухгалтерскийУчет.Подразделение,
          	   |	ВыпускПродукцииБухгалтерскийУчет.НоменклатурнаяГруппа,
          	   |	СУММА(ВыпускПродукцииБухгалтерскийУчет.Количество) КАК КоличествоПродукции,
          	   |	ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП КАК СчетУчета
          	   |ПОМЕСТИТЬ ТаблВыпуска
          	   |ИЗ
          	   |	РегистрНакопления.ВыпускПродукции%СуффиксУчета% КАК ВыпускПродукцииБухгалтерскийУчет
          	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблНорм КАК ТаблНорм
          	   |		ПО ВыпускПродукцииБухгалтерскийУчет.Подразделение = ТаблНорм.Подразделение
          	   |			И ВыпускПродукцииБухгалтерскийУчет.НоменклатурнаяГруппа = ТаблНорм.НоменклатурнаяГруппа
          	   |ГДЕ
          	   |	ВыпускПродукцииБухгалтерскийУчет.Организация = &Организация
          	   |	И ВыпускПродукцииБухгалтерскийУчет.КодОперации = &КодОперации
          	   |	И ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП В(&СчетУчета)
          	   |	И ВыпускПродукцииБухгалтерскийУчет.Период МЕЖДУ &ДатаНач И &ДатаКон
          	   |{ГДЕ
          	   |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.*,
          	   |	ВыпускПродукцииБухгалтерскийУчет.НоменклатурнаяГруппа.*}
          	   |
          	   |СГРУППИРОВАТЬ ПО
          	   |	ВыпускПродукцииБухгалтерскийУчет.НоменклатурнаяГруппа,
          	   |	ВыпускПродукцииБухгалтерскийУчет.Подразделение,
          	   |	ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП
          	   |;
          	   |
          	   |////////////////////////////////////////////////////////////////////////////////
          	   |ВЫБРАТЬ
          	   |	ТаблВыпуска.Подразделение КАК Подразделение,
          	   |	ТаблВыпуска.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
          	   |	ТаблНорм.НормаГаз КАК НормаГаз,
          	   |	ТаблНорм.НормаЭлектричество КАК НормаЭлектричество,
          	   |	ТаблНорм.НормаВода КАК НормаВода,
          	   |	ТаблНорм.ВсегоГаз КАК ВсегоГаз,
          	   |	ТаблНорм.ВсегоЭлектричество КАК ВсегоЭлектричество,
          	   |	ТаблНорм.ВсегоВода КАК ВсегоВода,
          	   |	ТаблНорм.МашиноЧасы КАК МашиноЧасы,
          	   |	ТаблВыпуска.КоличествоПродукции,
          	   |	ТаблВыпуска.СчетУчета
          	   |ИЗ
          	   |	ТаблВыпуска КАК ТаблВыпуска
          	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблНорм КАК ТаблНорм
          	   |		ПО ТаблВыпуска.Подразделение = ТаблНорм.Подразделение
          	   |			И ТаблВыпуска.НоменклатурнаяГруппа = ТаблНорм.НоменклатурнаяГруппа
          	   |{ГДЕ
          	   |	ТаблВыпуска.Подразделение.*,
          	   |	ТаблВыпуска.НоменклатурнаяГруппа.*}
          	   |
          	   |СГРУППИРОВАТЬ ПО
          	   |	ТаблВыпуска.Подразделение,
          	   |	ТаблВыпуска.НоменклатурнаяГруппа,
          	   |	ТаблНорм.НормаГаз,
          	   |	ТаблНорм.НормаЭлектричество,
          	   |	ТаблНорм.НормаВода,
          	   |	ТаблНорм.ВсегоГаз,
          	   |	ТаблНорм.ВсегоЭлектричество,
          	   |	ТаблНорм.ВсегоВода,
          	   |	ТаблНорм.МашиноЧасы,
          	   |	ТаблВыпуска.КоличествоПродукции,
          	   |	ТаблВыпуска.СчетУчета";
			   
	ПЗ.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапроса , 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
			   
			  
  ПЗ.Параметры.Вставить("Организация",СтруктураШапкиДокумента.Организация);			  
  ПЗ.Параметры.Вставить("ДатаНач",НачалоМесяца(СтруктураШапкиДокумента.Дата));
  ПЗ.Параметры.Вставить("ДатаКон",КонецМесяца(СтруктураШапкиДокумента.Дата));
  ПЗ.Параметры.Вставить("КодОперации",Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксНаСклад);
  СчетУчета = Новый Массив;
  СчетУчета.Добавить(ПланыСчетов.Международный._ОсновноеПроизводство);
  СчетУчета.Добавить(ПланыСчетов.Международный._ПроизводствоПродукцииИзДавальческогоСырья);
  ПЗ.Параметры.Вставить("СчетУчета",СчетУчета);
  возврат ПЗ;
КонецФункции	
//конец изменений 
Функция ПолучитьПостроительЗапросаПОТэрам(СтруктураШапкиДокумента)
  ПЗ = Новый ПостроительЗапроса;
  ТекстЗапроса = "ВЫБРАТЬ
          	   |	Нормы.Газ КАК НормаГаз,
          	   |	Нормы.Электричество КАК НормаЭлектричество,
          	   |	Нормы.Вода КАК НормаВода,
          	   |	Нормы.НоменклатурнаяГруппа,
          	   |	Нормы.Подразделение,
          	   |	СУММА(Нормы.Газ * ОтрабМашиноЧасы.МашиноЧасы) КАК ВсегоГаз,
          	   |	СУММА(Нормы.Электричество * ОтрабМашиноЧасы.МашиноЧасы) КАК ВсегоЭлектричество,
          	   |	СУММА(Нормы.Вода * Нормы.Вода) КАК ВсегоВода,
          	   |	ОтрабМашиноЧасы.МашиноЧасы,
          	   |	Нормы.Организация
          	   |ПОМЕСТИТЬ ТаблНорм
          	   |ИЗ
          	   |	Документ.ПРГ_ФактическиОтработанныеМашиноЧасы.Машиночасы КАК ОтрабМашиноЧасы
          	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПРГ_НормыПотребленияПоЛиниям.СрезПоследних(&ДатаКон, Организация = &Организация) КАК Нормы
          	   |		ПО ОтрабМашиноЧасы.Подразделение = Нормы.Подразделение
          	   |			И ОтрабМашиноЧасы.НоменклатурнаяГруппа = Нормы.НоменклатурнаяГруппа
          	   |ГДЕ
          	   |	ОтрабМашиноЧасы.Ссылка.Организация = &Организация
          	   |	И ОтрабМашиноЧасы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
          	   |	И ОтрабМашиноЧасы.Ссылка.Проведен
          	   |{ГДЕ
          	   |	Нормы.Подразделение.*,
          	   |	Нормы.НоменклатурнаяГруппа.*,
          	   |	ОтрабМашиноЧасы.Подразделение.*,
          	   |	ОтрабМашиноЧасы.НоменклатурнаяГруппа.*}
          	   |
          	   |СГРУППИРОВАТЬ ПО
          	   |	Нормы.НоменклатурнаяГруппа,
          	   |	Нормы.Подразделение,
          	   |	Нормы.Газ,
          	   |	Нормы.Электричество,
          	   |	Нормы.Вода,
          	   |	ОтрабМашиноЧасы.МашиноЧасы,
          	   |	Нормы.Организация
          	   |;
          	   |
          	   |////////////////////////////////////////////////////////////////////////////////
          	   |ВЫБРАТЬ
          	   |	ВыпускПродукцииБухгалтерскийУчет.Подразделение,
          	   |	ВыпускПродукцииБухгалтерскийУчет.НоменклатурнаяГруппа,
          	   |	СУММА(ВыпускПродукцииБухгалтерскийУчет.Количество) КАК КоличествоПродукции,
          	   |	ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП КАК СчетУчета
          	   |ПОМЕСТИТЬ ТаблВыпуска
          	   |ИЗ
          	   |	РегистрНакопления.ВыпускПродукции%СуффиксУчета% КАК ВыпускПродукцииБухгалтерскийУчет
          	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблНорм КАК ТаблНорм
          	   |		ПО ВыпускПродукцииБухгалтерскийУчет.Подразделение = ТаблНорм.Подразделение
          	   |			И ВыпускПродукцииБухгалтерскийУчет.НоменклатурнаяГруппа = ТаблНорм.НоменклатурнаяГруппа
          	   |ГДЕ
          	   |	ВыпускПродукцииБухгалтерскийУчет.Организация = &Организация
          	   |	И ВыпускПродукцииБухгалтерскийУчет.КодОперации = &КодОперации
          	   |	И ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП В(&СчетУчета)
          	   |	И ВыпускПродукцииБухгалтерскийУчет.Период МЕЖДУ &ДатаНач И &ДатаКон
          	   |{ГДЕ
          	   |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.*,
          	   |	ВыпускПродукцииБухгалтерскийУчет.НоменклатурнаяГруппа.*}
          	   |
          	   |СГРУППИРОВАТЬ ПО
          	   |	ВыпускПродукцииБухгалтерскийУчет.НоменклатурнаяГруппа,
          	   |	ВыпускПродукцииБухгалтерскийУчет.Подразделение,
          	   |	ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП
          	   |;
          	   |
          	   |////////////////////////////////////////////////////////////////////////////////
          	   |ВЫБРАТЬ
          	   |	ТаблВыпуска.Подразделение КАК Подразделение,
          	   |	ТаблВыпуска.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
          	   |	ТаблНорм.НормаГаз КАК НормаГаз,
          	   |	ТаблНорм.НормаЭлектричество КАК НормаЭлектричество,
          	   |	ТаблНорм.НормаВода КАК НормаВода,
          	   |	ТаблНорм.ВсегоГаз КАК ВсегоГаз,
          	   |	ТаблНорм.ВсегоЭлектричество КАК ВсегоЭлектричество,
          	   |	ТаблНорм.ВсегоВода КАК ВсегоВода,
          	   |	ТаблНорм.МашиноЧасы КАК МашиноЧасы,
          	   |	ТаблВыпуска.КоличествоПродукции,
          	   |	ТаблВыпуска.СчетУчета
          	   |ИЗ
          	   |	ТаблВыпуска КАК ТаблВыпуска
          	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблНорм КАК ТаблНорм
          	   |		ПО ТаблВыпуска.Подразделение = ТаблНорм.Подразделение
          	   |			И ТаблВыпуска.НоменклатурнаяГруппа = ТаблНорм.НоменклатурнаяГруппа
          	   |{ГДЕ
          	   |	ТаблВыпуска.Подразделение.*,
          	   |	ТаблВыпуска.НоменклатурнаяГруппа.*}
          	   |
          	   |СГРУППИРОВАТЬ ПО
          	   |	ТаблВыпуска.Подразделение,
          	   |	ТаблВыпуска.НоменклатурнаяГруппа,
          	   |	ТаблНорм.НормаГаз,
          	   |	ТаблНорм.НормаЭлектричество,
          	   |	ТаблНорм.НормаВода,
          	   |	ТаблНорм.ВсегоГаз,
          	   |	ТаблНорм.ВсегоЭлектричество,
          	   |	ТаблНорм.ВсегоВода,
          	   |	ТаблНорм.МашиноЧасы,
          	   |	ТаблВыпуска.КоличествоПродукции,
          	   |	ТаблВыпуска.СчетУчета";
			   
	ПЗ.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапроса , 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
			   
			  
  ПЗ.Параметры.Вставить("Организация",СтруктураШапкиДокумента.Организация);			  
  ПЗ.Параметры.Вставить("ДатаНач",НачалоМесяца(СтруктураШапкиДокумента.Дата));
  ПЗ.Параметры.Вставить("ДатаКон",КонецМесяца(СтруктураШапкиДокумента.Дата));
  ПЗ.Параметры.Вставить("КодОперации",Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксНаСклад);
  СчетУчета = Новый Массив;
  СчетУчета.Добавить(ПланыСчетов.Международный._ОсновноеПроизводство);
  СчетУчета.Добавить(ПланыСчетов.Международный._ПроизводствоПродукцииИзДавальческогоСырья);
  ПЗ.Параметры.Вставить("СчетУчета",СчетУчета);
  возврат ПЗ;
КонецФункции	


Процедура РаспеределитьТЭРЫ2(СтруктураШапкиДокумента, СтруктураТаблицДвижений) Экспорт
	
	  
	 РаспределитьВОДУ(СтруктураШапкиДокумента);
	  
	  
	 СпособРасчета = Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам;
	 ЗапросПоНезавершенномуПроизводству = ПолучитьЗапросПоНезавершенномуПроизводству(СтруктураШапкиДокумента);
//начало изменений Ожиганов А. 21.03.2017 63547 распределение воды аналогично газу и электричеству 	 
//	 ПЗМашиноЧасы  						= ПолучитьПостроительЗапросаПОТэрам(СтруктураШапкиДокумента);
	Если СтруктураШапкиДокумента.дата > '20170301' Тогда
	//Если СтруктураШапкиДокумента.Дата > '20170201' Тогда
		ПЗМашиноЧасы  						= ПолучитьПостроительЗапросаПОТэрам2(СтруктураШапкиДокумента);
	Иначе	
		ПЗМашиноЧасы  						= ПолучитьПостроительЗапросаПОТэрам(СтруктураШапкиДокумента);
	КонецЕсли;	
//конец изменений 	 
	 
	РегНезавершенноеПроизводство  = РегистрыНакопления.НезавершенноеПроизводствоМеждународныйУчет.СоздатьНаборЗаписей();
	РегНезавершенноеПроизводство.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	ТаблНезавершПроизводство	   = РегНезавершенноеПроизводство.Выгрузить();
	ТаблНезавершПроизводствоСторно = РегНезавершенноеПроизводство.Выгрузить();
	
	РегРаспрМашинЧасов 	= РегистрыСведений.ДС_РаспределениеПоМашиноЧасамМСФО.СоздатьНаборЗаписей();
	РегРаспрМашинЧасов.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	ТаблРаспрМашинЧасов = РегРаспрМашинЧасов.Выгрузить();
	
	ДвиженияХозрасч	= РегистрыБухгалтерии.Международный.СоздатьНаборЗаписей();
	ДвиженияХозрасч.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	 
	 
	МассивТэров  = Новый Массив;
	МассивТэров.Добавить(Новый Структура("ВидСтатьТЭР,ИмяКолонкиРаспр,ИмяКолонкиНормы",Перечисления.ПРГ_ВидыСтатьиТЭР.Электричество,"ВсегоЭлектричество","НормаЭлектричество"));
	МассивТэров.Добавить(Новый Структура("ВидСтатьТЭР,ИмяКолонкиРаспр,ИмяКолонкиНормы",Перечисления.ПРГ_ВидыСтатьиТЭР.Вода,"ВсегоВода","НормаВода"));
	МассивТэров.Добавить(Новый Структура("ВидСтатьТЭР,ИмяКолонкиРаспр,ИмяКолонкиНормы",Перечисления.ПРГ_ВидыСтатьиТЭР.Газ,"ВсегоГаз","НормаГаз"));
	
	Для Каждого текЭлем Из МассивТэров Цикл
		
		МассивЗатрат = ПолучитьМассивСтатейТЭР(СтруктураШапкиДокумента,текЭлем.ВидСтатьТЭР);
		ЗапросПоНезавершенномуПроизводству.УстановитьПараметр("МассивЗатрат",  МассивЗатрат);
		
		ИмяКолонкиРаспр   	 = текЭлем.ИмяКолонкиРаспр;
		ИмяКолонкиНормы   	 = текЭлем.ИмяКолонкиНормы;
		
		РезультатЗапросаПоНезавершенномуПроизводству = ЗапросПоНезавершенномуПроизводству.Выполнить();
		Выборка = РезультатЗапросаПоНезавершенномуПроизводству.Выбрать();
		
			Пока Выборка.Следующий() Цикл
				//очистим отбор 
				к = 0;
				Пока к < ПЗМашиноЧасы.Отбор.Количество() Цикл
					ПЗМашиноЧасы.Отбор.Удалить(к);
				КонецЦикла;	
				ПЗМашиноЧасы.Выполнить();
				//добавим новый отбор 
				Отбор = ПЗМашиноЧасы.Отбор.Добавить("Подразделение","Подразделение");
				Отбор.ВидСравнения  = ВидСравнения.ВИерархии;
				Отбор.Значение 		= Выборка.Подразделение;
				
				Если ЗначениеЗаполнено(Выборка.НоменклатурнаяГруппа) Тогда
					Отбор = ПЗМашиноЧасы.Отбор.Добавить("НоменклатурнаяГруппа","НоменклатурнаяГруппа");
					Отбор.ВидСравнения  = ВидСравнения.ВИерархии;
					Отбор.Значение 		= Выборка.НоменклатурнаяГруппа;
				КонецЕсли;	
				
				 ПЗМашиноЧасы.Выполнить();
				 
				 ТаблМашиноЧасов = ПЗМашиноЧасы.Результат.Выгрузить();
				// ТаблМашиноЧасов .ВыбратьСтроку();
				Если ТаблМашиноЧасов.Количество() = 0 Тогда
					// is ЯннуровВФ нач 20140715
					Сообщить("Не удалось распределить ТЭР 
					| Подразделение "+Выборка.Подразделение+"  
					| СтатьяЗатрат  "+Выборка.СтатьяЗатрат+"  
					| СчетУчета  "+Выборка.СчетУчета+"  
					| Сумма  "+Формат(Выборка.Сумма,"ЧЦ=15; ЧДЦ=2"));
					// is ЯннуровВФ нач 20140715
					 продолжить;
				 КонецЕсли; 
				 БазаРаспр  = ТаблМашиноЧасов.Итог(ИмяКолонкиРаспр);
				 РаспрСумма = Выборка.Сумма;
				 РаспрКолВо = Выборка.Количество;
				 РаспрСуммаВР   = 0;
				 РаспрСуммаПР 	= 0;
				 Если БазаРаспр = 0 Тогда
					 // видиом сообщения
				 КонецЕсли; 
				 
				 ТаблМашиноЧасов.Колонки.Добавить("КоличествоРаспределение",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
				 ТаблМашиноЧасов.Колонки.Добавить("СуммаРаспределение",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
				 
				 Для Каждого ТекСтрока Из ТаблМашиноЧасов Цикл
					 ПогСумма  = Окр(РаспрСумма * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
					 ПогКолво  = Окр(РаспрКолВо * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
					 
					 ПогСуммаВР  = Окр(РаспрСуммаВР * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
					 ПогСуммаПР  = Окр(РаспрСуммаПР * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
					 
					 
					 РаспрСумма    = РаспрСумма   - ПогСумма;
					 РаспрСуммаВР  = РаспрСуммаВР - ПогСуммаВР;
					 РаспрСуммаПР  = РаспрСуммаПР - ПогСуммаПР;
					 
					 ПогКолво    = РаспрКолВо - ПогКолво;
					 БазаРаспр   = БазаРаспр -ТекСтрока[ИмяКолонкиРаспр];
					 
					 СформироватьДвижениеНезавершенки(Выборка,СтруктураШапкиДокумента,ТекСтрока,ТаблНезавершПроизводство,ПогСумма,ПогКолво,ДвиженияХозрасч,РаспрСуммаВР,РаспрСуммаПР);
					 ЗаполнитьНормыРаспределенияМашиноЧасов(Выборка,СтруктураШапкиДокумента,ТекСтрока,ТаблНезавершПроизводство,ПогСумма,ПогКолво,ТекЭлем.ВидСтатьТЭР,ТаблРаспрМашинЧасов,ИмяКолонкиНормы,ИмяКолонкиРаспр);
					 
				 КонецЦикла; 
				 СформироватьДвижениеНезавершенкиСторно(Выборка,СтруктураШапкиДокумента,ТаблНезавершПроизводствоСторно);
			 КонецЦикла;			

		
	КонецЦикла;	 // по тэрам
	 
	 
	 РегНезавершенноеПроизводство.мПериод = СтруктураШапкиДокумента.Дата;
	 РегНезавершенноеПроизводство.мТаблицаДвижений =ТаблНезавершПроизводствоСторно; 
	 РегНезавершенноеПроизводство.ВыполнитьРасход();
	 РегНезавершенноеПроизводство.Записать(Ложь);
	 
	 РегНезавершенноеПроизводство.мТаблицаДвижений =ТаблНезавершПроизводство; 
	 РегНезавершенноеПроизводство.ВыполнитьПриход();
	 РегНезавершенноеПроизводство.Записать(Ложь);
	 
	 Если ТаблРаспрМашинЧасов.Количество() > 0 и СтруктураШапкиДокумента.ОтражатьВМеждународномУчете  Тогда
		 // is Зайцева нач 20140711 
		 ТаблРаспрМашинЧасов.Свернуть("Регистратор, Активность, ВидСтатьиТЭР, Подразделение, НоменклатурнаяГруппа, СтатьяЗатрат", "НормаМашиночасов, ОтработаноМашиночасов, КоличествоПродукции, ФактМашиночасов, Сумма");
		 // is Зайцева кон 20140711
		 РегРаспрМашинЧасов.Загрузить(ТаблРаспрМашинЧасов);
		 //РегРаспрМашинЧасов.Записать(Истина);
	 КонецЕсли; 
	 
	 ДвиженияХозрасч.Записать(Ложь);
	 

КонецПроцедуры
Процедура РаспеределитьТЭРЫ(СтруктураШапкиДокумента, СтруктураТаблицДвижений) Экспорт
	
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		  Сообщить("Распределение ТЭР не поддеживается в управленченском учете");
		  возврат;
	  КонецЕслИ;
	  
	РаспределитьВОДУ(СтруктураШапкиДокумента);
	  
	  
	СпособРасчета 					    = Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам;
	ЗапросПоНезавершенномуПроизводству  = ПолучитьЗапросПоНезавершенномуПроизводству(СтруктураШапкиДокумента);
//начало изменений Ожиганов А. 21.03.2017 63547 распределение воды аналогично газу и электричеству 	 
//	 ПЗМашиноЧасы  						= ПолучитьПостроительЗапросаПОТэрам(СтруктураШапкиДокумента);
	Если СтруктураШапкиДокумента.дата > '20170301' Тогда
	//Если СтруктураШапкиДокумента.Дата > '20170201' Тогда
		ПЗМашиноЧасы  						= ПолучитьПостроительЗапросаПОТэрам2(СтруктураШапкиДокумента);
	Иначе	
		ПЗМашиноЧасы  						= ПолучитьПостроительЗапросаПОТэрам(СтруктураШапкиДокумента);
	КонецЕсли;	
//конец изменений 	 
	
	
	
	ИмяРегБух  =  "Международный";
	ИмяРегНЗП  =  "НезавершенноеПроизводствоМеждународныйУчет";
		
	РегНезавершенноеПроизводство  = РегистрыНакопления[ИмяРегНЗП].СоздатьНаборЗаписей();
	РегНезавершенноеПроизводство.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	РегРаспрМашинЧасов 	= РегистрыСведений.ДС_РаспределениеПоМашиноЧасамМСФО.СоздатьНаборЗаписей();
	РегРаспрМашинЧасов.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
			
	ТаблРаспрМашинЧасов = РегРаспрМашинЧасов.Выгрузить();
	
	ДвиженияХозрасч	= РегистрыБухгалтерии[ИмяРегБух].СоздатьНаборЗаписей();
	ДвиженияХозрасч.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
			
	ТаблНезавершПроизводство	   = РегНезавершенноеПроизводство.Выгрузить();
	ТаблНезавершПроизводствоСторно = РегНезавершенноеПроизводство.Выгрузить();
	 
	 
	МассивТэров  = Новый Массив;
	МассивТэров.Добавить(Новый Структура("ВидСтатьТЭР,ИмяКолонкиРаспр,ИмяКолонкиНормы",Перечисления.ПРГ_ВидыСтатьиТЭР.Электричество,"ВсегоЭлектричество","НормаЭлектричество"));
	МассивТэров.Добавить(Новый Структура("ВидСтатьТЭР,ИмяКолонкиРаспр,ИмяКолонкиНормы",Перечисления.ПРГ_ВидыСтатьиТЭР.Вода,"ВсегоВода","НормаВода"));
	МассивТэров.Добавить(Новый Структура("ВидСтатьТЭР,ИмяКолонкиРаспр,ИмяКолонкиНормы",Перечисления.ПРГ_ВидыСтатьиТЭР.Газ,"ВсегоГаз","НормаГаз"));
	
	
	ТаблДляРаспр = Новый ТаблицаЗначений;
	
	ТаблДляРаспр.Колонки.Добавить("Подразделение");
	ТаблДляРаспр.Колонки.Добавить("СтатьяЗатрат");
	ТаблДляРаспр.Колонки.Добавить("СчетУчета");
	ТаблДляРаспр.Колонки.Добавить("НоменклатурнаяГруппа");
	ТаблДляРаспр.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблДляРаспр.Колонки.Добавить("ПостояннаяРазница",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	ТаблДляРаспр.Колонки.Добавить("ВременнаяРазница",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
	
	Для Каждого текЭлем Из МассивТэров Цикл
		
		ТаблЗатратТЭР = ПолучитьМассивСтатейТЭР(СтруктураШапкиДокумента,текЭлем.ВидСтатьТЭР);
		ЗапросПоНезавершенномуПроизводству.УстановитьПараметр("МассивЗатрат",  ТаблЗатратТЭР.ВыгрузитьКолонку("СтатьяЗатрат"));
		
		ИмяКолонкиРаспр   	 = текЭлем.ИмяКолонкиРаспр;
		ИмяКолонкиНормы   	 = текЭлем.ИмяКолонкиНормы;
		
		РезультатЗапросаПоНезавершенномуПроизводству = ЗапросПоНезавершенномуПроизводству.Выполнить();
		Выборка = РезультатЗапросаПоНезавершенномуПроизводству.Выбрать();
		ТаблДляРаспр.Очистить();
		Пока Выборка.Следующий() Цикл
				//очистим отбор 
				
				НоваяСтрока = ТаблДляРаспр.Добавить();
				НоваяСтрока.Подразделение		= Выборка.Подразделение;
				НоваяСтрока.СтатьяЗатрат		= Выборка.СтатьяЗатрат;
				НоваяСтрока.СчетУчета	        = Выборка.СчетУчета;
				НоваяСтрока.НоменклатурнаяГруппа = Выборка.НоменклатурнаяГруппа;
				НоваяСтрока.Сумма				= Выборка.Сумма;
				Если  СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
						НоваяСтрока.ПостояннаяРазница  = Выборка.ПостояннаяРазница;
						НоваяСтрока.ВременнаяРазница   = Выборка.ВременнаяРазница;
				Иначе
						НоваяСтрока.ПостояннаяРазница	= 0;
						НоваяСтрока.ВременнаяРазница	= 0;
				КонецЕсли;
				СформироватьДвижениеНезавершенкиСторно(Выборка,СтруктураШапкиДокумента,РегНезавершенноеПроизводство);	
		КонецЦикла;		
			
		ТаблДляРаспр.Свернуть("Подразделение,СтатьяЗатрат,СчетУчета,НоменклатурнаяГруппа","Сумма,ПостояннаяРазница,ВременнаяРазница");
		
		Для Каждого ТекСтрокаРаспр Из ТаблДляРаспр Цикл
			
			    к = 0;
			    Пока к < ПЗМашиноЧасы.Отбор.Количество() Цикл
			    	ПЗМашиноЧасы.Отбор.Удалить(к);
				КонецЦикла;	
				
			    //ПЗМашиноЧасы.Выполнить();
				НадЗнч = ТаблЗатратТЭР.Найти(ТекСтрокаРаспр.СтатьяЗатрат,"СтатьяЗатрат");
				Если НадЗнч <> Неопределено Тогда
					ИспользуемПодр = НЕ НадЗнч.НеИспользоватьПодразделение;
				КонецЕсли;	
				
			    //добавим новый отбор 
				Если ИспользуемПодр Тогда
				    Отбор = ПЗМашиноЧасы.Отбор.Добавить("Подразделение","Подразделение");
				    Отбор.ВидСравнения  = ВидСравнения.ВИерархии;
				    Отбор.Значение 		= ТекСтрокаРаспр.Подразделение;
					Отбор.Использование = Истина;
				КонецЕсли;
				
			    Если ЗначениеЗаполнено(ТекСтрокаРаспр.НоменклатурнаяГруппа) Тогда
			    	Отбор = ПЗМашиноЧасы.Отбор.Добавить("НоменклатурнаяГруппа","НоменклатурнаяГруппа");
			    	Отбор.ВидСравнения  = ВидСравнения.ВИерархии;
			    	Отбор.Значение 		= ТекСтрокаРаспр.НоменклатурнаяГруппа;
					Отбор.Использование = Истина;
			    КонецЕсли;	
			    
			 	ПЗМашиноЧасы.Выполнить();
			 	
			 	ТаблМашиноЧасов = ПЗМашиноЧасы.Результат.Выгрузить();
			    // ТаблМашиноЧасов .ВыбратьСтроку();
			 	Если ТаблМашиноЧасов.Количество() = 0 Тогда
			    	 Сообщить("Не удалось распределить ТЭР 
					 | Подразделение "+ТекСтрокаРаспр.Подразделение+"  
					 | СтатьяЗатрат  "+ТекСтрокаРаспр.СтатьяЗатрат+"  
					 | СчетУчета  "+ТекСтрокаРаспр.СчетУчета+"  
					 | Сумма  "+Формат(ТекСтрокаРаспр.Сумма,"ЧЦ=15; ЧДЦ=2"));
					 ВосстановитьЗаписьНЗП(ТекСтрокаРаспр,СтруктураШапкиДокумента,РегНезавершенноеПроизводство);
			    	 продолжить;
			 	КонецЕсли; 
			 	БазаРаспр  = ТаблМашиноЧасов.Итог(ИмяКолонкиРаспр);
			 	РаспрСумма = ТекСтрокаРаспр.Сумма;
			 	РаспрКолВо = 0;
			 	
			    РаспрСуммаПР 	= ТекСтрокаРаспр.ПостояннаяРазница;
			    РаспрСуммаВР    = ТекСтрокаРаспр.ВременнаяРазница;
				
			 	Если БазаРаспр = 0 Тогда
			    	 // видиом сообщения
			 	КонецЕсли; 
			
			 	ТаблМашиноЧасов.Колонки.Добавить("КоличествоРаспределение",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
			 	ТаблМашиноЧасов.Колонки.Добавить("СуммаРаспределение",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
			 	
			 	Для Каждого ТекСтрока Из ТаблМашиноЧасов Цикл
			    	 ПогСумма  = Окр(РаспрСумма * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
			    	 ПогКолво  = Окр(РаспрКолВо * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
			    	 
			    	 ПогСуммаВР  = Окр(РаспрСуммаВР * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
			    	 ПогСуммаПР  = Окр(РаспрСуммаПР * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
			    	 
			    	 
			    	 РаспрСумма    = РаспрСумма   - ПогСумма;
			    	 РаспрСуммаВР  = РаспрСуммаВР - ПогСуммаВР;
			    	 РаспрСуммаПР  = РаспрСуммаПР - ПогСуммаПР;
			    	 
			    	 ПогКолво    = РаспрКолВо - ПогКолво;
			    	 БазаРаспр   = БазаРаспр -ТекСтрока[ИмяКолонкиРаспр];
			    	 
			    	 СформироватьДвижениеНезавершенки(ТекСтрокаРаспр,СтруктураШапкиДокумента,ТекСтрока,РегНезавершенноеПроизводство,ПогСумма,ПогКолво,ДвиженияХозрасч,ПогСуммаВР,ПогСуммаПР);
			    	 ЗаполнитьНормыРаспределенияМашиноЧасов(ТекСтрокаРаспр,СтруктураШапкиДокумента,ТекСтрока,ТаблНезавершПроизводство,ПогСумма,ПогКолво,ТекЭлем.ВидСтатьТЭР,ТаблРаспрМашинЧасов,ИмяКолонкиНормы,ИмяКолонкиРаспр);
				 КонецЦикла;
			
		КонецЦикла;	
		
				
				
			 //   к = 0;
			 //   Пока к < ПЗМашиноЧасы.Отбор.Количество() Цикл
			 //   	ПЗМашиноЧасы.Отбор.Удалить(к);
			 //   КонецЦикла;	
			 //   ПЗМашиноЧасы.Выполнить();
			 //   //добавим новый отбор 
			 //   Отбор = ПЗМашиноЧасы.Отбор.Добавить("Подразделение","Подразделение");
			 //   Отбор.ВидСравнения  = ВидСравнения.ВИерархии;
			 //   Отбор.Значение 		= Выборка.Подразделение;
			 //   
			 //   Если ЗначениеЗаполнено(Выборка.НоменклатурнаяГруппа) Тогда
			 //   	Отбор = ПЗМашиноЧасы.Отбор.Добавить("НоменклатурнаяГруппа","НоменклатурнаяГруппа");
			 //   	Отбор.ВидСравнения  = ВидСравнения.ВИерархии;
			 //   	Отбор.Значение 		= Выборка.НоменклатурнаяГруппа;
			 //   КонецЕсли;	
			 //   
			 //	ПЗМашиноЧасы.Выполнить();
			 //	
			 //	ТаблМашиноЧасов = ПЗМашиноЧасы.Результат.Выгрузить();
			 //   // ТаблМашиноЧасов .ВыбратьСтроку();
			 //	Если ТаблМашиноЧасов.Количество() = 0 Тогда
			 //   	 Сообщить("Не удалось распределить ТЭР ");
			 //   	 продолжить;
			 //	КонецЕсли; 
			 //	БазаРаспр  = ТаблМашиноЧасов.Итог(ИмяКолонкиРаспр);
			 //	РаспрСумма = Выборка.Сумма;
			 //	РаспрКолВо = Выборка.Количество;
			 //	РаспрСуммаВР   = 0;
			 //	РаспрСуммаПР 	= 0;
			 //	Если  СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
			 //   		РаспрСуммаВР   = Выборка.ПостояннаяРазница;
			 //   		РаспрСуммаПР   = Выборка.ВременнаяРазница;
			 //	КонецЕсли;
			 //	
			 //	Если БазаРаспр = 0 Тогда
			 //   	 // видиом сообщения
			 //	КонецЕсли; 
			 //	
			 //	ТаблМашиноЧасов.Колонки.Добавить("КоличествоРаспределение",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
			 //	ТаблМашиноЧасов.Колонки.Добавить("СуммаРаспределение",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
			 //	
			 //	Для Каждого ТекСтрока Из ТаблМашиноЧасов Цикл
			 //   	 ПогСумма  = Окр(РаспрСумма * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
			 //   	 ПогКолво  = Окр(РаспрКолВо * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
			 //   	 
			 //   	 ПогСуммаВР  = Окр(РаспрСуммаВР * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
			 //   	 ПогСуммаПР  = Окр(РаспрСуммаПР * ТекСтрока[ИмяКолонкиРаспр] / БазаРаспр,2);
			 //   	 
			 //   	 
			 //   	 РаспрСумма    = РаспрСумма   - ПогСумма;
			 //   	 РаспрСуммаВР  = РаспрСуммаВР - ПогСуммаВР;
			 //   	 РаспрСуммаПР  = РаспрСуммаПР - ПогСуммаПР;
			 //   	 
			 //   	 ПогКолво    = РаспрКолВо - ПогКолво;
			 //   	 БазаРаспр   = БазаРаспр -ТекСтрока[ИмяКолонкиРаспр];
			 //   	 
			 //   	 СформироватьДвижениеНезавершенки(Выборка,СтруктураШапкиДокумента,ТекСтрока,РегНезавершенноеПроизводство,ПогСумма,ПогКолво,ДвиженияХозрасч,РаспрСуммаВР,РаспрСуммаПР);
			 //   	 ЗаполнитьНормыРаспределенияМашиноЧасов(Выборка,СтруктураШапкиДокумента,ТекСтрока,ТаблНезавершПроизводство,ПогСумма,ПогКолво,ТекЭлем.ВидСтатьТЭР,ТаблРаспрМашинЧасов,ИмяКолонкиНормы,ИмяКолонкиРаспр);
			 //   	 
			 //	КонецЦикла; 
			 //	СформироватьДвижениеНезавершенкиСторно(Выборка,СтруктураШапкиДокумента,РегНезавершенноеПроизводство);
			 //КонецЦикла;			
			 
	КонецЦикла;	 // по тэрам
		 
	
	// Если в наборе записей 1000 строк, запишем набор.
	Если РегНезавершенноеПроизводство.Количество() > 0 Тогда
		РегНезавершенноеПроизводство.Записать(Ложь);
	КонецЕсли;
	
	Если ТаблРаспрМашинЧасов.Количество() > 0 Тогда
		 // на всякий пожарный
		 //ТаблРаспрМашинЧасов.Свернуть("ВидСтатьиТЭР,Подразделение,СтатьяЗатрат,НоменклатурнаяГруппа","НормаМашиночасов,ОтработаноМашиноЧасов,КоличествоПродукции,ФактМашиноЧасов", "Сумма");
		 //ТаблРаспрМашинЧасов.Колонки.Добавить("Период");
		 //ТаблРаспрМашинЧасов.Колонки.Добавить("Активность");
		 //ТаблРаспрМашинЧасов.ЗаполнитьЗначения(СтруктураШапкиДокумента.Дата,"Период");
		 ТаблРаспрМашинЧасов.ЗаполнитьЗначения(Истина,"Активность");
		 РегРаспрМашинЧасов.Загрузить(ТаблРаспрМашинЧасов);
		 //РегРаспрМашинЧасов.Записать(Истина);
	 КонецЕсли; 
	 
	 ДвиженияХозрасч.Записать(Ложь);
	 

КонецПроцедуры

Процедура ЗаполнитьНормыРаспределенияМашиноЧасов(Выборка,СтруктураШапкиДокумента,ТекСтрока,ТаблНезавершПроизводство,ПогСумма,ПогКолво,ВидСтатьТЭР,ТаблРаспрМашинЧасов,ИмяКолонкиНормы,ИмяКолонкиРаспр);
	Если Не СтруктураШапкиДокумента.ОтражатьВМеждународномУчете Тогда
		возврат;
	КонецЕсли;	
	
	НоваяСтрока = ТаблРаспрМашинЧасов.Добавить();
	
	НоваяСтрока.Активность 			 = истина;
	НоваяСтрока.ВидСтатьиТЭР 		 = ВидСтатьТЭР;
	НоваяСтрока.Подразделение 		  = ТекСтрока.Подразделение;
	НоваяСтрока.СтатьяЗатрат  		  = Выборка.СтатьяЗатрат;
	НоваяСтрока.НоменклатурнаяГруппа  = ТекСтрока.НоменклатурнаяГруппа;
	НоваяСтрока.СчетУчета			  = ТекСтрока.СчетУчета;
	НоваяСтрока.НормаМашиночасов	  = ТекСтрока[ИмяКолонкиНормы];
	НоваяСтрока.ОтработаноМашиноЧасов = ТекСтрока["МашиноЧасы"];
	НоваяСтрока.ФактМашиноЧасов		  = ТекСтрока[ИмяКолонкиРаспр];
	НоваяСтрока.КоличествоПродукции	  = ТекСтрока.КоличествоПродукции;
	НоваяСтрока.КорПодразделение      = Выборка.Подразделение;
	НоваяСтрока.КорНоменклатурнаяГруппа    = Выборка.НоменклатурнаяГруппа;
	НоваяСтрока.КоррСчет                   = Выборка.СчетУчета;
	
	НоваяСтрока.Сумма                 = ПогСумма;
	
КонецПроцедуры	

Процедура СформироватьДвижениеНезавершенкиСторно(Выборка,СтруктураШапкиДокумента,НаборЗаписейНезавершенноеПроизводство)
		 НоваяСтрока = НаборЗаписейНезавершенноеПроизводство.Добавить();
		 НоваяСтрока.Активность = Истина;
		 НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
		 НоваяСтрока.Период 	 = СтруктураШапкиДокумента.Период;
		 
		 ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		 НоваяСтрока.Стоимость 	= Выборка.Сумма;
		 НоваяСтрока.КодОперации = Перечисления.КодыОперацийНезавершенноеПроизводство.КорректировкаНЗПФикс;
		 // Если в наборе записей 1000 строк, запишем набор.
		 Если НаборЗаписейНезавершенноеПроизводство.Количество() >= 1000 Тогда
			  НаборЗаписейНезавершенноеПроизводство.Записать(Ложь);
		 КонецЕсли;
КонецПроцедуры	
	
Процедура ВосстановитьЗаписьНЗП(Выборка,СтруктураШапкиДокумента,НаборЗаписейНезавершенноеПроизводство)
	
		 НоваяСтрока = НаборЗаписейНезавершенноеПроизводство.Добавить();
		 НоваяСтрока.Активность = Истина;
		 НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
		 НоваяСтрока.Период 	 = СтруктураШапкиДокумента.Период;
		 
		 
		 НоваяСтрока.Организация 		   = СтруктураШапкиДокумента.Организация;
		 НоваяСтрока.Подразделение   	   = Выборка.Подразделение;
		 НоваяСтрока.НоменклатурнаяГруппа  = Выборка.НоменклатурнаяГруппа;
		 НоваяСтрока.СтатьяЗатрат		   = Выборка.СтатьяЗатрат;
		 НоваяСтрока.СчетУчета             = Выборка.СчетУчета;

		 НоваяСтрока.Стоимость 			   = Выборка.Сумма;
		 
		 НоваяСтрока.КодОперации = Перечисления.КодыОперацийНезавершенноеПроизводство.КорректировкаНЗПФикс;
		 
		 // Если в наборе записей 1000 строк, запишем набор.
		 Если НаборЗаписейНезавершенноеПроизводство.Количество() >= 1000 Тогда
			  НаборЗаписейНезавершенноеПроизводство.Записать(Ложь);
		 КонецЕсли;

	
КонецПроцедуры	

Процедура СформироватьДвижениеНезавершенки(Выборка,СтруктураШапкиДокумента,ТекСтрока,НаборЗаписейНезавершенноеПроизводство,Сумма,Колво,РегистрБух,СуммаВР,СуммаПР)
	
	Если КолВо = 0 и Сумма = 0 и СуммаВР= 0 и СуммаПР =0 Тогда
		возврат;
	КонецЕсли;	
	
	НоваяСтрока = НаборЗаписейНезавершенноеПроизводство.Добавить();
	НоваяСтрока.Активность = Истина;
	НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
	НоваяСтрока.Период 		= СтруктураШапкиДокумента.Период;
	
	ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка,"СтатьяЗатрат");
	НоваяСтрока.СчетУчета  				= ТекСтрока.СчетУчета;
	НоваяСтрока.Организация				=  СтруктураШапкиДокумента.Организация;
	НоваяСтрока.Подразделение           =  ТекСтрока.Подразделение;
	НоваяСтрока.НоменклатурнаяГруппа	=  ТекСтрока.НоменклатурнаяГруппа;
	НоваяСтрока.Количество              =  Колво;
	НоваяСтрока.Стоимость				=  Сумма;                           
	НоваяСтрока.КодОперации				=  Перечисления.КодыОперацийНезавершенноеПроизводство.КорректировкаНЗПФикс;
	
	СформироватьПроводкиПоТЭРНезавершенка(СтруктураШапкиДокумента,Выборка,ТекСтрока,РегистрБух,Сумма,Неопределено);
	
	// Если в наборе записей 1000 строк, запишем набор.
	Если НаборЗаписейНезавершенноеПроизводство.Количество() >= 1000 Тогда
		НаборЗаписейНезавершенноеПроизводство.Записать(Ложь);
	КонецЕсли;
	
	
	//РегистрБух = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей()
	// отражение в проводках
	
	// Если в наборе записей 1000 строк, запишем набор.
	//Если РегистрБухгалтерииНаборЗаписей.Количество() = 1000 Тогда
	//	РегистрБухгалтерииНаборЗаписей.Записать(Ложь);
	//КонецЕсли;
КонецПроцедуры	

Процедура СформироватьПроводкиПоТЭРНезавершенка(СтруктураШапкиДокумента,Выборка,ТекСтрока,РегистрБух,Сумма,ВидУчетаПоПБУ18)
	
	Если Сумма = 0 Тогда
		возврат;
	КонецЕсли;	
	
	НоваяПроводка = РегистрБух.Добавить();
	НоваяПроводка.Организация    = СтруктураШапкиДокумента.Организация;
	НоваяПроводка.Активность	 = Истина;
	НоваяПроводка.Период		 = СтруктураШапкиДокумента.Дата;
	НоваяПроводка.Содержание 	 = "Расчет фактической себестоимости, распределение ТЭР";
														
	НоваяПроводка.Сумма = Сумма;
	
	НоваяПроводка.СчетДт = Выборка.СчетУчета;
	
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Подразделения", ТекСтрока.Подразделение);		
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "НоменклатурныеГруппы", ТекСтрока.НоменклатурнаяГруппа);
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СтатьиЗатрат", Выборка.СтатьяЗатрат);
													
	НоваяПроводка.СчетКт = Выборка.СчетУчета;
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "Подразделения", Выборка.Подразделение);		
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "НоменклатурныеГруппы", Выборка.НоменклатурнаяГруппа);
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиЗатрат", Выборка.СтатьяЗатрат);
	
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		Если ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ВР
		 ИЛИ ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
			НоваяПроводка.ВидУчетаДт = ВидУчетаПоПБУ18;
		    НоваяПроводка.ВидУчетаКт = ВидУчетаПоПБУ18;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьЗапросПоИсползованиюВоды(СтруктураШапкиДокумента)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВЫБОР
	                      |		КОГДА ЗатратыНаВыпуск.ПодразделениеНЗП = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	                      |			ТОГДА ЗатратыНаВыпуск.Подразделение
	                      |		ИНАЧЕ ЗатратыНаВыпуск.ПодразделениеНЗП
	                      |	КОНЕЦ КАК Подразделение,
	                      |	ЗатратыНаВыпуск.СчетУчета,
	                      |	ЗатратыНаВыпуск.СтатьяЗатрат,
	                      |	ВЫБОР
	                      |		КОГДА ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.Пустаяссылка)
	                      |			ТОГДА ЗатратыНаВыпуск.НоменклатурнаяГруппа
	                      |		ИНАЧЕ ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП
	                      |	КОНЕЦ КАК НоменклатурнаяГруппа,
	                      |	ЗатратыНаВыпуск.ЗаказНЗП,
	                      |	ЗатратыНаВыпуск.Затрата,
	                      |	ЗатратыНаВыпуск.ХарактеристикаЗатраты,
	                      |	СУММА(ЗатратыНаВыпуск.КоличествоОборот) КАК Количество,
	                      |	СУММА(ЗатратыНаВыпуск.СуммаОборот) КАК Сумма,
	                      |	ЗатратыНаВыпуск.СерияЗатраты,
	                      |	ЗатратыНаВыпуск.Организация,
	                      |	ЗатратыНаВыпуск.Продукция,
	                      |	ЗатратыНаВыпуск.ХарактеристикаПродукции,
	                      |	ЗатратыНаВыпуск.СерияПродукции,
	                      |	ЗатратыНаВыпуск.Спецификация,
	                      |	ЗатратыНаВыпуск.Заказ
	                      |ИЗ
	                      |	РегистрНакопления.ЗатратыНаВыпускПродукцииМеждународныйУчет.Обороты(
	                      |			&ДатаНачала,
	                      |			&ДатаКонца,
	                      |			,
	                      |			Организация = &Организация
	                      |				И Затрата В (&Затрата)) КАК ЗатратыНаВыпуск
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ЗатратыНаВыпуск.СчетУчета,
	                      |	ЗатратыНаВыпуск.ЗаказНЗП,
	                      |	ВЫБОР
	                      |		КОГДА ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.Пустаяссылка)
	                      |			ТОГДА ЗатратыНаВыпуск.НоменклатурнаяГруппа
	                      |		ИНАЧЕ ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП
	                      |	КОНЕЦ,
	                      |	ЗатратыНаВыпуск.ХарактеристикаЗатраты,
	                      |	ЗатратыНаВыпуск.СерияЗатраты,
	                      |	ЗатратыНаВыпуск.ХарактеристикаПродукции,
	                      |	ЗатратыНаВыпуск.Организация,
	                      |	ЗатратыНаВыпуск.СтатьяЗатрат,
	                      |	ЗатратыНаВыпуск.СерияПродукции,
	                      |	ЗатратыНаВыпуск.Затрата,
	                      |	ЗатратыНаВыпуск.Заказ,
	                      |	ЗатратыНаВыпуск.Продукция,
	                      |	ЗатратыНаВыпуск.Спецификация,
	                      |	ВЫБОР
	                      |		КОГДА ЗатратыНаВыпуск.ПодразделениеНЗП = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	                      |			ТОГДА ЗатратыНаВыпуск.Подразделение
	                      |		ИНАЧЕ ЗатратыНаВыпуск.ПодразделениеНЗП
	                      |	КОНЕЦ");
						  
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(СтруктураШапкиДокумента.Дата));
	Запрос.УстановитьПараметр("ДатаКонца",КонецМесяца(СтруктураШапкиДокумента.Дата));
	
	возврат Запрос;
КонецФункции	

Функция ПолучитьЗапросПоНезавершенномуПроизводствуВоды(СтруктураШапкиДокумента)
	Запрос  = Новый Запрос("ВЫБРАТЬ
	// is ЯннуровВФ нач 20150325 
	                       |	ис_СтатьиТЭРМСФОСрезПоследних.СтатьяЗатрат,
	                       |	ис_СтатьиТЭРМСФОСрезПоследних.СчетУчета
	                       |ПОМЕСТИТЬ ТаблТэр
	                       |ИЗ
	                       |	РегистрСведений.ис_СтатьиТЭРМСФО.СрезПоследних(&ДатаКонца, Организация = &Организация) КАК ис_СтатьиТЭРМСФОСрезПоследних
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
						   |ВЫБРАТЬ
	// is ЯннуровВФ кон 20150325 
	                       |	Незавершенка.Подразделение,
	                       |	Незавершенка.СчетУчета,
	                       |	Незавершенка.СтатьяЗатрат,
	                       |	Незавершенка.НоменклатурнаяГруппа,
	                       |	Незавершенка.Заказ,
	                       |	Незавершенка.Затрата,
	                       |	Незавершенка.ХарактеристикаЗатраты,
	                       |	СУММА(Незавершенка.Количество) КАК Количество,
	                       |	СУММА(Незавершенка.Сумма) КАК Стоимость,
	                       |	Незавершенка.СерияЗатраты,
	                       |	Незавершенка.Организация
	                       |ИЗ
	                       |	(ВЫБРАТЬ
	                       |		НезавершенноеПроизводство.Подразделение КАК Подразделение,
	                       |		НезавершенноеПроизводство.СчетУчета КАК СчетУчета,
	                       |		НезавершенноеПроизводство.СтатьяЗатрат КАК СтатьяЗатрат,
	                       |		НезавершенноеПроизводство.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                       |		НезавершенноеПроизводство.Заказ КАК Заказ,
	                       |		НезавершенноеПроизводство.Затрата КАК Затрата,
	                       |		НезавершенноеПроизводство.ХарактеристикаЗатраты КАК ХарактеристикаЗатраты,
	                       |		НезавершенноеПроизводство.КоличествоОстаток КАК Количество,
	                       |		НезавершенноеПроизводство.СтоимостьОстаток КАК Сумма,
	                       |		НезавершенноеПроизводство.СерияЗатраты КАК СерияЗатраты,
	                       |		НезавершенноеПроизводство.Организация КАК Организация
	                       |	ИЗ
	                       |		РегистрНакопления.НезавершенноеПроизводствоМеждународныйУчет.Остатки(
	                       |				&ДатаКонца,
	                       |				Организация = &Организация
	                       |					И СчетУчета = &СчетУчета
	                       |					И Подразделение = &Подразделение) КАК НезавершенноеПроизводство
	                       |	
	                       |	ОБЪЕДИНИТЬ ВСЕ
	                       |	
	                       |	ВЫБРАТЬ
	                       |		ВЫБОР
	                       |			КОГДА ЗатратыНаВыпуск.ПодразделениеНЗП = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	                       |				ТОГДА ЗатратыНаВыпуск.Подразделение
	                       |			ИНАЧЕ ЗатратыНаВыпуск.ПодразделениеНЗП
	                       |		КОНЕЦ,
	                       |		ЗатратыНаВыпуск.СчетУчета,
	                       |		ЗатратыНаВыпуск.СтатьяЗатрат,
	                       |		ВЫБОР
	                       |			КОГДА ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.Пустаяссылка)
	                       |				ТОГДА ЗатратыНаВыпуск.НоменклатурнаяГруппа
	                       |			ИНАЧЕ ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП
	                       |		КОНЕЦ,
	                       |		ЗатратыНаВыпуск.ЗаказНЗП,
	                       |		ЗатратыНаВыпуск.Затрата,
	                       |		ЗатратыНаВыпуск.ХарактеристикаЗатраты,
	                       |		-1 * ЗатратыНаВыпуск.КоличествоОборот,
	                       |		-1 * ЗатратыНаВыпуск.СуммаОборот,
	                       |		ЗатратыНаВыпуск.СерияЗатраты,
	                       |		ЗатратыНаВыпуск.Организация
	                       |	ИЗ
	                       |		РегистрНакопления.ЗатратыНаВыпускПродукцииМеждународныйУчет.Обороты(
	                       |				&ДатаНачала,
	                       |				&ДатаКонца,
	                       |				,
	                       |				Организация = &Организация
	                       |					И ВЫБОР
	                       |						КОГДА ПодразделениеНЗП <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.Пустаяссылка)
	                       |							ТОГДА ПодразделениеНЗП = &Подразделение
	                       |						ИНАЧЕ Подразделение = &Подразделение
	                       |					КОНЕЦ
	                       |					И СчетУчета = &СчетУчета) КАК ЗатратыНаВыпуск) КАК Незавершенка
						   // is ЯннуровВФ нач 20150325
	                       |ГДЕ
	                       |	НЕ (Незавершенка.СчетУчета,Незавершенка.СтатьяЗатрат) В
	                       |				(ВЫБРАТЬ
						   |					ТаблТэр.СчетУчета,
	                       |					ТаблТэр.СтатьяЗатрат
	                       |				ИЗ
	                       |					ТаблТэр)
						   // is ЯннуровВФ кон 20150325
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	Незавершенка.Подразделение,
	                       |	Незавершенка.Затрата,
	                       |	Незавершенка.Заказ,
	                       |	Незавершенка.НоменклатурнаяГруппа,
	                       |	Незавершенка.СтатьяЗатрат,
	                       |	Незавершенка.СчетУчета,
	                       |	Незавершенка.ХарактеристикаЗатраты,
	                       |	Незавершенка.СерияЗатраты,
	                       |	Незавершенка.Организация");
  				   
  Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
  Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(СтруктураШапкиДокумента.Дата));
  // is ЯннуровВФ нач 20141016
  //Запрос.УстановитьПараметр("ДатаКонца",КонецМесяца(СтруктураШапкиДокумента.Дата));
  Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецМесяца(СтруктураШапкиДокумента.Дата), ВидГраницы.Включая));
  // is ЯннуровВФ кон 20141016
  возврат Запрос;
КонецФункции	


Функция ПолучитьЗапросПоНастройкамРаспрВоды(СтруктураШапкиДокумента)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДС_РаспределениеВодыМСФО.Номенклатура,
	                      |	ДС_РаспределениеВодыМСФО.Организация,
	                      |	ДС_РаспределениеВодыМСФО.Подразделение,
	                      |	ДС_РаспределениеВодыМСФО.СчетУчета,
	                      |	СУММА(ПРГ_ФактическоеКоличествоДобытойВодыВода.Количество) КАК Количество,
	                      |	СУММА(ПРГ_ФактическоеКоличествоДобытойВодыВода.КоличествоПотреблено) КАК КоличествоПотреблено,
	                      |	ДС_РаспределениеВодыМСФО.СтатьяЗатратВодаТехнологическая,
	                      |	ДС_РаспределениеВодыМСФО.СпособРаспределения,
	                      |	ДС_РаспределениеВодыМСФО.ПодразделениеВодаТехнологическая,
	                      |	ДС_РаспределениеВодыМСФО.СчетУчетаВодаТехнологическая
	                      |ИЗ
	                      |	РегистрСведений.ДС_РаспределениеВодыМСФО КАК ДС_РаспределениеВодыМСФО
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПРГ_ФактическоеКоличествоДобытойВоды.Вода КАК ПРГ_ФактическоеКоличествоДобытойВодыВода
	                      |		ПО ДС_РаспределениеВодыМСФО.Номенклатура = ПРГ_ФактическоеКоличествоДобытойВодыВода.Номенклатура
	                      |ГДЕ
	                      |	ДС_РаспределениеВодыМСФО.Организация = &Организация
	                      |	И ПРГ_ФактическоеКоличествоДобытойВодыВода.Ссылка.Организация = &Организация
						  // is ЯннуровВФ нач 20140711
						  |	И ПРГ_ФактическоеКоличествоДобытойВодыВода.Ссылка.Проведен = ИСТИНА
	                      |	И ПРГ_ФактическоеКоличествоДобытойВодыВода.Ссылка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
						  // is ЯннуровВФ кон 20140711
						  |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ДС_РаспределениеВодыМСФО.Организация,
	                      |	ДС_РаспределениеВодыМСФО.Номенклатура,
	                      |	ДС_РаспределениеВодыМСФО.Подразделение,
	                      |	ДС_РаспределениеВодыМСФО.СчетУчета,
	                      |	ДС_РаспределениеВодыМСФО.СтатьяЗатратВодаТехнологическая,
	                      |	ДС_РаспределениеВодыМСФО.СпособРаспределения,
	                      |	ДС_РаспределениеВодыМСФО.ПодразделениеВодаТехнологическая,
	                      |	ДС_РаспределениеВодыМСФО.СчетУчетаВодаТехнологическая");
						  
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
	// is ЯннуровВФ нач 20140711
	Запрос.УстановитьПараметр("НачалоПериода",СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("ОкончаниеПериода",СтруктураШапкиДокумента.мКонДата);
	// is ЯннуровВФ нач 20140711
	возврат запрос;
КонецФункции


Процедура РаспределитьВОДУ2(СтруктураШапкиДокумента)
	
	ЗапросНастройкиРаспр 	  = ПолучитьЗапросПоНастройкамРаспрВоды(СтруктураШапкиДокумента);
	ЗапросПоИспользованиюВоды = ПолучитьЗапросПоИсползованиюВоды(СтруктураШапкиДокумента);
	
	РегНезавершенноеПроизводство  = РегистрыНакопления.НезавершенноеПроизводствоМеждународныйУчет.СоздатьНаборЗаписей();
	РегНезавершенноеПроизводство.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	ТаблНезавершПодразделениеВода	  		  = РегНезавершенноеПроизводство.Выгрузить();
	ТаблНезавершПроизводствоДляРаспределния	  = РегНезавершенноеПроизводство.Выгрузить();
	
	РегЗатратыНаВыпуск		  = РегистрыНакопления.ЗатратыНаВыпускПродукцииМеждународныйУчет.СоздатьНаборЗаписей();
	РегЗатратыНаВыпуск.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	ТаблЗатратыНаВыпуск = РегЗатратыНаВыпуск.Выгрузить();
	
	ДвиженияХозрасч	= РегистрыБухгалтерии.Международный.СоздатьНаборЗаписей();
	ДвиженияХозрасч.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	ТаблХозрасчетный =	ДвиженияХозрасч.Выгрузить();

	ВидУчетаПоПБУ18 = Неопределено;
	
	РегБазаРаспределения					  =  РегистрыСведений.БазаРаспределенияЗатратМеждународныйУчет.СоздатьНаборЗаписей();
	РегБазаРаспределения.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	//ЗапросНастройкиРаспр.Выполнить().Выгрузить().ВыбратьСтроку();
	ЗапросНезавершенкаВода = ПолучитьЗапросПоНезавершенномуПроизводствуВоды(СтруктураШапкиДокумента);
	
	ВыборкаПоНастройкаВоды = ЗапросНастройкиРаспр.Выполнить().Выбрать();
	Пока ВыборкаПоНастройкаВоды.Следующий() Цикл
		// коэфициенты
		КоличествоВсего 	 = ВыборкаПоНастройкаВоды.Количество;
		КоличествоПотреблено = ВыборкаПоНастройкаВоды.КоличествоПотреблено;
		Если КоличествоПотреблено = 0 Тогда
			Сообщить("Не задано для "+ВыборкаПоНастройкаВоды.Номенклатура+" количество потребленной воды !!!
			| Затраты не будут распределены !!!");
			продолжить;
		КонецЕсли;	
		
		КоличествоВсего 	 = ?(КоличествоВсего< КоличествоПотреблено,КоличествоПотреблено,КоличествоВсего);
		ЗапросНезавершенкаВода.УстановитьПараметр("Подразделение",ВыборкаПоНастройкаВоды.Подразделение);
		ЗапросНезавершенкаВода.УстановитьПараметр("СчетУчета",ВыборкаПоНастройкаВоды.СчетУчета);
		ВыборкаНезавВода  = ЗапросНезавершенкаВода.Выполнить().Выбрать();
		
		ЗапросПоИспользованиюВоды.УстановитьПараметр("Затрата",ВыборкаПоНастройкаВоды.Номенклатура);
		
		ТабИспВоды = ЗапросПоИспользованиюВоды.Выполнить().Выгрузить(); 
		ТаблВнезавершенку = ТабИспВоды;
		ТаблДляСтоков     = ТабИспВоды.Скопировать(,"СчетУчета");
		ТаблДляСтоков.Свернуть("СчетУчета");
		ТаблВнезавершенку.Колонки.Добавить("СуммаРаспределения",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
		
		//ТаблВнезавершенку.Свернуть("Подразделение,СтатьяЗатрат,СчетУчета,НоменклатурнаяГруппа,Заказ,ЗаказНЗП","Количество");
		//ТаблВнезавершенку.Колонки.Добавить("СуммаРаспределения",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
		
		//ТабИспВоды.ВыбратьСтроку(); // идет вбазу
		
		Если ТабИспВоды.Количество() = 0 Тогда // ничего не распределять
			// is ЯннуровВФ нач 20140715
			Сообщить("Не удалось распределить воду "+ВыборкаПоНастройкаВоды.Номенклатура+" 
			| Подразделение "+ВыборкаПоНастройкаВоды.Подразделение+"  
			| СчетУчета  "+ВыборкаПоНастройкаВоды.СчетУчета+"  
			| Количество  "+Формат(ВыборкаПоНастройкаВоды.Количество));
			// is ЯннуровВФ нач 20140715
			продолжить;
		КонецЕсли;	
		
		ИтогоНаСтоки = 0;
		ИтогоНаВоду  = 0;
		Пока ВыборкаНезавВода.Следующий() Цикл
			 ИтогоКолВо 	        		 = ТаблВнезавершенку.Итог("Количество");
			 
			 СуммаНаВоду   = Окр(ВыборкаНезавВода.Стоимость * КоличествоПотреблено / КоличествоВсего,2);
			 СуммаНаСтоки  = ВыборкаНезавВода.Стоимость - СуммаНаВоду;
			 
			 ИтогоНаСтоки = ИтогоНаСтоки +СуммаНаСтоки;
			 ИтогоНаВоду  = ИтогоНаВоду  +СуммаНаВоду;
			 
			 //СформироватьДвиженияПоПодразделениюЗатратВоды(ВыборкаНезавВода,ТаблНезавершПодразделениеВода,СтруктураШапкиДокумента,ВыборкаПоНастройкаВоды);
			 СформироватьДвиженияПоПодразделениюЗатратВоды(ВыборкаНезавВода,ТаблНезавершПодразделениеВода,СтруктураШапкиДокумента,ВыборкаПоНастройкаВоды,РегЗатратыНаВыпуск);
			 //СформироватьЗатратыНаВыпускПоВоде(СтруктураШапкиДокумента,ВыборкаПоНастройкаВоды,ВыборкаНезавВода,РегЗатратыНаВыпуск);
			 
			 ТаблВнезавершенку.ЗаполнитьЗначения(0,"Сумма");
			 ИтогоКолВо 	 =ТаблВнезавершенку.Итог("Количество");
		     РаспрСуммаВоды   = СуммаНаВоду;
		     Для Каждого ТекСтрока Из ТаблВнезавершенку Цикл
				 ПогСумма  		 = Окр(РаспрСуммаВоды * ТекСтрока.Количество / ИтогоКолВо,2);
				 ТекСтрока.Сумма = ПогСумма;
				 ТекСтрока.СуммаРаспределения = ТекСтрока.СуммаРаспределения + ТекСтрока.Сумма;
				 //ДобавитьДвиженияНезавершенкаВода(ТекСтрока,ТаблНезавершПроизводствоДляРаспределния,СтруктураШапкиДокумента,ВыборкаПоНастройкаВоды.Номенклатура,ТаблЗатратыНаВыпуск);
				 СформироватьДвиженияПоРаспределениюВода2(ТекСтрока, ВыборкаНезавВода,
				 	ТаблНезавершПодразделениеВода,ТаблНезавершПроизводствоДляРаспределния,ТаблЗатратыНаВыпуск,
				 	РегНезавершенноеПроизводство,ДвиженияХозрасч,СтруктураШапкиДокумента,ВидУчетаПоПБУ18,ВыборкаПоНастройкаВоды.Номенклатура);
			 	РаспрСуммаВоды = РаспрСуммаВоды - ПогСумма;
			 	ИтогоКолВо     = ИтогоКолВо -ТекСтрока.Количество;
			 Конеццикла; 
			 //Для Каждого ТекСтрока из ТаблДляСтоков Цикл
				 ОприходоватьСтокиВНезавершенку2(ТекСтрока,СтруктураШапкиДокумента,ВыборкаНезавВода,ВыборкаПоНастройкаВоды,СуммаНаСтоки,ТаблНезавершПроизводствоДляРаспределния,ДвиженияХозрасч);
			 //КонецЦикла; 
		 КонецЦикла;	
		 
		 Для Каждого ТекСтрока Из ТаблВнезавершенку Цикл
		 	ОприходоватьВНезавершенкуИнФуПоВоде(ТекСтрока,СтруктураШапкиДокумента,ТаблНезавершПроизводствоДляРаспределния,ВыборкаПоНастройкаВоды.Номенклатура);
		 КонецЦикла;	
		 
		  ТабИспВоды.Свернуть("Подразделение,СчетУчета,НоменклатурнаяГруппа,заказ,Продукция,ХарактеристикаПродукции,СерияПродукции,Спецификация,ЗаказНЗП","Количество");
		    ///ЗаписатьИнформациюПоБазеРаспределения(ТабИспВоды,СтруктураШапкиДокумента,РегБазаРаспределения,ВыборкаПоНастройкаВоды.Номенклатура);
			//СформироватьДвиженияНезавешенноеПроизводтвоВода();
			//распределеим стоимость
		
			//Выборка.ВыбратьСтроку();
	КонецЦикла;
	
	 РегНезавершенноеПроизводство.мПериод  = СтруктураШапкиДокумента.Дата;
	 РегНезавершенноеПроизводство.мТаблицаДвижений =ТаблНезавершПодразделениеВода; 
	 РегНезавершенноеПроизводство.ВыполнитьРасход();
	 РегНезавершенноеПроизводство.Записать(Ложь);
	 
	 РегНезавершенноеПроизводство.мПериод  = СтруктураШапкиДокумента.Дата;
	 РегНезавершенноеПроизводство.мТаблицаДвижений =ТаблНезавершПроизводствоДляРаспределния; 
	 РегНезавершенноеПроизводство.ВыполнитьПриход();
	 РегНезавершенноеПроизводство.Записать(Ложь);
	 
	 РегЗатратыНаВыпуск.мПериод  = СтруктураШапкиДокумента.Дата;
	 РегЗатратыНаВыпуск.мТаблицаДвижений = ТаблЗатратыНаВыпуск; 
	 РегЗатратыНаВыпуск.ДобавитьДвижение();
	 РегЗатратыНаВыпуск.Записать(Ложь);
	 
	 ДвиженияХозрасч.Записать(Ложь);
	 
	 
	 Если РегБазаРаспределения.Количество() > 0 Тогда
		 РегБазаРаспределения.Записать(Ложь);
	 КонецЕслИ;	 
	
	
	//ЗапросИспВода =  ПолучитьЗапросПоИсползованиюВоды(СтруктураШапкиДокумента);
	//ЗапросИспВода.УстановитьПараметр("Затрата",Вода);
	
КонецПроцедуры
Процедура РаспределитьВОДУ(СтруктураШапкиДокумента)
	
	
	ЗапросНастройкиРаспр 	  = ПолучитьЗапросПоНастройкамРаспрВоды(СтруктураШапкиДокумента);
	ЗапросПоИспользованиюВоды = ПолучитьЗапросПоИсползованиюВоды(СтруктураШапкиДокумента);
	
	
	РегНезавершенноеПроизводство  = РегистрыНакопления.НезавершенноеПроизводствоМеждународныйУчет.СоздатьНаборЗаписей();
	РегНезавершенноеПроизводство.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	РегЗатратыНаВыпуск		  = РегистрыНакопления.ЗатратыНаВыпускПродукцииМеждународныйУчет.СоздатьНаборЗаписей();
	РегЗатратыНаВыпуск.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	
	ДвиженияХозрасч	= РегистрыБухгалтерии.Международный.СоздатьНаборЗаписей();
	ДвиженияХозрасч.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	ВыпускПродукции =  РегистрыНакопления.ВыпускПродукцииМеждународныйУчет.СоздатьНаборЗаписей();
	ВыпускПродукции.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	
	РегБазаРаспределения =  РегистрыСведений.БазаРаспределенияЗатратМеждународныйУчет.СоздатьНаборЗаписей();
	РегБазаРаспределения.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	ТаблХозрасчетный =	ДвиженияХозрасч.Выгрузить();

	ВидУчетаПоПБУ18 = Неопределено;
	
	ТаблНезавершПодразделениеВода	  		  = РегНезавершенноеПроизводство.Выгрузить();
	ТаблНезавершПроизводствоДляРаспределния	  = РегНезавершенноеПроизводство.Выгрузить();
	ТаблЗатратыНаВыпуск 					  = РегЗатратыНаВыпуск.Выгрузить();
	
	РегНоменклИскл = РегистрыСведений.НоменклатураИсключаемаяИзБазыРаспределенияОрганизаций.СоздатьНаборЗаписей();
	РегНоменклИскл.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	ТаблНоменклИскл = РегНоменклИскл.Выгрузить();
	
	

	
	//ЗапросНастройкиРаспр.Выполнить().Выгрузить().ВыбратьСтроку();
	ЗапросНезавершенкаВода = ПолучитьЗапросПоНезавершенномуПроизводствуВоды(СтруктураШапкиДокумента);
	ТаблВыпуска = Новый ТаблицаЗначений;
	ТаблВыпуска.Колонки.Добавить("ПодразделениеПолучатель");
	ТаблВыпуска.Колонки.Добавить("СтатьяЗатратПолучатель");
	ТаблВыпуска.Колонки.Добавить("НоменклатурнаяГруппаПолучатель");
	ТаблВыпуска.Колонки.Добавить("ПродукцияПолучатель");
	ТаблВыпуска.Колонки.Добавить("СчетДт");
	ТаблВыпуска.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
	ТаблВыпуска.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));	
	ТаблВыпуска.Колонки.Добавить("ВременнаяРазница",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));	
	ТаблВыпуска.Колонки.Добавить("ПостояннаяРазница",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));	
	
	ВыборкаПоНастройкаВоды = ЗапросНастройкиРаспр.Выполнить().Выбрать();
	Пока ВыборкаПоНастройкаВоды.Следующий() Цикл
		// коэфициенты
		КоличествоВсего 	 = ВыборкаПоНастройкаВоды.Количество;
		КоличествоПотреблено = ВыборкаПоНастройкаВоды.КоличествоПотреблено;
		Если КоличествоПотреблено = 0 Тогда
			Сообщить("Не задано для "+ВыборкаПоНастройкаВоды.Номенклатура+" количество потребленной воды !!!
			| Затраты не будут распределены !!!");
			продолжить;
		КонецЕсли;	
		
		НоваяНоменклИскл = ТаблНоменклИскл.Добавить();
		НоваяНоменклИскл.Номенклатура  = ВыборкаПоНастройкаВоды.Номенклатура;
		
		КоличествоВсего 	 = ?(КоличествоВсего< КоличествоПотреблено,КоличествоПотреблено,КоличествоВсего);
		ЗапросНезавершенкаВода.УстановитьПараметр("Подразделение",ВыборкаПоНастройкаВоды.Подразделение);
		ЗапросНезавершенкаВода.УстановитьПараметр("СчетУчета",ВыборкаПоНастройкаВоды.СчетУчета);
		ВыборкаНезавВода  = ЗапросНезавершенкаВода.Выполнить().Выбрать();
		
		ЗапросПоИспользованиюВоды.УстановитьПараметр("Затрата",ВыборкаПоНастройкаВоды.Номенклатура);
		
		ТабИспВоды = ЗапросПоИспользованиюВоды.Выполнить().Выгрузить(); 
		Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		//	ТабИспВоды.ЗаполнитьЗначения(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства,"СчетУчета");
		КонецЕсли;	
		
		ТаблВнезавершенку = ТабИспВоды;
		ТаблДляСтоков     = ТабИспВоды.Скопировать(,"СчетУчета");
		ТаблДляСтоков.Свернуть("СчетУчета");
		ТаблВнезавершенку.Колонки.Добавить("СуммаРаспределения",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
		ТаблВнезавершенку.Колонки.Добавить("СуммаРаспределенияПостояннаяРазница",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
		ТаблВнезавершенку.Колонки.Добавить("СуммаРаспределенияВременнаяРазница",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
		ТаблВнезавершенку.Колонки.Добавить("ПостояннаяРазница",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
		ТаблВнезавершенку.Колонки.Добавить("ВременнаяРазница",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
		ДобавлятьКоличествоЗатраты = Истина;
		
		//ТаблВнезавершенку.Свернуть("Подразделение,СтатьяЗатрат,СчетУчета,НоменклатурнаяГруппа,Заказ,ЗаказНЗП","Количество");
		//ТаблВнезавершенку.Колонки.Добавить("СуммаРаспределения",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
		
		//ТабИспВоды.ВыбратьСтроку(); // идет вбазу
		
		Если ТабИспВоды.Количество() = 0 Тогда // ничего не распределять
			продолжить;
		КонецЕсли;	
		СуммаЗатрат = 0;
		ИтогоНаСтоки = 0;
		ИтогоНаВоду  = 0;
		
		СуммаЗатратВременнаяРазница  = 0;
		ИтогоНаСтокиВременнаяРазница = 0;
		ИтогоНаВодуВременнаяРазница  = 0;
		
		СуммаЗатратПостояннаяРазница  = 0;
		ИтогоНаСтокиПостояннаяРазница = 0;
		ИтогоНаВодуПостояннаяРазница  = 0;
		
		ТаблВыпуска.Очистить();
		
		Пока ВыборкаНезавВода.Следующий() Цикл
			 ИтогоКолВо 	        		 = ТаблВнезавершенку.Итог("Количество");
			 
			 СуммаНаВоду   = Окр(ВыборкаНезавВода.Стоимость * КоличествоПотреблено / КоличествоВсего,2);
			 СуммаНаСтоки  = ВыборкаНезавВода.Стоимость - СуммаНаВоду;
			 
			 СуммаЗатрат   = СуммаЗатрат + ВыборкаНезавВода.Стоимость;
			 
			 ИтогоНаСтоки = ИтогоНаСтоки +СуммаНаСтоки;
			 ИтогоНаВоду  = ИтогоНаВоду  +СуммаНаВоду;
			 
			   СуммаНаВодуВременнаяРазница = 0;
			   СуммаНаВодуПостояннаяРазница = 0;
					
			   СуммаНаСтокиВременнаяРазница = 0;
			   СуммаНаСтокиПостояннаяРазница = 0;
					
			   СуммаЗатратВременнаяРазница  = 0;
			   СуммаЗатратПостояннаяРазница = 0;
					
			 ИтогоНаСтокиПостояннаяРазница = ИтогоНаСтокиПостояннаяРазница + СуммаНаСтокиПостояннаяРазница;
			 ИтогоНаВодуПостояннаяРазница  = ИтогоНаВодуПостояннаяРазница  + СуммаНаВодуПостояннаяРазница;
			   
			 ИтогоНаСтокиВременнаяРазница  = ИтогоНаСтокиВременнаяРазница  + СуммаНаСтокиВременнаяРазница;
			 ИтогоНаВодуВременнаяРазница   = ИтогоНаВодуВременнаяРазница   + СуммаНаВодуВременнаяРазница;
			   
			 
			 //СформироватьДвиженияПоПодразделениюЗатратВоды(ВыборкаНезавВода,ТаблНезавершПодразделениеВода,СтруктураШапкиДокумента,ВыборкаПоНастройкаВоды);
			 СформироватьДвиженияПоПодразделениюЗатратВоды(ВыборкаНезавВода,ТаблНезавершПодразделениеВода,СтруктураШапкиДокумента,ВыборкаПоНастройкаВоды,РегЗатратыНаВыпуск);
			 //СформироватьЗатратыНаВыпускПоВоде(СтруктураШапкиДокумента,ВыборкаПоНастройкаВоды,ВыборкаНезавВода,РегЗатратыНаВыпуск);
			 
			 ТаблВнезавершенку.ЗаполнитьЗначения(0,"Сумма");
			 ТаблВнезавершенку.ЗаполнитьЗначения(0,"ПостояннаяРазница");
			 ТаблВнезавершенку.ЗаполнитьЗначения(0,"ВременнаяРазница");
			 ИтогоКолВо 	 = ТаблВнезавершенку.Итог("Количество");
		     РаспрСуммаВоды  = СуммаНаВоду;
			 РаспрСуммаВодыВременнаяРазница   = СуммаНаВодуВременнаяРазница;
			 РаспрСуммаВодыПостояннаяРазница  = СуммаНаВодуПостояннаяРазница;
			 
		     Для Каждого ТекСтрока Из ТаблВнезавершенку Цикл
				 ПогСумма  		 = Окр(РаспрСуммаВоды * ТекСтрока.Количество / ИтогоКолВо,2);
				 ТекСтрока.Сумма = ПогСумма;
				 ТекСтрока.СуммаРаспределения = ТекСтрока.СуммаРаспределения + ТекСтрока.Сумма;
				 
				 ПогСуммаПостояннаяРазница   = Окр(РаспрСуммаВодыПостояннаяРазница * ТекСтрока.Количество / ИтогоКолВо,2);
				 ТекСтрока.ПостояннаяРазница = ПогСуммаПостояннаяРазница;
				 ТекСтрока.СуммаРаспределенияПостояннаяРазница = ТекСтрока.СуммаРаспределенияПостояннаяРазница + ТекСтрока.ПостояннаяРазница;
				 
				 ПогСуммаВременнаяРазница   =  Окр(РаспрСуммаВодыВременнаяРазница * ТекСтрока.Количество / ИтогоКолВо,2);
				 ТекСтрока.ВременнаяРазница = ПогСуммаВременнаяРазница;
				 ТекСтрока.СуммаРаспределенияВременнаяРазница = ТекСтрока.СуммаРаспределенияВременнаяРазница + ТекСтрока.ВременнаяРазница;
				 
				 //ДобавитьДвиженияНезавершенкаВода(ТекСтрока,ТаблНезавершПроизводствоДляРаспределния,СтруктураШапкиДокумента,ВыборкаПоНастройкаВоды.Номенклатура,ТаблЗатратыНаВыпуск);
				 СформироватьДвиженияПоРаспределениюВода(ТекСтрока, ВыборкаНезавВода,
				 	ТаблНезавершПодразделениеВода,ТаблНезавершПроизводствоДляРаспределния,ТаблЗатратыНаВыпуск,
				 	РегНезавершенноеПроизводство,ДвиженияХозрасч,СтруктураШапкиДокумента,ВидУчетаПоПБУ18,ВыборкаПоНастройкаВоды.Номенклатура,
				 	ДобавлятьКоличествоЗатраты );
				 
				 РаспрСуммаВоды = РаспрСуммаВоды - ПогСумма;
				 
				 РаспрСуммаВодыВременнаяРазница   = РаспрСуммаВодыВременнаяРазница  - ПогСуммаВременнаяРазница;
				 РаспрСуммаВодыПостояннаяРазница  = РаспрСуммаВодыПостояннаяРазница - ПогСуммаПостояннаяРазница;
				 
				 ИтогоКолВо     = ИтогоКолВо -ТекСтрока.Количество;
			 Конеццикла; 
			 ДобавлятьКоличествоЗатраты = Ложь;
			 ОприходоватьСтокиВНезавершенку(ТекСтрока,СтруктураШапкиДокумента,ВыборкаНезавВода,ВыборкаПоНастройкаВоды,СуммаНаСтоки,ТаблНезавершПроизводствоДляРаспределния,ДвиженияХозрасч,СуммаНаСтокиВременнаяРазница,СуммаНаСтокиПостояннаяРазница);
			 //КонецЦикла; 
		 КонецЦикла;	
		 
		 
		 //Для Каждого ТекСтрока из ТаблДляСтоков Цикл
		 Для Каждого ТекСтрока Из ТаблВнезавершенку Цикл
			 НоваяСтрока = ТаблВыпуска.Добавить();
			 НоваяСтрока.ПодразделениеПолучатель 		= ТекСтрока.Подразделение;
			 НоваяСтрока.СтатьяЗатратПолучатель  		= ТекСтрока.СтатьяЗатрат;
			 НоваяСтрока.НоменклатурнаяГруппаПолучатель = ТекСтрока.НоменклатурнаяГруппа;
			 НоваяСтрока.ПродукцияПолучатель		    = ТекСтрока.Продукция;
			 НоваяСтрока.Количество						= ТекСтрока.Количество;
			 НоваяСтрока.СчетДт							= ТекСтрока.СчетУчета;
			 НоваяСтрока.Сумма							= ТекСтрока.СуммаРаспределения;
			 НоваяСтрока.ВременнаяРазница				= ТекСтрока.СуммаРаспределенияВременнаяРазница;
			 НоваяСтрока.ПостояннаяРазница				= ТекСтрока.СуммаРаспределенияПостояннаяРазница;
		 КонецЦикла;
		 
		 
		 Если КоличествоПотреблено < КоличествоВсего Тогда // стоки
			 НоваяСтрока = ТаблВыпуска.Добавить();
			 НоваяСтрока.ПодразделениеПолучатель 		= ВыборкаПоНастройкаВоды.ПодразделениеВодаТехнологическая;
			 НоваяСтрока.СтатьяЗатратПолучатель  		= ВыборкаПоНастройкаВоды.СтатьяЗатратВодаТехнологическая;
			 НоваяСтрока.Количество						= КоличествоВсего-КоличествоПотреблено;
			 НоваяСтрока.Сумма							= ИтогоНаСтоки;
			 НоваяСтрока.СчетДт 						= ВыборкаПоНастройкаВоды.СчетУчетаВодаТехнологическая;
			 НоваяСтрока.ВременнаяРазница				= ИтогоНаСтокиВременнаяРазница;
			 НоваяСтрока.ПостояннаяРазница				= ИтогоНаСтокиПостояннаяРазница;
		 КонецЕсли; 
		 
		 Для Каждого ТекСтрока Из ТаблВнезавершенку Цикл
		 	ОприходоватьВНезавершенкуИнФуПоВоде(ТекСтрока,СтруктураШапкиДокумента,ТаблНезавершПроизводствоДляРаспределния,ВыборкаПоНастройкаВоды.Номенклатура);
		 КонецЦикла;	
		 
		 ТабИспВоды.Свернуть("Подразделение,СчетУчета,НоменклатурнаяГруппа,заказ,Продукция,ХарактеристикаПродукции,СерияПродукции,Спецификация,ЗаказНЗП","Количество");
		 ТаблВыпуска.Свернуть("СчетДт,ПодразделениеПолучатель,СтатьяЗатратПолучатель,НоменклатурнаяГруппаПолучатель,ПродукцияПолучатель","Количество,Сумма,ВременнаяРазница,ПостояннаяРазница");
		 СформироватьДвиженияПоВыпускуПоВоде(СтруктураШапкиДокумента,ВыпускПродукции,ТабИспВоды,КоличествоВсего,ВыборкаПоНастройкаВоды,СуммаЗатрат,ТаблВыпуска,РегЗатратыНаВыпуск);
		    ///ЗаписатьИнформациюПоБазеРаспределения(ТабИспВоды,СтруктураШапкиДокумента,РегБазаРаспределения,ВыборкаПоНастройкаВоды.Номенклатура);
			//СформироватьДвиженияНезавешенноеПроизводтвоВода();
			//распределеим стоимость
		
			//Выборка.ВыбратьСтроку();
	КонецЦикла;
	
	 РегНезавершенноеПроизводство.мПериод  = СтруктураШапкиДокумента.Дата;
	 РегНезавершенноеПроизводство.мТаблицаДвижений =ТаблНезавершПодразделениеВода; 
	 РегНезавершенноеПроизводство.ВыполнитьРасход();
	 РегНезавершенноеПроизводство.Записать(Ложь);
	 
	 РегНезавершенноеПроизводство.мПериод  = СтруктураШапкиДокумента.Дата;
	 РегНезавершенноеПроизводство.мТаблицаДвижений =ТаблНезавершПроизводствоДляРаспределния; 
	 РегНезавершенноеПроизводство.ВыполнитьПриход();
	 РегНезавершенноеПроизводство.Записать(Ложь);
	 
	 РегЗатратыНаВыпуск.мПериод  = СтруктураШапкиДокумента.Дата;
	 РегЗатратыНаВыпуск.мТаблицаДвижений = ТаблЗатратыНаВыпуск; 
	 РегЗатратыНаВыпуск.ДобавитьДвижение();
	 РегЗатратыНаВыпуск.Записать(Ложь);
	 
	 ДвиженияХозрасч.Записать(Ложь);
	 
	 ТаблНоменклИскл.ЗаполнитьЗначения(СтруктураШапкиДокумента.Организация,"Организация");
	 ТаблНоменклИскл.Свернуть("Активность,Период,Организация,Номенклатура,ХарактеристикаНоменклатуры,СерияНоменклатуры");
	 РегНоменклИскл.мПериод = СтруктураШапкиДокумента.Дата;
	 РегНоменклИскл.мТаблицаДвижений = ТаблНоменклИскл;
	 РегНоменклИскл.ВыполнитьДвижения();
	 РегНоменклИскл.Записать(Ложь);
	 
	 Если РегБазаРаспределения.Количество() > 0 Тогда
		 РегБазаРаспределения.Записать(Ложь);
	 КонецЕслИ;	
	 
	 Если ВыпускПродукции.Количество() > 0 Тогда
		 ВыпускПродукции.Записать();
	 КонецЕсли;
	
	
	//ЗапросИспВода =  ПолучитьЗапросПоИсползованиюВоды(СтруктураШапкиДокумента);
	//ЗапросИспВода.УстановитьПараметр("Затрата",Вода);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоВыпускуПоВоде(СтруктураШапкиДокумента,ВыпускПродукции,ТабИспВоды,КоличествоВсего,ВыборкаПоНастройкаВоды,СуммаЗатрат,ТаблВыпуска,РегЗатратыНавыпуск)
	
	
	//ТаблВыпуска.Свернуть("ПодразделениеПолучатель,СтатьяЗатратПолучатель,НоменклатурнаяГруппаПолучатель,ПродукцияПолучатель","Количество,Сумма");	
	
	Для Каждого ТекСтрока Из ТаблВыпуска Цикл
		НоваяСтрока = ВыпускПродукции.Добавить();
		НоваяСтрока.Период 	      = СтруктураШапкиДокумента.Дата;
		НоваяСтрока.Организация   = СтруктураШапкиДокумента.Организация;
		НоваяСтрока.Продукция     = ВыборкаПоНастройкаВоды.Номенклатура;
		НоваяСтрока.Подразделение = ВыборкаПоНастройкаВоды.Подразделение;
		НоваяСтрока.Качество	  = Справочники.Качество.Новый;
		НоваяСтрока.Количество	  = ТекСтрока.Количество;
		НоваяСтрока.Стоимость     = ТекСтрока.Сумма; 
		НоваяСтрока.КодОперации   = Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнутрУслугиНаПостЗатраты; 
		НоваяСтрока.СчетУчетаНЗП  = ВыборкаПоНастройкаВоды.СчетУчета; 
		
		НоваяСтрока.ПодразделениеПолучатель			= ТекСтрока.ПодразделениеПолучатель;
		НоваяСтрока.СтатьяЗатратПолучатель          = ТекСтрока.СтатьяЗатратПолучатель;
		НоваяСтрока.НоменклатурнаяГруппаПолучатель  = ТекСтрока.НоменклатурнаяГруппаПолучатель;
		НоваяСтрока.ПродукцияПолучатель				= ТекСтрока.ПродукцияПолучатель;
		
		НоваяСтрока.СчетДт 				  = ТекСтрока.СчетДт;
		
	КонецЦикла;	
	
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		
	КонецЕсли;	
	
	
//	НоваяСтрока.
	
КонецПроцедуры	

Процедура ДобавитьДвиженияНезавершенкаВода(ТекСтрока,ТаблНезавершПроизводствоДляРаспределния,СтруктураШапкиДокумента,Затрата,ТаблЗатратыНаВыпуск)
	
	НоваяСтрока = ТаблНезавершПроизводствоДляРаспределния.Добавить();
	НоваяСтрока.Организация 	= СтруктураШапкиДокумента.Организация;
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока,"Подразделение,СтатьяЗатрат,СчетУчета,НоменклатурнаяГруппа,Заказ");
	НоваяСтрока.Заказ  	     = ?(ЗначениеЗаполнено(ТекСтрока.ЗаказНЗП),ТекСтрока.ЗаказНЗП,ТекСтрока.Заказ);
	НоваяСтрока.Количество	 = ТекСтрока.Количество;
	НоваяСтрока.Стоимость    = ТекСтрока.Сумма;
	НоваяСтрока.Затрата 	 = Затрата;
	НоваяСтрока.КодОперации  = Перечисления.КодыОперацийНезавершенноеПроизводство.СписаниеПартийВПроизводствоОперативно;
	
	
	НоваяСтрока				    =  ТаблЗатратыНаВыпуск.Добавить();
	НоваяСтрока.Организация 	= СтруктураШапкиДокумента.Организация;
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока,"Подразделение,СтатьяЗатрат,СчетУчета,НоменклатурнаяГруппа,Продукция,ХарактеристикаПродукции,СерияПродукции,Спецификация,СтатьяЗатрат,Затрата,ХарактеристикаЗатраты,СерияЗатраты,Заказ,Сумма");
	НоваяСтрока.НоменклатурнаяГруппаНЗП	= ТекСтрока.НоменклатурнаяГруппа;
	НоваяСтрока.ПодразделениеНЗП		= ТекСтрока.Подразделение;
	НоваяСтрока.ЗаказНЗП				= ТекСтрока.Заказ;
	НоваяСтрока.КодОперации  = Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ПрямыеЗатраты;
	
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
		
	КонецЕсли;	
	
	//НоваяСтрока.КодОперации  = Перечисления.КодыОперацийНезавершенноеПроизводство.УслугиКонтрагентаНаПроизводство
	///ТаблВнезавершенку.Свернуть("Подразделение,СтатьяЗатрат,СчетУчета,НоменклатурнаяГруппа,Заказ,ЗаказНЗП","Количество");
	
КонецПроцедуры	

Процедура ЗаписатьИнформациюПоБазеРаспределения(ТабИспВоды,СтруктураШапкиДокумента,РегБазаРаспределения,СпособРаспределенияЗатрат)
	ИндексБазы = 0;
	//Для каждого ТекСтрока Из ТабИспВоды Цикл
	//	ИндексБазы 				= ИндексБазы +1;
	//	НоваяЗапись  			= РегБазаРаспределения.Добавить();
	//	НоваяЗапись.Период		 = СтруктураШапкиДокумента.дата;	
	//	НоваяЗапись.Организация = СтруктураШапкиДокумента.Организация; 
	//	НоваяЗапись.СпособРаспределенияЗатрат = СпособРаспределенияЗатрат;
	//	НоваяЗапись.Подразделение   		  = ТекСтрока.подразделение;
	//	НоваяЗапись.СчетУчета 				  = ТекСтрока.СчетУчета;
	//	НоваяЗапись.НоменклатурнаяГруппа 	  = ТекСтрока.НоменклатурнаяГруппа;
	//	НоваяЗапись.Заказ					  = ТекСтрока.заказ;
	//	НоваяЗапись.Продукция				  = ТекСтрока.Продукция;
	//	НоваяЗапись.ХарактеристикаПродукции	  = ТекСтрока.ХарактеристикаПродукции;
	//	НоваяЗапись.СерияПродукции			  = ТекСтрока.СерияПродукции;
	//	НоваяЗапись.Спецификация			  = ТекСтрока.Спецификация;
	//	//сделать определение от заказа
	//	НоваяЗапись.ВариантВыпускаПродукции   = Перечисления.ВариантыВыпускаПродукции.СобственнаяПродукция;
	//	НоваяЗапись.ВидВыпуска				  = Перечисления.ВидыВыпуска.Выпуск;
	//	НоваяЗапись.НоменклатурнаяГруппаНЗП 	= ТекСтрока.НоменклатурнаяГруппа;
	//	НоваяЗапись.ПодразделениеНЗП			= ТекСтрока.Подразделение;
	//	НоваяЗапись.ЗаказНЗП					= ТекСтрока.ЗаказНЗП;
	//	НоваяЗапись.БазаПриход					= ТекСтрока.Количество;
	//	НоваяЗапись.База						= ТекСтрока.Количество;
	//	НоваяЗапись.ИндексБазыРаспределения     = ИндексБазы;
	//КонецЦикла;	
		
	
КонецПроцедуры	

Процедура СформироватьДвиженияПоПодразделениюЗатратВоды(ВыборкаНезавВода,ТаблНезавершПодразделениеВода,СтруктураШапкиДокумента,ВыборкаПоНастройкаВоды,РегЗатратыНаВыпуск)
	
	
	если ВыборкаНезавВода.Количество = 0 и ВыборкаНезавВода.Стоимость = 0 Тогда
		возврат;
	КонецЕсли;	
	
	НоваяСтрока = ТаблНезавершПодразделениеВода.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаНезавВода);
	НоваяСтрока.КодОперации  = Перечисления.КодыОперацийНезавершенноеПроизводство.СписаниеНЗПРегламент;
	
	///НоваяСтрока = РегЗатратыНаВыпуск.Добавить();
	
	НоваяСтрока = РегЗатратыНаВыпуск.Добавить();
	НоваяСтрока.Период = СтруктураШапкиДокумента.Период;
	НоваяСтрока.Активность = Истина;
	
	НоваяСтрока.Подразделение  = ВыборкаНезавВода.Подразделение;
	//Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете или СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		НоваяСтрока.СчетУчета 	= ВыборкаНезавВода.СчетУчета;
		НоваяСтрока.Организация	= ВыборкаНезавВода.Организация;
	//КонецЕсли;	
		
	НоваяСтрока.Продукция 	= ВыборкаПоНастройкаВоды.Номенклатура;
	
	НоваяСтрока.Затрата 	= ВыборкаНезавВода.Затрата;
	НоваяСтрока.Заказ		= ВыборкаНезавВода.Заказ;
	НоваяСтрока.ХарактеристикаЗатраты =ВыборкаНезавВода.ХарактеристикаЗатраты;
	НоваяСтрока.СерияЗатраты          = ВыборкаНезавВода.СерияЗатраты;
	
	НоваяСтрока.НоменклатурнаяГруппаНЗП = ВыборкаНезавВода.НоменклатурнаяГруппа;
	НоваяСтрока.ЗаказНЗП = ВыборкаНезавВода.Заказ;
	НоваяСтрока.ПодразделениеНЗП = ВыборкаНезавВода.Подразделение;
	
	Если СтруктураШапкиДокумента.Свойство("ДетализацияПоФиксированнойСтатьеЗатрат") Тогда
		ДетализацияПоФиксированнойСтатьеЗатрат = СтруктураШапкиДокумента.ДетализацияПоФиксированнойСтатьеЗатрат;
	Иначе
		ДетализацияПоФиксированнойСтатьеЗатрат = Ложь;
	КонецЕсли;
	
	НоваяСтрока.СтатьяЗатрат  = ВыборкаНезавВода.СтатьяЗатрат;
	НоваяСтрока.КодОперации = Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ПрямыеЗатраты;
	
	НоваяСтрока.КосвенныеЗатраты = Ложь;
	НоваяСтрока.ЗатратыВстречногоВыпуска = Ложь;
	
	НоваяСтрока.Количество = ВыборкаНезавВода.Количество;
	НоваяСтрока.Сумма = ВыборкаНезавВода.Стоимость;
	
	//Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
	//	НоваяСтрока.ПостояннаяРазница = ПостояннаяРазница;
	//	НоваяСтрока.ВременнаяРазница = ВременнаяРазница;
	//КонецЕсли;
	
	// Если в наборе записей 1000 строк, запишем набор.
	//Если НаборЗаписейЗатратыНаВыпуск.Количество() = 1000 Тогда
	//	НаборЗаписейЗатратыНаВыпуск.Записать(Ложь);
	//КонецЕсли;
	

	
КонецПроцедуры	

Процедура ОприходоватьВНезавершенкуИнФуПоВоде(ТекСтрока,СтруктураШапкиДокумента,ТаблНезавершПроизводствоДляРаспределния,Затрата)
	НоваяСтрока = ТаблНезавершПроизводствоДляРаспределния.Добавить();
	НоваяСтрока.Организация 	= СтруктураШапкиДокумента.Организация;
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока,"Подразделение,СтатьяЗатрат,СчетУчета,НоменклатурнаяГруппа,Заказ");
	НоваяСтрока.Заказ  	     = ?(ЗначениеЗаполнено(ТекСтрока.ЗаказНЗП),ТекСтрока.ЗаказНЗП,ТекСтрока.Заказ);
	// is ЯннуровВФ нач 20140702 0И-001466 Количество утраивается при последующем расчете 
	НоваяСтрока.Количество	 = ТекСтрока.Количество;
	// is ЯннуровВФ кон 20140702
	НоваяСтрока.Стоимость    = ТекСтрока.СуммаРаспределения;
	НоваяСтрока.Затрата 	 = Затрата;
	НоваяСтрока.КодОперации  = Перечисления.КодыОперацийНезавершенноеПроизводство.СписаниеПартийВПроизводствоОперативно;
	
КонецПроцедуры	

Процедура ОприходоватьСтокиВНезавершенку2(ТекСтрока,СтруктураШапкиДокумента,ВыборкаНезавВода,ВыборкаПоНастройкаВоды,СуммаНаСтоки,ТаблНезавершПроизводствоДляРаспределния,РегистрБух)
	  НоваяСтрока = ТаблНезавершПроизводствоДляРаспределния.Добавить();
	  НоваяСтрока.Организация   = СтруктураШапкиДокумента.Организация;
	  НоваяСтрока.Подразделение = ВыборкаПоНастройкаВоды.ПодразделениеВодаТехнологическая;
	  НоваяСтрока.СтатьяЗатрат  = ВыборкаПоНастройкаВоды.СтатьяЗатратВодаТехнологическая;
	  НоваяСтрока.СчетУчета		= ВыборкаПоНастройкаВоды.СчетУчетаВодаТехнологическая;
	  НоваяСтрока.Стоимость		= СуммаНаСтоки;
	  
	  //Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
		Если СуммаНаСтоки <> 0 Тогда  
			НоваяПроводка = РегистрБух.Добавить();
			НоваяПроводка.Организация    = СтруктураШапкиДокумента.Организация;
			НоваяПроводка.Активность	 = Истина;
			НоваяПроводка.Период		 = СтруктураШапкиДокумента.Дата;
			НоваяПроводка.Содержание 	 = "Расчет фактической себестоимости, вода технологическая";
			//													
			НоваяПроводка.Сумма = СуммаНаСтоки;
			//
			НоваяПроводка.СчетДт = ВыборкаПоНастройкаВоды.СчетУчетаВодаТехнологическая;
			//
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Подразделения", ВыборкаПоНастройкаВоды.ПодразделениеВодаТехнологическая);		
			//БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "НоменклатурныеГруппы", ТекСтрока.НоменклатурнаяГруппа);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СтатьиЗатрат", ВыборкаПоНастройкаВоды.СтатьяЗатратВодаТехнологическая);
			//												
			НоваяПроводка.СчетКт = ВыборкаНезавВода.СчетУчета;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "Подразделения", ВыборкаНезавВода.Подразделение);		
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "НоменклатурныеГруппы", ВыборкаНезавВода.НоменклатурнаяГруппа);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиЗатрат", ВыборкаНезавВода.СтатьяЗатрат);
		КонецЕсли;	
		//
		//Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		//	Если ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ВР
		//	 ИЛИ ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
		//		НоваяПроводка.ВидУчетаДт = ВидУчетаПоПБУ18;
		//		НоваяПроводка.ВидУчетаКт = ВидУчетаПоПБУ18;
		//	КонецЕсли;
		//КонецЕсли;
	//КонецЕсли;		  
	  
КонецПроцедуры	
Процедура ОприходоватьСтокиВНезавершенку(ТекСтрока,СтруктураШапкиДокумента,ВыборкаНезавВода,ВыборкаПоНастройкаВоды,СуммаНаСтоки,ТаблНезавершПроизводствоДляРаспределния,РегистрБух,СуммаНаСтокиВременнаяРазница,СуммаНаСтокиПостояннаяРазница)
	  НоваяСтрока = ТаблНезавершПроизводствоДляРаспределния.Добавить();
	  НоваяСтрока.Организация   = СтруктураШапкиДокумента.Организация;
	  НоваяСтрока.Подразделение = ВыборкаПоНастройкаВоды.ПодразделениеВодаТехнологическая;
	  НоваяСтрока.СтатьяЗатрат  = ВыборкаПоНастройкаВоды.СтатьяЗатратВодаТехнологическая;
	  НоваяСтрока.СчетУчета		= ВыборкаПоНастройкаВоды.СчетУчетаВодаТехнологическая;
	  НоваяСтрока.Стоимость		= СуммаНаСтоки;
	  НоваяСтрока.КодОперации   = Перечисления.КодыОперацийНезавершенноеПроизводство.КорректировкаНЗПФикс;
	  
		Если СуммаНаСтоки <> 0 Тогда  
			НоваяПроводка = РегистрБух.Добавить();
			НоваяПроводка.Организация    = СтруктураШапкиДокумента.Организация;
			НоваяПроводка.Активность	 = Истина;
			НоваяПроводка.Период		 = СтруктураШапкиДокумента.Дата;
			НоваяПроводка.Содержание 	 = "Расчет фактической себестоимости, вода технологическая";
			//													
			НоваяПроводка.Сумма = СуммаНаСтоки;
			//
			НоваяПроводка.СчетДт = ВыборкаПоНастройкаВоды.СчетУчетаВодаТехнологическая;
			//
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Подразделения", ВыборкаПоНастройкаВоды.ПодразделениеВодаТехнологическая);		
			//БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "НоменклатурныеГруппы", ТекСтрока.НоменклатурнаяГруппа);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СтатьиЗатрат", ВыборкаПоНастройкаВоды.СтатьяЗатратВодаТехнологическая);
			//												
			НоваяПроводка.СчетКт = ВыборкаНезавВода.СчетУчета;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "Подразделения", ВыборкаНезавВода.Подразделение);		
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "НоменклатурныеГруппы", ВыборкаНезавВода.НоменклатурнаяГруппа);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиЗатрат", ВыборкаНезавВода.СтатьяЗатрат);
		КонецЕсли;	
	
	  
КонецПроцедуры	



Процедура СформироватьДвиженияПоРаспределениюВода2(ТекСтрока,ВыборкаНезавВода,ТаблНезавершПодразделениеВода,ТаблНезавершПроизводствоДляРаспределния,ТаблЗатратыНаВыпуск,
	РегНезавершенноеПроизводство,РегистрБух,СтруктураШапкиДокумента,ВидУчетаПоПБУ18,Затрата)
	
	
	НоваяСтрока				    =  ТаблЗатратыНаВыпуск.Добавить();
	НоваяСтрока.Организация 	= СтруктураШапкиДокумента.Организация;
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока,"Подразделение,СтатьяЗатрат,СчетУчета,НоменклатурнаяГруппа,Продукция,ХарактеристикаПродукции,СерияПродукции,Спецификация,СтатьяЗатрат,Затрата,ХарактеристикаЗатраты,СерияЗатраты,Заказ,Сумма");
	НоваяСтрока.НоменклатурнаяГруппаНЗП	= ТекСтрока.НоменклатурнаяГруппа;
	НоваяСтрока.ПодразделениеНЗП		= ТекСтрока.Подразделение;
	НоваяСтрока.ЗаказНЗП				= ТекСтрока.Заказ;
	НоваяСтрока.КодОперации  			= Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ПрямыеЗатраты;
	
	НоваяСтрока.ДС_КорСчет					= ВыборкаНезавВода.СчетУчета; 
	НоваяСтрока.ДС_КорПодразделение    		= ВыборкаНезавВода.Подразделение; 
	НоваяСтрока.ДС_КорСтатьяЗатрат			= ВыборкаНезавВода.СтатьяЗатрат;
	НоваяСтрока.ДС_КорНоменклатурнаяГруппа 	= ВыборкаНезавВода.НоменклатурнаяГруппа;
	
	
	
	//Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
	  Если ТекСтрока.Сумма <> 0 Тогда	
		НоваяПроводка = РегистрБух.Добавить();
		НоваяПроводка.Организация    = СтруктураШапкиДокумента.Организация;
		НоваяПроводка.Активность	 = Истина;
		НоваяПроводка.Период		 = СтруктураШапкиДокумента.Дата;
		НоваяПроводка.Содержание 	 = "Расчет фактической себестоимости, распределение затрат по воде";
		//													
		НоваяПроводка.Сумма = ТекСтрока.Сумма;
		//
		НоваяПроводка.СчетДт = ТекСтрока.СчетУчета;
		//
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Подразделения", ТекСтрока.Подразделение);		
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "НоменклатурныеГруппы", ТекСтрока.НоменклатурнаяГруппа);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СтатьиЗатрат", ТекСтрока.СтатьяЗатрат);
		//												
		НоваяПроводка.СчетКт = ВыборкаНезавВода.СчетУчета;
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "Подразделения", ВыборкаНезавВода.Подразделение);		
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "НоменклатурныеГруппы", ВыборкаНезавВода.НоменклатурнаяГруппа);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиЗатрат", ВыборкаНезавВода.СтатьяЗатрат);
		//
		//Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		//	Если ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ВР
		//	 ИЛИ ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
		//		НоваяПроводка.ВидУчетаДт = ВидУчетаПоПБУ18;
		//		НоваяПроводка.ВидУчетаКт = ВидУчетаПоПБУ18;
		//	КонецЕсли;
		//КонецЕсли;
	 КонецЕсли;	
  //КонецЕсли;	
	
КонецПроцедуры	
Процедура СформироватьДвиженияПоРаспределениюВода(ТекСтрока,ВыборкаНезавВода,ТаблНезавершПодразделениеВода,ТаблНезавершПроизводствоДляРаспределния,ТаблЗатратыНаВыпуск,
	РегНезавершенноеПроизводство,РегистрБух,СтруктураШапкиДокумента,ВидУчетаПоПБУ18,Затрата,ДобавлятьКоличествоЗатраты )
	
	
	НоваяСтрока				    =  ТаблЗатратыНаВыпуск.Добавить();
	НоваяСтрока.Организация 	= СтруктураШапкиДокумента.Организация;
	ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока,"Подразделение,СтатьяЗатрат,СчетУчета,НоменклатурнаяГруппа,Продукция,ХарактеристикаПродукции,СерияПродукции,Спецификация,СтатьяЗатрат,Затрата,ХарактеристикаЗатраты,СерияЗатраты,Заказ,Сумма");
	НоваяСтрока.НоменклатурнаяГруппаНЗП	= ТекСтрока.НоменклатурнаяГруппа;
	НоваяСтрока.ПодразделениеНЗП		= ТекСтрока.Подразделение;
	НоваяСтрока.ЗаказНЗП				= ТекСтрока.Заказ;
	НоваяСтрока.КодОперации  			= Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ПрямыеЗатраты;
	
	НоваяСтрока.ДС_КорСчет					= ВыборкаНезавВода.СчетУчета; 
	НоваяСтрока.ДС_КорПодразделение    		= ВыборкаНезавВода.Подразделение; 
	НоваяСтрока.ДС_КорСтатьяЗатрат			= ВыборкаНезавВода.СтатьяЗатрат;
	НоваяСтрока.ДС_КорНоменклатурнаяГруппа	= ВыборкаНезавВода.НоменклатурнаяГруппа;
	
	Если ТекСтрока.Сумма <> 0 Тогда	
		НоваяПроводка = РегистрБух.Добавить();
		НоваяПроводка.Организация    = СтруктураШапкиДокумента.Организация;
		НоваяПроводка.Активность	 = Истина;
		НоваяПроводка.Период		 = СтруктураШапкиДокумента.Дата;
		НоваяПроводка.Содержание 	 = "Расчет фактической себестоимости, распределение затрат по воде";
		//													
		НоваяПроводка.Сумма = ТекСтрока.Сумма;
		//
		НоваяПроводка.СчетДт = ТекСтрока.СчетУчета;
		//
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Подразделения", ТекСтрока.Подразделение);		
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "НоменклатурныеГруппы", ТекСтрока.НоменклатурнаяГруппа);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СтатьиЗатрат", ТекСтрока.СтатьяЗатрат);
		//												
		НоваяПроводка.СчетКт = ВыборкаНезавВода.СчетУчета;
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "Подразделения", ВыборкаНезавВода.Подразделение);		
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "НоменклатурныеГруппы", ВыборкаНезавВода.НоменклатурнаяГруппа);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиЗатрат", ВыборкаНезавВода.СтатьяЗатрат);
		//
		//Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		//	Если ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ВР
		//	 ИЛИ ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
		//		НоваяПроводка.ВидУчетаДт = ВидУчетаПоПБУ18;
		//		НоваяПроводка.ВидУчетаКт = ВидУчетаПоПБУ18;
		//	КонецЕсли;
		//КонецЕсли;
	КонецЕсли;	
	 
КонецПроцедуры	


Функция ПолучитьЗапросДляФормированияБазыПрямыхЗатрат(СтруктураШапкиДокумента, ИспСтатьи = Ложь)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
							| ПРГ_ИсключаемыеПодразделенияБазаПрямыхЗатратСрезПоследних.Подразделение
							|ПОМЕСТИТЬ ТаблНеиспПодр
							|ИЗ
							|	РегистрСведений.ПРГ_ИсключаемыеПодразделенияБазаПрямыхЗатрат.СрезПоследних(&ДатаКонца, ) КАК ПРГ_ИсключаемыеПодразделенияБазаПрямыхЗатратСрезПоследних
							|ГДЕ
							|	ПРГ_ИсключаемыеПодразделенияБазаПрямыхЗатратСрезПоследних.Использование
							|СГРУППИРОВАТЬ ПО
							|	ПРГ_ИсключаемыеПодразделенияБазаПрямыхЗатратСрезПоследних.Подразделение
							| ;
							|ВЫБРАТЬ
							|	ПРГ_СтатьиДляРасчетаБазыПрямыхЗатратСрезПоследних.СтатьяЗатрат
							|ПОМЕСТИТЬ ТаблЗатрат
							|ИЗ
							|	РегистрСведений.ПРГ_СтатьиДляРасчетаБазыПрямыхЗатрат.СрезПоследних(
							|			&ДатаКонца,
							|			Организация = &Организация
							|				И Использование) КАК ПРГ_СтатьиДляРасчетаБазыПрямыхЗатратСрезПоследних
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВыпускПродукции.Подразделение,
	                      |	ВыпускПродукции.СчетУчетаНЗП,
	                      |	СУММА(ВыпускПродукции.Количество) КАК Количество
	                      |ПОМЕСТИТЬ ТаблВыпуска
	                      |ИЗ
	                      |	РегистрНакопления.ВыпускПродукции%СуффиксУчета% КАК ВыпускПродукции
	                      |ГДЕ
	                      |	ВыпускПродукции.Период МЕЖДУ &ДатаНачала И &ДатаКонца
	                      |	И ВыпускПродукции.Организация = &Организация
	                      |	И ВыпускПродукции.Активность
	                      |	И ВыпускПродукции.СчетУчетаНЗП = &СчетУчета
						|	И Не ВыпускПродукции.Подразделение  в (выбрать ТаблНеиспПодр.Подразделение из ТаблНеиспПодр)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВыпускПродукции.СчетУчетаНЗП,
	                      |	ВыпускПродукции.Подразделение
	                      |
	                      |ИМЕЮЩИЕ
	                      |	СУММА(ВыпускПродукции.Количество) > 0
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЗатратыНаВыпуск.Подразделение,
	                      |	ЗатратыНаВыпуск.СчетУчета,
	                      |	ЗатратыНаВыпуск.НоменклатурнаяГруппа,
	                      |	ЗатратыНаВыпуск.ЗаказНЗП,
	                      |	СУММА(ЗатратыНаВыпуск.СуммаОборот) КАК Сумма,
	                      |	ЗатратыНаВыпуск.Организация,
	                      |	ЗатратыНаВыпуск.Продукция,"
	                      +?(ИспСтатьи,"ЗатратыНаВыпуск.СтатьяЗатрат,","")+"
	                      |	ЗатратыНаВыпуск.СерияПродукции,
	                      |	ЗатратыНаВыпуск.Спецификация,
	                      |	ЗатратыНаВыпуск.ХарактеристикаПродукции
	                      |ИЗ
	                      |	РегистрНакопления.ЗатратыНаВыпускПродукции%СуффиксУчета%.Обороты(
	                      |			&ДатаНачала,
	                      |			&ДатаКонца,
	                      |			,
	                      |			СчетУчета В (&СчетУчета)
	                      |				И Организация = &Организация
	                      |				И СтатьяЗатрат В
	                      |					(ВЫБРАТЬ
	                      |						таблзатрат.СтатьяЗатрат
	                      |					ИЗ
	                      |						таблзатрат)
	                      |				И (подразделение, СчетУчета) В
	                      |					(ВЫБРАТЬ
	                      |						ТаблВыпуска.Подразделение,
	                      |						ТаблВыпуска.СчетУчетаНЗП
	                      |					ИЗ
	                      |						ТаблВыпуска)
//начало изменений Ожиганов А. 31.05.2017 б/н по письму Григорьевой исключение из базы распределения косвенных расходов сыворотки 
						  |
						  | И не  Продукция в (ВЫБРАТЬ
						  |	ИсключаемаяНоменклатура.Номенклатура
						  |ИЗ
						  |	РегистрСведений.НоменклатураИсключаемаяИзБазыРаспределения КАК ИсключаемаяНоменклатура
						  |ГДЕ
						  |	ИсключаемаяНоменклатура.Активность 
						  |	И ИсключаемаяНоменклатура.Период МЕЖДУ &ДатаНачала И &ДатаКонца
						  |
						  |СГРУППИРОВАТЬ ПО
						  |	ИсключаемаяНоменклатура.Номенклатура)							
//конец изменений 							
						  
						  |  ) КАК ЗатратыНаВыпуск
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ЗатратыНаВыпуск.Подразделение,
	                      |	ЗатратыНаВыпуск.СчетУчета,
	                      |	ЗатратыНаВыпуск.НоменклатурнаяГруппа,
	                      |	ЗатратыНаВыпуск.ЗаказНЗП,
	                      |	ЗатратыНаВыпуск.Организация,
	                      |	ЗатратыНаВыпуск.Продукция,"
						  +?(ИспСтатьи,"ЗатратыНаВыпуск.СтатьяЗатрат,","")+"
	                      |	ЗатратыНаВыпуск.СерияПродукции,
	                      |	ЗатратыНаВыпуск.Спецификация,
	                      |	ЗатратыНаВыпуск.ХарактеристикаПродукции");
						  
						  
	Запрос.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		Запрос.Текст, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
						  
						  
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(СтруктураШапкиДокумента.Дата));
	Запрос.УстановитьПараметр("ДатаКонца",КонецМесяца(СтруктураШапкиДокумента.Дата));
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);	
	Запрос.УстановитьПараметр("СчетУчета",ПланыСчетов.Международный._ОсновноеПроизводство);
	
	
	возврат Запрос;
	
КонецФункции	

Функция ПолучитьОстаткиНЗПВспогательноПроизводство(СтруктураШапкиДокумента)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПРГ_НастройкиЗакрытияКосвенныхРасходов.Подразделение,
	                      |	ПРГ_НастройкиЗакрытияКосвенныхРасходов.СчетУчетаБУ КАК СчетУчета,
	                      |	ПРГ_НастройкиЗакрытияКосвенныхРасходов.НоменклатурнаяГруппа,
	                      |	ПРГ_НастройкиЗакрытияКосвенныхРасходов.СпособРаспределенияЗатрат
	                      |ПОМЕСТИТЬ НастройкиЗакрытия
	                      |ИЗ
	                      |	РегистрСведений.ПРГ_НастройкиЗакрытияКосвенныхРасходов КАК ПРГ_НастройкиЗакрытияКосвенныхРасходов
	                      |ГДЕ
	                      |	ПРГ_НастройкиЗакрытияКосвенныхРасходов.Организация = &Организация
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	НезавершенноеПроизводство.Организация,
	                      |	НезавершенноеПроизводство.Подразделение,
	                      |	НезавершенноеПроизводство.СчетУчета,
	                      |	НезавершенноеПроизводство.СтатьяЗатрат,
	                      |	НезавершенноеПроизводство.НоменклатурнаяГруппа,
	                      |	НезавершенноеПроизводство.Заказ,
	                      |	НезавершенноеПроизводство.Затрата,
	                      |	НезавершенноеПроизводство.ХарактеристикаЗатраты,
	                      |	НезавершенноеПроизводство.СерияЗатраты,
	                      |	НезавершенноеПроизводство.КоличествоОстаток КАК Количество,
	                      |	НезавершенноеПроизводство.СтоимостьОстаток КАК Стоимость,
	                      |	НастройкиЗакрытия.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаРаспределения,
	                      |	НастройкиЗакрытия.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат
	                      |ИЗ
	                      |	РегистрНакопления.НезавершенноеПроизводствоМеждународныйУчет.Остатки(
	                      |			&ДатаКонца,
	                      |			Организация = &Организация
	                      |				И (СчетУчета, Подразделение) В
	                      |					(ВЫБРАТЬ
	                      |						НастройкиЗакрытия.СчетУчета,
	                      |						НастройкиЗакрытия.Подразделение
	                      |					ИЗ
	                      |						НастройкиЗакрытия)) КАК НезавершенноеПроизводство
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкиЗакрытия КАК НастройкиЗакрытия
	                      |		ПО НезавершенноеПроизводство.Подразделение = НастройкиЗакрытия.Подразделение
	                      |			И НезавершенноеПроизводство.СчетУчета = НастройкиЗакрытия.СчетУчета
	                      |ИТОГИ ПО
	                      |	СпособРаспределенияЗатрат");
						  
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ДатаКонца",КонецДня(СтруктураШапкиДокумента.Дата)+1);
	возврат Запрос;
КонецФункции

Процедура ПолучитьНачальныйИКонечныйНомерПередела(
	СтруктураШапкиДокумента,
	СпособРасчета,
	НачальныйПередел,
	КонечныйПередел,
	ВсегоПеределов = 0,
	МинимальныйПередел = 0
	)
	
	ТекстЗапросаСКомментариями = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА РаспределениеЗатрат.НачальныйПередел > ЕСТЬNULL(ПорядокЗакрытия.МинимальныйПередел, 0)
	|		И ЕСТЬNULL(ПорядокЗакрытия.МинимальныйПередел, 0) <> 0
	|	ТОГДА
	|		ЕСТЬNULL(ПорядокЗакрытия.МинимальныйПередел, 0)
	|	ИНАЧЕ
	|		РаспределениеЗатрат.НачальныйПередел
	|	КОНЕЦ КАК НачальныйПередел,
	|	РаспределениеЗатрат.КонечныйПередел,
	|	РаспределениеЗатратПолное.ВсегоПеределов,
	|	РаспределениеЗатратПолное.МинимальныйПередел
	|ИЗ (	
	|	ВЫБРАТЬ
	|		МИНИМУМ(
	|			ВЫБОР КОГДА РаспределениеЗатрат.Подразделение.ВидПодразделения В (&ВидыПодразделений) ТОГДА
	|				РаспределениеЗатрат.НомерПередела
	|			ИНАЧЕ
	|				9999
	|			КОНЕЦ
	|		) КАК НачальныйПередел,
	|		МАКСИМУМ(
	|			ВЫБОР КОГДА РаспределениеЗатрат.Подразделение.ВидПодразделения В (&ВидыПодразделений) ТОГДА
	|				РаспределениеЗатрат.НомерПередела
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|		) КАК КонечныйПередел
	|		
	|	ИЗ
	|		РегистрСведений.РаспределениеЗатратПоПеределам%СуффиксОрганизаций% КАК РаспределениеЗатрат
	|	ГДЕ
	|		РаспределениеЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|		//ДляРеглУчета И РаспределениеЗатрат.Организация = &Организация
	|		
	|	) КАК РаспределениеЗатрат
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			МИНИМУМ(НомерПередела) КАК МинимальныйПередел
	|		ИЗ
	|			РегистрСведений.ПорядокЗакрытияПодразделений%СуффиксОрганизаций%.СрезПоследних(&КонДата, 
	|				Подразделение.ВидПодразделения В (&ВидыПодразделений)
	|				//ДляРеглУчета И Организация = &Организация 
	|				) КАК ПорядокЗакрытия
	|		ГДЕ
	|			НомерПередела <> 0
	|		) КАК ПорядокЗакрытия
	|	ПО
	|		Истина
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			МИНИМУМ(РаспределениеЗатратПолное.НомерПередела) КАК МинимальныйПередел,
	|			МАКСИМУМ(РаспределениеЗатратПолное.НомерПередела) КАК ВсегоПеределов
	|		ИЗ
	|			РегистрСведений.РаспределениеЗатратПоПеределам%СуффиксОрганизаций% КАК РаспределениеЗатратПолное
	|		ГДЕ
	|			РаспределениеЗатратПолное.Период МЕЖДУ &НачДата И &КонДата
	|			//ДляРеглУчета И РаспределениеЗатратПолное.Организация = &Организация
	|
	|		) КАК РаспределениеЗатратПолное
	|	ПО
	|		ИСТИНА
	|";	
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	
	Если СпособРасчета = Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам Тогда
		Запрос.УстановитьПараметр("ВидыПодразделений", СтруктураШапкиДокумента.мВидыПодразделенийДляРасчетаПоПеределам);
	Иначе
		Запрос.УстановитьПараметр("ВидыПодразделений", СтруктураШапкиДокумента.мВидыПодразделенийДляРасчетаПоПодразделениям);
	КонецЕсли;
	
	НачальныйПередел = 0;
	КонечныйПередел = 0;
	ВсегоПеределов = 0;
	МинимальныйПередел = 0;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			НачальныйПередел = ?(Выборка.НачальныйПередел = NULL, 0, Выборка.НачальныйПередел);
			КонечныйПередел = ?(Выборка.КонечныйПередел = NULL, 0, Выборка.КонечныйПередел);
			ВсегоПеределов = ?(Выборка.ВсегоПеределов = NULL, 0, Выборка.ВсегоПеределов);
			МинимальныйПередел = ?(Выборка.МинимальныйПередел = NULL, 0, Выборка.МинимальныйПередел);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПолучитьНачальныйИКонечныйНомерПередела()

Функция СформироватьЗапросПоБазеРаспределенияЗатрат(
	СтруктураШапкиДокумента,
	ТекстЗапросаСКомментариями,
	КосвенныеЗатраты
	)
	
	ТекстЗапроса = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		ТекстЗапросаСКомментариями, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачДата", СтруктураШапкиДокумента.мНачДата);
	Запрос.УстановитьПараметр("КонДата", СтруктураШапкиДокумента.мКонДата);
	Запрос.УстановитьПараметр("КонГраница", СтруктураШапкиДокумента.мКонГраница);
	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("РаспределениеКосвенныхЗатрат", КосвенныеЗатраты);
	Запрос.УстановитьПараметр("ВыпускПродукцииПоФиксированнойСтоимости", Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииПоФиксированнойСтоимости);
	Запрос.УстановитьПараметр("ХарактерРаспределенияПроизводственныеРасходы", Перечисления.ХарактерРаспределенияЗатрат.ПроизводственныеРасходы);
	Запрос.УстановитьПараметр("ПустойХарактерРаспределения", Перечисления.ХарактерРаспределенияЗатрат.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("ПустаяНоменклатурнаяГруппа", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяПродукция", Справочники.Номенклатура.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяХарактеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());

	Возврат Запрос;

КонецФункции // СформироватьЗапросПоБазеРаспределенияЗатрат()

Функция СформироватьТекстЗапросаБазаРаспределенияЗатрат()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Распределение.Подразделение,
	|	Распределение.Продукция,
	|	Распределение.ХарактеристикаПродукции,
	|	Распределение.СерияПродукции,
	|	Распределение.НомерПередела,
	|	Распределение.Продукция.ВестиУчетПоСериямВНЗП КАК ВестиУчетПоСериямВНЗП
	|
	|ПОМЕСТИТЬ РаспределениеПродукцииПоПеределам
	|ИЗ			
	|	РегистрСведений.РаспределениеПродукцииПоПеределам%СуффиксОрганизаций% КАК Распределение
	|
	|ГДЕ
	|	Распределение.Период МЕЖДУ &НачДата И &КонДата
	|	И &РаспределениеКосвенныхЗатрат
	|	И Не Распределение.КорректировкаНЗП
	|	И Не Распределение.ОприходованиеНЗП
	|	И Не Распределение.ВозвратИзНЗП
	|	//ДляРеглУчета И Распределение.Организация = &Организация
 	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыпускПродукции.Подразделение,
	|	ВыпускПродукции.НоменклатурнаяГруппа,
	|	ВыпускПродукции.Продукция,
	|	ВыпускПродукции.ХарактеристикаПродукции,
	|	ВыпускПродукции.СерияПродукции
	|
	|ПОМЕСТИТЬ ВыпускПродукции
	|ИЗ
	|	РегистрНакопления.ВыпускПродукции%СуффиксУчета% КАК ВыпускПродукции
	|
	|ГДЕ
	|	ВыпускПродукции.Период МЕЖДУ &НачДата И &КонДата
	|	И ВыпускПродукции.КодОперации <> ЗНАЧЕНИЕ(Перечисление.КодыОперацийВыпускПродукции.ВыпускПродукцииПоФиксированнойСтоимости)
	|	//ДляРеглУчета И ВыпускПродукции.Организация = &Организация
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ВыпускПродукции.Подразделение,
	|	ВыпускПродукции.НоменклатурнаяГруппа,
	|	МИНИМУМ(Распределение.НомерПередела) КАК НомерПередела
	|
	|ПОМЕСТИТЬ ВыпускПродукцииПоПеределам
	|ИЗ
	|	ВыпускПродукции КАК ВыпускПродукции
	|					
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РаспределениеПродукцииПоПеределам КАК Распределение
	|	ПО
	|		ВыпускПродукции.Подразделение = Распределение.Подразделение
	|		И ВыпускПродукции.Продукция = Распределение.Продукция
	|		И ВыпускПродукции.ХарактеристикаПродукции = Распределение.ХарактеристикаПродукции
	|		И ВыпускПродукции.СерияПродукции = Распределение.СерияПродукции
	|					
	|ГДЕ
	|	ВыпускПродукции.НоменклатурнаяГруппа <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|			
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукции.Подразделение,
	|	ВыпускПродукции.НоменклатурнаяГруппа
	|			
	|ОБЪЕДИНИТЬ ВСЕ
	|			
	|ВЫБРАТЬ
	|	ВыпускПродукции.Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка),
	|	МАКСИМУМ(Распределение.НомерПередела) КАК НомерПередела
	|ИЗ
	|	ВыпускПродукции КАК ВыпускПродукции
	|					
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РаспределениеПродукцииПоПеределам КАК Распределение
	|	ПО
	|		ВыпускПродукции.Подразделение = Распределение.Подразделение
	|		И ВыпускПродукции.Продукция = Распределение.Продукция
	|		И ВыпускПродукции.ХарактеристикаПродукции = Распределение.ХарактеристикаПродукции
	|		И (ВыпускПродукции.СерияПродукции = Распределение.СерияПродукции
	|			И Распределение.ВестиУчетПоСериямВНЗП
	|			ИЛИ Не Распределение.ВестиУчетПоСериямВНЗП)
	|					
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукции.Подразделение
	|			
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	//ДляРеглУчета БазаРаспределенияЗатрат.Организация,
	|	БазаРаспределенияЗатрат.СпособРаспределенияЗатрат КАК СпособРаспределения,
	|	БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения КАК РаспределятьНаПодчиненныеПодразделения,
	|	БазаРаспределенияЗатрат.Подразделение,
	|	БазаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	БазаРаспределенияЗатрат.Заказ,
	|	БазаРаспределенияЗатрат.Подразделение КАК ПодразделениеНЗП,
	|	БазаРаспределенияЗатрат.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаНЗП,
	|	БазаРаспределенияЗатрат.Заказ КАК ЗаказНЗП,
	|	ЗНАЧЕНИЕ(Перечисление.ХарактерРаспределенияЗатрат.ПустаяСсылка) КАК ХарактерРаспределенияЗатрат,
	|	
	|	МИНИМУМ(
	|		ЕСТЬNULL(ВыпускПродукции.НомерПередела, 1)
	|		) КАК НомерПередела,
	|
	|	//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|	//ДляБухУчета ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь) КАК ЕНВД,
	|
	|	//ДляНалУчета СУММА(
	|	//ДляНалУчета 	ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриходНУ ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриходНУ = 0 ТОГДА
	|	//ДляНалУчета 		БазаРаспределенияЗатрат.БазаПриходНУ
	|	//ДляНалУчета 	ИНАЧЕ
	|	//ДляНалУчета 		БазаРаспределенияЗатрат.БазаПриходНУ /
	|	//ДляНалУчета 		ВЫБОР КОГДА БазаРаспределенияЗатратВсего.БазаПриходНУ ЕСТЬ NULL ИЛИ БазаРаспределенияЗатратВсего.БазаПриходНУ = 0 ТОГДА
	|	//ДляНалУчета 			1
	|	//ДляНалУчета 		ИНАЧЕ
	|	//ДляНалУчета 			БазаРаспределенияЗатратВсего.БазаПриходНУ
	|	//ДляНалУчета 		КОНЕЦ
	|	//ДляНалУчета 	КОНЕЦ
	|	//ДляНалУчета ) КАК БазаПриходНУ,
	|	//ДляНалУчета МАКСИМУМ(
	|	//ДляНалУчета 	ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриходНУ ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриходНУ = 0 ТОГДА
	|	//ДляНалУчета 		1
	|	//ДляНалУчета 	ИНАЧЕ
	|	//ДляНалУчета 		БазаРаспределенияНаПодчиненные.БазаПриходНУ /
	|	//ДляНалУчета 		ВЫБОР КОГДА БазаРаспределенияНаПодчиненныеВсего.БазаПриходНУ ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненныеВсего.БазаПриходНУ = 0 ТОГДА
	|	//ДляНалУчета 			1
	|	//ДляНалУчета 		ИНАЧЕ
	|	//ДляНалУчета 			БазаРаспределенияНаПодчиненныеВсего.БазаПриходНУ
	|	//ДляНалУчета 		КОНЕЦ
	|	//ДляНалУчета 	КОНЕЦ
	|	//ДляНалУчета ) КАК БазаНаПодчиненныеНУ,
	|
	|	СУММА(
	|		ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриход = 0 ТОГДА
	|			БазаРаспределенияЗатрат.БазаПриход
	|		ИНАЧЕ
	|			(БазаРаспределенияЗатрат.БазаПриход /
	|			ВЫБОР КОГДА БазаРаспределенияЗатратВсего.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияЗатратВсего.БазаПриход = 0 ТОГДА
	|				1
	|			ИНАЧЕ
	|				БазаРаспределенияЗатратВсего.БазаПриход
	|			КОНЕЦ)
	|		КОНЕЦ
	|	) КАК БазаПриход,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА БазаРаспределенияНаПодчиненные.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненные.БазаПриход = 0 ТОГДА
	|			1
	|		ИНАЧЕ
	|			БазаРаспределенияНаПодчиненные.БазаПриход /
	|			ВЫБОР КОГДА БазаРаспределенияНаПодчиненныеВсего.БазаПриход ЕСТЬ NULL ИЛИ БазаРаспределенияНаПодчиненныеВсего.БазаПриход = 0 ТОГДА
	|				1
	|			ИНАЧЕ
	|				БазаРаспределенияНаПодчиненныеВсего.БазаПриход
	|			КОНЕЦ
	|		КОНЕЦ
	|	) КАК БазаНаПодчиненные
	|
	|ИЗ
	|	РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|			
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			БазаРаспределенияЗатрат.Подразделение,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			//ДляНалУчета СУММА(БазаРаспределенияЗатрат.БазаПриходНУ) КАК БазаПриходНУ,
	|			СУММА(БазаРаспределенияЗатрат.БазаПриход) КАК БазаПриход
	|		ИЗ
	|			РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|		ГДЕ
	|			БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|			И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|			И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|			//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|
	|		СГРУППИРОВАТЬ ПО
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			БазаРаспределенияЗатрат.Подразделение
	|
	|		) КАК БазаРаспределенияЗатратВсего
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат = БазаРаспределенияЗатратВсего.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.Подразделение = БазаРаспределенияЗатратВсего.Подразделение			
	|		И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения
	|		//ДляРеглУчета И БазаРаспределенияЗатрат.СчетУчета = БазаРаспределенияЗатратВсего.СчетУчета
	|			
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			БазаРаспределенияЗатрат.Подразделение,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			//ДляНалУчета СУММА(БазаРаспределенияЗатрат.БазаПриходНУ) КАК БазаПриходНУ,
	|			СУММА(БазаРаспределенияЗатрат.БазаПриход) КАК БазаПриход
	|		ИЗ
	|			РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|		ГДЕ
	|			БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|			И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|			И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|			//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|
	|		СГРУППИРОВАТЬ ПО
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|			БазаРаспределенияЗатрат.Подразделение
	|
	|		) КАК БазаРаспределенияНаПодчиненные
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.СпособРаспределенияЗатратПоПодразделениям 
	|					= БазаРаспределенияНаПодчиненные.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения
	|		И БазаРаспределенияЗатрат.Подразделение = БазаРаспределенияНаПодчиненные.Подразделение
	|		//ДляРеглУчета И БазаРаспределенияЗатрат.СчетУчета 	= БазаРаспределенияНаПодчиненные.СчетУчета
	|				
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|			//ДляНалУчета СУММА(БазаРаспределенияЗатрат.БазаПриходНУ) КАК БазаПриходНУ,
	|			СУММА(БазаРаспределенияЗатрат.БазаПриход) КАК БазаПриход
	|		ИЗ
	|			РегистрСведений.БазаРаспределенияЗатрат%СуффиксУчета% КАК БазаРаспределенияЗатрат
	|		ГДЕ
	|			БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|			И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|			И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|			//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|
	|		СГРУППИРОВАТЬ ПО
	|			БазаРаспределенияЗатрат.СпособРаспределенияЗатрат
	|
	|		) КАК БазаРаспределенияНаПодчиненныеВсего
	|	ПО
	|		БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.СпособРаспределенияЗатратПоПодразделениям 
	|					= БазаРаспределенияНаПодчиненныеВсего.СпособРаспределенияЗатрат
	|		И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат.РаспределятьНаПодчиненныеПодразделения
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВыпускПродукцииПоПеределам КАК ВыпускПродукции
	|	ПО
	|		БазаРаспределенияЗатрат.Подразделение = ВыпускПродукции.Подразделение
	|		И БазаРаспределенияЗатрат.НоменклатурнаяГруппа = ВыпускПродукции.НоменклатурнаяГруппа
	|			
	|	//ДляБухУчета	ЛЕВОЕ СОЕДИНЕНИЕ (												
	|	//ДляБухУчета		ВЫБРАТЬ
	|	//ДляБухУчета			СчетаУчетаЕНВД.Счет,
	|	//ДляБухУчета			Истина КАК ЕНВД
	|	//ДляБухУчета		ИЗ
	|	//ДляБухУчета			РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаЕНВД
	|	//ДляБухУчета		ГДЕ
	|	//ДляБухУчета			Не СчетаУчетаЕНВД.ПодлежитРаспределению
	|	//ДляБухУчета		) КАК СчетаУчетаЕНВД
	|	//ДляБухУчета	ПО
	|	//ДляБухУчета		БазаРаспределенияЗатрат.СчетУчета = СчетаУчетаЕНВД.Счет
	|			
	|ГДЕ
	|	БазаРаспределенияЗатрат.Период МЕЖДУ &НачДата И &КонДата
	|	И БазаРаспределенияЗатрат.РаспределениеКосвенныхЗатрат = &РаспределениеКосвенныхЗатрат
	|	И БазаРаспределенияЗатрат.РасчетСебестоимостиВыпуска
	|	И БазаРаспределенияЗатрат.СпособРаспределенияЗатрат В (
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			СпособыРаспределения.СпособРаспределенияЗатрат
	|		ИЗ
	|			РегистрСведений.СпособыРаспределенияСтатейЗатрат%СуффиксОрганизаций%.СрезПоследних(&КонГраница, 
	|				//ДляРеглУчета Организация = &Организация
	|			) КАК СпособыРаспределения
	|		ГДЕ
	|			Не СпособыРаспределения.НеРаспределять
	|			И ((&РаспределениеКосвенныхЗатрат 
	|				И СпособыРаспределения.ХарактерРаспределенияЗатрат <> &ХарактерРаспределенияПроизводственныеРасходы)
	|				ИЛИ 
	|				(Не &РаспределениеКосвенныхЗатрат 
	|				И СпособыРаспределения.ХарактерРаспределенияЗатрат = &ХарактерРаспределенияПроизводственныеРасходы)
	|				)
	|		)
	|	//ДляРеглУчета И БазаРаспределенияЗатрат.Организация = &Организация
	|	//ДляБухУчета И Не БазаРаспределенияЗатрат.СчетУчета.Забалансовый
	|			
	|СГРУППИРОВАТЬ ПО
	|	//ДляРеглУчета БазаРаспределенияЗатрат.Организация,
	|	БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|	БазаРаспределенияЗатрат.Подразделение,
	|	БазаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|	//ДляБухУчета ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь),
	|	БазаРаспределенияЗатрат.Заказ
	|			
	|УПОРЯДОЧИТЬ ПО
	|	//ДляРеглУчета БазаРаспределенияЗатрат.Организация,
	|	БазаРаспределенияЗатрат.СпособРаспределенияЗатрат,
	|	//ДляРеглУчета БазаРаспределенияЗатрат.СчетУчета,
	|	//ДляБухУчета ЕСТЬNULL(СчетаУчетаЕНВД.ЕНВД, Ложь),
	|	НомерПередела,
	|	БазаРаспределенияЗатрат.Подразделение,
	|	БазаРаспределенияЗатрат.НоменклатурнаяГруппа,
	|	БазаРаспределенияЗатрат.Заказ
	|";

 	Возврат ТекстЗапроса;

КонецФункции // СформироватьТекстЗапросаБазаРаспределенияЗатрат()



Процедура СформироватьБазуПрямыхЗатрат(СтруктураШапкиДокумента,СтруктураТаблицДвижений) Экспорт
	
	РегБаза = РегистрыСведений.БазаРаспределенияЗатратМеждународныйУчет.СоздатьНаборЗаписей();
	РегБаза.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	ТаблБазы = РегБаза.Выгрузить();
	
	ИнндексБазы  = 0;
	СпособРаспределенияПрямых = Константы.ПРГ_СпособРаспределнияДляПрямыхЗатрат.Получить();
	
	// убрать
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	БазаРаспределенияЗатратМеждународныйУчет.Организация
	                      |ИЗ
	                      |	РегистрСведений.БазаРаспределенияЗатратМеждународныйУчет КАК БазаРаспределенияЗатратМеждународныйУчет
	                      |ГДЕ
	                      |	БазаРаспределенияЗатратМеждународныйУчет.Регистратор = &Ссылка
	                      |	И БазаРаспределенияЗатратМеждународныйУчет.СпособРаспределенияЗатрат = &СпособРаспределенияЗатрат
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	БазаРаспределенияЗатратМеждународныйУчет.Организация");
						  
	Запрос.УстановитьПараметр("СпособРаспределенияЗатрат",СпособРаспределенияПрямых);					  
	Запрос.УстановитьПараметр("Ссылка",СтруктураШапкиДокумента.Ссылка);					  
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		 возврат;
	КонецЕсли;	
	
	ЗапросПобазе =  ПолучитьЗапросДляФормированияБазыПрямыхЗатрат(СтруктураШапкиДокумента);
	
	
	ВыборкаПоБазе = ЗапроСПобазе.Выполнить().Выбрать();
	Пока ВыборкаПоБазе.Следующий() Цикл
		ИнндексБазы = ИнндексБазы+1;
		НоваяСтрока = ТаблБазы.Добавить();
		НоваяСтрока.Организация				    = СтруктураШапкиДокумента.Организация;
		НоваяСтрока.Подразделение 		 		= ВыборкаПоБазе.Подразделение;
		НоваяСтрока.НоменклатурнаяГруппа		= ВыборкаПоБазе.НоменклатурнаяГруппа;  
		НоваяСтрока.СчетУчета			 		= ВыборкаПоБазе.СчетУчета;  
		
		НоваяСтрока.Заказ				 	    = ВыборкаПоБазе.ЗаказНЗП;
		НоваяСтрока.Продукция					= ВыборкаПоБазе.Продукция;
		НоваяСтрока.ХарактеристикаПродукции		= ВыборкаПоБазе.ХарактеристикаПродукции;
		НоваяСтрока.СерияПродукции			 	= ВыборкаПоБазе.СерияПродукции;
		НоваяСтрока.Спецификация			 	= ВыборкаПоБазе.Спецификация;
		НоваяСтрока.ВариантВыпускаПродукции		= Перечисления.ВариантыВыпускаПродукции.СобственнаяПродукция;
		НоваяСтрока.СпособРаспределенияЗатрат 	=  СпособРаспределенияПрямых;
		
		НоваяСтрока.ВариантВыпускаПродукции		= Перечисления.ВариантыВыпускаПродукции.СобственнаяПродукция;
		НоваяСтрока.ВидВыпуска					= Перечисления.ВидыВыпуска.Выпуск;
		НоваяСтрока.ПодразделениеНЗП			=  ВыборкаПоБазе.Подразделение;
		НоваяСтрока.НоменклатурнаяГруппаНЗП		=  ВыборкаПоБазе.НоменклатурнаяГруппа;
		НоваяСтрока.ЗаказНЗП					=  ВыборкаПоБазе.ЗаказНЗП;
		НоваяСтрока.БазаПриход					=  ВыборкаПоБазе.Сумма;
		НоваяСтрока.База						=  ВыборкаПоБазе.Сумма;
		НоваяСтрока.РасчетСебестоимостиВыпуска	=  Истина;
		НоваяСтрока.ИндексБазыРаспределения		= ИнндексБазы;
		//НоваяСтрока.РаспределениеКосвенныхЗатрат = Истина;
	КонецЦикла;	
	
	РегБаза.мПериод = СтруктураШапкиДокумента.Дата;
	РегБаза.мТаблицаДвижений = ТаблБазы;
	РегБаза.ВыполнитьДвижения();
	
	РегБаза.Записать(Ложь);
	
	// для детализации павловой
	Если СтруктураШапкиДокумента.ОтражатьВМеждународномУчете Тогда
		ЗапросПобазеПРГ =  ПолучитьЗапросДляФормированияБазыПрямыхЗатрат(СтруктураШапкиДокумента,Истина);
		
		РегДС_БазаПрямыхЗатрат  = РегистрыСведений.ДС_БазаПрямыхЗатрат.СоздатьНаборЗаписей();
		РегДС_БазаПрямыхЗатрат.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
		
		ТаблДС_БазаПрямыхЗатрат = РегДС_БазаПрямыхЗатрат.Выгрузить();
		
		ВыборкаПоБазе = ЗапросПобазеПРГ.Выполнить().Выбрать();
		Пока ВыборкаПоБазе.Следующий() Цикл
			НоваяСтрока = ТаблДС_БазаПрямыхЗатрат.Добавить();
			НоваяСтрока.Организация             = СтруктураШапкиДокумента.Организация;
			НоваяСтрока.Номенклатура            = ВыборкаПоБазе.Продукция;
			НоваяСтрока.Серия                   = ВыборкаПоБазе.СерияПродукции;
			НоваяСтрока.Характеристика          = ВыборкаПоБазе.ХарактеристикаПродукции;
			НоваяСтрока.СтатьяЗатрат            = ВыборкаПоБазе.СтатьяЗатрат;
			НоваяСтрока.СпособРаспределения     = СпособРаспределенияПрямых;
			НоваяСтрока.Подразделение			= ВыборкаПоБазе.Подразделение;
			НоваяСтрока.Сумма					= ВыборкаПоБазе.Сумма;
		КонецЦикла;	
		
		ТаблДС_БазаПрямыхЗатрат.Свернуть("Период,Активность,Организация,Номенклатура,Серия,Характеристика,СтатьяЗатрат,СпособРаспределения,Подразделение","Сумма");
		
		РегДС_БазаПрямыхЗатрат.мПериод = СтруктураШапкиДокумента.Дата;
		РегДС_БазаПрямыхЗатрат.мТаблицаДвижений = ТаблДС_БазаПрямыхЗатрат;
		РегДС_БазаПрямыхЗатрат.ВыполнитьДвижения();
		РегДС_БазаПрямыхЗатрат.Записать(Ложь);
	КонецЕсли;

	
	//***********************************************************
	//*************************************************************
	//РСАПРЕДЕЛЕНИЕ  ВСПОМОГАТЕЛЬНЫХ ПРОИЗВОДСТВ
	
	
	НачальныйПередел = 0;
	КонечныйПередел = 0;
	ВсегоПеределов = 0;
	МинимальныйПередел = 0;
	
	СпособРасчета = Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам;
	
	ПолучитьНачальныйИКонечныйНомерПередела(
		СтруктураШапкиДокумента,
		СпособРасчета,
		НачальныйПередел,
		КонечныйПередел,
		ВсегоПеределов,
		МинимальныйПередел
		);

	
	ТекстЗапросаСКомментариями 		   = СформироватьТекстЗапросаБазаРаспределенияЗатрат();
	ЗапросБазаРаспределенияНаПродукцию = СформироватьЗапросПоБазеРаспределенияЗатрат(СтруктураШапкиДокумента, ТекстЗапросаСКомментариями, Истина);	
	
	РезультатЗапросаБазаРаспределения  = ЗапросБазаРаспределенияНаПродукцию.Выполнить();
	
	ЗапросНЗП = ПолучитьОстаткиНЗПВспогательноПроизводство(СтруктураШапкиДокумента);
	Выборка = ЗапросНЗП.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		СпособРаспределенияЗатрат =  Выборка.СпособРаспределенияЗатрат;
		ВыборкаНЗП = Выборка.Выбрать();
		Пока ВыборкаНЗП.Следующий() Цикл
			
			  //СторноНЗП();
		КонецЦикла;	
	КонецЦикла;	
	
	
	
КонецПроцедуры	

Процедура РаспределитьЗатратыНаРеализацию(СтруктураПараметров) Экспорт
	
	//Получаем затраты на выпуск текущего месяца и пишем в остаточные регистры накопления 
	ЗатратыНаВыпускОстаткиНаборЗаписей = РегистрыНакопления.ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточный.СоздатьНаборЗаписей();
	ЗатратыНаВыпускОстаткиНаборЗаписей.Отбор.Регистратор.Установить(СтруктураПараметров.Регистратор);
	ДатаРегистратора = СтруктураПараметров.Регистратор.Дата;
	ТаблицаЗатратНаВыпуск = РегистрыНакопления.ЗатратыНаВыпускПродукцииМеждународныйУчет.Обороты(НачалоМесяца(ДатаРегистратора), КонецМесяца(ДатаРегистратора));
	
	Для Каждого стр Из ТаблицаЗатратНаВыпуск Цикл
		НовЗапись = ЗатратыНаВыпускОстаткиНаборЗаписей.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(НовЗапись, стр);
		НовЗапись.Период = ДатаРегистратора;
		НовЗапись.ПериодВыпуска = НачалоМесяца(ДатаРегистратора);
	КонецЦикла;
	ЗатратыНаВыпускОстаткиНаборЗаписей.Записать();
	
	ВыпускОстаткиНаборЗаписей = РегистрыНакопления.ДС_ВыпускПродукцииМеждународныйУчетОстаточный.СоздатьНаборЗаписей();
	ВыпускОстаткиНаборЗаписей.Отбор.Регистратор.Установить(СтруктураПараметров.Регистратор);
	ТаблицаВыпуск = РегистрыНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(НачалоМесяца(ДатаРегистратора), КонецМесяца(ДатаРегистратора));
	
	Для Каждого стр Из ТаблицаВыпуск Цикл
		НовЗапись = ВыпускОстаткиНаборЗаписей.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(НовЗапись, стр);
		НовЗапись.Период = ДатаРегистратора;
		НовЗапись.ПериодВыпуска = НачалоМесяца(ДатаРегистратора);
	КонецЦикла;
	ВыпускОстаткиНаборЗаписей.Записать();	
	
	//Запрос для распределения себестоимости на реализацию
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ПериодВыпуска КАК ПериодВыпуска,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Организация,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Подразделение,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.НоменклатурнаяГруппа,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СчетУчета,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Продукция КАК Продукция,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ХарактеристикаПродукции,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СерияПродукции,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Спецификация,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СтатьяЗатрат,
		|	ЕСТЬNULL(ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СуммаОстаток, 0) КАК Сумма,
		|	ЕСТЬNULL(ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.КоличествоОстаток, 0) КАК Количество,
		|	СУММА(МеждународныйОбороты.КоличествоКорОборот) КАК КоличествоРеализация,
		|	ВЫБОР
		|		КОГДА ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.КоличествоОстаток ЕСТЬ NULL 
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СуммаОстаток, 0) / ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.КоличествоОстаток
		|	КОНЕЦ КАК СебестоимостьЕдиницы
		|ИЗ
		|	РегистрБухгалтерии.Международный.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет = &Счет9002, , , КорСчет = &Счет43, ) КАК МеждународныйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточный.Остатки(&ДатаКонцаМесяца, ) КАК ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДС_ВыпускПродукцииМеждународныйУчетОстаточный.Остатки(&ДатаКонцаМесяца, ) КАК ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки
		|			ПО ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ПериодВыпуска = ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ПериодВыпуска
		|				И ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Организация = ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Организация
		|				И ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Подразделение = ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Подразделение
		|				И ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.НоменклатурнаяГруппа = ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.НоменклатурнаяГруппа
		|				И ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Продукция = ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Продукция
		|				И ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ХарактеристикаПродукции = ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ХарактеристикаПродукции
		|				И ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СерияПродукции = ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СерияПродукции
		|				И ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Спецификация = ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Спецификация
		|		ПО МеждународныйОбороты.КорСубконто1 = ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Продукция
		|			И МеждународныйОбороты.Организация = ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Организация
		|ГДЕ
		|	НЕ ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ПериодВыпуска ЕСТЬ NULL 
		|	И НЕ ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ПериодВыпуска ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ПериодВыпуска,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Организация,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Подразделение,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.НоменклатурнаяГруппа,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СчетУчета,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Продукция,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.ХарактеристикаПродукции,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СерияПродукции,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.Спецификация,
		|	ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СтатьяЗатрат,
		|	ЕСТЬNULL(ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СуммаОстаток, 0),
		|	ЕСТЬNULL(ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.КоличествоОстаток, 0),
		|	ВЫБОР
		|		КОГДА ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.КоличествоОстаток ЕСТЬ NULL 
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ДС_ЗатратыНаВыпускПродукцииМеждународныйУчетОстаточныйОстатки.СуммаОстаток, 0) / ДС_ВыпускПродукцииМеждународныйУчетОстаточныйОстатки.КоличествоОстаток
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодВыпуска
		|ИТОГИ
		|	СУММА(Сумма),
		|	МАКСИМУМ(КоличествоРеализация)
		|ПО
		|	Продукция";

	Запрос.УстановитьПараметр("ДатаКонцаМесяца", Новый Граница(КонецМесяца(ДатаРегистратора), ВидГраницы.Включая));
	//Запрос.УстановитьПараметр("ДатаКонцаМесяца", ТекущаяДата());

	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(КонецМесяца(ДатаРегистратора), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(НачалоМесяца(ДатаРегистратора), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки);
	Запрос.УстановитьПараметр("Счет9002", ПланыСчетов.Международный.СебестоимостьПродаж);

	ВыборкаГруппа = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ЗатратыНаРеализациюНаборЗаписей = РегистрыНакопления.ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчет.СоздатьНаборЗаписей();
    ЗатратыНаРеализациюНаборЗаписей.Отбор.Регистратор.Установить(СтруктураПараметров.Регистратор);
	
	
	Пока ВыборкаГруппа.Следующий() Цикл

		ВыборкаДетальныеЗаписи = ВыборкаГруппа.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			
			//Делаем записи в регистр "Затраты на реализацию продукции"
			ЗаписьЗатратНаРеализацию = ЗатратыНаРеализациюНаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьЗатратНаРеализацию, ВыборкаДетальныеЗаписи);
			ЗаписьЗатратНаРеализацию.Период = ДатаРегистратора;
			ЗаписьЗатратНаРеализацию.Количество = ВыборкаДетальныеЗаписи.Количество;
			ЗаписьЗатратНаРеализацию.Сумма = ВыборкаДетальныеЗаписи.СебестоимостьЕдиницы * ВыборкаДетальныеЗаписи.Количество;
			
			//Расходуем обработанные строки
			ЗаписьЗатратНаВыпуск = ЗатратыНаВыпускОстаткиНаборЗаписей.ДобавитьРасход();
			ЗаполнитьЗначенияСвойств(ЗаписьЗатратНаВыпуск, ВыборкаДетальныеЗаписи);
			ЗаписьЗатратНаВыпуск.Сумма  = ВыборкаДетальныеЗаписи.СебестоимостьЕдиницы * ВыборкаДетальныеЗаписи.Количество;
			ЗаписьЗатратНаВыпуск.Период = ДатаРегистратора;
			
			ЗаписьВыпуск = ВыпускОстаткиНаборЗаписей.ДобавитьРасход();
			ЗаполнитьЗначенияСвойств(ЗаписьВыпуск, ВыборкаДетальныеЗаписи);
			ЗаписьВыпуск.Количество = ВыборкаДетальныеЗаписи.Количество;
			ЗаписьВыпуск.Период = ДатаРегистратора;
			
			
		КонецЦикла;
		
		//Правка себестоимости в таблице "Партии товаров на складах"
		МассивСтрокТоварыНаСкладах = СтруктураПараметров.ТаблицаДвиженийПартииТоваровНаСкладахМеж.НайтиСтроки(Новый Структура("Организация, Номенклатура", СтруктураПараметров.Организация, ВыборкаГруппа.Продукция));	
		Если МассивСтрокТоварыНаСкладах.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;	
		//Получаем коэффициент распределения по складам
		СуммаВсегоСтарая = 0;
		Для Каждого Строка Из МассивСтрокТоварыНаСкладах Цикл
			СуммаВсегоСтарая = СуммаВсегоСтарая + Строка.Стоимость;
		КонецЦикла;
		Коэффициент = ВыборкаГруппа.Сумма/СуммаВсегоСтарая;
		//Корректируем себестоимость
		Для Каждого Строка Из МассивСтрокТоварыНаСкладах Цикл
			Строка.Стоимость = Строка.Стоимость * Коэффициент;
			//Правка себестоимости в проводках
			Для Каждого  СтрокаРег Из СтруктураПараметров.ДвиженияМеждународный Цикл
				Если СтрокаРег.СубконтоКт.Номенклатура = ВыборкаГруппа.Продукция И СтрокаРег.СубконтоКт.Склады = Строка.Склад И СтрокаРег.Организация = СтруктураПараметров.Организация Тогда
			    	СтрокаРег.Сумма = Строка.Стоимость;
				КонецЕсли;	
			КонецЦикла;	
		КонецЦикла;

	КонецЦикла;		
	
	ЗатратыНаРеализациюНаборЗаписей.Записать();
	ЗатратыНаВыпускОстаткиНаборЗаписей.Записать();
	ВыпускОстаткиНаборЗаписей.Записать();
	
КонецПроцедуры	


Процедура КорректировкаЗатрат(СтруктураШапкиДокумента,СтруктураТаблицДвижений) Экспорт

	// is ЯннуровВФ нач 20141117
	КорректировкаЗатратНЗП(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
	// is ЯннуровВФ кон 20141117
	КорректировкаКосвенныхРасходов(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
	
КонецПроцедуры	

//Процедура КорректировкаКосвенныхРасходов(СтруктураШапкиДокумента,СтруктураТаблицДвижений) Экспорт
//	
//	ЗапросКосв 		= ПолучитьЗапросПоКосвеннымРасходомКорректировка(СтруктураШапкиДокумента);
//	ЗапросПоВыпуску = ПолучитьИнформациюПоВыпуску(СтруктураШапкиДокумента);
//	
//	ВыборкаКосв = ЗапросКосв.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
//	Если ВыборкаКосв.Количество() = 0 Тогда
//		возврат;
//	КонецЕслИ;	
//	
//	ТаблВыпусков = ЗапросПоВыпуску.Выполнить().Выгрузить();
//	Если ТаблВыпусков.Количество() = 0 Тогда
//		возврат;
//	КонецЕсли;	
//	ТаблВыпусков.Индексы.Добавить("Уровень1,Уровень2,Уровень3");
//	
//	ИмяРегЗатраты  = "ЗатратыМеждународныйУчет";
//	ИмяРегБух      = "Международный"; 	

//	
//	НаборЗаписейЗатраты  = РегистрыНакопления[ИмяРегЗатраты].СоздатьНаборЗаписей();
//	НаборЗаписейЗатраты.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
//	
//	НаборЗаписейРегБух  = РегистрыБухгалтерии[ИмяРегБух].СоздатьНаборЗаписей();
//	НаборЗаписейРегБух.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);

//	
//	ТаблОшибок = Новый ТаблицаЗначений;
//	ТаблОшибок.Колонки.Добавить("Подразделение");
//	
//	КодОперации = Перечисления.КодыОперацийЗатраты.ВнутренниеУслугиНаПостоянныеЗатраты;
//	
//	Пока ВыборкаКосв.Следующий() Цикл
//		
//		НаПодразделение = Неопределено; 
//		НайдЗнч =  ТаблВыпусков.Найти(ВыборкаКосв.Уровень1,"Уровень1");
//		Если НайдЗнч = Неопределено Тогда
//			НайдЗнч = ТаблВыпусков.Найти(ВыборкаКосв.Уровень2,"Уровень2");
//			Если НайдЗнч = Неопределено Тогда
//				НайдЗнч =  ТаблВыпусков.Найти(ВыборкаКосв.Уровень3,"Уровень3");
//				Если НайдЗнч <> Неопределено Тогда
//					 НаПодразделение = НайдЗнч.Уровень3;
//				КонецЕслИ;	
//			Иначе
//				НаПодразделение = НайдЗнч.Уровень2;
//			КонецЕслИ;
//			
//		Иначе
//			НаПодразделение = НайдЗнч.Уровень1;
//		КонецЕсли;	
//		
//		Если НаПодразделение = Неопределено Тогда
//			НоваяСтрока = ТаблОшибок.Добавить();
//			НоваяСтрока.Подразделение = ВыборкаКосв.Подразделение;
//			продолжить;
//		КонецЕсли;
//		
//		ВыборкаКосвСлед	 =	 ВыборкаКосв.Выбрать();
//		
//		Пока ВыборкаКосвСлед.Следующий() Цикл
//			
//			Количество  = 0;
//			Сумма       = ВыборкаКосвСлед.СтоимостьОстаток;
//			ПостояннаяРазница = 0;
//			ВременнаяРазница  = 0;
//			Если  СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
//				ПостояннаяРазница = ВыборкаКосвСлед.ПостояннаяРазницаОстаток;
//				ВременнаяРазница  = ВыборкаКосвСлед.ВременнаяРазницаОстаток;
//			КонецЕсли;
//			
//				СформироватьДвиженияПоРегиструЗатратКорректировка(
//					СтруктураШапкиДокумента,
//					ВыборкаКосвСлед,
//					ВыборкаКосвСлед.Подразделение,
//					Неопределено,
//					Количество,
//					Сумма,
//					ПостояннаяРазница,
//					ВременнаяРазница,
//					ВидДвиженияНакопления.Расход,
//					НаборЗаписейЗатраты,
//					КодОперации);
//					
//				СформироватьДвиженияПоРегиструЗатратКорректировка(
//					СтруктураШапкиДокумента,
//					ВыборкаКосвСлед,
//					НаПодразделение,
//					Неопределено,
//					Количество,
//					Сумма,
//					ПостояннаяРазница,
//					ВременнаяРазница,
//					ВидДвиженияНакопления.Приход,
//					НаборЗаписейЗатраты,
//					КодОперации);
//					
//					
//				// is ЯннуровВФ нач 20141002
//				Если СтруктураШапкиДокумента.ОтражатьВМеждународномУчете  Тогда
//					СформироватьПроводкуПоКорректировкеЗатрат(
//							СтруктураШапкиДокумента,
//							ВыборкаКосвСлед,
//							НаПодразделение,
//							Неопределено,
//							Неопределено,
//							Сумма,
//							НаборЗаписейРегБух
//							);
//				КонецЕсли;	
//				// is ЯннуровВФ кон 20141002
//				
//			КонецЦикла;	
//	КонецЦикла;	
//	
//	Если НаборЗаписейЗатраты.Количество() > 0 Тогда
//		НаборЗаписейЗатраты.Записать(Ложь);
//	КонецЕсли;
//	
//	Если НаборЗаписейРегБух.Количество() > 0 Тогда
//		НаборЗаписейРегБух.Записать(Ложь);
//	КонецЕсли;
//	
//	
//	
//КонецПроцедуры

//Функция ПолучитьИнформациюПоВыпуску(СтруктураШапкиДокумента)
//	Запрос = Новый Запрос("ВЫБРАТЬ
//						  |	СУММА(ВыпускПродукцииБухгалтерскийУчет.Количество) КАК Количество,
//						  |	ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП КАК СчетУчетаЗатрат,
//						  |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель КАК Уровень1,
//						  |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель.Родитель КАК Уровень2,
//						  |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель.Родитель.Родитель КАК Уровень3
//						  |ИЗ
//						  |	РегистрНакопления.ВыпускПродукции%СуффиксУчета% КАК ВыпускПродукцииБухгалтерскийУчет
//						  |ГДЕ
//						  |	ВыпускПродукцииБухгалтерскийУчет.Период МЕЖДУ &ДатаНач И &ДатаКон
//						  |	И (ВыпускПродукцииБухгалтерскийУчет.Регистратор ССЫЛКА Документ.ПереносЗатратНаПроизводствоМеждународный)
//						  |	И ВыпускПродукцииБухгалтерскийУчет.Организация = &Организация
//						  |	И ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП = &СчетУчетаНЗП
//						  |
//						  |СГРУППИРОВАТЬ ПО
//						  |	ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП,
//						  |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель,
//						  |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель.Родитель,
//						  |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель.Родитель.Родитель");
//						  
//	Запрос.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
//		Запрос.Текст, 
//		СтруктураШапкиДокумента.ВидОтраженияВУчете
//	);
//						  
//	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(СтруктураШапкиДокумента.Дата));
//	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(СтруктураШапкиДокумента.Дата));
//	Запрос.УстановитьПараметр("ДатаОстатков",КонецМесяца(СтруктураШапкиДокумента.Дата)+1);
//	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
//	Запрос.УстановитьПараметр("СчетУчетаНЗП",ПланыСчетов.Международный._ОсновноеПроизводство);
//	
//	возврат Запрос;	
//КонецФункции	

//Функция ПолучитьЗапросПоКосвеннымРасходомКорректировка(СтруктураШапкиДокумента)
//	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
//						  |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.Подразделение,
//						  |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.СчетЗатрат
//						  |ПОМЕСТИТЬ ТаблПодр
//						  |ИЗ
//						  |	РегистрСведений.СпособыРаспределенияСтатейЗатратОрганизаций.СрезПоследних(
//						  |			&ДатаОстатков,
//						  |			Организация = &Организация
//						  |				И Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних
//						  |ГДЕ
//						  |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.СпособРаспределенияЗатрат.РаспределятьЗатратыНаУровеньВыше
//						  |	//ДляМеждУчета И СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.СчетЗатрат В(&СчетаЗатрат)
//						  |
//						  |СГРУППИРОВАТЬ ПО
//						  |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.Подразделение,
//						  |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.СчетЗатрат
//						  |;
//						  |
//						  |////////////////////////////////////////////////////////////////////////////////
//						  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
//						  |	СУММА(ЕСТЬNULL(ВыпускПродукции.Количество, 0)) КАК Количество,
//						  |	ТаблПодр.Подразделение,
//						  |	ТаблПодр.СчетЗатрат
//						  |ПОМЕСТИТЬ ТаблВыпПодр
//						  |ИЗ
//						  |	ТаблПодр КАК ТаблПодр
//						  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыпускПродукции%СуффиксУчета% КАК ВыпускПродукции
//						  |		ПО ТаблПодр.Подразделение = ВыпускПродукции.Подразделение
//						  |ГДЕ
//						  |	ВыпускПродукции.Период МЕЖДУ &ДатаНач И &ДатаКон
//						  |	И (ВыпускПродукции.Регистратор ССЫЛКА Документ.ПереносЗатратНаПроизводствоМеждународный)
//						  |
//						  |СГРУППИРОВАТЬ ПО
//						  |	ТаблПодр.Подразделение,
//						  |	ТаблПодр.СчетЗатрат
//						  |
//						  |ИМЕЮЩИЕ
//						  |	СУММА(ЕСТЬNULL(ВыпускПродукции.Количество, 0)) = 0
//						  |;
//						  |
//						  |////////////////////////////////////////////////////////////////////////////////
//						  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
//						  |	ЗатратыОстатки.Подразделение КАК Подразделение,
//						  |	ЗатратыОстатки.Организация,
//						  |	ЗатратыОстатки.СчетУчета,
//						  |	ЗатратыОстатки.СтатьяЗатрат,
//						  |	ЗатратыОстатки.НоменклатурнаяГруппа,
//						  |	ЗатратыОстатки.Заказ,
//						  |	ЗатратыОстатки.Подразделение.Родитель КАК Уровень1,
//						  |	ЗатратыОстатки.Подразделение.Родитель.Родитель КАК Уровень2,
//						  |	ЗатратыОстатки.Подразделение.Родитель.Родитель.Родитель КАК Уровень3,
//						  |	//ДляНалУчета ЗатратыОстатки.ПостояннаяРазницаОстаток,
//						  |	//ДляНалУчета ЗатратыОстатки.ВременнаяРазницаОстаток,
//						  |	ЗатратыОстатки.СуммаОстаток КАК СтоимостьОстаток
//						  |ИЗ
//						  |	РегистрНакопления.Затраты%СуффиксУчета%.Остатки(
//						  |			&ДатаОстатков,
//						  |			Организация = &Организация
//						  |				И Подразделение В
//						  |					(ВЫБРАТЬ
//						  |						ТаблПодр.Подразделение
//						  |					ИЗ
//						  |						ТаблПодр)) КАК ЗатратыОстатки
//						  |ГДЕ
//						  |	ЗатратыОстатки.СчетУчета = &СчетУчетаМСФО
//						  |
//						  |УПОРЯДОЧИТЬ ПО
//						  |	Подразделение
//						  |ИТОГИ ПО
//						  |	Подразделение");
//						  
//	Запрос.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
//		Запрос.Текст, 
//		СтруктураШапкиДокумента.ВидОтраженияВУчете
//	);
//						  
//	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(СтруктураШапкиДокумента.Дата));
//	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(СтруктураШапкиДокумента.Дата));
//	Запрос.УстановитьПараметр("ДатаОстатков",КонецМесяца(СтруктураШапкиДокумента.Дата)+1);
//	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
//	Запрос.УстановитьПараметр("СчетаЗатрат",ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходыНеОблагаемыеЕНВД);
//	Запрос.УстановитьПараметр("СчетУчета",ПланыСчетов.Хозрасчетный.ОсновноеПроизводствоНеОблагаемоеЕНВД);
//	Запрос.УстановитьПараметр("СчетУчетаМСФО",ПланыСчетов.Международный.ОбщепроизводственныеРасходы);
//	
//	возврат Запрос;
//КонецФункции

//Процедура СформироватьДвиженияПоРегиструЗатратКорректировка(
//	СтруктураШапкиДокумента,
//	СтрокаВыборки,
//	Подразделение,
//	НоменклатурнаяГруппа,
//	Количество,
//	Сумма,
//	ПостояннаяРазница,
//	ВременнаяРазница,
//	ВидДвижения,
//	НаборЗаписейЗатраты,
//	КодОперации
//	)
//	
//	Если Количество = 0
//	   И Сумма = 0
//	   И ПостояннаяРазница = 0
//	   И ВременнаяРазница = 0 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Если ВидДвижения <> ВидДвиженияНакопления.Приход
//	   И ВидДвижения <> ВидДвиженияНакопления.Расход Тогда
//	   
//		ОбщегоНазначения.СообщитьОбОшибке("Не указан вид движения!
//					|Процедура <СформироватьДвиженияПоРегиструНезавершенноеПроизводствоРаспределениеЗатрат>");
//		Возврат;
//	КонецЕсли;
//	
//	// В движениях по регистру "Незавершенное производство" должны быть заполнены измерения:
//	//	- Организация - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
//	//	- Подразделение,
//	//	- СчетУчета - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
//	//	- СтатьяЗатрат,
//	//	- НоменклатурнаяГруппа,
//	//	- Заказ,
//	//	- Затрата - заполняется характер затрат или номенклатура
//	//	- ХарактеристикаЗатраты - не заполняется (для косвенных затрат) или заполняется характеристика номенклатуры
//	//	- СерияЗатраты - не заполняется (для косвенных затрат) или заполняется серия номенклатуры.
//	
//	НоваяСтрока = НаборЗаписейЗатраты.Добавить();
//	НоваяСтрока.Активность = Истина;
//	НоваяСтрока.ВидДвижения = ВидДвижения;
//	НоваяСтрока.Период = СтруктураШапкиДокумента.Период;
//	
//	Если Не СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
//		НоваяСтрока.Организация = СтруктураШапкиДокумента.Организация;
//		НоваяСтрока.СчетУчета = СтрокаВыборки.СчетУчета;
//	КонецЕсли;
//	
//	НоваяСтрока.Подразделение = Подразделение;
//	НоваяСтрока.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
//	НоваяСтрока.СтатьяЗатрат = СтрокаВыборки.СтатьяЗатрат;
//	НоваяСтрока.Заказ = СтрокаВыборки.Заказ;
//	
//	НоваяСтрока.КодОперации	 = КодОперации;

//	
//	НоваяСтрока.Сумма 		= Сумма;
//	
//	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
//		НоваяСтрока.ПостояннаяРазница = ПостояннаяРазница;
//		НоваяСтрока.ВременнаяРазница = ВременнаяРазница;
//	КонецЕсли;
//	
//	// Если в наборе записей 1000 строк, запишем набор.
//	Если НаборЗаписейЗатраты.Количество() = 1000 Тогда
//		НаборЗаписейЗатраты.Записать(Ложь);
//	КонецЕсли;

//КонецПроцедуры // СформироватьДвиженияПоРегиструНезавершенноеПроизводствоРаспределениеЗатрат()

//Процедура СформироватьПроводкуПоКорректировкеЗатрат(
//	СтруктураШапкиДокумента,
//	СтрокаВыборки,
//	Подразделение,
//	ХарактерЗатрат,
//	ВидУчетаПоПБУ18,
//	Сумма,
//	РегистрБухгалтерииНаборЗаписей
//	)
//	
//	Если Сумма = 0 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	
//	НоваяПроводка = РегистрБухгалтерииНаборЗаписей.Добавить();
//	НоваяПроводка.Организация = СтруктураШапкиДокумента.Организация;
//	НоваяПроводка.Активность = Истина;
//	НоваяПроводка.Период = СтруктураШапкиДокумента.Период;
//	
//	НоваяПроводка.Содержание = "Корректировка затрат";
//	НоваяПроводка.Сумма = Сумма;
//	
//	НоваяПроводка.СчетДт = СтрокаВыборки.СчетУчета;
//	//БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "НоменклатурныеГруппы", );
//	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Подразделения", Подразделение);
//	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СтатьиЗатрат", СтрокаВыборки.СтатьяЗатрат);
//										
//	НоваяПроводка.СчетКт = СтрокаВыборки.СчетУчета;
//										
//	
//	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "Подразделения", СтрокаВыборки.Подразделение);
//	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "НоменклатурныеГруппы", СтрокаВыборки.НоменклатурнаяГруппа);
//	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиЗатрат", СтрокаВыборки.СтатьяЗатрат);

//		
// 	Если ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ВР
//	 ИЛИ ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
//		НоваяПроводка.ВидУчетаДт = ВидУчетаПоПБУ18;
//		НоваяПроводка.ВидУчетаКт = ВидУчетаПоПБУ18;
//	КонецЕсли;
//	
//	// Если в наборе записей 1000 строк, запишем набор.
//	Если РегистрБухгалтерииНаборЗаписей.Количество() = 1000 Тогда
//		РегистрБухгалтерииНаборЗаписей.Записать(Ложь);
//	КонецЕсли;

//КонецПроцедуры // СформироватьПроводкуПоРаспределениюЗатрат()

// is ЯннуровВФ 20141117
Процедура КорректировкаЗатратНЗП(СтруктураШапкиДокумента,СтруктураТаблицДвижений) Экспорт
	
	ЗапросНЗП 		= ПолучитьЗапросПоНезавершенкеКорректировка(СтруктураШапкиДокумента);
	ЗапросПоВыпуску = ПолучитьИнформациюПоВыпуску(СтруктураШапкиДокумента);
	
	ВыборкаНЗППодр = ЗапросНЗП.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаНЗППодр.Количество() = 0 Тогда
		возврат;
	КонецЕслИ;	
	
	ТаблВыпусков = ЗапросПоВыпуску.Выполнить().Выгрузить();
	Если ТаблВыпусков.Количество() = 0 Тогда
		возврат;
	КонецЕсли;	
	ТаблВыпусков.Индексы.Добавить("Уровень1,Уровень2,Уровень3");
	
	ИмяРегНЗП		 = "НезавершенноеПроизводствоМеждународныйУчет";
	ИмяРегБух 		 = "Международный";
	
	НаборЗаписейНезавершенноеПроизводство  = РегистрыНакопления[ИмяРегНЗП].СоздатьНаборЗаписей();
	НаборЗаписейНезавершенноеПроизводство.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	НаборЗаписейРегБух  = РегистрыБухгалтерии[ИмяРегБух].СоздатьНаборЗаписей();
	НаборЗаписейРегБух.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);

	
	ТаблОшибок = Новый ТаблицаЗначений;
	ТаблОшибок.Колонки.Добавить("Подразделение");
	
	КодОперации = Перечисления.КодыОперацийНезавершенноеПроизводство.КорректировкаНЗПФикс;
	
	Пока ВыборкаНЗППодр.Следующий() Цикл
		
		НаПодразделение = Неопределено; 
		НайдЗнч =  ТаблВыпусков.Найти(ВыборкаНЗППодр.Уровень1,"Уровень1");
		Если НайдЗнч = Неопределено Тогда
			НайдЗнч = ТаблВыпусков.Найти(ВыборкаНЗППодр.Уровень2,"Уровень2");
			Если НайдЗнч = Неопределено Тогда
				НайдЗнч =  ТаблВыпусков.Найти(ВыборкаНЗППодр.Уровень3,"Уровень3");
				Если НайдЗнч <> Неопределено Тогда
					 НаПодразделение = НайдЗнч.Уровень3;
				КонецЕслИ;	
			Иначе
				НаПодразделение = НайдЗнч.Уровень2;
			КонецЕслИ;
			
		Иначе
			НаПодразделение = НайдЗнч.Уровень1;
		КонецЕсли;	
		
		Если НаПодразделение = Неопределено Тогда
			НоваяСтрока = ТаблОшибок.Добавить();
			НоваяСтрока.Подразделение = ВыборкаНЗППодр.Подразделение;
			продолжить;
		КонецЕсли;
		
		ВыборкаНЗПП	 =	 ВыборкаНЗППодр.Выбрать();
		
		Пока ВыборкаНЗПП.Следующий() Цикл
			
			Количество  = ВыборкаНЗПП.КоличествоОстаток;
			Сумма       = ВыборкаНЗПП.СтоимостьОстаток;
			ПостояннаяРазница = 0;
			ВременнаяРазница  = 0;
			
				СформироватьДвиженияПоРегиструНезавершенноеПроизводствоРаспределениеЗатрат(
					СтруктураШапкиДокумента,
					ВыборкаНЗПП,
					ВыборкаНЗПП.Подразделение,
					Неопределено,
					Количество,
					Сумма,
					ПостояннаяРазница,
					ВременнаяРазница,
					ВидДвиженияНакопления.Расход,
					НаборЗаписейНезавершенноеПроизводство,
					КодОперации);
					
				СформироватьДвиженияПоРегиструНезавершенноеПроизводствоРаспределениеЗатрат(
					СтруктураШапкиДокумента,
					ВыборкаНЗПП,
					НаПодразделение,
					Неопределено,
					Количество,
					Сумма,
					ПостояннаяРазница,
					ВременнаяРазница,
					ВидДвиженияНакопления.Приход,
					НаборЗаписейНезавершенноеПроизводство,
					КодОперации);
					
					
				СформироватьПроводкуПоКорректировкеЗатрат(
						СтруктураШапкиДокумента,
						ВыборкаНЗПП,
						НаПодразделение,
						Неопределено,
						Неопределено,
						Сумма,
						НаборЗаписейРегБух
						);
				
		КонецЦикла;	
	КонецЦикла;	
	
	Если НаборЗаписейНезавершенноеПроизводство.Количество() > 0 Тогда
		НаборЗаписейНезавершенноеПроизводство.Записать(Ложь);
	КонецЕсли;
	
	Если НаборЗаписейРегБух.Количество() > 0 Тогда
		НаборЗаписейРегБух.Записать(Ложь);
	КонецЕсли;
	
	
	
КонецПроцедуры	

// is ЯннуровВФ 20141117
Функция ПолучитьЗапросПоНезавершенкеКорректировка(СтруктураШапкиДокумента)
	Запрос = Новый Запрос(
				   "ВЫБРАТЬ
				   | 	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.ДС_СчетЗатратМСФО как СчетЗатрат,
				   |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.Подразделение
				   |ПОМЕСТИТЬ ТаблПодр
				   |ИЗ
				   |	РегистрСведений.СпособыРаспределенияСтатейЗатратОрганизаций.СрезПоследних(
				   |			&ДатаОстатков,
				   |			Организация = &Организация
				   |				И Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних
				   |ГДЕ
				   |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.СпособРаспределенияЗатрат.РаспределятьЗатратыНаУровеньВыше
				   |	И СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.ДС_СчетЗатратМСФО В(&СчетаЗатрат)
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.ДС_СчетЗатратМСФО,
				   |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.Подразделение
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	СУММА(ЕСТЬNULL(ВыпускПродукции.Количество, 0)) КАК Количество,
				   |	ТаблПодр.Подразделение,
				   |	ТаблПодр.СчетЗатрат
				   |ПОМЕСТИТЬ ТаблВыпПодр
				   |ИЗ
				   |	ТаблПодр КАК ТаблПодр
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыпускПродукции%СуффиксУчета% КАК ВыпускПродукции
				   |		ПО ТаблПодр.Подразделение = ВыпускПродукции.Подразделение
				   |			И ТаблПодр.СчетЗатрат = ВыпускПродукции.СчетУчетаНЗП
				   |	и ВыпускПродукции.Период МЕЖДУ &ДатаНач И &ДатаКон
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ТаблПодр.Подразделение,
				   |	ТаблПодр.СчетЗатрат
				   |
				   |ИМЕЮЩИЕ
				   |	СУММА(ЕСТЬNULL(ВыпускПродукции.Количество, 0)) = 0
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	НезавершенноеПроизводство.Подразделение КАК Подразделение,
				   |	НезавершенноеПроизводство.Организация,
				   |	НезавершенноеПроизводство.СчетУчета,
				   |	НезавершенноеПроизводство.СтатьяЗатрат,
				   |	НезавершенноеПроизводство.НоменклатурнаяГруппа,
				   |	НезавершенноеПроизводство.Заказ,
				   |	НезавершенноеПроизводство.Затрата,
				   |	НезавершенноеПроизводство.ХарактеристикаЗатраты,
				   |	НезавершенноеПроизводство.СерияЗатраты,
				   |	НезавершенноеПроизводство.КоличествоОстаток,
				   |	НезавершенноеПроизводство.СтоимостьОстаток,
				   |	НезавершенноеПроизводство.Подразделение.Родитель КАК Уровень1,
				   |	НезавершенноеПроизводство.Подразделение.Родитель.Родитель КАК Уровень2,
				   |	НезавершенноеПроизводство.Подразделение.Родитель.Родитель.Родитель КАК Уровень3
				   |ИЗ
				   |	РегистрНакопления.НезавершенноеПроизводство%СуффиксУчета%.Остатки(
				   |			&ДатаОстатков,
				   |			Организация = &Организация
				   |				И (СчетУчета,Подразделение) В
				   |					(ВЫБРАТЬ
				   |	                    ТаблВыпПодр.СчетЗатрат,
				   |						ТаблВыпПодр.Подразделение
				   |					ИЗ
				   |						ТаблВыпПодр)) КАК НезавершенноеПроизводство
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	Подразделение
				   |ИТОГИ ПО
				   |	Подразделение");
				   
				   
//				   
				   
	Запрос.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		Запрос.Текст, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
				   
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(СтруктураШапкиДокумента.Дата));
    Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(СтруктураШапкиДокумента.Дата));
	Запрос.УстановитьПараметр("ДатаОстатков",КонецМесяца(СтруктураШапкиДокумента.Дата)+1);
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("СчетаЗатрат",ПланыСчетов.Международный._ОсновноеПроизводство);
	
	возврат Запрос;
КонецФункции	

// is ЯннуровВФ 20141117
Процедура СформироватьДвиженияПоРегиструНезавершенноеПроизводствоРаспределениеЗатрат(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Подразделение,
	НоменклатурнаяГруппа,
	Количество,
	Сумма,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидДвижения,
	НаборЗаписейНезавершенноеПроизводство,
	КодОперации,
	ПереноситьЗатратыИЗаказ = Истина
	)
	
	Если Количество = 0
	   И Сумма = 0
	   И ПостояннаяРазница = 0
	   И ВременнаяРазница = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидДвижения <> ВидДвиженияНакопления.Приход
	   И ВидДвижения <> ВидДвиженияНакопления.Расход Тогда
	   
		ОбщегоНазначения.СообщитьОбОшибке("Не указан вид движения!
					|Процедура <СформироватьДвиженияПоРегиструНезавершенноеПроизводствоРаспределениеЗатрат>");
		Возврат;
	КонецЕсли;
	
	// В движениях по регистру "Незавершенное производство" должны быть заполнены измерения:
	//	- Организация - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
	//	- Подразделение,
	//	- СчетУчета - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
	//	- СтатьяЗатрат,
	//	- НоменклатурнаяГруппа,
	//	- Заказ,
	//	- Затрата - заполняется характер затрат или номенклатура
	//	- ХарактеристикаЗатраты - не заполняется (для косвенных затрат) или заполняется характеристика номенклатуры
	//	- СерияЗатраты - не заполняется (для косвенных затрат) или заполняется серия номенклатуры.
	
	НоваяСтрока = НаборЗаписейНезавершенноеПроизводство.Добавить();
	НоваяСтрока.Активность = Истина;
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.Период = СтруктураШапкиДокумента.Период;
	
	Если Не СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		НоваяСтрока.Организация = СтруктураШапкиДокумента.Организация;
		НоваяСтрока.СчетУчета = СтрокаВыборки.СчетУчета;
	КонецЕсли;
	
	НоваяСтрока.Подразделение = Подразделение;
	НоваяСтрока.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
	НоваяСтрока.СтатьяЗатрат = СтрокаВыборки.СтатьяЗатрат;
	
	Если ПереноситьЗатратыИЗаказ Тогда
		НоваяСтрока.Заказ = СтрокаВыборки.Заказ;
		НоваяСтрока.Затрата = СтрокаВыборки.Затрата;
		НоваяСтрока.ХарактеристикаЗатраты = СтрокаВыборки.ХарактеристикаЗатраты;
		НоваяСтрока.СерияЗатраты = СтрокаВыборки.СерияЗатраты;
	КонецЕслИ;	
		
	НоваяСтрока.КодОперации	 = КодОперации;
	НоваяСтрока.НомерПередела = 0;		
	
	НоваяСтрока.Стоимость 	= Сумма;
	НоваяСтрока.Количество  = Количество;
	
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		НоваяСтрока.ПостояннаяРазница = ПостояннаяРазница;
		НоваяСтрока.ВременнаяРазница = ВременнаяРазница;
	КонецЕсли;
	
	// Если в наборе записей 1000 строк, запишем набор.
	Если НаборЗаписейНезавершенноеПроизводство.Количество() = 1000 Тогда
		НаборЗаписейНезавершенноеПроизводство.Записать(Ложь);
	КонецЕсли;

КонецПроцедуры // СформироватьДвиженияПоРегиструНезавершенноеПроизводствоРаспределениеЗатрат()

// is ЯннуровВФ 20141117
Процедура КорректировкаКосвенныхРасходов(СтруктураШапкиДокумента,СтруктураТаблицДвижений) Экспорт
	
	ЗапросКосв 		= ПолучитьЗапросПоКосвеннымРасходомКорректировка(СтруктураШапкиДокумента);
	ЗапросПоВыпуску = ПолучитьИнформациюПоВыпуску(СтруктураШапкиДокумента);
	
	ВыборкаКосв = ЗапросКосв.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаКосв.Количество() = 0 Тогда
		возврат;
	КонецЕслИ;	
	
	ТаблВыпусков = ЗапросПоВыпуску.Выполнить().Выгрузить();
	Если ТаблВыпусков.Количество() = 0 Тогда
		возврат;
	КонецЕсли;	
	ТаблВыпусков.Индексы.Добавить("Уровень1,Уровень2,Уровень3");
	
	ИмяРегЗатраты  = "ЗатратыМеждународныйУчет";
	ИмяРегБух      = "Международный";

	
	НаборЗаписейЗатраты  = РегистрыНакопления[ИмяРегЗатраты].СоздатьНаборЗаписей();
	НаборЗаписейЗатраты.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
	
	НаборЗаписейРегБух  = РегистрыБухгалтерии[ИмяРегБух].СоздатьНаборЗаписей();
	НаборЗаписейРегБух.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);

	
	ТаблОшибок = Новый ТаблицаЗначений;
	ТаблОшибок.Колонки.Добавить("Подразделение");
	
	КодОперации = Перечисления.КодыОперацийЗатраты.ВнутренниеУслугиНаПостоянныеЗатраты;
	
	Пока ВыборкаКосв.Следующий() Цикл
		
		НаПодразделение = Неопределено; 
		НайдЗнч =  ТаблВыпусков.Найти(ВыборкаКосв.Уровень1,"Уровень1");
		Если НайдЗнч = Неопределено Тогда
			НайдЗнч = ТаблВыпусков.Найти(ВыборкаКосв.Уровень2,"Уровень2");
			Если НайдЗнч = Неопределено Тогда
				НайдЗнч =  ТаблВыпусков.Найти(ВыборкаКосв.Уровень3,"Уровень3");
				Если НайдЗнч <> Неопределено Тогда
					 НаПодразделение = НайдЗнч.Уровень3;
				КонецЕслИ;	
			Иначе
				НаПодразделение = НайдЗнч.Уровень2;
			КонецЕслИ;
			
		Иначе
			НаПодразделение = НайдЗнч.Уровень1;
		КонецЕсли;	
		
		Если НаПодразделение = Неопределено Тогда
			НоваяСтрока = ТаблОшибок.Добавить();
			НоваяСтрока.Подразделение = ВыборкаКосв.Подразделение;
			продолжить;
		КонецЕсли;
		
		ВыборкаКосвСлед	 =	 ВыборкаКосв.Выбрать();
		
		Пока ВыборкаКосвСлед.Следующий() Цикл
			
			Количество  = 0;
			Сумма       = ВыборкаКосвСлед.СтоимостьОстаток;
			ПостояннаяРазница = 0;
			ВременнаяРазница  = 0;
			Если  СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
				ПостояннаяРазница = ВыборкаКосвСлед.ПостояннаяРазницаОстаток;
				ВременнаяРазница  = ВыборкаКосвСлед.ВременнаяРазницаОстаток;
			КонецЕсли;
			
				СформироватьДвиженияПоРегиструЗатратКорректировка(
					СтруктураШапкиДокумента,
					ВыборкаКосвСлед,
					ВыборкаКосвСлед.Подразделение,
					Неопределено,
					Количество,
					Сумма,
					ПостояннаяРазница,
					ВременнаяРазница,
					ВидДвиженияНакопления.Расход,
					НаборЗаписейЗатраты,
					КодОперации);
					
				СформироватьДвиженияПоРегиструЗатратКорректировка(
					СтруктураШапкиДокумента,
					ВыборкаКосвСлед,
					НаПодразделение,
					Неопределено,
					Количество,
					Сумма,
					ПостояннаяРазница,
					ВременнаяРазница,
					ВидДвиженияНакопления.Приход,
					НаборЗаписейЗатраты,
					КодОперации);
					
					
				СформироватьПроводкуПоКорректировкеЗатрат(
						СтруктураШапкиДокумента,
						ВыборкаКосвСлед,
						НаПодразделение,
						Неопределено,
						Неопределено,
						Сумма,
						НаборЗаписейРегБух
						);
		КонецЦикла;	
	КонецЦикла;	
	
	Если НаборЗаписейЗатраты.Количество() > 0 Тогда
		НаборЗаписейЗатраты.Записать(Ложь);
	КонецЕсли;
	
	Если НаборЗаписейРегБух.Количество() > 0 Тогда
		НаборЗаписейРегБух.Записать(Ложь);
	КонецЕсли;
	
	
	
КонецПроцедуры	

// is ЯннуровВФ 20141117
Процедура СформироватьДвиженияПоРегиструЗатратКорректировка(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Подразделение,
	НоменклатурнаяГруппа,
	Количество,
	Сумма,
	ПостояннаяРазница,
	ВременнаяРазница,
	ВидДвижения,
	НаборЗаписейЗатраты,
	КодОперации
	)
	
	Если Количество = 0
	   И Сумма = 0
	   И ПостояннаяРазница = 0
	   И ВременнаяРазница = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидДвижения <> ВидДвиженияНакопления.Приход
	   И ВидДвижения <> ВидДвиженияНакопления.Расход Тогда
	   
		ОбщегоНазначения.СообщитьОбОшибке("Не указан вид движения!
					|Процедура <СформироватьДвиженияПоРегиструНезавершенноеПроизводствоРаспределениеЗатрат>");
		Возврат;
	КонецЕсли;
	
	// В движениях по регистру "Незавершенное производство" должны быть заполнены измерения:
	//	- Организация - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
	//	- Подразделение,
	//	- СчетУчета - заполняется только при отражении документа в бухгалтерском, налоговом или международном учете,
	//	- СтатьяЗатрат,
	//	- НоменклатурнаяГруппа,
	//	- Заказ,
	//	- Затрата - заполняется характер затрат или номенклатура
	//	- ХарактеристикаЗатраты - не заполняется (для косвенных затрат) или заполняется характеристика номенклатуры
	//	- СерияЗатраты - не заполняется (для косвенных затрат) или заполняется серия номенклатуры.
	
	НоваяСтрока = НаборЗаписейЗатраты.Добавить();
	НоваяСтрока.Активность = Истина;
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.Период = СтруктураШапкиДокумента.Период;
	
	Если Не СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		НоваяСтрока.Организация = СтруктураШапкиДокумента.Организация;
		НоваяСтрока.СчетУчета = СтрокаВыборки.СчетУчета;
	КонецЕсли;
	
	НоваяСтрока.Подразделение = Подразделение;
	НоваяСтрока.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
	НоваяСтрока.СтатьяЗатрат = СтрокаВыборки.СтатьяЗатрат;
	НоваяСтрока.Заказ = СтрокаВыборки.Заказ;
	
	НоваяСтрока.КодОперации	 = КодОперации;

	
	НоваяСтрока.Сумма 		= Сумма;
	
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		НоваяСтрока.ПостояннаяРазница = ПостояннаяРазница;
		НоваяСтрока.ВременнаяРазница = ВременнаяРазница;
	КонецЕсли;
	
	// Если в наборе записей 1000 строк, запишем набор.
	Если НаборЗаписейЗатраты.Количество() = 1000 Тогда
		НаборЗаписейЗатраты.Записать(Ложь);
	КонецЕсли;

КонецПроцедуры // СформироватьДвиженияПоРегиструНезавершенноеПроизводствоРаспределениеЗатрат()

// is ЯннуровВФ 20141117
Функция ПолучитьЗапросПоКосвеннымРасходомКорректировка(СтруктураШапкиДокумента)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.Подразделение,
	                      |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.ДС_СчетЗатратМСФО КАК СчетЗатрат
	                      |ПОМЕСТИТЬ ТаблПодр
	                      |ИЗ
	                      |	РегистрСведений.СпособыРаспределенияСтатейЗатратОрганизаций.СрезПоследних(
	                      |			&ДатаКон,
	                      |			Организация = &Организация
	                      |				И Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних
	                      |ГДЕ
	                      |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.СпособРаспределенияЗатрат.РаспределятьЗатратыНаУровеньВыше
						  |	И СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.ДС_СчетЗатратМСФО В(&СчетаЗатрат)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.Подразделение,
	                      |	СпособыРаспределенияСтатейЗатратОрганизацийСрезПоследних.ДС_СчетЗатратМСФО
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СУММА(ЕСТЬNULL(ВыпускПродукции.Количество, 0)) КАК Количество,
	                      |	ТаблПодр.Подразделение,
	                      |	ТаблПодр.СчетЗатрат
	                      |ПОМЕСТИТЬ ТаблВыпПодр
	                      |ИЗ
	                      |	ТаблПодр КАК ТаблПодр
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыпускПродукции%СуффиксУчета% КАК ВыпускПродукции
	                      |		ПО ТаблПодр.Подразделение = ВыпускПродукции.Подразделение
	                      |			И &СчетУчетаНЗП = ВыпускПродукции.СчетУчетаНЗП
	                      | И
	                      |	ВыпускПродукции.Период МЕЖДУ &ДатаНач И &ДатаКон
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТаблПодр.Подразделение,
	                      |	ТаблПодр.СчетЗатрат
	                      |
	                      |ИМЕЮЩИЕ
	                      |	СУММА(ЕСТЬNULL(ВыпускПродукции.Количество, 0)) = 0
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЗатратыОстатки.Подразделение КАК Подразделение,
	                      |	ЗатратыОстатки.Организация,
	                      |	ЗатратыОстатки.СчетУчета,
	                      |	ЗатратыОстатки.СтатьяЗатрат,
	                      |	ЗатратыОстатки.НоменклатурнаяГруппа,
	                      |	ЗатратыОстатки.Заказ,
	                      |	ЗатратыОстатки.Подразделение.Родитель КАК Уровень1,
	                      |	ЗатратыОстатки.Подразделение.Родитель.Родитель КАК Уровень2,
	                      |	ЗатратыОстатки.Подразделение.Родитель.Родитель.Родитель КАК Уровень3,
						  |	//ДляНалУчета ЗатратыОстатки.ПостояннаяРазницаОстаток,
						  |	//ДляНалУчета ЗатратыОстатки.ВременнаяРазницаОстаток,
	                      |	ЗатратыОстатки.СуммаОстаток КАК СтоимостьОстаток
	                      |ИЗ
	                      |	РегистрНакопления.Затраты%СуффиксУчета%.Остатки(
	                      |			&ДатаОстатков,
	                      |			Организация = &Организация и СчетУчета = &СчетУчета
	                      |				И Подразделение В
	                      |					(ВЫБРАТЬ
	                      |						ТаблВыпПодр.Подразделение
	                      |					ИЗ
	                      |						ТаблВыпПодр)) КАК ЗатратыОстатки
	                      |ГДЕ
	                      |	ЗатратыОстатки.СчетУчета = &СчетУчета
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Подразделение
	                      |ИТОГИ ПО
	                      |	Подразделение");
						  
	Запрос.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		Запрос.Текст, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
						  
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(СтруктураШапкиДокумента.Дата));
    Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(СтруктураШапкиДокумента.Дата));
	Запрос.УстановитьПараметр("ДатаОстатков",КонецМесяца(СтруктураШапкиДокумента.Дата)+1);
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
	мСчЗатрат = Новый Массив;
	мСчЗатрат.Добавить(ПланыСчетов.Международный._ОсновноеПроизводство);
	мСчЗатрат.Добавить(ПланыСчетов.Международный.ОбщепроизводственныеРасходы);
	Запрос.УстановитьПараметр("СчетаЗатрат",мСчЗатрат);
	Запрос.УстановитьПараметр("СчетУчета",ПланыСчетов.Международный.ОбщепроизводственныеРасходы);
	Запрос.УстановитьПараметр("СчетУчетаНЗП",ПланыСчетов.Международный._ОсновноеПроизводство);
	
	возврат Запрос;
КонецФункции

// is ЯннуровВФ 20141117
Процедура СформироватьПроводкуПоКорректировкеЗатрат(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Подразделение,
	ХарактерЗатрат,
	ВидУчетаПоПБУ18,
	Сумма,
	РегистрБухгалтерииНаборЗаписей
	)
	
	Если Сумма = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	НоваяПроводка = РегистрБухгалтерииНаборЗаписей.Добавить();
	НоваяПроводка.Организация = СтруктураШапкиДокумента.Организация;
	НоваяПроводка.Активность = Истина;
	НоваяПроводка.Период = СтруктураШапкиДокумента.Период;
	
	НоваяПроводка.Содержание = "Корректировка затрат";
	НоваяПроводка.Сумма = Сумма;
	
	НоваяПроводка.СчетДт = СтрокаВыборки.СчетУчета;
	//БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "НоменклатурныеГруппы", );
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Подразделения", Подразделение);
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СтатьиЗатрат", СтрокаВыборки.СтатьяЗатрат);
										
	НоваяПроводка.СчетКт = СтрокаВыборки.СчетУчета;
										
	
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "Подразделения", СтрокаВыборки.Подразделение);
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "НоменклатурныеГруппы", СтрокаВыборки.НоменклатурнаяГруппа);
	БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиЗатрат", СтрокаВыборки.СтатьяЗатрат);

		
 	Если ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ВР
	 ИЛИ ВидУчетаПоПБУ18 = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
		НоваяПроводка.ВидУчетаДт = ВидУчетаПоПБУ18;
		НоваяПроводка.ВидУчетаКт = ВидУчетаПоПБУ18;
	КонецЕсли;
	
	// Если в наборе записей 1000 строк, запишем набор.
	Если РегистрБухгалтерииНаборЗаписей.Количество() = 1000 Тогда
		РегистрБухгалтерииНаборЗаписей.Записать(Ложь);
	КонецЕсли;

КонецПроцедуры // СформироватьПроводкуПоРаспределениюЗатрат()

// is ЯннуровВФ 20141117
Функция ПолучитьИнформациюПоВыпуску(СтруктураШапкиДокумента)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(ВыпускПродукцииБухгалтерскийУчет.Количество) КАК Количество,
	                      |	ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП КАК СчетУчетаЗатрат,
	                      |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель КАК Уровень1,
	                      |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель.Родитель КАК Уровень2,
	                      |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель.Родитель.Родитель КАК Уровень3
	                      |ИЗ
	                      |	РегистрНакопления.ВыпускПродукции%СуффиксУчета% КАК ВыпускПродукцииБухгалтерскийУчет
	                      |ГДЕ
	                      |	ВыпускПродукцииБухгалтерскийУчет.Период МЕЖДУ &ДатаНач И &ДатаКон
	                      |	И ВыпускПродукцииБухгалтерскийУчет.Организация = &Организация
	                      |	И ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП = &СчетУчетаНЗП
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВыпускПродукцииБухгалтерскийУчет.СчетУчетаНЗП,
	                      |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель,
	                      |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель.Родитель,
	                      |	ВыпускПродукцииБухгалтерскийУчет.Подразделение.Родитель.Родитель.Родитель");
						  
	Запрос.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
		Запрос.Текст, 
		СтруктураШапкиДокумента.ВидОтраженияВУчете
	);
						  
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(СтруктураШапкиДокумента.Дата));
    Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(СтруктураШапкиДокумента.Дата));
	Запрос.УстановитьПараметр("ДатаОстатков",КонецМесяца(СтруктураШапкиДокумента.Дата)+1);
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("СчетУчетаНЗП",ПланыСчетов.Международный._ОсновноеПроизводство);
	
	возврат Запрос;	
КонецФункции	

