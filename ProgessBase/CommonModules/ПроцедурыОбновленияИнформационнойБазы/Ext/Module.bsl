////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

// общие

Процедура ДополнитьЗапросОбязательнымУпорядочиванием(Запрос, СтрокаУпорядочивания)

	Если Найти(ВРег(Запрос.Текст),"УПОРЯДОЧИТЬ") = 0 Тогда
		Запрос.Текст = Запрос.Текст + Символы.ПС + "УПОРЯДОЧИТЬ ПО" + Символы.ПС + СтрокаУпорядочивания
	КонецЕсли;

КонецПроцедуры

// Переписывает реквизиты исправляемых объектов.
//
// Параметры: 
//  Запрос - исполняемый запрос, в котором обязательно присутствует поле Ссылка
//			 остальные поля должны содержать исправленные данные, имена полей 
//           должны соответствовать именам исправляемых реквизитов
//  ТекстСообщения - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ОбновитьОбъектыПоЗапросу(Запрос = Неопределено, ТекстСообщения = "") Экспорт

	Если Запрос = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаОбъектов.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ВыборкаОбъектов.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		ЗаполнитьЗначенияСвойств(Объект,ВыборкаОбъектов);
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Если Номер % 30 = 0 Тогда
				Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
			КонецЕсли;
			Номер = Номер + 1;
		#КонецЕсли
		Объект.Записать();
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

// Переписывает реквизиты некоторых строк табличной части исправляемых объектов.
//
// Параметры: 
//  Запрос - исполняемый запрос, в котором обязательно присутствуют поля Ссылка и НомерСтроки
//			 остальные поля должны содержать исправленные данные, имена полей 
//           должны соответствовать именам исправляемых реквизитов;
//           кроме того, результат запроса должен быть упорядочен по полю Ссылка
//  ИмяТЧ - строка, имя табличной части объекта
//  ТекстСообщения - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос = Неопределено, ИмяТЧ, ТекстСообщения = "") Экспорт

	Если Запрос = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ДополнитьЗапросОбязательнымУпорядочиванием(Запрос, "Ссылка");
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	СтруктураПоиска = Новый Структура("НомерСтроки");
	Пока ВыборкаОбъектов.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаОбъектов.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		
		Пока ВыборкаОбъектов.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаОбъектов);
			СтрокиТЧ = Объект[ИмяТЧ].НайтиСтроки(СтруктураПоиска);
			СтрокаТЧ = Объект[ИмяТЧ].Найти(ВыборкаОбъектов.НомерСтроки,"НомерСтроки");
			Если СтрокаТЧ = Неопределено И СтрокиТЧ.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(Объект[ИмяТЧ].Добавить(),ВыборкаОбъектов);
			Иначе
				Если СтрокаТЧ = Неопределено Тогда
					СтрокаТЧ = СтрокиТЧ[0]
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(СтрокаТЧ,ВыборкаОбъектов);
			КонецЕсли;
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		
		Объект.Записать();
		
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

// Перезаполняет наборы записей регистраторов исправленными данными и записывает их.
//
// Параметры: 
//  МенеджерРегистра - Регистр<Сведений,...>Менеджер.<Имя> - менеджер переписываемого регистра
//  Запрос - исполняемый запрос, в котором обязательно присутствует поле Регистратор
//			 остальные поля должны соответствовать полям записи заполняемого регистра;
//			 кроме того, результат запроса должен быть упорядочен, 
//			 первое поле упорядочивания - Регистратор
//  ТекстЗаголовка - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ПереписатьНаборыЗаписейПоРегистраторам(МенеджерРегистра, Запрос, ТекстЗаголовка) Экспорт

	ДополнитьЗапросОбязательнымУпорядочиванием(Запрос, "Регистратор");
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = ТекстЗаголовка;
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаРегистраторов.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
		Пока ВыборкаРегистраторов.Следующий() Цикл
		    ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(),ВыборкаРегистраторов);
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

// Перезаполняет наборы записей регистраторов исправленными данными и записывает их.
//
// Параметры: 
//  МенеджерРегистра - РегистрРасчетаМенеджер.<Имя> - переписываемый набор записей
//  Запрос - исполняемый запрос, в котором обязательно присутствует поле Регистратор
//			 остальные поля должны соответствовать полям записи заполняемого регистра;
//			 кроме того, результат запроса должен быть упорядочен, 
//			 первое поле упорядочивания - Регистратор
//  ТекстЗаголовка - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ПереписатьНаборыЗаписейРегистраРасчетаПоРегистраторам(МенеджерРегистра, ПереписыватьФПД = Истина, Запрос, ТекстЗаголовка) Экспорт

	ДополнитьЗапросОбязательнымУпорядочиванием(Запрос, "Регистратор");
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = ТекстЗаголовка;
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаРегистраторов.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
		Пока ВыборкаРегистраторов.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(),ВыборкаРегистраторов);
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		НаборЗаписей.Записать(Истина, Ложь, ПереписыватьФПД, Ложь);
		НаборЗаписей.Очистить();
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

// Перезаполняет наборы записей исправленными данными и записывает их.
// Запись выполняется построчно.
//
// Параметры: 
//  МенеджерРегистра - Регистр<Сведений,...>Менеджер.<Имя> - менеджер переписываемого регистра
//  Запрос - исполняемый запрос, поля должны соответствовать полям записи заполняемого регистра;
//           обязательно должны присутствовать все измерения и поле Период для периодических регистров
//  ТекстЗаголовка - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ПереписатьНаборыЗаписейНезависимогоРегистра(МенеджерРегистра, Запрос, ТекстЗаголовка) Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = ТекстЗаголовка;
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли

	ПереписатьНаборыЗаписейНезависимогоРегистраИзТаблицы(МенеджерРегистра, Запрос.Выполнить().Выгрузить(), ТекстЗаголовка)
	
КонецПроцедуры

// Перезаполняет наборы записей исправленными данными и записывает их.
// Запись выполняется построчно.
//
// Параметры: 
//  МенеджерРегистра - Регистр<Сведений,...>Менеджер.<Имя> - менеджер переписываемого регистра
//  ТаблицаЗаполнения - таблица значений, поля должны соответствовать полям записи заполняемого регистра;
//           обязательно должны присутствовать все измерения и поле Период для периодических регистров
//  ТекстЗаголовка - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ПереписатьНаборыЗаписейНезависимогоРегистраИзТаблицы(МенеджерРегистра, ТаблицаЗаполнения, ТекстСообщения)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоЗаписей = ТаблицаЗаполнения.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоЗаписей);
	#КонецЕсли
	
	
	Для Каждого СтрокаЗаполнения Из ТаблицаЗаполнения Цикл
		
		НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		Для Каждого ЭлементОтбора Из НаборЗаписей.Отбор Цикл
			ЭлементОтбора.Установить(СтрокаЗаполнения[ЭлементОтбора.Имя])
		КонецЦикла;	
		
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), СтрокаЗаполнения);
		
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Если Номер % 30 = 0 Тогда
				Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоЗаписей);
			КонецЕсли;
			Номер = Номер + 1;
		#КонецЕсли
			
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоЗаписей + " из " + ВсегоЗаписей);
	#КонецЕсли
	
КонецПроцедуры

// Добавляет строки в табличную часть регистраторов и записывает их без проведения.
//
// Параметры: 
//  ИмяТабличнойЧасти - Имя табличной части регистратора, куда необходимо добавить строки
//  Запрос - исполняемый запрос, в котором обязательно присутствует поле Регистратор
//			 остальные поля должны соответствовать полям записи заполняемого регистра;
//			 кроме того, результат запроса должен быть упорядочен, 
//			 первое поле упорядочивания - Регистратор
//  ТекстЗаголовка - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ДописатьСтрокиВТабличнуюЧастьРегистратора(ИмяТабличнойЧасти, Запрос, ТекстЗаголовка) Экспорт

	ДополнитьЗапросОбязательнымУпорядочиванием(Запрос, "Регистратор");
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = ТекстЗаголовка;
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаРегистраторов.СледующийПоЗначениюПоля("Регистратор") Цикл
		Если Не ЗначениеЗаполнено(ВыборкаРегистраторов.Регистратор) Тогда
			Продолжить;
		КонецЕсли;
		РегистраторОбъект = ВыборкаРегистраторов.Регистратор.ПолучитьОбъект();
		Пока ВыборкаРегистраторов.Следующий() Цикл
			ДобавляемаяСтрока = РегистраторОбъект[ИмяТабличнойЧасти].Добавить();
			ЗаполнитьЗначенияСвойств(ДобавляемаяСтрока,ВыборкаРегистраторов);
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		РегистраторОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

// Устанавливает реквизиты элемента справочника "ДоходыНДФЛ"
//
Процедура УстановитьРеквизитыКодаЕСН(СпособОтражения, ВходитВБазуФедеральныйБюджет, ВходитВБазуФСС, ВходитВБазуФОМС) Экспорт

	Объект = СпособОтражения.ПолучитьОбъект();

	Объект.ВходитВБазуФедеральныйБюджет = ВходитВБазуФедеральныйБюджет;
	Объект.ВходитВБазуФСС               = ВходитВБазуФСС;
	Объект.ВходитВБазуФОМС              = ВходитВБазуФОМС;

	Объект.Записать();

КонецПроцедуры

// Процедура записывает переданный справочник объект и выводит сообщение.
// Предназначена для вызова из процедур заполнения и обработки справочников информационной базы.
//
// Параметры:
//  СправочникОбъект - объект, который требуется записать.
//
Процедура ЗаписатьСправочникОбъект(СправочникОбъект)

	Если НЕ СправочникОбъект.Модифицированность() Тогда
		Возврат;
	КонецЕсли;

	Если СправочникОбъект.ЭтоНовый() Тогда
		СтрСообщения1 = "Создан";
	Иначе
		СтрСообщения1 = "Обработан";
	КонецЕсли;

	Если СправочникОбъект.ЭтоГруппа Тогда
		СтрСообщения2 = "а группа";
	Иначе
		СтрСообщения2 = " элемент";
	КонецЕсли;

	СтрСообщения2 = СтрСообщения2 + " справочника """ + СправочникОбъект.Метаданные().Синоним + """: ";
	СтрСообщения3 = "наименование """ + СправочникОбъект.Наименование + """";

	Попытка
		СправочникОбъект.Записать();
	Исключение
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Сообщить("Не записан"  + СтрСообщения2 + СтрСообщения3 +
		         Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
	#КонецЕсли
	КонецПопытки;

КонецПроцедуры

// Функция создает элемент справочника КатегорииРасчетов, если такого нет.
//
// Параметры:
//  Код -                     - значение соответствующего реквизита справочника,
//  Наименование              - значение соответствующего реквизита справочника,
//
// Возвращаемое значение:
//  Ссылка на добавленный или существующий элемент.
//
Функция НайтиСоздатьКатегорию(Код, Наименование) Экспорт

	Ссылка = Справочники.КатегорииРасчетов.НайтиПоКоду(Код);

	Если Ссылка.Пустая() Тогда
		СправочникОбъект = Справочники.КатегорииРасчетов.СоздатьЭлемент();

		СправочникОбъект.Код          = Код;
		СправочникОбъект.Наименование = Наименование;

		ЗаписатьСправочникОбъект(СправочникОбъект);

		Ссылка = СправочникОбъект.Ссылка;

	КонецЕсли;

	Возврат Ссылка;

КонецФункции // НайтиСоздатьКатегорию()

// Создает новый вид расчета
//
// Параметры
//  ПВР  – менеджер плана видов расчетов
//  Код  – код создаваемого вида расчета
//  Наименование  – наименование создаваемого вида расчета
//  БазовыеВидыРасчетов - список базовых видов расчетов
//
// Возвращаемое значение:
//   ссылка на созданный вид расчета
//
Функция СоздатьВидРасчета(ПВР, Код, Наименование, БазовыеВидыРасчетов = Неопределено) Экспорт

	ВР = ПВР.НайтиПоКоду(Код);
	Если ВР.Пустая() Тогда
		ВР = ПВР.СоздатьВидРасчета();
	Иначе
		ВР = ВР.ПолучитьОбъект();
		ВР.БазовыеВидыРасчета.Очистить();
	КонецЕсли;

	ВР.Код          = Код;
	ВР.Наименование = Наименование;

	Если БазовыеВидыРасчетов<>Неопределено Тогда
		Для каждого Элемент Из БазовыеВидыРасчетов Цикл
			НоваяСтрока            = ВР.БазовыеВидыРасчета.Добавить();
			НоваяСтрока.ВидРасчета = Элемент.Значение;
		КонецЦикла;
	КонецЕсли;

	ВР.ОбменДанными.Загрузка = Истина;
	ВР.Записать();

	Возврат ВР.Ссылка;

КонецФункции

Процедура СкопироватьВытеснениеВидовРасчета(СоответствиеВидовРасчета) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеВидовРасчета.Образец,
	|	СоответствиеВидовРасчета.НовыйВидРасчета
	|ПОМЕСТИТЬ ВТСоответствиеВидовРасчета
	|ИЗ
	|	&СоответствиеВидовРасчета КАК СоответствиеВидовРасчета";
	Запрос.УстановитьПараметр("СоответствиеВидовРасчета", СоответствиеВидовРасчета);
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка КАК Ссылка,
	|	СоответствиеВидовРасчета.НовыйВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовРасчета КАК СоответствиеВидовРасчета
	|		ПО ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.ВидРасчета = СоответствиеВидовРасчета.Образец
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК УжеИмеющиесяВидыРасчета
	|		ПО (СоответствиеВидовРасчета.НовыйВидРасчета = УжеИмеющиесяВидыРасчета.ВидРасчета)
	|			И ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.Ссылка = УжеИмеющиесяВидыРасчета.Ссылка
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийВытесняющиеВидыРасчета.ВидРасчета В
	|			(ВЫБРАТЬ
	|				ОбразцыВытеснения.Образец
	|			ИЗ
	|				ВТСоответствиеВидовРасчета КАК ОбразцыВытеснения)
	|	И УжеИмеющиесяВидыРасчета.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ВРОбъект = ВыборкаЗапроса.Ссылка.ПолучитьОбъект();
		ВРОбъект.ОбменДанными.Загрузка = Истина;
		
		Пока ВыборкаЗапроса.Следующий() Цикл
			ВРОбъект.ВытесняющиеВидыРасчета.Добавить().ВидРасчета = ВыборкаЗапроса.НовыйВидРасчета;
		КонецЦикла;
		
		Попытка
			ВРОбъект.Записать();
		Исключение
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Сообщить("Вид расчета " + ВРОбъект.Наименование + ": обнаружено дублирование вытесняющих видов расчета!", СтатусСообщения.Важное);
		#КонецЕсли
		КонецПопытки;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура СкопироватьВходимостьВРасчетныеБазы(СоответствиеВидовРасчета) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеВидовРасчета.Образец,
	|	СоответствиеВидовРасчета.НовыйВидРасчета
	|ПОМЕСТИТЬ ВТСоответствиеВидовРасчета
	|ИЗ
	|	&СоответствиеВидовРасчета КАК СоответствиеВидовРасчета";
	Запрос.УстановитьПараметр("СоответствиеВидовРасчета", СоответствиеВидовРасчета);
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка КАК Ссылка,
	|	СоответствиеВидовРасчета.НовыйВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ОсновныеНачисленияОрганизацийБазовыеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовРасчета КАК СоответствиеВидовРасчета
	|		ПО ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.ВидРасчета = СоответствиеВидовРасчета.Образец
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК УжеИмеющиесяВидыРасчета
	|		ПО (СоответствиеВидовРасчета.НовыйВидРасчета = УжеИмеющиесяВидыРасчета.ВидРасчета)
	|			И ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка = УжеИмеющиесяВидыРасчета.Ссылка
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.ВидРасчета В
	|			(ВЫБРАТЬ
	|				ОбразцыРасчетнойБазы.Образец
	|			ИЗ
	|				ВТСоответствиеВидовРасчета КАК ОбразцыРасчетнойБазы)
	|	И УжеИмеющиесяВидыРасчета.Ссылка ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка,
	|	СоответствиеВидовРасчета.НовыйВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ДополнительныеНачисленияОрганизацийБазовыеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовРасчета КАК СоответствиеВидовРасчета
	|		ПО ДополнительныеНачисленияОрганизацийБазовыеВидыРасчета.ВидРасчета = СоответствиеВидовРасчета.Образец
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.БазовыеВидыРасчета КАК УжеИмеющиесяВидыРасчета
	|		ПО (СоответствиеВидовРасчета.НовыйВидРасчета = УжеИмеющиесяВидыРасчета.ВидРасчета)
	|			И ДополнительныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка = УжеИмеющиесяВидыРасчета.Ссылка
	|ГДЕ
	|	ДополнительныеНачисленияОрганизацийБазовыеВидыРасчета.ВидРасчета В
	|			(ВЫБРАТЬ
	|				ОбразцыРасчетнойБазы.Образец
	|			ИЗ
	|				ВТСоответствиеВидовРасчета КАК ОбразцыРасчетнойБазы)
	|	И УжеИмеющиесяВидыРасчета.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ВРОбъект = ВыборкаЗапроса.Ссылка.ПолучитьОбъект();
		ВРОбъект.ОбменДанными.Загрузка = Истина;
		
		Пока ВыборкаЗапроса.Следующий() Цикл
			ВРОбъект.БазовыеВидыРасчета.Добавить().ВидРасчета = ВыборкаЗапроса.НовыйВидРасчета;
			Если ВРОбъект.ВедущиеВидыРасчета.Найти(ВыборкаЗапроса.НовыйВидРасчета,"ВидРасчета") = Неопределено Тогда
				ВРОбъект.ВедущиеВидыРасчета.Добавить().ВидРасчета = ВыборкаЗапроса.НовыйВидРасчета;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ВРОбъект.Записать();
		Исключение
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Сообщить("Вид расчета " + ВРОбъект.Наименование + ": не удалось включить в расчетную базу новый в.р. """ + ОбщегоНазначенияЗК.ПолучитьПредставленияОбъектов(ВыборкаЗапроса.НовыйВидРасчета) + """!", СтатусСообщения.Важное);
		#КонецЕсли
		КонецПопытки;
		
	КонецЦикла; 
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка КАК Ссылка,
	|	СоответствиеВидовРасчета.НовыйВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВедущиеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовРасчета КАК СоответствиеВидовРасчета
	|		ПО ОсновныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета = СоответствиеВидовРасчета.Образец
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК УжеИмеющиесяВидыРасчета
	|		ПО (СоответствиеВидовРасчета.НовыйВидРасчета = УжеИмеющиесяВидыРасчета.ВидРасчета)
	|			И ОсновныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка = УжеИмеющиесяВидыРасчета.Ссылка
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета В
	|			(ВЫБРАТЬ
	|				ОбразцыРасчетнойБазы.Образец
	|			ИЗ
	|				ВТСоответствиеВидовРасчета КАК ОбразцыРасчетнойБазы)
	|	И УжеИмеющиесяВидыРасчета.Ссылка ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка,
	|	СоответствиеВидовРасчета.НовыйВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовРасчета КАК СоответствиеВидовРасчета
	|		ПО ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета = СоответствиеВидовРасчета.Образец
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК УжеИмеющиесяВидыРасчета
	|		ПО (СоответствиеВидовРасчета.НовыйВидРасчета = УжеИмеющиесяВидыРасчета.ВидРасчета)
	|			И ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка = УжеИмеющиесяВидыРасчета.Ссылка
	|ГДЕ
	|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета В
	|			(ВЫБРАТЬ
	|				ОбразцыРасчетнойБазы.Образец
	|			ИЗ
	|				ВТСоответствиеВидовРасчета КАК ОбразцыРасчетнойБазы)
	|	И УжеИмеющиесяВидыРасчета.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ВРОбъект = ВыборкаЗапроса.Ссылка.ПолучитьОбъект();
		ВРОбъект.ОбменДанными.Загрузка = Истина;
		
		Пока ВыборкаЗапроса.Следующий() Цикл
			ВРОбъект.ВедущиеВидыРасчета.Добавить().ВидРасчета = ВыборкаЗапроса.НовыйВидРасчета;
		КонецЦикла;
		
		Попытка
			ВРОбъект.Записать();
		Исключение
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Сообщить("Вид расчета " + ВРОбъект.Наименование + ": не удалось включить в расчетную базу новый в.р. """ + ОбщегоНазначенияЗК.ПолучитьПредставленияОбъектов(ВыборкаЗапроса.НовыйВидРасчета) + """!", СтатусСообщения.Важное);
		#КонецЕсли
		КонецПопытки;
		
	КонецЦикла; 
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УдержанияОрганизацийБазовыеВидыРасчета.Ссылка КАК Ссылка,
	|	СоответствиеВидовРасчета.НовыйВидРасчета
	|ИЗ
	|	ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК УдержанияОрганизацийБазовыеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеВидовРасчета КАК СоответствиеВидовРасчета
	|		ПО УдержанияОрганизацийБазовыеВидыРасчета.ВидРасчета = СоответствиеВидовРасчета.Образец
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК УжеИмеющиесяВидыРасчета
	|		ПО (СоответствиеВидовРасчета.НовыйВидРасчета = УжеИмеющиесяВидыРасчета.ВидРасчета)
	|			И УдержанияОрганизацийБазовыеВидыРасчета.Ссылка = УжеИмеющиесяВидыРасчета.Ссылка
	|ГДЕ
	|	УдержанияОрганизацийБазовыеВидыРасчета.ВидРасчета В
	|			(ВЫБРАТЬ
	|				ОбразцыРасчетнойБазы.Образец
	|			ИЗ
	|				ВТСоответствиеВидовРасчета КАК ОбразцыРасчетнойБазы)
	|	И УжеИмеющиесяВидыРасчета.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ВРОбъект = ВыборкаЗапроса.Ссылка.ПолучитьОбъект();
		ВРОбъект.ОбменДанными.Загрузка = Истина;
		
		Пока ВыборкаЗапроса.Следующий() Цикл
			ВРОбъект.БазовыеВидыРасчета.Добавить().ВидРасчета = ВыборкаЗапроса.НовыйВидРасчета;
		КонецЦикла;
		
		Попытка
			ВРОбъект.Записать();
		Исключение
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Сообщить("Вид расчета " + ВРОбъект.Наименование + ": не удалось включить в расчетную базу новый в.р. """ + ОбщегоНазначенияЗК.ПолучитьПредставленияОбъектов(ВыборкаЗапроса.НовыйВидРасчета) + """!", СтатусСообщения.Важное);
		#КонецЕсли
		КонецПопытки;
		
	КонецЦикла; 
	
КонецПроцедуры

// Устанавливает список базовых расчетов для элемента плана видов расчета
//
// Параметры
//  ВидРасчета  – вид расчетов (ссылка)
//  БазовыеВидыРасчетов - список базовых видов расчетов
Процедура УстановитьБазовыеИВедущиеРасчеты(ВидРасчета, БазовыеВидыРасчетов, ВедущиеВидыРасчета) Экспорт

	ВР = ВидРасчета.ПолучитьОбъект();

	// обходим с последней строки табличной части и удаляем не предопределенные строки
	Индекс = ВР.БазовыеВидыРасчета.Количество();
	Пока Индекс > 0 Цикл
		Индекс = Индекс - 1;
		Если ВР.БазовыеВидыРасчета[Индекс].Предопределенный Тогда
			Продолжить;
		КонецЕсли;
		ВР.БазовыеВидыРасчета.Удалить(Индекс);
	КонецЦикла;
	Если БазовыеВидыРасчетов <> Неопределено Тогда
		Для каждого Элемент Из БазовыеВидыРасчетов Цикл
			НоваяСтрока            = ВР.БазовыеВидыРасчета.Добавить();
			НоваяСтрока.ВидРасчета = Элемент.Значение;
		КонецЦикла;
	КонецЕсли;

	// обходим с последней строки табличной части и удаляем не предопределенные строки
	Индекс = ВР.ВедущиеВидыРасчета.Количество();
	Пока Индекс > 0 Цикл
		Индекс = Индекс - 1;
		Если ВР.ВедущиеВидыРасчета[Индекс].Предопределенный Тогда
			Продолжить;
		КонецЕсли;
		ВР.ВедущиеВидыРасчета.Удалить(Индекс);
	КонецЦикла;
	Если ВедущиеВидыРасчета <> Неопределено Тогда
		Для каждого Элемент Из ВедущиеВидыРасчета Цикл
			НоваяСтрока            = ВР.ВедущиеВидыРасчета.Добавить();
			НоваяСтрока.ВидРасчета = Элемент.Значение;
		КонецЦикла;
	КонецЕсли;

	ВР.ОбменДанными.Загрузка = Истина;
	ВР.Записать();

КонецПроцедуры

// Добавляет запись в набор записей регистра "ЕСНСкидкиКДоходам"
//
Процедура ДобавитьСкидкуКДодохамЕСН(НаборЗаписей, ДатаСведений, КодДохода, ГодоваяСкидка) Экспорт

	НоваяЗапись = НаборЗаписей.Добавить();

	НоваяЗапись.Период         = ДатаСведений;
	НоваяЗапись.КодДоходаЕСН   = КодДохода;
	НоваяЗапись.ГодоваяСкидка  = ГодоваяСкидка;

КонецПроцедуры

// Процедура изменяет ставшие неуникальными коды предопределенных элементов
//
Процедура УстановитьЗначениеКодаПредопределенныхЭлементов(СписокПредопределенныхЭлементов) Экспорт
	
	МассивЭлементов = Новый Массив;
	
	Пока СписокПредопределенныхЭлементов.Количество()>0 Цикл
		
		МассивЭлементов.Очистить();
		КолвоЭлементовВСписке = СписокПредопределенныхЭлементов.Количество();
		ТекушийТипЗначения = ТипЗнч(СписокПредопределенныхЭлементов [КолвоЭлементовВСписке-1].Значение);
		
		МетаданныеТипа = Метаданные.НайтиПоТипу(ТекушийТипЗначения);		
		Если Метаданные.Справочники.Содержит(МетаданныеТипа) Тогда
			МенеджерТекущегоТипа = Справочники[МетаданныеТипа.Имя];
		ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеТипа) Тогда
			МенеджерТекущегоТипа = ПланыВидовХарактеристик[МетаданныеТипа.Имя];
		ИначеЕсли Метаданные.ПланыСчетов.Содержит(МетаданныеТипа) Тогда
			МенеджерТекущегоТипа = ПланыСчетов[МетаданныеТипа.Имя];	
		ИначеЕсли Метаданные.ПланыВидовРасчета.Содержит(МетаданныеТипа) Тогда
			МенеджерТекущегоТипа = ПланыВидовРасчета[МетаданныеТипа.Имя];
		Иначе
			МенеджерТекущегоТипа = Неопределено;
		КонецЕсли;
		
		Для ОбратныйИндекс = 1 По КолвоЭлементовВСписке Цикл
			ЭлементСписка = СписокПредопределенныхЭлементов [КолвоЭлементовВСписке - ОбратныйИндекс];
			
			Если ТипЗнч(ЭлементСписка.Значение) = ТекушийТипЗначения Тогда				
				ЕСли МетаданныеТипа.ДлинаКода <> 0 И МенеджерТекущегоТипа <> Неопределено Тогда
					МассивЭлементов.Добавить(ЭлементСписка.Значение);
				КонецЕсли;				
				СписокПредопределенныхЭлементов.Удалить(ЭлементСписка);				
			КонецЕсли;			
		КонецЦикла;
		
		Если МассивЭлементов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Предопределенные.Ссылка
		|ИЗ
		|	" + МетаданныеТипа.ПолноеИмя() + " КАК Предопределенные
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + МетаданныеТипа.ПолноеИмя() + " КАК Пользовательские
		|		ПО Предопределенные.Код = Пользовательские.Код
		|
		|ГДЕ
		|	Предопределенные.Ссылка В(&СписокЭлементов)
		|    И Пользовательские.Ссылка НЕ В(&СписокЭлементов)";
		
		Запрос.УстановитьПараметр("СписокЭлементов", МассивЭлементов);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Объект = Выборка.Ссылка.ПолучитьОбъект();			
			Объект.УстановитьНовыйКод();			
			Если МенеджерТекущегоТипа.НайтиПоКоду(Объект.Код).Пустая() Тогда
				
				// Поскольку меняем только код элемента, проверку корректности заполнения
				// дополнительных реквизитов объекта не выполняем.
				Объект.ОбменДанными.Загрузка = Истина;
				
				Объект.Записать();
			КонецЕсли;			
		КонецЦикла;	
		
	КонецЦикла;


КонецПроцедуры

// Процедура очищает информацию о возможных загруженных из внешних файлов
// правил перехода
// Это необходимо для того, чтобы пользователь мог использовать новые правила
// которые поставляются с текущим релизом
//
Процедура ОчиститьЗагруженныеПравилаПереноса() Экспорт
	
	Выборка = Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектКонвертации	= Выборка.ПолучитьОбъект();
		ОбъектКонвертации.ХранилищеПомощник				= Неопределено;
		ОбъектКонвертации.ХранилищеОписаниеПомощника	= Неопределено;
		ОбъектКонвертации.ХранилищеОбработка			= Неопределено;
		ОбъектКонвертации.ХранилищеПравила				= Неопределено;
		ОбъектКонвертации.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтключитьВнешнийМодульДокументооборотаСФНС() Экспорт
	
	Константы.ДокументооборотСКонтролирующимиОрганами_ИспользоватьВнешнийМодуль.Установить(Ложь);
	
КонецПроцедуры

// заполним табличную часть ФизицескиеЛица в документах НДФЛиЕСНДоходыИНалоги
Процедура ЗаполнитьТЧФизицескиеЛицаВНДФЛиЕСНДоходыИНалоги() Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.Ссылка КАК Ссылка,
	|	НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТ_Физлица
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛСведенияОДоходах КАК НДФЛиЕСНДоходыИНалогиНДФЛСведенияОДоходах
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.Ссылка,
	|	НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13.ФизЛицо
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛИсчисленный13 КАК НДФЛиЕСНДоходыИНалогиНДФЛИсчисленный13
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиНДФЛПредоставленныеВычеты.Ссылка,
	|	НДФЛиЕСНДоходыИНалогиНДФЛПредоставленныеВычеты.ФизЛицо
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛПредоставленныеВычеты КАК НДФЛиЕСНДоходыИНалогиНДФЛПредоставленныеВычеты
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.Ссылка,
	|	НДФЛиЕСНДоходыИНалогиНДФЛУдержанный.ФизЛицо
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.НДФЛУдержанный КАК НДФЛиЕСНДоходыИНалогиНДФЛУдержанный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.Ссылка,
	|	НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах.ФизЛицо
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ЕСНСведенияОДоходах КАК НДФЛиЕСНДоходыИНалогиЕСНСведенияОДоходах
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.Ссылка,
	|	НДФЛиЕСНДоходыИНалогиЕСННалоги.ФизЛицо
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ЕСННалоги КАК НДФЛиЕСНДоходыИНалогиЕСННалоги
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиПособияСоциальномуСтрахованию.Ссылка,
	|	НДФЛиЕСНДоходыИНалогиПособияСоциальномуСтрахованию.ФизЛицо
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ПособияСоциальномуСтрахованию КАК НДФЛиЕСНДоходыИНалогиПособияСоциальномуСтрахованию
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиПособияПоУходуЗаРебенкомДоПолутораЛет.Ссылка,
	|	НДФЛиЕСНДоходыИНалогиПособияПоУходуЗаРебенкомДоПолутораЛет.ФизЛицо
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК НДФЛиЕСНДоходыИНалогиПособияПоУходуЗаРебенкомДоПолутораЛет
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиСтраховыеВзносыСведенияОДоходах.Ссылка,
	|	НДФЛиЕСНДоходыИНалогиСтраховыеВзносыСведенияОДоходах.ФизЛицо
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.СтраховыеВзносыСведенияОДоходах КАК НДФЛиЕСНДоходыИНалогиСтраховыеВзносыСведенияОДоходах
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.Ссылка,
	|	НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.ФизЛицо
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.СтраховыеВзносы КАК НДФЛиЕСНДоходыИНалогиСтраховыеВзносы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиФизическиеЛица.Ссылка КАК Ссылка,
	|	НДФЛиЕСНДоходыИНалогиФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТ_ТЧФизлица
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ФизическиеЛица КАК НДФЛиЕСНДоходыИНалогиФизическиеЛица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Физлица.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_СписокДокументов
	|ИЗ
	|	ВТ_Физлица КАК ВТ_Физлица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧФизлица КАК ВТ_ТЧФизлица
	|		ПО ВТ_Физлица.Ссылка = ВТ_ТЧФизлица.Ссылка
	|			И ВТ_Физлица.ФизЛицо = ВТ_ТЧФизлица.ФизическоеЛицо
	|ГДЕ
	|	ВТ_ТЧФизлица.ФизическоеЛицо ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Физлица.Ссылка КАК Ссылка,
	|	ВТ_Физлица.ФизЛицо
	|ИЗ
	|	ВТ_Физлица КАК ВТ_Физлица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК ВТ_СписокДокументов
	|		ПО ВТ_Физлица.Ссылка = ВТ_СписокДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		ДокументСсылка = Выборка.Ссылка;
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		ДокументОбъект.ФизическиеЛица.Очистить();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ДокументОбъект.ФизическиеЛица.Добавить();
			НоваяСтрока.ФизическоеЛицо = Выборка.ФизЛицо;
		КонецЦикла;
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать();
	КонецЦикла;	

КонецПроцедуры // ЗаполнитьТЧФизицескиеЛицаВНДФЛиЕСНДоходыИНалоги()

// Процедура заполняет реквизит ВидВремени в основных начислениях, если он не заполнен
//
Процедура ЗаполнитьВидВремениВОсновныхНачислениях() Экспорт

	Запрос = Новый Запрос;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОсновныеНачисления.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ПустаяСсылка)
	|	И ОсновныеНачисления.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СевернаяНадбавка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияПоказатели.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияПоказатели
	|ГДЕ
	|	ОсновныеНачисленияПоказатели.Ссылка.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ПустаяСсылка)
	|	И ОсновныеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.РасчетнаяБаза)
	|	И ОсновныеНачисленияПоказатели.Ссылка.ПроизвольнаяФормулаРасчета";
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ВРОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВРОбъект.ВидВремени = Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы;
		ВРОбъект.ОбменДанными.Загрузка = Истина;
		ВРОбъект.Записать();
		
	КонецЦикла;	

КонецПроцедуры // ЗаполнитьВидВремениВОсновныхНачислениях()

Процедура ЗаполнитьПроизводственныйКалендарь(Год) Экспорт
	
	Если Год < 2012 Тогда
		
		НаборЗаписей = РегистрыСведений.ПеренесенныеРабочиеДни.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Год.Установить(Год);
		
		ТаблицаРегистра = РегистрыСведений.РегламентированныйПроизводственныйКалендарь.ЗаполнениеКалендаряСПереносами(Дата(Год, 1, 1), НаборЗаписей);
		
		Для каждого СтрокаНабора Из НаборЗаписей Цикл
			СтрокаНабора.Год = Год
		КонецЦикла;
		НаборЗаписей.Записать();
		
		РегистрыСведений.РегламентированныйПроизводственныйКалендарь.СоздатьНаборЗаписей().ЗаписатьИзТаблицыВРегистр(ТаблицаРегистра, Год);

	ИначеЕсли Год = 2012 Тогда
		ЗаполнитьПроизводственныйКалендарьЗа2012Год();
		ПеренестиВыходныеДниМая2012();
	ИначеЕсли Год = 2013 Тогда
		ЗаполнитьПроизводственныйКалендарьЗа2013Год();
	ИначеЕсли Год = 2014 Тогда
		ЗаполнитьПроизводственныйКалендарьЗа2014Год();
	Иначе // не умеем
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПереЗаполнитьПроизводственныйКалендарьСУчетомПереносов(ТекущийГод, ДатыОтмененныхПереносов)
	
	Объект = РегистрыСведений.РегламентированныйПроизводственныйКалендарь.СоздатьНаборЗаписей();
	НаборЗаписей = РегистрыСведений.ПеренесенныеРабочиеДни.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Год.Установить(ТекущийГод);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийГод",ТекущийГод);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РегламентированныйПроизводственныйКалендарь.Год
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.Год = &ТекущийГод";
	
	Если Запрос.Выполнить().Пустой() Тогда
		
		ТаблицаРегистра = РегистрыСведений.РегламентированныйПроизводственныйКалендарь.ЗаполнениеКалендаряСПереносами(Дата(ТекущийГод, 1, 1), НаборЗаписей);
		
		Для каждого СтрокаНабора Из НаборЗаписей Цикл
			СтрокаНабора.Год = ТекущийГод
		КонецЦикла;
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
		
		Объект.ЗаписатьИзТаблицыВРегистр(ТаблицаРегистра, ТекущийГод);
		Объект.Очистить();
		
	Иначе
		
		МассивДат = Новый Массив;
		
		ПеренесенныеРабочиеДни = НаборЗаписей.ВыгрузитьКолонки();
		РегистрыСведений.РегламентированныйПроизводственныйКалендарь.ЗаполнитьПереченьПеренесенныхДней(ТекущийГод, ПеренесенныеРабочиеДни);
		Для каждого СтрокаТЗ Из ПеренесенныеРабочиеДни Цикл
			
			МассивДат.Добавить(СтрокаТЗ.РабочийДень);
			МассивДат.Добавить(СтрокаТЗ.ВыходнойДень);
			
			НаборЗаписей.Отбор.РабочийДень.Установить(СтрокаТЗ.РабочийДень);
			НаборЗаписей.Отбор.ВыходнойДень.Установить(СтрокаТЗ.ВыходнойДень);
			СтрокаНабораЗаписей = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабораЗаписей, СтрокаТЗ);
			СтрокаНабораЗаписей.Год	= ТекущийГод;
			НаборЗаписей.Записать();
			НаборЗаписей.Очистить();
			
		КонецЦикла;
		
		Для каждого Значение Из ДатыОтмененныхПереносов Цикл
			МассивДат.Добавить(Значение);
			НаборЗаписей.Отбор.РабочийДень.Установить(Значение);
			НаборЗаписей.Записать();
		КонецЦикла;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря,
		|	РегламентированныйПроизводственныйКалендарь.Год,
		|	РегламентированныйПроизводственныйКалендарь.Пятидневка,
		|	РегламентированныйПроизводственныйКалендарь.Шестидневка,
		|	РегламентированныйПроизводственныйКалендарь.КалендарныеДни,
		|	РегламентированныйПроизводственныйКалендарь.ВидДня
		|ИЗ
		|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
		|ГДЕ
		|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря В(&МассивДат)";
		
		Запрос.УстановитьПараметр("МассивДат", МассивДат);
		ТаблицаРегистра = Запрос.Выполнить().Выгрузить();	
		
		Для Каждого СтрокаТЗ Из ПеренесенныеРабочиеДни Цикл
			РегистрыСведений.РегламентированныйПроизводственныйКалендарь.ПеренестиДатыПроизводственногоКалендаря(ТаблицаРегистра, СтрокаТЗ);
		КонецЦикла;
		
		Для Каждого СтрокаТаблицы Из ТаблицаРегистра Цикл
			
			Если ДатыОтмененныхПереносов.Найти(СтрокаТаблицы.ДатаКалендаря) <> Неопределено Тогда
				СтрокаТаблицы.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий;
			КонецЕсли;
			
			ЗаполнитьРесурсыЗаписиРегистра(СтрокаТаблицы);
			Объект.Отбор.ДатаКалендаря.Установить(СтрокаТаблицы.ДатаКалендаря);
			ЗаполнитьЗначенияСвойств(Объект.Добавить(), СтрокаТаблицы);
			Объект.Записать();
			Объект.Очистить();
			
		КонецЦикла;	
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы,
		|	ГрафикиРаботыПоВидамВремени.Месяц,
		|	ГрафикиРаботыПоВидамВремени.План,
		|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени,
		|	ГрафикиРаботыПоВидамВремени.Дата,
		|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначение,
		|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение,
		|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьПятидневка,
		|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьПятидневкаЧасы,
		|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьШестидневка,
		|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьКалендарныеДни,
		|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма,
		|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма,
		|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеПолное,
		|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеПолное,
		|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНормаПолное,
		|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНормаПолное,
		|	ГрафикиРаботыПоВидамВремени.Документ,
		|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы.ДлительностьРабочейНедели КАК ДлительностьРабочейНедели
		|ИЗ
		|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
		|ГДЕ
		|	ГрафикиРаботыПоВидамВремени.Дата В(&МассивДат)
		|	И ГрафикиРаботыПоВидамВремени.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы
		|	И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням), ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам))";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			УсловнаяПродолжительностьДня = Выборка.ДлительностьРабочейНедели / 5;
			
			НаборЗаписейГрафики = РегистрыСведений.ГрафикиРаботыПоВидамВремени.СоздатьНаборЗаписей();
			
			Для Каждого ЭлементОтбора Из НаборЗаписейГрафики.Отбор	Цикл
				ЭлементОтбора.Установить(Выборка[ЭлементОтбора.Имя]);
			КонецЦикла;	
			
			ЗаписьГрафика = НаборЗаписейГрафики.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьГрафика, Выборка);
			
			ЗаписьГрафика.ПроизводственныйКалендарьПятидневка     = ОтмеченВРесурсеПроизводственногоКалендаря(Выборка.Дата, "Пятидневка",   ТаблицаРегистра);
			ЗаписьГрафика.ПроизводственныйКалендарьПятидневкаЧасы = УсловнаяПродолжительностьДня * ЗаписьГрафика.ПроизводственныйКалендарьПятидневка;
			ЗаписьГрафика.ПроизводственныйКалендарьШестиДневка    = ОтмеченВРесурсеПроизводственногоКалендаря(Выборка.Дата, "Шестидневка",  ТаблицаРегистра);
			ЗаписьГрафика.ПроизводственныйКалендарьКалендарныеДни = ОтмеченВРесурсеПроизводственногоКалендаря(Выборка.Дата, "КалендарныеДни", ТаблицаРегистра);
			
			НаборЗаписейГрафики.Записать();
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры

// страховые взносы

Процедура ОписатьВидДоходаПоСтраховымВзносам(СпособОтражения, ВходитВБазуПФР, ВходитВБазуФСС, ВходитВБазуФОМС) Экспорт

	Объект = СпособОтражения.ПолучитьОбъект();

	Объект.ВходитВБазуПФР = ВходитВБазуПФР;
	Объект.ВходитВБазуФСС = ВходитВБазуФСС;
	Объект.ВходитВБазуФОМС = ВходитВБазуФОМС;

	Объект.Записать();

КонецПроцедуры

Процедура ЗаполнитьВидыДоходовПоСтраховымВзносам() Экспорт

	СпрВидов = Справочники.ДоходыПоСтраховымВзносам;

	// целиком необлагаемые виды дохода не перезаписываем, они получаются правильными по умолчанию
	//ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.РаспределятьПоБазовымНачислениям, Ложь, 	Ложь,   Ложь); 
	//ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.НеЯвляетсяОбъектом,		Ложь, 	Ложь, 	Ложь); 
	//ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.НеОблагаетсяЦеликом,	Ложь, 	Ложь,   Ложь); 
	//ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.НеОблагаетсяЦеликомПрокуроров,	Ложь, 	Ложь,   Ложь); 
	//ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ПособияЗаСчетФСС,		Ложь, 	Ложь,	Ложь);
	//ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ДенежноеДовольствиеВоеннослужащих,	Ложь, 	Ложь,	Ложь);
	
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ДенежноеСодержаниеПрокуроров,		Ложь, 	Истина,	Истина); // ПФР , ФСС, ФОМС
	
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору,			Ложь,	Истина,	Истина);	// ПФР , ФСС, ФОМС
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ДоходыСтудентовЗаРаботуВСтудотрядеПоГражданскоПравовомуДоговору,Ложь,	Ложь,	Истина); 	// ПФР , ФСС, ФОМС
	
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ОблагаетсяЦеликом,				Истина, Истина, Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.Матпомощь,						Истина, Истина,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.МатпомощьПриРожденииРебенка,	Истина, Истина,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.МатпомощьПрокуроров,					Ложь, Истина,	Истина); // ПФР , ФСС, ФОМС
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.МатпомощьПриРожденииРебенкаПрокуроров,	Ложь, Истина,	Истина); // ПФР , ФСС, ФОМС

	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ДоговорыГПХ,							Истина, Ложь,	Истина); // ПФР , ФСС, ФОМС
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеАудиовизуальныеПроизведения,	Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеГрафическиеПроизведения,		Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеДругиеМузыкальныеПроизведения,	Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеИсполнениеПроизведений,		Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеЛитературныеПроизведения,		Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеМузыкальноСценическиеПроизведение,	Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеНаучныеТруды,					Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеОткрытия,						Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеСкульптуры,					Истина, Ложь,	Истина);
	
	// ---------------------------------------------------
	// ЗНАЧЕНИЯ СКИДОК К ДОХОДАМ НА 01.01.2010

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Доходы.Ссылка
	|ИЗ
	|	Справочник.ДоходыПоСтраховымВзносам КАК Доходы
	|ГДЕ
	|	Доходы.Предопределенный";

	СписокПредопределенныхКодовДоходов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

	ДатаСведений = '20100101';

	НаборЗаписей = РегистрыСведений.СтраховыеВзносыСкидкиКДоходам.СоздатьНаборЗаписей();

	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	НаборЗаписей.Отбор.Период.Значение = ДатаСведений;
	НаборЗаписей.Отбор.Период.Использование = Истина;

	НаборЗаписей.Отбор.ВидДохода.ВидСравнения = ВидСравнения.Равно;
	НаборЗаписей.Отбор.ВидДохода.Использование = Истина;
	Для Каждого ВидДохода Из СписокПредопределенныхКодовДоходов Цикл
		НаборЗаписей.Отбор.ВидДохода.Значение = ВидДохода;
		НаборЗаписей.Записать();
	КонецЦикла;

	// Отменим фильтр по кодам доходов перед получением оставшихся записей на дату сведений
	НаборЗаписей.Отбор.ВидДохода.Использование = Ложь;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.Матпомощь;
	НоваяЗапись.ГодоваяСкидка	= 4000;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.МатпомощьПрокуроров;
	НоваяЗапись.ГодоваяСкидка	= 4000;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.МатпомощьПриРожденииРебенка;
	НоваяЗапись.НормативЗатрат	= 50000;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.МатпомощьПриРожденииРебенкаПрокуроров;
	НоваяЗапись.НормативЗатрат	= 50000;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеАудиовизуальныеПроизведения;
	НоваяЗапись.НормативЗатрат	= 30;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеГрафическиеПроизведения;
	НоваяЗапись.НормативЗатрат	= 30;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеДругиеМузыкальныеПроизведения;
	НоваяЗапись.НормативЗатрат	= 25;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеИсполнениеПроизведений;
	НоваяЗапись.НормативЗатрат	= 20;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеЛитературныеПроизведения;
	НоваяЗапись.НормативЗатрат	= 20;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеМузыкальноСценическиеПроизведение;
	НоваяЗапись.НормативЗатрат	= 40;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеНаучныеТруды;
	НоваяЗапись.НормативЗатрат	= 20;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеОткрытия;
	НоваяЗапись.НормативЗатрат	= 30;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеСкульптуры;
	НоваяЗапись.НормативЗатрат	= 40;
	// Запишем набор записей
	НаборЗаписей.Записать();

КонецПроцедуры

// Выполняет заполнение регистра сведений "ТарифСтраховыхВзносов"
//
Процедура ЗаполнитьСведенияОТарифахСтраховыхВзносов() Экспорт 

	НаборЗаписей = РегистрыСведений.ТарифСтраховыхВзносов.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(РасчетСтраховыхВзносов.ТаблицаТарифовСтраховыхВзносов());
	НаборЗаписей.Записать();
	
	ЗаполнитьПредельнуюВеличинуБазыСтраховыхВзносов();
	ЗаполнитьТарифыДополнительныхВзносовЗаЗанятыхНаРаботахСДосрочнойПенсией();
	ЗаполнитьТарифыВзносовПоРезультатамСпециальнойОценкиУсловийТруда();
	
КонецПроцедуры

Процедура ЗаполнитьПредельнуюВеличинуБазыСтраховыхВзносов() 
	
	НаборЗаписей = РегистрыСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СоздатьНаборЗаписей();
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = '20100101';
	НоваяСтрока.РазмерФСС = 415000;
	НоваяСтрока.РазмерПФР = 415000;
	НоваяСтрока.РазмерФОМС = 415000;
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = '20110101';
	НоваяСтрока.РазмерФСС = 463000;
	НоваяСтрока.РазмерПФР = 463000;
	НоваяСтрока.РазмерФОМС = 463000;
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = '20120101';
	НоваяСтрока.РазмерФСС = 512000;
	НоваяСтрока.РазмерПФР = 512000;
	НоваяСтрока.РазмерФОМС = 512000;
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = '20130101';
	НоваяСтрока.РазмерФСС = 568000;
	НоваяСтрока.РазмерПФР = 568000;
	НоваяСтрока.РазмерФОМС = 568000;
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = '20140101';
	НоваяСтрока.РазмерФСС = 624000;
	НоваяСтрока.РазмерПФР = 624000;
	НоваяСтрока.РазмерФОМС = 624000;
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = '20150101';
	НоваяСтрока.РазмерФСС = 670000;
	НоваяСтрока.РазмерПФР = 711000;
	НаборЗаписей.Записать();
	


КонецПроцедуры

Процедура ОбновитьТарифСтраховыхВзносов(Тариф, ТаблицаТарифов = Неопределено) Экспорт

	Если ТаблицаТарифов = Неопределено Тогда
		ТаблицаТарифов = РасчетСтраховыхВзносов.ТаблицаТарифовСтраховыхВзносов();
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ТарифСтраховыхВзносов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидТарифа.Установить(Тариф);
	НаборЗаписей.Загрузить(ТаблицаТарифов.Скопировать(Новый Структура("ВидТарифа",Тариф)));
	НаборЗаписей.Записать();

КонецПроцедуры

// НДФЛ

Процедура ДобавитьКодДоходаНДФЛ(Код, Наименование, СтавкаНалогообложения, НеОблагаетсяУНалоговогоАгента = Ложь) Экспорт

	СсылкаНаЭлемент = Справочники.ДоходыНДФЛ.НайтиПоКоду(Код);

	Если  СсылкаНаЭлемент.Пустая() Тогда
		Элемент     = Справочники.ДоходыНДФЛ.СоздатьЭлемент();
		Элемент.Код = Код;

	Иначе
		Элемент = СсылкаНаЭлемент.ПолучитьОбъект();

	КонецЕсли;

	Элемент.Наименование     = Наименование;
	Элемент.КодДляОтчетности = Код;
	Элемент.СтавкаНалогообложенияРезидента = СтавкаНалогообложения;
	Элемент.НеОблагаетсяУНалоговогоАгента = НеОблагаетсяУНалоговогоАгента;

	Элемент.Записать();

КонецПроцедуры

Процедура УстановитьРеквизитыКодаДоходаНДФЛ(КодДохода, СтавкаНалогообложенияРезидента, КодДляОтчетности, НеОблагаетсяУНалоговогоАгента = Ложь, НеОтражаетсяВОтчетности2010 = Ложь, УчитыватьПоПериодуДействия = Ложь) Экспорт

	Объект = КодДохода.ПолучитьОбъект();

	Объект.СтавкаНалогообложенияРезидента	= СтавкаНалогообложенияРезидента;
	Объект.КодДляОтчетности					= КодДляОтчетности;
	Объект.НеОблагаетсяУНалоговогоАгента	= НеОблагаетсяУНалоговогоАгента;
	Объект.НеОтражаетсяВОтчетности2010		= НеОтражаетсяВОтчетности2010;
	Объект.УчитыватьПоПериодуДействия		= УчитыватьПоПериодуДействия;

	Объект.ОбменДанными.Загрузка = Истина;
	Объект.Записать();

КонецПроцедуры

Процедура ДобавитьКодВычетаНДФЛ(Код, Код2009 = "", Код2008 = "", Код2007 = "", Наименование, Наименование2008 = "", Наименование2007 = "", Код2010 = "", НеПредоставляетсяНерезидентам = Ложь, ГруппаВычета = Неопределено, Наименование2010 = "") Экспорт

	СсылкаНаЭлемент = Справочники.ВычетыНДФЛ.НайтиПоКоду(Код);

	Если  СсылкаНаЭлемент.Пустая() Тогда
		Элемент     = Справочники.ВычетыНДФЛ.СоздатьЭлемент();
		Элемент.Код = Код;

	Иначе
		Элемент = СсылкаНаЭлемент.ПолучитьОбъект();

	КонецЕсли;

	Элемент.Наименование = Наименование;
	Если ЗначениеЗаполнено(Наименование2008) Тогда
		Элемент.Наименование2008 = Наименование2008;
	Иначе
		Элемент.Наименование2008 = "не предоставлялся";
	КонецЕсли;
	Если ЗначениеЗаполнено(Наименование2007) Тогда
		Элемент.Наименование2007 = Наименование2007;
	Иначе
		Элемент.Наименование2007 = "не предоставлялся";
	КонецЕсли;
	Если ЗначениеЗаполнено(Наименование2010) Тогда
		Элемент.Наименование2010 = Наименование2010;
	Иначе
		Элемент.Наименование2010 = Наименование;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Код2009) Тогда
		Элемент.КодДляОтчетности2009 = Код2009;
	Иначе
		Элемент.КодДляОтчетности2009 = "-";
	КонецЕсли;
	Если ЗначениеЗаполнено(Код2008) Тогда
		Элемент.КодДляОтчетности2008 = Код2008;
	Иначе
		Элемент.КодДляОтчетности2008 = "-";
	КонецЕсли;
	Если ЗначениеЗаполнено(Код2007) Тогда
		Элемент.КодДляОтчетности2007 = Код2007;
	Иначе
		Элемент.КодДляОтчетности2007 = "-";
	КонецЕсли;
	Если ЗначениеЗаполнено(Код2010) Тогда
		Элемент.КодДляОтчетности2010 = Код2010;
		Элемент.КодДляОтчетности2011 = Код2010;
	Иначе
		Элемент.КодДляОтчетности2010 = "-";
		Элемент.КодДляОтчетности2011 = "-";
	КонецЕсли;

 	Элемент.НеПредоставляетсяНерезидентам = НеПредоставляетсяНерезидентам;
 	Элемент.ГруппаВычета = ГруппаВычета;

	Элемент.Записать();

КонецПроцедуры

Процедура ОписатьКодВычетаНДФЛ(СсылкаНаЭлемент, Код2009 = "", Код2008 = "", Код2007 = "", Наименование = "", Наименование2008 = "", Наименование2007 = "", Код2010 = "", НеПредоставляетсяНерезидентам = Ложь, НеОтражаетсяВОтчетности2010 = Ложь, ГруппаВычета = Неопределено, Код = "", Наименование2010 = "") Экспорт

	Элемент = СсылкаНаЭлемент.ПолучитьОбъект();

	Если ЗначениеЗаполнено(Наименование) Тогда
		Элемент.Наименование = Наименование;
	Иначе
		Наименование = Элемент.Наименование;
	КонецЕсли;
	Если ЗначениеЗаполнено(Наименование2008) Тогда
		Элемент.Наименование2008 = Наименование2008;
	Иначе
		Элемент.Наименование2008 = "не предоставлялся";
	КонецЕсли;
	Если ЗначениеЗаполнено(Наименование2007) Тогда
		Элемент.Наименование2007 = Наименование2007;
	Иначе
		Элемент.Наименование2007 = "не предоставлялся";
	КонецЕсли;
	Если ЗначениеЗаполнено(Наименование2010) Тогда
		Элемент.Наименование2010 = Наименование2010;
	Иначе
		Элемент.Наименование2010 = Наименование;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Код2009) Тогда
		Элемент.КодДляОтчетности2009 = Код2009;
	Иначе
		Элемент.КодДляОтчетности2009 = "-";
	КонецЕсли;
	Если ЗначениеЗаполнено(Код2008) Тогда
		Элемент.КодДляОтчетности2008 = Код2008;
	Иначе
		Элемент.КодДляОтчетности2008 = "-";
	КонецЕсли;
	Если ЗначениеЗаполнено(Код2007) Тогда
		Элемент.КодДляОтчетности2007 = Код2007;
	Иначе
		Элемент.КодДляОтчетности2007 = "-";
	КонецЕсли;
	Если ЗначениеЗаполнено(Код2010) Тогда
		Элемент.КодДляОтчетности2010 = Код2010;
	Иначе
		Элемент.КодДляОтчетности2010 = "-";
	КонецЕсли;
	Элемент.КодДляОтчетности2011 = Элемент.КодДляОтчетности2010;
	
	Если ЗначениеЗаполнено(Код) Тогда
		Элемент.Код = Код;
	КонецЕсли;

 	Элемент.НеОтражаетсяВОтчетности2010 = НеОтражаетсяВОтчетности2010;
 	Элемент.НеПредоставляетсяНерезидентам = НеПредоставляетсяНерезидентам;
 	Элемент.ГруппаВычета = ГруппаВычета;

	Элемент.Записать();

КонецПроцедуры

Процедура ОписатьКодВычетаНДФЛ_2011(СсылкаНаЭлемент, Код = "", Наименование = "", Код2010 = "", Код2011 = "", ПредоставлялсяВ2010 = Ложь, ГруппаВычета = Неопределено,  НеПредоставляетсяНерезидентам = Ложь) Экспорт

	Элемент = СсылкаНаЭлемент.ПолучитьОбъект();

	Если ЗначениеЗаполнено(Код) Тогда
		Элемент.Код = Код;
	Иначе
		Код = Элемент.Код;
	КонецЕсли;
	Если ЗначениеЗаполнено(Наименование) Тогда
		Элемент.Наименование = Наименование;
	Иначе
		Наименование = Элемент.Наименование;
	КонецЕсли;
	
	Если Не ПредоставлялсяВ2010 Тогда
		Элемент.Наименование2007 = "не предоставлялся";
		Элемент.КодДляОтчетности2007 = "-";
		Элемент.Наименование2008 = "не предоставлялся";
		Элемент.КодДляОтчетности2008 = "-";
		Элемент.КодДляОтчетности2009 = "-";
		Элемент.Наименование2010 = "не предоставлялся";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Код2010) Тогда
		Элемент.КодДляОтчетности2010 = Код2010;
	Иначе
		Элемент.КодДляОтчетности2010 = "-";
	КонецЕсли;
	Если ЗначениеЗаполнено(Код2011) Тогда
		Элемент.КодДляОтчетности2011 = Код2011;
	Иначе
		Элемент.КодДляОтчетности2011 = Код;
	КонецЕсли;
	
 	Элемент.НеПредоставляетсяНерезидентам = НеПредоставляетсяНерезидентам;
 	Элемент.ГруппаВычета = ГруппаВычета;

	Элемент.Записать();

КонецПроцедуры

// Добавляет запись в набор записей регистра "НДФЛВычетыПоДоходам"
//
Процедура ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, КодДохода, ГодовойВычет, НормативЗатрат) Экспорт

	НоваяЗапись = НаборЗаписей.Добавить();

	НоваяЗапись.Период         = ДатаСведений;
	НоваяЗапись.КодДохода      = КодДохода;
	НоваяЗапись.ГодовойВычет   = ГодовойВычет;
	НоваяЗапись.НормативЗатрат = НормативЗатрат;

КонецПроцедуры

// Добавляет запись в набор записей регистра "НДФЛРазмерВычетов"
//
Процедура ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, КодВычета, Размер, ОграничениеПоДоходам) Экспорт

	НоваяЗапись = НаборЗаписей.Добавить();

	НоваяЗапись.КодВычета            = КодВычета;
	НоваяЗапись.Период               = ДатаСведений;
	НоваяЗапись.Размер               = Размер;
	НоваяЗапись.ОграничениеПоДоходам = ОграничениеПоДоходам;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции обновлений, заполнений

// заполнение пустой ИБ

//Добавляет запись в набор записей регистра сведений ДопустимыеСочетанияМеждуГруппамиСтажа
//
Процедура ДопустимоеСочетаниеСтажа(НаборЗаписей, НомерПравила, КодУсловийТруда, ТипШаблонаКПС, КодПозицииСписка, КодОснованияИсчисляемогоСтажа, ФорматФОВ, КодОснованияВыслугиЛет)

	Запись = НаборЗаписей.Добавить();

	Запись.НомерПравила                  = СокрЛП(НомерПравила);
	Запись.КодУсловийТруда               = СокрЛП(КодУсловийТруда);
	Запись.ТипШаблонаКПС                 = СокрЛП(ТипШаблонаКПС);
	Запись.КодПозицииСписка              = СокрЛП(КодПозицииСписка);
	Запись.КодОснованияИсчисляемогоСтажа = СокрЛП(КодОснованияИсчисляемогоСтажа);
	Запись.ФорматФОВ                     = СокрЛП(ФорматФОВ);
	Запись.КодОснованияВыслугиЛет        = СокрЛП(КодОснованияВыслугиЛет);

КонецПроцедуры 

//Заполняет регистр сведений ДопустимыеСочетанияМеждуГруппамиСтажа
//
Процедура ЗаполнитьРегистрДопустимыхСочетанийМеждуГруппамиСтажа() Экспорт
	
	НаборЗаписей = РегистрыСведений.ДопустимыеСочетанияМеждуГруппамиСтажа.СоздатьНаборЗаписей();
	
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.10 ", "ЗП12А   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.10 ", "ЗП12А   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.11 ", "27-1    ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12М   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Л   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12К   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12И   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12З   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Ж   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Е   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Д   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Г   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12В   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Б   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12О   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12М   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Л   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12К   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12И   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12З   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Ж   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Е   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Д   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Г   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12В   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12Б   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.20 ", "ЗП12О   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "27-8    ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "27-7    ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "27-6    ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "27-9    ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "27-10   ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "28-ОС   ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "27-5    ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "27-4    ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "27-3    ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "27-2    ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "10.21 ", "28-ПЖ   ", "Любой    ", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "20.10 ", "ЗП12А   ", "=        ", "12100000-11465  ", "ВОДОЛАЗ", "_чм", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "20.11 ", "27-1    ", "=        ", "12100000-11465  ", "ВОДОЛАЗ", "_чм", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "30.10 ", "ЗП12А   ", "=        ", "1010100а        ", "       ", "___", "ЗП78ВП  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "30.10 ", "ЗП12А   ", "=        ", "1010100а        ", "       ", "ГМД", "ЗП78ВП  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "30.10 ", "ЗП12А   ", "=        ", "1010100а        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "30.10 ", "ЗП12А   ", "=        ", "1010100а        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "30.11 ", "27-1    ", "=        ", "1010100а        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "30.11 ", "27-1    ", "=        ", "1010100а        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "30.11 ", "27-1    ", "=        ", "1010100а        ", "       ", "_МД", "27-11ВП ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "30.11 ", "27-1    ", "=        ", "1010100а        ", "       ", "___", "27-11ВП ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12Б   ", "Первые Н ", "2010100а        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010600б        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010600а        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "=        ", "10104000        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010300б        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010300а        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010100д        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010100г        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "=        ", "1010100б        ", "       ", "ГМД", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12Б   ", "Первые Н ", "2010100а        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010600б        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010600а        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "=        ", "10104000        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010300б        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010300а        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010100д        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "Первые Н ", "1010100г        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.10 ", "ЗП12А   ", "=        ", "1010100б        ", "       ", "___", "ЗП78ГР  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010300а        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010100д        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010100г        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "=        ", "1010100б        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-2    ", "Первые Н ", "2010100а        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010600б        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010600а        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "=        ", "10104000        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010300б        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010300а        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010100д        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010100г        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "=        ", "1010100б        ", "       ", "___", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010300б        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "=        ", "10104000        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010600а        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-1    ", "Первые Н ", "1010600б        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "40.11 ", "27-2    ", "Первые Н ", "2010100а        ", "       ", "_МД", "27-11ГР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.10 ", "ЗП12А   ", "=        ", "1010100е        ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.10 ", "ЗП12А   ", "=        ", "1010100е        ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.10 ", "ЗП12А   ", "=        ", "1010100е        ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.10 ", "ЗП12А   ", "=        ", "1010100е        ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.10 ", "ЗП12А   ", "=        ", "1010100е        ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.10 ", "ЗП12А   ", "=        ", "1010100е        ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.10 ", "ЗП12А   ", "=        ", "1010100е        ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.10 ", "ЗП12А   ", "=        ", "1010100е        ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.11 ", "27-1    ", "=        ", "1010100е        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.11 ", "27-1    ", "=        ", "1010100е        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.11 ", "27-1    ", "=        ", "1010100е        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.11 ", "27-1    ", "=        ", "1010100е        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.11 ", "27-1    ", "=        ", "1010100е        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.11 ", "27-1    ", "=        ", "1010100е        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.11 ", "27-1    ", "=        ", "1010100е        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "50.11 ", "27-1    ", "=        ", "1010100е        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "60.10 ", "ЗП12А   ", "Первые Н ", "1200200а        ", "       ", "___", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "60.10 ", "ЗП12А   ", "Первые Н ", "1200200а        ", "       ", "ГМД", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "60.11 ", "27-1    ", "Первые Н ", "1200200а        ", "       ", "___", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "60.11 ", "27-1    ", "Первые Н ", "1200200а        ", "       ", "_МД", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.10 ", "ЗП12Б   ", "Первые Н ", "23003010        ", "       ", "ГМД", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.10 ", "ЗП12Б   ", "Первые Н ", "22417020        ", "       ", "ГМД", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.10 ", "ЗП12Б   ", "Первые Н ", "22417010        ", "       ", "ГМД", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.10 ", "ЗП12Б   ", "Первые Н ", "23003010        ", "       ", "___", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.10 ", "ЗП12Б   ", "Первые Н ", "22417020        ", "       ", "___", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.10 ", "ЗП12Б   ", "Первые Н ", "22417010        ", "       ", "___", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.11 ", "27-2    ", "Первые Н ", "22417010        ", "       ", "___", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.11 ", "27-2    ", "Первые Н ", "22417020        ", "       ", "___", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.11 ", "27-2    ", "Первые Н ", "23003010        ", "       ", "___", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.11 ", "27-2    ", "Первые Н ", "22417010        ", "       ", "_МД", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.11 ", "27-2    ", "Первые Н ", "22417020        ", "       ", "_МД", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "70.11 ", "27-2    ", "Первые Н ", "23003010        ", "       ", "_МД", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "80.10 ", "ЗП12И   ", "Не указан", "                ", "СЕЗОН  ", "___", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "80.11 ", "27-9    ", "Не указан", "                ", "СЕЗОН  ", "___", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "90.10 ", "ЗП12И   ", "Не указан", "                ", "       ", "ГМД", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "90.11 ", "27-9    ", "Не указан", "                ", "       ", "_МД", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "100.10", "ЗП12И   ", "Не указан", "                ", "       ", "___", "ЗП78ФЛ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "100.11", "27-9    ", "Не указан", "                ", "       ", "___", "27-12   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "110.10", "ЗП12А   ", "=        ", "12003000-17541  ", "       ", "___", "УВД     ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "110.10", "ЗП12А   ", "=        ", "12003000-17541  ", "       ", "ГМД", "УВД     ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "110.11", "27-1    ", "=        ", "12003000-17541  ", "       ", "___", "27-14   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "110.11", "27-1    ", "=        ", "12003000-17541  ", "       ", "_МД", "27-14   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000в        ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000а        ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "23200000-1754б  ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-14467  ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754г  ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754в  ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754б  ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000ж        ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000е        ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000д        ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000г        ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000в        ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000а        ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "23200000-1754б  ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-14467  ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754г  ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754в  ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754б  ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000ж        ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-14467  ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754г  ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754в  ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754б  ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000ж        ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000е        ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000д        ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000г        ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000в        ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000а        ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "23200000-1754б  ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-14467  ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754г  ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754в  ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754б  ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000ж        ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000е        ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000д        ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000г        ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754в  ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754б  ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000ж        ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000е        ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000д        ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000г        ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000в        ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000а        ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "23200000-1754б  ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-14467  ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754г  ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754в  ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754б  ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000ж        ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000е        ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000д        ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000г        ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000в        ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000а        ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000е        ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000д        ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000г        ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000в        ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000а        ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "23200000-1754б  ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-14467  ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754г  ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754в  ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754б  ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000ж        ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000е        ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000д        ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000г        ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000в        ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000а        ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "23200000-1754б  ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-14467  ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754г  ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "23200000-1754б  ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-14467  ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754г  ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754в  ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "22600000-1754б  ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000ж        ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000е        ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000д        ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000г        ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000в        ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "2260000а        ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.10", "ЗП12Б   ", "=        ", "23200000-1754б  ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000а        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000в        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000г        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000д        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000е        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000ж        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-14467  ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754б  ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754в  ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754г  ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "23200000-1754б  ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000а        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000в        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000г        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000д        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000е        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000ж        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-14467  ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754б  ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754в  ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754г  ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "23200000-1754б  ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000а        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000в        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000г        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000д        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000е        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000ж        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-14467  ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754б  ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754в  ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754г  ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "23200000-1754б  ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000а        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000в        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000г        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000д        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000е        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000ж        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-14467  ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754б  ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754в  ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754г  ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "23200000-1754б  ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000а        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000в        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000г        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000д        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000е        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000ж        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-14467  ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754б  ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754в  ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754г  ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "23200000-1754б  ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000а        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000в        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000г        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000д        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000е        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000ж        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-14467  ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754б  ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754в  ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754г  ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "23200000-1754б  ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000а        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000в        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000г        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000д        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000е        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000ж        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-14467  ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754б  ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754в  ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754г  ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "23200000-1754б  ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000а        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000в        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000г        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000д        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000е        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "2260000ж        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-14467  ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754б  ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754в  ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "22600000-1754г  ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "120.11", "27-2    ", "=        ", "23200000-1754б  ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "130.10", "ЗП12А   ", "Первые Н ", "12300000        ", "ЛЕПРО  ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "130.10", "ЗП12А   ", "Первые Н ", "12300000        ", "ЛЕПРО  ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "130.10", "ЗП12А   ", "Первые Н ", "12300000        ", "ЛЕПРО  ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "130.10", "ЗП12А   ", "Первые Н ", "12300000        ", "ЛЕПРО  ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "130.10", "ЗП12А   ", "Первые Н ", "12300000        ", "ЛЕПРО  ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "130.10", "ЗП12А   ", "Первые Н ", "12300000        ", "ЛЕПРО  ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "130.10", "ЗП12А   ", "Первые Н ", "12300000        ", "ЛЕПРО  ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "130.10", "ЗП12А   ", "Первые Н ", "12300000        ", "ЛЕПРО  ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "140.10", "        ", "Не указан", "                ", "ЛЕПРО  ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "140.10", "        ", "Не указан", "                ", "ЛЕПРО  ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "140.10", "        ", "Не указан", "                ", "ЛЕПРО  ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "140.10", "        ", "Не указан", "                ", "ЛЕПРО  ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "150.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "160.10", "        ", "Не указан", "                ", "ЛЕПРО  ", "___", "ЗП80ПД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "160.10", "        ", "Не указан", "                ", "ЛЕПРО  ", "___", "ЗП80РК  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "170.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "170.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "170.10", "ЗП12Б   ", "=        ", "22600000-1754а  ", "ЛЕПРО  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "170.10", "ЗП12Б   ", "=        ", "2260000б        ", "ЛЕПРО  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "180.10", "ЗП12Е   ", "Не указан", "                ", "СЕЗОН  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "180.11", "27-6    ", "Не указан", "                ", "СЕЗОН  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "190.10", "ЗП12Е   ", "Не указан", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "190.10", "ЗП12Е   ", "Не указан", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "190.11", "27-6    ", "Не указан", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "190.11", "27-6    ", "Не указан", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "200.10", "ЗП12Ж   ", "Любой    ", "                ", "СЕЗОН  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "200.11", "27-7    ", "Не указан", "                ", "СЕЗОН  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "200.20", "ЗП12И   ", "Не указан", "                ", "СЕЗОН  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "200.21", "27-9    ", "Не указан", "                ", "СЕЗОН  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "210.10", "ЗП12Ж   ", "Любой    ", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "210.10", "ЗП12Ж   ", "Любой    ", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "210.11", "27-7    ", "Не указан", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "210.11", "27-7    ", "Не указан", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "210.20", "ЗП12И   ", "Не указан", "                ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "210.20", "ЗП12И   ", "Не указан", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "210.21", "27-9    ", "Не указан", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "210.21", "27-9    ", "Не указан", "                ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "220.10", "ЗП12Л   ", "Не указан", "                ", "       ", "___", "ЗП78СС  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "220.10", "ЗП12Л   ", "Не указан", "                ", "       ", "ГМД", "ЗП78СС  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.10", "ЗП12М   ", "Любой    ", "                ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.10", "ЗП12М   ", "Любой    ", "                ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.10", "ЗП12М   ", "Любой    ", "                ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.10", "ЗП12М   ", "Любой    ", "                ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.10", "ЗП12М   ", "Любой    ", "                ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.10", "ЗП12М   ", "Любой    ", "                ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.10", "ЗП12М   ", "Любой    ", "                ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.10", "ЗП12М   ", "Любой    ", "                ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.11", "28-ОС   ", "Не указан", "                ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.11", "28-ОС   ", "Не указан", "                ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.11", "28-ОС   ", "Не указан", "                ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.11", "28-ОС   ", "Не указан", "                ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.11", "28-ОС   ", "Не указан", "                ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.11", "28-ОС   ", "Не указан", "                ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.11", "28-ОС   ", "Не указан", "                ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "230.11", "28-ОС   ", "Не указан", "                ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "240.10", "ЗП12М   ", "Любой    ", "                ", "       ", "_МД", "ЗП80РК  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "240.10", "ЗП12М   ", "Любой    ", "                ", "       ", "___", "ЗП80РК  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "240.10", "ЗП12М   ", "Любой    ", "                ", "       ", "_МД", "ЗП80ПД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "240.10", "ЗП12М   ", "Любой    ", "                ", "       ", "___", "ЗП80ПД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "240.11", "28-ОС   ", "Не указан", "                ", "       ", "___", "28-ПД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "240.11", "28-ОС   ", "Не указан", "                ", "       ", "_МД", "28-ПД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "240.11", "28-ОС   ", "Не указан", "                ", "       ", "___", "28-ПДРК ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "240.11", "28-ОС   ", "Не указан", "                ", "       ", "_МД", "28-ПДРК ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "250.10", "        ", "Не указан", "                ", "УИК104 ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.10", "ЗП12А   ", "Первые Н ", "12300000        ", "       ", "___", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.10", "ЗП12А   ", "Первые Н ", "12300000        ", "       ", "_МД", "ЗП81ГД  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.10", "ЗП12А   ", "Первые Н ", "12300000        ", "       ", "___", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.10", "ЗП12А   ", "Первые Н ", "12300000        ", "       ", "_МД", "ЗП81СМ  ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.10", "ЗП12А   ", "Первые Н ", "12300000        ", "       ", "___", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.10", "ЗП12А   ", "Первые Н ", "12300000        ", "       ", "_МД", "ХИРУРСМ ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.10", "ЗП12А   ", "Первые Н ", "12300000        ", "       ", "___", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.10", "ЗП12А   ", "Первые Н ", "12300000        ", "       ", "_МД", "ХИРУРГД ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.11", "27-1    ", "Первые Н ", "12300000        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.11", "27-1    ", "Первые Н ", "12300000        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.11", "27-1    ", "Первые Н ", "12300000        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.11", "27-1    ", "Первые Н ", "12300000        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.11", "27-1    ", "Первые Н ", "12300000        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.11", "27-1    ", "Первые Н ", "12300000        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.11", "27-1    ", "Первые Н ", "12300000        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "260.11", "27-1    ", "Первые Н ", "12300000        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "270.10", "ЗП12Б   ", "Первые Н ", "2200            ", "СЕЗОН  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "270.11", "27-2    ", "Первые Н ", "2200            ", "СЕЗОН  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "280.10", "ЗП12Б   ", "Первые Н ", "2200            ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "280.10", "ЗП12Б   ", "Первые Н ", "2200            ", "       ", "ГМД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "280.11", "27-2    ", "Первые Н ", "2200            ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "280.11", "27-2    ", "Первые Н ", "2200            ", "       ", "_МД", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "500.10", "        ", "Не указан", "                ", "СЕЗОН  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "500.20", "        ", "Не указан", "                ", "ЛЕПРО  ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "510.10", "СЕВ26   ", "Не указан", "                ", "       ", "___", "        ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "510.11", "28-СЕВ  ", "Не указан", "                ", "       ", "___", "        ");

	
	НаборЗаписей.Записать();
	
КонецПроцедуры 

// Выполняет заполнение справочника "ДоходыНДФЛ" 
//
Процедура ЗаполнитьКодыДоходовНДФЛ() Экспорт
	
	Ставка09 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09;
	Ставка13 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
	Ставка35 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35;
	ДоходыНДФЛ = Справочники.ДоходыНДФЛ;
	
	// ОБНОВЛЕНИЕ СПРАВОЧНИКА ДоходыНДФЛ
	
	// Заполнение реквизитов предопределенных элементов
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1010, 			Ставка09, "1010");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1110, 			Ставка09, "1110");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1120, 			Ставка09, "1120");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1200, 			Ставка13, "1200");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1211, 			Ставка13, "1211");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1220, 			Ставка13, "1220");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1240, 			Ставка13, "1240");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1300, 			Ставка13, "1300");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1530, 			Ставка13, "1530");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1531, 			Ставка13, "1531");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1532, 			Ставка13, "1532");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1533, 			Ставка13, "1533");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1533_2010,		Ставка13, "1533");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1535, 			Ставка13, "1535");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1536, 			Ставка13, "1536");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1537, 			Ставка13, "1537");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1538, 			Ставка13, "1538");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1539, 			Ставка13, "1539");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1540, 			Ставка13, "1540");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1541, 			Ставка13, "1541");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1543, 			Ставка13, "1543");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.КодДоходаПоУмолчанию, Ставка13, "2000", , , Истина);
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2001, 			Ставка13, "2001");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2010, 			Ставка13, "2010");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2012, 			Ставка13, "2012");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2201, 			Ставка13, "2201");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2202, 			Ставка13, "2202");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2203, 			Ставка13, "2203");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2204, 			Ставка13, "2204");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2205, 			Ставка13, "2205");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2206, 			Ставка13, "2206");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2207, 			Ставка13, "2207");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2208, 			Ставка13, "2208");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2209, 			Ставка13, "2209");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2210, 			Ставка13, "2210", Истина);
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2300, 			Ставка13, "2300");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2400, 			Ставка13, "2400");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2530, 			Ставка13, "2530");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2610ПоСтавке35, Ставка35, "2610");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2610ПоСтавке13, Ставка13, "2620", , Истина);
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2640, 			Ставка13, "2640");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2710, 			Ставка13, "2710");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2720, 			Ставка13, "2720");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2730, 			Ставка13, "2730");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2740, 			Ставка35, "2740");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2750, 			Ставка13, "2750");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2760, 			Ставка13, "2760");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2761, 			Ставка13, "2761");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.МатпомощьПриРожденииРебенка,Ставка13, "2762");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2770, 			Ставка13, "2770");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2790, 			Ставка13, "2790");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2791, 			Ставка13, "2791");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2800, 			Ставка13, "2800");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2900, 			Ставка13, "2900");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код3010, 			Ставка13, "3010");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код3020ПоСтавке35, Ставка35, "3020");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код4800, 			Ставка13, "4800");
	
	// Добавление непредопределенных кодов доходов 
	
	
	// с 1.01.2005 не изменены
	ДобавитьКодДоходаНДФЛ("1400", "Доходы от сдачи в аренду и иного использования имущества (кроме доходов от сдачи в аренду транспортных средств, средств связи, компьютерных сетей)", Ставка13);
	ДобавитьКодДоходаНДФЛ("2510", "Оплата за налогоплательщика товаров, работ, услуг или имущественных прав, в том числе коммунальных услуг, питания, отдыха, обучения в его интересах", Ставка13);
	ДобавитьКодДоходаНДФЛ("2520", "Стоимость товаров, работ, услуг, полученных на безвозмездной основе", Ставка13);
	ДобавитьКодДоходаНДФЛ("2630", "Материальная выгода, полученная от приобретения товаров, работ, услуг у физ. лиц, организаций, явл. взаимозависимыми по отношению к налогоплательщику", Ставка13);
	ДобавитьКодДоходаНДФЛ("2780", "Возмещение (оплата) стоимости приобретенных налогоплательщиком медикаментов в случаях, не подпадающих под действие п. 28 ст. 217 НК РФ", Ставка13);
	
	// введены с 1.01.2005
	ДобавитьКодДоходаНДФЛ("1212", "Доходы в виде денежных (выкупных) сумм, выплачиваемых по договорам страхования при досрочном расторжении договоров страхования", Ставка13);
	
	// введены с 1.01.2006
	ДобавитьКодДоходаНДФЛ("1011", "Проценты, включая дисконт, полученный по долговому обязательству любого вида (за исключением доходов с кодами 1110, 2800 и 3020).", Ставка13);
	
	// введены с 1.01.2008
	ДобавитьКодДоходаНДФЛ("1201", "Доходы, полученные в виде страховых выплат по договорам страхования в виде оплаты стоимости санаторно-курортных путевок", Ставка13); 
	ДобавитьКодДоходаНДФЛ("1202", "Доходы, полученные в виде страховых выплат по договорам добровольного страхования жизни (за исключением добровольного пенсионного страхования)", Ставка13); 
	ДобавитьКодДоходаНДФЛ("1203", "Доходы, полученные в виде страховых выплат по договорам добровольного имущественного страхования (включая страхование гражданской ответственности)", Ставка13); 
	ДобавитьКодДоходаНДФЛ("1213", "Доходы в виде денежных (выкупных) сумм при расторжении договора за вычетом сумм страховых взносов, уплаченных по договору добр. пенс. страхования", Ставка13); 
	ДобавитьКодДоходаНДФЛ("1301", "Доходы, полученные от отчуждения авторских или иных смежных прав", Ставка13); 
	
	// введены с 1.01.2010
	ДобавитьКодДоходаНДФЛ("2641", "Материальная выгода, полученная от приобретения финансовых инструментов срочных сделок", Ставка13); 
	
	// введены с 1.01.2011
	ДобавитьКодДоходаНДФЛ("3022", "Доходы в виде платы за использование денежных средств членов кр.потреб.кооператива или %% за исп-е с-х кр.потреб.кооперативом займов", Ставка35); 
	
	// ОБНОВЛЕНИЕ РАЗМЕРОВ СКИДОК К ДОХОДАМ
	
	НаборЗаписей = РегистрыСведений.НДФЛВычетыПоДоходам.СоздатьНаборЗаписей();

	ДатаСведений = '20010101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2720, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2730, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2740, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2760, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2770, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2201, 0,	 20);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2202, 0,	 30);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2203, 0,	 40);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2204, 0,	 30);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2205, 0,	 40);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2206, 0,	 25);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2207, 0,	 20);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2208, 0,	 20);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2209, 0,	 30);
	
	ДатаСведений = '20050101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2761, 2000, 0);
	
	ДатаСведений = '20060101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2720, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2730, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2740, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2760, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2761, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2770, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2790, 10000, 0);
	
	ДатаСведений = '20080101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.МатпомощьПриРожденииРебенка, 0, 50000);
	
	ДатаСведений = '20090101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2791, 0, 4300);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код1211, 12000, 0);
	
	// Запишем набор записей в режиме добавления
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры 

Процедура ЗаполнитьСправочникВычетовНДФЛ() Экспорт

	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;
	
	ДобавитьКодВычетаНДФЛ("620", "620", "620", "620", "Иные суммы, уменьшающие налоговую базу в соответствии с положениями главы 23 Налогового кодекса Российской Федерации", "Иные суммы, уменьшающие налоговую базу", "Иные суммы, уменьшающие налоговую базу"
	, "620");

	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код101, "108", "101", "101", "1000 руб. на первого, второго ребенка до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта до 24 лет", "600 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет родителям, супругам родителей", "600 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет родителям, супругам родителей"
	, "108", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "1000 руб. на каждого ребенка до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта до 24 лет");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код106, "109", "106", "106", "3000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения, студента до 24 лет, явл. инвалидом I или II группы", "1200 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет, являющегося инвалидом I или II группы, родителям, супругам родителей", "1200 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет, являющегося инвалидом I или II группы, родителям, супругам родителей"
	, "109", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "2000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения, студента до 24 лет, явл. инвалидом I или II группы");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код102, "110", "102", "102", "2000 руб. на первого, второго ребенка единственному родителю (приемному родителю), опекуну, попечителю (начиная с доходов 2009 года)", "1200 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям", "1200 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям"
	, "110", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "2000 руб. на каждого ребенка единственному родителю (приемному родителю), опекуну, попечителю (начиная с доходов 2009 года)");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код103, "103", "103", "103", "(не используется с 2012 года) 400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1-2 п. 1 ст. 218 Налогового кодекса РФ", "400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1 - 2 п. 1 ст. 218 Налогового кодекса Российской Федерации", "400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1 - 2 п. 1 ст. 218 Налогового кодекса Российской Федерации"
	, "103", , , Перечисления.ГруппыВычетовПоНДФЛ.Стандартные, ,"400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1-2 п. 1 ст. 218 Налогового кодекса Российской Федерации");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код104, "104", "104", "104", "500 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 2 п. 1 ст. 218 Налогового кодекса Российской Федерации", "500 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 2 п. 1 ст. 218 Налогового кодекса Российской Федерации", "500 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 2 п. 1 ст. 218 Налогового кодекса Российской Федерации"
	, "104", , , Перечисления.ГруппыВычетовПоНДФЛ.Стандартные);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код105, "105", "105", "105", "3000 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 1 п. 1 ст. 218 Налогового кодекса Российской Федерации", "3000 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 1 п. 1 ст. 218 Налогового кодекса Российской Федерации", "3000 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 1 п. 1 ст. 218 Налогового кодекса Российской Федерации"
	, "105", , , Перечисления.ГруппыВычетовПоНДФЛ.Стандартные);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код111, "111",      ,      , "2000 руб. на первого, второго ребенка до 18 лет, на учащегося очной формы обучения до 24 лет при отказе второго родителя от вычета", , 
	, "111", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "2000 руб. на каждого ребенка до 18 лет, на учащегося очной формы обучения до 24 лет при отказе второго родителя от вычета"); // с 2009 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код107, "112", "107", "107", "6000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, единственному родителю и др.", "2400 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента в возрасте до 24 лет, являющегося инвалидом I или II группы, вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям", "2400 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента в возрасте до 24 лет, являющегося инвалидом I или II группы, вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям"
	, "112", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "4000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, единственному родителю и др.");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код113, "113",      ,      , "6000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, при отказе второго родителя от вычета", , 
	, "113", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "4000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, при отказе второго родителя от вычета"); // с 2009 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код305, "305", "305", , , "Сумма фактически произведенных и документально подтвержденных расходов, связанных с заключением, исполнением и с прекращением срочных сделок", 
	, "207"); 
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код306, "306", "306", , , "Сумма фактически произведенных и документально подтвержденных расходов по приобретению и реализации (погашению) инвестиционных паев паевых фондов",
	, "306"); 
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код307, "307", "307", "307", , "Совокупная сумма фактически произведенных налогоплательщиком и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, включая суммы, с которых был исчислен и уплачен налог при приобретении ценных бумаг в собственность (в том числе получении на безвозмездной основе или с частичной оплатой)", "Совокупная сумма фактически произведенных налогоплательщиком и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, включая суммы, с которых был исчислен и уплачен налог при приобретении ценных бумаг в собственность (в том числе получении на безвозмездной основе или с частичной оплатой)"
	, "201");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код308, "308", "308", , , "Сумма фактически произведенных и документально подтвержденных расходов на приобретение, реализацию ценных бумаг, не обращающихся на орг. рынке", 
	, "202"); // с 2008 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код309, "309", "309", , , "Сумма фактически произведенных и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, не обращающихся", 
	, "203"); // с 2008 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код204, , , , , , , "204"); // с 2010 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код205, , , , , , , "205"); // с 2010 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код206, , , , , , , "206"); // с 2010 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код208, , , , , , , "208"); // с 2010 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код209, , , , , , , "209"); // с 2010 г.
	
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код310, "310", "310", , "(не используется с 2010 года) Убыток, полученный в налоговом периоде по операциям купли-продажи ценных бумаг, обращающихся на орг. рынке ценных бумаг", "Убыток, полученный в налоговом периоде по операциям купли-продажи ценных бумаг, обращающихся на организованном рынке ценных бумаг", , , , Истина);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код311, "311", "313", "311", "Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории РФ жилого дома, квартиры, комнаты или доли(-ей) в них", "Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории Российской Федерации жилого дома, квартиры, комнаты или доли (долей) в них (кроме сумм, направленных на погашение процентов по целевым займам (кредитам) и фактически израсходованных на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры, комнаты или доли (долей) в них), в размере фактически произведенных и документально подтвержденных расходов в пределах 2 000 000 руб.", "Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них (кроме сумм, направленных на погашение процентов по целевым займам (кредитам) и фактически израсходованных на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них), в размере фактически произведенных и документально подтвержденных расходов в пределах 1 000 000 руб."
	, "311", , , Перечисления.ГруппыВычетовПоНДФЛ.Имущественные);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код312, "312", "312", "312", "Сумма, направленная на погашение процентов по целевым займам (кредитам) на новое строительство или приобретение на территории РФ жилого дома, квартиры", "Сумма, направленная на погашение процентов по целевым займам (кредитам), полученным от кредитных и иных организаций Российской Федерации и фактически израсходованная налогоплательщиком на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них", "Сумма, направленная на погашение процентов по целевым займам (кредитам), полученным от кредитных и иных организаций Российской Федерации и фактически израсходованная налогоплательщиком на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них"
	, "312", , , Перечисления.ГруппыВычетовПоНДФЛ.Имущественные);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код318, , , , , , , "318", , , Перечисления.ГруппыВычетовПоНДФЛ.Имущественные); // с 2010 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код319, "319", , , , , , "319", , , Перечисления.ГруппыВычетовПоНДФЛ.Социальные); // с 2009 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код403, "403", "403", "403", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с выполнением работ (оказанием услуг) по договорам ГПХ", "Сумма фактически произведенных и документально подтвержденных расходов, непосредственно связанных с выполнением работ (оказанием услуг) по договорам гражданско-правового характера", "Сумма фактически произведенных и документально подтвержденных расходов, непосредственно связанных с выполнением работ (оказанием услуг) по договорам гражданско-правового характера"
	, "403", Истина);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код404, "404", "404", "404", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений или вознаграждений за создание, издание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений или вознаграждений за создание, издание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов"
	, "404", Истина);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код405, "405", "405", "405", "Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений", "Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений и вознаграждений за создание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов (в процентах к сумме начисленного дохода)", "Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений и вознаграждений за создание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов (в процентах к сумме начисленного дохода)"
	, "405", Истина);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код501, "501", "501", "501", "Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей", "Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей", "Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей"
	, "501");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код502, "502", "502", "502", "Вычет из стоимости призов в денежной и натуральной форме на конкурсах и соревнованиях, проводимых в соотв. с решениями Прав-ва РФ и др. органов власти", "Вычет из стоимости призов в денежной и натуральной формах, полученных на конкурсах и соревнованиях, проводимых в соответствии с решениями Правительства Российской Федерации, Законодательных (представительных) органов государственной власти или представительных органов местного самоуправления", "Вычет из стоимости призов в денежной и натуральной формах, полученных на конкурсах и соревнованиях, проводимых в соответствии с решениями Правительства Российской Федерации, Законодательных (представительных) органов государственной власти или представительных органов местного самоуправления"
	, "502");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код503, "503", "503", "503", "Вычет из суммы материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам-пенсионерам", "Вычет из суммы материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам, уволившимся в связи с выходом на пенсию по инвалидности или по возрасту", "Вычет из суммы материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам, уволившимся в связи с выходом на пенсию по инвалидности или по возрасту"
	, "503");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код504, "504", "504", "504", "Вычет из суммы возмещения (оплаты) работодателями своим работникам, бывшим своим работникам (пенсионерам), а также инвалидам стоимости медикаментов", "Вычет из суммы возмещения (оплаты) работодателями своим работникам, их супругам, родителям и детям, бывшим своим работникам (пенсионерам по возрасту), а также инвалидам стоимости приобретенных ими (для них) медикаментов, назначенных им лечащим врачом", "Вычет из суммы возмещения (оплаты) работодателями своим работникам, их супругам, родителям и детям, бывшим своим работникам (пенсионерам по возрасту), а также инвалидам стоимости приобретенных ими (для них) медикаментов, назначенных им лечащим врачом"
	, "504");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код505, "505", "505", "505", "Вычет из стоимости выигрышей и призов, полученных на конкурсах, играх и других мероприятиях в целях рекламы товаров (работ, услуг)", "Вычет из стоимости выигрышей и призов, полученных на конкурсах, играх и других мероприятиях в целях рекламы товаров (работ, услуг)", "Вычет из стоимости выигрышей и призов, полученных на конкурсах, играх и других мероприятиях в целях рекламы товаров (работ, услуг)"
	, "505");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код506, "506", "506", "506", "Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов", "Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов", "Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов"
	, "506");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код507, "507", "507", "507", "Вычет из суммы помощи (в денежной и натуральной формах), а также стоимости подарков, полученных ветеранами, инвалидами ВОВ и приравненных к ним", "Вычет из суммы помощи (в денежной и натуральной формах), а также стоимости подарков, полученных ветеранами Великой Отечественной войны, инвалидами Великой Отечественной войны, вдовами военнослужащих, погибших в период войны с Финляндией, Великой Отечественной войны, войны с Японией, вдовами умерших инвалидов Великой Отечественной войны и бывшими узниками нацистских концлагерей, тюрем и гетто, а также бывшими несовершеннолетними узниками концлагерей, гетто и других мест принудительного содержания, созданных фашистами и их союзниками в период Второй мировой войны", "Вычет из суммы помощи (в денежной и натуральной формах), а также стоимости подарков, полученных ветеранами Великой Отечественной войны, инвалидами Великой Отечественной войны, вдовами военнослужащих, погибших в период войны с Финляндией, Великой Отечественной войны, войны с Японией, вдовами умерших инвалидов Великой Отечественной войны и бывшими узниками нацистских концлагерей, тюрем и гетто, а также бывшими несовершеннолетними узниками концлагерей, гетто и других мест принудительного содержания, созданных фашистами и их союзниками в период Второй мировой войны"
	, "507");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код509, "509", , , , , , "509"); // с 2009 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.МатпомощьПриРожденииРебенка, "508", "508", "-", "Вычет из суммы материальной помощи, оказываемой работодателями своим работникам при рождении (усыновлении, удочерении) ребенка", "Вычет из суммы единовременной материальной помощи, оказываемой работодателями работникам (родителям, усыновителям, опекунам) при рождении (усыновлении, удочерении) ребенка", ""
	, "508");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код601, "601", "601", "601", "Сумма, уменьшающая налоговую базу по доходам в виде дивидендов", "Сумма, уменьшающая налоговую базу по доходам, полученным в виде дивидендов", "Сумма, уменьшающая налоговую базу по доходам, полученным в виде дивидендов"
	, "601");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код607, "607", , , , , , "607"); // с 2009 г.
	
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код101, "114/108", "На первого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет", "108", "114", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // предоставлялся до 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код115, , , "108", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код116, , , "108", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код106, "117/109", "На ребенка-инвалида до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента до 24 лет, явл. инвалидом I или II группы", "109", "117", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // предоставлялся до 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код102, "118/110", "В двойном размере на первого ребенка до 18 лет, на учащегося очной формы обучения до 24 лет единственному родителю, опекуну, попечителю", "110", "118", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // предоставлялся до 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код119, , , "110", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код120, , , "110", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код107, "121/112", "В двойном размере на ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, единственному родителю, опекуну и др.", "112", "121", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // предоставлялся до 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код111, "122/111", "В двойном размере на первого ребенка до 18 лет, на учащегося очной формы обучения до 24 лет при отказе второго родителя от вычета", "111", "122", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2009 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код123, , , "111", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код124, , , "111", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код113, "125/113", "В двойном размере на ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, при отказе второго родителя от вычета", "113", "125", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2009 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код306, , , "306",   "-", Истина); // с 2011 г. не используется
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код210); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код211); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код212); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код213); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код214); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код215); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код216); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код217); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код320, , , , , , Перечисления.ГруппыВычетовПоНДФЛ.Социальные); // с 2013 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код218); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код219); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код220); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код221); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код222); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код223); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код224); // с 2014 г.
	
КонецПроцедуры

// Выполняет заполнение реквизитов справочника "ВычетыНДФЛ" 
//
Процедура ЗаполнитьКодыВычетовНДФЛ() Экспорт
	
	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;
	
	ЗаполнитьСправочникВычетовНДФЛ();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВычетыНДФЛ.Ссылка
	                      |ИЗ
	                      |	Справочник.ВычетыНДФЛ КАК ВычетыНДФЛ
	                      |
	                      |ГДЕ
	                      |	(ВычетыНДФЛ.Предопределенный)");
	
	СписокПредопределенныхКодовВычетов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	НаборЗаписей = РегистрыСведений.НДФЛРазмерВычетов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.КодВычета.Использование = Истина;

	НаборЗаписей.Отбор.Период.Значение = '20010101';
	
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	НаборЗаписей.Отбор.Период.Значение = '20050101';
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	НаборЗаписей.Отбор.Период.Значение = '20080101';
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	НаборЗаписей.Отбор.Период.Значение = '20090101';
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	НаборЗаписей.Отбор.Период.Значение = '20110101';
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	НаборЗаписей.Отбор.Период.Значение = '20120101';
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	// Отменим фильтры	
	НаборЗаписей.Отбор.Период.Использование = Ложь;
	НаборЗаписей.Отбор.КодВычета.Использование = Ложь;
	НаборЗаписей.Прочитать();
	
	ДатаСведений = Дата("20010101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код101, 300, 20000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код102, 600, 20000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код103, 400, 20000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код104, 500, 0);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код105, 3000, 0);
	
	ДатаСведений = Дата("20050101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код101,  600, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код102, 1200, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код106, 1200, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код107, 2400, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код311, 1000000, 0);
	
	ДатаСведений = Дата("20080101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код311, 2000000, 0);
	
	ДатаСведений = Дата("20090101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код103,  400, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код101, 1000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код102, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код106, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код107, 4000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код111, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код113, 4000, 280000);
	
	ДатаСведений = Дата("20110101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код115, 1000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код119, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код123, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код106, 3000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код107, 6000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код113, 6000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код116, 3000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код120, 6000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код124, 6000, 280000);
	
	ДатаСведений = Дата("20120101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код103,	   0, 0);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код101, 1400, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код102, 2800, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код111, 2800, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код115, 1400, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код119, 2800, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код123, 2800, 280000);
	
	// Запишем набор записей в режиме добавления
	НаборЗаписей.Записать();

КонецПроцедуры  

// Выполняет заполнение регистра сведений "СведенияОСтавкахЕСНиПФР"
//
Процедура ЗаполнитьСведенияОСтавкахЕСНиПФР() Экспорт

	//заполним ставки
	НаборЗаписей = РегистрыСведений.СведенияОСтавкахЕСНиПФР.СоздатьНаборЗаписей();
	НаборЗаписей.ЗаполнитьСведенияОСтавкахЕСНиПФР();
	
КонецПроцедуры

// Выполняет заполнение регистра сведений "МинимальнаяОплатаТрудаРФ"
//
Процедура ЗаполнитьСведенияОМинимальномРазмереОплатыТруда() Экспорт

	НаборЗаписей = РегистрыСведений.МинимальнаяОплатаТрудаРФ.СоздатьНаборЗаписей();

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2000, 1, 1);
	НоваяЗапись.Размер = 132;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2001, 1, 1);
	НоваяЗапись.Размер = 200;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2001, 7, 1);
	НоваяЗапись.Размер = 300;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2002, 5, 1);
	НоваяЗапись.Размер = 450;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2003, 10, 1);
	НоваяЗапись.Размер = 600;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2005, 1, 1);
	НоваяЗапись.Размер = 720;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2005, 9, 1);
	НоваяЗапись.Размер = 800;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2006, 5, 1);
	НоваяЗапись.Размер = 1100;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2007, 9, 1);
	НоваяЗапись.Размер = 2300;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 4330;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2011, 6, 1);
	НоваяЗапись.Размер = 4611;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2013, 1, 1);
	НоваяЗапись.Размер = 5205;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2014, 1, 1);
	НоваяЗапись.Размер = 5554;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2015, 1, 1);
	НоваяЗапись.Размер = 5965;
	
	НаборЗаписей.Записать();

КонецПроцедуры

// Выполняет заполнение регистра сведений "СтавкаРефинансированияЦБ"
//
Процедура ЗаполнитьСведенияОСтавкеРефинансированияЦБ() Экспорт

 	СтавкаЦБ = РегистрыСведений.СтавкаРефинансированияЦБ.СоздатьНаборЗаписей();

	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20001104';
	СтрокаНабора.Размер = 25;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20020409';
	СтрокаНабора.Размер = 23;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20020807';
	СтрокаНабора.Размер = 21;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20030217';
	СтрокаНабора.Размер = 18;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20030621';
	СтрокаНабора.Размер = 16;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20040115';
	СтрокаНабора.Размер = 14;
 	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20040615';
	СтрокаНабора.Размер = 13;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20051226';
	СтрокаНабора.Размер = 12;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20060626';
	СтрокаНабора.Размер = 11.5;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20061023';
	СтрокаНабора.Размер = 11;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20070129';
	СтрокаНабора.Размер = 10.5;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20070619';
	СтрокаНабора.Размер = 10;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20080204';
	СтрокаНабора.Размер = 10.25;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20080429';
	СтрокаНабора.Размер = 10.5;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20080610';
	СтрокаНабора.Размер = 10.75;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20080714';
	СтрокаНабора.Размер = 11;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20081112';
	СтрокаНабора.Размер = 12;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20081201';
	СтрокаНабора.Размер = 13;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20090424';
	СтрокаНабора.Размер = 12.5;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20090514';
	СтрокаНабора.Размер = 12;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20090605';
	СтрокаНабора.Размер = 11.5;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20090713';
	СтрокаНабора.Размер = 11;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20090810';
	СтрокаНабора.Размер = 10.75;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20090915';
	СтрокаНабора.Размер = 10.5;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20090930';
	СтрокаНабора.Размер = 10;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20091030';
	СтрокаНабора.Размер = 9.5;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20091125';
	СтрокаНабора.Размер = 9;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20091228';
	СтрокаНабора.Размер = 8.75;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20100224';
	СтрокаНабора.Размер = 8.5;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20100329';
	СтрокаНабора.Размер = 8.25;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20100430';
	СтрокаНабора.Размер = 8;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20100601';
	СтрокаНабора.Размер = 7.75;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20110228';
	СтрокаНабора.Размер = 8;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20110503';
	СтрокаНабора.Размер = 8.25;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20111226';
	СтрокаНабора.Размер = 8;
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20120914';
	СтрокаНабора.Размер = 8.25;
	СтавкаЦБ.Записать();

КонецПроцедуры

Процедура ЗаполнитьСведенияОРазмерахГосударственныхПособий() Экспорт

	НаборЗаписей = РегистрыСведений.ГосударственныеПособия.СоздатьНаборЗаписей();

	/// На рождение ребёнка
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 4500;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриУсыновленииРебенка;
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 4500;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2005, 1, 1);
	НоваяЗапись.Размер = 6000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриУсыновленииРебенка;
	НоваяЗапись.Период = Дата(2005, 1, 1);
	НоваяЗапись.Размер = 6000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2006, 1, 1);
	НоваяЗапись.Размер = 8000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриУсыновленииРебенка;  // с 2007 года работодатели не выплачивают
	НоваяЗапись.Период = Дата(2006, 1, 1);
	НоваяЗапись.Размер = 8000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 8680;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 8840.58;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 9989.86;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2010, 1, 1);
	НоваяЗапись.Размер = 10988.85;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2011, 1, 1);
	НоваяЗапись.Размер = 11703.13;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2012, 1, 1);
	НоваяЗапись.Размер = 12405.32;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2013, 1, 1);
	НоваяЗапись.Размер = 13087.61;
	
	// Постановка на учет в ранние сроки беременности 
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 300;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 325.5;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 331.52;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 374.62;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2010, 1, 1);
	НоваяЗапись.Размер = 412.08;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2011, 1, 1);
	НоваяЗапись.Размер = 438.87;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2012, 1, 1);
	НоваяЗапись.Размер = 465.20;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2013, 1, 1);
	НоваяЗапись.Размер = 490.79;
	
	// По уходу за ребёнком до 1.5 лет
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 500;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2006, 1, 1);
	НоваяЗапись.Размер = 700;


	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2007, 1, 1);
	НоваяЗапись.Размер = 1500;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2007, 1, 1);
	НоваяЗапись.Размер = 3000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2007, 1, 1);
	НоваяЗапись.Размер = 6000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 1627.5;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 3255;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 6510;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 1657.61;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 3315.22;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 6630.44;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 1873.10;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 3746.20;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 7492.40;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2010, 1, 1);
	НоваяЗапись.Размер = 2060.41;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2010, 1, 1);
	НоваяЗапись.Размер = 4120.82;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2011, 1, 1);
	НоваяЗапись.Размер = 2194.34;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2011, 1, 1);
	НоваяЗапись.Размер = 4388.67;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2012, 1, 1);
	НоваяЗапись.Размер = 2326.00;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2012, 1, 1);
	НоваяЗапись.Размер = 4651.99;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2013, 1, 1);
	НоваяЗапись.Размер = 2453.93;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2013, 1, 1);
	НоваяЗапись.Размер = 4907.85;

	ПроцедурыОбновленияИнформационнойБазыПереопределяемый.УстановитьМаксимумПособияПоУходуЗаРебенкомДоПолутораЛет(НаборЗаписей);
	ПроцедурыОбновленияИнформационнойБазыПереопределяемый.УстановитьМаксимумПособияПоУходуЗаРебенкомДоПолутораЛет2011(НаборЗаписей);
	ПроцедурыОбновленияИнформационнойБазыПереопределяемый.УстановитьМаксимумПособияПоУходуЗаРебенкомДоПолутораЛет2013(НаборЗаписей);
	
	// По уходу за ребёнком до 3 лет
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДо3хЛет;
	НоваяЗапись.Период = Дата(2000, 1, 1);
	НоваяЗапись.Размер = 50;

	// На погребение
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = Дата(2000, 1, 1);
	НоваяЗапись.Размер = 1000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 4000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = Дата(2011, 1, 1);
	НоваяЗапись.Размер = 4260;
	НаборЗаписей.Записать();

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = Дата(2012, 1, 1);
	НоваяЗапись.Размер = 4515.60;
	НаборЗаписей.Записать();

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = Дата(2013, 1, 1);
	НоваяЗапись.Размер = 4763.96;
	
	НаборЗаписей = РегистрыСведений.РазмерОграниченияПособияПоНетрудоспособности.СоздатьНаборЗаписей();

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 11700;
	НоваяЗапись.РазмерПоБеременности = 11700;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2005, 1, 1);
	НоваяЗапись.Размер = 12480;
	НоваяЗапись.РазмерПоБеременности = 12480;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2006, 1, 1);
	НоваяЗапись.Размер = 15000;
	НоваяЗапись.РазмерПоБеременности = 15000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2007, 1, 1);
	НоваяЗапись.Размер = 16125;
	НоваяЗапись.РазмерПоБеременности = 16125;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2007, 9, 1);
	НоваяЗапись.Размер = 16125;
	НоваяЗапись.РазмерПоБеременности = 23400;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 17250;
	НоваяЗапись.РазмерПоБеременности = 23400;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 18720;
	НоваяЗапись.РазмерПоБеременности = 25390;
	
	НаборЗаписей.Записать();
	
	УстановитьМаксимальныйРазмерЕжемесячнойСтраховойВыплаты2013();
	
	ИндексироватьПособия2014();
	ИндексироватьПособия2015();
	
КонецПроцедуры

// Заполняет справочник воинских званий предопределенными реквизитами
//
Процедура ЗаполнитьСправочникВоинскихЗваний() Экспорт

	Звание = Справочники.ЗваниеГражданскогоВоинскогоУчета;

	ОбъектЗвание = Звание.ГенералАрмии.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.ГенералАрмии;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.ГенералЛейтенант.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.ГенералЛейтенант;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.ГенералМайор.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.ГенералМайор;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.ГенералПолковник.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.ГенералПолковник;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Ефрейтор.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Ефрейтор;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Капитан.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Капитан;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Лейтенант.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Лейтенант;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Майор.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Майор;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.МаршалРоссийскойФедерации.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.МаршалРоссийскойФедерации;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.МладшийЛейтенант.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.МладшийЛейтенант;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.МладшийСержант.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.МладшийСержант;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Подполковник.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Подполковник;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Полковник.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Полковник;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Прапорщик.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Прапорщик;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Рядовой.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Рядовой;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Сержант.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Сержант;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.СтаршийЛейтенант.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.СтаршийЛейтенант;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.СтаршийПрапорщик.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.СтаршийПрапорщик;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.СтаршийСержант.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.СтаршийСержант;
	ОбъектЗвание.Записать();

	ОбъектЗвание = Звание.Старшина.ПолучитьОбъект();
	ОбъектЗвание.ОбщевойсковоеЗвание = Звание.Старшина;
	ОбъектЗвание.Записать();

КонецПроцедуры

// Выполняет начальное заполнение справочника "ОснованияУвольнения"
// данными по умолчанию
Процедура ЗаполнитьОснованияУвольнения() Экспорт
	
	ОснованияУвольнения = Справочники.ОснованияУвольненияИзОрганизации;
	ЭлементСпр = ОснованияУвольнения.НайтиПоНаименованию("п. 1 ст. 77 ТК");
	Если ЭлементСпр.Пустая() Тогда
		ЭлементСпр = ОснованияУвольнения.СоздатьЭлемент();
		ЭлементСпр.Наименование		= "п. 1 ст. 77 ТК";
		ЭлементСпр.ТекстОснования	= "Соглашение сторон";
		ЭлементСпр.Записать();
	КонецЕсли;
	ЭлементСпр = ОснованияУвольнения.НайтиПоНаименованию("п. 2 ст. 77 ТК");
	Если ЭлементСпр.Пустая() Тогда
		ЭлементСпр = ОснованияУвольнения.СоздатьЭлемент();
		ЭлементСпр.Наименование		= "п. 2 ст. 77 ТК";
		ЭлементСпр.ТекстОснования	= "Истечение срока трудового договора";
		ЭлементСпр.Записать();
	КонецЕсли;
	ЭлементСпр = ОснованияУвольнения.НайтиПоНаименованию("п. 3 ст. 77 ТК");
	Если ЭлементСпр.Пустая() Тогда
		ЭлементСпр = ОснованияУвольнения.СоздатьЭлемент();
		ЭлементСпр.Наименование		= "п. 3 ст. 77 ТК";
		ЭлементСпр.ТекстОснования	= "Расторжение трудового договора по инициативе работника";
		ЭлементСпр.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет по умолчанию формы обучения
//
Процедура ЗаполнитьФормыОбучения() Экспорт
	
	ФормыОбучения = ПроцедурыОбновленияИнформационнойБазыДополнительный.ФормыОбученияМенеджер();
	СсылкаНаЭлемент = ФормыОбучения.НайтиПоНаименованию("Лекция");
	Если  СсылкаНаЭлемент.Пустая() Тогда
		ЭлементФормыОбучения = ФормыОбучения.СоздатьЭлемент();
		ЭлементФормыОбучения.Код = "00001";
		ЭлементФормыОбучения.Наименование = "Лекция";		
		ЭлементФормыОбучения.Записать();
	Иначе
		ЭлементФормыОбучения = СсылкаНаЭлемент.ПолучитьОбъект();
		ЭлементФормыОбучения.ПометкаУдаления = Ложь;
	КонецЕсли;	
	ЗаписатьСправочникОбъект(ЭлементФормыОбучения);		
	
	СсылкаНаЭлемент = ФормыОбучения.НайтиПоНаименованию("Тренинг");
	Если  СсылкаНаЭлемент.Пустая() Тогда
		ЭлементФормыОбучения = ФормыОбучения.СоздатьЭлемент();
		ЭлементФормыОбучения.Код = "00002";
		ЭлементФормыОбучения.Наименование = "Тренинг";		
	Иначе
		ЭлементФормыОбучения = СсылкаНаЭлемент.ПолучитьОбъект();
		ЭлементФормыОбучения.ПометкаУдаления = Ложь;
	КонецЕсли;
	ЗаписатьСправочникОбъект(ЭлементФормыОбучения);	
	
	СсылкаНаЭлемент = ФормыОбучения.НайтиПоНаименованию("Семинар");
	Если  СсылкаНаЭлемент.Пустая() Тогда
		ЭлементФормыОбучения = ФормыОбучения.СоздатьЭлемент();
		ЭлементФормыОбучения.Код = "00003";
		ЭлементФормыОбучения.Наименование = "Семинар";		
	Иначе
		ЭлементФормыОбучения = СсылкаНаЭлемент.ПолучитьОбъект();
		ЭлементФормыОбучения.ПометкаУдаления = Ложь;
	КонецЕсли;
	ЗаписатьСправочникОбъект(ЭлементФормыОбучения);	
	
	СсылкаНаЭлемент = ФормыОбучения.НайтиПоНаименованию("Деловая игра");
	Если  СсылкаНаЭлемент.Пустая() Тогда		
		ЭлементФормыОбучения = ФормыОбучения.СоздатьЭлемент();
		ЭлементФормыОбучения.Код = "00004";
		ЭлементФормыОбучения.Наименование = "Деловая игра";		
	Иначе
		ЭлементФормыОбучения = СсылкаНаЭлемент.ПолучитьОбъект();
		ЭлементФормыОбучения.ПометкаУдаления = Ложь;
	КонецЕсли;
	ЗаписатьСправочникОбъект(ЭлементФормыОбучения);	
	
	СсылкаНаЭлемент = ФормыОбучения.НайтиПоНаименованию("Решение кейсов");
	Если  СсылкаНаЭлемент.Пустая() Тогда		
		ЭлементФормыОбучения = ФормыОбучения.СоздатьЭлемент();
		ЭлементФормыОбучения.Код = "00005";
		ЭлементФормыОбучения.Наименование = "Решение кейсов";		
	Иначе
		ЭлементФормыОбучения = СсылкаНаЭлемент.ПолучитьОбъект();
		ЭлементФормыОбучения.ПометкаУдаления = Ложь;
	КонецЕсли;
	ЗаписатьСправочникОбъект(ЭлементФормыОбучения);	
	
	СсылкаНаЭлемент = ФормыОбучения.НайтиПоНаименованию("Экскурсия");
	Если  СсылкаНаЭлемент.Пустая() Тогда		
		ЭлементФормыОбучения = ФормыОбучения.СоздатьЭлемент();
		ЭлементФормыОбучения.Код = "00006";
		ЭлементФормыОбучения.Наименование = "Экскурсия";		
	Иначе
		ЭлементФормыОбучения = СсылкаНаЭлемент.ПолучитьОбъект();
		ЭлементФормыОбучения.ПометкаУдаления = Ложь;		
	КонецЕсли;
	ЗаписатьСправочникОбъект(ЭлементФормыОбучения);	
	
КонецПроцедуры  // ЗаполнитьФормыОбучения

// Начальное заполнение справочника "КлассификаторСтранМира".
//
Процедура НачальноеЗаполнениеСправочникаКлассификаторСтранМира() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КлассификаторСтранМира.Ссылка = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)
	|			ТОГДА ""Российская Федерация""
	|		КОГДА КлассификаторСтранМира.Ссылка = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ЛицоБезГражданства)
	|			ТОГДА ""Лицо без гражданства""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НаименованиеПолное,
	|	КлассификаторСтранМира.Ссылка
	|ИЗ
	|	Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
	|ГДЕ
	|	КлассификаторСтранМира.Ссылка В (ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия), ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ЛицоБезГражданства))
	|	И КлассификаторСтранМира.НаименованиеПолное = """"";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// Заполнение полного наименования предопределенного элемента.
		СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СправочникОбъект.НаименованиеПолное = Выборка.НаименованиеПолное;
		СправочникОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры // НачальноеЗаполнениеСправочникаКлассификаторСтранМира()

Процедура НачальноеЗаполнениеСправочникаДокументыУдостоверяющиеЛичность() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументыУдостоверяющиеЛичность.Ссылка
	|ИЗ
	|	Справочник.ДокументыУдостоверяющиеЛичность КАК ДокументыУдостоверяющиеЛичность
	|ГДЕ
	|	ДокументыУдостоверяющиеЛичность.Предопределенный
	|	И ДокументыУдостоверяющиеЛичность.КодИМНС ПОДОБНО """"";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Макет = Справочники.ДокументыУдостоверяющиеЛичность.ПолучитьМакет("КлассификаторИМНС");
	
	Пока Выборка.Следующий() Цикл
		ИмяЭлемента = Справочники.ДокументыУдостоверяющиеЛичность.ПолучитьИмяПредопределенного(Выборка.Ссылка);
		Область = Макет.НайтиТекст(Прав(ИмяЭлемента, 2),, Макет.Область("C2"));
		
		СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СпрОбъект.КодИМНС	= СокрЛП(Макет.Область(Область.Низ, 2, Область.Низ, 2).Текст);
		СпрОбъект.КодПФР	= СокрЛП(Макет.Область(Область.Низ, 3, Область.Низ, 3).Текст);
		СпрОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьПризнакАвтоНачислениеПоТабелю() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка,
	|	ИСТИНА КАК АвтоНачислятьПоТабелю
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаНочныеЧасы), ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаВечерниеЧасы))
	|	И (НЕ ОсновныеНачисленияОрганизаций.АвтоНачислятьПоТабелю)";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка начисляемых по табелю доплат");

КонецПроцедуры

// Процедура заполняет справочники ученых степеней и званий из классификаторов
//
Процедура ЗаполнитьУченыеСтепениИЗвания() Экспорт

	УченыеЗвания = Справочники.УченыеЗвания;
	МакетУченыеЗвания = УченыеЗвания.ПолучитьМакет("КлассификаторУченыеЗвания");
	Для Индекс = 4 По 15 Цикл
		
		Код = СОКРЛП(МакетУченыеЗвания.Область(Индекс, 2, Индекс, 2).Текст);
		Наименование = СОКРЛП(МакетУченыеЗвания.Область(Индекс, 3, Индекс, 3).Текст);
		
		Если Не ЗначениеЗаполнено(Наименование) Тогда
			Продолжить; 
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(УченыеЗвания.НайтиПоНаименованию(Наименование, Истина)) Тогда
			УченыеЗванияОбъект = УченыеЗвания.СоздатьЭлемент();
			УченыеЗванияОбъект.Код = Код;
			УченыеЗванияОбъект.Наименование = Наименование;
			Попытка
				УченыеЗванияОбъект.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;	
		
	КонецЦикла;
	
	УченыеСтепени = Справочники.УченыеСтепени;
	МакетУченыеСтепени = УченыеСтепени.ПолучитьМакет("КлассификаторУченыеСтепени");
	Для Индекс = 4 По 5 Цикл
		
		Код = СОКРЛП(МакетУченыеСтепени.Область(Индекс, 2, Индекс, 2).Текст);
		Наименование = СОКРЛП(МакетУченыеСтепени.Область(Индекс, 3, Индекс, 3).Текст);
		
		Если Не ЗначениеЗаполнено(Наименование) Тогда
			Продолжить; 
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(УченыеСтепени.НайтиПоНаименованию(Наименование, Истина)) Тогда
			УченыеСтепениОбъект = УченыеСтепени.СоздатьЭлемент();
			УченыеСтепениОбъект.Код = Код;
			УченыеСтепениОбъект.Наименование = Наименование;
			Попытка
				УченыеСтепениОбъект.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьУченыеСтепениИЗвания()

// Функция создает элемент справочника Валюты, если такого нет.
//
// Параметры:
//  Код -                     - значение соответствующего реквизита справочника,
//  Наименование              - значение соответствующего реквизита справочника,
//  НаименованиеПолное        - значение соответствующего реквизита справочника,
//  ПараметрыПрописиНаРусском - значение соответствующего реквизита справочника.
//
// Возвращаемое значение:
//  Ссылка на добавленный или существующий элемент.
//
Функция НайтиСоздатьВалюту(Код, Наименование, НаименованиеПолное, ПараметрыПрописиНаРусском) Экспорт

	Ссылка = Справочники.Валюты.НайтиПоКоду(Код);

	Если Ссылка.Пустая() Тогда
		СправочникОбъект = Справочники.Валюты.СоздатьЭлемент();

		СправочникОбъект.Код                       = Код;
		СправочникОбъект.Наименование              = Наименование;
		СправочникОбъект.НаименованиеПолное        = НаименованиеПолное;
		СправочникОбъект.ПараметрыПрописиНаРусском = ПараметрыПрописиНаРусском;

		ЗаписатьСправочникОбъект(СправочникОбъект);

		Ссылка = СправочникОбъект.Ссылка;

		// установим курс и кратность = 1 на 1 января 1980
		МодульВалютногоУчета.ПроверитьКорректностьКурсаНа01_01_1980(Ссылка);

	КонецЕсли;

	Возврат Ссылка;

КонецФункции // НайтиСоздатьВалюту()

// Выполняет первоначальное заполнение справочника РегламентированныеОтчеты
// списком регламентированных отчетов. 
//  Процедура должна вызываться при первоначальном заполнении пустой 
// информационной базы. Предполагается, что перед запуском процедуры справочник
// РегламентированныеОтчеты - пустой.
//
Процедура ЗаполнитьСписокРегламентированныхОтчетов(ПервоеЗаполнение = Истина, ИзменятьПризнакИспользованияВнешнегоОтчета = Истина) Экспорт

	Перем ДеревоОтчетов;
	Перем ОбработкаОбновлениеОтчетов;

	Если ИзменятьПризнакИспользованияВнешнегоОтчета И НЕ ПервоеЗаполнение Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РегламентированныеОтчеты.Ссылка КАК Ссылка,
		|	РегламентированныеОтчеты.ИсточникОтчета КАК ИсточникОтчета
		|ИЗ
		|	Справочник.РегламентированныеОтчеты КАК РегламентированныеОтчеты
		|ГДЕ
		|	РегламентированныеОтчеты.ВнешнийОтчетИспользовать";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Метаданные.Документы.Найти(Выборка.ИсточникОтчета) <> Неопределено ИЛИ	Метаданные.Отчеты.Найти(Выборка.ИсточникОтчета) <> Неопределено Тогда
				ОбъектРеглОтчет = Выборка.Ссылка.ПолучитьОбъект();
				ОбъектРеглОтчет.ВнешнийОтчетИспользовать = Ложь;
				ОбъектРеглОтчет.Записать();
			КонецЕсли;
		КонецЦикла;
	
	КонецЕсли;
	
	// Заполнением списка отчетов выполняется путем вызова экспортных процедур
	// обработки ОбновлениеРегламентированнойОтчетности.
	ОбработкаОбновлениеОтчетов = Обработки.ОбновлениеРегламентированнойОтчетности.Создать();
	
	// Получаем список регламентированных отчетов в виде дерева.
	ДеревоОтчетов = ОбработкаОбновлениеОтчетов.ПолучитьСписокОтчетов();

	Если ДеревоОтчетов.Строки.Количество() = 0 Тогда
		// нет обновлений
		Возврат;
	КонецЕсли;
	
	// Заполняем списко отчетов.
	ОбработкаОбновлениеОтчетов.ЗаполнитьСписокОтчетов(ДеревоОтчетов, ПервоеЗаполнение);

КонецПроцедуры // ЗаполнитьСписокРегламентированныхОтчетов()

// Процедура отрабатывает изменение структуры справочника НалоговыеОрганы.
//
Процедура ОтработатьИзмененияВСтруктуреСправочникаНалоговыеОрганы() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НалоговыеОрганы.Ссылка КАК НалоговыйОрган
	                      |ИЗ
	                      |	Справочник.НалоговыеОрганы КАК НалоговыеОрганы
	                      |ГДЕ
	                      |	НалоговыеОрганы.УдалитьСертификат <> &ПустойСертификат");
	Запрос.УстановитьПараметр("ПустойСертификат", "");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектНО = Выборка.НалоговыйОрган.ПолучитьОбъект();
		Если ПустаяСтрока(ОбъектНО.УдалитьСертификат) ИЛИ ОбъектНО.Сертификаты.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтрСертификат = ОбъектНО.Сертификаты.Добавить();
		НовСтрСертификат.Сертификат = ОбъектНО.УдалитьСертификат;
		
		ОбъектНО.ОбменДанными.Загрузка = Истина;
		Попытка
			ОбъектНО.Записать();
		Исключение
			ОбщегоНазначенияЗК.СообщитьОбОшибке("Не удалось отработать изменение структуры справочника для налогового органа " + СокрЛП(ОбъектНО.Код) + ".");
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполнение элементов и реквизитов справочников "Шкалы оценк"
//
Процедура ЗаполнитьСправочникШкалОценок() Экспорт
	
	СправочникШкал = Справочники.ШкалыОценокКомпетенций;
	ШкальныйОценки = Справочники.СоставОценочныхШкалКомпетенций;
	
	// Двухбалльная шкала
	Если Справочники.ШкалыОценокКомпетенций.НайтиПоНаименованию("Двухбалльная").Пустая() Тогда
		Справочник = СправочникШкал.СоздатьЭлемент();
		Справочник.Наименование = "Двухбалльная";
		Справочник.Записать();
		
		// Заполнение шкал
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник.Ссылка;
		Оценка.Наименование = "Незачет";
		Оценка.ПриоритетОценки = 1;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник.Ссылка;
		Оценка.Наименование = "Зачет";
		Оценка.ПриоритетОценки = 2;
		Оценка.Записать();
	КонецЕсли;

	// Трехбалльная шкала
	Если Справочники.ШкалыОценокКомпетенций.НайтиПоНаименованию("Трехбалльная").Пустая()  Тогда

		Справочник = СправочникШкал.СоздатьЭлемент();
		Справочник.Наименование = "Трехбалльная";
		Справочник.Записать();
		
		// Заполнение шкал
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник.Ссылка;
		Оценка.Наименование = "Ниже ожидаемого уровня";
		Оценка.ПриоритетОценки = 1;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник.Ссылка;
		Оценка.Наименование = "На ожидаемом уровне";
		Оценка.ПриоритетОценки = 2;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник.Ссылка;
		Оценка.Наименование = "Выше ожидаемого уровня";
		Оценка.ПриоритетОценки = 3;
		Оценка.Записать();
	КонецЕсли;
	
	// Четырехбалльная шкала
	Если Справочники.ШкалыОценокКомпетенций.НайтиПоНаименованию("Четырехбалльная").Пустая() Тогда
	
		Справочник = СправочникШкал.СоздатьЭлемент();
		Справочник.Наименование = "Четырехбалльная";
		Справочник.Записать();
		
		// Заполнение шкал
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник.Ссылка;
		Оценка.Наименование = "НЕ удовлетворительно";
		Оценка.ПриоритетОценки = 1;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник.Ссылка;
		Оценка.Наименование = "Удовлетворительно";
		Оценка.ПриоритетОценки = 2;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник.Ссылка;
		Оценка.Наименование = "Хорошо";
		Оценка.ПриоритетОценки = 3;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник.Ссылка;
		Оценка.Наименование = "Отлично";
		Оценка.ПриоритетОценки = 4;
		Оценка.Записать();
	КонецЕсли;

	// Пятибалльная шкала
	Справочник = СправочникШкал.Пятибалльная;
	
	Если ШкальныйОценки.НайтиПоНаименованию("E [-2]",Истина,,Справочник).Пустая() Тогда
		// Заполнение шкал
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник;
		Оценка.Наименование = "E [-2]";
		Оценка.ПриоритетОценки = 1;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник;
		Оценка.Наименование = "D [-1]";
		Оценка.ПриоритетОценки = 2;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник;
		Оценка.Наименование = "С [ 0]";
		Оценка.ПриоритетОценки = 3;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник;
		Оценка.Наименование = "В [+1]";
		Оценка.ПриоритетОценки = 4;
		Оценка.Записать();
		
		Оценка = ШкальныйОценки.СоздатьЭлемент();
		Оценка.Владелец = Справочник;
		Оценка.Наименование = "А [+2]";
		Оценка.ПриоритетОценки = 5;
		Оценка.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет константу шаблонов телефонов.
// 
Процедура ЗаполнитьШаблоныТелефонныхНомеровПоУмолчанию() Экспорт

	ТаблицаСоответствий = Новый Соответствие;
	ТаблицаСоответствий.Вставить(7,"999-99-99");
	ТаблицаСоответствий.Вставить(6,"99-99-99");
	ТаблицаСоответствий.Вставить(5,"9-99-99");
	ТаблицаСоответствий.Вставить(4,"99-99");

	ХранилищеШаблоновТелефонов = Новый ХранилищеЗначения(ТаблицаСоответствий);

	Константы.ШаблоныТелефонныхНомеров.Установить(ХранилищеШаблоновТелефонов);

КонецПроцедуры // укЗаполнитьДанныеПоУмолчаниюДляКонтактнойИнформации()

// Процедура устанавливает указанное значение указанной константы и выводит сообщение.
// Предназначена для вызова из процедур заполнения и обработки справочников информационной базы.
//
// Параметры:
//  ИмяКонстанты      - имя константы, которую требуется установить.
//  ЗначениеКонстанты - значение константы.
//
Процедура УстановитьКонстанту(ИмяКонстанты, ЗначениеКонстанты) Экспорт

	Если Константы[ИмяКонстанты].Получить() = ЗначениеКонстанты Тогда
		Возврат;
	КонецЕсли;

	Константы[ИмяКонстанты].Установить(ЗначениеКонстанты);

КонецПроцедуры

// Процедура заполняет по умолчанию необходимые данные
// для отправки сообщений в службу технической поддержки.
//
Процедура ЗаполнитьПараметрыКонстантыОбращенияВОтделТехническойПоддержки() Экспорт

	Перем СтруктураЗначения;

	Если ТипЗнч(Константы.ПараметрыСообщенияПриОбращенииВОтделТехническойПоддержки.Получить().Получить()) <> Тип("Структура") Тогда

		ОбщегоНазначенияЗК.ЗаполнитьСтруктуруДанныхНастройкиОбращенияВОтделТехподдержкиПоУмолчанию(СтруктураЗначения);

		СтрокаПараметровОтправки = СтруктураЗначения.Найти("ПараметрыОтправкиЭлектронногоСообщения", "ИмяРаздела");

		Если СтрокаПараметровОтправки <> Неопределено Тогда

			СтрокаПараметровОтправки.ДанныеРаздела.ПараметрыОтправкиЭлектронногоСообщения_АдресЭлектроннойПочтыОтделаТехническойПоддержки[1] = "v8@1c.ru";

			Константы.ПараметрыСообщенияПриОбращенииВОтделТехническойПоддержки.Установить(Новый ХранилищеЗначения(СтруктураЗначения, Новый СжатиеДанных));

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Процедура заполняет предопределенную смену
//
Процедура ЗаполнитьПредопределенныеСмены() Экспорт
	
	Смена = Справочники.Смены.Смена24Часа.ПолучитьОбъект();
	Смена.ПериодыСмены.Очистить();
	ПериодСмены = Смена.ПериодыСмены.Добавить();
	ПериодСмены.ВремяНачала = Дата(1,1,1, 0, 0, 1);
	ПериодСмены.ВремяОкончания = Дата(1,1,1, 23, 59, 59);
	Смена.Записать();
	
КонецПроцедуры // ЗаполнитьПредопределенныеСмены()

Процедура УстановитьИспользованиеВидовЗадачПользователей() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыЗадачПользователей.Ссылка
	|ИЗ
	|	Справочник.ВидыЗадачПользователей КАК ВидыЗадачПользователей
	|ГДЕ
	|	ВидыЗадачПользователей.Использование";
	
	// Если есть хотя бы одна задача, для которой установлен признак использование
	// повторно устанавливать использование не нужно
	Если Запрос.Выполнить().Пустой() Тогда
		ВыбранныеЗадачи = Справочники.ВидыЗадачПользователей.Выбрать();
		Пока ВыбранныеЗадачи.Следующий() Цикл
			ЗадачаОбъект = ВыбранныеЗадачи.ПолучитьОбъект();
			ЗадачаОбъект.Использование = Истина;
			ЗадачаОбъект.Записать();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заносит в регистр сведений ВнешниеКомпоненты все компоненты,
// которые указаны в регистре как макеты
//
Процедура ЗаполнитьСписокВнешнихКомпонент() Экспорт
	
	Для Каждого Макет Из Метаданные.РегистрыСведений.ВнешниеКомпоненты.Макеты Цикл
		
		ВнешняяКомпонента = РегистрыСведений.ВнешниеКомпоненты.ПолучитьМакет(Макет.Имя);
		
		ИмяФайла = КаталогВременныхФайлов() + Макет.Имя + ".dll";
		УниверсальныеМеханизмы.ДобавлениеВнешнейКомпоненты(ИмяФайла, ВнешняяКомпонента, Ложь);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСписокВнешнихКомпонент()

Процедура ВключитьМеханизмОнлайнСервисовРО() Экспорт
	
	Константы.ИспользоватьМеханизмОнлайнСервисовРО.Установить(Истина);
	
КонецПроцедуры

// Процедура заполняет в основных начислениях появившийся реквизит ВидСтажаСЗВ4
Процедура ЗаполнитьВНачисленияхВидСтажаСЗВ4() Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние("Для основных начислений заполняем порядок включения периода в страховой стаж для назначения трудовой пенсии");
	#КонецЕсли	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка,
	|	ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени,
	|	ОсновныеНачисленияОрганизаций.ВидВремени,
	|	ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования,
	|	ОсновныеНачисленияОрганизаций.ВидСтажаСЗВ4
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ПорядокВключенияПериодаВСтраховойСтаж = ПроцедурыПерсонифицированногоУчета.ПолучитьПорядокВключенияПериодаВСтраховойСтаж(Выборка.ВидПособияСоциальногоСтрахования, Выборка.ВидВремени, Выборка.ОбозначениеВТабелеУчетаРабочегоВремени);
		Если Выборка.ВидСтажаСЗВ4 <> ПорядокВключенияПериодаВСтраховойСтаж Тогда
			НачислениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
			НачислениеОбъект.ОбменДанными.Загрузка = Истина;
			НачислениеОбъект.ВидСтажаСЗВ4 = ПорядокВключенияПериодаВСтраховойСтаж;
			НачислениеОбъект.Записать();
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры // ЗаполнитьВНачисленияхВидСтажаСЗВ4()

Процедура ЗагрузитьНастройкиОтчетов() Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение тогда
	ТаблицаНастроек = ТиповыеОтчеты.ПолучитьТаблицуПредопределенныхНастроек();
	
	Для каждого СтрокаНастройки из ТаблицаНастроек Цикл
		
		ТиповыеОтчеты.ЗагрузитьНастройкуПредопределенногоЭлемента(СтрокаНастройки.Макет, СтрокаНастройки.Отчет);
		
	КонецЦикла
	#КонецЕсли	
	
КонецПроцедуры

Процедура ЗаполнитьРасчетнуюБазуСреднегоДляПособий2010() Экспорт

	РасчетыПоСреднему = Новый Массив;
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетыПоСреднему",РасчетыПоСреднему);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ДополнительныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
	|ГДЕ
	|	ДополнительныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И ДополнительныеНачисленияОрганизаций.ВидПремии В (ЗНАЧЕНИЕ(Перечисление.ВидыПремии.Премия), ЗНАЧЕНИЕ(Перечисление.ВидыПремии.ГодоваяПремия))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка)))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL 
	|	И (НЕ ДополнительныеНачисленияОрганизаций.СпособРасчета В (&РасчетыПоСреднему))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ДополнительныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ДополнительныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
	|ГДЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка.КодДоходаСтраховыеВзносы = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям)
	|	И ДополнительныеНачисленияОрганизаций.ВидРасчета.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И ДополнительныеНачисленияОрганизаций.Ссылка.ВидПремии В (ЗНАЧЕНИЕ(Перечисление.ВидыПремии.Премия), ЗНАЧЕНИЕ(Перечисление.ВидыПремии.ГодоваяПремия))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.Ссылка.СпособРасчета В (&РасчетыПоСреднему))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL ";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ОбъектЗаполнения = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010.ПолучитьОбъект();
        ОбъектЗаполнения.ОбменДанными.Загрузка = Истина;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ОбъектЗаполнения.БазовыеВидыРасчета.Добавить(),Выборка);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("БазовыеВидыРасчета", ОбъектЗаполнения.БазовыеВидыРасчета.ВыгрузитьКолонку("ВидРасчета"));
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ ВТВедущие
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета
		|ГДЕ
		|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка В(&БазовыеВидыРасчета)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
		|ГДЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка В(&БазовыеВидыРасчета)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Ведущие.ВидРасчета
		|ИЗ
		|	ВТВедущие КАК Ведущие
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.ВедущиеВидыРасчета КАК СреднийЗаработокВедущиеВидыРасчета
		|		ПО Ведущие.ВидРасчета = СреднийЗаработокВедущиеВидыРасчета.ВидРасчета
		|			И (СреднийЗаработокВедущиеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
		|ГДЕ
		|	СреднийЗаработокВедущиеВидыРасчета.ВидРасчета ЕСТЬ NULL ";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ОбъектЗаполнения.ВедущиеВидыРасчета.Добавить(),Выборка);
		КонецЦикла;
		
		ОбъектЗаполнения.Записать();
		
	КонецЕсли;
	
	ПериодыОсвобожденияОтРаботы = Новый Массив;
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ГосударственныеОбязанности);
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.Простой);
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ПростойПоВинеРаботодателя);
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты);
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыСОплатой);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетыПоСреднему",РасчетыПоСреднему);
	Запрос.УстановитьПараметр("ПериодыОсвобожденияОтРаботы",ПериодыОсвобожденияОтРаботы);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL 
	|	И (НЕ ОсновныеНачисленияОрганизаций.СпособРасчета В (&РасчетыПоСреднему))
	|	И (НЕ ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени В (&ПериодыОсвобожденияОтРаботы))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ДополнительныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
	|ГДЕ
	|	ДополнительныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И (НЕ ДополнительныеНачисленияОрганизаций.ВидПремии В (ЗНАЧЕНИЕ(Перечисление.ВидыПремии.Премия), ЗНАЧЕНИЕ(Перечисление.ВидыПремии.ГодоваяПремия)))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка)))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.СпособРасчета В (&РасчетыПоСреднему))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ОсновныеНачисленияОрганизацийБазовыеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка.КодДоходаСтраховыеВзносы = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям)
	|	И ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.ВидРасчета.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL 
	|	И (НЕ ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка.СпособРасчета В (&РасчетыПоСреднему))
	|	И (НЕ ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка.ОбозначениеВТабелеУчетаРабочегоВремени В (&ПериодыОсвобожденияОтРаботы))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ДополнительныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ДополнительныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
	|ГДЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка.КодДоходаСтраховыеВзносы = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям)
	|	И ДополнительныеНачисленияОрганизаций.ВидРасчета.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И (НЕ ДополнительныеНачисленияОрганизаций.Ссылка.ВидПремии В (ЗНАЧЕНИЕ(Перечисление.ВидыПремии.Премия), ЗНАЧЕНИЕ(Перечисление.ВидыПремии.ГодоваяПремия)))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.Ссылка.СпособРасчета В (&РасчетыПоСреднему))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL "; 
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ОбъектЗаполнения = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010.ПолучитьОбъект();
        ОбъектЗаполнения.ОбменДанными.Загрузка = Истина;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ОбъектЗаполнения.БазовыеВидыРасчета.Добавить(),Выборка);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("БазовыеВидыРасчета", ОбъектЗаполнения.БазовыеВидыРасчета.ВыгрузитьКолонку("ВидРасчета"));
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ ВТВедущие
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета
		|ГДЕ
		|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка В(&БазовыеВидыРасчета)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
		|ГДЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка В(&БазовыеВидыРасчета)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		|	ОсновныеНачисленияОрганизаций.Ссылка В(&БазовыеВидыРасчета)
		|
		|ОБЪЕДИНИТЬ 
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВедущиеВидыРасчета
		|ГДЕ
		|	ОсновныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка В(&БазовыеВидыРасчета)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Ведущие.ВидРасчета
		|ИЗ
		|	ВТВедущие КАК Ведущие
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.ВедущиеВидыРасчета КАК СреднийЗаработокВедущиеВидыРасчета
		|		ПО Ведущие.ВидРасчета = СреднийЗаработокВедущиеВидыРасчета.ВидРасчета
		|			И (СреднийЗаработокВедущиеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
		|ГДЕ
		|	СреднийЗаработокВедущиеВидыРасчета.ВидРасчета ЕСТЬ NULL ";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ОбъектЗаполнения.ВедущиеВидыРасчета.Добавить(),Выборка);
		КонецЦикла;
		
		ОбъектЗаполнения.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновлениеКодовДоходовВычетовНДФЛдля2010года() Экспорт

	УстановитьРеквизитыКодаДоходаНДФЛ(Справочники.ДоходыНДФЛ.Код1211, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, "1211");
	УстановитьРеквизитыКодаДоходаНДФЛ(Справочники.ДоходыНДФЛ.Код2791, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, "2791");
	
	НаборЗаписей = РегистрыСведений.НДФЛВычетыПоДоходам.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.КодДохода.Установить(Справочники.ДоходыНДФЛ.Код2791);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, '20090101', Справочники.ДоходыНДФЛ.Код2791, 0, 4300);
	НаборЗаписей.Записать();
	НаборЗаписей.Очистить();
    НаборЗаписей.Отбор.КодДохода.Установить(Справочники.ДоходыНДФЛ.Код1211);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, '20090101', Справочники.ДоходыНДФЛ.Код1211, 12000, 0);
	НаборЗаписей.Записать();
	
	ОписатьКодВычетаНДФЛ(Справочники.ВычетыНДФЛ.Код310, "310", "310", "-", "(не используется с 2010 года) Убыток, полученный в налоговом периоде по операциям купли-продажи ценных бумаг, обращающихся на орг. рынке ценных бумаг", "Убыток, полученный в налоговом периоде по операциям купли-продажи ценных бумаг, обращающихся на организованном рынке ценных бумаг", "");
	ОписатьКодВычетаНДФЛ(Справочники.ВычетыНДФЛ.Код311, "311", "313", "311", "Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории РФ жилого дома, квартиры или доли (долей) в них", "Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории Российской Федерации жилого дома, квартиры, комнаты или доли (долей) в них (кроме сумм, направленных на погашение процентов по целевым займам (кредитам) и фактически израсходованных на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры, комнаты или доли (долей) в них), в размере фактически произведенных и документально подтвержденных расходов в пределах 2 000 000 руб.", "Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них (кроме сумм, направленных на погашение процентов по целевым займам (кредитам) и фактически израсходованных на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них), в размере фактически произведенных и документально подтвержденных расходов в пределах 1 000 000 руб.");
	
	ОписатьКодВычетаНДФЛ(Справочники.ВычетыНДФЛ.Код319, "319", "-",   "-", "Сумма упл-х пенс-х взносов по договору негосударственного пенсионного обеспечения и/или страх-х взносов по договору добровольного пенсионного страх-ия", "", "");
	ОписатьКодВычетаНДФЛ(Справочники.ВычетыНДФЛ.Код509, "509", "-",   "-", "Вычет из доходов, полученных работниками в натуральной форме в качестве оплаты труда от организаций - с/х товаропроизводителей и крестьянских х-в", "", "");
	ОписатьКодВычетаНДФЛ(Справочники.ВычетыНДФЛ.Код607, "607", "-",   "-", "Вычет в сумме уплаченных работодателем страховых взносов за работника на накопительную часть трудовой пенсии, но не более 12000 рублей в год", "", "");

КонецПроцедуры

Процедура ЗаполнитьФлажкиОтпусков() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеОтпускаРаботникамОрганизаций.Ссылка,
	|	ВЫБОР
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаОсновногоОтпуска = ДАТАВРЕМЯ(1, 1, 1)
	|				И НачислениеОтпускаРаботникамОрганизаций.ДатаОкончанияОсновногоОтпуска = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОсновнойОтпуск,
	|	ВЫБОР
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаДополнительногоОтпуска = ДАТАВРЕМЯ(1, 1, 1)
	|				И НачислениеОтпускаРаботникамОрганизаций.ДатаОкончанияДополнительногоОтпуска = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ДополнительныйОтпуск,
	|	ВЫБОР
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ДнейЧасовКомпенсацииОтпуска = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК КомпенсацияОтпуска
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК НачислениеОтпускаРаботникамОрганизаций
	|ГДЕ
	|	((НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаОсновногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ НачислениеОтпускаРаботникамОрганизаций.ДатаОкончанияОсновногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1))
	|				И (НЕ НачислениеОтпускаРаботникамОрганизаций.ОсновнойОтпуск)
	|			ИЛИ (НЕ НачислениеОтпускаРаботникамОрганизаций.ДополнительныйОтпуск)
	|				И (НачислениеОтпускаРаботникамОрганизаций.ДатаОкончанияДополнительногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаДополнительногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1))
	|			ИЛИ (НЕ НачислениеОтпускаРаботникамОрганизаций.КомпенсацияОтпуска)
	|				И НачислениеОтпускаРаботникамОрганизаций.ДнейЧасовКомпенсацииОтпуска <> 0)";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов начисления отпусков");

КонецПроцедуры

Процедура УточнитьДатуНачалаСобытияВСреднемЗаработке() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетСреднегоЗаработка.Регистратор КАК Регистратор,
	|	ВЫРАЗИТЬ(РасчетСреднегоЗаработка.Регистратор КАК Документ.ОтпускПоУходуЗаРебенком).ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|ГДЕ
	|	РасчетСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
	|	И РасчетСреднегоЗаработка.ДатаНачалаСобытия <> ВЫРАЗИТЬ(РасчетСреднегоЗаработка.Регистратор КАК Документ.ОтпускПоУходуЗаРебенком).ДатаНачала
	|	И РасчетСреднегоЗаработка.Регистратор ССЫЛКА Документ.ОтпускПоУходуЗаРебенком
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСреднегоЗаработка.ПериодРегистрации,
	|	Регистраторы.Регистратор КАК Регистратор,
	|	РасчетСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
	|	РасчетСреднегоЗаработка.ВидРасчета,
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало,
	|	РасчетСреднегоЗаработка.БазовыйПериодКонец,
	|	РасчетСреднегоЗаработка.Активность,
	|	РасчетСреднегоЗаработка.Сторно,
	|	РасчетСреднегоЗаработка.Сотрудник,
	|	РасчетСреднегоЗаработка.ФизЛицо,
	|	РасчетСреднегоЗаработка.Организация,
	|	РасчетСреднегоЗаработка.Результат,
	|	РасчетСреднегоЗаработка.ОтработаноПоПятидневке,
	|	РасчетСреднегоЗаработка.НормаПоПятидневке,
	|	РасчетСреднегоЗаработка.ОтработаноДней,
	|	РасчетСреднегоЗаработка.ОтработаноЧасов,
	|	РасчетСреднегоЗаработка.КоэффициентИндексации,
	|	РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
	|	РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
	|	РасчетСреднегоЗаработка.СпособРасчета,
	|	РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка,
	|	РасчетСреднегоЗаработка.ЧислоМесяцев,
	|	Регистраторы.ДатаНачала КАК ДатаНачалаСобытия,
	|	РасчетСреднегоЗаработка.ВидУчетаВремени
	|ИЗ
	|	ВТРегистраторы КАК Регистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|		ПО Регистраторы.Регистратор = РасчетСреднегоЗаработка.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейРегистраРасчетаПоРегистраторам(РегистрыРасчета.РасчетСреднегоЗаработка, Ложь, Запрос, "Обработка документов Отпуск по уходу");	

КонецПроцедуры

Процедура ИсправитьРасчетнуюБазуСреднихЗаработков() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БазаОсновногоЗаработка.ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК БазаОсновногоЗаработка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК БазаПремий
	|		ПО БазаОсновногоЗаработка.ВидРасчета = БазаПремий.ВидРасчета
	|			И (БазаПремий.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособий), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые)))
	|			И (БазаПремий.ВидРасчета.Предопределенный)
	|ГДЕ
	|	БазаОсновногоЗаработка.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий))
	|	И БазаПремий.ВидРасчета ЕСТЬ НЕ NULL ";

	Если Запрос.Выполнить().Пустой() Тогда
		Возврат
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БазаОсновногоЗаработка.ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК БазаОсновногоЗаработка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК БазаПремий
	|		ПО БазаОсновногоЗаработка.ВидРасчета = БазаПремий.ВидРасчета
	|			И БазаПремий.Ссылка В (&Премии)
	|ГДЕ
	|	БазаОсновногоЗаработка.Ссылка = &Ссылка
	|	И БазаПремий.ВидРасчета ЕСТЬ NULL ";

	Запрос.УстановитьПараметр("Ссылка",ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые);
	МассивПремий = Новый Массив;
	МассивПремий.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые);
	МассивПремий.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые);
	Запрос.УстановитьПараметр("Премии",МассивПремий);
	ОбъектЗаполнения = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые.ПолучитьОбъект();
	ОбъектЗаполнения.ОбменДанными.Загрузка = Истина;
	ОбъектЗаполнения.БазовыеВидыРасчета.Загрузить(Запрос.Выполнить().Выгрузить());
	ОбъектЗаполнения.Записать();
		
	Запрос.УстановитьПараметр("Ссылка",ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий);
	Запрос.УстановитьПараметр("Премии",ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий);
	ОбъектЗаполнения = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий.ПолучитьОбъект();
	ОбъектЗаполнения.ОбменДанными.Загрузка = Истина;
	ОбъектЗаполнения.БазовыеВидыРасчета.Загрузить(Запрос.Выполнить().Выгрузить());
	ОбъектЗаполнения.Записать();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновлениеСтавкиРефинансированияЦБФевраль2010() Экспорт
	
	СтавкаЦБ = РегистрыСведений.СтавкаРефинансированияЦБ.СоздатьНаборЗаписей();
	СтавкаЦБ.Отбор.Период.Установить('20100224');
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20100224';
	СтрокаНабора.Размер = 8.5;
	СтавкаЦБ.Записать();
	СтавкаЦБ.Очистить();
	СтавкаЦБ.Отбор.Период.Установить('20100329');
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20100329';
	СтрокаНабора.Размер = 8.25;
	СтавкаЦБ.Записать();
	
КонецПроцедуры

Процедура ЗаписатьСтрокуШкалыПочтовыхТарифов(НаборЗаписейПочтовогоТарифа, НовыйТариф,НомерСтрокиШкалы, ЗначениеС, ЗначениеПо, Процент, Сумма)
	
	НоваяЗапись = НаборЗаписейПочтовогоТарифа.Добавить();

	НоваяЗапись.НомерСтрокиШкалы	= НомерСтрокиШкалы;
	НоваяЗапись.Тариф				= НовыйТариф;
	НоваяЗапись.ЗначениеС			= ЗначениеС;
	НоваяЗапись.ЗначениеПо			= ЗначениеПо;
	НоваяЗапись.Процент				= Процент;
	НоваяЗапись.Сумма				= Сумма;
	
КонецПроцедуры

Процедура ЗаполнитьСпособРасчетаПочтовогоСбора() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсполнительныйЛист.Ссылка,
	|	1 КАК УдалитьСпособРасчетаПС
	|ИЗ
	|	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	|ГДЕ
	|	ИсполнительныйЛист.ПроцентПочтовогоСбора = 0
	|	И ИсполнительныйЛист.УдалитьСпособРасчетаПС = 0";

	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка исполнительных листов.");
	
	НаборЗаписейТарифПочтовогоТарифаОрганизации = РегистрыСведений.ТарифПочтовогоСбораОрганизации.СоздатьНаборЗаписей();
	НаборЗаписейТарифПочтовогоТарифаОрганизации.Отбор.Организация.Использование = Истина;
	НаборЗаписейТарифПочтовогоТарифаОрганизации.Отбор.Организация.ВидСравнения = ВидСравнения.Равно;
	
	НоваяЗапись = НаборЗаписейТарифПочтовогоТарифаОрганизации.Добавить();
	НоваяЗапись.Тариф = Справочники.ТарифыПочтовогоСбора.НайтиПоНаименованию("по России");
	
	Выборка = Справочники.Организации.Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписейТарифПочтовогоТарифаОрганизации.Отбор.Организация.Значение = Выборка.Ссылка;
		НоваяЗапись.Организация = Выборка.Ссылка;
		НаборЗаписейТарифПочтовогоТарифаОрганизации.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПочтовыеСборы() Экспорт
	
	НовыйТариф					= Справочники.ТарифыПочтовогоСбора.СоздатьЭлемент();
	НовыйТариф.Наименование		= "по России";
	НовыйТариф.Записать();
	
	НовыйТариф = НовыйТариф.Ссылка;
	
	НаборЗаписейПочтовогоТарифа = РегистрыСведений.РазмерыТарифовПочтовогоСбора.СоздатьНаборЗаписей();
	
	НаборЗаписейПочтовогоТарифа.Отбор.Тариф.Использование = Истина;
	НаборЗаписейПочтовогоТарифа.Отбор.Тариф.ВидСравнения = ВидСравнения.Равно;
	НаборЗаписейПочтовогоТарифа.Отбор.Тариф.Значение = НовыйТариф;

	ЗаписатьСтрокуШкалыПочтовыхТарифов(НаборЗаписейПочтовогоТарифа, НовыйТариф, 1, 0, 1000, 5, 7);
	ЗаписатьСтрокуШкалыПочтовыхТарифов(НаборЗаписейПочтовогоТарифа, НовыйТариф, 2, 1000, 5000, 4, 57);
	ЗаписатьСтрокуШкалыПочтовыхТарифов(НаборЗаписейПочтовогоТарифа, НовыйТариф, 3, 5000, 20000, 2, 217);
	ЗаписатьСтрокуШкалыПочтовыхТарифов(НаборЗаписейПочтовогоТарифа, НовыйТариф, 4, 20000, 500000, 1, 517);

	НаборЗаписейПочтовогоТарифа.Записать(Истина);
	
	НовыйТариф					= Справочники.ТарифыПочтовогоСбора.СоздатьЭлемент();
	НовыйТариф.Наименование		= "в страны СНГ, Балтии и страны Дальнего зарубежья";
	НовыйТариф.Записать();
	
	НовыйТариф = НовыйТариф.Ссылка;

	НаборЗаписейПочтовогоТарифа.Отбор.Тариф.Использование = Истина;
	НаборЗаписейПочтовогоТарифа.Отбор.Тариф.ВидСравнения = ВидСравнения.Равно;
	НаборЗаписейПочтовогоТарифа.Отбор.Тариф.Значение = НовыйТариф;
	НаборЗаписейПочтовогоТарифа.Очистить();

	ЗаписатьСтрокуШкалыПочтовыхТарифов(НаборЗаписейПочтовогоТарифа, НовыйТариф, 1, 0, 1000, 8, 7);
	ЗаписатьСтрокуШкалыПочтовыхТарифов(НаборЗаписейПочтовогоТарифа, НовыйТариф, 2, 1000, 5000, 3.5, 87);
	ЗаписатьСтрокуШкалыПочтовыхТарифов(НаборЗаписейПочтовогоТарифа, НовыйТариф, 3, 5000, 20000, 2.5, 227);
	ЗаписатьСтрокуШкалыПочтовыхТарифов(НаборЗаписейПочтовогоТарифа, НовыйТариф, 4, 20000, 100000, 1.5, 602);

	НаборЗаписейПочтовогоТарифа.Записать(Истина);
	

КонецПроцедуры //ЗаполнитьПочтовыеСборы

Процедура ИсправитьСписаниеИмущественногоВычета() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.НДФЛИмущественныеВычетыФизлиц КАК НДФЛИмущественныеВычетыФизлиц
	|ГДЕ
	|	НДФЛИмущественныеВычетыФизлиц.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И (НЕ НДФЛИмущественныеВычетыФизлиц.Регистратор ССЫЛКА Документ.ПереносДанных)
	|	И (НЕ НДФЛИмущественныеВычетыФизлиц.Регистратор ССЫЛКА Документ.Сторнирование)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛИмущественныеВычетыФизлиц.Период,
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор КАК Регистратор,
	|	НДФЛИмущественныеВычетыФизлиц.НомерСтроки КАК НомерСтроки,
	|	НДФЛИмущественныеВычетыФизлиц.Активность,
	|	НДФЛИмущественныеВычетыФизлиц.ВидДвижения,
	|	НДФЛИмущественныеВычетыФизлиц.ФизЛицо,
	|	НДФЛИмущественныеВычетыФизлиц.Организация,
	|	НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный,
	|	НДФЛИмущественныеВычетыФизлиц.Год,
	|	НДФЛИмущественныеВычетыФизлиц.Размер,
	|	НДФЛИмущественныеВычетыФизлиц.КодПоОКАТО,
	|	НДФЛИмущественныеВычетыФизлиц.КПП,
	|	НДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации,
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор.Организация КАК ОбособленноеПодразделение
	|ИЗ
	|	РегистрНакопления.НДФЛИмущественныеВычетыФизлиц КАК НДФЛИмущественныеВычетыФизлиц
	|ГДЕ
	|	НДФЛИмущественныеВычетыФизлиц.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.НДФЛИмущественныеВычетыФизлиц, Запрос, "Обработка документов Перерасчет НДФЛ");	
	
КонецПроцедуры

Процедура ОбработатьПремииПоПрошломуМесяцу() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка,
	|	ИСТИНА КАК НачисляетсяВЦеломЗаМесяц
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	(НЕ ОсновныеНачисленияОрганизаций.НачисляетсяВЦеломЗаМесяц)
	|	И (НЕ ОсновныеНачисленияОрганизаций.ПериодДействияБазовый)
	|	И ОсновныеНачисленияОрганизаций.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом))";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка премий с расчетной базой по прошлому месяцу.");

КонецПроцедуры

// Процедура проверяет и восстанавливает настройки ПВР ДниНеоплачиваемыеСогласноТабелю
// т.к. для этого ПВР закрывается доступ на редактирование его реквизитов
Процедура ОбновитьНастройкиПВРДниНеоплачиваемыеСогласноТабелю() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка,
	|	Начисления.ПометкаУдаления КАК НадоПерезаписать,
	|	NULL КАК НадоОчиститьВедущие
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК Начисления
	|ГДЕ
	|	Начисления.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ДниНеоплачиваемыеСогласноТабелю)
	|	И (Начисления.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.НулеваяСумма)
	|			ИЛИ Начисления.ВидВремени <> ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЦелодневноеНеотработанное)
	|			ИЛИ Начисления.ОбозначениеВТабелеУчетаРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам)
	|			ИЛИ Начисления.КатегорияРасчета <> ЗНАЧЕНИЕ(Справочник.КатегорииРасчетов.Первичное)
	|			ИЛИ Начисления.ЗачетОтработанногоВремени
	|			ИЛИ (НЕ Начисления.ЗачетНормыВремени)
	|			ИЛИ Начисления.КодДоходаФСС_НС <> ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|			ИЛИ Начисления.КодДоходаНДФЛ <> ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.ПустаяСсылка)
	|			ИЛИ Начисления.КодДоходаЕСН <> ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПустаяСсылка)
	|			ИЛИ Начисления.КодДоходаСтраховыеВзносы <> ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка)
	|			ИЛИ Начисления.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВедущиеВидыРасчета.Ссылка,
	|	NULL,
	|	КОЛИЧЕСТВО(ВедущиеВидыРасчета.НомерСтроки)
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК ВедущиеВидыРасчета
	|ГДЕ
	|	ВедущиеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ДниНеоплачиваемыеСогласноТабелю)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВедущиеВидыРасчета.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.НадоПерезаписать <> NULL Тогда
			СпРасчета  = Перечисления.СпособыРасчетаОплатыТруда;
			УчетВремени = Справочники.КлассификаторИспользованияРабочегоВремени;
			ПроцедурыОбновленияИнформационнойБазыПереопределяемый.УстановитьРеквизитыОсновногоНачисленияОрганизации(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДниНеоплачиваемыеСогласноТабелю, СпРасчета.НулеваяСумма, Перечисления.ВидыВремени.ЦелодневноеНеотработанное, Справочники.КатегорииРасчетов.Первичное, УчетВремени.НеявкиПоНевыясненнымПричинам, Ложь,   Истина, , , , Перечисления.ДоходыФСС_НС.Облагается,,,,Ложь);	
		ИначеЕсли Выборка.НадоОчиститьВедущие <> NULL Тогда
			ПВРОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ПВРОбъект.ВедущиеВидыРасчета.Очистить();
			ПВРОбъект.ОбменДанными.Загрузка = Истина;
			ПВРОбъект.Записать();
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ОбновитьНастройкиПВРДниНеоплачиваемыеСогласноТабелю()

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьРасчетныйПериодВДокументахОплатыПоСреднему() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетСреднегоЗаработка.Регистратор КАК Регистратор,
	|	МИНИМУМ(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) КАК ПериодРасчетаСреднегоЗаработкаНачало,
	|	МАКСИМУМ(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК ПериодРасчетаСреднегоЗаработкаОкончание,
	|	НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия КАК ДатаНачалаСобытия
	|ПОМЕСТИТЬ ВТДанныеРегистраНачислениеОтпуска
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеОтпускаРаботникамОрганизаций КАК НачислениеОтпускаРаботникамОрганизаций
	|		ПО РасчетСреднегоЗаработка.Регистратор = НачислениеОтпускаРаботникамОрганизаций.Ссылка
	|ГДЕ
	|	НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И НачислениеОтпускаРаботникамОрганизаций.ПериодРасчетаСреднегоЗаработкаНачало = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетСреднегоЗаработка.Регистратор,
	|	НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСреднегоЗаработка.Регистратор КАК Регистратор,
	|	МИНИМУМ(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) КАК ПериодРасчетаСреднегоЗаработкаНачало,
	|	МАКСИМУМ(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК ПериодРасчетаСреднегоЗаработкаОкончание
	|ПОМЕСТИТЬ ВТДанныеРегистраУвольнение
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасчетПриУвольненииРаботникаОрганизаций КАК РасчетПриУвольненииРаботникаОрганизаций
	|		ПО РасчетСреднегоЗаработка.Регистратор = РасчетПриУвольненииРаботникаОрганизаций.Ссылка
	|ГДЕ
	|	РасчетПриУвольненииРаботникаОрганизаций.ПериодРасчетаСреднегоЗаработкаНачало = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетСреднегоЗаработка.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплатаПоСреднемуЗаработку.Ссылка КАК Ссылка,
	|	ОплатаПоСреднемуЗаработку.ДатаНачала КАК ДатаНачалаСобытия,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ОплатаПоСреднемуЗаработку.ДатаНачала, МЕСЯЦ), МЕСЯЦ, -ВЫБОР
	|			КОГДА ОплатаПоСреднемуЗаработку.ВидРасчета.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|				ТОГДА ОплатаПоСреднемуЗаработку.ВидРасчета.ПериодРасчетаСреднегоЗаработка
	|			ИНАЧЕ 12
	|		КОНЕЦ) КАК ПериодРасчетаСреднегоЗаработкаНачало,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ОплатаПоСреднемуЗаработку.ДатаНачала, МЕСЯЦ), СЕКУНДА, -1) КАК ПериодРасчетаСреднегоЗаработкаОкончание
	|ИЗ
	|	Документ.ОплатаПоСреднемуЗаработку КАК ОплатаПоСреднемуЗаработку
	|ГДЕ
	|	ОплатаПоСреднемуЗаработку.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ОплатаПоСреднемуЗаработку.ПериодРасчетаСреднегоЗаработкаНачало = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.ДатаНачалаСобытия,
	|	ДанныеРегистра.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ДанныеРегистра.ПериодРасчетаСреднегоЗаработкаОкончание
	|ИЗ
	|	ВТДанныеРегистраНачислениеОтпуска КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеОтпускаРаботникамОрганизаций.Ссылка,
	|	НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия, МЕСЯЦ), МЕСЯЦ, -ВЫБОР
	|			КОГДА НачислениеОтпускаРаботникамОрганизаций.ОсновнойОтпуск
	|				ТОГДА ВЫБОР
	|						КОГДА ПараметрыВидаРасчетаОсновногоОтпуска.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|							ТОГДА ПараметрыВидаРасчетаОсновногоОтпуска.ПериодРасчетаСреднегоЗаработка
	|						КОГДА НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия < ДАТАВРЕМЯ(2006, 10, 6, 0, 0, 0)
	|							ТОГДА 3
	|						ИНАЧЕ 12
	|					КОНЕЦ
	|			КОГДА НачислениеОтпускаРаботникамОрганизаций.ДополнительныйОтпуск
	|				ТОГДА ВЫБОР
	|						КОГДА НачислениеОтпускаРаботникамОрганизаций.ВидРасчетаДополнительногоОтпуска.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|							ТОГДА НачислениеОтпускаРаботникамОрганизаций.ВидРасчетаДополнительногоОтпуска.ПериодРасчетаСреднегоЗаработка
	|						КОГДА НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия < ДАТАВРЕМЯ(2006, 10, 6, 0, 0, 0)
	|							ТОГДА 3
	|						ИНАЧЕ 12
	|					КОНЕЦ
	|			КОГДА НачислениеОтпускаРаботникамОрганизаций.КомпенсацияОтпуска
	|				ТОГДА ВЫБОР
	|						КОГДА ПараметрыВидаРасчетаКомпенсация.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|							ТОГДА ПараметрыВидаРасчетаКомпенсация.ЧислоМесяцев
	|						КОГДА НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия < ДАТАВРЕМЯ(2006, 10, 6, 0, 0, 0)
	|							ТОГДА 3
	|						ИНАЧЕ 12
	|					КОНЕЦ
	|			ИНАЧЕ 12
	|		КОНЕЦ),
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия, МЕСЯЦ), СЕКУНДА, -1)
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК НачислениеОтпускаРаботникамОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ПараметрыВидаРасчетаОсновногоОтпуска
	|		ПО (ПараметрыВидаРасчетаОсновногоОтпуска.Ссылка = ВЫБОР
	|				КОГДА НачислениеОтпускаРаботникамОрганизаций.ПорядокРасчетаОсновногоОтпуска = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаОтпуска.ПоКалендарнымДням)
	|					ТОГДА ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпШестидневка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ПараметрыВидаРасчетаКомпенсация
	|		ПО (ПараметрыВидаРасчетаКомпенсация.Ссылка = ВЫБОР
	|				КОГДА НачислениеОтпускаРаботникамОрганизаций.ПорядокРасчетаКомпенсацииОтпуска = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаОтпуска.ПоКалендарнымДням)
	|					ТОГДА ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсацияОтпускаКалендарныеДниБезУвольнения)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсацияОтпускаШестидневкаБезУвольнения)
	|			КОНЕЦ)
	|ГДЕ
	|	НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаСобытия <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И НачислениеОтпускаРаботникамОрганизаций.ПериодРасчетаСреднегоЗаработкаНачало = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И (НЕ НачислениеОтпускаРаботникамОрганизаций.Ссылка В
	|				(ВЫБРАТЬ
	|					ДанныеРегистра.Регистратор
	|				ИЗ
	|					ВТДанныеРегистраНачислениеОтпуска КАК ДанныеРегистра))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
	|	ДанныеРегистра.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ДанныеРегистра.ПериодРасчетаСреднегоЗаработкаОкончание
	|ИЗ
	|	ВТДанныеРегистраУвольнение КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетПриУвольненииРаботникаОрганизаций.Ссылка,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0),
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(РасчетПриУвольненииРаботникаОрганизаций.ДатаУвольнения, МЕСЯЦ), МЕСЯЦ, -ВЫБОР
	|			КОГДА РасчетПриУвольненииРаботникаОрганизаций.ДнейЧасовКомпенсацииУдержанияОтпуска <> 0
	|				ТОГДА ВЫБОР
	|						КОГДА РасчетПриУвольненииРаботникаОрганизаций.ПризнакКомпенсацииОтпуска
	|							ТОГДА ВЫБОР
	|									КОГДА ПараметрыВидаРасчетаКомпенсация.ЧислоМесяцев = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|										ТОГДА ПараметрыВидаРасчетаКомпенсация.ЧислоМесяцев
	|									КОГДА РасчетПриУвольненииРаботникаОрганизаций.ДатаУвольнения < ДАТАВРЕМЯ(2006, 10, 6, 0, 0, 0)
	|										ТОГДА 3
	|									ИНАЧЕ 12
	|								КОНЕЦ
	|						КОГДА ЕСТЬNULL(ВариантыВстроенныхАлгоритмовРасчетаЗарплаты.УдержаниеЗаОтпускУменьшаетНалоги, ЛОЖЬ)
	|							ТОГДА ВЫБОР
	|									КОГДА ПараметрыВидаРасчетаНачислениеКакУдержание.ЧислоМесяцев = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|										ТОГДА ПараметрыВидаРасчетаНачислениеКакУдержание.ЧислоМесяцев
	|									КОГДА РасчетПриУвольненииРаботникаОрганизаций.ДатаУвольнения < ДАТАВРЕМЯ(2006, 10, 6, 0, 0, 0)
	|										ТОГДА 3
	|									ИНАЧЕ 12
	|								КОНЕЦ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ПараметрыВидаРасчетаУдержание.ПериодРасчетаСреднегоЗаработка = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|									ТОГДА ПараметрыВидаРасчетаУдержание.ПериодРасчетаСреднегоЗаработка
	|								КОГДА РасчетПриУвольненииРаботникаОрганизаций.ДатаУвольнения < ДАТАВРЕМЯ(2006, 10, 6, 0, 0, 0)
	|									ТОГДА 3
	|								ИНАЧЕ 12
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОГДА РасчетПриУвольненииРаботникаОрганизаций.ДнейЧасовВыходногоПособия <> 0
	|				ТОГДА ВЫБОР
	|						КОГДА ПараметрыВидаРасчетаКомпенсация.ЧислоМесяцев = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|							ТОГДА ПараметрыВидаРасчетаКомпенсация.ЧислоМесяцев
	|						ИНАЧЕ 12
	|					КОНЕЦ
	|			КОГДА РасчетПриУвольненииРаботникаОрганизаций.ДнейЧасовСохраненияСреднегоЗаработка <> 0
	|				ТОГДА ВЫБОР
	|						КОГДА ПараметрыВидаРасчетаКомпенсация.ЧислоМесяцев = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|							ТОГДА ПараметрыВидаРасчетаКомпенсация.ЧислоМесяцев
	|						ИНАЧЕ 12
	|					КОНЕЦ
	|			ИНАЧЕ 12
	|		КОНЕЦ),
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(РасчетПриУвольненииРаботникаОрганизаций.ДатаУвольнения, МЕСЯЦ), СЕКУНДА, -1)
	|ИЗ
	|	Документ.РасчетПриУвольненииРаботникаОрганизаций КАК РасчетПриУвольненииРаботникаОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыВстроенныхАлгоритмовРасчетаЗарплаты КАК ВариантыВстроенныхАлгоритмовРасчетаЗарплаты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ПараметрыВидаРасчетаКомпенсация
	|		ПО (ПараметрыВидаРасчетаКомпенсация.Ссылка = ВЫБОР
	|				КОГДА РасчетПриУвольненииРаботникаОрганизаций.ПорядокРасчетаОтпуска = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаОтпуска.ПоКалендарнымДням)
	|					ТОГДА ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсацияОтпускаКалендарныеДни)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсацияОтпускаШестидневка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ПараметрыВидаРасчетаНачислениеКакУдержание
	|		ПО (ПараметрыВидаРасчетаНачислениеКакУдержание.Ссылка = ВЫБОР
	|				КОГДА РасчетПриУвольненииРаботникаОрганизаций.ПорядокРасчетаОтпуска = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаОтпуска.ПоКалендарнымДням)
	|					ТОГДА ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.УдержаниеЗаНеотработанныйОтпускКалендарныеДни)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.УдержаниеЗаНеотработанныйОтпускШестидневка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций КАК ПараметрыВидаРасчетаУдержание
	|		ПО (ПараметрыВидаРасчетаУдержание.Ссылка = ВЫБОР
	|				КОГДА РасчетПриУвольненииРаботникаОрганизаций.ПорядокРасчетаОтпуска = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаОтпуска.ПоКалендарнымДням)
	|					ТОГДА ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.УдержаниеЗаНеотработанныйОтпускКалендарныеДни)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.УдержаниеЗаНеотработанныйОтпускШестидневка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ПараметрыВидаРасчетаВыходногоПособия
	|		ПО (ПараметрыВидаРасчетаВыходногоПособия.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВыходноеПособие))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ПараметрыВидаРасчетаСохраненияСреднегоЗаработка
	|		ПО (ПараметрыВидаРасчетаСохраненияСреднегоЗаработка.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.СохраняемыйЗаработокНаВремяТрудоустройства))
	|ГДЕ
	|	РасчетПриУвольненииРаботникаОрганизаций.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И РасчетПриУвольненииРаботникаОрганизаций.ПериодРасчетаСреднегоЗаработкаНачало = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И (НЕ РасчетПриУвольненииРаботникаОрганизаций.Ссылка В
	|				(ВЫБРАТЬ
	|					ДанныеРегистра.Регистратор
	|				ИЗ
	|					ВТДанныеРегистраУвольнение КАК ДанныеРегистра))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияПростоевРаботниковОрганизаций.Ссылка,
	|	РегистрацияПростоевРаботниковОрганизаций.ДатаНачала,
	|	ВЫБОР
	|		КОГДА РегистрацияПростоевРаботниковОрганизаций.ВидПростоя = ЗНАЧЕНИЕ(Перечисление.ВидыПростояРаботника.ПоВинеРаботодателя)
	|			ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(РегистрацияПростоевРаботниковОрганизаций.ДатаНачала, МЕСЯЦ), МЕСЯЦ, -ВЫБОР
	|						КОГДА ПараметрыВидаРасчета.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|							ТОГДА ПараметрыВидаРасчета.ПериодРасчетаСреднегоЗаработка
	|						ИНАЧЕ 12
	|					КОНЕЦ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РегистрацияПростоевРаботниковОрганизаций.ВидПростоя = ЗНАЧЕНИЕ(Перечисление.ВидыПростояРаботника.ПоВинеРаботодателя)
	|			ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(РегистрацияПростоевРаботниковОрганизаций.ДатаНачала, МЕСЯЦ), СЕКУНДА, -1)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ
	|ИЗ
	|	Документ.РегистрацияПростоевРаботниковОрганизаций КАК РегистрацияПростоевРаботниковОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ПараметрыВидаРасчета
	|		ПО (ПараметрыВидаРасчета.Ссылка = ВЫБОР
	|				КОГДА РегистрацияПростоевРаботниковОрганизаций.СпособРегистрацииВремени = ЗНАЧЕНИЕ(Перечисление.СпособыРегистрацииВремени.РегистрацияДляЦелойСмены)
	|					ТОГДА ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПростойПоВинеРаботодателя)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПочасовойПростойПоВинеРаботодателя)
	|			КОНЕЦ)
	|ГДЕ
	|	РегистрацияПростоевРаботниковОрганизаций.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И РегистрацияПростоевРаботниковОрганизаций.ДатаНачалаСобытия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И РегистрацияПростоевРаботниковОрганизаций.ВидПростоя = ЗНАЧЕНИЕ(Перечисление.ВидыПростояРаботника.ПоВинеРаботодателя)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";

	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов среднего заработка");

КонецПроцедуры

Процедура ОбновлениеСтавкиРефинансированияЦБАпрель2010() Экспорт
	
	СтавкаЦБ = РегистрыСведений.СтавкаРефинансированияЦБ.СоздатьНаборЗаписей();
	СтавкаЦБ.Отбор.Период.Установить('20100430');
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20100430';
	СтрокаНабора.Размер = 8;
	СтавкаЦБ.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновлениеСтавкиРефинансированияЦБМай2010() Экспорт
	
	СтавкаЦБ = РегистрыСведений.СтавкаРефинансированияЦБ.СоздатьНаборЗаписей();
	СтавкаЦБ.Отбор.Период.Установить('20100601');
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20100601';
	СтрокаНабора.Размер = 7.75;
	СтавкаЦБ.Записать();
	
КонецПроцедуры

Процедура ОбновлениеДокументовПерсучета2010() Экспорт
	
	// Прописываем номера пачек

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АнкетаЗастрахованногоЛица.Ссылка,
	|	АнкетаЗастрахованногоЛица.Номер КАК Номер,
	|	АнкетаЗастрахованногоЛица.Организация КАК Организация,
	|	ГОД(АнкетаЗастрахованногоЛица.Дата) КАК Год,
	|	АнкетаЗастрахованногоЛица.НомерПачки
	|ИЗ
	|	Документ.АнкетаЗастрахованногоЛица КАК АнкетаЗастрахованногоЛица
	|ГДЕ
	|	АнкетаЗастрахованногоЛица.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Ссылка,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Номер,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация,
	|	ГОД(ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Дата),
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.НомерПачки
	|ИЗ
	|	Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства
	|ГДЕ
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаДСВвПФР.Ссылка,
	|	ПередачаДСВвПФР.Номер,
	|	ПередачаДСВвПФР.Организация,
	|	ГОД(ПередачаДСВвПФР.Дата),
	|	ПередачаДСВвПФР.НомерПачки
	|ИЗ
	|	Документ.ПередачаДСВвПФР КАК ПередачаДСВвПФР
	|ГДЕ
	|	ПередачаДСВвПФР.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.Номер,
	|	ПередачаСЗВ4вПФР.Организация,
	|	ГОД(ПередачаСЗВ4вПФР.Дата),
	|	ПередачаСЗВ4вПФР.НомерПачки
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрДСВ3.Ссылка,
	|	РеестрДСВ3.Номер,
	|	РеестрДСВ3.Организация,
	|	ГОД(РеестрДСВ3.Дата),
	|	РеестрДСВ3.НомерПачки
	|ИЗ
	|	Документ.РеестрДСВ3 КАК РеестрДСВ3
	|ГДЕ
	|	РеестрДСВ3.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Ссылка,
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Номер,
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Организация,
	|	ГОД(СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Дата),
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.НомерПачки
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК КАК СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК
	|ГДЕ
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Номер,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация,
	|	ГОД(СведенияОТрудовомСтажеИЗаработкеСЗВ4.Дата),
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.НомерПачки
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Год,
	|	Организация,
	|	Номер";
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = "Обработка документов перс.учета, часть I";
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	Выборка = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = Выборка.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока Выборка.СледующийПоЗначениюПоля("Год") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
			
			НомерПачки = "";
			Пока Выборка.Следующий() Цикл
				Если Не ЗначениеЗаполнено(Выборка.НомерПачки) Тогда
					ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
					ДокументОбъект.НомерПачки = ПроцедурыПерсонифицированногоУчета.НомерПачкиДокумента(Выборка.Номер);
					ДокументОбъект.ОбменДанными.Загрузка = Истина;
					ДокументОбъект.Записать();
					Если ОбщегоНазначенияЗК.ТолькоЦифрыВСтроке(ДокументОбъект.НомерПачки, , Ложь) И НомерПачки < ДокументОбъект.НомерПачки Тогда
						НомерПачки = ДокументОбъект.НомерПачки
					КонецЕсли;
				Иначе 
					Если ОбщегоНазначенияЗК.ТолькоЦифрыВСтроке(Выборка.НомерПачки, , Ложь) И НомерПачки < Выборка.НомерПачки Тогда
						НомерПачки = Выборка.НомерПачки
					КонецЕсли;
				КонецЕсли;
				#Если ТолстыйКлиентОбычноеПриложение Тогда
					Если Номер % 30 = 0 Тогда
						Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
					КонецЕсли;
					Номер = Номер + 1;
				#КонецЕсли
			КонецЦикла;
		
			ТекущийНомер = РегламентированнаяОтчетность.ПолучитьСчетчикВыгруженныхФайловПФР(Выборка.Организация, Выборка.Год);
			НомерПачки = ?(Не ЗначениеЗаполнено(НомерПачки),0,Число(НомерПачки));
			Если НомерПачки > ТекущийНомер Тогда
				РегламентированнаяОтчетность.УстановитьСчетчикВыгруженныхФайловПФР(Выборка.Организация, Выборка.Год, НомерПачки);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
	// Обрабатываем данные о стаже
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиОСтажеДляСЗВ4.ФизЛицо КАК ФизЛицо,
	|	ЗаписиОСтажеДляСЗВ4.ОбособленноеПодразделение,
	|	ЗаписиОСтажеДляСЗВ4.КатегорияЗастрахованныхЛиц,
	|	ЗаписиОСтажеДляСЗВ4.НомерОсновнойЗаписи,
	|	ЗаписиОСтажеДляСЗВ4.НомерДополнительнойЗаписи,
	|	ЗаписиОСтажеДляСЗВ4.Год КАК Год,
	|	ЗаписиОСтажеДляСЗВ4.ДатаНачалаПериода,
	|	ЗаписиОСтажеДляСЗВ4.ДатаОкончанияПериода,
	|	ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда,
	|	ЗаписиОСтажеДляСЗВ4.КодПозицииСписка,
	|	ЗаписиОСтажеДляСЗВ4.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВ4.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВ4.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВ4.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВ4.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВ4.ТретийПараметрВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВ4.ТерриториальныеУсловия
	|ИЗ
	|	РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ЗаписиОСтажеДляСЗВ4
	|ГДЕ
	|	ЗаписиОСтажеДляСЗВ4.Год < 2010
	|	И ЗаписиОСтажеДляСЗВ4.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Год,
	|	ФизЛицо";
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = "Обработка данных о стаже для перс.учета, часть I";
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	Выборка = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = Выборка.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока Выборка.СледующийПоЗначениюПоля("Год") Цикл
		НаборЗаписей = РегистрыСведений.ЗаписиОСтажеДляСЗВ4.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизЛицо.Использование = Истина;
		НаборЗаписей.Отбор.Год.Использование = Истина;
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		
		НаборЗаписей.Отбор.Год.Значение = Выборка.Год;
		Пока Выборка.СледующийПоЗначениюПоля("ФизЛицо") Цикл
			НаборЗаписей.Отбор.ФизЛицо.Значение = Выборка.ФизЛицо;
			Пока Выборка.Следующий() Цикл
				СтрокаНабора = НаборЗаписей.Добавить();
			    ЗаполнитьЗначенияСвойств(СтрокаНабора,Выборка);
				СтрокаНабора.ОтчетныйПериод = Дата(Выборка.Год, 1, 1);
				#Если ТолстыйКлиентОбычноеПриложение Тогда
					Если Номер % 30 = 0 Тогда
						Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
					КонецЕсли;
					Номер = Номер + 1;
				#КонецЕсли
			КонецЦикла;
			НаборЗаписей.Записать();
			НаборЗаписей.Очистить();
		КонецЦикла;
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиОСтажеДляСЗВ4.Год КАК Год
	|ИЗ
	|	РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ЗаписиОСтажеДляСЗВ4
	|ГДЕ
	|	ЗаписиОСтажеДляСЗВ4.Год >= 2010
	|	И ЗаписиОСтажеДляСЗВ4.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	ТекстСообщения = "Обработка данных о стаже для перс.учета, часть II";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ЗаписиОСтажеДляСЗВ4.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Отбор.ОтчетныйПериод.Установить('00010101');
		НаборЗаписей.Отбор.Год.Установить(Выборка.Год);
		НаборЗаписей.Записать();
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли

	// В документах прошлых лет проставляем значения новых реквизитов
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.Год,
	|	ПередачаСЗВ4вПФР.Дата КАК Дата,
	|	ПередачаСЗВ4вПФР.Организация КАК Организация,
	|	"""" КАК ТипСведенийСЗВ,
	|	ПередачаСЗВ4вПФР.Руководитель,
	|	ПередачаСЗВ4вПФР.ДолжностьРуководителя
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Год < 2010
	|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Дата,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация,
	|	ВЫБОР
	|		КОГДА СведенияОТрудовомСтажеИЗаработкеСЗВ4.УдалитьТипСведений = ""ИСХД""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ПЕНСИОННАЯ)
	|	КОНЕЦ,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Руководитель,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ДолжностьРуководителя
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год < 2010
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыРегистра.Ссылка КАК Ссылка,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо КАК Руководитель,
	|	ОтветственныеЛицаОрганизаций.Должность КАК ДолжностьРуководителя,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо.Наименование
	|ПОМЕСТИТЬ ВТДанныеРуководителя
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ОтветственныеЛицаОрганизаций.Период) КАК Период,
	|		Документы.Ссылка КАК Ссылка,
	|		Документы.Организация КАК Организация
	|	ИЗ
	|		ВТДокументы КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|			ПО Документы.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|				И Документы.Дата >= ОтветственныеЛицаОрганизаций.Период
	|	ГДЕ
	|		ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|		И Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		Документы.Организация) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|		ПО ПериодыРегистра.Период = ОтветственныеЛицаОрганизаций.Период
	|			И ПериодыРегистра.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|ГДЕ
	|	ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2009 КАК Год,
	|	ДАТАВРЕМЯ(2009, 1, 1, 0, 0, 0) КАК ОтчетныйПериод
	|ПОМЕСТИТЬ ВТОтчетныеПериоды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2008,
	|	ДАТАВРЕМЯ(2008, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2007,
	|	ДАТАВРЕМЯ(2007, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2006,
	|	ДАТАВРЕМЯ(2006, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2005,
	|	ДАТАВРЕМЯ(2005, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2004,
	|	ДАТАВРЕМЯ(2004, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2003,
	|	ДАТАВРЕМЯ(2003, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2002,
	|	ДАТАВРЕМЯ(2002, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2001,
	|	ДАТАВРЕМЯ(2001, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2000,
	|	ДАТАВРЕМЯ(2000, 1, 1, 0, 0, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка,
	|	Документы.Год,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.Руководитель
	|		ИНАЧЕ Документы.Руководитель
	|	КОНЕЦ КАК Руководитель,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.ДолжностьРуководителя
	|		ИНАЧЕ Документы.ДолжностьРуководителя
	|	КОНЕЦ КАК ДолжностьРуководителя,
	|	Документы.ТипСведенийСЗВ,
	|	ЕСТЬNULL(ОтчетныеПериоды.ОтчетныйПериод, ДАТАВРЕМЯ(2000, 1, 1, 0, 0, 0)) КАК ОтчетныйПериод
	|ИЗ
	|	ВТДокументы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеРуководителя КАК ДанныеРуководителя
	|		ПО Документы.Ссылка = ДанныеРуководителя.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтчетныеПериоды КАК ОтчетныеПериоды
	|		ПО Документы.Год = ОтчетныеПериоды.Год";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов перс.учета, часть II");
	
	// Фиксируем пенсионные документы 2010 года, чтобы их можно было еще раз посмотреть 
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Дата,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Руководитель,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ДолжностьРуководителя
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Проведен
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год = 2010
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.УдалитьТипСведений = ""ПЕНС""
	|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.СпециальныйДокумент2010года)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.Дата,
	|	ПередачаСЗВ4вПФР.Организация,
	|	ПередачаСЗВ4вПФР.Руководитель,
	|	ПередачаСЗВ4вПФР.ДолжностьРуководителя
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Проведен
	|	И ПередачаСЗВ4вПФР.Год = 2010
	|	И (НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2010года)
	|	И ПередачаСЗВ4вПФР.ТипСведений = ""ПЕНС""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыРегистра.Ссылка КАК Ссылка,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо КАК Руководитель,
	|	ОтветственныеЛицаОрганизаций.Должность КАК ДолжностьРуководителя,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо.Наименование
	|ПОМЕСТИТЬ ВТДанныеРуководителя
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ОтветственныеЛицаОрганизаций.Период) КАК Период,
	|		Документы.Ссылка КАК Ссылка,
	|		Документы.Организация КАК Организация
	|	ИЗ
	|		ВТДокументы КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|			ПО Документы.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|				И Документы.Дата >= ОтветственныеЛицаОрганизаций.Период
	|	ГДЕ
	|		ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|		И Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		Документы.Организация) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|		ПО ПериодыРегистра.Период = ОтветственныеЛицаОрганизаций.Период
	|			И ПериодыРегистра.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|ГДЕ
	|	ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка,
	|	ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0) КАК ОтчетныйПериод,
	|	ИСТИНА КАК СпециальныйДокумент2010года,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.Руководитель
	|		ИНАЧЕ Документы.Руководитель
	|	КОНЕЦ КАК Руководитель,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.ДолжностьРуководителя
	|		ИНАЧЕ Документы.ДолжностьРуководителя
	|	КОНЕЦ КАК ДолжностьРуководителя
	|ИЗ
	|	ВТДокументы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеРуководителя КАК ДанныеРуководителя
	|		ПО Документы.Ссылка = ДанныеРуководителя.Ссылка";;
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов перс.учета, часть III");
	
	// Прочие документы 2010 года помечаем на удаление 
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Дата,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Проведен,
	|	ВЫБОР
	|		КОГДА СведенияОТрудовомСтажеИЗаработкеСЗВ4.УдалитьТипСведений = ""ИСХД""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ПЕНСИОННАЯ)
	|	КОНЕЦ КАК ТипСведенийСЗВ,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Руководитель,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ДолжностьРуководителя
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год >= 2010
	|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.СпециальныйДокумент2010года)
	|	И ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.Дата,
	|	ПередачаСЗВ4вПФР.Организация,
	|	ПередачаСЗВ4вПФР.Проведен,
	|	"""",
	|	ПередачаСЗВ4вПФР.Руководитель,
	|	ПередачаСЗВ4вПФР.ДолжностьРуководителя
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Год >= 2010
	|	И (НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2010года)
	|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыРегистра.Ссылка КАК Ссылка,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо КАК Руководитель,
	|	ОтветственныеЛицаОрганизаций.Должность КАК ДолжностьРуководителя,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо.Наименование
	|ПОМЕСТИТЬ ВТДанныеРуководителя
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ОтветственныеЛицаОрганизаций.Период) КАК Период,
	|		Документы.Ссылка КАК Ссылка,
	|		Документы.Организация КАК Организация
	|	ИЗ
	|		ВТДокументы КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|			ПО Документы.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|				И Документы.Дата >= ОтветственныеЛицаОрганизаций.Период
	|	ГДЕ
	|		ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|		И Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		Документы.Организация) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|		ПО ПериодыРегистра.Период = ОтветственныеЛицаОрганизаций.Период
	|			И ПериодыРегистра.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|ГДЕ
	|	ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка,
	|	Документы.ТипСведенийСЗВ,
	|	Документы.Проведен,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.Руководитель
	|		ИНАЧЕ Документы.Руководитель
	|	КОНЕЦ КАК Руководитель,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.ДолжностьРуководителя
	|		ИНАЧЕ Документы.ДолжностьРуководителя
	|	КОНЕЦ КАК ДолжностьРуководителя,
	|	ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0) КАК ОтчетныйПериод,
	|	ИСТИНА КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ПринятоВПФР
	|ИЗ
	|	ВТДокументы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеРуководителя КАК ДанныеРуководителя
	|		ПО Документы.Ссылка = ДанныеРуководителя.Ссылка";
	
	ТекстСообщения = "Обработка документов перс.учета, часть IV";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаОбъектов.Следующий() Цикл
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект,ВыборкаОбъектов,, "Проведен");
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Если Номер % 30 = 0 Тогда
				Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
			КонецЕсли;
			Номер = Номер + 1;
		#КонецЕсли
		Если ВыборкаОбъектов.Проведен Тогда
			Объект.ОбменДанными.Загрузка = Ложь;
			Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			Объект.ОбменДанными.Загрузка = Истина;
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Застрахованные.Ссылка КАК Ссылка,
	|	Застрахованные.ФизЛицо
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК Застрахованные
	|ГДЕ
	|	Застрахованные.СтраховойНомерПФР = """"
	|	И Застрахованные.ФизЛицо.СтраховойНомерПФР <> """"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&ДатаАктуальности,
	|			ФизЛицо В
	|				(ВЫБРАТЬ
	|					Лица.ФизЛицо КАК ФизЛицо
	|				ИЗ
	|					ВТДокументы КАК Лица)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Ссылка КАК Ссылка,
	|	Застрахованные.НомерСтроки КАК НомерСтроки,
	|	Застрахованные.ФизЛицо,
	|	Застрахованные.АдресДляИнформирования,
	|	ВЫБОР
	|		КОГДА Застрахованные.СтраховойНомерПФР = """"
	|			ТОГДА Застрахованные.ФизЛицо.СтраховойНомерПФР
	|		ИНАЧЕ Застрахованные.СтраховойНомерПФР
	|	КОНЕЦ КАК СтраховойНомерПФР,
	|	ВЫБОР
	|		КОГДА Застрахованные.Фамилия = """"
	|			ТОГДА ЕСТЬNULL(ФИО.Фамилия, """")
	|		ИНАЧЕ Застрахованные.Фамилия
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА Застрахованные.Имя = """"
	|			ТОГДА ЕСТЬNULL(ФИО.Имя, """")
	|		ИНАЧЕ Застрахованные.Имя
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА Застрахованные.Отчество = """"
	|			ТОГДА ЕСТЬNULL(ФИО.Отчество, """")
	|		ИНАЧЕ Застрахованные.Отчество
	|	КОНЕЦ КАК Отчество,
	|	Застрахованные.НачисленоСтраховая,
	|	Застрахованные.УплаченоСтраховая,
	|	Застрахованные.НачисленоНакопительная,
	|	Застрахованные.УплаченоНакопительная
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК Застрахованные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Застрахованные.ФизЛицо = ФИО.ФизЛицо
	|ГДЕ
	|	Застрахованные.Ссылка В
	|			(ВЫБРАТЬ
	|				Документы.Ссылка
	|			ИЗ
	|				ВТДокументы КАК Документы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	Запрос.УстановитьПараметр("ДатаАктуальности", ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "РаботникиОрганизации", "Обработка документов перс.учета, часть V");
	
КонецПроцедуры

Процедура ВосстановлениеФлажковВОтпусках() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеОтпускаРаботникамОрганизаций.Ссылка,
	|	ВЫБОР
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ОсновнойОтпуск
	|			ТОГДА НачислениеОтпускаРаботникамОрганизаций.ОсновнойОтпуск
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаОсновногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОсновнойОтпуск,
	|	ВЫБОР
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ДополнительныйОтпуск
	|			ТОГДА НачислениеОтпускаРаботникамОрганизаций.ДополнительныйОтпуск
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаДополнительногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДополнительныйОтпуск
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК НачислениеОтпускаРаботникамОрганизаций
	|ГДЕ
	|	(НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаОсновногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И (НЕ НачислениеОтпускаРаботникамОрганизаций.ОсновнойОтпуск)
	|			ИЛИ НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаДополнительногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И (НЕ НачислениеОтпускаРаботникамОрганизаций.ДополнительныйОтпуск))";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов начисления отпуска");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура КодыПерсучета2010() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_ПД)
	|			ТОГДА ""27-ПД""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_ГД)
	|			ТОГДА ""27-ГД""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_ГДХР)
	|			ТОГДА ""27-ГДХР""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_ПДРК)
	|			ТОГДА ""27-ПДРК""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_СМ)
	|			ТОГДА ""27-СМ""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_СМХР)
	|			ТОГДА ""27-СМХР""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_СП)
	|			ТОГДА ""27-СП""
	|		ИНАЧЕ ОснованияВыслугиЛет.Код
	|	КОНЕЦ КАК КодДляОтчетности2010,
	|	ОснованияВыслугиЛет.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОснованияВыслугиЛет КАК ОснованияВыслугиЛет
	|ГДЕ
	|	ОснованияВыслугиЛет.КодДляОтчетности2010 = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОсобыеУсловияТруда.Ссылка = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.Ст28_ОС)
	|			ТОГДА ""27-ОС""
	|		КОГДА ОсобыеУсловияТруда.Ссылка = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.Ст28_ПЖ)
	|			ТОГДА ""27-ПЖ""
	|		ИНАЧЕ ОсобыеУсловияТруда.Код
	|	КОНЕЦ,
	|	ОсобыеУсловияТруда.Ссылка
	|ИЗ
	|	Справочник.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда
	|ГДЕ
	|	ОсобыеУсловияТруда.КодДляОтчетности2010 = """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка кодов перс.учета");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОчисткаВалютыНеденежныхПоказателей() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоказателиСхемМотивации.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
	|ИЗ
	|	Справочник.ПоказателиСхемМотивации КАК ПоказателиСхемМотивации
	|ГДЕ
	|	ПоказателиСхемМотивации.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|	И ПоказателиСхемМотивации.Валюта <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Очистка валюты неденежных показателей - показатели схем мотивации");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияПоказателейСхемМотивации.ПериодДействия,
	|	ЗначенияПоказателейСхемМотивации.Показатель,
	|	ЗначенияПоказателейСхемМотивации.Организация,
	|	ЗначенияПоказателейСхемМотивации.Подразделение,
	|	ЗначенияПоказателейСхемМотивации.Сотрудник,
	|	ЗначенияПоказателейСхемМотивации.Значение,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
	|ГДЕ
	|	ЗначенияПоказателейСхемМотивации.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|	И ЗначенияПоказателейСхемМотивации.Валюта <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)";
	
	
	ПереписатьНаборыЗаписейНезависимогоРегистра(
		РегистрыСведений.ЗначенияПоказателейСхемМотивации, 
		Запрос, 
		"Очистка валюты неденежных показателей - Значения показателей схем мотивации");

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодическиеЗначенияПоказателейСхемМотивации.Период,
	|	ПериодическиеЗначенияПоказателейСхемМотивации.Показатель,
	|	ПериодическиеЗначенияПоказателейСхемМотивации.Организация,
	|	ПериодическиеЗначенияПоказателейСхемМотивации.Подразделение,
	|	ПериодическиеЗначенияПоказателейСхемМотивации.Значение,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
	|ИЗ
	|	РегистрСведений.ПериодическиеЗначенияПоказателейСхемМотивации КАК ПериодическиеЗначенияПоказателейСхемМотивации
	|ГДЕ
	|	ПериодическиеЗначенияПоказателейСхемМотивации.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|	И ПериодическиеЗначенияПоказателейСхемМотивации.Валюта <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)";
		
	ПереписатьНаборыЗаписейНезависимогоРегистра(
		РегистрыСведений.ПериодическиеЗначенияПоказателейСхемМотивации, 
		Запрос, 
		"Очистка валюты неденежных показателей - Периодические значения показателей схем мотивации");
		
КонецПроцедуры	
	
Процедура ЗаполнитьДатуНачалаПростоя() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрацияПростоевРаботниковОрганизаций.Ссылка КАК Ссылка,
	|	РегистрацияПростоевРаботниковОрганизаций.ДатаНачала КАК ДатаНачалаСобытия
	|ИЗ
	|	Документ.РегистрацияПростоевРаботниковОрганизаций КАК РегистрацияПростоевРаботниковОрганизаций
	|ГДЕ
	|	РегистрацияПростоевРаботниковОрганизаций.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И РегистрацияПростоевРаботниковОрганизаций.ДатаНачалаСобытия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов регистрации простоев");

КонецПроцедуры

Процедура ЗаполнитьВидЦикловОбмена() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦиклыОбмена.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ЦиклОбменаСФНС) КАК Вид
	|ИЗ
	|	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
	|ГДЕ
	|	ЦиклыОбмена.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЦикловОбмена.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка справочника Циклы обмена");
	
КонецПроцедуры

Процедура ОбновлениеОбъектовОбменаСФНСПриПереходеНаФормат535() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ЦиклыОбмена.Ссылка КАК ЦиклОбмена
	                      |ИЗ
	                      |	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
	                      |ГДЕ
	                      |	ЦиклыОбмена.Вид = &Вид
	                      |	И ЦиклыОбмена.ФорматДокументооборота = &ФорматДокументооборота");
	Запрос.УстановитьПараметр("Вид", Перечисления.ВидыЦикловОбмена.ЦиклОбменаСФНС);
	Запрос.УстановитьПараметр("ФорматДокументооборота", Перечисления.ФорматыДокументооборотаСФНС.ПустаяСсылка());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектЦиклОбмена = Выборка.ЦиклОбмена.ПолучитьОбъект();
		ОбъектЦиклОбмена.ФорматДокументооборота = Перечисления.ФорматыДокументооборотаСФНС.Приказ141;
		ОбъектЦиклОбмена.ОбменДанными.Загрузка = Истина;
		ОбъектЦиклОбмена.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьФорматыЭДОуОбъектовНФДиИОН141() Экспорт
	
	// устанавливаем форматы документооборота у запросов ИОН
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ЗапросНаИнформационноеОбслуживаниеНалогоплательщика.Ссылка
	                      |ИЗ
	                      |	Документ.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика КАК ЗапросНаИнформационноеОбслуживаниеНалогоплательщика
	                      |ГДЕ
	                      |	ЗапросНаИнформационноеОбслуживаниеНалогоплательщика.ФорматЗапроса = &ФорматЗапроса");
	Запрос.УстановитьПараметр("ФорматЗапроса", Перечисления.ФорматыДокументооборотаСФНС.ПустаяСсылка());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектДок = Выборка.Ссылка.ПолучитьОбъект();
		ОбъектДок.ФорматЗапроса = Перечисления.ФорматыДокументооборотаСФНС.Приказ141;
		ОбъектДок.ОбменДанными.Загрузка = Истина;
		ОбъектДок.Записать();
	КонецЦикла;
	
	// устанавливаем форматы документооборота у циклов обмена
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ЦиклыОбмена.Ссылка
	                      |ИЗ
	                      |	Справочник.ЦиклыОбмена КАК ЦиклыОбмена
	                      |ГДЕ
	                      |	ЦиклыОбмена.ФорматДокументооборота = &ФорматДокументооборота
	                      |	И ЦиклыОбмена.Тип В(&ТипЦиклаОбмена)");
	ТипыЦикловОбмена = Новый Массив;
	ТипыЦикловОбмена.Добавить(Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалоговогоОргана);
	ТипыЦикловОбмена.Добавить(Перечисления.ТипыЦикловОбмена.НеформализованныеДокументыНалогоплательщика);
	ТипыЦикловОбмена.Добавить(Перечисления.ТипыЦикловОбмена.ЗапросыНаИнформационноеОбслуживание);
	Запрос.УстановитьПараметр("ТипЦиклаОбмена", ТипыЦикловОбмена);
	Запрос.УстановитьПараметр("ФорматДокументооборота", Перечисления.ФорматыДокументооборотаСФНС.ПустаяСсылка());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектСпр = Выборка.Ссылка.ПолучитьОбъект();
		ОбъектСпр.ФорматДокументооборота = Перечисления.ФорматыДокументооборотаСФНС.Приказ141;
		ОбъектСпр.ОбменДанными.Загрузка = Истина;
		ОбъектСпр.Записать();
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИндексироватьПособияСоцСтрахования2010() Экспорт
	
	// новые размеры пособий 
	ДатаДействия = '20110101';
	НаборЗаписей = РегистрыСведений.ГосударственныеПособия.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 438.87;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 11703.13;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 2194.34;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 4388.67;

	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = ДатаДействия;
	НоваяСтрока.РазмерФСС = 463000;
	НоваяСтрока.РазмерПФР = 463000;
	НоваяСтрока.РазмерФОМС = 463000;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ОписатьЗаработокПособийС2011() Экспорт

	ВидРасчета = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.СреднийЗаработок, "ПоЗаработкуПособийС2011");
		
	Если ЗначениеЗаполнено(ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ВидРасчета, "Наименование")) Тогда
		Возврат
	КонецЕсли;
	
	ВРОбъект = ПланыВидовРасчета.СреднийЗаработок.СоздатьВидРасчета();
	ВРОбъект.ИдентификаторЭлемента = "ПоЗаработкуПособийС2011";
	ВРОбъект.Наименование = "Заработок";
	ВРОбъект.ОбменДанными.Загрузка = Истина;
	Попытка
		ВРОбъект.Записать();
	Исключение
	КонецПопытки;

КонецПроцедуры

Функция ОписатьОплатуБолезниЗаСчетРаботодателя(КопироватьВытеснение = Ложь) Экспорт

	ВидРасчета = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций, "ОплатаБолезниЗаСчетРаботодателя");
		
	Если ЗначениеЗаполнено(ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ВидРасчета, "СпособРасчета")) Тогда
		Возврат ВидРасчета
	КонецЕсли;
	
	ВРОбъект = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.СоздатьВидРасчета();
	ВРОбъект.ИдентификаторЭлемента = "ОплатаБолезниЗаСчетРаботодателя";
	ВРОбъект.Код = "00025";
	ВРОбъект.Наименование = "Оплата больничных листов за счет работодателя";
	ВРОбъект.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС;
	ВРОбъект.ВидВремени = Перечисления.ВидыВремени.ЦелодневноеНеотработанное;
	ВРОбъект.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.ВременнаяНетрудоспособность;
	ВРОбъект.КатегорияРасчета = ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуБЛ, "КатегорияРасчета");
	ВРОбъект.КодДоходаНДФЛ = Справочники.ДоходыНДФЛ.Код2300;
	ВРОбъект.КодДоходаСтраховыеВзносы = Справочники.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом;
	ВРОбъект.КодДоходаФСС_НС = Перечисления.ДоходыФСС_НС.НеОблагается;
	ВРОбъект.ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь;
	ВРОбъект.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству;
	ВРОбъект.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия;
	ВРОбъект.ЗачетНормыВремени = Истина;
	ВРОбъект.ОбменДанными.Загрузка = Истина;
	Попытка
		ВРОбъект.Записать();
	Исключение
	КонецПопытки;

	Если КопироватьВытеснение Тогда
		
		СоответствиеВидовРасчета = Новый ТаблицаЗначений;
		СоответствиеВидовРасчета.Колонки.Добавить("Образец", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
		СоответствиеВидовРасчета.Колонки.Добавить("НовыйВидРасчета", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
		НоваяСтрока = СоответствиеВидовРасчета.Добавить();
		НоваяСтрока.Образец = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуБЛ;
		НоваяСтрока.НовыйВидРасчета = ВРОбъект.Ссылка;
		СкопироватьВытеснениеВидовРасчета(СоответствиеВидовРасчета);
		
		// необходимо еще прописать новый в.р. в расчетные базы
		СкопироватьВходимостьВРасчетныеБазы(СоответствиеВидовРасчета);
		
	КонецЕсли;
	
	Возврат ВРОбъект.Ссылка
	
КонецФункции

Процедура ПрописатьОплатуБолезниЗаСчетРаботодателяВДокументы() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования());
	Запрос.УстановитьПараметр("ВидРасчетаЗаСчетРаботодателя", ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций, "ОплатаБолезниЗаСчетРаботодателя"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.Ссылка,
	|	&ВидРасчетаЗаСчетРаботодателя КАК ВидРасчетаЗаСчетРаботодателя,
	|	3 КАК ДнейОплатыРаботодателем
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|ГДЕ
	|	НачислениеПоБольничномуЛисту.ВидРасчетаЗаСчетРаботодателя = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|	И НачислениеПоБольничномуЛисту.ПериодРегистрации >= &ПериодРегистрации";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов начисления пособий по б/л, часть I");

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.Ссылка КАК Ссылка,
	|	1 КАК НомерСтроки,
	|	ГОД(НачислениеПоБольничномуЛисту.ДатаНачалаСобытия) - 2 КАК Год
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту.ГодыРасчетаСреднего2011 КАК НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011
	|		ПО НачислениеПоБольничномуЛисту.Ссылка = НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011.Ссылка
	|ГДЕ
	|	НачислениеПоБольничномуЛисту.ДатаОкончания >= &ПериодРегистрации
	|	И НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011.НомерСтроки ЕСТЬ NULL 
	|	И НачислениеПоБольничномуЛисту.ДатаНачалаСобытия <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.Ссылка,
	|	2,
	|	ГОД(НачислениеПоБольничномуЛисту.ДатаНачалаСобытия) - 1
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту.ГодыРасчетаСреднего2011 КАК НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011
	|		ПО НачислениеПоБольничномуЛисту.Ссылка = НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011.Ссылка
	|ГДЕ
	|	НачислениеПоБольничномуЛисту.ДатаОкончания >= &ПериодРегистрации
	|	И НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011.НомерСтроки ЕСТЬ NULL 
	|	И НачислениеПоБольничномуЛисту.ДатаНачалаСобытия <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Отпуск.Ссылка,
	|	1,
	|	ГОД(Отпуск.ДатаНачала) - 2
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК Отпуск
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком.ГодыРасчетаСреднего2011 КАК ОтпускГодыРасчетаСреднего2011
	|		ПО Отпуск.Ссылка = ОтпускГодыРасчетаСреднего2011.Ссылка
	|ГДЕ
	|	Отпуск.ДатаНачала >= &ПериодРегистрации
	|	И ОтпускГодыРасчетаСреднего2011.НомерСтроки ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Отпуск.Ссылка,
	|	2,
	|	ГОД(Отпуск.ДатаНачала) - 1
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК Отпуск
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком.ГодыРасчетаСреднего2011 КАК ОтпускГодыРасчетаСреднего2011
	|		ПО Отпуск.Ссылка = ОтпускГодыРасчетаСреднего2011.Ссылка
	|ГДЕ
	|	Отпуск.ДатаНачала >= &ПериодРегистрации
	|	И ОтпускГодыРасчетаСреднего2011.НомерСтроки ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ГодыРасчетаСреднего2011", "Обработка документов по пособиям, часть II");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновлениеКодовДоходовВычетовНДФЛдля2011года() Экспорт

	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние("Обработка вычетов по НДФЛ");
	#КонецЕсли
	
	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;
	
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код318, , , , , , , "318", , , Перечисления.ГруппыВычетовПоНДФЛ.Имущественные); // с 2010 г.

	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВычетыНДФЛ.Ссылка,
	|	ВычетыНДФЛ.КодДляОтчетности2009 КАК КодДляОтчетности2010,
	|	ВЫБОР
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код101)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код102)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код103)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Стандартные)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код104)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Стандартные)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код105)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Стандартные)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код106)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код107)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код111)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код113)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код311)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Имущественные)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код312)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Имущественные)
	|		КОГДА ВычетыНДФЛ.Ссылка = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код319)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ГруппаВычета
	|ИЗ
	|	Справочник.ВычетыНДФЛ КАК ВычетыНДФЛ
	|ГДЕ
	|	(НЕ ВычетыНДФЛ.Ссылка В (&Ссылки))";
	
	МассивВычетов = Новый Массив;
	МассивВычетов.Добавить(ВычетыНДФЛ.Код204);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код205);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код206);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код208);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код209);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код305);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код306);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код307);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код308);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код309);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код310);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код318);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код403);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код404);
	МассивВычетов.Добавить(ВычетыНДФЛ.Код405);
	Запрос.УстановитьПараметр("Ссылки", МассивВычетов);
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка вычетов по НДФЛ");

	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код305, "305", "305", , "Расходы по доходам с кодом 1535", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с заключением, исполнением и с прекращением срочных сделок", 
	, "207", , , , "207");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код306, "306", "306", , "(не используется с 2011 года) Сумма фактических расходов по приобретению и реализации (погашению) инвестиционных паев паевых фондов", "Сумма фактически произведенных и документально подтвержденных расходов по приобретению и реализации (погашению) инвестиционных паев паевых фондов",
	, "306"); // не применяется с 2011 года
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код307, "307", "307", "307", "Расходы по операциям с ценными бумагами, обращающимися на организованном рынке ценных бумаг", "Совокупная сумма фактически произведенных налогоплательщиком и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, включая суммы, с которых был исчислен и уплачен налог при приобретении ценных бумаг в собственность (в том числе получении на безвозмездной основе или с частичной оплатой)", "Совокупная сумма фактически произведенных налогоплательщиком и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, включая суммы, с которых был исчислен и уплачен налог при приобретении ценных бумаг в собственность (в том числе получении на безвозмездной основе или с частичной оплатой)"
	, "201", , , , "201");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код308, "308", "308", , "Расходы по операциям с ценными бумагами, не обращающимися на организованном рынке ценных бумаг", "Сумма фактически произведенных и документально подтвержденных расходов на приобретение, реализацию ценных бумаг, не обращающихся на орг. рынке", 
	, "202", , , , "202"); // с 2008 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код309, "309", "309", , "Расходы по операциям с ценными бумагами, не обр-мися на орг.рынке ценных бумаг, которые на момент их приобретения обр-лись на орг.рынке ценных бумаг", "Сумма фактически произведенных и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, не обращающихся", 
	, "203", , , , "203"); // с 2008 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код204, , , , , , , "204"); // с 2010 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код205, , , , , , , "205"); // с 2010 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код206, , , , , , , "206"); // с 2010 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код208, , , , , , , "208"); // с 2010 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код209, , , , , , , "209"); // с 2010 г.
	
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код310, "310", "310", "-", "(не используется с 2010 года) Убыток, полученный в налоговом периоде по операциям купли-продажи ценных бумаг, обращающихся на орг. рынке ценных бумаг", "Убыток, полученный в налоговом периоде по операциям купли-продажи ценных бумаг, обращающихся на организованном рынке ценных бумаг", , , , Истина);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код403, "403", "403", "403", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с выполнением работ (оказанием услуг) по договорам ГПХ", "Сумма фактически произведенных и документально подтвержденных расходов, непосредственно связанных с выполнением работ (оказанием услуг) по договорам гражданско-правового характера", "Сумма фактически произведенных и документально подтвержденных расходов, непосредственно связанных с выполнением работ (оказанием услуг) по договорам гражданско-правового характера"
	, "403", Истина);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код404, "404", "404", "404", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений или вознаграждений за создание, издание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений или вознаграждений за создание, издание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов"
	, "404", Истина);
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код405, "405", "405", "405", "Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений", "Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений и вознаграждений за создание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов (в процентах к сумме начисленного дохода)", "Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений и вознаграждений за создание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов (в процентах к сумме начисленного дохода)"
	, "405", Истина);
	
	Если ЗначениеЗаполнено(ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Справочники.ДоходыНДФЛ.Код1533_2010,"СтавкаНалогообложенияРезидента")) Тогда
		Возврат
	КонецЕсли;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние("Обработка доходов по НДФЛ");
	#КонецЕсли
	
	ДоходыНДФЛ = Справочники.ДоходыНДФЛ;
	Ставка13 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
	Ставка35 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35;
	
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1533_2010,		Ставка13, "1533");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1535,			Ставка13, "1535");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2610ПоСтавке13, Ставка13, "2620", , Истина);
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2210, 			Ставка13, "2210", Истина);
	ДобавитьКодДоходаНДФЛ("2641", "Материальная выгода, полученная от приобретения финансовых инструментов срочных сделок", Ставка13); 
	ДобавитьКодДоходаНДФЛ("3022", "Доходы в виде платы за использование денежных средств членов кр.потреб.кооператива или %% за исп-е с-х кр.потреб.кооперативом займов", Ставка35); 
	
	ТаблицаНовыхЗначений = Новый ТаблицаЗначений;
	ТаблицаНовыхЗначений.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(30, ДопустимаяДлина.Переменная)));
	ТаблицаНовыхЗначений.Колонки.Добавить("КодДляОтчетности", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(4)));
	ТаблицаНовыхЗначений.Колонки.Добавить("НеОблагаетсяУНалоговогоАгента", Новый ОписаниеТипов("Булево"));
	ТаблицаНовыхЗначений.Колонки.Добавить("НеОтражаетсяВОтчетности2010", Новый ОписаниеТипов("Булево"));
	
	СтрокаОписания = ТаблицаНовыхЗначений.Добавить();
	СтрокаОписания.КодДляОтчетности = "1211";
	СтрокаОписания.Наименование = "(не используется с 2009 года) ";
	СтрокаОписания.НеОтражаетсяВОтчетности2010 = Истина;
	
	СтрокаОписания = ТаблицаНовыхЗначений.Добавить();
	СтрокаОписания.КодДляОтчетности = "1214";
	СтрокаОписания.Наименование = "(не используется с 2009 года) ";
	СтрокаОписания.НеОтражаетсяВОтчетности2010 = Истина;
	
	СтрокаОписания = ТаблицаНовыхЗначений.Добавить();
	СтрокаОписания.КодДляОтчетности = "1230";
	СтрокаОписания.Наименование = "(не используется с 2009 года) ";
	СтрокаОписания.НеОтражаетсяВОтчетности2010 = Истина;
	
	СтрокаОписания = ТаблицаНовыхЗначений.Добавить();
	СтрокаОписания.КодДляОтчетности = "1510";
	СтрокаОписания.Наименование = "(не используется с 2009 года) ";
	СтрокаОписания.НеОблагаетсяУНалоговогоАгента = Истина;
	СтрокаОписания.НеОтражаетсяВОтчетности2010 = Истина;
	
	СтрокаОписания = ТаблицаНовыхЗначений.Добавить();
	СтрокаОписания.КодДляОтчетности = "1520";
	СтрокаОписания.Наименование = "(не используется с 2009 года) ";
	СтрокаОписания.НеОблагаетсяУНалоговогоАгента = Истина;
	СтрокаОписания.НеОтражаетсяВОтчетности2010 = Истина;
	
	СтрокаОписания = ТаблицаНовыхЗначений.Добавить();
	СтрокаОписания.КодДляОтчетности = "2220";
	СтрокаОписания.Наименование = "(не используется с 2009 года) ";
	СтрокаОписания.НеОблагаетсяУНалоговогоАгента = Истина;
	СтрокаОписания.НеОтражаетсяВОтчетности2010 = Истина;
	
	СтрокаОписания = ТаблицаНовыхЗначений.Добавить();
	СтрокаОписания.КодДляОтчетности = "3021";
	СтрокаОписания.Наименование = "(не используется с 2009 года) ";
	СтрокаОписания.НеОтражаетсяВОтчетности2010 = Истина;
	
	СтрокаОписания = ТаблицаНовыхЗначений.Добавить();
	СтрокаОписания.КодДляОтчетности = "4000";
	СтрокаОписания.Наименование = "(не используется с 2009 года) ";
	СтрокаОписания.НеОблагаетсяУНалоговогоАгента = Истина;
	СтрокаОписания.НеОтражаетсяВОтчетности2010 = Истина;
	
	СтрокаОписания = ТаблицаНовыхЗначений.Добавить();
	СтрокаОписания.КодДляОтчетности = "4600";
	СтрокаОписания.Наименование = "(не используется с 2009 года) ";
	СтрокаОписания.НеОблагаетсяУНалоговогоАгента = Истина;
	СтрокаОписания.НеОтражаетсяВОтчетности2010 = Истина;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НовыеЗначения",ТаблицаНовыхЗначений);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НовыеЗначения.Наименование,
	|	НовыеЗначения.КодДляОтчетности,
	|	НовыеЗначения.НеОблагаетсяУНалоговогоАгента,
	|	НовыеЗначения.НеОтражаетсяВОтчетности2010
	|ПОМЕСТИТЬ ВТНовыеЗначения
	|ИЗ
	|	&НовыеЗначения КАК НовыеЗначения";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоходыНДФЛ.Ссылка,
	|	НовыеЗначения.НеОблагаетсяУНалоговогоАгента,
	|	НовыеЗначения.НеОтражаетсяВОтчетности2010,
	|	НовыеЗначения.Наименование + ДоходыНДФЛ.Наименование КАК Наименование
	|ИЗ
	|	ВТНовыеЗначения КАК НовыеЗначения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоходыНДФЛ КАК ДоходыНДФЛ
	|		ПО НовыеЗначения.КодДляОтчетности = ДоходыНДФЛ.КодДляОтчетности
	|ГДЕ
	|	(НЕ ДоходыНДФЛ.Предопределенный)";
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка доходов по НДФЛ");
	
КонецПроцедуры

Процедура ПереносСведенийОРезидентстве() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусФизЛицКакНалогоплательщиковНДФЛ
	|		ПО ГражданствоФизЛиц.ФизЛицо = СтатусФизЛицКакНалогоплательщиковНДФЛ.ФизЛицо
	|			И (НАЧАЛОПЕРИОДА(ГражданствоФизЛиц.Период, МЕСЯЦ) = СтатусФизЛицКакНалогоплательщиковНДФЛ.Период)
	|ГДЕ
	|	ГражданствоФизЛиц.УдалитьНеЯвляетсяНалоговымРезидентомРФ
	|	И СтатусФизЛицКакНалогоплательщиковНДФЛ.ФизЛицо ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Физлица.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ГражданствоФизЛиц.Период, МЕСЯЦ) КАК Период,
	|	МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|ПОМЕСТИТЬ ВТФизлицаСДатами
	|ИЗ
	|	ВТФизлица КАК Физлица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО Физлица.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	Физлица.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ГражданствоФизЛиц.Период, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ГражданствоФизЛиц.УдалитьНеЯвляетсяНалоговымРезидентомРФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|	КОНЕЦ КАК Статус,
	|	ФизлицаКОбработке.Период,
	|	ФизлицаКОбработке.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	ВТФизлицаСДатами КАК ФизлицаКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ФизлицаКОбработке.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|			И ФизлицаКОбработке.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо";
	
	ТекстСообщения = "Обновление данных о резидентстве сотрудников";
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	
	Выборка = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = Выборка.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока Выборка.СледующийПоЗначениюПоля("ФизЛицо") Цикл
		НаборЗаписей = РегистрыСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Отбор.ФизЛицо.Установить(Выборка.ФизЛицо);
		Пока Выборка.Следующий() Цикл
		    ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(),Выборка);
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

Процедура ПереносДанныхСтраховыхВзносовПоЕНДВ() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНовойРедакцииЗакона212", ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.Ссылка КАК Ссылка,
	|	НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.НомерСтроки КАК НомерСтроки,
	|	НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.ПФРНакопительная + НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.ПФРНакопительнаяЕНВД КАК ПФРНакопительная,
	|	НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.ПФРСтраховая + НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.ПФРСтраховаяЕНВД КАК ПФРСтраховая,
	|	0 КАК ПФРСтраховаяЕНВД,
	|	0 КАК ПФРНакопительнаяЕНВД
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.СтраховыеВзносы КАК НДФЛиЕСНДоходыИНалогиСтраховыеВзносы
	|ГДЕ
	|	(НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.ПФРСтраховаяЕНВД <> 0
	|			ИЛИ НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.ПФРНакопительнаяЕНВД <> 0)
	|	И НДФЛиЕСНДоходыИНалогиСтраховыеВзносы.МесяцРасчетногоПериода >= &ДатаНовойРедакцииЗакона212
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "СтраховыеВзносы", "Обработка документов по страховым взносам, часть I");

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.Ссылка КАК Ссылка,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.НомерСтроки КАК НомерСтроки,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРНакопительная + РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРНакопительнаяЕНВД КАК ПФРНакопительная,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРСтраховая + РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРСтраховаяЕНВД КАК ПФРСтраховая,
	|	0 КАК ПФРСтраховаяЕНВД,
	|	0 КАК ПФРНакопительнаяЕНВД
	|ИЗ
	|	Документ.РасчетСтраховыхВзносов.ИсчисленныеСтраховыеВзносы КАК РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы
	|ГДЕ
	|	(РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРСтраховаяЕНВД <> 0
	|			ИЛИ РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРНакопительнаяЕНВД <> 0)
	|	И РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.Ссылка.ПериодРегистрации >= &ДатаНовойРедакцииЗакона212
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ИсчисленныеСтраховыеВзносы", "Обработка документов по страховым взносам, часть II");

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Ссылка КАК Ссылка,
	|	РасчетыПоСтраховымВзносам.ФСС + РасчетыПоСтраховымВзносам.ФССЕНВД КАК ФСС,
	|	0 КАК ФССЕНВД
	|ИЗ
	|	Документ.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода >= &ДатаНовойРедакцииЗакона212
	|	И РасчетыПоСтраховымВзносам.ФССЕНВД <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов по страховым взносам, часть III");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Период >= &ДатаНовойРедакцииЗакона212
	|	И (СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД <> 0
	|			ИЛИ СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.Период,
	|	СтраховыеВзносыИсчисленные.Регистратор КАК Регистратор,
	|	СтраховыеВзносыИсчисленные.НомерСтроки КАК НомерСтроки,
	|	СтраховыеВзносыИсчисленные.Активность,
	|	СтраховыеВзносыИсчисленные.ФизЛицо,
	|	СтраховыеВзносыИсчисленные.Организация,
	|	СтраховыеВзносыИсчисленные.ОбособленноеПодразделение,
	|	СтраховыеВзносыИсчисленные.ПФРСтраховая + СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД КАК ПФРСтраховая,
	|	0 КАК ПФРСтраховаяЕНВД,
	|	СтраховыеВзносыИсчисленные.ПФРНакопительная + СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД КАК ПФРНакопительная,
	|	0 КАК ПФРНакопительнаяЕНВД,
	|	СтраховыеВзносыИсчисленные.ФСС,
	|	СтраховыеВзносыИсчисленные.ФФОМС,
	|	СтраховыеВзносыИсчисленные.ТФОМС,
	|	СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи,
	|	СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу,
	|	СтраховыеВзносыИсчисленные.ПФРНаДоплатуКПенсииШахтерам
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.СтраховыеВзносыИсчисленные, Запрос, "Обработка документов по страховым взносам, часть IV");	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода >= &ДатаНовойРедакцииЗакона212
	|	И РасчетыПоСтраховымВзносам.ОблагаетсяЕНВД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Период,
	|	РасчетыПоСтраховымВзносам.Регистратор КАК Регистратор,
	|	РасчетыПоСтраховымВзносам.НомерСтроки КАК НомерСтроки,
	|	РасчетыПоСтраховымВзносам.Активность,
	|	РасчетыПоСтраховымВзносам.ВидДвижения,
	|	РасчетыПоСтраховымВзносам.Организация,
	|	РасчетыПоСтраховымВзносам.ВидПлатежа,
	|	РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода,
	|	ЛОЖЬ КАК ОблагаетсяЕНВД,
	|	РасчетыПоСтраховымВзносам.ПФРСтраховая,
	|	РасчетыПоСтраховымВзносам.ПФРНакопительная,
	|	РасчетыПоСтраховымВзносам.ФСС,
	|	РасчетыПоСтраховымВзносам.ФФОМС,
	|	РасчетыПоСтраховымВзносам.ТФОМС,
	|	РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаи,
	|	РасчетыПоСтраховымВзносам.ПФРПоДополнительномуТарифу,
	|	РасчетыПоСтраховымВзносам.ПФРНаДоплатуКПенсииШахтерам
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.РасчетыПоСтраховымВзносам, Запрос, "Обработка документов по страховым взносам, часть V");	
	

КонецПроцедуры

Процедура ОбновлениеНачисленийСБазовымПериодомПрошлыйМесяц() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка,
	|	ИСТИНА КАК БазовыйПериодПрошлыйМесяц
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	(НЕ ОсновныеНачисленияОрганизаций.ПериодДействияБазовый)
	|			И ОсновныеНачисленияОрганизаций.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом))
	|			И ОсновныеНачисленияОрганизаций.Ссылка <> ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.РайонныйКоэффициент)
	|			И (НЕ ОсновныеНачисленияОрганизаций.БазовыйПериодПрошлыйМесяц)";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка премий с расчетной базой по прошлому месяцу.");

КонецПроцедуры

Процедура УстановитьПризнакЗапрашиватьДляТарифныхСтавок() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияПоказатели.Ссылка,
	|	ОстальныеПоказатели.НомерСтроки КАК НомерСтроки,
	|	ОстальныеПоказатели.Показатель КАК Показатель,
	|	ВЫБОР
	|		КОГДА ОстальныеПоказатели.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая))
	|				ИЛИ ОстальныеПоказатели.Показатель.ТарифнаяСтавка
	|			ТОГДА ОсновныеНачисленияПоказатели.Ссылка.ЗачетОтработанногоВремени
	|		ИНАЧЕ ОстальныеПоказатели.ЗапрашиватьПриКадровыхПеремещениях
	|	КОНЕЦ КАК ЗапрашиватьПриКадровыхПеремещениях
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияПоказатели
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОстальныеПоказатели
	|		ПО ОсновныеНачисленияПоказатели.Ссылка = ОстальныеПоказатели.Ссылка
	|ГДЕ
	|	(ОсновныеНачисленияПоказатели.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная), ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая))
	|			ИЛИ ОсновныеНачисленияПоказатели.Показатель.ТарифнаяСтавка)
	|	И ОсновныеНачисленияПоказатели.ЗапрашиватьПриКадровыхПеремещениях <> ОсновныеНачисленияПоказатели.Ссылка.ЗачетОтработанногоВремени";
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "Показатели", "Обработка начислений");
	
КонецПроцедуры // УстановитьПризнакЗапрашиватьДляТарифныхСтавок

////////////////////////////////////////////////////////////////////////////////

Процедура ПрописатьДниОплатыРаботодателемВДокументы() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.Ссылка,
	|	3 КАК ДнейОплатыРаботодателем
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|ГДЕ
	|	НачислениеПоБольничномуЛисту.ДнейОплатыРаботодателем = 0
	|	И НачислениеПоБольничномуЛисту.ПериодРегистрации >= &ПериодРегистрации";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов начисления пособий по б/л");

	НаборЗаписей = РегистрыСведений.НДФЛВычетыПоДоходам.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.КодДохода.Установить(Справочники.ДоходыНДФЛ.Код2761);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, '20050101', Справочники.ДоходыНДФЛ.Код2761, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, '20060101', Справочники.ДоходыНДФЛ.Код2761, 4000, 0);
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ВписатьОплатаБолезниЗаСчетРаботодателяВРасчетныеБазы() Экспорт 

	СоответствиеВидовРасчета = Новый ТаблицаЗначений;
	СоответствиеВидовРасчета.Колонки.Добавить("Образец", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
	СоответствиеВидовРасчета.Колонки.Добавить("НовыйВидРасчета", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
	НоваяСтрока = СоответствиеВидовРасчета.Добавить();
	НоваяСтрока.Образец = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуБЛ;
	НоваяСтрока.НовыйВидРасчета = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций, "ОплатаБолезниЗаСчетРаботодателя");
	СкопироватьВходимостьВРасчетныеБазы(СоответствиеВидовРасчета);

КонецПроцедуры

Процедура ЗарегистрироватьРасчетыНалоговогоАгента() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
	Запрос.УстановитьПараметр("ПустойКПП","");
	Запрос.УстановитьПараметр("ДатаЗакона229ФЗ", ПроведениеРасчетов.ДатаЗакона229ФЗ());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.Регистратор,
	|	СУММА(НДФЛРасчетыСБюджетом.Налог) КАК Сумма
	|ПОМЕСТИТЬ ВТУдержано
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Удержание)
	|	И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода >= &ДатаЗакона229ФЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛРасчетыСБюджетом.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор,
	|	СУММА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТНачислено
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	ВТУдержано КАК НДФЛРасчетыСБюджетом
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислено КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ПО НДФЛРасчетыСБюджетом.Регистратор = РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.Сумма <> ЕСТЬNULL(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.НомерСтроки,
	|	НДФЛРасчетыСБюджетом.ФизЛицо,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.КПП,
	|	НДФЛРасчетыСБюджетом.КодПоОКАТО,
	|	НДФЛРасчетыСБюджетом.Налог КАК Сумма,
	|	НДФЛРасчетыСБюджетом.Период,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации,
	|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|	НДФЛРасчетыСБюджетом.Регистратор
	|ПОМЕСТИТЬ ВТРасчетыФЛ
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Удержание)
	|	И НДФЛРасчетыСБюджетом.Налог <> 0
	|	И НДФЛРасчетыСБюджетом.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыРегистра.НомерСтроки,
	|	ЕСТЬNULL(СтатусФизЛицКакНалогоплательщиковНДФЛ.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус,
	|	ДатыРегистра.Регистратор
	|ПОМЕСТИТЬ ВТСтатусНалогоплательщика
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыФЛ.ФизЛицо КАК ФизЛицо,
	|		МАКСИМУМ(СтатусФизЛицКакНалогоплательщиковНДФЛ.Период) КАК Период,
	|		РасчетыФЛ.НомерСтроки КАК НомерСтроки,
	|		РасчетыФЛ.Регистратор КАК Регистратор
	|	ИЗ
	|		ВТРасчетыФЛ КАК РасчетыФЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусФизЛицКакНалогоплательщиковНДФЛ
	|			ПО РасчетыФЛ.ФизЛицо = СтатусФизЛицКакНалогоплательщиковНДФЛ.ФизЛицо
	|				И РасчетыФЛ.МесяцНалоговогоПериода >= СтатусФизЛицКакНалогоплательщиковНДФЛ.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РасчетыФЛ.ФизЛицо,
	|		РасчетыФЛ.НомерСтроки,
	|		РасчетыФЛ.Регистратор) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусФизЛицКакНалогоплательщиковНДФЛ
	|		ПО ДатыРегистра.ФизЛицо = СтатусФизЛицКакНалогоплательщиковНДФЛ.ФизЛицо
	|			И ДатыРегистра.Период = СтатусФизЛицКакНалогоплательщиковНДФЛ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыФЛ.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	РасчетыФЛ.ФизЛицо,
	|	РасчетыФЛ.ОбособленноеПодразделение КАК Организация,
	|	РасчетыФЛ.МесяцНалоговогоПериода,
	|	РасчетыФЛ.Сумма,
	|	ВЫБОР
	|		КОГДА РасчетыФЛ.КПП <> &ПустойКПП
	|			ТОГДА РасчетыФЛ.КПП
	|		КОГДА ЕСТЬNULL(РасчетыФЛ.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
	|			ТОГДА РасчетыФЛ.ПодразделениеОрганизации.КПП
	|		ИНАЧЕ ЕСТЬNULL(РасчетыФЛ.ОбособленноеПодразделение.КПП, &ПустойКПП)
	|	КОНЕЦ КАК КПП,
	|	ВЫБОР
	|		КОГДА РасчетыФЛ.КодПоОКАТО <> &ПустойКодПоОКАТО
	|			ТОГДА РасчетыФЛ.КодПоОКАТО
	|		КОГДА ЕСТЬNULL(РасчетыФЛ.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|			ТОГДА РасчетыФЛ.ПодразделениеОрганизации.КодПоОКАТО
	|		ИНАЧЕ ЕСТЬNULL(РасчетыФЛ.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
	|	КОНЕЦ КАК КодПоОКАТО,
	|	ВЫБОР
	|		КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетыФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|				КОНЕЦ
	|		КОГДА РасчетыФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|		КОГДА РасчетыФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|		КОГДА РасчетыФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Ставка,
	|	РасчетыФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыФЛ.Регистратор КАК Регистратор
	|ИЗ
	|	ВТРасчетыФЛ КАК РасчетыФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусНалогоплательщика КАК Статусы
	|		ПО РасчетыФЛ.НомерСтроки = Статусы.НомерСтроки
	|			И РасчетыФЛ.Регистратор = Статусы.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = "Обработка расчетов по НДФЛ";
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаРегистраторов.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей = РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
		Пока ВыборкаРегистраторов.Следующий() Цикл
			СтрокаНабора = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, ВыборкаРегистраторов);
			СтрокаНабора.ОКАТО_КПП = СправкиПоНДФЛ.СуммаОКАТОиКПП(ВыборкаРегистраторов.КодПоОКАТО, ВыборкаРегистраторов.КПП);
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОТарифеНародныеХудожественныеПромыслы() Экспорт 

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИсправитьОплатуБолезниЗаСчетРаботодателя() Экспорт

	ВидРасчета = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций, "ОплатаБолезниЗаСчетРаботодателя");
		
	Если Не ЗначениеЗаполнено(ВидРасчета) Тогда
		Возврат 
	КонецЕсли;
	
	Если ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ВидРасчета, "ЗачетНормыВремени") Тогда
		Возврат 
	КонецЕсли;
	
	ВРОбъект = ВидРасчета.ПолучитьОбъект();
	ВРОбъект.ЗачетНормыВремени = Истина;
	ВРОбъект.ОбменДанными.Загрузка = Истина;
	Попытка
		ВРОбъект.Записать();
	Исключение
	КонецПопытки;

КонецПроцедуры

Процедура ОбновлениеСтавкиРефинансированияЦБФевраль2011() Экспорт
	
	СтавкаЦБ = РегистрыСведений.СтавкаРефинансированияЦБ.СоздатьНаборЗаписей();
	СтавкаЦБ.Отбор.Период.Установить('20110228');
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20110228';
	СтрокаНабора.Размер = 8;
	СтавкаЦБ.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИндексироватьПособиеНаПогребение2011() Экспорт
	
	// новые размеры пособий 
	ДатаДействия = '20110101';
	НаборЗаписей = РегистрыСведений.ГосударственныеПособия.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	НаборЗаписей.Отбор.ВидПособия.Использование = Истина;
	НаборЗаписей.Отбор.ВидПособия.Значение = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 4260;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИндексироватьМРОТ2011() Экспорт
	
	ДатаДействия = '20110601';
	НаборЗаписей = РегистрыСведений.МинимальнаяОплатаТрудаРФ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 4611;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ОбновитьУчетЗабронированных2011() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолжностиОрганизаций.Ссылка,
	|	ВЫБОР
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Водители)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.Водители)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Врачи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.СпециалистыЗдравоохранение)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.СреднийМедицинскийПерсонал)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.СпециалистыЗдравоохранение)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.ДругиеСлужащие)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.ДругиеСлужащие)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Рабочие1_2Разрядов)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.РабочиеИмеющиеТарифныйРазряд)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Рабочие3_4Разрядов)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.РабочиеИмеющиеТарифныйРазряд)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Рабочие5РазрядаИВыше)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.РабочиеИмеющиеТарифныйРазряд)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.РабочиеЛокомотивныхБригад)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.РабочиеЛокомотивныхБригад)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.РабочиеНеИмеющиеТарифныхСтавок)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.РабочиеНеИмеющиеТарифныхРазрядов)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.РабочиеСХ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.РабочиеСХ)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Руководители)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.Руководители)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.СпециалистыОбразования)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.СпециалистыОбразования)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Учащиеся)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.СпециалистыОбразования)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.СпециалистыСХ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.СпециалистыСХ)
	|		КОГДА ДолжностиОрганизаций.КатегорияВоинскогоУчета = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляВоинскогоУчета.Трактористы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.Трактористы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.ПустаяСсылка)
	|	КОНЕЦ КАК КатегорияУчетаЗабронированных
	|ИЗ
	|	Справочник.ДолжностиОрганизаций КАК ДолжностиОрганизаций
	|ГДЕ
	|	ДолжностиОрганизаций.КатегорияВоинскогоУчета В(&КатегорияВоинскогоУчета)
	|	И ДолжностиОрганизаций.КатегорияУчетаЗабронированных = ЗНАЧЕНИЕ(Перечисление.КатегорииДолжностейДляУчетаЗабронированныхС2011Года.ПустаяСсылка)";
	МассивОбрабатываемыхКатегорий = Новый Массив;
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Водители);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Врачи);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.ДругиеСлужащие);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Рабочие1_2Разрядов);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Рабочие3_4Разрядов);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Рабочие5РазрядаИВыше);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.РабочиеЛокомотивныхБригад);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.РабочиеНеИмеющиеТарифныхСтавок);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.РабочиеСХ);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Руководители);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.СпециалистыОбразования);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.СпециалистыСХ);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.СреднийМедицинскийПерсонал);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Трактористы);
	МассивОбрабатываемыхКатегорий.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Учащиеся);
	Запрос.УстановитьПараметр("КатегорияВоинскогоУчета", МассивОбрабатываемыхКатегорий);
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка должностей для целей воинского учета");
	
КонецПроцедуры

Процедура ОбновлениеСтавкиРефинансированияЦБМай2011() Экспорт
	
	СтавкаЦБ = РегистрыСведений.СтавкаРефинансированияЦБ.СоздатьНаборЗаписей();
	СтавкаЦБ.Отбор.Период.Установить('20110503');
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20110503';
	СтрокаНабора.Размер = 8.25;
	СтавкаЦБ.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновитьВидОперацииПоРасчетамСФондами() Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР) КАК ВидОперации
	|ИЗ
	|	Документ.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.ФСС = 0
	|	И РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаи = 0
	|	И РасчетыПоСтраховымВзносам.ФФОМС = 0
	|	И РасчетыПоСтраховымВзносам.ТФОМС = 0
	|	И РасчетыПоСтраховымВзносам.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УдалитьУплата)
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС)
	|ИЗ
	|	Документ.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.ПФРСтраховая = 0
	|	И РасчетыПоСтраховымВзносам.ПФРНакопительная = 0
	|	И РасчетыПоСтраховымВзносам.ПФРНаДоплатуКПенсииШахтерам = 0
	|	И РасчетыПоСтраховымВзносам.ПФРПоДополнительномуТарифу = 0
	|	И РасчетыПоСтраховымВзносам.ФФОМС = 0
	|	И РасчетыПоСтраховымВзносам.ТФОМС = 0
	|	И РасчетыПоСтраховымВзносам.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УдалитьУплата)
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФОМС)
	|ИЗ
	|	Документ.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.ПФРСтраховая = 0
	|	И РасчетыПоСтраховымВзносам.ПФРНакопительная = 0
	|	И РасчетыПоСтраховымВзносам.ПФРНаДоплатуКПенсииШахтерам = 0
	|	И РасчетыПоСтраховымВзносам.ПФРПоДополнительномуТарифу = 0
	|	И РасчетыПоСтраховымВзносам.ФСС = 0
	|	И РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаи = 0
	|	И РасчетыПоСтраховымВзносам.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УдалитьУплата)";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка расчетов по страховым взносам, часть I");
	
КонецПроцедуры

Процедура ИсключитьКонцевыеПробелыФИОФизлиц() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ФиоФизлиц.Период,
	|	ФиоФизлиц.ФизЛицо,
	|	ФиоФизлиц.Фамилия,
	|	ФиоФизлиц.Имя,
	|	ФиоФизлиц.Отчество
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц КАК ФиоФизлиц
	|ГДЕ
	|	(ФиоФизлиц.Фамилия ПОДОБНО ""%[ ]""
	|			ИЛИ ФиоФизлиц.Фамилия ПОДОБНО ""[ ]%""
	|			ИЛИ ФиоФизлиц.Имя ПОДОБНО ""%[ ]""
	|			ИЛИ ФиоФизлиц.Имя ПОДОБНО ""[ ]%""
	|			ИЛИ ФиоФизлиц.Отчество ПОДОБНО ""%[ ]""
	|			ИЛИ ФиоФизлиц.Отчество ПОДОБНО ""[ ]%"")");
	
	ТаблицаЗаполнения = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаЗаполнения Из ТаблицаЗаполнения Цикл
		СтрокаЗаполнения.Фамилия	= СокрЛП(СтрокаЗаполнения.Фамилия);
		СтрокаЗаполнения.Имя		= СокрЛП(СтрокаЗаполнения.Имя);
		СтрокаЗаполнения.Отчество	= СокрЛП(СтрокаЗаполнения.Отчество);
	КонецЦикла;
	
	ПереписатьНаборыЗаписейНезависимогоРегистраИзТаблицы(РегистрыСведений.ФИОФизЛиц, ТаблицаЗаполнения, "Исключение концевых пробелов в ФИО физических лиц");
	
КонецПроцедуры // ИсключитьКонцевыеПробелыФИОФизлиц

////////////////////////////////////////////////////////////////////////////////

Процедура УдалитьСтаруюКомпонентуСклоненияФИО() Экспорт
	
	УниверсальныеМеханизмы.УдалениеВнешнейКомпоненты("NameDecl", Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ПрописатьФИОДетейПилотногоПроекта() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка,
	|	""ДанныеОДетях"" КАК ИмяТЧ,
	|	""Фамилия"" КАК ПолеФамилия,
	|	""Имя"" КАК ПолеИмя,
	|	""Отчество"" КАК ПолеОтчество
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ребенок <> """"
	|	И ОтпускПоУходуЗаРебенкомДанныеОДетях.Фамилия = """"
	|	И ОтпускПоУходуЗаРебенкомДанныеОДетях.Имя = """"
	|	И ОтпускПоУходуЗаРебенкомДанныеОДетях.Отчество = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходуДанныеОДетях.Ссылка,
	|	""ДанныеОДетях"",
	|	""Фамилия"",
	|	""Имя"",
	|	""Отчество""
	|ИЗ
	|	Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.ДанныеОДетях КАК РеестрСведенийВФССОЕжемесячныхПособияхПоУходуДанныеОДетях
	|ГДЕ
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходуДанныеОДетях.Ребенок <> """"
	|	И РеестрСведенийВФССОЕжемесячныхПособияхПоУходуДанныеОДетях.Фамилия = """"
	|	И РеестрСведенийВФССОЕжемесячныхПособияхПоУходуДанныеОДетях.Имя = """"
	|	И РеестрСведенийВФССОЕжемесячныхПособияхПоУходуДанныеОДетях.Отчество = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.Ссылка,
	|	""РаботникиОрганизации"",
	|	""ФамилияРебенка"",
	|	""ИмяРебенка"",
	|	""ОтчествоРебенка""
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПриРожденииРебенка.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.Ребенок <> """"
	|	И РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.ФамилияРебенка = """"
	|	И РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.ИмяРебенка = """"
	|	И РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.ОтчествоРебенка = """"";
	
	ТекстСообщения = "Обработка документов пилотного проекта, часть I";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаОбъектов.Следующий() Цикл
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
        Для каждого СтрокаТЧ Из Объект[ВыборкаОбъектов.ИмяТЧ] Цикл
			ОбменСведениямиОПособияхСФСС.ЗаписатьФИОРебенкаВПоляДокумента(СтрокаТЧ.Ребенок,СтрокаТЧ,ВыборкаОбъектов.ПолеФамилия,ВыборкаОбъектов.ПолеИмя,ВыборкаОбъектов.ПолеОтчество);
		КонецЦикла;
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Если Номер % 30 = 0 Тогда
				Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
			КонецЕсли;
			Номер = Номер + 1;
		#КонецЕсли
		Объект.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособности.Ссылка,
	|	РеестрСведенийВФССОПособияхПоНетрудоспособности.Ответственный
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности КАК РеестрСведенийВФССОПособияхПоНетрудоспособности
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособности.РеестрСоставил = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	И РеестрСведенийВФССОПособияхПоНетрудоспособности.Ответственный <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.Ссылка,
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.Ответственный
	|ИЗ
	|	Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу КАК РеестрСведенийВФССОЕжемесячныхПособияхПоУходу
	|ГДЕ
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.РеестрСоставил = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	И РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.Ответственный <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенка.Ссылка,
	|	РеестрСведенийВФССОПособияхПриРожденииРебенка.Ответственный
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПриРожденииРебенка КАК РеестрСведенийВФССОПособияхПриРожденииРебенка
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенка.РеестрСоставил = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	И РеестрСведенийВФССОПособияхПриРожденииРебенка.Ответственный <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пользователи.ФизЛицо КАК РеестрСоставил,
	|	АдресЭП.Представление КАК АдресЭлектроннойПочтыСоставителя,
	|	Телефон.Представление КАК ТелефонСоставителя,
	|	Пользователи.Ссылка
	|ПОМЕСТИТЬ ВТДанныеПользователей
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресЭП
	|		ПО Пользователи.Ссылка = АдресЭП.Объект
	|			И (АдресЭП.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя))
	|			И (АдресЭП.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК Телефон
	|		ПО Пользователи.ФизЛицо = Телефон.Объект
	|			И (Телефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
	|			И (Телефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|ГДЕ
	|	Пользователи.Ссылка В
	|			(ВЫБРАТЬ
	|				Документы.Ответственный
	|			ИЗ
	|				ВТДокументыКОбработке КАК Документы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОбработке.Ссылка,
	|	ДанныеПользователей.РеестрСоставил,
	|	ДанныеПользователей.АдресЭлектроннойПочтыСоставителя,
	|	ДанныеПользователей.ТелефонСоставителя
	|ИЗ
	|	ВТДокументыКОбработке КАК ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеПользователей КАК ДанныеПользователей
	|		ПО ДокументыКОбработке.Ответственный = ДанныеПользователей.Ссылка";	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов пилотного проекта, часть II");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка,
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.Дата КАК ДатаДокумента,
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ФизЛицо,
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НомерСтроки
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.СтатусНалогоплательщика = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.ПустаяСсылка)
	|	И РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ФизЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.Ссылка,
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.Ссылка.Дата,
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.ФизЛицо,
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.НомерСтроки
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПриРожденииРебенка.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.СтатусНалогоплательщика = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.ПустаяСсылка)
	|	И РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.ФизЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыРегистра.Ссылка КАК Ссылка,
	|	ДатыРегистра.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(СтатусыНалогоплательщика.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК СтатусНалогоплательщика
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыКОбработке.Ссылка КАК Ссылка,
	|		ДокументыКОбработке.ФизЛицо КАК ФизЛицо,
	|		МАКСИМУМ(СтатусФизЛицКакНалогоплательщиковНДФЛ.Период) КАК Период,
	|		ДокументыКОбработке.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		ВТДокументыКОбработке КАК ДокументыКОбработке
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусФизЛицКакНалогоплательщиковНДФЛ
	|			ПО ДокументыКОбработке.ФизЛицо = СтатусФизЛицКакНалогоплательщиковНДФЛ.ФизЛицо
	|				И ДокументыКОбработке.ДатаДокумента >= СтатусФизЛицКакНалогоплательщиковНДФЛ.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДокументыКОбработке.Ссылка,
	|		ДокументыКОбработке.ФизЛицо,
	|		ДокументыКОбработке.НомерСтроки) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусыНалогоплательщика
	|		ПО ДатыРегистра.ФизЛицо = СтатусыНалогоплательщика.ФизЛицо
	|			И ДатыРегистра.Период = СтатусыНалогоплательщика.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "РаботникиОрганизации", "Обработка документов пилотного проекта, часть III");

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходуРаботникиОрганизации.Ссылка,
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходуРаботникиОрганизации.Ссылка.Дата КАК ДатаДокумента,
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходуРаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходуРаботникиОрганизации.НомерСтроки,
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходуРаботникиОрганизации.ПриказНаОтпускПоУходуЗаРебенком,
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходуРаботникиОрганизации.Сотрудник
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.РаботникиОрганизации КАК РеестрСведенийВФССОЕжемесячныхПособияхПоУходуРаботникиОрганизации
	|ГДЕ
	|	РеестрСведенийВФССОЕжемесячныхПособияхПоУходуРаботникиОрганизации.СтатусНалогоплательщика = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.ПустаяСсылка)
	|	И РеестрСведенийВФССОЕжемесячныхПособияхПоУходуРаботникиОрганизации.ФизЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыРегистра.Ссылка КАК Ссылка,
	|	ДатыРегистра.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(СтатусыНалогоплательщика.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК СтатусНалогоплательщика
	|ПОМЕСТИТЬ ВТСтатусы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыКОбработке.Ссылка КАК Ссылка,
	|		ДокументыКОбработке.ФизЛицо КАК ФизЛицо,
	|		МАКСИМУМ(СтатусФизЛицКакНалогоплательщиковНДФЛ.Период) КАК Период,
	|		ДокументыКОбработке.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		ВТДокументыКОбработке КАК ДокументыКОбработке
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусФизЛицКакНалогоплательщиковНДФЛ
	|			ПО ДокументыКОбработке.ФизЛицо = СтатусФизЛицКакНалогоплательщиковНДФЛ.ФизЛицо
	|				И ДокументыКОбработке.ДатаДокумента >= СтатусФизЛицКакНалогоплательщиковНДФЛ.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДокументыКОбработке.Ссылка,
	|		ДокументыКОбработке.ФизЛицо,
	|		ДокументыКОбработке.НомерСтроки) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусыНалогоплательщика
	|		ПО ДатыРегистра.ФизЛицо = СтатусыНалогоплательщика.ФизЛицо
	|			И ДатыРегистра.Период = СтатусыНалогоплательщика.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыРождения.Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ДанныеОДетях.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЯвляетсяОпекуном
	|ПОМЕСТИТЬ ВТМладшиеДети
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОДетях.Ссылка КАК Ссылка,
	|		МАКСИМУМ(ДанныеОДетях.ДатаРожденияРебенка) КАК ДатаРожденияРебенка
	|	ИЗ
	|		Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.ДанныеОДетях КАК ДанныеОДетях
	|	ГДЕ
	|		ДанныеОДетях.НаРебенкаВыплачиваетсяПособие
	|		И ДанныеОДетях.Ссылка В
	|				(ВЫБРАТЬ
	|					Документы.Ссылка
	|				ИЗ
	|					ВТДокументыКОбработке КАК Документы)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеОДетях.Ссылка) КАК ДатыРождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.ДанныеОДетях КАК ДанныеОДетях
	|		ПО ДатыРождения.Ссылка = ДанныеОДетях.Ссылка
	|			И ДатыРождения.ДатаРожденияРебенка = ДанныеОДетях.ДатаРожденияРебенка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыРождения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОбработке.Ссылка КАК Ссылка,
	|	ДокументыКОбработке.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ДокументыКОбработке.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Совместительство,
	|	ДокументыКОбработке.ПриказНаОтпускПоУходуЗаРебенком.ВидДокумента КАК ВидДокумента,
	|	ДокументыКОбработке.ПриказНаОтпускПоУходуЗаРебенком.СерияДокумента КАК СерияДокумента,
	|	ДокументыКОбработке.ПриказНаОтпускПоУходуЗаРебенком.НомерДокумента КАК НомерДокумента,
	|	ДокументыКОбработке.ПриказНаОтпускПоУходуЗаРебенком.ДатаВыдачиДокумента КАК ДатаВыдачиДокумента,
	|	ДокументыКОбработке.ПриказНаОтпускПоУходуЗаРебенком.КемВыданДокумент КАК КемВыданДокумент,
	|	Статусы.СтатусНалогоплательщика,
	|	ДокументыКОбработке.ФизЛицо.ИНН КАК ИНН,
	|	ДокументыКОбработке.ФизЛицо.Пол КАК Пол,
	|	ДокументыКОбработке.ФизЛицо.ДатаРождения КАК ДатаРождения,
	|	ВЫБОР
	|		КОГДА МладшиеДети.ЯвляетсяОпекуном
	|			ТОГДА ""Опекун""
	|		КОГДА ДокументыКОбработке.ФизЛицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|			ТОГДА ""Мать""
	|		КОГДА ДокументыКОбработке.ФизЛицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Мужской)
	|			ТОГДА ""Отец""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	ВТДокументыКОбработке КАК ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
	|		ПО ДокументыКОбработке.Ссылка = Статусы.Ссылка
	|			И ДокументыКОбработке.НомерСтроки = Статусы.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМладшиеДети КАК МладшиеДети
	|		ПО ДокументыКОбработке.Ссылка = МладшиеДети.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "РаботникиОрганизации", "Обработка документов пилотного проекта, часть IV");

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура УстановитьДоступностьОтпускаВсемСотрудникамЕслиЗаполненоКоличествоДней() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыЕжегодныхОтпусков.Ссылка
	|ИЗ
	|	Справочник.ВидыЕжегодныхОтпусков КАК ВидыЕжегодныхОтпусков
	|ГДЕ
	|	(НЕ ВидыЕжегодныхОтпусков.ПредоставлятьОтпускВсемСотрудникам)
	|	И ВидыЕжегодныхОтпусков.КоличествоДнейОтпускаВГод > 0";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.ПредоставлятьОтпускВсемСотрудникам = Истина;
		Объект.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКоличествоДнейОтпусковОрганизаций() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтпускаОрганизаций.Ссылка
	|ПОМЕСТИТЬ ОбрабатываемыеДокументы
	|ИЗ
	|	Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизаций
	|ГДЕ
	|	ОтпускаОрганизаций.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
	|	И (ОтпускаОрганизаций.КоличествоДней = 0
	|				И ОтпускаОрганизаций.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ ОтпускаОрганизаций.КоличествоДнейДоп = 0
	|				И ОтпускаОрганизаций.ДатаНачалаДоп <> ДАТАВРЕМЯ(1, 1, 1))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтпускаОрганизаций.ДатаНачала КАК ДатаНачала,
	|	ОтпускаОрганизаций.ДатаОкончания
	|ПОМЕСТИТЬ ПериодыОтпусков
	|ИЗ
	|	Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизаций
	|ГДЕ
	|	ОтпускаОрганизаций.Ссылка В
	|			(ВЫБРАТЬ
	|				ОбрабатываемыеДокументы.Ссылка
	|			ИЗ
	|				ОбрабатываемыеДокументы)
	|	И ОтпускаОрганизаций.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ОтпускаОрганизаций.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтпускаОрганизаций.ДатаНачалаДоп,
	|	ОтпускаОрганизаций.ДатаОкончания
	|ИЗ
	|	Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизаций
	|ГДЕ
	|	ОтпускаОрганизаций.Ссылка В
	|			(ВЫБРАТЬ
	|				ОбрабатываемыеДокументы.Ссылка
	|			ИЗ
	|				ОбрабатываемыеДокументы)
	|	И ОтпускаОрганизаций.ДатаНачалаДоп <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ОтпускаОрганизаций.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыОтпусков.ДатаНачала,
	|	ПериодыОтпусков.ДатаОкончания,
	|	СУММА(Календарь.КалендарныеДни) КАК КоличествоДней
	|ПОМЕСТИТЬ КоличествоДнейОтпусков
	|ИЗ
	|	ПериодыОтпусков КАК ПериодыОтпусков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК Календарь
	|		ПО (Календарь.ДатаКалендаря МЕЖДУ ПериодыОтпусков.ДатаНачала И ПериодыОтпусков.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыОтпусков.ДатаНачала,
	|	ПериодыОтпусков.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускаОрганизаций.Ссылка КАК Ссылка,
	|	ОтпускаОрганизаций.НомерСтроки,
	|	ОтпускаОрганизаций.Сотрудник,
	|	ОтпускаОрганизаций.ФизЛицо,
	|	ОтпускаОрганизаций.ОсвобождатьСтавку,
	|	ОтпускаОрганизаций.ДатаНачала,
	|	ОтпускаОрганизаций.ДатаОкончания,
	|	ОтпускаОрганизаций.ПричинаОтсутствия,
	|	ОтпускаОрганизаций.ВидДополнительногоОтпуска,
	|	ОтпускаОрганизаций.РабочийГодС,
	|	ОтпускаОрганизаций.РабочийГодПо,
	|	ОтпускаОрганизаций.ДатаНачалаДоп,
	|	ОтпускаОрганизаций.Основание,
	|	ОтпускаОрганизаций.НапомнитьПоЗавершении,
	|	ОтпускаОрганизаций.Сторно,
	|	ВЫБОР
	|		КОГДА ОтпускаОрганизаций.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный)
	|			ТОГДА КоличествоДнейОтпусков.КоличествоДней
	|		ИНАЧЕ РАЗНОСТЬДАТ(ОтпускаОрганизаций.ДатаНачала, ОтпускаОрганизаций.ДатаОкончания, ДЕНЬ) + 1
	|	КОНЕЦ КАК КоличествоДней,
	|	КоличествоДнейДопОтпусков.КоличествоДней КАК КоличествоДнейДоп
	|ИЗ
	|	Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоДнейОтпусков КАК КоличествоДнейОтпусков
	|		ПО (КоличествоДнейОтпусков.ДатаНачала = ОтпускаОрганизаций.ДатаНачала)
	|			И (КоличествоДнейОтпусков.ДатаОкончания = ОтпускаОрганизаций.ДатаОкончания)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоДнейОтпусков КАК КоличествоДнейДопОтпусков
	|		ПО (КоличествоДнейДопОтпусков.ДатаНачала = ОтпускаОрганизаций.ДатаНачалаДоп)
	|			И (КоличествоДнейДопОтпусков.ДатаОкончания = ОтпускаОрганизаций.ДатаОкончания)
	|ГДЕ
	|	ОтпускаОрганизаций.Ссылка В
	|			(ВЫБРАТЬ
	|				ОбрабатываемыеДокументы.Ссылка
	|			ИЗ
	|				ОбрабатываемыеДокументы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка");
	
	ПроцедурыОбновленияИнформационнойБазы.ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "РаботникиОрганизации", "Заполнение количества дней отпуска в кадровых документах");
	
КонецПроцедуры // ЗаполнитьКоличествоДнейОтпусковОрганизаций

////////////////////////////////////////////////////////////////////////////////

Процедура ОбработкаМесяцаРасчетногоПериода() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода <> НАЧАЛОПЕРИОДА(РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода, ГОД)
	|	И (НЕ(РасчетыПоСтраховымВзносам.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|				И РасчетыПоСтраховымВзносам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Период,
	|	РасчетыПоСтраховымВзносам.Регистратор КАК Регистратор,
	|	РасчетыПоСтраховымВзносам.НомерСтроки КАК НомерСтроки,
	|	РасчетыПоСтраховымВзносам.Активность,
	|	РасчетыПоСтраховымВзносам.ВидДвижения,
	|	РасчетыПоСтраховымВзносам.Организация,
	|	РасчетыПоСтраховымВзносам.ВидПлатежа,
	|	ВЫБОР
	|		КОГДА РасчетыПоСтраховымВзносам.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогСам))
	|				И РасчетыПоСтраховымВзносам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода, ГОД)
	|	КОНЕЦ КАК МесяцРасчетногоПериода,
	|	РасчетыПоСтраховымВзносам.ОблагаетсяЕНВД,
	|	РасчетыПоСтраховымВзносам.ПФРСтраховая,
	|	РасчетыПоСтраховымВзносам.ПФРНакопительная,
	|	РасчетыПоСтраховымВзносам.ФСС,
	|	РасчетыПоСтраховымВзносам.ФФОМС,
	|	РасчетыПоСтраховымВзносам.ТФОМС,
	|	РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаи,
	|	РасчетыПоСтраховымВзносам.ПФРПоДополнительномуТарифу,
	|	РасчетыПоСтраховымВзносам.ПФРНаДоплатуКПенсииШахтерам
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.РасчетыПоСтраховымВзносам, Запрос, "Обработка документов по страховым взносам");	
	
	Запрос.УстановитьПараметр("МесяцРасчетногоПериода", ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаЕСН) КАК ВидОперации
	|ИЗ
	|	Документ.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФСС), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаФОМС), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасчетыПоСтраховымВзносам.УплатаПФР))
	|	И РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода < &МесяцРасчетногоПериода";

	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов по страховым взносам");

КонецПроцедуры

Процедура ОбновлениеВычетовНДФЛНоябрь2011() Экспорт

	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;
	
	МассивИсключений = Новый Массив;
	МассивИсключений.Добавить(ВычетыНДФЛ.Код101);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код102);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код103);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код106);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код107);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код111);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код113);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код116);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код120);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код124);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код115);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код119);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код123);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код210);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код211);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код212);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код213);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код214);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код215);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код216);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВычетыНДФЛ.Ссылка,
	|	ВычетыНДФЛ.Наименование КАК Наименование2010
	|ИЗ
	|	Справочник.ВычетыНДФЛ КАК ВычетыНДФЛ
	|ГДЕ
	|	(НЕ ВычетыНДФЛ.Ссылка В (&Исключения))";
	Запрос.УстановитьПараметр("Исключения", МассивИсключений);
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка вычетов по НДФЛ");
	
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код103, "103", "103", "103", "(не используется с 2012 года) 400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1-2 п. 1 ст. 218 Налогового кодекса РФ", "400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1 - 2 п. 1 ст. 218 Налогового кодекса Российской Федерации", "400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1 - 2 п. 1 ст. 218 Налогового кодекса Российской Федерации"
	, "103", , , Перечисления.ГруппыВычетовПоНДФЛ.Стандартные, ,"400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1-2 п. 1 ст. 218 Налогового кодекса Российской Федерации");
	
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код101, "108", "101", "101", "1000 руб. на первого, второго ребенка до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта до 24 лет", "600 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет родителям, супругам родителей", "600 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет родителям, супругам родителей"
	, "108", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "1000 руб. на каждого ребенка до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта до 24 лет");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код106, "109", "106", "106", "3000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения, студента до 24 лет, явл. инвалидом I или II группы", "1200 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет, являющегося инвалидом I или II группы, родителям, супругам родителей", "1200 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет, являющегося инвалидом I или II группы, родителям, супругам родителей"
	, "109", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "2000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения, студента до 24 лет, явл. инвалидом I или II группы");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код102, "110", "102", "102", "2000 руб. на первого, второго ребенка единственному родителю (приемному родителю), опекуну, попечителю (начиная с доходов 2009 года)", "1200 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям", "1200 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям"
	, "110", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "2000 руб. на каждого ребенка единственному родителю (приемному родителю), опекуну, попечителю (начиная с доходов 2009 года)");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код111, "111",      ,      , "2000 руб. на первого, второго ребенка до 18 лет, на учащегося очной формы обучения до 24 лет при отказе второго родителя от вычета", , 
	, "111", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "2000 руб. на каждого ребенка до 18 лет, на учащегося очной формы обучения до 24 лет при отказе второго родителя от вычета"); // с 2009 г.
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код107, "112", "107", "107", "6000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, единственному родителю и др.", "2400 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента в возрасте до 24 лет, являющегося инвалидом I или II группы, вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям", "2400 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента в возрасте до 24 лет, являющегося инвалидом I или II группы, вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям"
	, "112", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "4000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, единственному родителю и др.");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код113, "113",      ,      , "6000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, при отказе второго родителя от вычета", , 
	, "113", , , Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей, , "4000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, при отказе второго родителя от вычета"); // с 2009 г.
	
КонецПроцедуры

Процедура ОбновлениеВычетовФизлицНоябрь2011() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛСтандартныеВычетыФизлицСрезПоследних.Физлицо,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.ПустаяСсылка) КАК КодВычетаЛичный,
	|	ДАТАВРЕМЯ(2012, 1, 1) КАК Период
	|ИЗ
	|	РегистрСведений.НДФЛСтандартныеВычетыФизлиц.СрезПоследних(ДАТАВРЕМЯ(2012, 1, 1, 23, 59, 59), ) КАК НДФЛСтандартныеВычетыФизлицСрезПоследних
	|ГДЕ
	|	НДФЛСтандартныеВычетыФизлицСрезПоследних.КодВычетаЛичный = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код103)";
	
	ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.НДФЛСтандартныеВычетыФизлиц, Запрос, "Обработка сведений о вычетах сотрудников по НДФЛ");
	
КонецПроцедуры

Процедура ОбновитьНастройкиОтчетаПоМедицинскомуСтрахованию() Экспорт
	
	СписокВариантов = Новый СписокЗначений;
	СписокВариантов.Добавить(Справочники.СохраненныеНастройки.ПолучитьИмяПредопределенного(Справочники.СохраненныеНастройки.МедицинскоеСтрахование_ВыгрузкаВДМС));
	СписокВариантов.Добавить(Справочники.СохраненныеНастройки.ПолучитьИмяПредопределенного(Справочники.СохраненныеНастройки.МедицинскоеСтрахование_НовыеСотрудники));
	СписокВариантов.Добавить(Справочники.СохраненныеНастройки.ПолучитьИмяПредопределенного(Справочники.СохраненныеНастройки.МедицинскоеСтрахование_ПолисыДляПродления));
	СписокВариантов.Добавить(Справочники.СохраненныеНастройки.ПолучитьИмяПредопределенного(Справочники.СохраненныеНастройки.МедицинскоеСтрахование_УволенныеСотрудники));
	
	ТиповыеОтчеты.ОбновитьПредопределенныеВариантыОтчетов(СписокВариантов, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИндексироватьПособияСоцСтрахования2012() Экспорт
	
	// новые размеры пособий 
	ДатаДействия = '20120101';
	
	НаборЗаписей = РегистрыСведений.ГосударственныеПособия.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 465.20;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 12405.32;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 2326.00;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 4651.99;

	ПроцедурыОбновленияИнформационнойБазыПереопределяемый.УстановитьМаксимумПособияПоУходуЗаРебенкомДоПолутораЛет2011(НаборЗаписей);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ВписатьТарифыСтраховыхВзносов2012() Экспорт

	НаборЗаписей = РегистрыСведений.ТарифСтраховыхВзносов.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(РасчетСтраховыхВзносов.ТаблицаТарифовСтраховыхВзносов());
	НаборЗаписей.Записать();
	
	ДатаДействия = '20120101';
	НаборЗаписей = РегистрыСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = ДатаДействия;
	НоваяСтрока.РазмерФСС = 512000;
	НоваяСтрока.РазмерПФР = 512000;
	НоваяСтрока.РазмерФОМС = 512000;
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура ЗаполнитьКраткийСоставСохраненныхНастроек() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СохраненныеНастройки.Ссылка
	|ИЗ
	|	Справочник.СохраненныеНастройки КАК СохраненныеНастройки
	|ГДЕ
	|	СохраненныеНастройки.КраткийСоставНастройки = """"";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Настройка = Выборка.Ссылка.ПолучитьОбъект();
		Настройка.ОбменДанными.Загрузка = Истина;
		
		КраткийСоставНастройки = "";
		Для Каждого СтрокаПользователь Из Настройка.Пользователи Цикл
			Если Не ПустаяСтрока(КраткийСоставНастройки) Тогда
				КраткийСоставНастройки = КраткийСоставНастройки + ", ";
			КонецЕсли;
			
			КраткийСоставНастройки = КраткийСоставНастройки + СтрокаПользователь.Пользователь;
		КонецЦикла;
		
		Настройка.КраткийСоставНастройки = КраткийСоставНастройки;
		
		Настройка.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновлениеДоходовВычетовНДФЛДекабрь2011() Экспорт

	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;
	
	МассивИсключений = Новый Массив;
	МассивИсключений.Добавить(ВычетыНДФЛ.Код101);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код102);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код106);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код107);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код111);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код113);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код115);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код116);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код119);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код120);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код123);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код124);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код210);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код211);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код212);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код213);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код214);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код215);
	МассивИсключений.Добавить(ВычетыНДФЛ.Код216);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВычетыНДФЛ.Ссылка,
	|	ВычетыНДФЛ.КодДляОтчетности2010 КАК КодДляОтчетности2011
	|ИЗ
	|	Справочник.ВычетыНДФЛ КАК ВычетыНДФЛ
	|ГДЕ
	|	(НЕ ВычетыНДФЛ.Ссылка В (&Исключения))
	|	И ВычетыНДФЛ.КодДляОтчетности2011 <> ВычетыНДФЛ.КодДляОтчетности2010";
	Запрос.УстановитьПараметр("Исключения", МассивИсключений);
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка вычетов по НДФЛ");
	
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код101, "114/108", "На первого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет", "108", "114", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // предоставлялся до 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код115, , , "108", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код116, , , "108", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код106, "117/109", "На ребенка-инвалида до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента до 24 лет, явл. инвалидом I или II группы", "109", "117", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // предоставлялся до 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код102, "118/110", "В двойном размере на первого ребенка до 18 лет, на учащегося очной формы обучения до 24 лет единственному родителю, опекуну, попечителю", "110", "118", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // предоставлялся до 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код119, , , "110", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код120, , , "110", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код107, "121/112", "В двойном размере на ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, единственному родителю, опекуну и др.", "112", "121", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // предоставлялся до 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код111, "122/111", "В двойном размере на первого ребенка до 18 лет, на учащегося очной формы обучения до 24 лет при отказе второго родителя от вычета", "111", "122", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2009 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код123, , , "111", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код124, , , "111", , Ложь, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код113, "125/113", "В двойном размере на ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, при отказе второго родителя от вычета", "113", "125", Истина, Перечисления.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей); // с 2009 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код306, , , "306",   "-", Истина); // с 2011 г. не используется
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код310, , "Не используется с 2010 года.", , "-", Истина); // с 2010 г. не используется
	
	НаборЗаписей = РегистрыСведений.НДФЛРазмерВычетов.СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Отбор.Период.Использование = Истина;
	
	ДатаСведений = Дата("20110101");
	НаборЗаписей.Отбор.Период.Значение = ДатаСведений;
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код115, 1000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код119, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код123, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код106, 3000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код107, 6000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код113, 6000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код116, 3000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код120, 6000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код124, 6000, 280000);
	// Запишем набор записей в режиме добавления
	НаборЗаписей.Записать();
	НаборЗаписей.Очистить();
	ДатаСведений = Дата("20120101");
	НаборЗаписей.Отбор.Период.Значение = ДатаСведений;
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код103,	   0, 0);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код101, 1400, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код102, 2800, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код111, 2800, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код115, 1400, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код119, 2800, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код123, 2800, 280000);
	// Запишем набор записей в режиме добавления
	НаборЗаписей.Записать();
	
	ДоходыНДФЛ = Справочники.ДоходыНДФЛ;
	Ставка13 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
	
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1537, Ставка13, "1537");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1538, Ставка13, "1538");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1539, Ставка13, "1539");
	
КонецПроцедуры

Процедура СозданиеВРБанковскиеИздержкиПоИЛ() Экспорт
	
	БанковскиеИздержкиПоИЛ = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.УдержанияОрганизаций, "БанковскиеИздержкиПоИЛ");
	
	Если ЗначениеЗаполнено(БанковскиеИздержкиПоИЛ) Тогда
	
		Возврат;
	
	КонецЕсли;
	
	ВРОбъект = ПланыВидовРасчета.УдержанияОрганизаций.СоздатьВидРасчета();
	
	ВРОбъект.ИдентификаторЭлемента = "БанковскиеИздержкиПоИЛ";
	ВРОбъект.Наименование = "Банковские издержки по исп. листам";
	ВРОбъект.Код = "00011";
	ВРОбъект.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.БанковскиеИздержки;
	ВРОбъект.КатегорияРасчета = Справочники.КатегорииРасчетов.ЗависимоеПервогоУровня;
	
	ВРОбъект.ОбменДанными.Загрузка = Истина;
	ВРОбъект.Записать();
	
КонецПроцедуры

Процедура ОбновлениеДокументовИсполнительныйЛист() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.СпособПеречисленияПоИсполнительномуЛисту,
	|	ВложенныйЗапрос.ПочтовыйСборРассчитыватьПроцентом
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсполнительныйЛист.Ссылка КАК Ссылка,
	|		ВЫБОР
	|			КОГДА ИсполнительныйЛист.УдалитьСпособРасчетаПС = 0
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленийПоИсполнительномуЛисту.ПочтовыйПеревод)
	|			КОГДА ИсполнительныйЛист.УдалитьСпособРасчетаПС = 1
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленийПоИсполнительномуЛисту.ЧерезКассуПлатежнымПоручением)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленийПоИсполнительномуЛисту.ПочтовыйПеревод)
	|		КОНЕЦ КАК СпособПеречисленияПоИсполнительномуЛисту,
	|		ВЫБОР
	|			КОГДА ИсполнительныйЛист.УдалитьСпособРасчетаПС = 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПочтовыйСборРассчитыватьПроцентом
	|	ИЗ
	|		Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	|	ГДЕ
	|		ИсполнительныйЛист.СпособПеречисленияПоИсполнительномуЛисту = ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленийПоИсполнительномуЛисту.ПустаяСсылка)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	|		ПО ВложенныйЗапрос.Ссылка = ИсполнительныйЛист.Ссылка
	|			И ВложенныйЗапрос.СпособПеречисленияПоИсполнительномуЛисту = ИсполнительныйЛист.СпособПеречисленияПоИсполнительномуЛисту
	|			И ВложенныйЗапрос.ПочтовыйСборРассчитыватьПроцентом = ИсполнительныйЛист.ПочтовыйСборРассчитыватьПроцентом
	|ГДЕ
	|	ИсполнительныйЛист.Ссылка ЕСТЬ NULL ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ДокументОб = Выборка.Ссылка.ПолучитьОбъект();
			
			ЗаполнитьЗначенияСвойств(ДокументОб, Выборка, "СпособПеречисленияПоИсполнительномуЛисту, ПочтовыйСборРассчитыватьПроцентом");
			
			ДокументОб.ОбменДанными.Загрузка = Истина;
			
			ДокументОб.Записать();
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПроизводственныйКалендарьЗа2012Год() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РегламентированныйПроизводственныйКалендарь.Год
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.Год = 2012";
	Если Не Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Объект			= РегистрыСведений.РегламентированныйПроизводственныйКалендарь.СоздатьНаборЗаписей();
	НаборЗаписей	= РегистрыСведений.ПеренесенныеРабочиеДни.СоздатьНаборЗаписей();
	
	ВидДняСуббота		= Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота;
	ВидДняВоскресенье	= Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье;
	
	НаборЗаписей.Отбор.Год.Установить(2012);
	
	СтрокаНабораЗаписей = НаборЗаписей.Добавить();
	СтрокаНабораЗаписей.Год				= 2012;
	СтрокаНабораЗаписей.РабочийДень		= Дата(2012, 1, 6);
	СтрокаНабораЗаписей.ВыходнойДень	= Дата(2012, 1, 1);
	
	СтрокаНабораЗаписей = НаборЗаписей.Добавить();
	СтрокаНабораЗаписей.Год				= 2012;
	СтрокаНабораЗаписей.РабочийДень		= Дата(2012, 1, 9);
	СтрокаНабораЗаписей.ВыходнойДень	= Дата(2012, 1, 7);
	
	СтрокаНабораЗаписей = НаборЗаписей.Добавить();
	СтрокаНабораЗаписей.Год				= 2012;
	СтрокаНабораЗаписей.РабочийДень		= Дата(2012, 11, 5);
	СтрокаНабораЗаписей.ВыходнойДень	= Дата(2012, 11, 4);
	
	ТаблицаРегистра = РегистрыСведений.РегламентированныйПроизводственныйКалендарь.ЗаполнениеКалендаряБезПереносов(Дата(2012, 1, 1));
	
	Для Каждого СтрокаНабораЗаписей Из НаборЗаписей Цикл
		СтрокаТаблицыВыбраннойДаты			= ТаблицаРегистра.Найти(СтрокаНабораЗаписей.ВыходнойДень, "ДатаКалендаря");
		СтрокаТаблицыВыбраннойДатыПереноса	= ТаблицаРегистра.Найти(СтрокаНабораЗаписей.РабочийДень, "ДатаКалендаря");
			
		ДеньНеделиВыбраннойДаты			= ДеньНедели(СтрокаНабораЗаписей.ВыходнойДень);
		ДеньНеделиВыбраннойДатыПереноса	= ДеньНедели(СтрокаНабораЗаписей.РабочийДень);
		
		Если ДеньНеделиВыбраннойДаты = 6 ИЛИ ДеньНеделиВыбраннойДаты = 7 Тогда
			Если СтрокаТаблицыВыбраннойДаты.ВидДня = ВидДняСуббота 
				ИЛИ СтрокаТаблицыВыбраннойДаты.ВидДня = ВидДняВоскресенье Тогда
				УстанавливаемыйВидДняВыбраннойДаты = СтрокаТаблицыВыбраннойДатыПереноса.ВидДня;
			Иначе
				УстанавливаемыйВидДняВыбраннойДаты = СтрокаТаблицыВыбраннойДаты.ВидДня;
			КонецЕсли;
			
			Если ДеньНеделиВыбраннойДаты = 6 Тогда
				СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = ВидДняСуббота;
			Иначе
				СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = ВидДняВоскресенье
			КонецЕсли;
			СтрокаТаблицыВыбраннойДаты.ВидДня = УстанавливаемыйВидДняВыбраннойДаты;
				
		Иначе
			Если СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = ВидДняСуббота
				ИЛИ СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = ВидДняВоскресенье Тогда
				УстанавливаемыйВидДняВыбраннойДаты = СтрокаТаблицыВыбраннойДаты.ВидДня;
			Иначе
				УстанавливаемыйВидДняВыбраннойДаты = СтрокаТаблицыВыбраннойДатыПереноса.ВидДня;
			КонецЕсли;
			
			Если ДеньНеделиВыбраннойДатыПереноса = 6 Тогда
				СтрокаТаблицыВыбраннойДаты.ВидДня = ВидДняСуббота;
			Иначе
				СтрокаТаблицыВыбраннойДаты.ВидДня = ВидДняВоскресенье
			КонецЕсли;
			СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = УстанавливаемыйВидДняВыбраннойДаты;
			
		КонецЕсли;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	НаборЗаписей.Очистить();
	
	Объект.ЗаписатьИзТаблицыВРегистр(ТаблицаРегистра, 2012);
	Объект.Очистить();
	
КонецПроцедуры

Процедура ПрописатьВидЗастрахованногоЛица() Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаКОбработке
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|ГДЕ
	|	ГражданствоФизЛиц.ВидЗастрахованногоЛица = ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГражданствоФизЛиц.Период,
	|	ГражданствоФизЛиц.ФизЛицо,
	|	ГражданствоФизЛиц.Страна,
	|	ГражданствоФизЛиц.НеИмеетПравоНаПенсию,
	|	ВЫБОР
	|		КОГДА ГражданствоФизЛиц.НеИмеетПравоНаПенсию
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцы)
	|		КОГДА ГражданствоФизЛиц.Страна = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ГражданеРФ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ПостоянноПроживающиеИностранцы)
	|	КОНЕЦ КАК ВидЗастрахованногоЛица
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|ГДЕ
	|	ГражданствоФизЛиц.ФизЛицо В
	|			(ВЫБРАТЬ
	|				Физлица.ФизЛицо
	|			ИЗ
	|				ВТФизлицаКОбработке КАК Физлица)";
	ТекстЗаголовка = "Обработка сведений о гражданстве";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = ТекстЗаголовка;
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаРегистраторов.СледующийПоЗначениюПоля("ФизЛицо") Цикл
		НаборЗаписей = РегистрыСведений.ГражданствоФизЛиц.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Отбор.ФизЛицо.Установить(ВыборкаРегистраторов.ФизЛицо);
		Пока ВыборкаРегистраторов.Следующий() Цикл
		    ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(),ВыборкаРегистраторов);
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновлениеСтавкиРефинансированияЦБДекабрь2011() Экспорт
	
	СтавкаЦБ = РегистрыСведений.СтавкаРефинансированияЦБ.СоздатьНаборЗаписей();
	СтавкаЦБ.Отбор.Период.Установить('20111226');
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20111226';
	СтрокаНабора.Размер = 8;
	СтавкаЦБ.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбработкаСправок2НДФЛза2011год() Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка,
	|	ИСТИНА КАК СпециальныйДокумент2011года
	|ИЗ
	|	Документ.СправкаПоНДФЛВНалоговыйОрган.СотрудникиОрганизации КАК СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкаПоНДФЛВНалоговыйОрган.СуммыНалогов КАК СправкаПоНДФЛВНалоговыйОрганСуммыНалогов
	|		ПО СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка = СправкаПоНДФЛВНалоговыйОрганСуммыНалогов.Ссылка
	|ГДЕ
	|	СправкаПоНДФЛВНалоговыйОрганСуммыНалогов.НомерСтроки ЕСТЬ NULL 
	|	И СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.ОбщаяСуммаДохода > 0
	|	И СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.НалоговыйПериод = 2011
	|	И СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Проведен
	|	И (НЕ СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.СпециальныйДокумент2011года)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкаПоНДФЛСотруднику.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.СправкаПоНДФЛСотруднику КАК СправкаПоНДФЛСотруднику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкаПоНДФЛСотруднику.СуммыНалогов КАК СправкаПоНДФЛСотрудникуСуммыНалогов
	|		ПО СправкаПоНДФЛСотруднику.Ссылка = СправкаПоНДФЛСотрудникуСуммыНалогов.Ссылка
	|ГДЕ
	|	(НЕ СправкаПоНДФЛСотруднику.СпециальныйДокумент2011года)
	|	И СправкаПоНДФЛСотруднику.НалоговыйПериод = 2011
	|	И СправкаПоНДФЛСотруднику.Сотрудник <> ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	|	И СправкаПоНДФЛСотруднику.ОбщаяСуммаДохода > 0
	|	И СправкаПоНДФЛСотрудникуСуммыНалогов.НомерСтроки ЕСТЬ NULL ";

	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка Справок 2-НДФЛ за 2011 год, часть I");
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиДокумента.Ссылка КАК Ссылка,
	|	СтрокиДокумента.НомерСправки,
	|	СтрокиДокумента.Ставка,
	|	СтрокиДокумента.Задолженность,
	|	СтрокиДокумента.ОбщаяСуммаДохода,
	|	СтрокиДокумента.ОблагаемаяСуммаДохода,
	|	СтрокиДокумента.Исчислено,
	|	СтрокиДокумента.ИзлишнеУдержано,
	|	СтрокиДокумента.Удержано,
	|	СтрокиДокумента.Перечислено,
	|	СтрокиДокумента.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.СправкаПоНДФЛВНалоговыйОрган.СотрудникиОрганизации КАК СтрокиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкаПоНДФЛВНалоговыйОрган.СуммыНалогов КАК СправкаПоНДФЛВНалоговыйОрганСуммыНалогов
	|		ПО СтрокиДокумента.Ссылка = СправкаПоНДФЛВНалоговыйОрганСуммыНалогов.Ссылка
	|ГДЕ
	|	СтрокиДокумента.Ссылка.НалоговыйПериод > 2010
	|	И (НЕ СтрокиДокумента.Ссылка.СпециальныйДокумент2011года)
	|	И СправкаПоНДФЛВНалоговыйОрганСуммыНалогов.НомерСтроки ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкаПоНДФЛСотруднику.Ссылка,
	|	0,
	|	СправкаПоНДФЛСотруднику.Ставка,
	|	СправкаПоНДФЛСотруднику.Задолженность,
	|	СправкаПоНДФЛСотруднику.ОбщаяСуммаДохода,
	|	СправкаПоНДФЛСотруднику.ОблагаемаяСуммаДохода,
	|	СправкаПоНДФЛСотруднику.Исчислено,
	|	СправкаПоНДФЛСотруднику.ИзлишнеУдержано,
	|	СправкаПоНДФЛСотруднику.Удержано,
	|	СправкаПоНДФЛСотруднику.Перечислено,
	|	1
	|ИЗ
	|	Документ.СправкаПоНДФЛСотруднику КАК СправкаПоНДФЛСотруднику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкаПоНДФЛСотруднику.СуммыНалогов КАК СправкаПоНДФЛСотрудникуСуммыНалогов
	|		ПО СправкаПоНДФЛСотруднику.Ссылка = СправкаПоНДФЛСотрудникуСуммыНалогов.Ссылка
	|ГДЕ
	|	СправкаПоНДФЛСотруднику.НалоговыйПериод > 2010
	|	И (НЕ СправкаПоНДФЛСотруднику.СпециальныйДокумент2011года)
	|	И СправкаПоНДФЛСотрудникуСуммыНалогов.НомерСтроки ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "СуммыНалогов", "Обработка Справок 2-НДФЛ за 2011 год, часть II");
	
КонецПроцедуры

Процедура ОбновлениеДоходовВычетовНДФЛЯнварь2012() Экспорт

	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;
	
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код210); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код211); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код212); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код213); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код214); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код215); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код216); // с 2011 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код217); // с 2011 г.
	
	УстановитьРеквизитыКодаДоходаНДФЛ(Справочники.ДоходыНДФЛ.Код1541, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, "1541");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоходыНДФЛ.Ссылка
	|ИЗ
	|	Справочник.ДоходыНДФЛ КАК ДоходыНДФЛ
	|ГДЕ
	|	ДоходыНДФЛ.Код = ""1541""
	|	И (НЕ ДоходыНДФЛ.Предопределенный)
	|	И (НЕ ДоходыНДФЛ.ПометкаУдаления)";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.НеОтражаетсяВОтчетности2010 = Истина;
		Объект.КодДляОтчетности = "-";
		Объект.ПометкаУдаления = Истина;
		Объект.Записать();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьКонтрольРазмераСтавокШтатногоРасписания() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	УчетнаяПолитика.Организация,
	|	УчетнаяПолитика.КонтрольКоличестваСтавокШтатногоРасписания,
	|	УчетнаяПолитика.КонтрольКоличестваСтавокШтатногоРасписания КАК КонтрольРазмераСтавокШтатногоРасписания,
	|	УчетнаяПолитика.ЕдиныйНумераторКадровыхДокументов,
	|	УчетнаяПолитика.ПоказыватьТабельныеНомераВДокументах,
	|	УчетнаяПолитика.ПроставлятьАвтоматическиДатуОзнакомленияВКадровыхПриказах,
	|	УчетнаяПолитика.ПорядокСписанияФактическихОтпусков
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций КАК УчетнаяПолитика
	|ГДЕ
	|	УчетнаяПолитика.КонтрольКоличестваСтавокШтатногоРасписания
	|	И (НЕ УчетнаяПолитика.КонтрольРазмераСтавокШтатногоРасписания)");
	
	ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций, Запрос, "Заполнение настройки контроля размера ставок штатного расписания");
	
КонецПроцедуры

Процедура ЗаполнениеРеквизитовУчетныхЗаписейПриОбновлении() Экспорт
	
	Выборка = Справочники.УчетныеЗаписиДокументооборота.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектУЗ = Выборка.ПолучитьОбъект();
		Если ЗначениеЗаполнено(ОбъектУЗ.АдресЭлектроннойПочты) Тогда
			Если НЕ (ЗначениеЗаполнено(ОбъектУЗ.СпецоператорСвязи) ИЛИ ОбъектУЗ.ОбменНапрямую) Тогда
				Если Найти(НРег(ОбъектУЗ.АдресЭлектроннойПочты), "taxcom.ru")>0 Тогда
					ОбъектУЗ.СпецоператорСвязи = Перечисления.СпецоператорыСвязи.Такском;
				Иначе
					ОбъектУЗ.СпецоператорСвязи = Перечисления.СпецоператорыСвязи.Прочие;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ОбъектУЗ.СтатусУчетнойЗаписи = Перечисления.СтатусыУчетнойЗаписиДокументооборота.Активна;
		ОбъектУЗ.ОбменДанными.Загрузка = Истина;
		ОбъектУЗ.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура СозданиеВРИЛВПрожиточныхМинимумах() Экспорт

	ВидРасчета = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.УдержанияОрганизаций, "ИЛВПрожиточныхМинимумах");
	
	Если ЗначениеЗаполнено(ВидРасчета) Тогда
		Возврат;
	КонецЕсли;
	
	ВРОбъект = ПланыВидовРасчета.УдержанияОрганизаций.СоздатьВидРасчета();
	
	ВРОбъект.ИдентификаторЭлемента = "ИЛВПрожиточныхМинимумах";
	ВРОбъект.Наименование = "Удержание по исп. листу кратно величине прожиточного минимума";
	ВРОбъект.Код = "00009";
	ВРОбъект.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистВПрожиточныхМинимумах;
	ВРОбъект.КатегорияРасчета = Справочники.КатегорииРасчетов.Первичное;
	
	ВРОбъект.ОбменДанными.Загрузка = Истина;
	ВРОбъект.Записать();
	
КонецПроцедуры

Процедура ОбновлениеИсполнительныхЛистов() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсполнительныйЛист.Ссылка,
	|	ВЫБОР
	|		КОГДА ИсполнительныйЛист.УдалитьСпособРасчетаИЛ = 1
	|				И ИсполнительныйЛист.УдалитьУчитыватьБольничныеЛисты
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаУдержанийПоИЛ.ПроцентомОтЗаработкаСУчетомБольничныхЛистов)
	|		КОГДА ИсполнительныйЛист.УдалитьСпособРасчетаИЛ = 1
	|				И (НЕ ИсполнительныйЛист.УдалитьУчитыватьБольничныеЛисты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаУдержанийПоИЛ.ПроцентомОтЗаработка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаУдержанийПоИЛ.ФиксированнойСуммой)
	|	КОНЕЦ КАК СпособРасчетаУдержания
	|ИЗ
	|	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	|ГДЕ
	|	ИсполнительныйЛист.СпособРасчетаУдержания = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаУдержанийПоИЛ.ПустаяСсылка)";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка Исполнительных листов, часть I");

	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыКОбработке
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
	|ГДЕ
	|	ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|	И ПлановыеУдержанияРаботниковОрганизаций.Получатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеУдержанияРаботниковОрганизаций.Период,
	|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор КАК Регистратор,
	|	ПлановыеУдержанияРаботниковОрганизаций.НомерСтроки КАК НомерСтроки,
	|	ПлановыеУдержанияРаботниковОрганизаций.Активность,
	|	ПлановыеУдержанияРаботниковОрганизаций.Организация,
	|	ПлановыеУдержанияРаботниковОрганизаций.ФизЛицо,
	|	ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета,
	|	ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель1,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель2,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель3,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель4,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель5,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель6,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта1,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта2,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта3,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта4,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта5,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта6,
	|	ПлановыеУдержанияРаботниковОрганизаций.Действие,
	|	ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель1Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель2Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель3Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель4Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель5Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель6Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта1Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта2Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта3Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта4Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта5Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта6Завершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.ДействиеЗавершения,
	|	ВЫБОР
	|		КОГДА (НЕ ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.Получатель
	|	КОНЕЦ КАК Получатель,
	|	ВЫБОР
	|		КОГДА (НЕ ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.СпособПеречисленияПоИсполнительномуЛисту = ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленийПоИсполнительномуЛисту.ПочтовыйПеревод)
	|				И ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.ПочтовыйСборРассчитыватьПроцентом
	|			ТОГДА ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.ПроцентПочтовогоСбора
	|		КОГДА ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.СпособПеречисленияПоИсполнительномуЛисту = ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленийПоИсполнительномуЛисту.ПочтовыйПеревод)
	|				И (НЕ ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.ПочтовыйСборРассчитыватьПроцентом)
	|			ТОГДА ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.Тариф
	|		КОГДА ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.СпособПеречисленияПоИсполнительномуЛисту = ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленийПоИсполнительномуЛисту.БанковскийПеревод)
	|			ТОГДА ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.ТарифБанкаНаДенежныеПереводы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПорядокИсчисленияИздержек
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
	|ГДЕ
	|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор В
	|			(ВЫБРАТЬ
	|				РегистраторыКОбработке.Регистратор
	|			ИЗ
	|				ВТРегистраторыКОбработке КАК РегистраторыКОбработке)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыСведений.ПлановыеУдержанияРаботниковОрганизаций, Запрос, "Обработка Исполнительных листов, часть II");
	
КонецПроцедуры

Процедура ИндексироватьПособиеНаПогребение2012() Экспорт
	
	// новые размеры пособий 
	ДатаДействия = '20120101';
	НаборЗаписей = РегистрыСведений.ГосударственныеПособия.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	НаборЗаписей.Отбор.ВидПособия.Использование = Истина;
	НаборЗаписей.Отбор.ВидПособия.Значение = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 4515.60;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

// Заполняет ресурсы "Пятидневка", "Шестидневка" и "КалендарныеДни"
Процедура ЗаполнитьРесурсыЗаписиРегистра(ЗаписьРегистра)
	
	// рабочий день
	Если ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий ИЛИ
		ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
		
		ЗаписьРегистра.Пятидневка  = 1;
		ЗаписьРегистра.Шестидневка = 1;
		ЗаписьРегистра.КалендарныеДни = 1;
		
		// суббота	
	ИначеЕсли ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота Тогда
		ЗаписьРегистра.Пятидневка  = 0;
		ЗаписьРегистра.Шестидневка = 1;
		ЗаписьРегистра.КалендарныеДни = 1;
		
		// воскресение
	ИначеЕсли ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье Тогда
		ЗаписьРегистра.Пятидневка  = 0;
		ЗаписьРегистра.Шестидневка = 0;
		ЗаписьРегистра.КалендарныеДни = 1;
		
		// празничный день	
	Иначе  
		ЗаписьРегистра.Пятидневка  = 0;
		ЗаписьРегистра.Шестидневка = 0;
		ЗаписьРегистра.КалендарныеДни = 0;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПеренестиДатыПроизводственногоКалендаря(ТаблицаРегистра, СтрокаНабораЗаписей)
		
	ВидДняСуббота		= Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота;
	ВидДняВоскресенье	= Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье;

	СтрокаТаблицыВыбраннойДаты			= ТаблицаРегистра.Найти(СтрокаНабораЗаписей.ВыходнойДень, "ДатаКалендаря");
	СтрокаТаблицыВыбраннойДатыПереноса	= ТаблицаРегистра.Найти(СтрокаНабораЗаписей.РабочийДень, "ДатаКалендаря");
	
	Если СтрокаТаблицыВыбраннойДаты = Неопределено Или СтрокаТаблицыВыбраннойДатыПереноса = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ДеньНеделиВыбраннойДаты			= ДеньНедели(СтрокаНабораЗаписей.ВыходнойДень);
	ДеньНеделиВыбраннойДатыПереноса	= ДеньНедели(СтрокаНабораЗаписей.РабочийДень);
	
	Если ДеньНеделиВыбраннойДаты = 6 ИЛИ ДеньНеделиВыбраннойДаты = 7 Тогда
		Если СтрокаТаблицыВыбраннойДаты.ВидДня = ВидДняСуббота 
			ИЛИ СтрокаТаблицыВыбраннойДаты.ВидДня = ВидДняВоскресенье Тогда
			УстанавливаемыйВидДняВыбраннойДаты = СтрокаТаблицыВыбраннойДатыПереноса.ВидДня;
		Иначе
			УстанавливаемыйВидДняВыбраннойДаты = СтрокаТаблицыВыбраннойДаты.ВидДня;
		КонецЕсли;
		
		Если ДеньНеделиВыбраннойДаты = 6 Тогда
			СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = ВидДняСуббота;
		Иначе
			СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = ВидДняВоскресенье
		КонецЕсли;
		СтрокаТаблицыВыбраннойДаты.ВидДня = УстанавливаемыйВидДняВыбраннойДаты;
			
	Иначе
		Если СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = ВидДняСуббота
			ИЛИ СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = ВидДняВоскресенье Тогда
			УстанавливаемыйВидДняВыбраннойДаты = СтрокаТаблицыВыбраннойДаты.ВидДня;
		Иначе
			УстанавливаемыйВидДняВыбраннойДаты = СтрокаТаблицыВыбраннойДатыПереноса.ВидДня;
		КонецЕсли;
		
		Если ДеньНеделиВыбраннойДатыПереноса = 6 Тогда
			СтрокаТаблицыВыбраннойДаты.ВидДня = ВидДняСуббота;
		Иначе
			СтрокаТаблицыВыбраннойДаты.ВидДня = ВидДняВоскресенье
		КонецЕсли;
		СтрокаТаблицыВыбраннойДатыПереноса.ВидДня = УстанавливаемыйВидДняВыбраннойДаты;
		
	КонецЕсли;
	
КонецПроцедуры	

Функция ОтмеченВРесурсеПроизводственногоКалендаря(ПроверяемаяДата, Ресурс, ТаблицаДанныхКалендаря)
	
	НайденнаяСтрока = ТаблицаДанныхКалендаря.Найти(ПроверяемаяДата, "ДатаКалендаря");
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	Возврат НайденнаяСтрока[Ресурс];
	
КонецФункции

Процедура ПеренестиВыходныеДниМая2012() Экспорт 
	Объект = РегистрыСведений.РегламентированныйПроизводственныйКалендарь.СоздатьНаборЗаписей();
	
	МассивДат = Новый Массив;
	МассивДат.Добавить(Дата(2012, 5, 5));
	МассивДат.Добавить(Дата(2012, 5, 7));
	МассивДат.Добавить(Дата(2012, 5, 12));
	МассивДат.Добавить(Дата(2012, 5, 8));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДат", МассивДат);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря,
	|	РегламентированныйПроизводственныйКалендарь.Год,
	|	РегламентированныйПроизводственныйКалендарь.Пятидневка,
	|	РегламентированныйПроизводственныйКалендарь.Шестидневка,
	|	РегламентированныйПроизводственныйКалендарь.КалендарныеДни,
	|	РегламентированныйПроизводственныйКалендарь.ВидДня
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря В(&МассивДат)";
	
	ТаблицаРегистра = Запрос.Выполнить().Выгрузить();	
	
	НаборЗаписей	= РегистрыСведений.ПеренесенныеРабочиеДни.СоздатьНаборЗаписей();
	
		
	НаборЗаписей.Отбор.Год.Установить(2012);
	НаборЗаписей.Отбор.РабочийДень.Установить(Дата(2012, 5, 5));
	НаборЗаписей.Отбор.ВыходнойДень.Установить(Дата(2012, 5, 7));
	СтрокаНабораЗаписей = НаборЗаписей.Добавить();
	СтрокаНабораЗаписей.Год				= 2012;
	СтрокаНабораЗаписей.РабочийДень		= Дата(2012, 5, 5);
	СтрокаНабораЗаписей.ВыходнойДень	= Дата(2012, 5, 7);
	НаборЗаписей.Записать();
	
	ПеренестидатыПроизводственногоКалендаря(ТаблицаРегистра, СтрокаНабораЗаписей);
	
	НаборЗаписей.Очистить();
	
	НаборЗаписей.Отбор.Год.Установить(2012);
	НаборЗаписей.Отбор.РабочийДень.Установить(Дата(2012, 5, 12));
	НаборЗаписей.Отбор.ВыходнойДень.Установить(Дата(2012, 5, 8));
	СтрокаНабораЗаписей = НаборЗаписей.Добавить();
	СтрокаНабораЗаписей.Год				= 2012;
	СтрокаНабораЗаписей.РабочийДень		= Дата(2012, 5, 12);
	СтрокаНабораЗаписей.ВыходнойДень	= Дата(2012, 5, 8);	
	НаборЗаписей.Записать();
	ПеренестидатыПроизводственногоКалендаря(ТаблицаРегистра, СтрокаНабораЗаписей);
	НаборЗаписей.Очистить();
	
	Для Каждого СтрокаТаблицы Из ТаблицаРегистра Цикл
		ЗаполнитьРесурсыЗаписиРегистра(СтрокаТаблицы);
		
		Объект.Отбор.Год.Установить(СтрокаТаблицы.Год);
		Объект.Отбор.ДатаКалендаря.Установить(СтрокаТаблицы.ДатаКалендаря);
		
		ЗаписьРегистра = Объект.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьРегистра, СтрокаТаблицы);
		
		Объект.Записать();
		Объект.Очистить();	
	КонецЦикла;	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы,
	|	ГрафикиРаботыПоВидамВремени.Месяц,
	|	ГрафикиРаботыПоВидамВремени.План,
	|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени,
	|	ГрафикиРаботыПоВидамВремени.Дата,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначение,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьПятидневка,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьПятидневкаЧасы,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьШестидневка,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьКалендарныеДни,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеПолное,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеПолное,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНормаПолное,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНормаПолное,
	|	ГрафикиРаботыПоВидамВремени.Документ,
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы.ДлительностьРабочейНедели КАК ДлительностьРабочейНедели
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.Дата В(&МассивДат)
	|	И ГрафикиРаботыПоВидамВремени.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы
	|	И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням), ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		УсловнаяПродолжительностьДня = Выборка.ДлительностьРабочейНедели / 5;
		
		НаборЗаписейГрафики = РегистрыСведений.ГрафикиРаботыПоВидамВремени.СоздатьНаборЗаписей();
		
		Для Каждого ЭлементОтбора Из НаборЗаписейГрафики.Отбор	Цикл
			ЭлементОтбора.Установить(Выборка[ЭлементОтбора.Имя]);
		КонецЦикла;	
		
		ЗаписьГрафика = НаборЗаписейГрафики.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьГрафика, Выборка);
		
		ЗаписьГрафика.ПроизводственныйКалендарьПятидневка     = ОтмеченВРесурсеПроизводственногоКалендаря(Выборка.Дата, "Пятидневка",   ТаблицаРегистра);
		ЗаписьГрафика.ПроизводственныйКалендарьПятидневкаЧасы = УсловнаяПродолжительностьДня * ЗаписьГрафика.ПроизводственныйКалендарьПятидневка;
		ЗаписьГрафика.ПроизводственныйКалендарьШестиДневка    = ОтмеченВРесурсеПроизводственногоКалендаря(Выборка.Дата, "Шестидневка",  ТаблицаРегистра);
		ЗаписьГрафика.ПроизводственныйКалендарьКалендарныеДни = ОтмеченВРесурсеПроизводственногоКалендаря(Выборка.Дата, "КалендарныеДни", ТаблицаРегистра);
		
		НаборЗаписейГрафики.Записать();
	КонецЦикла;	
		
КонецПроцедуры	

Процедура ОбновитьВидСтажаСЗВ4ОтпускаПоУходуЗаРебенком() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисления.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.ВидСтажаСЗВ4 <> ЗНАЧЕНИЕ(Перечисление.ВидыСтажаСЗВ4.ДЛДЕТИ)
	|	И ОсновныеНачисления.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ВРОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВРОбъект.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.ДЛДЕТИ;
		ВРОбъект.ОбменДанными.Загрузка = Истина;
		ВРОбъект.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет предопределенные элементы для перехода с 1С:Предприятие 7.7
//
Процедура ЗаполнитьПредопределенныеЭлементы77() Экспорт
	
	ЗиК = Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ЗарплатаКадры.ПолучитьОбъект();
	Зик.Конфигурация				= "Зарплата+Кадры. Редакция 2.3";
	Зик.ИдентификаторКонфигурации	= "R2CLKTK";
	Зик.НомерРелиза					= "7.70.341";
	Зик.КонвертацияПомощник			= "PrB_Wiz";
	Зик.КонвертацияОбработка		= "V77Exp";
	Зик.КонвертацияПравила			= "PrB";
	Зик.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьРеквизитыУчетаПремий() Экспорт

	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.ГодУчетаПремийПоИтогамГода = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регистраторы.Регистратор КАК Регистратор,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	|	ОсновныеНачисленияРаботниковОрганизаций.Сторно,
	|	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник,
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДополнительныйРезультат,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноЧасов,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДнейПоПятидневке,
	|	ОсновныеНачисленияРаботниковОрганизаций.НормаДней,
	|	ОсновныеНачисленияРаботниковОрганизаций.НормаЧасов,
	|	ОсновныеНачисленияРаботниковОрганизаций.НормаДнейПоПятидневке,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноЧасовПоПятидневке,
	|	ОсновныеНачисленияРаботниковОрганизаций.НормаЧасовПоПятидневке,
	|	ОсновныеНачисленияРаботниковОрганизаций.ГрафикРаботы,
	|	ОсновныеНачисленияРаботниковОрганизаций.ГрафикРаботыНорма,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидУчетаВремени,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель2,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель3,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель4,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель5,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель6,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДополнительныеДанные,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
	|	ОсновныеНачисленияРаботниковОрганизаций.Авторасчет,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВариантАлгоритмаРасчета,
	|	ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	|	ОсновныеНачисленияРаботниковОрганизаций.РасчетнаяБазаЗаЕдиницуНормыВремени,
	|	НЕОПРЕДЕЛЕНО КАК ДополнительноеПоле,
	|	ГОД(ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.БазовыйПериодПрошлыйМесяц
	|				ТОГДА ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	|		КОНЕЦ) КАК ГодУчетаПремийПоИтогамГода,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.БазовыйПериодПрошлыйМесяц
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаНачалаБазовогоПериода,
	|	ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТРегистраторы КАК Регистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ПО Регистраторы.Регистратор = ОсновныеНачисленияРаботниковОрганизаций.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";

	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "НЕОПРЕДЕЛЕНО КАК ДополнительноеПоле,", ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ДополнительныеПоляОсновногоРегистраРасчетов());
	ПереписатьНаборыЗаписейРегистраРасчетаПоРегистраторам(РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций, Ложь, Запрос, "Обработка результатов расчета, часть I");	
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияРаботниковОрганизаций.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ДополнительныеНачисленияРаботниковОрганизаций.ГодУчетаПремийПоИтогамГода = 0
	|	И ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регистраторы.Регистратор КАК Регистратор,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
	|	ДополнительныеНачисленияРаботниковОрганизаций.НомерСтроки КАК НомерСтроки,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Сторно,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Организация,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Результат,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	|	ДополнительныеНачисленияРаботниковОрганизаций.СкидкаПриНалогообложении,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Показатель1,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Показатель2,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Показатель3,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Показатель4,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Показатель5,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Показатель6,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ЧислоМесяцев,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ГрафикРаботы,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Авторасчет,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ДокументОснование,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ВидУчетаВремени,
	|	ДополнительныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	|	ВЫБОР
	|		КОГДА ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 0
	|		ИНАЧЕ ГОД(ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало)
	|	КОНЕЦ КАК ГодУчетаПремийПоИтогамГода,
	|	ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало КАК ДатаНачалаБазовогоПериода
	|ИЗ
	|	ВТРегистраторы КАК Регистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
	|		ПО Регистраторы.Регистратор = ДополнительныеНачисленияРаботниковОрганизаций.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейРегистраРасчетаПоРегистраторам(РегистрыРасчета.ДополнительныеНачисленияРаботниковОрганизаций, Ложь, Запрос, "Обработка результатов расчета, часть II");	

КонецПроцедуры

Процедура ПроставитьВУчетнойПолитикеОтношениеКПремиям() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.РасчетЗарплатыОрганизацииПоОтветственным, ЛОЖЬ) КАК РасчетЗарплатыОрганизацииПоОтветственным,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.УпрощенныйУчетНДФЛ, ЛОЖЬ) КАК УпрощенныйУчетНДФЛ,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.УчетЗадолженностиПоМесяцам, ИСТИНА) КАК УчетЗадолженностиПоМесяцам,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.ПроверкаПериодовНачисления, ЛОЖЬ) КАК ПроверкаПериодовНачисления,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.ИспользуютсяНачисленияВВалюте, ЛОЖЬ) КАК ИспользуютсяНачисленияВВалюте,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.ПроцентДоплатыЗаРаботуВНочноеВремя, 20) КАК ПроцентДоплатыЗаРаботуВНочноеВремя,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.ПроцентДоплатыЗаРаботуВВечернееВремя, 10) КАК ПроцентДоплатыЗаРаботуВВечернееВремя,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.УчитыватьНевыходыДляПлановогоАванса, ИСТИНА) КАК УчитыватьНевыходыДляПлановогоАванса,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.ДатаРасчетаПлановогоАванса, 15) КАК ДатаРасчетаПлановогоАванса,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.УпрощенныйУчетВзаиморасчетов, ИСТИНА) КАК УпрощенныйУчетВзаиморасчетов,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.НеУчитыватьПраздникиВоВремяОтпускаПриОплатеБольничных, ЛОЖЬ) КАК НеУчитыватьПраздникиВоВремяОтпускаПриОплатеБольничных,
	|	ИСТИНА КАК НеУменьшатьПропорциональныеПремии
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций КАК УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций
	|		ПО Организации.Ссылка = УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.Организация
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций, Запрос, "Обновление учетной политики");

КонецПроцедуры

Процедура ОбновлениеРеестровПособийПриРожденииРебенка() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПриРожденииРебенка.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.ВидСправкиОРожденииРебенка = ЗНАЧЕНИЕ(Перечисление.ВидыСправокОРожденииРебенка.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.Ссылка КАК Ссылка,
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.ВидСправкиОРожденииРебенка = ЗНАЧЕНИЕ(Перечисление.ВидыСправокОРожденииРебенка.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСправокОРожденииРебенка.ФормаНомер24)
	|		ИНАЧЕ РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.ВидСправкиОРожденииРебенка
	|	КОНЕЦ КАК ВидСправкиОРожденииРебенка
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПриРожденииРебенка.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПриРожденииРебенкаРаботникиОрганизации.Ссылка В
	|			(ВЫБРАТЬ
	|				Документы.Ссылка
	|			ИЗ
	|				ВТДокументы КАК Документы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "РаботникиОрганизации", "Обработка реестров пособий при рождении ребенка");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ВзвестиФлажокУчитыватьДоходыНДФЛПоПериодуДействия() Экспорт

	Если Не ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию,"УчитыватьПоПериодуДействия") Тогда
		Объект = Справочники.ДоходыНДФЛ.КодДоходаПоУмолчанию.ПолучитьОбъект();
		Объект.УчитыватьПоПериодуДействия = Истина;
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.Записать();
	КонецЕсли;
	Если Не ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Справочники.ДоходыНДФЛ.Код2012,"УчитыватьПоПериодуДействия") Тогда
		Объект = Справочники.ДоходыНДФЛ.Код2012.ПолучитьОбъект();
		Объект.УчитыватьПоПериодуДействия = Истина;
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.Записать();
	КонецЕсли;

КонецПроцедуры

Процедура ВыделитьКодНалоговогоОрганаВСправках2НДФЛ() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкаПоНДФЛВНалоговыйОрган.Ссылка,
	|	СправкаПоНДФЛВНалоговыйОрган.Организация.КодИМНС КАК КодИФНС
	|ИЗ
	|	Документ.СправкаПоНДФЛВНалоговыйОрган КАК СправкаПоНДФЛВНалоговыйОрган
	|ГДЕ
	|	СправкаПоНДФЛВНалоговыйОрган.КодИФНС = """"
	|	И ЕСТЬNULL(СправкаПоНДФЛВНалоговыйОрган.Организация.КодИМНС, """") <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправкаПоНДФЛСотруднику.Ссылка,
	|	СправкаПоНДФЛСотруднику.Организация.КодИМНС
	|ИЗ
	|	Документ.СправкаПоНДФЛСотруднику КАК СправкаПоНДФЛСотруднику
	|ГДЕ
	|	СправкаПоНДФЛСотруднику.КодИФНС = """"
	|	И ЕСТЬNULL(СправкаПоНДФЛСотруднику.Организация.КодИМНС, """") <> """"";
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка справок 2-НДФЛ");

КонецПроцедуры

Процедура ОписатьМатпомощьПрокуроров() Экспорт

	ОписатьВидДоходаПоСтраховымВзносам(Справочники.ДоходыПоСтраховымВзносам.МатпомощьПрокуроров,					Ложь, Истина,	Истина); // ПФР , ФСС, ФОМС
	ОписатьВидДоходаПоСтраховымВзносам(Справочники.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенкаПрокуроров,	Ложь, Истина,	Истина); // ПФР , ФСС, ФОМС
	
	НаборЗаписей = РегистрыСведений.СтраховыеВзносыСкидкиКДоходам.СоздатьНаборЗаписей();

	ДатаСведений = '20100101';
	НаборЗаписей.Отбор.Период.Значение = ДатаСведений;
	НаборЗаписей.Отбор.Период.Использование = Истина;

	НаборЗаписей.Отбор.ВидДохода.ВидСравнения = ВидСравнения.Равно;
	НаборЗаписей.Отбор.ВидДохода.Использование = Истина;
	
	ВидДохода = Справочники.ДоходыПоСтраховымВзносам.МатпомощьПрокуроров;
	НаборЗаписей.Отбор.ВидДохода.Значение = ВидДохода;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= ВидДохода;
	НоваяЗапись.ГодоваяСкидка	= 4000;
	НаборЗаписей.Записать();
	
	НаборЗаписей.Очистить();
	ВидДохода = Справочники.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенкаПрокуроров;
	НаборЗаписей.Отбор.ВидДохода.Значение = ВидДохода;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= ВидДохода;
	НоваяЗапись.НормативЗатрат	= 50000;
	НаборЗаписей.Записать();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИсправитьОписаниеУдержаний() Экспорт

	ВидРасчета = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.УдержанияОрганизаций, "ИЛВПрожиточныхМинимумах");
	
	Если ЗначениеЗаполнено(ВидРасчета) Тогда
		Если ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ВидРасчета, "СпособРасчета") = Перечисления.СпособыРасчетаОплатыТруда.УдержаниеФиксированнойСуммой Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	УдержанияРаботниковОрганизаций.Регистратор
			|ИЗ
			|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
			|ГДЕ
			|	УдержанияРаботниковОрганизаций.ВидРасчета = &ВидРасчета
			|	И (УдержанияРаботниковОрганизаций.ДополнительныеДанные <> ЗНАЧЕНИЕ(Справочник.ПрожиточныеМинимумы.ПустаяСсылка)
			|			ИЛИ УдержанияРаботниковОрганизаций.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор
			|ИЗ
			|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
			|ГДЕ
			|	(ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
			|			ИЛИ ПлановыеУдержанияРаботниковОрганизаций.ПрожиточныйМинимум <> ЗНАЧЕНИЕ(Справочник.ПрожиточныеМинимумы.ПустаяСсылка))
			|	И ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета = &ВидРасчета";
			Запрос.УстановитьПараметр("ВидРасчета", ВидРасчета);
			Если Запрос.Выполнить().Пустой() Тогда
				
				ВРОбъект = ВидРасчета.ПолучитьОбъект();
				ВРОбъект.ИдентификаторЭлемента = "";
				
				ВРОбъект.ОбменДанными.Загрузка = Истина;
				ВРОбъект.Записать();
				
				СозданиеВРИЛВПрожиточныхМинимумах();
				
			Иначе
				
				ВРОбъект = ВидРасчета.ПолучитьОбъект();
				ВРОбъект.Наименование = "Удержание по исп. листу кратно величине прожиточного минимума";
				ВРОбъект.Код = "00009";
				ВРОбъект.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистВПрожиточныхМинимумах;
				ВРОбъект.КатегорияРасчета = Справочники.КатегорииРасчетов.Первичное;
				
				ВРОбъект.ОбменДанными.Загрузка = Истина;
				ВРОбъект.Записать();
				
				ВидРасчетаДСВ = СоздатьВидРасчета(ПланыВидовРасчета.УдержанияОрганизаций, "00099", "Добровольные страховые взносы в ПФР (фиксированной суммой)");
				ВРОбъект = ВидРасчетаДСВ.ПолучитьОбъект();
				ВРОбъект.СпособРасчета            = Перечисления.СпособыРасчетаОплатыТруда.УдержаниеФиксированнойСуммой;
				ВРОбъект.КатегорияРасчета         = Справочники.КатегорииРасчетов.Первичное;
				ВРОбъект.ЯвляетсяДСВ			  = Истина;
				ВРОбъект.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству;
				ВРОбъект.ОбменДанными.Загрузка = Истина;
				ВРОбъект.Записать();
				
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		СозданиеВРИЛВПрожиточныхМинимумах()
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСправочникЛПУ() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ
	|ПОМЕСТИТЬ ВТ_ОГРН_ЛПУ
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МедицинскиеОрганизации КАК МедицинскиеОрганизации
	|		ПО РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ = МедицинскиеОрганизации.ОГРН
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ <> """"
	|	И МедицинскиеОрганизации.Ссылка ЕСТЬ NULL 
	|	И НЕ РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ,
	|	МАКСИМУМ(РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТДатыДокументов
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ В
	|			(ВЫБРАТЬ
	|				ОГРНы_ЛПУ.ОГРН_ЛПУ
	|			ИЗ
	|				ВТ_ОГРН_ЛПУ КАК ОГРНы_ЛПУ)
	|	И НЕ РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыДокументов.ОГРН_ЛПУ,
	|	МАКСИМУМ(РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТРеестры
	|ИЗ
	|	ВТДатыДокументов КАК ДатыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|		ПО ДатыДокументов.Дата = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.Дата
	|			И ДатыДокументов.ОГРН_ЛПУ = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ
	|ГДЕ
	|	НЕ РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыДокументов.ОГРН_ЛПУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка,
	|	МАКСИМУМ(РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НомерСтроки) КАК НомерСтроки,
	|	Реестры.ОГРН_ЛПУ
	|ПОМЕСТИТЬ ВТСтрокиОписанияЛПУ
	|ИЗ
	|	ВТРеестры КАК Реестры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|		ПО Реестры.Ссылка = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка
	|			И Реестры.ОГРН_ЛПУ = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ
	|
	|СГРУППИРОВАТЬ ПО
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка,
	|	Реестры.ОГРН_ЛПУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ КАК ОГРН,
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ КАК Наименование,
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.АдресЛПУ КАК Адрес
	|ИЗ
	|	ВТСтрокиОписанияЛПУ КАК СтрокиОписанияЛПУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|		ПО СтрокиОписанияЛПУ.Ссылка = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка
	|			И СтрокиОписанияЛПУ.НомерСтроки = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НомерСтроки";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовыйЭлемент = Справочники.МедицинскиеОрганизации.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, Выборка);
		Если ЗначениеЗаполнено(Выборка.Адрес) Тогда
			НовыйЭлемент.АдресКодПоКЛАДР = ОбменСведениямиОПособияхСФСС.КодАдресаПоКЛАДРдляФСС(Выборка.Адрес);
		КонецЕсли;
		НовыйЭлемент.Записать();
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ
	|ПОМЕСТИТЬ ВТ_НаименованиеЛПУ
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МедицинскиеОрганизации КАК МедицинскиеОрганизации
	|		ПО РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ = МедицинскиеОрганизации.Наименование
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ = """"
	|	И РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ <> """"
	|	И МедицинскиеОрганизации.Ссылка ЕСТЬ NULL 
	|	И НЕ РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ,
	|	МАКСИМУМ(РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТДатыДокументов
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|ГДЕ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ = """"
	|	И РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ В
	|			(ВЫБРАТЬ
	|				НаименованияЛПУ.НаименованиеЛПУ
	|			ИЗ
	|				ВТ_НаименованиеЛПУ КАК НаименованияЛПУ)
	|	И НЕ РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыДокументов.НаименованиеЛПУ,
	|	МАКСИМУМ(РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТРеестры
	|ИЗ
	|	ВТДатыДокументов КАК ДатыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|		ПО ДатыДокументов.Дата = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.Дата
	|			И ДатыДокументов.НаименованиеЛПУ = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ
	|			И (РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ = """")
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыДокументов.НаименованиеЛПУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка,
	|	МАКСИМУМ(РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НомерСтроки) КАК НомерСтроки,
	|	Реестры.НаименованиеЛПУ
	|ПОМЕСТИТЬ ВТСтрокиОписанияЛПУ
	|ИЗ
	|	ВТРеестры КАК Реестры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|		ПО Реестры.Ссылка = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка
	|			И Реестры.НаименованиеЛПУ = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ
	|			И (РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ = """")
	|
	|СГРУППИРОВАТЬ ПО
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка,
	|	Реестры.НаименованиеЛПУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ОГРН_ЛПУ КАК ОГРН,
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НаименованиеЛПУ КАК Наименование,
	|	РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.АдресЛПУ КАК Адрес
	|ИЗ
	|	ВТСтрокиОписанияЛПУ КАК СтрокиОписанияЛПУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийВФССОПособияхПоНетрудоспособности.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|		ПО СтрокиОписанияЛПУ.Ссылка = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка
	|			И СтрокиОписанияЛПУ.НомерСтроки = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.НомерСтроки";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовыйЭлемент = Справочники.МедицинскиеОрганизации.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, Выборка);
		Если ЗначениеЗаполнено(Выборка.Адрес) Тогда
			НовыйЭлемент.АдресКодПоКЛАДР = ОбменСведениямиОПособияхСФСС.КодАдресаПоКЛАДРдляФСС(Выборка.Адрес);
		КонецЕсли;
		НовыйЭлемент.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьРегистрДопустимыхСочетанийМеждуГруппамиСтажа() Экспорт

	НаборЗаписей = РегистрыСведений.ДопустимыеСочетанияМеждуГруппамиСтажа.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.НомерПравила.Установить("790.11");
	
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "___", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "_МД", "28-СМХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "___", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "_МД", "28-СМ   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "___", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "_МД", "28-ГД   ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "___", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "2260000б        ", "       ", "_МД", "28-ГДХР ");
	ДопустимоеСочетаниеСтажа(НаборЗаписей, "790.11", "27-2    ", "=        ", "22600000-1754а  ", "       ", "_МД", "28-ГДХР ");
	
	НаборЗаписей.Записать();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновлениеСтавкиРефинансированияЦБСентябрь2012() Экспорт
	
	СтавкаЦБ = РегистрыСведений.СтавкаРефинансированияЦБ.СоздатьНаборЗаписей();
	СтавкаЦБ.Отбор.Период.Установить('20120914');
	СтрокаНабора = СтавкаЦБ.Добавить();
	СтрокаНабора.Период = '20120914';
	СтрокаНабора.Размер = 8.25;
	СтавкаЦБ.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ВписатьТарифПредпринимателяПрименяющегоПатент() Экспорт

	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.ИндивидуальныйПредпринимательПрименяющийПатент);
	
КонецПроцедуры

Процедура ВосстановитьДатыВыплатыПоНДФЛ() Экспорт

	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.Ссылка,
	|	НачислениеПоБольничномуЛисту.Дата
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|ГДЕ
	|	НачислениеПоБольничномуЛисту.ДатаВыплатыДохода = ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеОтпускаРаботникамОрганизаций.Ссылка,
	|	НачислениеОтпускаРаботникамОрганизаций.Дата
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК НачислениеОтпускаРаботникамОрганизаций
	|ГДЕ
	|	НачислениеОтпускаРаботникамОрганизаций.ДатаВыплатыДохода = ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияРазовыхНачисленийРаботниковОрганизаций.Ссылка,
	|	РегистрацияРазовыхНачисленийРаботниковОрганизаций.Дата
	|ИЗ
	|	Документ.РегистрацияРазовыхНачисленийРаботниковОрганизаций КАК РегистрацияРазовыхНачисленийРаботниковОрганизаций
	|ГДЕ
	|	РегистрацияРазовыхНачисленийРаботниковОрганизаций.ДатаВыплатыДохода = ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительнаяТаблица.Ссылка,
	|	ДополнительнаяТаблица.Дата
	|ИЗ
	|	&ДополнительнаяТаблица КАК ДополнительнаяТаблица
	|ГДЕ
	|	ДополнительнаяТаблица.ДатаВыплатыДохода = ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регистраторы.Ссылка,
	|	ЕСТЬNULL(МАКСИМУМ(НДФЛСведенияОДоходах.Период), Регистраторы.Дата) КАК ДатаВыплатыДохода
	|ИЗ
	|	ВТДокументы КАК Регистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|		ПО Регистраторы.Ссылка = НДФЛСведенияОДоходах.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	Регистраторы.Ссылка,
	|	Регистраторы.Дата";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ДополнительнаяТаблица", ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ИмяДополнительногоДокумента());
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка межрасчетных документов");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьПроизводственныйКалендарьЗа2013Год() Экспорт
	
	ДатыОтмененныхПереносов = Новый Массив;
	ДатыОтмененныхПереносов.Добавить('20130225');
	ПереЗаполнитьПроизводственныйКалендарьСУчетомПереносов(2013, ДатыОтмененныхПереносов);		
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИндексироватьМРОТ2013() Экспорт
	
	ДатаДействия = '20130101';
	НаборЗаписей = РегистрыСведений.МинимальнаяОплатаТрудаРФ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 5205;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ИндексироватьПособияСоцСтрахования2013() Экспорт
	
	ДатаДействия = '20130101';
	
	НаборЗаписей = РегистрыСведений.ГосударственныеПособия.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 490.79;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 13087.61;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 2453.93;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 4907.85;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 4763.96;
	
	ПроцедурыОбновленияИнформационнойБазыПереопределяемый.УстановитьМаксимумПособияПоУходуЗаРебенкомДоПолутораЛет2013(НаборЗаписей);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ИндексироватьПредельнуюВеличинуБазы2013() Экспорт
	
	ДатаДействия = '20130101';
	НаборЗаписей = РегистрыСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = ДатаДействия;
	НоваяСтрока.РазмерФСС = 568000;
	НоваяСтрока.РазмерПФР = 568000;
	НоваяСтрока.РазмерФОМС = 568000;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьФИОВЗаявленииФСС() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Ссылка
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.ЗаявлениеВФССОВозмещенииРасходовНаПогребение.РаботникиОрганизации КАК ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации
	|ГДЕ
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Фамилия = """"
	|	И ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Имя = """"
	|	И ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Отчество = """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Ссылка,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.НомерСтроки,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Сотрудник,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.ФизЛицо,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Статус,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.РазмерПособия,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.ДокументОснование,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.КоличествоСтраниц,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Фамилия,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Имя,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Отчество,
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Ссылка.Дата КАК ДатаАктуальности
	|ПОМЕСТИТЬ ВТДанныеОПособиях
	|ИЗ
	|	Документ.ЗаявлениеВФССОВозмещенииРасходовНаПогребение.РаботникиОрганизации КАК ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации
	|ГДЕ
	|	ЗаявлениеВФССОВозмещенииРасходовНаПогребениеРаботникиОрганизации.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыКОбработке.Ссылка
	|			ИЗ
	|				ВТДокументыКОбработке КАК ДокументыКОбработке)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.Ссылка КАК Ссылка,
	|	Периоды.Сотрудник,
	|	Периоды.ФизЛицо,
	|	Периоды.Статус,
	|	Периоды.РазмерПособия,
	|	Периоды.ДокументОснование,
	|	Периоды.КоличествоСтраниц,
	|	ВЫБОР
	|		КОГДА Периоды.Фамилия = """"
	|			ТОГДА ФИОФизЛиц.Фамилия
	|		ИНАЧЕ Периоды.Фамилия
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА Периоды.Имя = """"
	|			ТОГДА ФИОФизЛиц.Имя
	|		ИНАЧЕ Периоды.Имя
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА Периоды.Отчество = """"
	|			ТОГДА ФИОФизЛиц.Отчество
	|		ИНАЧЕ Периоды.Отчество
	|	КОНЕЦ КАК Отчество,
	|	Периоды.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОПособиях.Ссылка КАК Ссылка,
	|		ДанныеОПособиях.НомерСтроки КАК НомерСтроки,
	|		ДанныеОПособиях.Сотрудник КАК Сотрудник,
	|		ДанныеОПособиях.ФизЛицо КАК ФизЛицо,
	|		ДанныеОПособиях.Статус КАК Статус,
	|		ДанныеОПособиях.РазмерПособия КАК РазмерПособия,
	|		ДанныеОПособиях.ДокументОснование КАК ДокументОснование,
	|		ДанныеОПособиях.КоличествоСтраниц КАК КоличествоСтраниц,
	|		ДанныеОПособиях.Фамилия КАК Фамилия,
	|		ДанныеОПособиях.Имя КАК Имя,
	|		ДанныеОПособиях.Отчество КАК Отчество,
	|		ДанныеОПособиях.ДатаАктуальности КАК ДатаАктуальности,
	|		МАКСИМУМ(ФИОФизЛиц.Период) КАК Период
	|	ИЗ
	|		ВТДанныеОПособиях КАК ДанныеОПособиях
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц КАК ФИОФизЛиц
	|			ПО ДанныеОПособиях.ФизЛицо = ФИОФизЛиц.ФизЛицо
	|				И ДанныеОПособиях.ДатаАктуальности >= ФИОФизЛиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеОПособиях.Ссылка,
	|		ДанныеОПособиях.НомерСтроки,
	|		ДанныеОПособиях.Сотрудник,
	|		ДанныеОПособиях.ФизЛицо,
	|		ДанныеОПособиях.Статус,
	|		ДанныеОПособиях.РазмерПособия,
	|		ДанныеОПособиях.ДокументОснование,
	|		ДанныеОПособиях.КоличествоСтраниц,
	|		ДанныеОПособиях.Фамилия,
	|		ДанныеОПособиях.Имя,
	|		ДанныеОПособиях.Отчество,
	|		ДанныеОПособиях.ДатаАктуальности) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц КАК ФИОФизЛиц
	|		ПО Периоды.ФизЛицо = ФИОФизЛиц.ФизЛицо
	|			И Периоды.Период = ФИОФизЛиц.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";

	ТекстСообщения = "Обработка Заявлений в ФСС о возмещении расходов на погребение";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	СтруктураПоиска = Новый Структура("НомерСтроки");
	Пока ВыборкаОбъектов.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.РаботникиОрганизации.Очистить();
		
		Пока ВыборкаОбъектов.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Объект.РаботникиОрганизации.Добавить(),ВыборкаОбъектов);
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		
		Объект.Записать();
		
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли

	
КонецПроцедуры

Процедура ЗаполнитьТарифыДополнительныхВзносовЗаЗанятыхНаРаботахСДосрочнойПенсией() Экспорт

	НаборЗаписей = РегистрыСведений.ТарифыВзносовЗаЗанятыхНаРаботахСДосрочнойПенсией.СоздатьНаборЗаписей();	
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = '20130101';
	Запись.ЗаЗанятыхНаПодземныхИВредныхРаботах = 4;
	Запись.ЗаЗанятыхНаТяжелыхИПрочихРаботах = 2;
	Запись = НаборЗаписей.Добавить();
	Запись.Период = '20140101';
	Запись.ЗаЗанятыхНаПодземныхИВредныхРаботах = 6;
	Запись.ЗаЗанятыхНаТяжелыхИПрочихРаботах = 4;
	Запись = НаборЗаписей.Добавить();
	Запись.Период = '20150101';
	Запись.ЗаЗанятыхНаПодземныхИВредныхРаботах = 9;
	Запись.ЗаЗанятыхНаТяжелыхИПрочихРаботах = 6;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ОпределитьКонстантуИспользуютсяРаботыСДосрочнойПенсией() Экспорт

	Если Константы.ИспользуютсяРаботыСДосрочнойПенсией.Получить() Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Константы.ИспользуетсяТрудШахтеров
	|				ИЛИ Константы.ИспользуетсяТрудЧленовЛетныхЭкипажей
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуютсяРаботыСДосрочнойПенсией
	|ИЗ
	|	Константы КАК Константы";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И Выборка.ИспользуютсяРаботыСДосрочнойПенсией Тогда
		Константы.ИспользуютсяРаботыСДосрочнойПенсией.Установить(Истина);
		Возврат
	КонецЕсли;
	
	ОснованияПП1_18п1Статьи27 = Новый Массив;
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ВП);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ГР);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_12);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_14);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_15);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.Ст28_СП);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.ВЫСШПИЛ);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.САМОЛЕТ);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.СПАСАВ);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.СПЕЦАВ);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.УЧЛЕТ);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.НОРМАПР);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.НОРМСП);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.РЕАКТИВН);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.ЛЕТРАБ);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.ИТСИСП);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.ИТСМАВ);
	ОснованияПП1_18п1Статьи27.Добавить(Справочники.ОснованияВыслугиЛет.ИНСПЕКТ);
	
	УсловияТрудаПП1_18п1Статьи27 = Новый Массив; 
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_1);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_10);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_2);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_3);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_4);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_5);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_6);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_7);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_8);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_9);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст28_ОС);
	УсловияТрудаПП1_18п1Статьи27.Добавить(Справочники.ОсобыеУсловияТруда.Ст28_ПЖ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДолжностиОрганизаций.Ссылка
	|ИЗ
	|	Справочник.ДолжностиОрганизаций КАК ДолжностиОрганизаций
	|ГДЕ
	|	ДолжностиОрганизаций.ОснованиеВыслугиЛет В(&ОснованияПП1_18п1Статьи27)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(&ДатаЗакона) КАК ШтатноеРасписаниеОрганизацийСрезПоследних
	|ГДЕ
	|	ШтатноеРасписаниеОрганизацийСрезПоследних.ОсобыеУсловияТруда В(&УсловияТрудаПП1_18п1Статьи27)";
	Запрос.УстановитьПараметр("ДатаЗакона",ПроведениеРасчетов.ДатаВводаДополнительногоТарифаЗаРаботыСДосрочнойПенсией());
	Запрос.УстановитьПараметр("ОснованияПП1_18п1Статьи27",ОснованияПП1_18п1Статьи27);
	Запрос.УстановитьПараметр("УсловияТрудаПП1_18п1Статьи27",УсловияТрудаПП1_18п1Статьи27);
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		Константы.ИспользуютсяРаботыСДосрочнойПенсией.Установить(Истина);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИсправитьРасчетыСФССвПилотныхРегионах() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",	 ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	ТекстЗапроса= 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПособияСоциальномуСтрахованию.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.ПособияСоциальномуСтрахованию КАК ПособияСоциальномуСтрахованию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|		ПО ПособияСоциальномуСтрахованию.Регистратор = РасчетыПоСтраховымВзносам.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений КАК УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений
	|		ПО ПособияСоциальномуСтрахованию.Организация = УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений.Организация
	|ГДЕ
	|	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
	|	И НЕ ПособияСоциальномуСтрахованию.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистровНакопления
	|	И НЕ ПособияСоциальномуСтрахованию.Регистратор ССЫЛКА Документ.ПереносДанных
	|	И УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений.ДатаПередачиФССВыплатыПособий <> ДАТАВРЕМЯ(1, 1, 1)
	|	И УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений.ДатаПередачиФССВыплатыПособий <= ПособияСоциальномуСтрахованию.Период
	|	И РасчетыПоСтраховымВзносам.ФСС <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Регистратор КАК Регистратор,
	|	РасчетыПоСтраховымВзносам.ВидДвижения КАК ВидДвижения,
	|	РасчетыПоСтраховымВзносам.Период КАК Период,
	|	РасчетыПоСтраховымВзносам.Организация КАК Организация,
	|	РасчетыПоСтраховымВзносам.ВидПлатежа КАК ВидПлатежа,
	|	РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода КАК МесяцРасчетногоПериода,
	|	РасчетыПоСтраховымВзносам.ФСС КАК ФСС,
	|	РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
	|	РасчетыПоСтраховымВзносам.ОблагаетсяЕНВД,
	|	РасчетыПоСтраховымВзносам.ПФРСтраховая КАК ПФРСтраховая,
	|	РасчетыПоСтраховымВзносам.ПФРНакопительная КАК ПФРНакопительная,
	|	РасчетыПоСтраховымВзносам.ФФОМС КАК ФФОМС,
	|	РасчетыПоСтраховымВзносам.ТФОМС КАК ТФОМС,
	|	РасчетыПоСтраховымВзносам.ПФРПоДополнительномуТарифу КАК ПФРПоДополнительномуТарифу,
	|	РасчетыПоСтраховымВзносам.ПФРНаДоплатуКПенсииШахтерам КАК ПФРНаДоплатуКПенсииШахтерам,
	|	РасчетыПоСтраховымВзносам.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	РасчетыПоСтраховымВзносам.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И РасчетыПоСтраховымВзносам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Пособия.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Пособия.Период,
	|	Пособия.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию),
	|	НАЧАЛОПЕРИОДА(Пособия.Период, МЕСЯЦ),
	|	СУММА(ВЫБОР
	|			КОГДА НЕ Пособия.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев))
	|				ТОГДА ВЫБОР
	|						КОГДА УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений.ДатаПередачиФССВыплатыПособий ЕСТЬ NULL 
	|							ТОГДА Пособия.СуммаВсего
	|						КОГДА УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений.ДатаПередачиФССВыплатыПособий = ДАТАВРЕМЯ(1, 1, 1)
	|							ТОГДА Пособия.СуммаВсего
	|						КОГДА УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений.ДатаПередачиФССВыплатыПособий > Пособия.Период
	|							ТОГДА Пособия.СуммаВсего
	|						КОГДА Пособия.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
	|							ТОГДА 0
	|						ИНАЧЕ Пособия.СуммаВсего
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА Пособия.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев))
	|				ТОГДА Пособия.СуммаВсего
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	Пособия.ОблагаетсяЕНВД,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.ПособияСоциальномуСтрахованию КАК Пособия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений КАК УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений
	|		ПО Пособия.Организация = УчетнаяПолитикаПоРасчетуЗарплатыОрганизацийИхПодразделений.Организация
	|ГДЕ
	|	Пособия.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И Пособия.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|	И Пособия.Период >= &ДатаНачала
	|
	|СГРУППИРОВАТЬ ПО
	|	Пособия.Период,
	|	Пособия.Регистратор,
	|	Пособия.Организация,
	|	Пособия.ОблагаетсяЕНВД
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	Период";

	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "Документ.КорректировкаЗаписейРегистровНакопления", ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ИмяДокументаКорректировкиРегистров());
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.РасчетыПоСтраховымВзносам, Запрос, "Обработка расчетов с ФСС в регионах пилотного проекта");

КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////

Процедура ПеренестиСведенияОКоличествеДетей() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧ.Ссылка КАК Ссылка,
	|	ТЧ.НомерСтроки КАК НомерСтроки,
	|	ТЧ.СуммаВычета КАК КоличествоДетей,
	|	ВЫБОР
	|		КОГДА ТЧ.СуммаВычета * 50000 < ТЧ.Результат * ВЫБОР
	|				КОГДА ТЧ.Сторно
	|					ТОГДА -1
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|			ТОГДА ТЧ.СуммаВычета * 50000
	|		ИНАЧЕ ТЧ.Результат * ВЫБОР
	|				КОГДА ТЧ.Сторно
	|					ТОГДА -1
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ * ВЫБОР
	|		КОГДА ТЧ.Сторно
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СуммаВычета
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК ТЧ
	|ГДЕ
	|	ТЧ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.МатпомощьПриРожденииРебенка)
	|	И ТЧ.СуммаВычета МЕЖДУ 1 И 99
	|	И ТЧ.КоличествоДетей = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧ.Ссылка,
	|	ТЧ.НомерСтроки,
	|	ТЧ.СуммаВычета,
	|	ВЫБОР
	|		КОГДА ТЧ.СуммаВычета * 50000 < ТЧ.Результат * ВЫБОР
	|				КОГДА ТЧ.Сторно
	|					ТОГДА -1
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|			ТОГДА ТЧ.СуммаВычета * 50000
	|		ИНАЧЕ ТЧ.Результат * ВЫБОР
	|				КОГДА ТЧ.Сторно
	|					ТОГДА -1
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ * ВЫБОР
	|		КОГДА ТЧ.Сторно
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	Документ.РегистрацияРазовыхНачисленийРаботниковОрганизаций.ДополнительныеНачисления КАК ТЧ
	|ГДЕ
	|	ТЧ.КодВычета = ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.МатпомощьПриРожденииРебенка)
	|	И ТЧ.СуммаВычета МЕЖДУ 1 И 99
	|	И ТЧ.КоличествоДетей = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ДополнительныеНачисления", "Обработка вычетов к материальной помощи при рождении ребенка");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура УстановитьМаксимальныйРазмерЕжемесячнойСтраховойВыплаты2013() Экспорт
	НаборЗаписей = РегистрыСведений.МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.СоздатьНаборЗаписей();
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = '20130101';
	НоваяСтрока.Размер = 58970;
	НаборЗаписей.Записать();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновитьОсновнойТариф2013() Экспорт

	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим);
	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим);
	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.ЕНВД);

КонецПроцедуры

Процедура ЗаполнитьДатуПолученияДоходаВРегистреУчета() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДФЛСведенияОДоходах.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|ГДЕ
	|	НДФЛСведенияОДоходах.ДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	НДФЛСведенияОДоходах.Регистратор КАК Регистратор,
	|	НДФЛСведенияОДоходах.НомерСтроки КАК НомерСтроки,
	|	НДФЛСведенияОДоходах.Организация,
	|	НДФЛСведенияОДоходах.ФизЛицо,
	|	НДФЛСведенияОДоходах.КодДохода,
	|	НДФЛСведенияОДоходах.ПериодРегистрации,
	|	НДФЛСведенияОДоходах.СуммаДохода,
	|	НДФЛСведенияОДоходах.СуммаВычета,
	|	НДФЛСведенияОДоходах.КодВычета,
	|	НДФЛСведенияОДоходах.ОбособленноеПодразделение,
	|	НДФЛСведенияОДоходах.ИсчисленоИзЗарплаты,
	|	НДФЛСведенияОДоходах.КодПоОКАТО,
	|	НДФЛСведенияОДоходах.КПП,
	|	НДФЛСведенияОДоходах.ПодразделениеОрганизации,
	|	НДФЛСведенияОДоходах.КоличествоДетей,
	|	НДФЛСведенияОДоходах.ВидРасчета,
	|	НДФЛСведенияОДоходах.ЗарегистрированоДляПромежуточногоРасчета,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.ДатаПолученияДохода <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДФЛСведенияОДоходах.ДатаПолученияДохода
	|		КОГДА НДФЛСведенияОДоходах.КодДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.КодДоходаПоУмолчанию), ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код2530))
	|			ТОГДА КОНЕЦПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ)
	|		ИНАЧЕ НДФЛСведенияОДоходах.Период
	|	КОНЕЦ КАК ДатаПолученияДохода
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|ГДЕ
	|	НДФЛСведенияОДоходах.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.НДФЛСведенияОДоходах, Запрос, "Обработка учета по НДФЛ");

КонецПроцедуры

Процедура УточнитьСсылкуИТСаНаПерсучет() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СсылкиНаСайтеИТС.ИмяРаздела,
	|	СсылкиНаСайтеИТС.Гиперссылка,
	|	СсылкиНаСайтеИТС.Порядок,
	|	СсылкиНаСайтеИТС.ДатаОкончания,
	|	""Составление отчетности о страховом стаже и взносах (СЗВ-6-1(2), СЗВ-6-4)"" КАК ПредставлениеСсылки
	|ИЗ
	|	РегистрСведений.СсылкиНаСайтеИТС КАК СсылкиНаСайтеИТС
	|ГДЕ
	|	СсылкиНаСайтеИТС.ИмяРаздела = &ИмяРаздела
	|	И СсылкиНаСайтеИТС.Гиперссылка = &Гиперссылка
	|	И СсылкиНаСайтеИТС.ПредставлениеСсылки ПОДОБНО &ПредставлениеСсылки";
	Запрос.УстановитьПараметр("ИмяРаздела", "ПЕРСОНИФИЦИРОВАННЫЙУЧЕТ");
	Запрос.УстановитьПараметр("Гиперссылка", "http://v8.1c.ru/cnt.jsp/:tk_zup8:/http://its.1c.ru/bmk/zup/pfr_szv_6");
	Запрос.УстановитьПараметр("ПредставлениеСсылки", "Составление отчетности о страховом стаже и взносах (СЗВ-6-1, СЗВ-6-2)");
	ПроцедурыОбновленияИнформационнойБазы.ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.СсылкиНаСайтеИТС, Запрос, "Обновление ссылки на ИТС")

КонецПроцедуры

Процедура ЗаполнитьПроизводственныйКалендарьЗа2014Год() Экспорт
	/////Вадим 23.09.2013 13:33:44
 	возврат;
 
 ////ВадимКонец
 
	ДатыОтмененныхПереносов = Новый Массив;
	ДатыОтмененныхПереносов.Добавить('20140224');
	ПереЗаполнитьПроизводственныйКалендарьСУчетомПереносов(2014, ДатыОтмененныхПереносов);		
	
КонецПроцедуры

Процедура ОбновитьСправкиОЗаработкеДляРасчетаПособий() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДоЗакона212", ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() - 1);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправкаОЗаработкеДляРасчетаПособий.Ссылка,
	|	МАКСИМУМ(СправкаОЗаработкеДляРасчетаПособийДанныеОЗаработке.УдалитьДнейБолезниУходаЗаДетьми) КАК УдалитьДнейБолезниУходаЗаДетьми,
	|	СправкаОЗаработкеДляРасчетаПособий.УдалитьПериодРаботыПо,
	|	СправкаОЗаработкеДляРасчетаПособий.УдалитьПериодРаботыС,
	|	СправкаОЗаработкеДляРасчетаПособий.ФизЛицо,
	|	СправкаОЗаработкеДляРасчетаПособий.ГодС,
	|	СправкаОЗаработкеДляРасчетаПособий.ГодПо,
	|	СправкаОЗаработкеДляРасчетаПособий.Организация
	|ПОМЕСТИТЬ ВТСправки
	|ИЗ
	|	Документ.СправкаОЗаработкеДляРасчетаПособий КАК СправкаОЗаработкеДляРасчетаПособий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкаОЗаработкеДляРасчетаПособий.ДанныеОЗаработке КАК СправкаОЗаработкеДляРасчетаПособийДанныеОЗаработке
	|		ПО СправкаОЗаработкеДляРасчетаПособий.Ссылка = СправкаОЗаработкеДляРасчетаПособийДанныеОЗаработке.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкаОЗаработкеДляРасчетаПособий.ПериодыРаботы КАК СправкаОЗаработкеДляРасчетаПособийПериодыРаботы
	|		ПО СправкаОЗаработкеДляРасчетаПособий.Ссылка = СправкаОЗаработкеДляРасчетаПособийПериодыРаботы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкаОЗаработкеДляРасчетаПособий.ДниБолезниУходаЗаДетьми КАК СправкаОЗаработкеДляРасчетаПособийДниБолезниУходаЗаДетьми
	|		ПО СправкаОЗаработкеДляРасчетаПособий.Ссылка = СправкаОЗаработкеДляРасчетаПособийДниБолезниУходаЗаДетьми.Ссылка
	|ГДЕ
	|	СправкаОЗаработкеДляРасчетаПособийДниБолезниУходаЗаДетьми.НомерСтроки ЕСТЬ NULL 
	|	И СправкаОЗаработкеДляРасчетаПособийПериодыРаботы.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	СправкаОЗаработкеДляРасчетаПособий.Ссылка,
	|	СправкаОЗаработкеДляРасчетаПособий.УдалитьПериодРаботыПо,
	|	СправкаОЗаработкеДляРасчетаПособий.УдалитьПериодРаботыС,
	|	СправкаОЗаработкеДляРасчетаПособий.ФизЛицо,
	|	СправкаОЗаработкеДляРасчетаПособий.ГодС,
	|	СправкаОЗаработкеДляРасчетаПособий.ГодПо,
	|	СправкаОЗаработкеДляРасчетаПособий.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Справки.Ссылка,
	|	Справки.ФизЛицо,
	|	Справки.ГодС,
	|	Справки.ГодПо,
	|	Справки.Организация,
	|	ВЫБОР
	|		КОГДА Справки.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Справки.Организация
	|		ИНАЧЕ Справки.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	ВТСправки КАК Справки
	|ГДЕ
	|	(Справки.УдалитьПериодРаботыПо <> ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ Справки.УдалитьПериодРаботыС <> ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ ЕСТЬNULL(Справки.УдалитьДнейБолезниУходаЗаДетьми, 0) > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОбработке.Ссылка,
	|	СотрудникиОрганизаций.Ссылка КАК Сотрудник
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	ВТДокументыКОбработке КАК ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ПО ДокументыКОбработке.ФизЛицо = СотрудникиОрганизаций.Физлицо
	|			И ДокументыКОбработке.ГоловнаяОрганизация = СотрудникиОрганизаций.Организация
	|ГДЕ
	|	СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание))
	|			ТОГДА ""Период временной нетрудоспособности""
	|		КОГДА ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|			ТОГДА ""Отпуск по беременности и родам""
	|		КОГДА ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|				И ОсновныеНачисленияОрганизаций.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
	|				И ОсновныеНачисленияОрганизаций.КодДоходаНДФЛ = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код2300)
	|			ТОГДА ""Период временной нетрудоспособности""
	|		ИНАЧЕ ОсновныеНачисленияОрганизаций.Наименование
	|	КОНЕЦ КАК Наименование
	|ПОМЕСТИТЬ ВТНеоблагаемыеВзносамиОтсутствия
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
	|	И НЕ ОсновныеНачисленияОрганизаций.ЗачетОтработанногоВремени
	|	И НЕ ЕСТЬNULL(ОсновныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы.ВходитВБазуФСС, ЛОЖЬ)
	|	И ОсновныеНачисленияОрганизаций.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.НулеваяСумма)
	|	И НЕ ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени В (ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Прогулы), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоЗаконодательству), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйДополнительныйОтпуск), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты),
	|	""Отпуск по уходу за ребенком""
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезни),
	|	""Период временной нетрудоспособности""
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезниПоБеременности),
	|	""Отпуск по беременности и родам""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание))
	|			ТОГДА ""Период временной нетрудоспособности""
	|		КОГДА ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды)
	|			ТОГДА ""Отпуск по беременности и родам""
	|		КОГДА ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|				И ОсновныеНачисленияОрганизаций.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
	|				И ОсновныеНачисленияОрганизаций.КодДоходаНДФЛ = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код2300)
	|			ТОГДА ""Период временной нетрудоспособности""
	|		ИНАЧЕ ОсновныеНачисленияОрганизаций.Наименование
	|	КОНЕЦ КАК Наименование
	|ПОМЕСТИТЬ ВТНеоблагаемыеВзносамиОтсутствияЕСН
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
	|	И НЕ ОсновныеНачисленияОрганизаций.ЗачетОтработанногоВремени
	|	И НЕ ЕСТЬNULL(ОсновныеНачисленияОрганизаций.КодДоходаЕСН.ВходитВБазуФСС, ЛОЖЬ)
	|	И ОсновныеНачисленияОрганизаций.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.НулеваяСумма)
	|	И НЕ ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени В (ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Прогулы), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоЗаконодательству), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйДополнительныйОтпуск), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты),
	|	""Отпуск по уходу за ребенком""
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезни),
	|	""Период временной нетрудоспособности""
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезниПоБеременности),
	|	""Отпуск по беременности и родам""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОбработке.Ссылка,
	|	ДокументыКОбработке.ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействия,
	|	СУММА(РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец, ДЕНЬ), СЕКУНДА, 1), ДЕНЬ) * ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сторно
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДнейИсключаемыхОтсутствий,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец,
	|	НеоблагаемыеВзносамиОтсутствия.Наименование
	|ПОМЕСТИТЬ ВТПериодыИсключаемыхОтсутствий
	|ИЗ
	|	ВТДокументыКОбработке КАК ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|				Сотрудник В
	|						(ВЫБРАТЬ
	|							СотрудникиФизлица.Сотрудник
	|						ИЗ
	|							ВТСотрудники КАК СотрудникиФизлица)
	|					И ФизЛицо В
	|						(ВЫБРАТЬ
	|							Документы.ФизЛицо
	|						ИЗ
	|							ВТДокументыКОбработке КАК Документы)
	|					И ВидРасчета В
	|						(ВЫБРАТЬ
	|							НеоблагаемыеВзносамиОтсутствия.Ссылка
	|						ИЗ
	|							ВТНеоблагаемыеВзносамиОтсутствия КАК НеоблагаемыеВзносамиОтсутствия)
	|					И Организация В
	|						(ВЫБРАТЬ
	|							Документы.ГоловнаяОрганизация
	|						ИЗ
	|							ВТДокументыКОбработке КАК Документы)
	|					И ОбособленноеПодразделение В
	|						(ВЫБРАТЬ
	|							Документы.Организация
	|						ИЗ
	|							ВТДокументыКОбработке КАК Документы)
	|					И ПериодДействия > &ДатаДоЗакона212) КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТНеоблагаемыеВзносамиОтсутствия КАК НеоблагаемыеВзносамиОтсутствия
	|			ПО ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета = НеоблагаемыеВзносамиОтсутствия.Ссылка
	|		ПО ДокументыКОбработке.ФизЛицо = ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ФизЛицо
	|			И ДокументыКОбработке.ГоловнаяОрганизация = ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Организация
	|			И ДокументыКОбработке.Организация = ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ОбособленноеПодразделение
	|			И (ГОД(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействия) МЕЖДУ ДокументыКОбработке.ГодС И ДокументыКОбработке.ГодПо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействия,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец,
	|	НеоблагаемыеВзносамиОтсутствия.Наименование,
	|	ДокументыКОбработке.Ссылка,
	|	ДокументыКОбработке.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействия,
	|	СУММА(РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец, ДЕНЬ), СЕКУНДА, 1), ДЕНЬ) * ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сторно
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДнейИсключаемыхОтсутствий,
	|	НеоблагаемыеВзносамиОтсутствияЕСН.Наименование,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец,
	|	ДокументыКОбработке.ФизЛицо,
	|	ДокументыКОбработке.Ссылка
	|ПОМЕСТИТЬ ВТПериодыИсключаемыхОтсутствийЕСН
	|ИЗ
	|	ВТДокументыКОбработке КАК ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|				Сотрудник В
	|						(ВЫБРАТЬ
	|							СотрудникиФизлица.Сотрудник
	|						ИЗ
	|							ВТСотрудники КАК СотрудникиФизлица)
	|					И ФизЛицо В
	|						(ВЫБРАТЬ
	|							Документы.ФизЛицо
	|						ИЗ
	|							ВТДокументыКОбработке КАК Документы)
	|					И ВидРасчета В
	|						(ВЫБРАТЬ
	|							НеоблагаемыеВзносамиОтсутствия.Ссылка
	|						ИЗ
	|							ВТНеоблагаемыеВзносамиОтсутствияЕСН КАК НеоблагаемыеВзносамиОтсутствия)
	|					И Организация В
	|						(ВЫБРАТЬ
	|							Документы.ГоловнаяОрганизация
	|						ИЗ
	|							ВТДокументыКОбработке КАК Документы)
	|					И ОбособленноеПодразделение В
	|						(ВЫБРАТЬ
	|							Документы.Организация
	|						ИЗ
	|							ВТДокументыКОбработке КАК Документы)
	|					И ПериодДействия <= &ДатаДоЗакона212) КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТНеоблагаемыеВзносамиОтсутствияЕСН КАК НеоблагаемыеВзносамиОтсутствияЕСН
	|			ПО ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета = НеоблагаемыеВзносамиОтсутствияЕСН.Ссылка
	|		ПО ДокументыКОбработке.ФизЛицо = ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ФизЛицо
	|			И ДокументыКОбработке.Организация = ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ОбособленноеПодразделение
	|			И ДокументыКОбработке.ГоловнаяОрганизация = ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Организация
	|			И (ГОД(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействия) МЕЖДУ ДокументыКОбработке.ГодС И ДокументыКОбработке.ГодПо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействия,
	|	НеоблагаемыеВзносамиОтсутствияЕСН.Наименование,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец,
	|	ДокументыКОбработке.ФизЛицо,
	|	ДокументыКОбработке.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыИсключаемыхОтсутствий.ПериодДействия КАК Период,
	|	ПериодыИсключаемыхОтсутствий.ФизЛицо
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	ВТПериодыИсключаемыхОтсутствий КАК ПериодыИсключаемыхОтсутствий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.Период КАК Месяц,
	|	Периоды.ФизЛицо,
	|	НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеИмеетПравоНаПенсию, ЛОЖЬ) КАК ИмеетПравоНаСтрахование
	|ПОМЕСТИТЬ ВТДанныеОПравеНаСтрахование
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра,
	|		Периоды.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО (Периоды.Период >= НАЧАЛОПЕРИОДА(ГражданствоФизЛиц.Период, МЕСЯЦ))
	|				И Периоды.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период,
	|		Периоды.ФизЛицо) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО Периоды.ПериодРегистра = ГражданствоФизЛиц.Период
	|			И Периоды.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыИсключаемыхОтсутствий.Ссылка,
	|	ГОД(ПериодыИсключаемыхОтсутствий.ПериодДействия) КАК РасчетныйГод,
	|	ПериодыИсключаемыхОтсутствий.ДнейИсключаемыхОтсутствий КАК Дни,
	|	ПериодыИсключаемыхОтсутствий.ПериодДействияНачало КАК ПериодС,
	|	ПериодыИсключаемыхОтсутствий.ПериодДействияКонец КАК ПериодПо,
	|	ПериодыИсключаемыхОтсутствий.Наименование КАК НаименованиеПериода,
	|	ПериодыИсключаемыхОтсутствий.ПериодДействияНачало КАК Период
	|ПОМЕСТИТЬ ВТДниПодробно
	|ИЗ
	|	ВТПериодыИсключаемыхОтсутствий КАК ПериодыИсключаемыхОтсутствий
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаСтрахование КАК ДанныеОПравеНаСтрахование
	|		ПО ПериодыИсключаемыхОтсутствий.ПериодДействия = ДанныеОПравеНаСтрахование.Месяц
	|			И ПериодыИсключаемыхОтсутствий.ФизЛицо = ДанныеОПравеНаСтрахование.ФизЛицо
	|ГДЕ
	|	ДанныеОПравеНаСтрахование.ИмеетПравоНаСтрахование
	|	И ПериодыИсключаемыхОтсутствий.ДнейИсключаемыхОтсутствий > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПериодыИсключаемыхОтсутствий.Ссылка,
	|	ГОД(ПериодыИсключаемыхОтсутствий.ПериодДействия),
	|	ПериодыИсключаемыхОтсутствий.ДнейИсключаемыхОтсутствий,
	|	ПериодыИсключаемыхОтсутствий.ПериодДействияНачало,
	|	ПериодыИсключаемыхОтсутствий.ПериодДействияКонец,
	|	ПериодыИсключаемыхОтсутствий.Наименование,
	|	ПериодыИсключаемыхОтсутствий.ПериодДействия
	|ИЗ
	|	ВТПериодыИсключаемыхОтсутствийЕСН КАК ПериодыИсключаемыхОтсутствий
	|ГДЕ
	|	ПериодыИсключаемыхОтсутствий.ДнейИсключаемыхОтсутствий > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДниПодробно.Ссылка,
	|	ДниПодробно.РасчетныйГод,
	|	СУММА(ДниПодробно.Дни) КАК Дни
	|ПОМЕСТИТЬ ВТДниПоГодам
	|ИЗ
	|	ВТДниПодробно КАК ДниПодробно
	|
	|СГРУППИРОВАТЬ ПО
	|	ДниПодробно.Ссылка,
	|	ДниПодробно.РасчетныйГод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправкаОЗаработкеДляРасчетаПособий.Ссылка КАК Ссылка,
	|	СправкаОЗаработкеДляРасчетаПособий.УдалитьПериодРаботыПо КАК ПериодРаботыПо,
	|	СправкаОЗаработкеДляРасчетаПособий.УдалитьПериодРаботыС КАК ПериодРаботыС,
	|	ЕСТЬNULL(ДниПодробно.Дни, СправкаОЗаработкеДляРасчетаПособийДанныеОЗаработке.УдалитьДнейБолезниУходаЗаДетьми) КАК Дни,
	|	ДниПодробно.ПериодС КАК ПериодС,
	|	ДниПодробно.ПериодПо,
	|	ДниПодробно.НаименованиеПериода
	|ИЗ
	|	Документ.СправкаОЗаработкеДляРасчетаПособий КАК СправкаОЗаработкеДляРасчетаПособий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкаОЗаработкеДляРасчетаПособий.ДанныеОЗаработке КАК СправкаОЗаработкеДляРасчетаПособийДанныеОЗаработке
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДниПоГодам КАК ДниПоГодам
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДниПодробно КАК ДниПодробно
	|				ПО ДниПоГодам.Ссылка = ДниПодробно.Ссылка
	|					И ДниПоГодам.РасчетныйГод = ДниПодробно.РасчетныйГод
	|			ПО СправкаОЗаработкеДляРасчетаПособийДанныеОЗаработке.РасчетныйГод = ДниПоГодам.РасчетныйГод
	|				И СправкаОЗаработкеДляРасчетаПособийДанныеОЗаработке.Ссылка = ДниПоГодам.Ссылка
	|				И СправкаОЗаработкеДляРасчетаПособийДанныеОЗаработке.УдалитьДнейБолезниУходаЗаДетьми = ДниПоГодам.Дни
	|		ПО СправкаОЗаработкеДляРасчетаПособий.Ссылка = СправкаОЗаработкеДляРасчетаПособийДанныеОЗаработке.Ссылка
	|ГДЕ
	|	СправкаОЗаработкеДляРасчетаПособий.Ссылка В
	|			(ВЫБРАТЬ
	|				Справки.Ссылка
	|			ИЗ
	|				ВТДокументыКОбработке КАК Справки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ПериодС";
	
	ТекстСообщения = "Обработка Справок о заработке для расчета пособий";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаОбъектов.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		
		Если ЗначениеЗаполнено(ВыборкаОбъектов.ПериодРаботыПо) Или ЗначениеЗаполнено(ВыборкаОбъектов.ПериодРаботыС) Тогда
			ЗаполнитьЗначенияСвойств(Объект.ПериодыРаботы.Добавить(),ВыборкаОбъектов);
		КонецЕсли;
		
		Пока ВыборкаОбъектов.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаОбъектов.Дни) Тогда
				ЗаполнитьЗначенияСвойств(Объект.ДниБолезниУходаЗаДетьми.Добавить(),ВыборкаОбъектов);
			КонецЕсли;
			
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		
		ВременнаяТаблица = Объект.ДниБолезниУходаЗаДетьми.Выгрузить();
		Н = ВременнаяТаблица.Количество() - 1;
		Пока Н > 0 Цикл
			ТекущаяЗапись = ВременнаяТаблица[Н];
			Если Не ЗначениеЗаполнено(ТекущаяЗапись.НаименованиеПериода) Тогда
				Н = Н - 1;
				Продолжить;
			КонецЕсли;
			ПредшествующаяЗапись = ВременнаяТаблица[Н-1];
			Если ТекущаяЗапись.НаименованиеПериода = ПредшествующаяЗапись.НаименованиеПериода 
				И Год(ТекущаяЗапись.ПериодС) = Год(ПредшествующаяЗапись.ПериодС)
				И (ТекущаяЗапись.ПериодС = КонецДня(ПредшествующаяЗапись.ПериодПо) + 1 
				Или КонецДня(ТекущаяЗапись.ПериодС) = КонецДня(ПредшествующаяЗапись.ПериодПо)) Тогда
				// объединим записи в одну
				ПредшествующаяЗапись.Дни = ПредшествующаяЗапись.Дни + ТекущаяЗапись.Дни;
				ПредшествующаяЗапись.ПериодПо = ТекущаяЗапись.ПериодПо;
				ВременнаяТаблица.Удалить(ТекущаяЗапись);
			КонецЕсли;
			Н = Н - 1;
		КонецЦикла;
		
		Объект.ДниБолезниУходаЗаДетьми.Загрузить(ВременнаяТаблица);
				
		Объект.Записать();
		
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИсправитьВидДняДля24февраля2014года() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря = ДАТАВРЕМЯ(2014, 2, 24)
	|	И РегламентированныйПроизводственныйКалендарь.ВидДня <> ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)";
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.РегламентированныйПроизводственныйКалендарь.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДатаКалендаря.Установить('20140224');
	НаборЗаписей.Отбор.Год.Установить(2014);
	ЗаписьРегистра = НаборЗаписей.Добавить();
	ЗаписьРегистра.ДатаКалендаря = '20140224';
	ЗаписьРегистра.Год = 2014;
	ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
	ЗаписьРегистра.Пятидневка  = 1;
	ЗаписьРегистра.Шестидневка = 1;
	ЗаписьРегистра.КалендарныеДни = 1;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИндексироватьРазмеры2014() Экспорт

	ДатаДействия = '20140101';
	
	НаборЗаписей = РегистрыСведений.МинимальнаяОплатаТрудаРФ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 5554;
	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
    НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.РазмерФСС = 624000;
	НоваяЗапись.РазмерПФР = 624000;
	НоваяЗапись.РазмерФОМС = 624000;
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура ИндексироватьПособия2014() Экспорт

	ДатаДействия = '20140101';
	
	НаборЗаписей = РегистрыСведений.МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
    НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 61920;
	НаборЗаписей.Записать();

	
	НаборЗаписей = РегистрыСведений.ГосударственныеПособия.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 515.33;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 13741.99;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 2576.63;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 5153.24;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 5002.16;
	
	ПроцедурыОбновленияИнформационнойБазыПереопределяемый.УстановитьМаксимумПособияПоУходуЗаРебенкомДоПолутораЛет2014(НаборЗаписей);
	
	НаборЗаписей.Записать();
	

КонецПроцедуры

Процедура ОбновитьТарифы2014() Экспорт

	ТаблицаТарифов = РасчетСтраховыхВзносов.ТаблицаТарифовСтраховыхВзносов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка
	|ИЗ
	|	Перечисление.ТарифыСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифСтраховыхВзносов.СрезПоследних(ДАТАВРЕМЯ(2014, 1, 1), ) КАК ТарифыСтраховыхВзносовСрезПоследних
	|		ПО ВидыТарифовСтраховыхВзносов.Ссылка = ТарифыСтраховыхВзносовСрезПоследних.ВидТарифа
	|ГДЕ
	|	ТарифыСтраховыхВзносовСрезПоследних.ПФРНакопительная = 6";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбновитьТарифСтраховыхВзносов(Выборка.Ссылка, ТаблицаТарифов);
	КонецЦикла;
	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.ДляЧленовЭкипажейМорскихСудовПодФлагомРФ, ТаблицаТарифов);
	
КонецПроцедуры

Процедура ОбработкаСправок2НДФЛза2013год() Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Справки.Ссылка,
	|	ВЫБОР
	|		КОГДА Справки.НалоговыйПериод = 2013
	|				И Справки.Проведен
	|				И НЕ Справки.СпециальныйДокумент2013года
	|				И НЕ ЕСТЬNULL(АрхивДанныхРегламентированнойОтчетности.Данные, ""ОКАТО"") ПОДОБНО ""%ОКТМО%""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ Справки.СпециальныйДокумент2013года
	|	КОНЕЦ КАК СпециальныйДокумент2013года,
	|	ВЫБОР
	|		КОГДА Справки.НалоговыйПериод < 2013
	|			ТОГДА Справки.ОКАТО_КПП
	|		КОГДА Справки.Проведен
	|				И Справки.НалоговыйПериод = 2013
	|				И НЕ ЕСТЬNULL(АрхивДанныхРегламентированнойОтчетности.Данные, ""ОКАТО"") ПОДОБНО ""%ОКТМО%""
	|			ТОГДА Справки.ОКАТО_КПП
	|		ИНАЧЕ Справки.ОКТМО_КПП
	|	КОНЕЦ КАК КодТерритории,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(Справки.ОКТМО_КПП, 1, 3) = ""   ""
	|				И ПОДСТРОКА(Справки.ОКТМО_КПП, 12, 1) = ""/""
	|			ТОГДА ПОДСТРОКА(Справки.ОКТМО_КПП, 4, 8) + ""   "" + ПОДСТРОКА(Справки.ОКТМО_КПП, 12, 10)
	|		ИНАЧЕ Справки.ОКТМО_КПП
	|	КОНЕЦ КАК ОКТМО_КПП
	|ИЗ
	|	Документ.СправкаПоНДФЛВНалоговыйОрган КАК Справки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АрхивДанныхРегламентированнойОтчетности КАК АрхивДанныхРегламентированнойОтчетности
	|		ПО Справки.Ссылка = АрхивДанныхРегламентированнойОтчетности.Объект
	|ГДЕ
	|	Справки.КодТерритории = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Справки.Ссылка,
	|	ВЫБОР
	|		КОГДА НЕ Справки.СпециальныйДокумент2013года
	|				И Справки.НалоговыйПериод = 2013
	|				И Справки.Сотрудник <> ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	|				И Справки.ОКТМО_КПП = """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ Справки.СпециальныйДокумент2013года
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Справки.НалоговыйПериод < 2013
	|			ТОГДА Справки.ОКАТО_КПП
	|		КОГДА Справки.НалоговыйПериод = 2013
	|				И Справки.Сотрудник <> ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	|				И Справки.ОКТМО_КПП = """"
	|			ТОГДА Справки.ОКАТО_КПП
	|		ИНАЧЕ Справки.ОКТМО_КПП
	|	КОНЕЦ,
	|	Справки.ОКТМО_КПП
	|ИЗ
	|	Документ.СправкаПоНДФЛСотруднику КАК Справки
	|ГДЕ
	|	Справки.КодТерритории = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеречислениеНДФЛвБюджет.Ссылка,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ПеречислениеНДФЛвБюджет.ДатаПлатежа = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА ПеречислениеНДФЛвБюджет.Дата < ДАТАВРЕМЯ(2014, 1, 1)
	|						ТОГДА ПеречислениеНДФЛвБюджет.ОКАТО_КПП
	|					ИНАЧЕ ПеречислениеНДФЛвБюджет.ОКТМО_КПП
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПеречислениеНДФЛвБюджет.ДатаПлатежа < ДАТАВРЕМЯ(2014, 1, 1)
	|					ТОГДА ПеречислениеНДФЛвБюджет.ОКАТО_КПП
	|				ИНАЧЕ ПеречислениеНДФЛвБюджет.ОКТМО_КПП
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ПеречислениеНДФЛвБюджет.ОКТМО_КПП, 1, 3) = ""   ""
	|				И ПОДСТРОКА(ПеречислениеНДФЛвБюджет.ОКТМО_КПП, 12, 1) = ""/""
	|			ТОГДА ПОДСТРОКА(ПеречислениеНДФЛвБюджет.ОКТМО_КПП, 4, 8) + ""   "" + ПОДСТРОКА(ПеречислениеНДФЛвБюджет.ОКТМО_КПП, 12, 10)
	|		ИНАЧЕ ПеречислениеНДФЛвБюджет.ОКТМО_КПП
	|	КОНЕЦ
	|ИЗ
	|	Документ.ПеречислениеНДФЛвБюджет КАК ПеречислениеНДФЛвБюджет
	|ГДЕ
	|	ПеречислениеНДФЛвБюджет.КодТерритории = """"";

	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка Справок 2-НДФЛ за 2013 год");
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиРегистра.Регистратор КАК Документ
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК СтрокиРегистра
	|ГДЕ
	|	ПОДСТРОКА(СтрокиРегистра.ОКТМО_КПП, 1, 3) = ""   ""
	|	И ПОДСТРОКА(СтрокиРегистра.ОКТМО_КПП, 12, 1) = ""/""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКАТО_КПП,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП, 1, 3) = ""   ""
	|				И ПОДСТРОКА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП, 12, 1) = ""/""
	|			ТОГДА ПОДСТРОКА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП, 4, 8) + ""   "" + ПОДСТРОКА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП, 12, 10)
	|		ИНАЧЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП
	|	КОНЕЦ КАК ОКТМО_КПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				РегистраторыКОбработке.Документ
	|			ИЗ
	|				ВТРегистраторы КАК РегистраторыКОбработке)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ, Запрос, "Обработка учета по НДФЛ");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьТарифыВзносовПоРезультатамСпециальнойОценкиУсловийТруда() Экспорт

	НаборЗаписей = РегистрыСведений.ТарифыВзносовПоРезультатамСпециальнойОценкиУсловийТруда.СоздатьНаборЗаписей();	
	
	Запись = НаборЗаписей.Добавить();
	Запись.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1;
	Запись.Тариф = 2;
	Запись = НаборЗаписей.Добавить();
	Запись.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2;
	Запись.Тариф = 4;
	Запись = НаборЗаписей.Добавить();
	Запись.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3;
	Запись.Тариф = 6;
	Запись = НаборЗаписей.Добавить();
	Запись.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4;
	Запись.Тариф = 7;
	Запись = НаборЗаписей.Добавить();
	Запись.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный;
	Запись.Тариф = 8;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура УстановитьВременныйКодВычету320() Экспорт

	Если ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Справочники.ВычетыНДФЛ.Код320,"КодДляОтчетности2011") <> "620" Тогда
		ОписатьКодВычетаНДФЛ_2011(Справочники.ВычетыНДФЛ.Код320, , , , "620", , Перечисления.ГруппыВычетовПоНДФЛ.Социальные); // с 2013 г.
	КонецЕсли;	

КонецПроцедуры

Процедура УточнитьВосьмизначныеОКТМО() Экспорт

	Запрос = Новый Запрос;
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиРегистра.Регистратор КАК Документ
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК СтрокиРегистра
	|ГДЕ
	|	ПОДСТРОКА(СтрокиРегистра.ОКТМО_КПП, 9, 1) = ""/""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКАТО_КПП,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП, 9, 1) = ""/""
	|			ТОГДА ПОДСТРОКА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП, 1, 8) + ""   "" + ПОДСТРОКА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП, 9, 10)
	|		ИНАЧЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП
	|	КОНЕЦ КАК ОКТМО_КПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				РегистраторыКОбработке.Документ
	|			ИЗ
	|				ВТРегистраторы КАК РегистраторыКОбработке)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ, Запрос, "Обработка учета перечисленного НДФЛ, часть I");
	
	Запрос.УстановитьПараметр("ПустойКодПоОКАТО", "           ");
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеречислениеНДФЛвБюджет.Ссылка,
	|	ПеречислениеНДФЛвБюджет.Организация
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	Документ.ПеречислениеНДФЛвБюджет КАК ПеречислениеНДФЛвБюджет
	|ГДЕ
	|	ПОДСТРОКА(ПеречислениеНДФЛвБюджет.ОКАТО_КПП, 1, 11) = &ПустойКодПоОКАТО
	|	И ПОДСТРОКА(ПеречислениеНДФЛвБюджет.ОКТМО_КПП, 1, 11) <> &ПустойКодПоОКАТО
	|	И ВЫБОР
	|			КОГДА ПеречислениеНДФЛвБюджет.ДатаПлатежа = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ПеречислениеНДФЛвБюджет.Дата
	|			ИНАЧЕ ПеречислениеНДФЛвБюджет.ДатаПлатежа
	|		КОНЕЦ >= ДАТАВРЕМЯ(2014, 1, 1)";
    Результат = Запрос.Выполнить().Выгрузить();
	Если Результат[0].Количество = 0 Тогда // количество документов к обработке
		Возврат 
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеКоды.КодПоОКАТО,
	|	МАКСИМУМ(ВсеКоды.КодПоОКТМО) КАК КодПоОКТМО,
	|	ВсеКоды.Организация,
	|	ВсеКоды.КПП
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организации.КодПоОКАТО КАК КодПоОКАТО,
	|		Организации.КодПоОКТМО КАК КодПоОКТМО,
	|		Организации.Ссылка КАК Организация,
	|		Организации.КПП КАК КПП
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка В
	|				(ВЫБРАТЬ
	|					Регистраторы.Организация
	|				ИЗ
	|					ВТРегистраторы КАК Регистраторы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПодразделенияОрганизаций.КодПоОКАТО,
	|		ПодразделенияОрганизаций.КодПоОКТМО,
	|		ПодразделенияОрганизаций.Владелец,
	|		ПодразделенияОрганизаций.КПП
	|	ИЗ
	|		Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|	ГДЕ
	|		ПодразделенияОрганизаций.Владелец В
	|				(ВЫБРАТЬ
	|					Регистраторы.Организация
	|				ИЗ
	|					ВТРегистраторы КАК Регистраторы)
	|		И (ПодразделенияОрганизаций.КодПоОКАТО <> &ПустойКодПоОКАТО
	|				ИЛИ ПодразделенияОрганизаций.КодПоОКТМО <> &ПустойКодПоОКАТО)
	|		И (ПодразделенияОрганизаций.КодПоОКАТО <> &ПустойКодПоОКАТО
	|					И ПодразделенияОрганизаций.КодПоОКАТО <> ЕСТЬNULL(ПодразделенияОрганизаций.Родитель.КодПоОКАТО, &ПустойКодПоОКАТО)
	|				ИЛИ ПодразделенияОрганизаций.КодПоОКТМО <> &ПустойКодПоОКАТО
	|					И ПодразделенияОрганизаций.КодПоОКТМО <> ЕСТЬNULL(ПодразделенияОрганизаций.Родитель.КодПоОКТМО, &ПустойКодПоОКАТО))) КАК ВсеКоды
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеКоды.КодПоОКАТО,
	|	ВсеКоды.Организация,
	|	ВсеКоды.КПП";
	ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
	ВременнаяТаблица.Колонки.Добавить("ОКАТО_КПП",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(21)));
	ВременнаяТаблица.Колонки.Добавить("ОКТМО_КПП",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(21)));
	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
		СтрокаТЗ.ОКАТО_КПП = СправкиПоНДФЛ.СуммаОКАТОиКПП(СтрокаТЗ.КодПоОКАТО, СтрокаТЗ.КПП);
		СтрокаТЗ.ОКТМО_КПП = СправкиПоНДФЛ.СуммаОКАТОиКПП(СтрокаТЗ.КодПоОКТМО, СтрокаТЗ.КПП);
	КонецЦикла; 
	Запрос.УстановитьПараметр("СоответствиеОКАТОиОКТМО",ВременнаяТаблица);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеОКАТОКПП.Организация,
	|	СоответствиеОКАТОКПП.ОКАТО_КПП,
	|	СоответствиеОКАТОКПП.ОКТМО_КПП
	|ПОМЕСТИТЬ ВТСоответствиеОКАТОКПП
	|ИЗ
	|	&СоответствиеОКАТОиОКТМО КАК СоответствиеОКАТОКПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеречислениеНДФЛвБюджет.Ссылка,
	|	СоответствиеОКАТОКПП.ОКАТО_КПП
	|ИЗ
	|	Документ.ПеречислениеНДФЛвБюджет КАК ПеречислениеНДФЛвБюджет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеОКАТОКПП КАК СоответствиеОКАТОКПП
	|		ПО ПеречислениеНДФЛвБюджет.ОКТМО_КПП = СоответствиеОКАТОКПП.ОКТМО_КПП
	|			И ПеречислениеНДФЛвБюджет.Организация = СоответствиеОКАТОКПП.Организация
	|ГДЕ
	|	ПеречислениеНДФЛвБюджет.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Ссылка
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)";
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка учета перечисленного НДФЛ, часть II");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП,
	|	ВЫБОР
	|		КОГДА РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП = СоответствиеОКАТОКПП.ОКТМО_КПП
	|			ТОГДА СоответствиеОКАТОКПП.ОКАТО_КПП
	|		ИНАЧЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКАТО_КПП
	|	КОНЕЦ КАК ОКАТО_КПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеОКАТОКПП КАК СоответствиеОКАТОКПП
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор.ОКТМО_КПП = СоответствиеОКАТОКПП.ОКТМО_КПП
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор.Организация = СоответствиеОКАТОКПП.Организация
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				РегистраторыКОбработке.Ссылка
	|			ИЗ
	|				ВТРегистраторы КАК РегистраторыКОбработке)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ, Запрос, "Обработка учета перечисленного НДФЛ, часть III");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ПроставитьВидамРасчетаСтажДляПерсУчета2014() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка,
	|	ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования,
	|	ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени,
	|	ОсновныеНачисленияОрганизаций.ВидВремени,
	|	ОсновныеНачисленияОрганизаций.ВидСтажаСЗВ4
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.ВидСтажаПерсУчета2014 = ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПерсУчета2014.ПустаяСсылка)
	|	И ОсновныеНачисленияОрганизаций.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы), ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЦелодневноеНеотработанное))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка,
	|	ОсновныеНачисленияОрганизаций.ВидПособияСоциальногоСтрахования,
	|	ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени,
	|	ОсновныеНачисленияОрганизаций.ВидВремени,
	|	ОсновныеНачисленияОрганизаций.ВидСтажаСЗВ4
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.ВидСтажаПерсУчета2014 = ЗНАЧЕНИЕ(Перечисление.ВидыСтажаПерсУчета2014.ПустаяСсылка)
	|	И ОсновныеНачисленияОрганизаций.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет)"; 
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ВидПособияСоциальногоСтрахования = Выборка.ВидПособияСоциальногоСтрахования;
		ОбозначениеВТабелеУчетаРабочегоВремени = Выборка.ОбозначениеВТабелеУчетаРабочегоВремени;
		Если Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.ЧАЭС Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.ЧАЭС;
		ИначеЕсли ЗначениеЗаполнено(ВидПособияСоциальногоСтрахования)
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпуск
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ОсновнойОтпуск
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ПростойПоВинеРаботодателя
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ПовышениеКвалификацииВДругойМестности
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ГосударственныеОбязанности
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыСОплатой
			Или ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты Тогда
			ВидСтажаПерсУчета2014 = ПроцедурыПерсонифицированногоУчета.ПорядокВключенияПериодаВСтраховойСтаж2014(ВидПособияСоциальногоСтрахования, Выборка.ВидВремени, ОбозначениеВТабелеУчетаРабочегоВремени);
		ИначеЕсли Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.ВключаетсяВСтажДляДосрочногоНазначенияПенсии Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.ВключаетсяВСтажДляДосрочногоНазначенияПенсии;
		ИначеЕсли Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.ВключаетсяВСтраховойСтаж Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.ВключаетсяВСтраховойСтаж;
		ИначеЕсли Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.ВременнаяНетрудоспособность Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.ВременнаяНетрудоспособность;
		ИначеЕсли Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.Декрет Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.Декрет;
		ИначеЕсли Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.Дети Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.Дети;
		ИначеЕсли Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.ДЛДЕТИ Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.ДЛДЕТИ;
		ИначеЕсли Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.НеВключаетсяВСтраховойСтаж Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.НеВключаетсяВСтраховойСтаж;
		ИначеЕсли Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.НЕОПЛ Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.НЕОПЛ;
		ИначеЕсли Выборка.ВидСтажаСЗВ4 = Перечисления.ВидыСтажаСЗВ4.ОтпускБезСохраненияЗарплаты Тогда 	
			ВидСтажаПерсУчета2014 = Перечисления.ВидыСтажаПерсУчета2014.ОтпускБезСохраненияЗарплаты;
		Иначе
			Продолжить;
		КонецЕсли;
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.ВидСтажаПерсУчета2014 = ВидСтажаПерсУчета2014;
		Объект.Записать();
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура УточнитьОкончаниеЛьготныхТарифов() Экспорт

	ТаблицаТарифов = РасчетСтраховыхВзносов.ТаблицаТарифовСтраховыхВзносов();
	
	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.СельХозПроизводители, ТаблицаТарифов);
	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.ЕСХН, ТаблицаТарифов);
	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.НародныеХудожественныеПромыслы, ТаблицаТарифов);
	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.ОрганизацииОказывающиеИнжиниринговыеУслуги, ТаблицаТарифов);
	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов, ТаблицаТарифов);
	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.СМИ, ТаблицаТарифов);

КонецПроцедуры

Процедура ПереставитьЗаписиСтажаПоДоговорам() Экспорт

    МассивДоговоров = Новый Массив();
	МассивДоговоров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ДОГОВОР);
	МассивДоговоров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.НЕОПЛАВТ);
	МассивДоговоров.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.НЕОПЛДОГ);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Договоры", МассивДоговоров);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Ссылка,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&Договоры)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаписиПоДоговорамГПХ,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&Договоры)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ЗаписиПоТрудовымДоговорам,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.НомерСтроки) КАК ВсегоСтрок,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&Договоры)
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.НомерСтроки
	|			ИНАЧЕ -1
	|		КОНЕЦ) КАК НомерПоследнейСтрокиДоговораГПХ,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа В (&Договоры)
	|				ТОГДА 99999
	|			ИНАЧЕ ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.НомерСтроки
	|		КОНЕЦ) КАК НомерПервойСтрокиТрудовогоДоговора
	|ПОМЕСТИТЬ ВТЗаписиОСтаже
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.ЗаписиОСтаже КАК ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АрхивДанныхРегламентированнойОтчетности КАК АрхивДанныхРегламентированнойОтчетности
	|		ПО ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Ссылка = АрхивДанныхРегламентированнойОтчетности.Объект
	|ГДЕ
	|	АрхивДанныхРегламентированнойОтчетности.Регистратор ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Ссылка,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиОСтаже.Ссылка
	|ИЗ
	|	ВТЗаписиОСтаже КАК ЗаписиОСтаже
	|ГДЕ
	|	ЗаписиОСтаже.ЗаписиПоДоговорамГПХ <> ЗаписиОСтаже.ВсегоСтрок
	|	И ЗаписиОСтаже.ЗаписиПоТрудовымДоговорам <> ЗаписиОСтаже.ВсегоСтрок
	|	И ЗаписиОСтаже.НомерПоследнейСтрокиДоговораГПХ > ЗаписиОСтаже.НомерПервойСтрокиТрудовогоДоговора";
	
	ТекстСообщения = "Перестановка записей о стаже по договорам ГПХ";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаОбъектов.Следующий() Цикл
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ВыполнитьНумерациюЗаписейОСтаже(Ложь);
		Объект.ОбменДанными.Загрузка = Истина;
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Если Номер % 30 = 0 Тогда
				Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
			КонецЕсли;
			Номер = Номер + 1;
		#КонецЕсли
		Объект.Записать();
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	

КонецПроцедуры

Процедура УдалитьНеверныеФайлыПерсучета() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АрхивДанныхРегламентированнойОтчетности КАК АрхивДанныхРегламентированнойОтчетности
	|		ПО ПачкаРазделов6РасчетаРСВ_1.Ссылка = АрхивДанныхРегламентированнойОтчетности.Регистратор
	|			И ПачкаРазделов6РасчетаРСВ_1.Ссылка = АрхивДанныхРегламентированнойОтчетности.Объект
	|ГДЕ
	|	(АрхивДанныхРегламентированнойОтчетности.Данные ПОДОБНО ""<ДатаСоставления>Нет</ДатаСоставления>""
	|			ИЛИ АрхивДанныхРегламентированнойОтчетности.Данные ПОДОБНО ""<ДатаСоставления>Да</ДатаСоставления>"")";
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	ТекстЗаголовка = "Удаление неверных файлов перс.учета, часть I";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = ТекстЗаголовка;
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаРегистраторов.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.АрхивДанныхРегламентированнойОтчетности.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
		НаборЗаписей.Записать();
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Если Номер % 30 = 0 Тогда
				Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
			КонецЕсли;
			Номер = Номер + 1;
		#КонецЕсли
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка КАК Регистратор,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Проведен,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПринятоВПФР
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АрхивДанныхРегламентированнойОтчетности КАК АрхивДанныхРегламентированнойОтчетности
	|		ПО СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка = АрхивДанныхРегламентированнойОтчетности.Регистратор
	|			И СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка = АрхивДанныхРегламентированнойОтчетности.Объект
	|ГДЕ
	|	ПОДСТРОКА(АрхивДанныхРегламентированнойОтчетности.Данные, 1, 10) = """"
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ОтчетныйПериод < ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0)";
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	ТекстЗаголовка = "Удаление неверных файлов перс.учета, часть II";
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТекстСообщения = ТекстЗаголовка;
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаРегистраторов.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.АрхивДанныхРегламентированнойОтчетности.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
		НаборЗаписей.Записать();
		Если ВыборкаРегистраторов.Проведен Или ВыборкаРегистраторов.ПринятоВПФР Тогда
			Объект = ВыборкаРегистраторов.Регистратор.ПолучитьОбъект();
			Объект.Проведен = Ложь;
			Объект.ПринятоВПФР = Ложь;
			Объект.Записать();
		КонецЕсли;
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Если Номер % 30 = 0 Тогда
				Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
			КонецЕсли;
			Номер = Номер + 1;
		#КонецЕсли
	КонецЦикла;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура АктуализироватьСписокРегионовРФ() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АдресныйКлассификатор.ТипАдресногоЭлемента
	|ИЗ
	|	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
	|ГДЕ
	|	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	АдресныйКлассификатор.ТипАдресногоЭлемента
	|ИЗ
	|	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
	|ГДЕ
	|	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
	|	И АдресныйКлассификатор.КодРегионаВКоде = 92";
	
	Результаты = Запрос.ВыполнитьПакет();
	                                   
	Если Результаты[0].Пустой() Или Не Результаты[1].Пустой() Тогда
		Возврат
	КонецЕсли;
	
	РегистрыСведений.АдресныйКлассификатор.ЗагрузитьРегионы(Ложь);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура УточнитьСсылкуИТСаНаПерсучет2014() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СсылкиНаСайтеИТС.ИмяРаздела,
	|	СсылкиНаСайтеИТС.Гиперссылка,
	|	СсылкиНаСайтеИТС.Порядок,
	|	СсылкиНаСайтеИТС.ДатаОкончания,
	|	""Составление квартальной отчетности в ПФР"" КАК ПредставлениеСсылки
	|ИЗ
	|	РегистрСведений.СсылкиНаСайтеИТС КАК СсылкиНаСайтеИТС
	|ГДЕ
	|	СсылкиНаСайтеИТС.ИмяРаздела = &ИмяРаздела
	|	И СсылкиНаСайтеИТС.Гиперссылка = &Гиперссылка
	|	И СсылкиНаСайтеИТС.ПредставлениеСсылки ПОДОБНО &ПредставлениеСсылки";
	Запрос.УстановитьПараметр("ИмяРаздела", "ПЕРСОНИФИЦИРОВАННЫЙУЧЕТ");
	Запрос.УстановитьПараметр("Гиперссылка", "http://v8.1c.ru/cnt.jsp/:tk_zup8:/http://its.1c.ru/bmk/zup/pfr_szv_6");
	Запрос.УстановитьПараметр("ПредставлениеСсылки", "Составление отчетности о страховом стаже и взносах (СЗВ-6-1(2), СЗВ-6-4)");
	ПроцедурыОбновленияИнформационнойБазы.ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.СсылкиНаСайтеИТС, Запрос, "Обновление ссылки на ИТС")

КонецПроцедуры

Процедура ОбновитьВидыДеятельности() Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ПОМЕСТИТЬ ВТНовыеЭлементы
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.ДВСТО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.ИЗЛВТР)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.НЕРАБМАТЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.ПРБЛОК)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.ПРЗАГР)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.ПРКОНЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.ПРОВОВ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.ПРОЖСУПР)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.РАБВОВ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.РАБЗАГР)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.РАБЛОК)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.РАБСВПК)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.СЛДАПБЛ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.СЛПРИЗ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.СЛПРОЖ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.ТРУДЛИЦО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка,
	|	ВидыОбщественноПолезнойДеятельности.Код
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|ГДЕ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыОбщественноПолезнойДеятельности.УХОД_ВИЧ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыОбщественноПолезнойДеятельности.Ссылка КАК СтараяСсылка,
	|	НовыеЭлементы.Ссылка КАК НоваяСсылка
	|ПОМЕСТИТЬ ВТЗаменяемыеЭлементы
	|ИЗ
	|	Справочник.ВидыОбщественноПолезнойДеятельности КАК ВидыОбщественноПолезнойДеятельности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНовыеЭлементы КАК НовыеЭлементы
	|		ПО ВидыОбщественноПолезнойДеятельности.Код = НовыеЭлементы.Код
	|ГДЕ
	|	НЕ ВидыОбщественноПолезнойДеятельности.Предопределенный
	|	И НовыеЭлементы.Ссылка ЕСТЬ НЕ NULL ";
	
	Результат = Запрос.Выполнить().Выгрузить(); 
	
	Если Результат[0].Количество = 0 Тогда // пользователи своих элементов не вводили
		Возврат 
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиОСтажеДляСЗВК.ФизЛицо,
	|	ЗаписиОСтажеДляСЗВК.НомерПериодаТрудовойДеятельности,
	|	ЗаписиОСтажеДляСЗВК.НомерОсновнойЗаписи,
	|	ЗаписиОСтажеДляСЗВК.НомерДополнительнойЗаписи,
	|	ЗаписиОСтажеДляСЗВК.Организация,
	|	ЗаменяемыеЭлементы.НоваяСсылка КАК ВидДеятельности,
	|	ЗаписиОСтажеДляСЗВК.ДатаНачалаПериода,
	|	ЗаписиОСтажеДляСЗВК.ДатаОкончанияПериода,
	|	ЗаписиОСтажеДляСЗВК.ОсобыеУсловияТруда,
	|	ЗаписиОСтажеДляСЗВК.КодПозицииСписка,
	|	ЗаписиОСтажеДляСЗВК.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВК.НулевойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВК.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВК.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВК.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВК.ОснованиеВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВК.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВК.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВК.ТретийПараметрВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВК.ТерриториальныеУсловия,
	|	ЗаписиОСтажеДляСЗВК.РайонныйКоэффициент,
	|	ЗаписиОСтажеДляСЗВК.Должность
	|ИЗ
	|	ВТЗаменяемыеЭлементы КАК ЗаменяемыеЭлементы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиОСтажеДляСЗВК КАК ЗаписиОСтажеДляСЗВК
	|		ПО ЗаменяемыеЭлементы.СтараяСсылка = ЗаписиОСтажеДляСЗВК.ВидДеятельности
	|ГДЕ
	|	ЗаписиОСтажеДляСЗВК.ФизЛицо ЕСТЬ НЕ NULL ";
	ПроцедурыОбновленияИнформационнойБазы.ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.ЗаписиОСтажеДляСЗВК, Запрос, "Замена непредопределенных видов деятельности");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаменяемыеЭлементы.СтараяСсылка
	|ИЗ
	|	ВТЗаменяемыеЭлементы КАК ЗаменяемыеЭлементы";
	МассивУдаляемыхСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СтараяСсылка");
	Для каждого Ссылка Из МассивУдаляемыхСсылок Цикл
		Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
	КонецЦикла;

КонецПроцедуры

Процедура ВписатьНомерКорректировкиВРаздел2_5() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.РасчетРСВ1.Вид КАК НомерКорректировки
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.НомерКорректировки = 0
	|	И ПередачаСЗВ4вПФР.РасчетРСВ1.Вид > 0
	|	И ПередачаСЗВ4вПФР.ОтчетныйПериод >= ДАТАВРЕМЯ(2014, 1, 1)
	|	И НЕ ПередачаСЗВ4вПФР.НеСодержитСЗВ";
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка Разделов 2.5 Расчета РСВ-1");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбнулитьНеверныеЧасыГрафиков() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы,
	|	ГрафикиРаботыПоВидамВремени.Месяц,
	|	ГрафикиРаботыПоВидамВремени.План,
	|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени,
	|	ГрафикиРаботыПоВидамВремени.Дата,
	|	ВЫБОР
	|		КОГДА ГрафикиРаботыПоВидамВремени.ОсновноеЗначение < 0
	|			ТОГДА 0
	|		ИНАЧЕ ГрафикиРаботыПоВидамВремени.ОсновноеЗначение
	|	КОНЕЦ КАК ОсновноеЗначение,
	|	ВЫБОР
	|		КОГДА ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение < 0
	|			ТОГДА 0
	|		ИНАЧЕ ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение
	|	КОНЕЦ КАК ДополнительноеЗначение,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьПятидневка,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьПятидневкаЧасы,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьШестидневка,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьКалендарныеДни,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеПолное,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеПолное,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНормаПолное,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНормаПолное,
	|	ГрафикиРаботыПоВидамВремени.Документ
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы
	|	И ГрафикиРаботыПоВидамВремени.Дата >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И (ГрафикиРаботыПоВидамВремени.ОсновноеЗначение < 0
	|			ИЛИ ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение < 0)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы,
	|	ГрафикиРаботыПоВидамВремени.Месяц,
	|	ГрафикиРаботыПоВидамВремени.План,
	|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени,
	|	ГрафикиРаботыПоВидамВремени.Дата,
	|	0,
	|	0,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьПятидневка,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьПятидневкаЧасы,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьШестидневка,
	|	ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьКалендарныеДни,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеПолное,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеПолное,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНормаПолное,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНормаПолное,
	|	ГрафикиРаботыПоВидамВремени.Документ
	|ИЗ
	|	Справочник.ГрафикиРаботы КАК ГрафикиРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО ГрафикиРаботы.Ссылка = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И (ГрафикиРаботыПоВидамВремени.ОсновноеЗначение > 0
	|				ИЛИ ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение > 0)
	|			И (ГрафикиРаботыПоВидамВремени.Дата = ДАТАВРЕМЯ(2014, 11, 3, 0, 0, 0))
	|ГДЕ
	|	ГрафикиРаботы.УчитыватьПраздники
	|	И ГрафикиРаботы.ВидГрафика В (ЗНАЧЕНИЕ(Перечисление.ВидыРабочихГрафиков.Пятидневка), ЗНАЧЕНИЕ(Перечисление.ВидыРабочихГрафиков.Шестидневка))";

	ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.ГрафикиРаботыПоВидамВремени, Запрос, "Обработка графиков работы неполного времени");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикиРаботы.Ссылка,
	|	ВЫБОР
	|		КОГДА ГрафикиРаботы.ВидГрафика = ЗНАЧЕНИЕ(Перечисление.ВидыРабочихГрафиков.Пятидневка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДниНедели.Суббота)
	|		ИНАЧЕ ГрафикиРаботы.ПервыйВыходной
	|	КОНЕЦ КАК ПервыйВыходной,
	|	ВЫБОР
	|		КОГДА ГрафикиРаботы.ВидГрафика = ЗНАЧЕНИЕ(Перечисление.ВидыРабочихГрафиков.Пятидневка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДниНедели.Воскресенье)
	|		КОГДА ГрафикиРаботы.ВидГрафика = ЗНАЧЕНИЕ(Перечисление.ВидыРабочихГрафиков.Шестидневка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДниНедели.Воскресенье)
	|		ИНАЧЕ ГрафикиРаботы.ВторойВыходной
	|	КОНЕЦ КАК ВторойВыходной
	|ИЗ
	|	Справочник.ГрафикиРаботы КАК ГрафикиРаботы
	|ГДЕ
	|	ГрафикиРаботы.ВторойВыходной = ЗНАЧЕНИЕ(Перечисление.ДниНедели.ПустаяСсылка)
	|	И ГрафикиРаботы.УчитыватьПраздники
	|	И ГрафикиРаботы.ВидГрафика В (ЗНАЧЕНИЕ(Перечисление.ВидыРабочихГрафиков.Пятидневка), ЗНАЧЕНИЕ(Перечисление.ВидыРабочихГрафиков.Шестидневка))";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка графиков работы неполного времени");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ВписатьДатуРегистрацииВУчетСтраховыхВзносов() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтраховыеВзносыСведенияОДоходах.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.ДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Период,
	|	СтраховыеВзносыСведенияОДоходах.Регистратор КАК Регистратор,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.Организация,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение,
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ), ДЕНЬ) КАК ДатаПолученияДохода,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомФармацевта,
	|	СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	СтраховыеВзносыСведенияОДоходах.КлассУсловийТруда,
	|	СтраховыеВзносыСведенияОДоходах.ПоАктуПроверки,
	|	СтраховыеВзносыСведенияОДоходах.Результат,
	|	СтраховыеВзносыСведенияОДоходах.Скидка,
	|	СтраховыеВзносыСведенияОДоходах.ВидРасчета,
	|	СтраховыеВзносыСведенияОДоходах.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	СтраховыеВзносыСведенияОДоходах.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.СтраховыеВзносыСведенияОДоходах, Запрос, "Обработка учета страховых взносов, часть I");	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтраховыеВзносыИсчисленные.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.ДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.Период,
	|	СтраховыеВзносыИсчисленные.Регистратор КАК Регистратор,
	|	СтраховыеВзносыИсчисленные.ФизЛицо,
	|	СтраховыеВзносыИсчисленные.Организация,
	|	СтраховыеВзносыИсчисленные.ОбособленноеПодразделение,
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(СтраховыеВзносыИсчисленные.Период, МЕСЯЦ), ДЕНЬ) КАК ДатаПолученияДохода,
	|	СтраховыеВзносыИсчисленные.ПоАктуПроверки,
	|	СтраховыеВзносыИсчисленные.НомерСтроки КАК НомерСтроки,
	|	СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу,
	|	СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД,
	|	СтраховыеВзносыИсчисленные.ПФРСтраховая,
	|	СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД,
	|	СтраховыеВзносыИсчисленные.ПФРНакопительная,
	|	СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД,
	|	СтраховыеВзносыИсчисленные.ФСС,
	|	СтраховыеВзносыИсчисленные.ФССЕНВД,
	|	СтраховыеВзносыИсчисленные.ФФОМС,
	|	СтраховыеВзносыИсчисленные.ФФОМСЕНВД,
	|	СтраховыеВзносыИсчисленные.ТФОМС,
	|	СтраховыеВзносыИсчисленные.ТФОМСЕНВД,
	|	СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи,
	|	СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу,
	|	СтраховыеВзносыИсчисленные.ПФРНаДоплатуКПенсииШахтерам,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.СтраховыеВзносыИсчисленные, Запрос, "Обработка учета страховых взносов, часть II");	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.Период,
	|	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.ФизЛицо,
	|	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.Организация,
	|	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.ПринятПоДолгосрочномуДоговору,
	|	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.ПериодЗавершения,
	|	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.Документ,
	|	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.Период КАК ДатаРегистрацииИзменений
	|ИЗ
	|	РегистрСведений.ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам КАК ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам
	|ГДЕ
	|	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.ДатаРегистрацииИзменений = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам, Запрос, "Обработка сведений для учета страховых взносов, часть I");

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГражданствоФизЛиц.Период,
	|	ГражданствоФизЛиц.ФизЛицо,
	|	ГражданствоФизЛиц.Период КАК ДатаРегистрацииИзменений,
	|	ГражданствоФизЛиц.Страна,
	|	ГражданствоФизЛиц.НеИмеетПравоНаПенсию,
	|	ГражданствоФизЛиц.УдалитьНеЯвляетсяНалоговымРезидентомРФ,
	|	ГражданствоФизЛиц.ВидЗастрахованногоЛица
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|ГДЕ
	|	ГражданствоФизЛиц.ДатаРегистрацииИзменений = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.ГражданствоФизЛиц, Запрос, "Обработка сведений для учета страховых взносов, часть II");

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассыУсловийТрудаПоДолжностям.Период,
	|	КлассыУсловийТрудаПоДолжностям.Период КАК ДатаРегистрацииИзменений,
	|	КлассыУсловийТрудаПоДолжностям.Должность,
	|	КлассыУсловийТрудаПоДолжностям.КлассУсловийТруда
	|ИЗ
	|	РегистрСведений.КлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|ГДЕ
	|	КлассыУсловийТрудаПоДолжностям.ДатаРегистрацииИзменений = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.КлассыУсловийТрудаПоДолжностям, Запрос, "Обработка сведений для учета страховых взносов, часть III");

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОбИнвалидностиФизлиц.Период,
	|	СведенияОбИнвалидностиФизлиц.Период КАК ДатаРегистрацииИзменений,
	|	СведенияОбИнвалидностиФизлиц.Физлицо,
	|	СведенияОбИнвалидностиФизлиц.Инвалидность,
	|	СведенияОбИнвалидностиФизлиц.СерияСправки,
	|	СведенияОбИнвалидностиФизлиц.НомерСправки,
	|	СведенияОбИнвалидностиФизлиц.ДатаВыдачи,
	|	СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ДатаРегистрацииИзменений = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	ПереписатьНаборыЗаписейНезависимогоРегистра(РегистрыСведений.СведенияОбИнвалидностиФизлиц, Запрос, "Обработка сведений для учета страховых взносов, часть IV");

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.РасчетСтраховыхВзносов.ИсчисленныеСтраховыеВзносы КАК РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы
	|ГДЕ
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.Ссылка КАК Ссылка,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.НомерСтроки КАК НомерСтроки,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ФизЛицо,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ФСС,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ФФОМС,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ТФОМС,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРНакопительная,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРСтраховая,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРПоСуммарномуТарифу,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРПоДополнительномуТарифу,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ФССНесчастныеСлучаи,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРСтраховаяЕНВД,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРНакопительнаяЕНВД,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРПоСуммарномуТарифуЕНВД,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРНаДоплатуКПенсииШахтерам,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ФССЕНВД,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ФФОМСЕНВД,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ТФОМСЕНВД,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4,
	|	КОНЕЦПЕРИОДА(РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ДатаПолученияДохода
	|ИЗ
	|	Документ.РасчетСтраховыхВзносов.ИсчисленныеСтраховыеВзносы КАК РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы
	|ГДЕ
	|	РасчетСтраховыхВзносовИсчисленныеСтраховыеВзносы.Ссылка В
	|			(ВЫБРАТЬ
	|				Документы.Ссылка
	|			ИЗ
	|				ВТДокументы КАК Документы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ИсчисленныеСтраховыеВзносы", "Обработка документов по страховым взносам, часть III");

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.РасчетСтраховыхВзносов.НеоблагаемыеСуммыДоходов КАК РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов
	|ГДЕ
	|	РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов.ДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов.Ссылка КАК Ссылка,
	|	РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов.НомерСтроки КАК НомерСтроки,
	|	РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов.ФизЛицо,
	|	РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов.ВидДохода,
	|	РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов.Скидка,
	|	КОНЕЦПЕРИОДА(РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ДатаПолученияДохода
	|ИЗ
	|	Документ.РасчетСтраховыхВзносов.НеоблагаемыеСуммыДоходов КАК РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов
	|ГДЕ
	|	РасчетСтраховыхВзносовНеоблагаемыеСуммыДоходов.Ссылка В
	|			(ВЫБРАТЬ
	|				Документы.Ссылка
	|			ИЗ
	|				ВТДокументы КАК Документы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "НеоблагаемыеСуммыДоходов", "Обработка документов по страховым взносам, часть IV");

КонецПроцедуры

Процедура ЗаполнитьПроизводственныйКалендарьЗа2015Год() Экспорт
	
	ДатыОтмененныхПереносов = Новый Массив;
	ПереЗаполнитьПроизводственныйКалендарьСУчетомПереносов(2015, ДатыОтмененныхПереносов);		
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ИсправитьРасчетыПоАктам() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыПоСтраховымВзносам.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктПроверкиСтраховыхВзносов КАК АктПроверкиСтраховыхВзносов
	|		ПО РасчетыПоСтраховымВзносам.Регистратор = АктПроверкиСтраховыхВзносов.Ссылка
	|ГДЕ
	|	АктПроверкиСтраховыхВзносов.Ссылка ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоСтраховымВзносам.Период,
	|	РасчетыПоСтраховымВзносам.Регистратор КАК Регистратор,
	|	РасчетыПоСтраховымВзносам.НомерСтроки КАК НомерСтроки,
	|	РасчетыПоСтраховымВзносам.Активность,
	|	РасчетыПоСтраховымВзносам.ВидДвижения,
	|	РасчетыПоСтраховымВзносам.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.НалогАкт) КАК ВидПлатежа,
	|	РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода,
	|	РасчетыПоСтраховымВзносам.ОблагаетсяЕНВД,
	|	РасчетыПоСтраховымВзносам.ПФРПоСуммарномуТарифу,
	|	РасчетыПоСтраховымВзносам.ПФРСтраховая,
	|	РасчетыПоСтраховымВзносам.ПФРНакопительная,
	|	РасчетыПоСтраховымВзносам.ФСС,
	|	РасчетыПоСтраховымВзносам.ФФОМС,
	|	РасчетыПоСтраховымВзносам.ТФОМС,
	|	РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаи,
	|	РасчетыПоСтраховымВзносам.ПФРПоДополнительномуТарифу,
	|	РасчетыПоСтраховымВзносам.ПФРНаДоплатуКПенсииШахтерам,
	|	РасчетыПоСтраховымВзносам.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	РасчетыПоСтраховымВзносам.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
	|ИЗ
	|	РегистрНакопления.РасчетыПоСтраховымВзносам КАК РасчетыПоСтраховымВзносам
	|ГДЕ
	|	РасчетыПоСтраховымВзносам.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.РасчетыПоСтраховымВзносам, Запрос, "Обработка расчетов по актам проверки страх.взносов");	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновитьТарифы2015() Экспорт

	ТаблицаТарифов = РасчетСтраховыхВзносов.ТаблицаТарифовСтраховыхВзносов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыТарифовСтраховыхВзносов.Ссылка
	|ИЗ
	|	Перечисление.ТарифыСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
	|ГДЕ
	|	ВидыТарифовСтраховыхВзносов.Ссылка <> ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.УчастникПроектаИнновационныйЦентрСколково)";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбновитьТарифСтраховыхВзносов(Выборка.Ссылка, ТаблицаТарифов);
	КонецЦикла;
	
КонецПроцедуры

Процедура ИндексироватьПособия2015()
	
	ДатаДействия = '20150101';
	
	НаборЗаписей = РегистрыСведений.МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
    НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 65330;
	НаборЗаписей.Записать();

	НаборЗаписей = РегистрыСведений.ГосударственныеПособия.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 14497.80;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 2718.34;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 5436.67;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 543.67;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 5277.28;
	
	ПроцедурыОбновленияИнформационнойБазыПереопределяемый.УстановитьМаксимумПособияПоУходуЗаРебенкомДоПолутораЛет2015(НаборЗаписей);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ИндексироватьРазмеры2015() Экспорт
	
	ЗаполнитьПредельнуюВеличинуБазыСтраховыхВзносов();
	
	ДатаДействия = '20150101';
	
	НаборЗаписей = РегистрыСведений.МинимальнаяОплатаТрудаРФ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = ДатаДействия;
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ДатаДействия;
	НоваяЗапись.Размер = 5965;
	НаборЗаписей.Записать();
	
	ИндексироватьПособия2015();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ВписатьТарифРезидентаТОР() Экспорт

	ОбновитьТарифСтраховыхВзносов(Перечисления.ТарифыСтраховыхВзносов.РезидентТерриторииОпережающегоСоциальноЭкономическогоРазвития);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
Процедура ПроставитьФлажокВключатьВДекларациюПоНалогуНаПрибыль() Экспорт

	// Обработка данных о доходах физлиц.
	
	КодыДоходовПоЦеннымБумагам = СправкиПоНДФЛПовтИсп.КодыДоходовПоЦеннымБумагам(2014);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КодыДоходовПоЦеннымБумагам",КодыДоходовПоЦеннымБумагам);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СведенияОДоходахНДФЛ.Регистратор
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.КодДохода В(&КодыДоходовПоЦеннымБумагам)
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
	|	И СведенияОДоходахНДФЛ.Период >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)";
	Если Запрос.Выполнить().Пустой() Тогда // Дальнейшая обработка не нужна - доходов по ценным бумагам нет.
		Возврат
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СведенияОДоходахНДФЛ.Регистратор
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.КодДохода В(&КодыДоходовПоЦеннымБумагам)
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
	|	И СведенияОДоходахНДФЛ.Период >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И НЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль";
	Если Запрос.Выполнить().Пустой() Тогда // Повторная обработка не нужна - необработанных доходов по ценным бумагам нет.
		Возврат
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.КодДохода В(&КодыДоходовПоЦеннымБумагам)
	|	И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
	|	И СведенияОДоходахНДФЛ.Период >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И НЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.Период,
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.НомерСтроки КАК НомерСтроки,
	|	СведенияОДоходахНДФЛ.Активность,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахНДФЛ.КодДохода В (&КодыДоходовПоЦеннымБумагам)
	|				И СведенияОДоходахНДФЛ.КодДохода <> ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	|	СведенияОДоходахНДФЛ.Организация,
	|	СведенияОДоходахНДФЛ.ФизЛицо,
	|	СведенияОДоходахНДФЛ.КодДохода,
	|	СведенияОДоходахНДФЛ.ПериодРегистрации,
	|	СведенияОДоходахНДФЛ.СуммаДохода,
	|	СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.КодВычета,
	|	СведенияОДоходахНДФЛ.ОбособленноеПодразделение,
	|	СведенияОДоходахНДФЛ.ИсчисленоИзЗарплаты,
	|	СведенияОДоходахНДФЛ.КодПоОКАТО,
	|	СведенияОДоходахНДФЛ.КПП,
	|	СведенияОДоходахНДФЛ.ПодразделениеОрганизации,
	|	СведенияОДоходахНДФЛ.КоличествоДетей,
	|	СведенияОДоходахНДФЛ.ВидРасчета,
	|	СведенияОДоходахНДФЛ.ЗарегистрированоДляПромежуточногоРасчета,
	|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	|	СведенияОДоходахНДФЛ.КодПоОКТМО
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.НДФЛСведенияОДоходах, Запрос, "");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОперацияНалоговогоУчетаПоНДФЛ.Ссылка
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги КАК ОперацияНалоговогоУчетаПоНДФЛ
	|ГДЕ
	|	ОперацияНалоговогоУчетаПоНДФЛ.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)";	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.ОбменДанными.Загрузка = Истина;
			Для каждого СтрокаТЧ Из Документ.НДФЛСведенияОДоходах Цикл
				Если Не СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль И КодыДоходовПоЦеннымБумагам.Найти(СтрокаТЧ.КодДохода) <> Неопределено И СтрокаТЧ.КодДохода <> Справочники.ДоходыНДФЛ.Код1010 Тогда
					СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль = Истина
				КонецЕсли;
			КонецЦикла;
			Если Документ.Модифицированность() Тогда
				Документ.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Обработка данных физлиц, не имевших других доходов, кроме ценных бумаг.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.ОбособленноеПодразделение,
	|	СведенияОДоходахНДФЛ.КодПоОКТМО,
	|	СведенияОДоходахНДФЛ.КПП,
	|	СведенияОДоходахНДФЛ.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТФизлицаСОднотипнымиДоходами
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Период >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахНДФЛ.ФизЛицо,
	|	СведенияОДоходахНДФЛ.ОбособленноеПодразделение,
	|	СведенияОДоходахНДФЛ.КодПоОКТМО,
	|	СведенияОДоходахНДФЛ.КПП,
	|	СведенияОДоходахНДФЛ.ПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизлицаСОднотипнымиДоходами.ФизЛицо КАК ФизЛицо,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение,
	|	ФизлицаСОднотипнымиДоходами.КодПоОКТМО,
	|	ФизлицаСОднотипнымиДоходами.КПП,
	|	ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	ВТФизлицаСОднотипнымиДоходами КАК ФизлицаСОднотипнымиДоходами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛСведенияОДоходах КАК СведенияОДоходахНДФЛ
	|		ПО ФизлицаСОднотипнымиДоходами.ФизЛицо = СведенияОДоходахНДФЛ.ФизЛицо
	|			И (ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ))
	|			И ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение = СведенияОДоходахНДФЛ.ОбособленноеПодразделение
	|			И ФизлицаСОднотипнымиДоходами.КодПоОКТМО = СведенияОДоходахНДФЛ.КодПоОКТМО
	|			И ФизлицаСОднотипнымиДоходами.КПП = СведенияОДоходахНДФЛ.КПП
	|			И ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации = СведенияОДоходахНДФЛ.ПодразделениеОрганизации
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизлицаСОднотипнымиДоходами";
	Запрос.Выполнить();

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыВычетов
	|ИЗ
	|	РегистрНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизЛицо = Физлица.ФизЛицо
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ОбособленноеПодразделение = Физлица.ОбособленноеПодразделение
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодПоОКТМО = Физлица.КодПоОКТМО
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КПП = Физлица.КПП
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПодразделениеОрганизации = Физлица.ПодразделениеОрганизации
	|ГДЕ
	|	НЕ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И Физлица.ФизЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Активность,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПримененныйВычет,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодПоОКАТО,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КПП,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ОбособленноеПодразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПодразделениеОрганизации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодПоОКТМО,
	|	ВЫБОР
	|		КОГДА Физлица.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизЛицо = Физлица.ФизЛицо
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ОбособленноеПодразделение = Физлица.ОбособленноеПодразделение
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодПоОКТМО = Физлица.КодПоОКТМО
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КПП = Физлица.КПП
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПодразделениеОрганизации = Физлица.ПодразделениеОрганизации
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыВычетов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц, Запрос, "");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалогоплательщиков
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизЛицо = Физлица.ФизЛицо
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение = Физлица.ОбособленноеПодразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодПоОКТМО = Физлица.КодПоОКТМО
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КПП = Физлица.КПП
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПодразделениеОрганизации = Физлица.ПодразделениеОрганизации
	|ГДЕ
	|	НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И Физлица.ФизЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Налог,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ИсчисленоИзЗарплаты,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодПоОКАТО,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КПП,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПодразделениеОрганизации,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодПоОКТМО,
	|	ВЫБОР
	|		КОГДА Физлица.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизЛицо = Физлица.ФизЛицо
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение = Физлица.ОбособленноеПодразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодПоОКТМО = Физлица.КодПоОКТМО
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КПП = Физлица.КПП
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПодразделениеОрганизации = Физлица.ПодразделениеОрганизации
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалогоплательщиков КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.НДФЛРасчетыСБюджетом, Запрос, "");
	
	Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
	Запрос.УстановитьПараметр("ПустойКПП","");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизлицаСОднотипнымиДоходами.ФизЛицо КАК ФизЛицо,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение,
	|	ВЫБОР
	|		КОГДА ФизлицаСОднотипнымиДоходами.КПП <> &ПустойКПП
	|			ТОГДА ФизлицаСОднотипнымиДоходами.КПП
	|		КОГДА ЕСТЬNULL(ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
	|			ТОГДА ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации.КПП
	|		ИНАЧЕ ЕСТЬNULL(ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение.КПП, &ПустойКПП)
	|	КОНЕЦ КАК КПП,
	|	ВЫБОР
	|		КОГДА ФизлицаСОднотипнымиДоходами.КодПоОКТМО <> &ПустойКодПоОКАТО
	|			ТОГДА ФизлицаСОднотипнымиДоходами.КодПоОКТМО
	|		КОГДА ЕСТЬNULL(ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации.КодПоОКТМО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|			ТОГДА ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации.КодПоОКТМО
	|		ИНАЧЕ ЕСТЬNULL(ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение.КодПоОКТМО, &ПустойКодПоОКАТО)
	|	КОНЕЦ КАК КодПоОКТМО,
	|	ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации
	|ИЗ
	|	ВТФизлица КАК ФизлицаСОднотипнымиДоходами";
	ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
	ВременнаяТаблица.Колонки.Добавить("ОКТМО_КПП", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(21)));
	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
		СтрокаТЗ.ОКТМО_КПП = СправкиПоНДФЛ.СуммаОКАТОиКПП(СтрокаТЗ.КодПоОКТМО, СтрокаТЗ.КПП);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Физлица", ВременнаяТаблица);
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТФизлица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизлицаСОднотипнымиДоходами.ФизЛицо КАК ФизЛицо,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение,
	|	ФизлицаСОднотипнымиДоходами.ОКТМО_КПП
	|ПОМЕСТИТЬ ВТФизлица
	|ИЗ
	|	&Физлица КАК ФизлицаСОднотипнымиДоходами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалоговыхАгентов
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо = Физлица.ФизЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация = Физлица.ОбособленноеПодразделение
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП = Физлица.ОКТМО_КПП
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
	|	И Физлица.ФизЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКАТО_КПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
	|	ВЫБОР
	|		КОГДА Физлица.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлица КАК Физлица
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо = Физлица.ФизЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация = Физлица.ОбособленноеПодразделение
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП = Физлица.ОКТМО_КПП
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалоговыхАгентов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ, Запрос, "");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеречислениеНДФЛвБюджет.Ссылка
	|ИЗ
	|	Документ.ПеречислениеНДФЛвБюджет КАК ПеречислениеНДФЛвБюджет
	|ГДЕ
	|	ПеречислениеНДФЛвБюджет.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалоговыхАгентов КАК Регистраторы)";	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		СтруктураПоиска = Новый Структура("ФизЛицо, ОКТМО_КПП, МесяцНалоговогоПериода, ОбособленноеПодразделение");
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.ОбменДанными.Загрузка = Истина;
			СтруктураПоиска.МесяцНалоговогоПериода = НачалоМесяца(Документ.МесяцНалоговогоПериода);
			СтруктураПоиска.ОбособленноеПодразделение = Документ.Организация;
			СтруктураПоиска.ОКТМО_КПП = Документ.ОКТМО_КПП;
			Для каждого СтрокаТЧ Из Документ.СотрудникиОрганизации Цикл
				СтруктураПоиска.ФизЛицо = СтрокаТЧ.ФизЛицо;
				Если Не СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль И ВременнаяТаблица.НайтиСтроки(СтруктураПоиска).Количество() > 0 Тогда
					СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль = Истина
				КонецЕсли;
			КонецЦикла;
			Если Документ.Модифицированность() Тогда
				Документ.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Обработка данных регистраторов, в которых нет других доходов, кроме ценных бумаг.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыДоходовПоЦеннымБумагам
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОДоходахНДФЛ.Регистратор КАК Регистратор,
	|	СведенияОДоходахНДФЛ.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СведенияОДоходахНДФЛ.ОбособленноеПодразделение,
	|	СведенияОДоходахНДФЛ.КодПоОКТМО,
	|	СведенияОДоходахНДФЛ.КПП,
	|	СведенияОДоходахНДФЛ.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТФизлицаСОднотипнымиДоходами
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК СведенияОДоходахНДФЛ
	|ГДЕ
	|	СведенияОДоходахНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыДоходовПоЦеннымБумагам КАК Регистраторы)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахНДФЛ.Регистратор,
	|	СведенияОДоходахНДФЛ.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ),
	|	СведенияОДоходахНДФЛ.ОбособленноеПодразделение,
	|	СведенияОДоходахНДФЛ.КодПоОКТМО,
	|	СведенияОДоходахНДФЛ.КПП,
	|	СведенияОДоходахНДФЛ.ПодразделениеОрганизации
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизлицаСОднотипнымиДоходами.Регистратор,
	|	ФизлицаСОднотипнымиДоходами.ФизЛицо,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение,
	|	ФизлицаСОднотипнымиДоходами.КодПоОКТМО,
	|	ФизлицаСОднотипнымиДоходами.КПП,
	|	ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	ВТФизлицаСОднотипнымиДоходами КАК ФизлицаСОднотипнымиДоходами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛСведенияОДоходах КАК СведенияОДоходахНДФЛ
	|		ПО ФизлицаСОднотипнымиДоходами.Регистратор = СведенияОДоходахНДФЛ.Регистратор
	|			И ФизлицаСОднотипнымиДоходами.ФизЛицо = СведенияОДоходахНДФЛ.ФизЛицо
	|			И (ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ))
	|			И ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение = СведенияОДоходахНДФЛ.ОбособленноеПодразделение
	|			И ФизлицаСОднотипнымиДоходами.КодПоОКТМО = СведенияОДоходахНДФЛ.КодПоОКТМО
	|			И ФизлицаСОднотипнымиДоходами.КПП = СведенияОДоходахНДФЛ.КПП
	|			И ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации = СведенияОДоходахНДФЛ.ПодразделениеОрганизации
	|ГДЕ
	|	СведенияОДоходахНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРегистраторыДоходовПоЦеннымБумагам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизлицаСОднотипнымиДоходами";
	Запрос.Выполнить();

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыВычетов
	|ИЗ
	|	РегистрНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизЛицо = Регистраторы.ФизЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ОбособленноеПодразделение = Регистраторы.ОбособленноеПодразделение
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодПоОКТМО = Регистраторы.КодПоОКТМО
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КПП = Регистраторы.КПП
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПодразделениеОрганизации = Регистраторы.ПодразделениеОрганизации
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И НЕ ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И Регистраторы.ФизЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор КАК Регистратор,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Активность,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизЛицо,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Организация,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПримененныйВычет,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодПоОКАТО,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КПП,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ОбособленноеПодразделение,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПодразделениеОрганизации,
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодПоОКТМО,
	|	ВЫБОР
	|		КОГДА Регистраторы.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизЛицо = Регистраторы.ФизЛицо
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ОбособленноеПодразделение = Регистраторы.ОбособленноеПодразделение
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодПоОКТМО = Регистраторы.КодПоОКТМО
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КПП = Регистраторы.КПП
	|			И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ПодразделениеОрганизации = Регистраторы.ПодразделениеОрганизации
	|			И (НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыВычетов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц, Запрос, "");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалогоплательщиков
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизЛицо = Регистраторы.ФизЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение = Регистраторы.ОбособленноеПодразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодПоОКТМО = Регистраторы.КодПоОКТМО
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КПП = Регистраторы.КПП
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПодразделениеОрганизации = Регистраторы.ПодразделениеОрганизации
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И НЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И Регистраторы.ФизЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизЛицо,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Налог,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидСтроки,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ИсчисленоИзЗарплаты,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодПоОКАТО,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КПП,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПодразделениеОрганизации,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодПоОКТМО,
	|	ВЫБОР
	|		КОГДА Регистраторы.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизЛицо = Регистраторы.ФизЛицо
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение = Регистраторы.ОбособленноеПодразделение
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодПоОКТМО = Регистраторы.КодПоОКТМО
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КПП = Регистраторы.КПП
	|			И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПодразделениеОрганизации = Регистраторы.ПодразделениеОрганизации
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Регистраторы.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалогоплательщиков КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.НДФЛРасчетыСБюджетом, Запрос, "");

	Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
	Запрос.УстановитьПараметр("ПустойКПП","");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизлицаСОднотипнымиДоходами.ФизЛицо КАК ФизЛицо,
	|	ФизлицаСОднотипнымиДоходами.Регистратор,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение,
	|	ВЫБОР
	|		КОГДА ФизлицаСОднотипнымиДоходами.КПП <> &ПустойКПП
	|			ТОГДА ФизлицаСОднотипнымиДоходами.КПП
	|		КОГДА ЕСТЬNULL(ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
	|			ТОГДА ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации.КПП
	|		ИНАЧЕ ЕСТЬNULL(ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение.КПП, &ПустойКПП)
	|	КОНЕЦ КАК КПП,
	|	ВЫБОР
	|		КОГДА ФизлицаСОднотипнымиДоходами.КодПоОКТМО <> &ПустойКодПоОКАТО
	|			ТОГДА ФизлицаСОднотипнымиДоходами.КодПоОКТМО
	|		КОГДА ЕСТЬNULL(ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации.КодПоОКТМО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|			ТОГДА ФизлицаСОднотипнымиДоходами.ПодразделениеОрганизации.КодПоОКТМО
	|		ИНАЧЕ ЕСТЬNULL(ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение.КодПоОКТМО, &ПустойКодПоОКАТО)
	|	КОНЕЦ КАК КодПоОКТМО
	|ИЗ
	|	ВТРегистраторы КАК ФизлицаСОднотипнымиДоходами";
	ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
	ВременнаяТаблица.Колонки.Добавить("ОКТМО_КПП", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(21)));
	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
		СтрокаТЗ.ОКТМО_КПП = СправкиПоНДФЛ.СуммаОКАТОиКПП(СтрокаТЗ.КодПоОКТМО, СтрокаТЗ.КПП);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Физлица", ВременнаяТаблица);
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТРегистраторы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизлицаСОднотипнымиДоходами.ФизЛицо КАК ФизЛицо,
	|	ФизлицаСОднотипнымиДоходами.Регистратор,
	|	ФизлицаСОднотипнымиДоходами.МесяцНалоговогоПериода,
	|	ФизлицаСОднотипнымиДоходами.ОбособленноеПодразделение,
	|	ФизлицаСОднотипнымиДоходами.Регистратор КАК Регистратор1,
	|	ФизлицаСОднотипнымиДоходами.ОКТМО_КПП
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	&Физлица КАК ФизлицаСОднотипнымиДоходами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыНалоговыхАгентов
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Физлица
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо = Физлица.ФизЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация = Физлица.ОбособленноеПодразделение
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП = Физлица.ОКТМО_КПП
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|	И НЕ РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|	И Физлица.ФизЛицо ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Активность,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКАТО_КПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
	|	ВЫБОР
	|		КОГДА Физлица.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВключатьВДекларациюПоНалогуНаПрибыль
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Физлица
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо = Физлица.ФизЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация = Физлица.ОбособленноеПодразделение
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП = Физлица.ОКТМО_КПП
	|			И (НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = Физлица.МесяцНалоговогоПериода)
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Регистратор В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалоговыхАгентов КАК Регистраторы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ, Запрос, "");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеречислениеНДФЛвБюджет.Ссылка
	|ИЗ
	|	Документ.ПеречислениеНДФЛвБюджет КАК ПеречислениеНДФЛвБюджет
	|ГДЕ
	|	ПеречислениеНДФЛвБюджет.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Регистратор
	|			ИЗ
	|				ВТРегистраторыНалоговыхАгентов КАК Регистраторы)";	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		СтруктураПоиска = Новый Структура("ФизЛицо, ОКТМО_КПП, МесяцНалоговогоПериода, ОбособленноеПодразделение");
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.ОбменДанными.Загрузка = Истина;
			СтруктураПоиска.МесяцНалоговогоПериода = НачалоМесяца(Документ.МесяцНалоговогоПериода);
			СтруктураПоиска.ОбособленноеПодразделение = Документ.Организация;
			СтруктураПоиска.ОКТМО_КПП = Документ.ОКТМО_КПП;
			Для каждого СтрокаТЧ Из Документ.СотрудникиОрганизации Цикл
				СтруктураПоиска.ФизЛицо = Документ.ФизЛицо;
				Если Не СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль И ВременнаяТаблица.НайтиСтроки(СтруктураПоиска).Количество() > 0 Тогда
					СтрокаТЧ.ВключатьВДекларациюПоНалогуНаПрибыль = Истина
				КонецЕсли;
			КонецЦикла;
			Если Документ.Модифицированность() Тогда
				Документ.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьКодыНДФЛ2014() Экспорт 
	
	Ставка13 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;	
	ДоходыНДФЛ = Справочники.ДоходыНДФЛ;
	
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1543, Ставка13, "1543");
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код218); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код219); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код220); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код221); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код222); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код223); // с 2014 г.
	ОписатьКодВычетаНДФЛ_2011(ВычетыНДФЛ.Код224); // с 2014 г.
	
КонецПроцедуры	

////////////////////////////////////////////////////////////////////////////////

Процедура ВписатьКодыПерсучета2015Года() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсобыеУсловияТрудаПФР.Ссылка,
	|	ОсобыеУсловияТрудаПФР.КодДляОтчетности2010 КАК КодДляОтчетности2015
	|ИЗ
	|	Справочник.ОсобыеУсловияТруда КАК ОсобыеУсловияТрудаПФР
	|ГДЕ
	|	ОсобыеУсловияТрудаПФР.КодДляОтчетности2015 = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОснованияВыслугиЛет.Ссылка,
	|	ОснованияВыслугиЛет.КодДляОтчетности2010
	|ИЗ
	|	Справочник.ОснованияВыслугиЛет КАК ОснованияВыслугиЛет
	|ГДЕ
	|	ОснованияВыслугиЛет.КодДляОтчетности2015 = """"";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	    Объект = Выборка.Ссылка.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект, Выборка);
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.КодДляОтчетности2015 = СтрЗаменить(Объект.КодДляОтчетности2015, "27", "30");
		Объект.КодДляОтчетности2015 = СтрЗаменить(Объект.КодДляОтчетности2015, "28", "32");
		Объект.Записать();
	КонецЦикла;
		
КонецПроцедуры	

////////////////////////////////////////////////////////////////////////////////

Процедура ОтметитьРазделы6За2015Год() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1.Ссылка,
	|	ИСТИНА КАК СпециальныйДокумент2015года
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1.ОтчетныйПериод = ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|	И НЕ ПачкаРазделов6РасчетаРСВ_1.СпециальныйДокумент2015года
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.ОтчетныйПериод = ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|	И НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2015года";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов перс.учета");
	
КонецПроцедуры
