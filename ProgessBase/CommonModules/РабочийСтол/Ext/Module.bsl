#Если ТолстыйКлиентОбычноеПриложение Тогда
	
Функция УстановитьЗакладку(ИмяЗакладки, ЭлементыФормы) Экспорт
	
	ТекущаяСтраницаИмя = ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя;
	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы[ИмяЗакладки];
	ЭлементыФормы[ТекущаяСтраницаИмя + "Активная"].Видимость = Ложь;
	ЭлементыФормы[ТекущаяСтраницаИмя].Видимость = Истина;
	ЭлементыФормы[ИмяЗакладки + "Активная"].Видимость = Истина;
	ЭлементыФормы[ИмяЗакладки].Видимость = Ложь;
	Возврат ЭлементыФормы[ИмяЗакладки + "Активная"];
	
КонецФункции

Процедура УстановитьИмяТекущегоПользователя(ЗаголовокНадписи) Экспорт
	// заполним команду Мои настройки представлением текущего пользователя
	Если Не ПустаяСтрока(ИмяПользователя()) Тогда
		ЗаголовокНадписи = ОбщегоНазначенияЗК.ПолучитьПредставленияОбъектов(глЗначениеПеременной("глТекущийПользователь"));
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьОсновнуюОрганизацию(ЗаголовокНадписиОсновнойОрганизации, ЗаголовокКомандыОсновнойОрганизации, ОбъектОбработка) Экспорт
	ОбъектОбработка.ОсновнаяОрганизация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	ЗаголовокНадписиОсновнойОрганизации = ОбщегоНазначенияЗК.ПолучитьПредставленияОбъектов(ОбъектОбработка.ОсновнаяОрганизация);
	ЗаголовокКомандыОсновнойОрганизации = ?(ЗначениеЗаполнено(ОбъектОбработка.ОсновнаяОрганизация), "Изменить ", "Установить ") + ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("основную организацию");
КонецПроцедуры

Функция ОтсечьЦифры(ИсходнаяСтрока) Экспорт

	ФинальнаяСтрока = ИсходнаяСтрока;
	
	КодСимвола = КодСимвола(Прав(ИсходнаяСтрока, 1));
	
	Если (КодСимвола >= 48 И КодСимвола <= 57) Тогда
		ФинальнаяСтрока = Лев(ИсходнаяСтрока, СтрДлина(ИсходнаяСтрока) - 1);
	КонецЕсли; 
	
	Возврат ФинальнаяСтрока;
		
КонецФункции // ОтсечьЦифры()

Процедура ОбработкаИсключения(ИнформацияОбОшибке) Экспорт
	
	ПричинаОшибки = ИнформацияОбОшибке.Причина;
	Предупреждение(?(ПричинаОшибки = Неопределено,
					 "При выполнении действия произошла ошибка.",
					 ПричинаОшибки.Описание));
	
КонецПроцедуры // ОбработкаИсключения()

Процедура ОбработатьОткрытиеФормы(Элемент, Менеджер = Неопределено, ФормаСписка = Истина, ИмяФормы = Неопределено) Экспорт

	ИмяОбъектаМетаданных = ОтсечьЦифры(Элемент.Имя);
	
	Попытка
		
		Если Менеджер = Неопределено Тогда
			Форма = ПолучитьОбщуюФорму(ИмяОбъектаМетаданных);
		ИначеЕсли ФормаСписка Тогда
			Если ИмяФормы = Неопределено Тогда
				Форма = Менеджер[ИмяОбъектаМетаданных].ПолучитьФормуСписка();
			Иначе
				Форма = Менеджер[ИмяОбъектаМетаданных].ПолучитьФормуСписка(ИмяФормы);
			КонецЕсли;
		Иначе
			Если ИмяФормы = Неопределено Тогда
				Форма = Менеджер[ИмяОбъектаМетаданных].ПолучитьФорму();
			Иначе
				Форма = Менеджер[ИмяОбъектаМетаданных].ПолучитьФорму(ИмяФормы);
			КонецЕсли;
		КонецЕсли;	
		Форма.Открыть();
		
	Исключение
		ОбработкаИсключения(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры // ОткрытьДокумент()



Процедура ФормаОбработкиПисьмоВТехподдержку(Элемент, ФормаОбработки) Экспорт
	
	УправлениеЭлектроннойПочтой.ОтправитьСообщениеВОтделТехническойПоддержки();
	
КонецПроцедуры

Процедура ФормаОбработкиНаписатьОтзыв(Элемент, ФормаОбработки) Экспорт
	
	РаботаСДиалогамиПереопределяемый.ПерейтиНаСтраницуОтзывОПрограмме();

КонецПроцедуры

Процедура ФормаОбработкиСайт1С(Элемент, ФормаОбработки) Экспорт
	
	РаботаСДиалогамиЗК.ПоказатьВебСтраницу("http://www.1c.ru", "Сайт фирмы 1С", "Сайт1С");
	
КонецПроцедуры

Процедура ФормаОбработкиМониторЗаконодательства(Элемент, ФормаОбработки) Экспорт
	
	РаботаСДиалогамиЗК.ПоказатьВебСтраницу("http://v8.1c.ru/lawmonitor/");
	
КонецПроцедуры

Процедура ФормаОбработкиСайтБУХру(Элемент, ФормаОбработки) Экспорт
	
	РаботаСДиалогамиЗК.ПоказатьВебСтраницу("http://www.buh.ru/");

КонецПроцедуры

Процедура ФормаОбработкиСайтИТС(Элемент, ФормаОбработки) Экспорт
	
	РаботаСДиалогамиЗК.ПоказатьВебСтраницу("http://its.1c.ru/");

КонецПроцедуры

Процедура ФормаОбработкиПоказатьСтраницуКонфигурации(Элемент, ФормаОбработки) Экспорт
	
	РаботаСДиалогамиЗК.ПоказатьВебСтраницу("");
	
КонецПроцедуры

Процедура УстановитьВидимостьЭлементовУправленияОрганизациями(ЭлементыФормы) Экспорт
	
	Если Найти(ВРег(Метаданные.Имя), "БАЗОВАЯ") > 0 Тогда
		УправлениеОрганизациямиДоступно = Ложь;
	Иначе
		ДоступностьОрганизаций = РаботаСДиалогамиЗК.ДоступностьОрганизаций();
		УправлениеОрганизациямиДоступно = ДоступностьОрганизаций.ДоступноНесколькоОрганизаций;
	КонецЕсли;
	
	ЭлементыФормы.ПанельНашиОрганизации.Видимость = УправлениеОрганизациямиДоступно;
	ЭлементыФормы.УстановитьОсновнуюОрганизацию.Видимость = УправлениеОрганизациямиДоступно;
	
КонецПроцедуры


// Показывает веб-страницы в обработке Обозреватель  
//
// Параметры
//  АдресСтраницы  – Строка – адрес просматриваемой страницы
//  ЗаголовокОкна  – Строка – заголовок окна обработки
//
// Если передается пустая строка АдресСтраницы, то в обработке Обозреватель 
// просматривается веб-страница конфигурации
// 
Процедура ПоказатьВебСтраницу(АдресСтраницы, ЗаголовокОкна = Неопределено) Экспорт 
	
	Попытка
	
		Обозреватель = Обработки.Обозреватель.Создать();
		
		Форма = Обозреватель.ПолучитьФорму();
		Если ЗначениеЗаполнено(ЗаголовокОкна) Тогда
			Форма.Заголовок = ЗаголовокОкна;
		КонецЕсли;
		Форма.СтартоваяСтраница = АдресСтраницы;
		
		Форма.Открыть();
		
	Исключение
		
		РабочийСтол.ОбработкаИсключения(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры

Процедура НачатьПоискНаИТС(СтрокаПоискаИТС) Экспорт
	
	Если ПустаяСтрока(СтрокаПоискаИТС) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПоказатьВебСтраницу("http://its.1c.ru/db/alldb#search:" + СтрокаПоискаИТС, НСтр("ru='Поиск по ИТС'"));
	
КонецПроцедуры

// Формирует список ссылок для указанной страницы
//
// Параметры
//  ИмяСтраницы  - Строка - имя выбранной страницы формы
//
Процедура ЗаполнитьТаблицуСсылок(ТабличноеПолеСписокСсылокНаИТС, ИмяСтраницы, ФормаОбработки) Экспорт

	ТабличноеПолеСписокСсылокНаИТС.Очистить();
	
	СтруктураОтбора = Новый Структура("ИмяРаздела", ИмяСтраницы);
	
	НайденныеСсылки = ФормаОбработки.СписокСсылокНаСайтеИТС.НайтиСтроки(СтруктураОтбора);
	
	ТабличноеПолеСписокСсылокНаИТС = ФормаОбработки.СписокСсылокНаСайтеИТС.Скопировать(НайденныеСсылки);
	
	ТабличноеПолеСписокСсылокНаИТС.Сортировать("Порядок");
	
КонецПроцедуры // ЗаполнитьТаблицуСсылок()

// Читает список ссылок в глобальную переменную модуля
//
Процедура ПрочитатьСсылки(ФормаОбработки) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
                      |	СсылкиНаСайтеИТС.ИмяРаздела,
                      |	СсылкиНаСайтеИТС.ПредставлениеСсылки,
                      |	СсылкиНаСайтеИТС.Гиперссылка,
                      |	СсылкиНаСайтеИТС.Порядок
                      |ИЗ
                      |	РегистрСведений.СсылкиНаСайтеИТС КАК СсылкиНаСайтеИТС
                      |
                      |УПОРЯДОЧИТЬ ПО
                      |	СсылкиНаСайтеИТС.Порядок");

	ФормаОбработки.СписокСсылокНаСайтеИТС = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

// Обработчик события перед открытием формы рабочего стола
//
// Параметры
//  ФормаОбработки  - Форма рабочего стола
//
Процедура ФормаОбработкиПередОткрытием(ФормаОбработки) Экспорт
	
	ПрочитатьСсылки(ФормаОбработки);

	ЗаполнитьТаблицуСсылок(ФормаОбработки.ТабличноеПолеСписокСсылокНаИТС, ВРег(ФормаОбработки.ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя), ФормаОбработки);
	
	// Восстановим режим свертки панели ИТС предыдущего сеанса работы
	// Если ранее значение не сохранялось, значит свертки нет - панель отображается
	РежимСверткиПанелиИТС = ВосстановитьЗначение("РабочийСтолРежимСверткиПанелиИТС");
	
	ОбработатьВидимостьПанелиИТС(ФормаОбработки, ?(РежимСверткиПанелиИТС = Неопределено, РежимСверткиЭлементаУправления.Нет, РежимСверткиПанелиИТС));

КонецПроцедуры // РабочийСтолПриОткрытии()

// Обработчик события перед закрытием формы рабочего стола
//
// Параметры
//  ФормаОбработки  - Форма рабочего стола
//
Процедура ФормаОбработкиПередЗакрытием(ФормаОбработки) Экспорт

	// Сохраним режим свертки панели ИТС, для установки режима при последующем открытии формы
	СохранитьЗначение("РабочийСтолРежимСверткиПанелиИТС", ФормаОбработки.ЭлементыФормы.ПанельИТС.Свертка);

КонецПроцедуры // ФормаОбработкиПередЗакрытием()

// Обрабатывает отображение / скрытие панели ИТС
//
// Параметры
//  ФормаОбработки           - Форма рабочего стола
//  НовоеСостояниеСвертки    - <СистемноеПеречисление.РежимСверткиЭлементаУправления> - режим свертки,
//								который необходимо установить, если параметр не передан - это означает,
//								что нужно установить режим противоположный текущему.
//
Процедура ОбработатьВидимостьПанелиИТС(ФормаОбработки, НовоеСостояниеСвертки = Неопределено) Экспорт

	Если НовоеСостояниеСвертки = Неопределено Тогда
	
		Если ФормаОбработки.ЭлементыФормы.ПанельИТС.Свертка = РежимСверткиЭлементаУправления.Нет Тогда
	
			НовоеСостояниеСвертки = РежимСверткиЭлементаУправления.Право;
			
		Иначе
	
			НовоеСостояниеСвертки = РежимСверткиЭлементаУправления.Нет;
	
		КонецЕсли; 
		
	КонецЕсли; 
	
	ФормаОбработки.МатериалыСайтаИТС = (НовоеСостояниеСвертки = РежимСверткиЭлементаУправления.Нет);
	
	ФормаОбработки.ЭлементыФормы.ПанельИТС.Свертка = НовоеСостояниеСвертки;

КонецПроцедуры // ОбработатьВидимостьПанелиИТС()

//Показывает форму с предложением подключения 1С-Отчетность
Процедура ПоказатьФормуПредложениеОформитьЗаявлениеНаПодключение() Экспорт
	РегламентированнаяОтчетность.ПоказатьФормуПредложениеОформитьЗаявлениеНаПодключение();	
КонецПроцедуры	

#КонецЕсли
