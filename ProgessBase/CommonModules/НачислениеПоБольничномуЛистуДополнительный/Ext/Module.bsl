
Процедура НастроитьВидимостьКолонки(КолонкаТабличногоПоля, НоваяВидимость, УчитыватьНастройкиПользователя) Экспорт

	Если УчитыватьНастройкиПользователя Тогда
		Если КолонкаТабличногоПоля.Видимость И Не НоваяВидимость Тогда
			КолонкаТабличногоПоля.Видимость = Ложь;
		КонецЕсли;
	Иначе
		КолонкаТабличногоПоля.Видимость = НоваяВидимость;
	КонецЕсли;
	
	КолонкаТабличногоПоля.ИзменятьВидимость = НоваяВидимость;
	
КонецПроцедуры

Функция ОпределитьПереходныйПериод(ДатаНачалаСобытия, ДатаНачала, ДатаОкончания, ПричинаНетрудоспособности) Экспорт 
	мДатаЗакона255ФЗ = ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006();
	Возврат ЗначениеЗаполнено(ДатаНачалаСобытия) И ДатаНачалаСобытия < мДатаЗакона255ФЗ И (ДатаОкончания >= мДатаЗакона255ФЗ Или ДатаНачала >= мДатаЗакона255ФЗ) И ПричинаНетрудоспособности <> Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве
КонецФункции

Функция ПреобразоватьПричинуНетрудоспособности2006года(ПричинаНетрудоспособности) Экспорт 
	Если ПричинаНетрудоспособности.Пустая() 
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание 
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком 
		Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
		Возврат ПричинаНетрудоспособности
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаВБыту Тогда
		Возврат Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПособиеБезЗаболевания Тогда
		Возврат Перечисления.ПричиныНетрудоспособности.Карантин
	КонецЕсли;
КонецФункции

Функция КорректноеСочетаниеСчетовНУ(СчетДт,НаименованиеСчетДт, СчетКт, СчетДтНУ, СчетКтНУ, ЭтоЕНВД, Сообщение) 
	
	Сообщение = "";
	
	Если СчетДтНУ.Пустая() Тогда
		Если (СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда или СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоВыплатеДоходов)
			и Не ЭтоЕНВД Тогда
			Сообщение = "Не указан счет налогового учета!";
		КонецЕсли;
		Если НЕ СчетКтНУ.Пустая() Тогда
			Сообщение = Сообщение + ?(Сообщение = "","",Символы.ПС) + "Указан счет кредита налогового учета, но не указан счет дебета налогового учета!";
		КонецЕсли;
	Иначе
		Если (СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда или СчетДт = ПланыСчетов.Хозрасчетный.РасчетыПоВыплатеДоходов) Тогда
			Сообщение = "Проводки в дебет "+НаименованиеСчетДт +" не должны отражаться в налоговом учете!";
		ИначеЕсли ЭтоЕНВД Тогда
			Сообщение = "Проводки по видам деятельности, облагаемым ЕНВД не должны отражаться в налоговом учете!";
		КонецЕсли;
		
		Если СчетКтНУ.Пустая() Тогда
			Сообщение = Сообщение + ?(Сообщение = "","",Символы.ПС) + "Указан счет дебета налогового учета, но не указан счет кредита налогового учета!";
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат ПустаяСтрока(Сообщение)
	
КонецФункции // КорректноеСочетаниеСчетовНУ()

// Получает значение субконто в том случае, если заданы правила его переопределения
//
// Параметры
//  Субконто - начальное значение субконто
//  ПараметрыПолученияСубконто - соответсвие, 
//                              ключ соответсвия - тип, 
//                              значение - параметры, которые помогают преобразовывать 
//                              субконто соотв. типа из одного значения в другое
//
// Возвращаемое значение:
//   Субконто
// Если для субконто некоторого типа не задаы параметры преобразования, то его 
// значение не изменяется
//
Функция ПолучитьСубконто(Субконто, ПараметрыПолученияСубконто) Экспорт 
	
    Параметры = ПараметрыПолученияСубконто[ТипЗнч(Субконто)];
    Если Параметры = НеОпределено Тогда
        // для субконто этого типа не заданы парамтры переопределения
        Возврат Субконто;
    КонецЕсли;
    // для статьи затрат
    Если ТипЗнч(Субконто) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
        ВидСтатьиЗатрат = Параметры.ВидСтатьиЗатрат;
        ДополнительныеСтатьиЗатрат = Параметры.ДополнительныеСтатьиЗатрат;
        КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Субконто);
        Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
        Если Строки.Количество() = 0 Тогда
            КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Справочники.СтатьиЗатрат.ПустаяСсылка());
            Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
            Если Строки.Количество() = 0 Тогда
                Возврат Субконто;
            Иначе
                Возврат Строки[0].СтатьяЗатрат;
            КонецЕсли;
        Иначе
            Возврат Строки[0].СтатьяЗатрат;
        КонецЕсли;
    // для получения субконто другого типа - дописываем ИначеЕсли...
    Иначе
        Возврат Субконто;
    КонецЕсли;
    
КонецФункции

// Проверяет правильность заполнения реквизитов в строке ТЧ "ОтраженияВУчете" документа.
// Если какой-то из реквизитов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
Процедура ПроверитьЗаполнениеСтрокиОтраженияВУчете(ВыборкаПоДоходам, Отказ, ПроверятьСочетание, Заголовок = "") Экспорт 

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоДоходам.НомерСтроки) + """ табл. части ""Проводки и данные для ЕСН"": ";
	
	// Дата начала
	Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.ПериодДействияНачало) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала периода начисления!", Отказ, Заголовок);
	Иначе
		// Дата окончания
		Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.ПериодДействияКонец) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания периода начисления!", Отказ, Заголовок);
		Иначе
			Если ВыборкаПоДоходам.ПериодДействияКонец < ВыборкаПоДоходам.ПериодДействияНачало Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата окончания периода начисления не должна быть меньше даты начала!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.СчетДт) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан счет дебета!", Отказ, Заголовок);
		ПроверятьСочетание = Ложь;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.СчетКт) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан счет кредита!", Отказ, Заголовок);
		ПроверятьСочетание = Ложь;
	КонецЕсли;

	Сообщение = "";
	Если ПроверятьСочетание И ВыборкаПоДоходам.ОтражаетсяНУ И Не КорректноеСочетаниеСчетовНУ(ВыборкаПоДоходам.СчетДт,ВыборкаПоДоходам.НаименованиеСчетДт,ВыборкаПоДоходам.СчетКт,ВыборкаПоДоходам.СчетДтНУ, ВыборкаПоДоходам.СчетКтНУ, ВыборкаПоДоходам.ЭтоЕНВД, Сообщение) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + Сообщение, Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры:
//	ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//	СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//											   накопления по которым надо проводить документ
//	СтруктураПараметров						 - структура параметров проведения.
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ДокументОбъект, ВыборкаПоШапкеДокумента, ВыборкаПоТЧ) Экспорт 

	Движения = ДокументОбъект.Движения;

	Если Не ВыборкаПоТЧ.ЯвляетсяДоходомВНатуральнойФорме Тогда
		
		Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.Добавить();
		
		// Свойства
		Движение.Период					= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
		
		// Измерения
		Движение.Организация			= ВыборкаПоШапкеДокумента.ОбособленноеПодразделение;
		Движение.ФизЛицо				= ВыборкаПоШапкеДокумента.ФизЛицо;
		Движение.ПериодВзаиморасчетов	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Ресурсы
		Движение.СуммаВзаиморасчетов	= ВыборкаПоТЧ.Результат;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления

// Добавляет движение в наборы записей БУОсновныеНачисления
//
Процедура ДобавитьСтрокуОтраженияВУчете(ДокументОбъект, ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, СтруктураПараметровПеременныхВеденияУчета) Экспорт 
	
	ЗаполнятьДанныеНУ = СтруктураПараметровПеременныхВеденияУчета.ЗаполнятьДанныеНУ;
	ЗаполнятьСчетаНУ  = СтруктураПараметровПеременныхВеденияУчета.ЗаполнятьСчетаНУ;
	УчетПоПодразделениямНаСчетах = СтруктураПараметровПеременныхВеденияУчета.УчетПоПодразделениямНаСчетах;
	
	СтрокаСвойствИзДокумента = "ПериодРегистрации,Сотрудник,ФизЛицо,Организация,ОбособленноеПодразделение,"
							+ "ГрафикРаботы,ВидУчетаВремени,ВидРасчета";
							
	СтрокаСвойствИзСтрокиДокумента = "ПериодДействияНачало,ПериодДействияКонец,Результат," 
							+ "СчетДт,СчетКт,СпособРаспределенияЗатрат,ОтражениеВУСН,"
							+ "СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,Сторно";
							
	Если ЗаполнятьДанныеНУ Тогда
		Если ЗаполнятьСчетаНУ Тогда
			СтрокаСвойствИзСтрокиДокумента = СтрокаСвойствИзСтрокиДокумента
				+ ",СчетДтНУ,СчетКтНУ,"
				+ "СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3";
			Иначе
				СтрокаСвойствИзСтрокиДокумента = СтрокаСвойствИзСтрокиДокумента
				+ ",СуммаНУ,СуммаПР,СуммаВР,"
				+ "ВидНачисленийОплатыТрудаПоСтатье255НК";
		КонецЕсли;	
	КонецЕсли;
	
	Если УчетПоПодразделениямНаСчетах Тогда
		СтрокаСвойствИзСтрокиДокумента = СтрокаСвойствИзСтрокиДокумента + ",ПодразделениеДт,ПодразделениеКт";
	КонецЕсли;
	
	Движения = ДокументОбъект.Движения;

	Движение = Движения.БУОсновныеНачисления.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,СтрокаСвойствИзДокумента);
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоСтрокамДокумента,СтрокаСвойствИзСтрокиДокумента);
	Движение.ДокументОснование = ДокументОбъект.Ссылка;
		
	СтрокаСвойствИзСтрокиДокумента = "ПериодДействияНачало,ПериодДействияКонец,Результат," 
							+ "КодДоходаЕСН,ОблагаетсяЕНВД,Сторно";
							
	Движение = Движения.ЕСНОсновныеНачисления.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,СтрокаСвойствИзДокумента);
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоСтрокамДокумента,СтрокаСвойствИзСтрокиДокумента);
	Движение.ДокументОснование = ДокументОбъект.Ссылка;
		
КонецПроцедуры  // ДобавитьСтрокуОтраженияВУчете

// создает строку таблицы данных учета
// 
// Параметры:
//	ДанныеУчета - спозиционированная выборка по результату запроса
//	НаборЗаписей
//
Функция СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей) Экспорт 
	
	СтрокаДанных = НаборЗаписей.Добавить();
	
	ЗаполнитьЗначенияСвойств(СтрокаДанных, ДанныеУчета, "Результат, ДополнительныйРезультат, ПериодДействияНачало, ПериодДействияКонец, Сторно");
		                                                    
	Возврат СтрокаДанных;
	
КонецФункции // СоздатьСтрокуДвижений()

// Формирует запрос по таблице "ОтражениеВУчете" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоОтражениеВУчете(ВыборкаПоШапкеДокумента) Экспорт 

	// готовим список счетов
	СчетаИсключения = Новый Массив();
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы);
	
	ТекстСчетаИсключения = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)";
	
	Запрос = Новый Запрос(ТекстСчетаИсключения);
	Запрос.УстановитьПараметр("СчетаИсключения", СчетаИсключения);
	СчетаИсключения = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("СчетаИсключения", СчетаИсключения);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия", ВыборкаПоШапкеДокумента.ДатаНачалаСобытия);


	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтрокаОтраженияВУчете.НомерСтроки,
	|	СтрокаОтраженияВУчете.Ссылка.Сотрудник,
	|	СтрокаОтраженияВУчете.Ссылка.Сотрудник.Физлицо КАК Физлицо,
	|	&ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|	ВЫБОР
	|		КОГДА СтрокаОтраженияВУчете.СчетДт В (&СчетаИсключения)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтражаетсяНУ,
	|	ВЫБОР
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоЕНВД,
	|	СтрокаОтраженияВУчете.Результат,
	|	СтрокаОтраженияВУчете.СчетДт,
	|	СтрокаОтраженияВУчете.СчетДт.Наименование КАК НаименованиеСчетДт,
	|	СтрокаОтраженияВУчете.СубконтоДт1,
	|	СтрокаОтраженияВУчете.СубконтоДт2,
	|	СтрокаОтраженияВУчете.СубконтоДт3,
	|	СтрокаОтраженияВУчете.СчетКт,
	|	СтрокаОтраженияВУчете.СубконтоКт1,
	|	СтрокаОтраженияВУчете.СубконтоКт2,
	|	СтрокаОтраженияВУчете.СубконтоКт3,
	|	СтрокаОтраженияВУчете.СчетДтНУ,
	|	СтрокаОтраженияВУчете.СубконтоДтНУ1,
	|	СтрокаОтраженияВУчете.СубконтоДтНУ2,
	|	СтрокаОтраженияВУчете.СубконтоДтНУ3,
	|	СтрокаОтраженияВУчете.СчетКтНУ,
	|	СтрокаОтраженияВУчете.СубконтоКтНУ1,
	|	СтрокаОтраженияВУчете.СубконтоКтНУ2,
	|	СтрокаОтраженияВУчете.СубконтоКтНУ3,
	|	СтрокаОтраженияВУчете.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|	СтрокаОтраженияВУчете.ОтражениеВУСН КАК ОтражениеВУСН,
	|	СтрокаОтраженияВУчете.ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА СтрокаОтраженияВУчете.ПериодДействияКонец <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА КОНЕЦПЕРИОДА(СтрокаОтраженияВУчете.ПериодДействияКонец, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	СтрокаОтраженияВУчете.КодДоходаЕСН,
	|	СтрокаОтраженияВУчете.ОблагаетсяЕНВД,
	|	СтрокаОтраженияВУчете.Сторно,
	|	СтрокаОтраженияВУчете.ПодразделениеДт,
	|	СтрокаОтраженияВУчете.ПодразделениеКт,
	|	СтрокаОтраженияВУчете.СуммаНУ,
	|	СтрокаОтраженияВУчете.СуммаПР,
	|	СтрокаОтраженияВУчете.СуммаВР,
	|	СтрокаОтраженияВУчете.ВидНачисленийОплатыТрудаПоСтатье255НК
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.ОтражениеНачислений КАК СтрокаОтраженияВУчете
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
	|		ПО СтрокаОтраженияВУчете.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
	|ГДЕ
	|	СтрокаОтраженияВУчете.Ссылка = &ДокументСсылка
	|	И СтрокаОтраженияВУчете.Результат <> 0";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоОтражениеВУчете()

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоПособияСоциальномуСтрахованию(ВыборкаПоШапкеДокумента) Экспорт 
	
	Ссылка								= ВыборкаПоШапкеДокумента.Ссылка;
	ЯвляетсяПродолжениемБолезни			= ВыборкаПоШапкеДокумента.ЯвляетсяПродолжениемБолезни;
	ПерерассчитываемыйДокумент			= ВыборкаПоШапкеДокумента.ПерерассчитываемыйДокумент;
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("НовыйСтраховойСлучай", ?(Не ЯвляетсяПродолжениемБолезни и ПерерассчитываемыйДокумент.Пустая(),1,0));
	
	Если ВыборкаПоШапкеДокумента.ПериодРегистрации < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Тогда
		
		мДатаЗакона255ФЗ = ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006();
		Запрос.УстановитьПараметр("ДатаЗакона255ФЗ" , НачалоМесяца(мДатаЗакона255ФЗ));
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСНОсновныеНачисления.ПериодРегистрации КАК Период,
		|	ЕСНОсновныеНачисления.ОбособленноеПодразделение КАК Организация,
		|	ВЫБОР
		|		КОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай))
		|			ТОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования
		|		КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
		|			ТОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
		|	КОНЕЦ КАК ВидПособияСоциальногоСтрахования,
		|	ЕСНОсновныеНачисления.ОблагаетсяЕНВД,
		|	ВЫБОР
		|		КОГДА ЕСНОсновныеНачисления.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
		|	КОНЕЦ КАК ВидЗанятости,
		|	&НовыйСтраховойСлучай КАК СтраховыеСлучаи,
		|	СУММА(ЕСТЬNULL(ЕСНФактическийПериодДействия.ОплаченныеДни, ВЫБОР
		|				КОГДА ЕСНОсновныеНачисления.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
		|					ТОГДА ЕСНОсновныеНачисленияДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия
		|				ИНАЧЕ ЕСНОсновныеНачисленияДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия
		|			КОНЕЦ) * ВЫБОР
		|			КОГДА ЕСНОсновныеНачисления.Сторно
		|				ТОГДА -1
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК ОплаченныеДни,
		|	СУММА(ЕСНОсновныеНачисления.Результат) КАК СуммаВсего,
		|	ЕСНОсновныеНачисления.Сотрудник,
		|	ЕСНОсновныеНачисления.ДокументОснование
		|ИЗ
		|	РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ЕСНОсновныеНачисления.ДанныеГрафика(
		|				Регистратор = &ДокументСсылка
		|					И (НЕ ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)))) КАК ЕСНОсновныеНачисленияДанныеГрафика
		|		ПО ЕСНОсновныеНачисления.Регистратор = ЕСНОсновныеНачисленияДанныеГрафика.Регистратор
		|			И ЕСНОсновныеНачисления.НомерСтроки = ЕСНОсновныеНачисленияДанныеГрафика.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЕСНФактическийПериодДействия.Регистратор КАК Регистратор,
		|			ЕСНФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
		|			СУММА(РАЗНОСТЬДАТ(ЕСНФактическийПериодДействия.ПериодДействияНачало, ЕСНФактическийПериодДействия.ПериодДействияКонец, ДЕНЬ) + 1) КАК ОплаченныеДни
		|		ИЗ
		|			РегистрРасчета.ЕСНОсновныеНачисления.ФактическийПериодДействия(
		|					Регистратор = &ДокументСсылка
		|						И ПериодДействия >= &ДатаЗакона255ФЗ
		|						И ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай))) КАК ЕСНФактическийПериодДействия
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЕСНФактическийПериодДействия.Регистратор,
		|			ЕСНФактическийПериодДействия.НомерСтроки) КАК ЕСНФактическийПериодДействия
		|		ПО ЕСНОсновныеНачисления.НомерСтроки = ЕСНФактическийПериодДействия.НомерСтроки
		|			И ЕСНОсновныеНачисления.Регистратор = ЕСНФактическийПериодДействия.Регистратор
		|ГДЕ
		|	ЕСНОсновныеНачисления.Регистратор = &ДокументСсылка
		|	И ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСНОсновныеНачисления.ПериодРегистрации,
		|	ЕСНОсновныеНачисления.ОбособленноеПодразделение,
		|	ЕСНОсновныеНачисления.ОблагаетсяЕНВД,
		|	ЕСНОсновныеНачисления.Сотрудник,
		|	ЕСНОсновныеНачисления.ДокументОснование,
		|	ВЫБОР
		|		КОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай))
		|			ТОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования
		|		КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
		|			ТОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ЕСНОсновныеНачисления.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
		|	КОНЕЦ";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСНФактическийПериодДействия.Регистратор КАК Регистратор,
		|	ЕСНФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
		|	СУММА(РАЗНОСТЬДАТ(ЕСНФактическийПериодДействия.ПериодДействияНачало, ЕСНФактическийПериодДействия.ПериодДействияКонец, ДЕНЬ) + 1) КАК ОплаченныеДни
		|ПОМЕСТИТЬ ВТФПД
		|ИЗ
		|	РегистрРасчета.ЕСНОсновныеНачисления.ФактическийПериодДействия(
		|			Регистратор = &ДокументСсылка
		|				И ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай))) КАК ЕСНФактическийПериодДействия
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСНФактическийПериодДействия.Регистратор,
		|	ЕСНФактическийПериодДействия.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(НачислениеПоБольничномуЛистуОтражениеНачислений.ДополнительныйРезультат) КАК ДополнительныйРезультат,
		|	НачислениеПоБольничномуЛистуОтражениеНачислений.Ссылка.Сотрудник КАК Сотрудник,
		|	НачислениеПоБольничномуЛистуОтражениеНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	НачислениеПоБольничномуЛистуОтражениеНачислений.ПериодДействияНачало,
		|	КОНЕЦПЕРИОДА(НачислениеПоБольничномуЛистуОтражениеНачислений.ПериодДействияКонец, ДЕНЬ) КАК ПериодДействияКонец
		|ПОМЕСТИТЬ ВТОтражениеИзДокумента
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту.ОтражениеНачислений КАК НачислениеПоБольничномуЛистуОтражениеНачислений
		|ГДЕ
		|	НачислениеПоБольничномуЛистуОтражениеНачислений.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	НачислениеПоБольничномуЛистуОтражениеНачислений.Ссылка.Сотрудник,
		|	НачислениеПоБольничномуЛистуОтражениеНачислений.ОблагаетсяЕНВД,
		|	НачислениеПоБольничномуЛистуОтражениеНачислений.ПериодДействияНачало,
		|	КОНЕЦПЕРИОДА(НачислениеПоБольничномуЛистуОтражениеНачислений.ПериодДействияКонец, ДЕНЬ)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ОблагаетсяЕНВД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСНОсновныеНачисления.ПериодРегистрации КАК Период,
		|	ЕСНОсновныеНачисления.ОбособленноеПодразделение КАК Организация,
		|	ВЫБОР
		|		КОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай))
		|			ТОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования
		|		КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС)
		|			ТОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
		|	КОНЕЦ КАК ВидПособияСоциальногоСтрахования,
		|	ЕСНОсновныеНачисления.ОблагаетсяЕНВД,
		|	ВЫБОР
		|		КОГДА ЕСНОсновныеНачисления.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
		|	КОНЕЦ КАК ВидЗанятости,
		|	&НовыйСтраховойСлучай КАК СтраховыеСлучаи,
		|	СУММА(ЕСТЬNULL(ЕСНФактическийПериодДействия.ОплаченныеДни, 0) * ВЫБОР
		|			КОГДА ЕСНОсновныеНачисления.Сторно
		|				ТОГДА -1
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК ОплаченныеДни,
		|	СУММА(ЕСНОсновныеНачисления.Результат) КАК СуммаВсего,
		|	СУММА(ОтражениеИзДокумента.ДополнительныйРезультат) КАК СуммаСверхНорм,
		|	ЕСНОсновныеНачисления.Сотрудник,
		|	ЕСНОсновныеНачисления.ДокументОснование
		|ИЗ
		|	РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФПД КАК ЕСНФактическийПериодДействия
		|		ПО ЕСНОсновныеНачисления.НомерСтроки = ЕСНФактическийПериодДействия.НомерСтроки
		|			И ЕСНОсновныеНачисления.Регистратор = ЕСНФактическийПериодДействия.Регистратор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтражениеИзДокумента КАК ОтражениеИзДокумента
		|		ПО ЕСНОсновныеНачисления.Сотрудник = ОтражениеИзДокумента.Сотрудник
		|			И ЕСНОсновныеНачисления.ОблагаетсяЕНВД = ОтражениеИзДокумента.ОблагаетсяЕНВД
		|			И ЕСНОсновныеНачисления.ПериодДействияНачало = ОтражениеИзДокумента.ПериодДействияНачало
		|			И ЕСНОсновныеНачисления.ПериодДействияКонец = ОтражениеИзДокумента.ПериодДействияКонец
		|ГДЕ
		|	ЕСНОсновныеНачисления.Регистратор = &ДокументСсылка
		|	И ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСНОсновныеНачисления.ПериодРегистрации,
		|	ЕСНОсновныеНачисления.ОбособленноеПодразделение,
		|	ЕСНОсновныеНачисления.ОблагаетсяЕНВД,
		|	ЕСНОсновныеНачисления.Сотрудник,
		|	ЕСНОсновныеНачисления.ДокументОснование,
		|	ВЫБОР
		|		КОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай))
		|			ТОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования
		|		КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС)
		|			ТОГДА ЕСНОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ЕСНОсновныеНачисления.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
		|	КОНЕЦ";
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
		
КонецФункции

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Формирует оборот листка нетрудоспособности
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   табличный документ
//
Функция ПечатьОборотаБольничногоВПереходныйПериод2007(Ссылка,Организация,Сотрудник,ПериодРегистрации,ДатаСобытия,ПричинаНетрудоспособности,ВидРасчета,ДатаНачала,ДатаОкончания,ДатаНарушенияРежима,ПроцентОплаты,ПроцентОплатыПереходногоПериода,ОграничениеПособия,ОграничениеПособияПереходногоПериода) Экспорт 
		
	мДлинаСуток		 = 86400;		// в секундах
	мДатаЗакона180ФЗ = '20060101';	// 1 января 2006 года
	мДатаЗакона255ФЗ = ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006();
	
	ДанныеОДокументеТекст = 
	"ВЫБРАТЬ
	|	Документ.Ссылка,
	|	Документ.Сотрудник.Физлицо КАК Физлицо,
	|	Документ.Организация,
	|	Документ.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	Документ.ДатаНачала,
	|	Документ.ДатаОкончания,
	|	Документ.НомерВходящегоДокумента,
	|	Документ.СерияВходящегоДокумента,
	|	Документ.ПроцентОплаты,
	|	ВЫБОР
	|		КОГДА Документ.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|			ТОГДА ""по беременности и родам""
	|		ИНАЧЕ ""по временной нетрудоспособности""
	|	КОНЕЦ КАК ПричинаНетрудоспособности,
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, Документ.Сотрудник.Физлицо.Наименование) КАК ФИОРаботника,
	|	ВЫБОР
	|		КОГДА Документ.Сотрудник.Физлицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|			ТОГДА ""Не работала""
	|		ИНАЧЕ ""Не работал""
	|	КОНЕЦ КАК СловаНеРаботал,
	|	ВЫБОР
	|		КОГДА ПараметрыВидаРасчета.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|			ТОГДА ПараметрыВидаРасчета.ПериодРасчетаСреднегоЗаработка
	|		ИНАЧЕ 12
	|	КОНЕЦ КАК ПериодРасчетаСреднегоЗаработка,
	|	Документ.Сотрудник.Код КАК ТабельныйНомер,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.Наименование
	|	КОНЕЦ КАК ПодразделениеНаименование,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьНаименование,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫБОР
	|					КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|							И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.СуммированныйУчетРабочегоВремени
	|					ИНАЧЕ РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СуммированныйУчетРабочегоВремени
	|				КОНЕЦ, ЛОЖЬ)
	|			ТОГДА ""часов""
	|		ИНАЧЕ ""дней""
	|	КОНЕЦ КАК СловаДней,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ГрафикРаботы
	|	КОНЕЦ КАК ГрафикРаботы,
	|	Документ.ПроцентОплатыПереходногоПериода
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ПараметрыВидаРасчета
	|		ПО (ПараметрыВидаРасчета.Ссылка = Документ.ВидРасчета)
	|ГДЕ
	|	Документ.Ссылка = &ДокументСсылка";
	
	ВыходныеДниТекст =
	"ВЫБРАТЬ
	|	ГрафикиРаботыПоВидамВремени.Дата
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|	И ГрафикиРаботыПоВидамВремени.ОсновноеЗначение = 0
	|	И ГрафикиРаботыПоВидамВремени.ГрафикРаботы = &ГрафикРаботы";
	
	// РазмерММОТ
	//	Поля:
	//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
	//		Размер - размер ММОТ
	//	Описание:
	//		получает размер ММОТ для каждой строки начислений
	//
	РазмерММОТТекст = 
	"ВЫБРАТЬ
	|	ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
	|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
	|ИЗ
	|	(ВЫБРАТЬ
	|		Основной.НомерСтроки КАК НомерСтроки,
	|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|			ПО МинимальнаяОплатаТрудаРФ.Период <= Основной.ПериодДействияНачало
	|	ГДЕ
	|		Основной.Регистратор = &ДокументСсылка
	|		И Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Основной.НомерСтроки) КАК ДатыАктуальностиММОТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|		ПО МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности";
	
	// РазмерОграниченияПособия
	//	Поля:
	//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
	//		Размер - размер ограничения
	//	Описание:
	//		получает размер ограничения пособия для каждой строки начислений
	//
	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
		РазмерОграниченияПособияТекст = 
		"ВЫБРАТЬ
		|	ДатыАктуальности.НомерСтроки КАК ОсновнойНомерСтроки,
		|	РазмерОграниченияПособияПоНетрудоспособности.РазмерПоБеременности КАК Размер
		|ИЗ
		|	(ВЫБРАТЬ
		|		Основной.НомерСтроки КАК НомерСтроки,
		|		МАКСИМУМ(РазмерОграниченияПособияПоНетрудоспособности.Период) КАК ДатаАктуальности
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерОграниченияПособияПоНетрудоспособности КАК РазмерОграниченияПособияПоНетрудоспособности
		|			ПО РазмерОграниченияПособияПоНетрудоспособности.Период <= Основной.ПериодДействияНачало
		|	ГДЕ
		|		Основной.Регистратор = &ДокументСсылка
		|		И Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Основной.НомерСтроки) КАК ДатыАктуальности
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерОграниченияПособияПоНетрудоспособности КАК РазмерОграниченияПособияПоНетрудоспособности
		|		ПО РазмерОграниченияПособияПоНетрудоспособности.Период = ДатыАктуальности.ДатаАктуальности";
	Иначе
		РазмерОграниченияПособияТекст = 
		"ВЫБРАТЬ
		|	ДатыАктуальности.НомерСтроки КАК ОсновнойНомерСтроки,
		|	РазмерОграниченияПособияПоНетрудоспособности.Размер КАК Размер
		|ИЗ
		|	(ВЫБРАТЬ
		|		Основной.НомерСтроки КАК НомерСтроки,
		|		МАКСИМУМ(РазмерОграниченияПособияПоНетрудоспособности.Период) КАК ДатаАктуальности
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерОграниченияПособияПоНетрудоспособности КАК РазмерОграниченияПособияПоНетрудоспособности
		|			ПО РазмерОграниченияПособияПоНетрудоспособности.Период <= Основной.ПериодДействияНачало
		|	ГДЕ
		|		Основной.Регистратор = &ДокументСсылка
		|		И Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Основной.НомерСтроки) КАК ДатыАктуальности
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерОграниченияПособияПоНетрудоспособности КАК РазмерОграниченияПособияПоНетрудоспособности
		|		ПО РазмерОграниченияПособияПоНетрудоспособности.Период = ДатыАктуальности.ДатаАктуальности";
	КонецЕсли;
	
	СводныеИндивидуальныеГрафикиТекст = 
	"ВЫБРАТЬ
	|	Основной.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|			ТОГДА СводныеИндивидуальныеГрафики.Дней
	|		КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам)
	|			ТОГДА СводныеИндивидуальныеГрафики.Часов
	|		КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоВечернимЧасам)
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовВечерних
	|		КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоНочнымЧасам)
	|			ТОГДА СводныеИндивидуальныеГрафики.ЧасовНочных
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НормаВремени,
	|	ВЫБОР
	|		КОГДА (НАЧАЛОПЕРИОДА(Основной.ПериодДействияНачало, ДЕНЬ) > Основной.ПериодДействия
	|				ИЛИ КОНЕЦПЕРИОДА(Основной.ПериодДействияКонец, ДЕНЬ) < КОНЕЦПЕРИОДА(Основной.ПериодДействия, МЕСЯЦ))
	|				И СводныеИндивидуальныеГрафики.Дней ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаВводаИндивидуальногоГрафикаРаботы
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СводныеИндивидуальныеГрафики КАК СводныеИндивидуальныеГрафики
	|		ПО Основной.Сотрудник = СводныеИндивидуальныеГрафики.Сотрудник
	|			И СводныеИндивидуальныеГрафики.Месяц = Основной.ПериодДействия
	|ГДЕ
	|	Основной.Регистратор = &ДокументСсылка
	|	И Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)";
	
	РазмерВРубляхТекст = 
	"ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1 = 0
	|				ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1
	|			КОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1 = 50
	|				ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1
	|			ИНАЧЕ &ПроцентОплаты
	|		КОНЕЦ * &Средний / 100 КАК ЧИСЛО(15, 2))";
	
	ОплачиваемоеВремяТекст = 
	"ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.НормаДней
	|		ИНАЧЕ ОсновныеНачисленияРаботниковОрганизаций.НормаЧасов
	|	КОНЕЦ";
	
	ВремяЗаМесяцТекст = 
	"ВЫБОР
	|	КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
	|		ТОГДА 0
	|	ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаВремени, ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия, 0))
	|КОНЕЦ";
	
	ОграничениеВРазмереММОТТекст = 
	"ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
	|							ТОГДА 0
	|						ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаВремени, ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия, 0))
	|					КОНЕЦ = 0
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(РазмерММОТ.Размер, 0) / ВЫБОР
	|						КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
	|							ТОГДА 0
	|						ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаВремени, ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия, 0))
	|			КОНЕЦ * ВЫБОР
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|						ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|					ИНАЧЕ 1
	|				КОНЕЦ КОНЕЦ КАК ЧИСЛО(15, 2))";
	
	ОграничениеВРазмереММОТЗаМесяцТекст = 
	"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерММОТ.Размер, 0) * ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))";
	
	ОграничениеТекст = 
	"ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
	|							ТОГДА 0
	|						ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаВремени, ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия, 0))
	|					КОНЕЦ = 0
	|						ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0) / ВЫБОР
	|						КОГДА ЕСТЬNULL(СводныеИндивидуальныеГрафики.ОшибкаВводаИндивидуальногоГрафикаРаботы, ЛОЖЬ)
	|							ТОГДА 0
	|						ИНАЧЕ ЕСТЬNULL(СводныеИндивидуальныеГрафики.НормаВремени, ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия, 0))
	|					КОНЕЦ
	|			КОНЕЦ * ВЫБОР
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|						ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2))";
	
	ОграничениеЗаМесяцТекст = 
	"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0) * ВЫБОР
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|						ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|					ИНАЧЕ 1
	|				КОНЕЦ КАК ЧИСЛО(15, 2))";
	
	
	
	РасчетПособияТекст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.НормаДней
	|		ИНАЧЕ ОсновныеНачисленияРаботниковОрганизаций.НормаЧасов
	|	КОНЕЦ КАК ОплаченоВремени,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1 = 0
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1 = 50
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1
	|		ИНАЧЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПроцентОплаты
	|	КОНЕЦ КАК РазмерВПроцентах,
	|	" + РазмерВРубляхТекст + " КАК РазмерВРублях,";
	Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
		РасчетПособияТекст = РасчетПособияТекст + "
	|	ВЫБОР
	|		КОГДА " + РазмерВРубляхТекст + " < " + ОграничениеВРазмереММОТТекст + "
	|			ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|		КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|			ТОГДА " + ОграничениеВРазмереММОТЗаМесяцТекст + "
	|		ИНАЧЕ " + ОграничениеВРазмереММОТТекст + " * " + ОплачиваемоеВремяТекст + "
	|	КОНЕЦ  КАК РасчетныйРезультат,
	|	" + ОграничениеВРазмереММОТТекст + " КАК ОграничениеПособия,"
	ИначеЕсли ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
		Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
			РасчетПособияТекст = РасчетПособияТекст + "
	|	ВЫБОР
	|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	|			ТОГДА ВЫБОР
	|					КОГДА (" + РазмерВРубляхТекст + ") < (" + ОграничениеВРазмереММОТТекст + ")
	|						ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|					КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|						ТОГДА " + ОграничениеВРазмереММОТЗаМесяцТекст + "
	|					ИНАЧЕ " + ОграничениеВРазмереММОТТекст + " * " + ОплачиваемоеВремяТекст + "
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (" + РазмерВРубляхТекст + ") < (" + ОграничениеТекст + ")
	|					ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|				КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|					ТОГДА " + ОграничениеЗаМесяцТекст + "
	|				ИНАЧЕ " + ОграничениеТекст + " * " + ОплачиваемоеВремяТекст + "
	|			КОНЕЦ
	|	КОНЕЦ КАК РасчетныйРезультат,
	|	ВЫБОР
	|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
	|		ИНАЧЕ " + ОграничениеТекст + "
	|	КОНЕЦ  КАК ОграничениеПособия,"
		Иначе
			РасчетПособияТекст = РасчетПособияТекст + "
	|	ВЫБОР
	|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	|			ТОГДА ВЫБОР
	|					КОГДА (" + РазмерВРубляхТекст + ") < (" + ОграничениеВРазмереММОТТекст + ")
	|						ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|					КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|						ТОГДА " + ОграничениеВРазмереММОТЗаМесяцТекст + "
	|					ИНАЧЕ " + ОграничениеВРазмереММОТТекст + " * " + ОплачиваемоеВремяТекст + "
	|				КОНЕЦ
	|		ИНАЧЕ " + РазмерВРубляхТекст + " 
	|	КОНЕЦ КАК РасчетныйРезультат,
	|	ВЫБОР
	|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
	|		ИНАЧЕ ""-""
	|	КОНЕЦ  КАК ОграничениеПособия,"
		КонецЕсли;
	ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
		РасчетПособияТекст = РасчетПособияТекст + "
	|	ВЫБОР
	|		КОГДА (" + РазмерВРубляхТекст + ") < (" + ОграничениеТекст + ")
	|			ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|		КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|			ТОГДА " + ОграничениеЗаМесяцТекст + "
	|		ИНАЧЕ " + ОграничениеТекст + " * " + ОплачиваемоеВремяТекст + "
	|	КОНЕЦ КАК РасчетныйРезультат,
	|	" + ОграничениеТекст + " КАК ОграничениеПособия,"
	Иначе
		РасчетПособияТекст = РасчетПособияТекст + "
	|	" + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + " КАК РасчетныйРезультат,
	|	""-""  КАК ОграничениеПособия,"
	КонецЕсли;
	РасчетПособияТекст = РасчетПособияТекст + "
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
	|		Регистратор = &ДокументСсылка
	|			И ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)) КАК ДанныеГрафика
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = ДанныеГрафика.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (" + СводныеИндивидуальныеГрафикиТекст + ") КАК СводныеИндивидуальныеГрафики
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = СводныеИндивидуальныеГрафики.НомерСтроки
	|		// присоединяем данные о размере пособия
	|		ЛЕВОЕ СОЕДИНЕНИЕ (" + РазмерММОТТекст + ") КАК РазмерММОТ
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерММОТ.ОсновнойНомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (" + РазмерОграниченияПособияТекст + ") КАК РазмерОграниченияПособия
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерОграниченияПособия.ОсновнойНомерСтроки
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
	|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодДействияНачало";
	
	РазмерВРубляхТекст = 
	"ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1 = 0
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1 = 50
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1
	|		ИНАЧЕ &ПроцентОплатыПереходногоПериода
	|	КОНЕЦ * &СреднийПП / 100 КАК ЧИСЛО(15, 2))";
	
	ОграничениеВРазмереММОТТекст = 
	"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец, МЕСЯЦ)) * ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))";
	
	ОграничениеТекст = 
	"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец, МЕСЯЦ)) * ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))";
	
	ОплачиваемоеВремяТекст = 
	"КалендарныеДниПособия.ОплачиватьДнейПособия";
	
	ВремяЗаМесяцТекст = 
	"ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец, МЕСЯЦ))";
	
	РасчетПособияТекстПП = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
	|	КалендарныеДниПособия.ОплачиватьДнейПособия КАК ОплаченоВремениПП,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1 = 0
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1 = 50
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Показатель1
	|		ИНАЧЕ ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ПроцентОплатыПереходногоПериода
	|	КОНЕЦ КАК РазмерВПроцентахПП,
	|	" + РазмерВРубляхТекст + " КАК РазмерВРубляхПП,";
	Если ОграничениеПособияПереходногоПериода =Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
		РасчетПособияТекстПП = РасчетПособияТекстПП + "
	|	ВЫБОР
	|		КОГДА " + РазмерВРубляхТекст + " < " + ОграничениеВРазмереММОТТекст + "
	|			ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|		КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|			ТОГДА " + ОграничениеВРазмереММОТЗаМесяцТекст + "
	|		ИНАЧЕ " + ОграничениеВРазмереММОТТекст + " * " + ОплачиваемоеВремяТекст + "
	|	КОНЕЦ  КАК РасчетныйРезультатПП,
	|	" + ОграничениеВРазмереММОТТекст + " КАК ОграничениеПособияПП,"
	ИначеЕсли ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
		Если ОграничениеПособияПереходногоПериода =Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
			РасчетПособияТекстПП = РасчетПособияТекстПП + "
	|	ВЫБОР
	|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	|			ТОГДА ВЫБОР
	|					КОГДА (" + РазмерВРубляхТекст + ") < (" + ОграничениеВРазмереММОТТекст + ")
	|						ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|					КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|						ТОГДА " + ОграничениеВРазмереММОТЗаМесяцТекст + "
	|					ИНАЧЕ " + ОграничениеВРазмереММОТТекст + " * " + ОплачиваемоеВремяТекст + "
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (" + РазмерВРубляхТекст + ") < (" + ОграничениеТекст + ")
	|					ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|				КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|					ТОГДА " + ОграничениеЗаМесяцТекст + "
	|				ИНАЧЕ " + ОграничениеТекст + " * " + ОплачиваемоеВремяТекст + "
	|			КОНЕЦ
	|	КОНЕЦ КАК РасчетныйРезультатПП,
	|	ВЫБОР
	|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
	|		ИНАЧЕ " + ОграничениеТекст + "
	|	КОНЕЦ  КАК ОграничениеПособияПП,"
		Иначе
			РасчетПособияТекстПП = РасчетПособияТекстПП + "
	|	ВЫБОР
	|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	|			ТОГДА ВЫБОР
	|					КОГДА (" + РазмерВРубляхТекст + ") < (" + ОграничениеВРазмереММОТТекст + ")
	|						ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|					КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|						ТОГДА " + ОграничениеВРазмереММОТЗаМесяцТекст + "
	|					ИНАЧЕ " + ОграничениеВРазмереММОТТекст + " * " + ОплачиваемоеВремяТекст + "
	|				КОНЕЦ
	|		ИНАЧЕ " + РазмерВРубляхТекст + " 
	|	КОНЕЦ КАК РасчетныйРезультатПП,
	|	ВЫБОР
	|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
	|		ИНАЧЕ ""-""
	|	КОНЕЦ  КАК ОграничениеПособияПП,"
		КонецЕсли;
	ИначеЕсли ОграничениеПособияПереходногоПериода =Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
		РасчетПособияТекстПП = РасчетПособияТекстПП + "
	|	ВЫБОР
	|		КОГДА (" + РазмерВРубляхТекст + ") < (" + ОграничениеТекст + ")
	|			ТОГДА " + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + "
	|		КОГДА " + ОплачиваемоеВремяТекст + " = " + ВремяЗаМесяцТекст + "
	|			ТОГДА " + ОграничениеЗаМесяцТекст + "
	|		ИНАЧЕ " + ОграничениеТекст + " * " + ОплачиваемоеВремяТекст + "
	|	КОНЕЦ КАК РасчетныйРезультатПП,
	|	" + ОграничениеТекст + " КАК ОграничениеПособияПП,"
	Иначе
		РасчетПособияТекстПП = РасчетПособияТекстПП + "
	|	" + РазмерВРубляхТекст + " * " + ОплачиваемоеВремяТекст + " КАК РасчетныйРезультатПП,
	|	""-""  КАК ОграничениеПособияПП,"
	КонецЕсли;
	РасчетПособияТекстПП = РасчетПособияТекстПП + "
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
	|			СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ФактическийПериодДействия.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ)) КАК ОплачиватьДнейПособия
	|		ИЗ
	|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|				ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС))
	|				    И Регистратор = &ДокументСсылка) КАК ФактическийПериодДействия
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ФактическийПериодДействия.Регистратор,
	|			ФактическийПериодДействия.НомерСтроки) КАК КалендарныеДниПособия
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = КалендарныеДниПособия.НомерСтроки
	|		// присоединяем данные о размере пособия
	|		ЛЕВОЕ СОЕДИНЕНИЕ (" + РазмерММОТТекст + ") КАК РазмерММОТ
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерММОТ.ОсновнойНомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (" + РазмерОграниченияПособияТекст + ") КАК РазмерОграниченияПособия
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерОграниченияПособия.ОсновнойНомерСтроки
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
	|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодДействияНачало";
	

	ОтражениеТекст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
	|	СУММА(БУОсновныеНачисления.Результат) КАК Результат,
	|	БУОсновныеНачисления.СчетДт.Код,
	|	БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|	БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|	БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА &УСН
	|			ТОГДА БУОсновныеНачисления.ОтражениеВУСН
	|		ИНАЧЕ БУОсновныеНачисления.СчетДтНУ.Код
	|	КОНЕЦ КАК СчетДтНУКод,
	|	ВЫБОР
	|		КОГДА &УСН
	|			ТОГДА """"
	|		ИНАЧЕ БУОсновныеНачисления.СубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|	ВЫБОР
	|		КОГДА &УСН
	|			ТОГДА """"
	|		ИНАЧЕ БУОсновныеНачисления.СубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|	ВЫБОР
	|		КОГДА &УСН
	|			ТОГДА """"
	|		ИНАЧЕ БУОсновныеНачисления.СубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = БУОсновныеНачисления.ВидРасчета
	|			И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия = БУОсновныеНачисления.ПериодДействия
	|			И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = БУОсновныеНачисления.Сотрудник
	|			И (БУОсновныеНачисления.ПериодДействияНачало МЕЖДУ ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец)
	|			И (БУОсновныеНачисления.ПериодДействияКонец МЕЖДУ ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец)
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
	|	И (НЕ ОсновныеНачисленияРаботниковОрганизаций.Сторно)
	|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчетаКОплате
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
	|	БУОсновныеНачисления.СубконтоДт3,
	|	БУОсновныеНачисления.СубконтоДтНУ1,
	|	БУОсновныеНачисления.СубконтоДтНУ2,
	|	БУОсновныеНачисления.СубконтоДтНУ3,
	|	БУОсновныеНачисления.СчетДт.Код,
	|	ВЫБОР
	|		КОГДА &УСН
	|			ТОГДА БУОсновныеНачисления.ОтражениеВУСН
	|		ИНАЧЕ БУОсновныеНачисления.СчетДтНУ.Код
	|	КОНЕЦ,
	|	БУОсновныеНачисления.СубконтоДт1,
	|	БУОсновныеНачисления.СубконтоДт2,
	|	БУОсновныеНачисления.СубконтоДт3
	|
	|ИМЕЮЩИЕ
	|	СУММА(БУОсновныеНачисления.Результат) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодДействияНачало";
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеПоБольничномуЛисту_ОборотЛисткаНетрудоспособности";
	
	Макет = Документы.НачислениеПоБольничномуЛисту.ПолучитьМакет("ОборотЛисткаНетрудоспособностиВПереходныйПериод2007");
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	СекцияРасчетПособияШапка = Макет.ПолучитьОбласть("РасчетПособияШапка");
	СекцияРасчетПособияСтрока2006 = Макет.ПолучитьОбласть("РасчетПособияСтрока2006");
	СекцияРасчетПособияСтрока = Макет.ПолучитьОбласть("РасчетПособияСтрока");
	СекцияРасчетПособияИтог = Макет.ПолучитьОбласть("РасчетПособияИтог");
	СекцияОтражениеПособияСтрока = Макет.ПолучитьОбласть("ОтражениеПособияСтрока");
	
	// определим налоговый режим
	НалоговыйУчет.ОбновитьДанныеУчетнойПолитикиПоНалоговомуУчету(глЗначениеПеременной("УчетнаяПолитикаОтраженияЗарплатыВУчете"), КонецМесяца(ПериодРегистрации), Организация);
	УчетнаяПолитика = глЗначениеПеременной("УчетнаяПолитикаОтраженияЗарплатыВУчете")[КонецМесяца(ПериодРегистрации)][Организация];
	мУСН = УчетнаяПолитика.УСН;
	мОбъектНалогообложенияУСН = УчетнаяПолитика.ОбъектНалогообложенияУСН;
	мЕНВД = УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД;
	мФСС_БЛ = УчетнаяПолитика.УплачиватьДобровольныеВзносыВФСС;
	
	Запрос = Новый Запрос;
	
	ГрафикРаботы = Неопределено;
	ЭтоПереходныйПериодПоЗакону255ФЗ = ДатаСобытия < мДатаЗакона255ФЗ И ДатаОкончания >= мДатаЗакона255ФЗ И ПричинаНетрудоспособности <> Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаНачалаСобытия", ДатаСобытия);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);	
	Запрос.УстановитьПараметр("Физлицо", Сотрудник.Физлицо);
	Запрос.УстановитьПараметр("ПроцентОплатыПереходногоПериода", ПроцентОплатыПереходногоПериода);
	Запрос.УстановитьПараметр("ПроцентОплаты", ПроцентОплаты);
	Запрос.УстановитьПараметр("ДатаНарушенияРежима", ДатаНарушенияРежима);
	
	Запрос.Текст = ДанныеОДокументеТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СекцияШапка.Параметры,Выборка);
	ЗаполнитьЗначенияСвойств(СекцияРасчетПособияСтрока.Параметры,Выборка);
	ЗаполнитьЗначенияСвойств(СекцияРасчетПособияСтрока2006.Параметры,Выборка);
	ГрафикРаботы = Выборка.ГрафикРаботы;
	ПериодРасчетаСреднегоЗаработка = Выборка.ПериодРасчетаСреднегоЗаработка;
	ЛетСтажа	= 0;
	МесяцевСтажа= 0;
	ДнейСтажа	= 0;
	ДатаНепрерывногоСтажа = ПроведениеРасчетов.ПолучитьНачалоСтажаДляБольничногоЛиста(ДатаСобытия, Сотрудник.Физлицо, Организация);
	Если ЗначениеЗаполнено(ДатаНепрерывногоСтажа) Тогда
		ОбщегоНазначенияЗК.РазобратьРазностьДат(ДатаСобытия, ДатаНепрерывногоСтажа, ЛетСтажа, МесяцевСтажа, ДнейСтажа);
	КонецЕсли;
	СекцияШапка.Параметры.НазваниеСтажа = ?(ДатаСобытия < мДатаЗакона255ФЗ,"Непрерывный","Страховой");
	СекцияШапка.Параметры.ЛетСтажа = ЛетСтажа;
    СекцияШапка.Параметры.ПодписьЛетСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("год","года","лет",ЛетСтажа);
    СекцияШапка.Параметры.МесяцевСтажа = МесяцевСтажа;
    СекцияШапка.Параметры.ПодписьМесяцевСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("месяц","месяца","месяцев",МесяцевСтажа);
    СекцияШапка.Параметры.ДнейСтажа = ДнейСтажа;
    СекцияШапка.Параметры.ПодписьДнейСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("день","дня","дней",ДнейСтажа);
	
	ДатыВыходныхДней = "";
	Запрос.УстановитьПараметр("ГрафикРаботы" , ГрафикРаботы);
	Запрос.Текст = ВыходныеДниТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоДней = 0;
	Пока Выборка.Следующий() Цикл
		ДатыВыходныхДней = ДатыВыходныхДней + ?(ДатыВыходныхДней = "","","; ") + Формат(Выборка.Дата,"ДЛФ=DD");
		Если Выборка.Дата < мДатаЗакона255ФЗ Тогда
			КоличествоДней = КоличествоДней + 1
		КонецЕсли;
	КонецЦикла;
	СекцияШапка.Параметры.РабочихДней = ((мДатаЗакона255ФЗ - ДатаНачала) / мДлинаСуток) - КоличествоДней;
	СекцияШапка.Параметры.ДатыВыходныхДней = ДатыВыходныхДней;
	ТабДокумент.Вывести(СекцияШапка);
	
	СтруктураПоказателей = Неопределено;
	СписокСоставляющихСреднегоЗаработка = Новый Массив(5); 
	СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
	СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;
	СписокСоставляющихСреднегоЗаработка[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;
	СписокСоставляющихСреднегоЗаработка[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;
	СписокСоставляющихСреднегоЗаработка[4] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииБЛ;
	ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаСобытия, ПериодРасчетаСреднегоЗаработка, "", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, , СписокСоставляющихСреднегоЗаработка, Ложь, Ложь, СтруктураПоказателей);
    ОбластьПрямоугольная = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, 1, ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы, ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы);
    НачалоНовогоФорматаСтрок = ТабДокумент.ВысотаТаблицы + 1;
    ТабДокумент.Область(НачалоНовогоФорматаСтрок, , НачалоНовогоФорматаСтрок + ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы - 1, ).СоздатьФорматСтрок();
    // назначим ширину колонок у новой области формата строк
    Для Счетчик = 1 По ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы Цикл
        ТабДокумент.Область(НачалоНовогоФорматаСтрок, Счетчик).ШиринаКолонки = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, Счетчик).ШиринаКолонки;
    КонецЦикла;
    ТабДокумент.ВставитьОбласть(ОбластьПрямоугольная, ТабДокумент.Область(НачалоНовогоФорматаСтрок, 1));
	Запрос.УстановитьПараметр("Средний",Окр(СтруктураПоказателей.Средний,2));
	
	ТабДокумент.Вывести(Макет.ПолучитьОбласть("ЗаголовокНовогоПорядка"));
	СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
	СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий;
	СписокСоставляющихСреднегоЗаработка[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий;
	СписокСоставляющихСреднегоЗаработка[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
	СписокСоставляющихСреднегоЗаработка[4] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииПособий;
	ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаСобытия, ПериодРасчетаСреднегоЗаработка, "", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, СписокСоставляющихСреднегоЗаработка, Ложь, Ложь, СтруктураПоказателей);
    ОбластьПрямоугольная = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, 1, ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы, ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы);
    НачалоНовогоФорматаСтрок = ТабДокумент.ВысотаТаблицы + 1;
    ТабДокумент.Область(НачалоНовогоФорматаСтрок, , НачалоНовогоФорматаСтрок + ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы - 1, ).СоздатьФорматСтрок();
    // назначим ширину колонок у новой области формата строк
    Для Счетчик = 1 По ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы Цикл
        ТабДокумент.Область(НачалоНовогоФорматаСтрок, Счетчик).ШиринаКолонки = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, Счетчик).ШиринаКолонки;
    КонецЦикла;
    ТабДокумент.ВставитьОбласть(ОбластьПрямоугольная, ТабДокумент.Область(НачалоНовогоФорматаСтрок, 1));
	Запрос.УстановитьПараметр("СреднийПП",Окр(СтруктураПоказателей.Средний,2));
	
	ТабДокумент.Вывести(СекцияРасчетПособияШапка);
	
	Запрос.Текст = РасчетПособияТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Запрос.Текст = РасчетПособияТекстПП;
	ВыборкаПП = Запрос.Выполнить().Выбрать(); ВыборкаПП.Следующий();
	СтруктураПоиска = Новый Структура("ПериодДействияНачало");
	НачисленоВсего = 0;
	Пока Выборка.Следующий() Цикл
		НачисленоВсего = НачисленоВсего + Выборка.Результат;
		Если Выборка.ПериодДействияНачало < мДатаЗакона255ФЗ Тогда
			ЗаполнитьЗначенияСвойств(СекцияРасчетПособияСтрока2006.Параметры,Выборка);
			ТабДокумент.Вывести(СекцияРасчетПособияСтрока2006);
		Иначе
			ЗаполнитьЗначенияСвойств(СекцияРасчетПособияСтрока.Параметры,Выборка);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,Выборка);
			ВыборкаПП.Сбросить();
			ВыборкаПП.НайтиСледующий(СтруктураПоиска);
			ЗаполнитьЗначенияСвойств(СекцияРасчетПособияСтрока.Параметры,ВыборкаПП);
			ТабДокумент.Вывести(СекцияРасчетПособияСтрока);
		КонецЕсли;
	КонецЦикла;
	                                  
	СекцияРасчетПособияИтог.Параметры.НачисленоВсегоПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоВсего, Константы.ВалютаРегламентированногоУчета.Получить());
	СекцияРасчетПособияИтог.Параметры.ПериодРегистрации = ПериодРегистрации;
	ТабДокумент.Вывести(СекцияРасчетПособияИтог);
	
	Запрос.Текст = ОтражениеТекст;
	Запрос.УстановитьПараметр("ВидРасчетаКОплате", ВидРасчета);
	Запрос.УстановитьПараметр("УСН",мУСН);
	Результат = Запрос.Выполнить();
	
	ТабДокумент.Вывести(Макет.ПолучитьОбласть("ОтражениеВУчетеШапка"));
	Если Результат.Пустой() Тогда
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("НетДанных"));
	Иначе
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("ОтражениеПособияШапка"));
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(СекцияОтражениеПособияСтрока.Параметры,Выборка);
			
			СекцияОтражениеПособияСтрока.Параметры.СтрокаСубконтоБУ = ?(ЗначениеЗаполнено(Выборка.СубконтоДт1),Строка(Выборка.СубконтоДт1),"") +
				?(ЗначениеЗаполнено(Выборка.СубконтоДт2), Символы.ПС + Строка(Выборка.СубконтоДт2),"") + 
				?(ЗначениеЗаполнено(Выборка.СубконтоДт3), Символы.ПС+ Строка(Выборка.СубконтоДт3),"") ; 
			СекцияОтражениеПособияСтрока.Параметры.СтрокаСубконтоНУ = ?(ЗначениеЗаполнено(Выборка.СубконтоДтНУ1),Строка(Выборка.СубконтоДтНУ1),"") +
				?(ЗначениеЗаполнено(Выборка.СубконтоДтНУ2), Символы.ПС + Строка(Выборка.СубконтоДтНУ2),"") + 
				?(ЗначениеЗаполнено(Выборка.СубконтоДтНУ3), Символы.ПС + Строка(Выборка.СубконтоДтНУ3),""); 
		
			ТабДокумент.Вывести(СекцияОтражениеПособияСтрока);
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат	ТабДокумент
	
КонецФункции // ПечатьОборотаБольничного()

#КонецЕсли

// получение первичных данных для бухучета
// первичные в данном случае, это те, для которых определено конкретное отражение
// в бухучете (не требуетяс предварительная обработка правила отражения в бухучете)
// или те которые определяют свой бухучет по базовым начисленияи и 
// при этом базируются на прошлом периоде
// 
// Параметры:
//  Основные - булево, если Истина, то получаем данные по основным начислениям иначе - по доп.
//
// Возвращаемое значение:
//  Результат запроса
// 
Функция ПолучитьДанныеУчета2009(ВыборкаПоШапкеДокумента, ЧитатьРасчетнуюБазу) Экспорт 
	
	мДатаЗакона255ФЗ = ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006();
	Ссылка = ВыборкаПоШапкеДокумента.Ссылка;
	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", ВыборкаПоШапкеДокумента.ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДатаЗакона202ФЗ", '20050101');
	Запрос.УстановитьПараметр("ДатаЗакона255ФЗ", мДатаЗакона255ФЗ);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	//получим отражение в учете сторно записей
	ОсновныеНачисленияСторноТекст =
	"ВЫБРАТЬ
	|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисления.Сотрудник,
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.Организация,
	|	ОсновныеНачисления.ПериодДействияНачало,
	|	ОсновныеНачисления.ПериодДействияКонец,
	|	ОсновныеНачисления.ВидРасчета,
	|	ОсновныеНачисления.СторнируемыйДокумент
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисленияСторно
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.Регистратор = &Регистратор
	|	И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
	|	И ОсновныеНачисления.Результат <> 0
	|	И ОсновныеНачисления.Сторно
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст = ОсновныеНачисленияСторноТекст;
	//временная таблица - ВТ_ОсновныеНачисленияСторно
	Результат = Запрос.Выполнить().Выгрузить();
	КоличествоСторноЗаписей = Результат[0].Количество;
	
	Если КоличествоСторноЗаписей <> 0 Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияСторно.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисленияСторно.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации
		|ПОМЕСТИТЬ ВТ_СторноСотрудники
		|ИЗ
		|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисленияСторно
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|		ПО ОсновныеНачисленияСторно.СторнируемыйДокумент = ОсновныеНачисления.Регистратор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ПериодРегистрации,
		|	ВидРасчета";
		
		//временная таблица - ВТ_СторноСотрудники
		Запрос.Выполнить();
		
		
		ОтражениеВУчетеСторноТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	БУОсновныеНачисления.СчетДт,
		|	БУОсновныеНачисления.СубконтоДт1,
		|	БУОсновныеНачисления.СубконтоДт2,
		|	БУОсновныеНачисления.СубконтоДт3,
		|	БУОсновныеНачисления.СчетКт,
		|	БУОсновныеНачисления.СубконтоКт1,
		|	БУОсновныеНачисления.СубконтоКт2,
		|	БУОсновныеНачисления.СубконтоКт3,
		|	БУОсновныеНачисления.СчетДтНУ,
		|	БУОсновныеНачисления.СубконтоДтНУ1,
		|	БУОсновныеНачисления.СубконтоДтНУ2,
		|	БУОсновныеНачисления.СубконтоДтНУ3,
		|	БУОсновныеНачисления.СчетКтНУ,
		|	БУОсновныеНачисления.СубконтоКтНУ1,
		|	БУОсновныеНачисления.СубконтоКтНУ2,
		|	БУОсновныеНачисления.СубконтоКтНУ3,
		|	БУОсновныеНачисления.СпособРаспределенияЗатрат,
		|	БУОсновныеНачисления.ОтражениеВУСН,
		|	БУОсновныеНачисления.Результат,
		|	ВЫБОР
		|		КОГДА БУОсновныеНачисления.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЕНВД))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОблагаетсяЕНВД,
		|	ВЫБОР
		|		КОГДА БУОсновныеНачисления.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_СПЕЦ_УСН), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС))
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом)
		|	КОНЕЦ КАК КодДоходаЕСН,
		|	БУОсновныеНачисления.ПериодДействияНачало,
		|	БУОсновныеНачисления.ПериодДействияКонец
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно
		|ИЗ
		|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|			БУОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|			БУОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|			БУОсновныеНачисления.Сотрудник КАК Сотрудник,
		|			БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|			БУОсновныеНачисления.Организация КАК Организация,
		|			БУОсновныеНачисления.Результат КАК Результат,
		|			БУОсновныеНачисления.СчетДт КАК СчетДт,
		|			БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
		|			БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
		|			БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
		|			БУОсновныеНачисления.СчетКт КАК СчетКт,
		|			БУОсновныеНачисления.СубконтоКт1 КАК СубконтоКт1,
		|			БУОсновныеНачисления.СубконтоКт2 КАК СубконтоКт2,
		|			БУОсновныеНачисления.СубконтоКт3 КАК СубконтоКт3,
		|			БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
		|			БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|			БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|			БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|			БУОсновныеНачисления.СчетКтНУ КАК СчетКтНУ,
		|			БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|			БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|			БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
		|			БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|			БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
		|			БУОсновныеНачисления.ДокументОснование КАК ДокументОснование
		|		ИЗ
		|			РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
		|		ГДЕ
		|			(БУОсновныеНачисления.ПериодРегистрации, БУОсновныеНачисления.Сотрудник, БУОсновныеНачисления.ВидРасчета) В
		|					(ВЫБРАТЬ
		|						ОсновныеНачисления.ПериодРегистрации,
		|						ОсновныеНачисления.Сотрудник,
		|						ОсновныеНачисления.ВидРасчета
		|					ИЗ
		|						ВТ_СторноСотрудники КАК ОсновныеНачисления)
		|			И (НЕ БУОсновныеНачисления.Сторно)) КАК БУОсновныеНачисления
		|		ПО ОсновныеНачисления.ВидРасчета = БУОсновныеНачисления.ВидРасчета
		|			И ОсновныеНачисления.Сотрудник = БУОсновныеНачисления.Сотрудник
		|			И ОсновныеНачисления.Организация = БУОсновныеНачисления.Организация
		|			И ОсновныеНачисления.ФизЛицо = БУОсновныеНачисления.ФизЛицо
		|			И ОсновныеНачисления.СторнируемыйДокумент = БУОсновныеНачисления.ДокументОснование
		|			И (БУОсновныеНачисления.ПериодДействияНачало >= ОсновныеНачисления.ПериодДействияНачало)
		|			И (БУОсновныеНачисления.ПериодДействияКонец <= ОсновныеНачисления.ПериодДействияКонец)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки";
		
	Иначе
		
		ОтражениеВУчетеСторноТекст = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
		|	НЕОПРЕДЕЛЕНО КАК СчетДт,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	НЕОПРЕДЕЛЕНО КАК СчетКт,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	НЕОПРЕДЕЛЕНО КАК СчетДтНУ,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3,
		|	НЕОПРЕДЕЛЕНО КАК СчетКтНУ,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3,
		|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСН,
		|	НЕОПРЕДЕЛЕНО КАК ОблагаетсяЕНВД,
		|	НЕОПРЕДЕЛЕНО КАК ПериодДействияНачало,
		|	НЕОПРЕДЕЛЕНО КАК ПериодДействияКонец,
		|	НЕОПРЕДЕЛЕНО КАК КодДоходаЕСН,
		|	0 КАК Результат
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно";
		
	КонецЕсли;
	
	Запрос.Текст = ОтражениеВУчетеСторноТекст;
	//временная таблица - ВТ_ОтражениеВУчетеСторно
	Запрос.Выполнить();

	Если ЧитатьРасчетнуюБазу Тогда
		
		Измерения = Новый Массив(1);
		Измерения[0] = "Сотрудник";
		
		Запрос.УстановитьПараметр("парамИзмерения", Измерения);
		
		Разрезы = Новый Массив(18);
		Разрезы[0] = "СчетДт";
		Разрезы[1] = "СубконтоДт1";
		Разрезы[2] = "СубконтоДт2";
		Разрезы[3] = "СубконтоДт3";
		Разрезы[4] = "СчетКт";
		Разрезы[5] = "СубконтоКт1";
		Разрезы[6] = "СубконтоКт2";
		Разрезы[7] = "СубконтоКт3";
		Разрезы[8] = "СчетДтНУ";
		Разрезы[9] = "СчетКтНУ";
		Разрезы[10] = "СубконтоДтНУ1";
		Разрезы[11] = "СубконтоДтНУ2";
		Разрезы[12] = "СубконтоДтНУ3";
		Разрезы[13] = "СубконтоКтНУ1";
		Разрезы[14] = "СубконтоКтНУ2";
		Разрезы[15] = "СубконтоКтНУ3";
		Разрезы[16] = "СпособРаспределенияЗатрат";
		Разрезы[17] = "ОтражениеВУСН";	
		
		Запрос.УстановитьПараметр("парамРазрезыБУ", Разрезы);
		
		// для учета особенностей расчета среднего заработка
		СписокСоставляющихСреднегоЗаработка = Новый Массив(10); 
		СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
		СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;
		СписокСоставляющихСреднегоЗаработка[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;
		СписокСоставляющихСреднегоЗаработка[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;
		СписокСоставляющихСреднегоЗаработка[4] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииБЛ;
		СписокСоставляющихСреднегоЗаработка[5] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
		СписокСоставляющихСреднегоЗаработка[6] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
		СписокСоставляющихСреднегоЗаработка[7] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
		СписокСоставляющихСреднегоЗаработка[8] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
		СписокСоставляющихСреднегоЗаработка[9] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии;
		Запрос.УстановитьПараметр("парамСписокСоставляющихСреднегоЗаработка", СписокСоставляющихСреднегоЗаработка);
	
		ОсновнойЗаработок = Новый Массив(3);
		ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
		ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
		ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
		ПоФиксПремиям = Новый Массив(3);
		ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
		ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;
		ПоФиксПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий;
		ПоПремиям = Новый Массив(3);
		ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
		ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;
		ПоПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
		ФиксГодовыеПремии = Новый Массив(3);
		ФиксГодовыеПремии[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
		ФиксГодовыеПремии[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;
		ФиксГодовыеПремии[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий;
		
		Запрос.УстановитьПараметр("ОсновнойЗаработок", ОсновнойЗаработок);
		Запрос.УстановитьПараметр("ПоПремиям", ПоПремиям);
		Запрос.УстановитьПараметр("ПоФиксПремиям", ПоФиксПремиям);
		Запрос.УстановитьПараметр("ФиксГодовыеПремии", ФиксГодовыеПремии);
		
		БазаСреднегоЗаработкаТекст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА БазаСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|				И БазаСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
		|			ТОГДА ЕСТЬNULL(БазаСреднегоЗаработка.Регистратор.Сотрудник, БазаСреднегоЗаработка.Сотрудник)
		|		ИНАЧЕ БазаСреднегоЗаработка.Сотрудник
		|	КОНЕЦ КАК Сотрудник,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработка.СпособРасчета,
		|	БазаСреднегоЗаработка.ДатаНачалаСобытия,
		|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
		|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
		|	ВЫБОР
		|		КОГДА БазаСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
		|			ТОГДА БазаСреднегоЗаработка.РезультатБаза
		|		КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА БазаСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
		|					ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|							КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
		|								ТОГДА 0
		|							ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
		|						КОНЕЦ
		|				КОГДА БазаСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
		|					ТОГДА БазаСреднегоЗаработка.РезультатБаза
		|				КОГДА БазаСреднегоЗаработка.ВидРасчета В (&ФиксГодовыеПремии)
		|					ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|							КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
		|								ТОГДА 0
		|							ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
		|						КОНЕЦ
		|				ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|			КОНЕЦ * ВЫБОР
		|				КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
		|					ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК РезультатБаза
		|ПОМЕСТИТЬ ВТ_БазаБУОсновныеНачисления
		|ИЗ
		|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
		|			&парамИзмерения,
		|			&парамИзмерения,
		|			&парамРазрезыБУ,
		|			Регистратор = &Регистратор
		|				И (НЕ Сторно)
		|				И Результат <> 0
		|				И (ВидРасчета В (&парамСписокСоставляющихСреднегоЗаработка)
		|					ИЛИ ДатаНачалаСобытия >= &ДатаЗакона255ФЗ)) КАК БазаСреднегоЗаработка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА БазаСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|				И БазаСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
		|			ТОГДА ЕСТЬNULL(БазаСреднегоЗаработка.Регистратор.Сотрудник, БазаСреднегоЗаработка.Сотрудник)
		|		ИНАЧЕ БазаСреднегоЗаработка.Сотрудник
		|	КОНЕЦ КАК Сотрудник,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработка.СпособРасчета,
		|	БазаСреднегоЗаработка.ДатаНачалаСобытия,
		|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
		|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
		|	ВЫБОР
		|		КОГДА БазаСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
		|			ТОГДА БазаСреднегоЗаработка.РезультатБаза
		|		КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА БазаСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
		|					ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|							КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
		|								ТОГДА 0
		|							ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
		|						КОНЕЦ
		|				КОГДА БазаСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
		|					ТОГДА БазаСреднегоЗаработка.РезультатБаза
		|				КОГДА БазаСреднегоЗаработка.ВидРасчета В (&ФиксГодовыеПремии)
		|					ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|							КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
		|								ТОГДА 0
		|							ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
		|						КОНЕЦ
		|				ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|			КОНЕЦ * ВЫБОР
		|				КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
		|					ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК РезультатБаза
		|ПОМЕСТИТЬ ВТ_БазаБУДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
		|			&парамИзмерения,
		|			&парамИзмерения,
		|			&парамРазрезыБУ,
		|			Регистратор = &Регистратор
		|				И (НЕ Сторно)
		|				И Результат <> 0
		|				И (ВидРасчета В (&парамСписокСоставляющихСреднегоЗаработка)
		|					ИЛИ ДатаНачалаСобытия >= &ДатаЗакона255ФЗ)) КАК БазаСреднегоЗаработка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БазаСреднегоЗаработка.Регистратор,
		|	БазаСреднегоЗаработка.НомерСтроки,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
		|ПОМЕСТИТЬ БазаСреднегоЗаработка
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеНачисления.Регистратор КАК Регистратор,
		|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
		|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
		|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
		|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
		|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
		|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|		БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУОсновныеНачисления КАК БазаСреднегоЗаработка
		|			ПО (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.ВидРасчета.СпособРасчета)
		|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
		|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
		|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
		|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
		|	ГДЕ
		|		ОсновныеНачисления.Регистратор = &Регистратор
		|		И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|		И (НЕ ОсновныеНачисления.Сторно)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОсновныеНачисления.Регистратор,
		|		ОсновныеНачисления.НомерСтроки,
		|		БазаСреднегоЗаработка.СчетДтРазрез,
		|		БазаСреднегоЗаработка.СчетКтРазрез,
		|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|		БазаСреднегоЗаработка.СчетДтНУРазрез,
		|		БазаСреднегоЗаработка.СчетКтНУРазрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|		БазаСреднегоЗаработка.РезультатБаза
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУДополнительныеНачисления КАК БазаСреднегоЗаработка
		|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
		|				И (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.ВидРасчета.СпособРасчета)
		|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
		|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
		|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
		|	ГДЕ
		|		ОсновныеНачисления.Регистратор = &Регистратор
		|		И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|		И (НЕ ОсновныеНачисления.Сторно)) КАК БазаСреднегоЗаработка
		|
		|СГРУППИРОВАТЬ ПО
		|	БазаСреднегоЗаработка.Регистратор,
		|	БазаСреднегоЗаработка.НомерСтроки,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез";
		
		Запрос.Текст = БазаСреднегоЗаработкаТекст;
		//временная таблица - БазаСреднегоЗаработка
		Запрос.Выполнить();
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Организация КАК Организация,
		|	&ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.Сторно,
		|	ДанныеУчета.Результат,
		|	0 КАК ДополнительныйРезультат,
		|	ЕСТЬNULL(ОтражениеВУчетеСторно.ПериодДействияНачало, ДанныеУчета.ПериодДействияНачало) КАК ПериодДействияНачало,
		|	ЕСТЬNULL(ОтражениеВУчетеСторно.ПериодДействияКонец, ДанныеУчета.ПериодДействияКонец) КАК ПериодДействияКонец,
		|	ДанныеУчета.ГрафикРаботы,
		|	ДанныеУчета.ВидУчетаВремени,
		|	ДанныеУчета.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
		|	ВЫБОР
		|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоЕНВД,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ДанныеУчета.ПериодДействия >= &ДатаЗакона255ФЗ
		|				ТОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(РазмерыММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ДанныеУчета.ПериодДействия, МЕСЯЦ)) КАК ЧИСЛО(10, 2))) * ЕСТЬNULL(ДанныеФПД.КалендарныхДней, 0)
		|			КОГДА ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеПериодДействия, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(РазмерыММОТ.Размер, 0) / ДанныеГрафика.ОсновноеЗначениеПериодДействия КАК ЧИСЛО(10, 2))) * ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия, 0)
		|		КОНЕЦ, 0) КАК ВПределахММОТ,
		|	ЕСТЬNULL(ДанныеУчетаБЛ.ДоляБЛЗаСчетРаботодателя, 0) КАК ДоляБЛЗаСчетРаботодателя,
		|	ДанныеУчета.ВидРасчета.Наименование,
		|	ОтражениеВУчетеСторно.КодДоходаЕСН КАК КодДоходаЕСН,
		|	ОтражениеВУчетеСторно.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ОтражениеВУчетеСторно.СчетДт КАК СчетДт,
		|	ОтражениеВУчетеСторно.СубконтоДт1,
		|	ОтражениеВУчетеСторно.СубконтоДт2,
		|	ОтражениеВУчетеСторно.СубконтоДт3,
		|	ОтражениеВУчетеСторно.СчетКт,
		|	ОтражениеВУчетеСторно.СубконтоКт1,
		|	ОтражениеВУчетеСторно.СубконтоКт2,
		|	ОтражениеВУчетеСторно.СубконтоКт3,
		|	ОтражениеВУчетеСторно.СчетДтНУ,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ1,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ2,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ3,
		|	ОтражениеВУчетеСторно.СчетКтНУ,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ1,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ2,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ3,
		|	ОтражениеВУчетеСторно.СпособРаспределенияЗатрат,
		|	ОтражениеВУчетеСторно.ОтражениеВУСН,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|		ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|		ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|		ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|		ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|		ОсновныеНачисления.Результат КАК Результат,
		|		ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|		ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|		ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|		ОсновныеНачисления.Сторно КАК Сторно,
		|		ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|		ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|		ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|	ГДЕ
		|		ОсновныеНачисления.Регистратор = &Регистратор
		|		И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)) КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДатыАктуальностиММОТ.Регистратор КАК Регистратор,
		|			ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
		|			МинимальнаяОплатаТрудаРФ.Размер КАК Размер
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ОсновныеНачисления.Регистратор КАК Регистратор,
		|				ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|				МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
		|			ИЗ
		|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|					ПО (МинимальнаяОплатаТрудаРФ.Период <= ОсновныеНачисления.ПериодДействияНачало)
		|			ГДЕ
		|				ОсновныеНачисления.Регистратор = &Регистратор
		|				И (НЕ ОсновныеНачисления.Сторно)
		|				И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ОсновныеНачисления.НомерСтроки,
		|				ОсновныеНачисления.Регистратор) КАК ДатыАктуальностиММОТ
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|				ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)) КАК РазмерыММОТ
		|		ПО ДанныеУчета.НомерСтроки = РазмерыММОТ.ОсновнойНомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
		|				ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|					И (НЕ Сторно)
		|					И Регистратор = &Регистратор) КАК ДанныеГрафика
		|		ПО ДанныеУчета.НомерСтроки = ДанныеГрафика.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
		|		ПО БазаСреднегоЗаработка.СчетДтРазрез = СчетаУчетаПоДеятельностиЕНВД.Счет
		
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|			СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|		ИЗ
		|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|					ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|						И (НЕ Сторно)
		|						И Регистратор = &Регистратор) КАК ФактическийПериодДействияЗаписей
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ФактическийПериодДействияЗаписей.НомерСтроки) КАК ДанныеФПД
		|		ПО ДанныеУчета.НомерСтроки = ДанныеФПД.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОсновныеНачисления.Регистратор КАК Регистратор,
		|			ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|			ЕСТЬNULL(ВЫБОР
		|					КОГДА ОсновныеНачисления.ДатаНачалаСобытия >= &ДатаЗакона255ФЗ
		|						ТОГДА ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя / ФактическийПериодДействияЗаписей.КалендарныхДней
		|					КОГДА ВЫБОР
		|							КОГДА ОсновныеНачисления.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
		|								ТОГДА ОсновныеНачисления.НормаДней
		|							ИНАЧЕ ОсновныеНачисления.НормаЧасов
		|						КОНЕЦ = 0
		|						ТОГДА 0
		|					ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение) / ВЫБОР
		|							КОГДА ОсновныеНачисления.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
		|								ТОГДА ОсновныеНачисления.НормаДней
		|							ИНАЧЕ ОсновныеНачисления.НормаЧасов
		|						КОНЕЦ
		|				КОНЕЦ, 0) КАК ДоляБЛЗаСчетРаботодателя
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ОсновныеНачисления.Регистратор КАК Регистратор,
		|				ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|				ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|				ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|				ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|				ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|				ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|				ОсновныеНачисления.НормаДней КАК НормаДней,
		|				ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|				ОсновныеНачисления.НормаЧасов КАК НормаЧасов
		|			ИЗ
		|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|			ГДЕ
		|				ОсновныеНачисления.Регистратор = &Регистратор
		|				И (НЕ ОсновныеНачисления.Сторно)
		|				И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|				И РАЗНОСТЬДАТ(ОсновныеНачисления.ДатаНачалаСобытия, ОсновныеНачисления.ПериодДействияНачало, ДЕНЬ) < 2
		|				И ОсновныеНачисления.ДатаНачалаСобытия >= &ДатаЗакона202ФЗ) КАК ОсновныеНачисления
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
		|				ПО ОсновныеНачисления.ГрафикРаботы = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
		|					И ОсновныеНачисления.ВидУчетаВремени = ГрафикиРаботыПоВидамВремени.ВидУчетаВремени
		|					И (ОсновныеНачисления.ПериодДействия < &ДатаЗакона255ФЗ)
		|					И ОсновныеНачисления.ПериодДействияНачало <= ГрафикиРаботыПоВидамВремени.Дата
		|					И (ДОБАВИТЬКДАТЕ(ОсновныеНачисления.ДатаНачалаСобытия, ДЕНЬ, 1) >= ГрафикиРаботыПоВидамВремени.Дата)
		|					И ОсновныеНачисления.ПериодДействияКонец >= ГрафикиРаботыПоВидамВремени.Дата
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|					СУММА(ВЫБОР
		|							КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало = ФактическийПериодДействияЗаписей.ДатаНачалаСобытия
		|								ТОГДА ВЫБОР
		|										КОГДА ФактическийПериодДействияЗаписей.ПериодДействияКонец >= ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|											ТОГДА 2
		|										ИНАЧЕ 1
		|									КОНЕЦ
		|							КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало > ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|								ТОГДА 0
		|							ИНАЧЕ 1
		|						КОНЕЦ) КАК ДнейЗаСчетРаботодателя,
		|					СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|				ИЗ
		|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|							ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|								И Регистратор = &Регистратор
		|								И (НЕ Сторно)
		|								И ДатаНачалаСобытия >= &ДатаЗакона255ФЗ) КАК ФактическийПериодДействияЗаписей
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ФактическийПериодДействияЗаписей.НомерСтроки) КАК ФактическийПериодДействияЗаписей
		|				ПО ОсновныеНачисления.НомерСтроки = ФактическийПериодДействияЗаписей.НомерСтроки
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОсновныеНачисления.Регистратор,
		|			ОсновныеНачисления.ВидУчетаВремени,
		|			ОсновныеНачисления.ДатаНачалаСобытия,
		|			ОсновныеНачисления.ПериодДействияНачало,
		|			ОсновныеНачисления.ПериодДействияКонец,
		|			ОсновныеНачисления.НормаЧасов,
		|			ОсновныеНачисления.НормаДней,
		|			ОсновныеНачисления.НомерСтроки,
		|			ФактическийПериодДействияЗаписей.КалендарныхДней,
		|			ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя) КАК ДанныеУчетаБЛ
		|		ПО ДанныеУчета.НомерСтроки = ДанныеУчетаБЛ.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ДанныеУчета.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	СчетДтРазрез,
		|	СчетДт
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.Текст = ТекстЗапроса;
		РезультатЗапроса = Запрос.Выполнить();
		
		Возврат РезультатЗапроса;
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Организация КАК Организация,
		|	&ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.Сторно,
		|	ДанныеУчета.Результат,
		|	0 КАК ДополнительныйРезультат,
		|	ЕСТЬNULL(ОтражениеВУчетеСторно.ПериодДействияНачало, ДанныеУчета.ПериодДействияНачало) КАК ПериодДействияНачало,
		|	ЕСТЬNULL(ОтражениеВУчетеСторно.ПериодДействияКонец, ДанныеУчета.ПериодДействияКонец) КАК ПериодДействияКонец,
		|	ДанныеУчета.ГрафикРаботы,
		|	ДанныеУчета.ВидУчетаВремени,
		|	ДанныеУчета.ДатаНачалаСобытия,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ДанныеУчета.ПериодДействия >= &ДатаЗакона255ФЗ
		|				ТОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(РазмерыММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ДанныеУчета.ПериодДействия, МЕСЯЦ)) КАК ЧИСЛО(10, 2))) * ЕСТЬNULL(ДанныеФПД.КалендарныхДней, 0)
		|			КОГДА ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеПериодДействия, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(РазмерыММОТ.Размер, 0) / ДанныеГрафика.ОсновноеЗначениеПериодДействия КАК ЧИСЛО(10, 2))) * ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия, 0)
		|		КОНЕЦ, 0) КАК ВПределахММОТ,
		|	ЕСТЬNULL(ДанныеУчетаБЛ.ДоляБЛЗаСчетРаботодателя, 0) КАК ДоляБЛЗаСчетРаботодателя,
		|	ДанныеУчета.ВидРасчета.Наименование,
		|	ЛОЖЬ КАК ЭтоЕНВД,
		|	ОтражениеВУчетеСторно.КодДоходаЕСН КАК КодДоходаЕСН,
		|	ОтражениеВУчетеСторно.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ОтражениеВУчетеСторно.СчетДт КАК СчетДт,
		|	ОтражениеВУчетеСторно.СубконтоДт1,
		|	ОтражениеВУчетеСторно.СубконтоДт2,
		|	ОтражениеВУчетеСторно.СубконтоДт3,
		|	ОтражениеВУчетеСторно.СчетКт,
		|	ОтражениеВУчетеСторно.СубконтоКт1,
		|	ОтражениеВУчетеСторно.СубконтоКт2,
		|	ОтражениеВУчетеСторно.СубконтоКт3,
		|	ОтражениеВУчетеСторно.СчетДтНУ,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ1,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ2,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ3,
		|	ОтражениеВУчетеСторно.СчетКтНУ,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ1,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ2,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ3,
		|	ОтражениеВУчетеСторно.СпособРаспределенияЗатрат,
		|	ОтражениеВУчетеСторно.ОтражениеВУСН,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|		ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|		ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|		ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|		ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|		ОсновныеНачисления.Результат КАК Результат,
		|		ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|		ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|		ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|		ОсновныеНачисления.Сторно КАК Сторно,
		|		ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|		ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|		ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|	ГДЕ
		|		ОсновныеНачисления.Регистратор = &Регистратор
		|		И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)) КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДатыАктуальностиММОТ.Регистратор КАК Регистратор,
		|			ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
		|			МинимальнаяОплатаТрудаРФ.Размер КАК Размер
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ОсновныеНачисления.Регистратор КАК Регистратор,
		|				ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|				МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
		|			ИЗ
		|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|					ПО (МинимальнаяОплатаТрудаРФ.Период <= ОсновныеНачисления.ПериодДействияНачало)
		|			ГДЕ
		|				ОсновныеНачисления.Регистратор = &Регистратор
		|				И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|				И (НЕ ОсновныеНачисления.Сторно)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ОсновныеНачисления.НомерСтроки,
		|				ОсновныеНачисления.Регистратор) КАК ДатыАктуальностиММОТ
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|				ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)) КАК РазмерыММОТ
		|		ПО ДанныеУчета.НомерСтроки = РазмерыММОТ.ОсновнойНомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
		|				ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|					И (НЕ Сторно)
		|					И Регистратор = &Регистратор) КАК ДанныеГрафика
		|		ПО ДанныеУчета.НомерСтроки = ДанныеГрафика.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|			СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|		ИЗ
		|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|					ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|						И (НЕ Сторно)
		|						И Регистратор = &Регистратор) КАК ФактическийПериодДействияЗаписей
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ФактическийПериодДействияЗаписей.НомерСтроки) КАК ДанныеФПД
		|		ПО ДанныеУчета.НомерСтроки = ДанныеФПД.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОсновныеНачисления.Регистратор КАК Регистратор,
		|			ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|			ЕСТЬNULL(ВЫБОР
		|					КОГДА ОсновныеНачисления.ДатаНачалаСобытия >= &ДатаЗакона255ФЗ
		|						ТОГДА ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя / ФактическийПериодДействияЗаписей.КалендарныхДней
		|					КОГДА ВЫБОР
		|							КОГДА ОсновныеНачисления.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
		|								ТОГДА ОсновныеНачисления.НормаДней
		|							ИНАЧЕ ОсновныеНачисления.НормаЧасов
		|						КОНЕЦ = 0
		|						ТОГДА 0
		|					ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение) / ВЫБОР
		|							КОГДА ОсновныеНачисления.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
		|								ТОГДА ОсновныеНачисления.НормаДней
		|							ИНАЧЕ ОсновныеНачисления.НормаЧасов
		|						КОНЕЦ
		|				КОНЕЦ, 0) КАК ДоляБЛЗаСчетРаботодателя
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ОсновныеНачисления.Регистратор КАК Регистратор,
		|				ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|				ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|				ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|				ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|				ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|				ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|				ОсновныеНачисления.НормаДней КАК НормаДней,
		|				ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|				ОсновныеНачисления.НормаЧасов КАК НормаЧасов
		|			ИЗ
		|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|			ГДЕ
		|				ОсновныеНачисления.Регистратор = &Регистратор
		|				И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|				И РАЗНОСТЬДАТ(ОсновныеНачисления.ДатаНачалаСобытия, ОсновныеНачисления.ПериодДействияНачало, ДЕНЬ) < 2
		|				И ОсновныеНачисления.ДатаНачалаСобытия >= &ДатаЗакона202ФЗ
		|				И (НЕ ОсновныеНачисления.Сторно)) КАК ОсновныеНачисления
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
		|				ПО ОсновныеНачисления.ГрафикРаботы = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
		|					И ОсновныеНачисления.ВидУчетаВремени = ГрафикиРаботыПоВидамВремени.ВидУчетаВремени
		|					И (ОсновныеНачисления.ПериодДействия < &ДатаЗакона255ФЗ)
		|					И ОсновныеНачисления.ПериодДействияНачало <= ГрафикиРаботыПоВидамВремени.Дата
		|					И (ДОБАВИТЬКДАТЕ(ОсновныеНачисления.ДатаНачалаСобытия, ДЕНЬ, 1) >= ГрафикиРаботыПоВидамВремени.Дата)
		|					И ОсновныеНачисления.ПериодДействияКонец >= ГрафикиРаботыПоВидамВремени.Дата
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|					СУММА(ВЫБОР
		|							КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало = ФактическийПериодДействияЗаписей.ДатаНачалаСобытия
		|								ТОГДА ВЫБОР
		|										КОГДА ФактическийПериодДействияЗаписей.ПериодДействияКонец >= ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|											ТОГДА 2
		|										ИНАЧЕ 1
		|									КОНЕЦ
		|							КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало > ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|								ТОГДА 0
		|							ИНАЧЕ 1
		|						КОНЕЦ) КАК ДнейЗаСчетРаботодателя,
		|					СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|				ИЗ
		|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|							ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|								И (НЕ Сторно)
		|								И Регистратор = &Регистратор
		|								И ДатаНачалаСобытия >= &ДатаЗакона255ФЗ) КАК ФактическийПериодДействияЗаписей
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ФактическийПериодДействияЗаписей.НомерСтроки) КАК ФактическийПериодДействияЗаписей
		|				ПО ОсновныеНачисления.НомерСтроки = ФактическийПериодДействияЗаписей.НомерСтроки
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОсновныеНачисления.Регистратор,
		|			ОсновныеНачисления.ВидУчетаВремени,
		|			ОсновныеНачисления.ДатаНачалаСобытия,
		|			ОсновныеНачисления.ПериодДействияНачало,
		|			ОсновныеНачисления.ПериодДействияКонец,
		|			ОсновныеНачисления.НормаЧасов,
		|			ОсновныеНачисления.НормаДней,
		|			ОсновныеНачисления.НомерСтроки,
		|			ФактическийПериодДействияЗаписей.КалендарныхДней,
		|			ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя) КАК ДанныеУчетаБЛ
		|		ПО ДанныеУчета.НомерСтроки = ДанныеУчетаБЛ.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ДанныеУчета.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	СчетДт
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.Текст = ТекстЗапроса;
	
		Возврат Запрос.Выполнить();
		
	КонецЕсли;	
	
КонецФункции  // ПолучитьДанныеУчета

// получение первичных данных для бухучета
// первичные в данном случае, это те, для которых определено конкретное отражение
// в бухучете (не требуетяс предварительная обработка правила отражения в бухучете)
// или те которые определяют свой бухучет по базовым начисленияи и 
// при этом базируются на прошлом периоде
// 
// Параметры:
//  Основные - булево, если Истина, то получаем данные по основным начислениям иначе - по доп.
//
// Возвращаемое значение:
//  Результат запроса
// 
Функция ПолучитьДанныеУчета2010(ВыборкаПоШапкеДокумента, ЧитатьРасчетнуюБазу) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("Организация", ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", ВыборкаПоШапкеДокумента.ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	//получим отражение в учете сторно записей
	ОсновныеНачисленияСторноТекст =
	"ВЫБРАТЬ
	|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисления.Сотрудник,
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.Организация,
	|	ОсновныеНачисления.ПериодДействияНачало,
	|	ОсновныеНачисления.ПериодДействияКонец,
	|	ОсновныеНачисления.ВидРасчета,
	|	ОсновныеНачисления.СторнируемыйДокумент
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисленияСторно
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.Регистратор = &Регистратор
	|	И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
	|	И ОсновныеНачисления.Результат <> 0
	|	И ОсновныеНачисления.Сторно
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст = ОсновныеНачисленияСторноТекст;
	//временная таблица - ВТ_ОсновныеНачисленияСторно
	Результат = Запрос.Выполнить().Выгрузить();
	КоличествоСторноЗаписей = Результат[0].Количество;
	
	Если КоличествоСторноЗаписей <> 0 Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияСторно.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисленияСторно.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации
		|ПОМЕСТИТЬ ВТ_СторноСотрудники
		|ИЗ
		|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисленияСторно
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|		ПО ОсновныеНачисленияСторно.СторнируемыйДокумент = ОсновныеНачисления.Регистратор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ПериодРегистрации,
		|	ВидРасчета";
		
		//временная таблица - ВТ_СторноСотрудники
		Запрос.Выполнить();
		
		
		ОтражениеВУчетеСторноТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	БУОсновныеНачисления.СчетДт,
		|	БУОсновныеНачисления.СубконтоДт1,
		|	БУОсновныеНачисления.СубконтоДт2,
		|	БУОсновныеНачисления.СубконтоДт3,
		|	БУОсновныеНачисления.СчетКт,
		|	БУОсновныеНачисления.СубконтоКт1,
		|	БУОсновныеНачисления.СубконтоКт2,
		|	БУОсновныеНачисления.СубконтоКт3,
		|	БУОсновныеНачисления.СчетДтНУ,
		|	БУОсновныеНачисления.СубконтоДтНУ1,
		|	БУОсновныеНачисления.СубконтоДтНУ2,
		|	БУОсновныеНачисления.СубконтоДтНУ3,
		|	БУОсновныеНачисления.СчетКтНУ,
		|	БУОсновныеНачисления.СубконтоКтНУ1,
		|	БУОсновныеНачисления.СубконтоКтНУ2,
		|	БУОсновныеНачисления.СубконтоКтНУ3,
		|	БУОсновныеНачисления.СпособРаспределенияЗатрат,
		|	БУОсновныеНачисления.ОтражениеВУСН,
		|	БУОсновныеНачисления.Результат,
		|	ВЫБОР
		|		КОГДА БУОсновныеНачисления.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЕНВД))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОблагаетсяЕНВД,
		|	ВЫБОР
		|		КОГДА БУОсновныеНачисления.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_СПЕЦ_УСН), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС))
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом)
		|	КОНЕЦ КАК КодДоходаЕСН,
		|	БУОсновныеНачисления.ПериодДействияНачало,
		|	БУОсновныеНачисления.ПериодДействияКонец
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно
		|ИЗ
		|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|			БУОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|			БУОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|			БУОсновныеНачисления.Сотрудник КАК Сотрудник,
		|			БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|			БУОсновныеНачисления.Организация КАК Организация,
		|			БУОсновныеНачисления.Результат КАК Результат,
		|			БУОсновныеНачисления.СчетДт КАК СчетДт,
		|			БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
		|			БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
		|			БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
		|			БУОсновныеНачисления.СчетКт КАК СчетКт,
		|			БУОсновныеНачисления.СубконтоКт1 КАК СубконтоКт1,
		|			БУОсновныеНачисления.СубконтоКт2 КАК СубконтоКт2,
		|			БУОсновныеНачисления.СубконтоКт3 КАК СубконтоКт3,
		|			БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
		|			БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|			БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|			БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|			БУОсновныеНачисления.СчетКтНУ КАК СчетКтНУ,
		|			БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|			БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|			БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
		|			БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|			БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
		|			БУОсновныеНачисления.ДокументОснование КАК ДокументОснование
		|		ИЗ
		|			РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
		|		ГДЕ
		|			(БУОсновныеНачисления.ПериодРегистрации, БУОсновныеНачисления.Сотрудник, БУОсновныеНачисления.ВидРасчета) В
		|					(ВЫБРАТЬ
		|						ОсновныеНачисления.ПериодРегистрации,
		|						ОсновныеНачисления.Сотрудник,
		|						ОсновныеНачисления.ВидРасчета
		|					ИЗ
		|						ВТ_СторноСотрудники КАК ОсновныеНачисления)
		|			И (НЕ БУОсновныеНачисления.Сторно)) КАК БУОсновныеНачисления
		|		ПО ОсновныеНачисления.ВидРасчета = БУОсновныеНачисления.ВидРасчета
		|			И ОсновныеНачисления.Сотрудник = БУОсновныеНачисления.Сотрудник
		|			И ОсновныеНачисления.Организация = БУОсновныеНачисления.Организация
		|			И ОсновныеНачисления.ФизЛицо = БУОсновныеНачисления.ФизЛицо
		|			И ОсновныеНачисления.СторнируемыйДокумент = БУОсновныеНачисления.ДокументОснование
		|			И (БУОсновныеНачисления.ПериодДействияНачало >= ОсновныеНачисления.ПериодДействияНачало)
		|			И (БУОсновныеНачисления.ПериодДействияКонец <= ОсновныеНачисления.ПериодДействияКонец)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки";
		
	Иначе
		
		ОтражениеВУчетеСторноТекст = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
		|	НЕОПРЕДЕЛЕНО КАК СчетДт,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	НЕОПРЕДЕЛЕНО КАК СчетКт,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	НЕОПРЕДЕЛЕНО КАК СчетДтНУ,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3,
		|	НЕОПРЕДЕЛЕНО КАК СчетКтНУ,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3,
		|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСН,
		|	НЕОПРЕДЕЛЕНО КАК ОблагаетсяЕНВД,
		|	НЕОПРЕДЕЛЕНО КАК ПериодДействияНачало,
		|	НЕОПРЕДЕЛЕНО КАК ПериодДействияКонец,
		|	НЕОПРЕДЕЛЕНО КАК КодДоходаЕСН,
		|	0 КАК Результат
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно";
		
	КонецЕсли;
	
	Запрос.Текст = ОтражениеВУчетеСторноТекст;
	//временная таблица - ВТ_ОтражениеВУчетеСторно
	Запрос.Выполнить();

	Если ЧитатьРасчетнуюБазу Тогда
		
		Измерения = Новый Массив(1);
		Измерения[0] = "Сотрудник";
		
		Запрос.УстановитьПараметр("парамИзмерения", Измерения);
		
		Разрезы = Новый Массив(18);
		Разрезы[0] = "СчетДт";
		Разрезы[1] = "СубконтоДт1";
		Разрезы[2] = "СубконтоДт2";
		Разрезы[3] = "СубконтоДт3";
		Разрезы[4] = "СчетКт";
		Разрезы[5] = "СубконтоКт1";
		Разрезы[6] = "СубконтоКт2";
		Разрезы[7] = "СубконтоКт3";
		Разрезы[8] = "СчетДтНУ";
		Разрезы[9] = "СчетКтНУ";
		Разрезы[10] = "СубконтоДтНУ1";
		Разрезы[11] = "СубконтоДтНУ2";
		Разрезы[12] = "СубконтоДтНУ3";
		Разрезы[13] = "СубконтоКтНУ1";
		Разрезы[14] = "СубконтоКтНУ2";
		Разрезы[15] = "СубконтоКтНУ3";
		Разрезы[16] = "СпособРаспределенияЗатрат";
		Разрезы[17] = "ОтражениеВУСН";	
		
		Запрос.УстановитьПараметр("парамРазрезыБУ", Разрезы);

		Разрезы = Новый Массив(19);
		Разрезы[0] = "СчетДт";
		Разрезы[1] = "СубконтоДт1";
		Разрезы[2] = "СубконтоДт2";
		Разрезы[3] = "СубконтоДт3";
		Разрезы[4] = "СчетКт";
		Разрезы[5] = "СубконтоКт1";
		Разрезы[6] = "СубконтоКт2";
		Разрезы[7] = "СубконтоКт3";
		Разрезы[8] = "СчетДтНУ";
		Разрезы[9] = "СчетКтНУ";
		Разрезы[10] = "СубконтоДтНУ1";
		Разрезы[11] = "СубконтоДтНУ2";
		Разрезы[12] = "СубконтоДтНУ3";
		Разрезы[13] = "СубконтоКтНУ1";
		Разрезы[14] = "СубконтоКтНУ2";
		Разрезы[15] = "СубконтоКтНУ3";
		Разрезы[16] = "СпособРаспределенияЗатрат";
		Разрезы[17] = "ОтражениеВУСН";	
		Разрезы[18] = "ВидРасчета";	
		
		Запрос.УстановитьПараметр("парамРазрезыДопБУ", Разрезы);

		РазрезыДляБЛ = Новый Массив(1);
		РазрезыДляБЛ[0] = "ВидРасчета";
		Запрос.УстановитьПараметр("парамРазрезыБЛ",	РазрезыДляБЛ);
		
		ОсновнойЗаработок = Новый Массив(4);
		ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010;
		ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
		ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010;
		ОсновнойЗаработок[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
		Запрос.УстановитьПараметр("ОсновнойЗаработок", ОсновнойЗаработок);
		
		Запрос.УстановитьПараметр("ДатаЗакона213ФЗ",ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
		Запрос.УстановитьПараметр("Сотрудник", ВыборкаПоШапкеДокумента.Сотрудник);
		Запрос.УстановитьПараметр("ФизЛицо", ВыборкаПоШапкеДокумента.ФизЛицо);
		Запрос.УстановитьПараметр("парамДатаС",ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало);
		Запрос.УстановитьПараметр("парамДатаПо",ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаОкончание);
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ОсновныеНачисления.Результат КАК Результат,
		|	ОсновныеНачисления.ДополнительныйРезультат,
		|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	ОсновныеНачисления.Сторно КАК Сторно,
		|	ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
		|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание
		|ПОМЕСТИТЬ ВТЗаписиРегистра
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.Регистратор = &Регистратор
		|	И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходахОбороты.Период КАК Период,
		|	СтраховыеВзносыСведенияОДоходахОбороты.ВидДохода КАК ВидДохода,
		|	СтраховыеВзносыСведенияОДоходахОбороты.СкидкаОборот
		|ПОМЕСТИТЬ ВТДанныеУчетаСкидок
		|ИЗ
		|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(
		|			&парамДатаС,
		|			&парамДатаПо,
		|			Месяц,
		|			ФизЛицо = &ФизЛицо
		|				И Организация = &Организация
		|				И ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка))) КАК СтраховыеВзносыСведенияОДоходахОбороты
		|ГДЕ
		|	СтраховыеВзносыСведенияОДоходахОбороты.Период >= &ДатаЗакона213ФЗ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ),
		|	ЕСНСведенияОДоходах.КодДоходаЕСН,
		|	СУММА(ЕСНСведенияОДоходах.Скидка)
		|ИЗ
		|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
		|ГДЕ
		|	ЕСНСведенияОДоходах.ФизЛицо = &ФизЛицо
		|	И ЕСНСведенияОДоходах.Организация = &Организация
		|	И ЕСНСведенияОДоходах.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.МатпомощьПриРожденииРебенка))
		|	И ЕСНСведенияОДоходах.Период МЕЖДУ &парамДатаС И &парамДатаПо
		|	И ЕСНСведенияОДоходах.Период < &ДатаЗакона213ФЗ
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСНСведенияОДоходах.КодДоходаЕСН,
		|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период,
		|	ВидДохода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(БазаДополнительныеНачисления.РезультатБаза) КАК РезультатБаза,
		|	БазаДополнительныеНачисления.НомерСтроки,
		|	ВЫБОР
		|		КОГДА БазаДополнительныеНачисления.БазовыйПериодНачало < &ДатаЗакона213ФЗ
		|			ТОГДА БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаЕСН
		|		ИНАЧЕ БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
		|	КОНЕЦ КАК КодДоходаСтраховыеВзносы,
		|	НАЧАЛОПЕРИОДА(БазаДополнительныеНачисления.БазовыйПериодНачало, МЕСЯЦ) КАК БазовыйПериодНачало
		|ПОМЕСТИТЬ ВТБазаДопНачисленийПоБЛ
		|ИЗ
		|	РегистрРасчета.РасчетСреднегоЗаработка.БазаДополнительныеНачисленияРаботниковОрганизаций(
		|			&парамИзмерения,
		|			&парамИзмерения,
		|			&парамРазрезыБЛ,
		|			Регистратор = &Регистратор
		|				И Результат <> 0
		|				И (НЕ Сторно)
		|				И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|				И ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))) КАК БазаДополнительныеНачисления
		|ГДЕ
		|	ВЫБОР
		|			КОГДА БазаДополнительныеНачисления.БазовыйПериодНачало < &ДатаЗакона213ФЗ
		|				ТОГДА БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаЕСН
		|			ИНАЧЕ БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
		|		КОНЕЦ В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.МатпомощьПриРожденииРебенка))
		|
		|СГРУППИРОВАТЬ ПО
		|	БазаДополнительныеНачисления.НомерСтроки,
		|	НАЧАЛОПЕРИОДА(БазаДополнительныеНачисления.БазовыйПериодНачало, МЕСЯЦ),
		|	ВЫБОР
		|		КОГДА БазаДополнительныеНачисления.БазовыйПериодНачало < &ДатаЗакона213ФЗ
		|			ТОГДА БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаЕСН
		|		ИНАЧЕ БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
		|	КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(БазаДополнительныеНачисления.РезультатБаза) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	БазовыйПериодНачало,
		|	КодДоходаСтраховыеВзносы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БазаДопНачисленийПоВР.НомерСтроки КАК НомерСтроки,
		|	БазаДопНачисленийПоВР.КодДоходаСтраховыеВзносы КАК КодДоходаСтраховыеВзносы,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДанныеУчетаСкидок.СкидкаОборот, 0) > БазаДопНачисленийПоВР.РезультатБаза
		|			ТОГДА 0
		|		ИНАЧЕ 1 - ЕСТЬNULL(ДанныеУчетаСкидок.СкидкаОборот, 0) / БазаДопНачисленийПоВР.РезультатБаза
		|	КОНЕЦ КАК КоэффициентУчетаСкидки
		|ПОМЕСТИТЬ ВТКоэффициентыСкидок
		|ИЗ
		|	ВТБазаДопНачисленийПоБЛ КАК БазаДопНачисленийПоВР
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеУчетаСкидок КАК ДанныеУчетаСкидок
		|		ПО БазаДопНачисленийПоВР.КодДоходаСтраховыеВзносы = ДанныеУчетаСкидок.ВидДохода
		|			И БазаДопНачисленийПоВР.БазовыйПериодНачало = ДанныеУчетаСкидок.Период
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ЕСТЬNULL(ДанныеУчетаСкидок.СкидкаОборот, 0) > БазаДопНачисленийПоВР.РезультатБаза
		|				ТОГДА 0
		|			ИНАЧЕ 1 - ЕСТЬNULL(ДанныеУчетаСкидок.СкидкаОборот, 0) / БазаДопНачисленийПоВР.РезультатБаза
		|		КОНЕЦ < 1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки,
		|	КодДоходаСтраховыеВзносы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА БазаСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|			ТОГДА &Сотрудник
		|		ИНАЧЕ БазаСреднегоЗаработка.Сотрудник
		|	КОНЕЦ КАК Сотрудник,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработка.СпособРасчета КАК СпособРасчета,
		|	БазаСреднегоЗаработка.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
		|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
		|	БазаСреднегоЗаработка.РезультатБаза
		|ПОМЕСТИТЬ ВТ_БазаБУОсновныеНачисления
		|ИЗ
		|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
		|			&парамИзмерения,
		|			&парамИзмерения,
		|			&парамРазрезыБУ,
		|			Регистратор = &Регистратор
		|				И ВидРасчета В (&ОсновнойЗаработок)
		|				И (НЕ Сторно)
		|				И Результат <> 0
		|				И СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)) КАК БазаСреднегоЗаработка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА БазаСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|			ТОГДА &Сотрудник
		|		ИНАЧЕ БазаСреднегоЗаработка.Сотрудник
		|	КОНЕЦ КАК Сотрудник,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработка.СпособРасчета,
		|	БазаСреднегоЗаработка.СпособРасчета КАК СпособРасчета,
		|	БазаСреднегоЗаработка.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
		|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
		|	БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза,
		|	ВЫБОР
		|		КОГДА БазаСреднегоЗаработка.БазовыйПериодНачало < &ДатаЗакона213ФЗ
		|			ТОГДА БазаСреднегоЗаработка.ВидРасчетаРазрез.КодДоходаЕСН
		|		ИНАЧЕ БазаСреднегоЗаработка.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
		|	КОНЕЦ КАК КодДоходаСтраховыеВзносы,
		|	БазаСреднегоЗаработка.НомерСтроки
		|ПОМЕСТИТЬ ВТ_БазаБУДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
		|			&парамИзмерения,
		|			&парамИзмерения,
		|			&парамРазрезыДопБУ,
		|			Регистратор = &Регистратор
		|				И ВидРасчета В (&ОсновнойЗаработок)
		|				И (НЕ Сторно)
		|				И Результат <> 0
		|				И СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)) КАК БазаСреднегоЗаработка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БазаСреднегоЗаработка.Регистратор,
		|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
		|ПОМЕСТИТЬ БазаСреднегоЗаработка
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеНачисления.Регистратор КАК Регистратор,
		|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
		|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
		|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
		|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
		|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
		|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|		БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза
		|	ИЗ
		|		ВТЗаписиРегистра КАК ОсновныеНачисления
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУОсновныеНачисления КАК БазаСреднегоЗаработка
		|			ПО ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
		|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
		|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
		|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
		|	ГДЕ
		|		(НЕ ОсновныеНачисления.Сторно)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОсновныеНачисления.Регистратор,
		|		ОсновныеНачисления.НомерСтроки,
		|		БазаСреднегоЗаработка.СчетДтРазрез,
		|		БазаСреднегоЗаработка.СчетКтРазрез,
		|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|		БазаСреднегоЗаработка.СчетДтНУРазрез,
		|		БазаСреднегоЗаработка.СчетКтНУРазрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|		БазаСреднегоЗаработка.РезультатБаза * ЕСТЬNULL(КоэффициентыСкидок.КоэффициентУчетаСкидки, 1)
		|	ИЗ
		|		ВТЗаписиРегистра КАК ОсновныеНачисления
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУДополнительныеНачисления КАК БазаСреднегоЗаработка
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыСкидок КАК КоэффициентыСкидок
		|				ПО БазаСреднегоЗаработка.НомерСтроки = КоэффициентыСкидок.НомерСтроки
		|					И БазаСреднегоЗаработка.КодДоходаСтраховыеВзносы = КоэффициентыСкидок.КодДоходаСтраховыеВзносы
		|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
		|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
		|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
		|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
		|	ГДЕ
		|		(НЕ ОсновныеНачисления.Сторно)) КАК БазаСреднегоЗаработка
		|ГДЕ
		|	БазаСреднегоЗаработка.РезультатБаза <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	БазаСреднегоЗаработка.Регистратор,
		|	БазаСреднегоЗаработка.НомерСтроки,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|	СУММА(ВЫБОР
		|			КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало = ФактическийПериодДействияЗаписей.ДатаНачалаСобытия
		|				ТОГДА ВЫБОР
		|						КОГДА ФактическийПериодДействияЗаписей.ПериодДействияКонец >= ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|							ТОГДА 2
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало > ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК ДнейЗаСчетРаботодателя,
		|	СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|ПОМЕСТИТЬ ВТФактическийПериодДействияЗаписей

		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|			ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|				И Регистратор = &Регистратор
		|				И (НЕ Сторно)) КАК ФактическийПериодДействияЗаписей
		|
		|СГРУППИРОВАТЬ ПО
		|	ФактическийПериодДействияЗаписей.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Организация КАК Организация,
		|	&ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.Сторно,
		|	ДанныеУчета.Результат,
		|	ДанныеУчета.ДополнительныйРезультат,
		|	ЕСТЬNULL(ОтражениеВУчетеСторно.ПериодДействияНачало, ДанныеУчета.ПериодДействияНачало) КАК ПериодДействияНачало,
		|	ЕСТЬNULL(ОтражениеВУчетеСторно.ПериодДействияКонец, ДанныеУчета.ПериодДействияКонец) КАК ПериодДействияКонец,
		|	ДанныеУчета.ГрафикРаботы,
		|	ДанныеУчета.ВидУчетаВремени,
		|	ДанныеУчета.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
		|	ВЫБОР
		|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоЕНВД,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза,
		|	ЕСТЬNULL(ДанныеУчетаБЛ.ДнейЗаСчетРаботодателя / ДанныеУчетаБЛ.КалендарныхДней, 0) КАК ДоляБЛЗаСчетРаботодателя,
		|	ДанныеУчета.ВидРасчета.Наименование,
		|	ОтражениеВУчетеСторно.КодДоходаЕСН КАК КодДоходаЕСН,
		|	ОтражениеВУчетеСторно.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ОтражениеВУчетеСторно.СчетДт КАК СчетДт,
		|	ОтражениеВУчетеСторно.СубконтоДт1,
		|	ОтражениеВУчетеСторно.СубконтоДт2,
		|	ОтражениеВУчетеСторно.СубконтоДт3,
		|	ОтражениеВУчетеСторно.СчетКт,
		|	ОтражениеВУчетеСторно.СубконтоКт1,
		|	ОтражениеВУчетеСторно.СубконтоКт2,
		|	ОтражениеВУчетеСторно.СубконтоКт3,
		|	ОтражениеВУчетеСторно.СчетДтНУ,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ1,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ2,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ3,
		|	ОтражениеВУчетеСторно.СчетКтНУ,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ1,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ2,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ3,
		|	ОтражениеВУчетеСторно.СпособРаспределенияЗатрат,
		|	ОтражениеВУчетеСторно.ОтражениеВУСН,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ДанныеУчета.ПодразделениеОрганизации
		|ИЗ
		|	ВТЗаписиРегистра КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФактическийПериодДействияЗаписей КАК ДанныеУчетаБЛ
		|		ПО ДанныеУчета.НомерСтроки = ДанныеУчетаБЛ.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ДанныеУчета.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
		|		ПО БазаСреднегоЗаработка.СчетДтРазрез = СчетаУчетаПоДеятельностиЕНВД.Счет
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	СчетДтРазрез,
		|	СчетДт
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.Текст = ТекстЗапроса;
		РезультатЗапроса = Запрос.Выполнить();
		
		Возврат РезультатЗапроса;
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ОсновныеНачисления.Результат КАК Результат,
		|	ОсновныеНачисления.ДополнительныйРезультат,
		|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	ОсновныеНачисления.Сторно КАК Сторно,
		|	ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТЗаписиРегистра
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.Регистратор = &Регистратор
		|	И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Организация КАК Организация,
		|	&ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.Сторно,
		|	ДанныеУчета.Результат,
		|	ДанныеУчета.ДополнительныйРезультат,
		|	ЕСТЬNULL(ОтражениеВУчетеСторно.ПериодДействияНачало, ДанныеУчета.ПериодДействияНачало) КАК ПериодДействияНачало,
		|	ЕСТЬNULL(ОтражениеВУчетеСторно.ПериодДействияКонец, ДанныеУчета.ПериодДействияКонец) КАК ПериодДействияКонец,
		|	ДанныеУчета.ГрафикРаботы,
		|	ДанныеУчета.ВидУчетаВремени,
		|	ДанныеУчета.ДатаНачалаСобытия,
		|	ЕСТЬNULL(ДанныеУчетаБЛ.ДнейЗаСчетРаботодателя / ДанныеУчетаБЛ.КалендарныхДней, 0) КАК ДоляБЛЗаСчетРаботодателя,
		|	ДанныеУчета.ВидРасчета.Наименование,
		|	ЛОЖЬ КАК ЭтоЕНВД,
		|	ОтражениеВУчетеСторно.КодДоходаЕСН КАК КодДоходаЕСН,
		|	ОтражениеВУчетеСторно.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ОтражениеВУчетеСторно.СчетДт КАК СчетДт,
		|	ОтражениеВУчетеСторно.СубконтоДт1,
		|	ОтражениеВУчетеСторно.СубконтоДт2,
		|	ОтражениеВУчетеСторно.СубконтоДт3,
		|	ОтражениеВУчетеСторно.СчетКт,
		|	ОтражениеВУчетеСторно.СубконтоКт1,
		|	ОтражениеВУчетеСторно.СубконтоКт2,
		|	ОтражениеВУчетеСторно.СубконтоКт3,
		|	ОтражениеВУчетеСторно.СчетДтНУ,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ1,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ2,
		|	ОтражениеВУчетеСторно.СубконтоДтНУ3,
		|	ОтражениеВУчетеСторно.СчетКтНУ,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ1,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ2,
		|	ОтражениеВУчетеСторно.СубконтоКтНУ3,
		|	ОтражениеВУчетеСторно.СпособРаспределенияЗатрат,
		|	ОтражениеВУчетеСторно.ОтражениеВУСН,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ДанныеУчета.ПодразделениеОрганизации
		|ИЗ
		|	ВТЗаписиРегистра КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|			СУММА(ВЫБОР
		|					КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало = ФактическийПериодДействияЗаписей.ДатаНачалаСобытия
		|						ТОГДА ВЫБОР
		|								КОГДА ФактическийПериодДействияЗаписей.ПериодДействияКонец >= ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|									ТОГДА 2
		|								ИНАЧЕ 1
		|							КОНЕЦ
		|					КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало > ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|						ТОГДА 0
		|					ИНАЧЕ 1
		|				КОНЕЦ) КАК ДнейЗаСчетРаботодателя,
		|			СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|		ИЗ
		|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|					ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|						И Регистратор = &Регистратор
		|						И (НЕ Сторно)) КАК ФактическийПериодДействияЗаписей
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ФактическийПериодДействияЗаписей.НомерСтроки) КАК ДанныеУчетаБЛ
		|		ПО ДанныеУчета.НомерСтроки = ДанныеУчетаБЛ.НомерСтроки
		|			И ((НЕ ДанныеУчета.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ДанныеУчета.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	СчетДт
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.Текст = ТекстЗапроса;
	
		Возврат Запрос.Выполнить();
		
	КонецЕсли;	
	
КонецФункции  // ПолучитьДанныеУчета

