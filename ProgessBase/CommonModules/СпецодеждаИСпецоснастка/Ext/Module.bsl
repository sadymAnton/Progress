///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОГАШЕНИЯ СТОИМОСТИ

// Функция формирует текст запроса по остаткам материалов в эксплуатации.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция СформироватьТекстЗапросаПоОстаткамВЭксплуатацииРасширеннаяАналитика()
	
	ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		РегистрАналитикаУчетаЗатрат.Затрата КАК Номенклатура,
	|		РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты КАК ХарактеристикаНоменклатуры,
	|		РегистрАналитикаУчетаЗатрат.СерияЗатраты КАК СерияНоменклатуры,
	|		
	|		РегистрАналитикаУчетаПартий.ФизЛицо,
	|		РегистрАналитикаУчетаПартий.НазначениеИспользования,
	|		РегистрАналитикаУчетаПартий.ДокументПередачи,
	|		
	|		РегистрАналитикаУчетаЗатрат.Затрата.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|		РегистрАналитикаУчетаЗатрат.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|		
	|		0 КАК КоличествоСписано,
	|
	|		//ДляУпрУчета СУММА(УчетЗатрат.КоличествоОстаток) КАК КоличествоУпр,
	|		//ДляУпрУчета 0 КАК КоличествоБух,
	|		//ДляУпрУчета 0 КАК КоличествоНал,
	|
	|		//ДляБухУчета 0 КАК КоличествоУпр,
	|		//ДляБухУчета СУММА(УчетЗатрат.КоличествоОстаток) КАК КоличествоБух,
	|		//ДляБухУчета СУММА(УчетЗатрат.КоличествоНУОстаток) КАК КоличествоНал,
	|		
	|		//ДляУпрУчета СУММА(УчетЗатрат.СтоимостьОстаток) КАК Сумма,
	|		//ДляУпрУчета 0 КАК СуммаБух,
	|
	|		//ДляБухУчета 0 КАК Сумма,
	|		//ДляБухУчета СУММА(УчетЗатрат.СтоимостьОстаток) КАК СуммаБух,
	|		
	|		//ДляУпрУчета Неопределено КАК СчетУчета,
	|		//ДляУпрУчета Неопределено КАК СчетУчетаНУ
	|		
	|		//ДляБухУчета РегистрАналитикаВидаУчета.СчетУчета,
	|		//ДляБухУчета РегистрАналитикаВидаУчета.СчетУчетаНУ
	|		
	|	ИЗ
	|		РегистрНакопления.УчетЗатрат%СуффиксРегл%.Остатки(&КонГраница, 
	|			АналитикаВидаУчета В (
	|				ВЫБРАТЬ
	|					Ссылка
	|				ИЗ
	|					РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|				ГДЕ
	|					(РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.МатериалыВЭксплуатации)
	|					ИЛИ РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.ПогашеннаяСтоимость))
	|					//ДляУпрУчета И Подразделение = &Подразделение
	|					//ДляРеглУчета И Организация = &Организация
	|					//ДляРеглУчета И ПодразделениеОрганизации = &ПодразделениеОрганизации
	|				)
	|			И АналитикаУчетаПартий В (
	|				ВЫБРАТЬ
	|					Ссылка
	|				ИЗ
	|					РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|				ГДЕ
	|					НазначениеИспользования <> ЗНАЧЕНИЕ(Справочник.НазначенияИспользования.ПустаяСсылка)
	|					//УсловиеПоСроку
	|					//УсловиеДокПередачи
	|					//УсловиеПоМОЛ
	|			)
	|			
	|		) КАК УчетЗатрат
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|		ПО
	|			УчетЗатрат.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|		ПО
	|			УчетЗатрат.АналитикаУчетаЗатрат = РегистрАналитикаУчетаЗатрат.Ссылка
	|			
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|		ПО
	|			УчетЗатрат.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|																					   
	|	СГРУППИРОВАТЬ ПО
	|		РегистрАналитикаУчетаЗатрат.Затрата,
	|		РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты,
	|		РегистрАналитикаУчетаЗатрат.СерияЗатраты,
	|		РегистрАналитикаУчетаПартий.ФизЛицо,
	|		РегистрАналитикаУчетаПартий.НазначениеИспользования,
	|		РегистрАналитикаУчетаПартий.ДокументПередачи,
	|		РегистрАналитикаУчетаЗатрат.Затрата.ЕдиницаХраненияОстатков,
	|		РегистрАналитикаУчетаЗатрат.Затрата.ЕдиницаХраненияОстатков.Коэффициент,
	|		РегистрАналитикаВидаУчета.СчетУчета,
	|		РегистрАналитикаВидаУчета.СчетУчетаНУ
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоОстаткамВЭксплуатацииРасширеннаяАналитика()

// Функция формирует текст запроса по остаткам материалов в эксплуатации.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция СформироватьТекстЗапросаПоОстаткамВЭксплуатации()
	
	ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		ПартииМатериалов.Номенклатура,
	|		ПартииМатериалов.ХарактеристикаНоменклатуры,
	|		ПартииМатериалов.СерияНоменклатуры,
	|		ПартииМатериалов.ФизЛицо,
	|		ПартииМатериалов.НазначениеИспользования,
	|		ПартииМатериалов.ДокументПередачи,
	|		
	|		ПартииМатериалов.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|		ПартииМатериалов.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|		
	|		0 КАК КоличествоСписано,
	|
	|		//ДляУпрУчета ПартииМатериалов.КоличествоОстаток КАК КоличествоУпр,
	|		//ДляУпрУчета 0 КАК КоличествоБух,
	|		//ДляУпрУчета 0 КАК КоличествоНал,
	|
	|		//ДляБухУчета 0 КАК КоличествоУпр,
	|		//ДляБухУчета ПартииМатериалов.КоличествоОстаток КАК КоличествоБух,
	|		//ДляБухУчета 0 КАК КоличествоНал,
	|
	|		//ДляНалУчета 0 КАК КоличествоУпр,
	|		//ДляНалУчета 0 КАК КоличествоБух,
	|		//ДляНалУчета ПартииМатериалов.КоличествоОстаток КАК КоличествоНал,
	|		
	|		//ДляУпрУчета ПартииМатериалов.СтоимостьОстаток - ПартииМатериалов.ПогашеннаяСтоимостьОстаток КАК Сумма,
	|		//ДляУпрУчета 0 КАК СуммаБух,
	|
	|		//ДляБухУчета 0 КАК Сумма,
	|		//ДляБухУчета ПартииМатериалов.СтоимостьОстаток - ПартииМатериалов.ПогашеннаяСтоимостьОстаток КАК СуммаБух,
	|
	|		//ДляНалУчета 0 КАК Сумма,
	|		//ДляНалУчета 0 КАК СуммаБух,
	|		
	|		//ДляУпрУчета Неопределено КАК СчетУчета,
	|		//ДляУпрУчета Неопределено КАК СчетУчетаНУ
	|		
	|		//ДляБухУчета ПартииМатериалов.СчетУчета,
	|		//ДляБухУчета Неопределено КАК СчетУчетаНУ
	|		
	|		//ДляНалУчета ПартииМатериаловБух.СчетУчета,
	|		//ДляНалУчета ПартииМатериалов.СчетУчета КАК СчетУчетаНУ
	|	ИЗ
	|		РегистрНакопления.ПартииМатериаловВЭксплуатации%СуффиксУчета%.Остатки(&КонГраница, 
	|			//ДляУпрУчета Подразделение = &Подразделение
	|			//ДляРеглУчета Подразделение = &ПодразделениеОрганизации
	|			//УсловиеПоСроку
	|			//УсловиеДокПередачи
	|			//УсловиеПоМОЛ
	|		) КАК ПартииМатериалов
	|																					   
	|	//ДляНалУчета ЛЕВОЕ СОЕДИНЕНИЕ
	|	//ДляНалУчета 	РегистрНакопления.ПартииМатериаловВЭксплуатацииБухгалтерскийУчет.Остатки(&КонГраница,
	|	//ДляНалУчета 		Подразделение = &ПодразделениеОрганизации 
	|	//ДляНалУчета 		//УсловиеПоСроку
	|	//ДляНалУчета 		//УсловиеДокПередачи
	|	//ДляНалУчета 		//УсловиеПоМОЛ
	|	//ДляНалУчета 	) КАК ПартииМатериаловБух
	|	//ДляНалУчета ПО
	|	//ДляНалУчета 	ПартииМатериалов.Номенклатура = ПартииМатериаловБух.Номенклатура
	|	//ДляНалУчета 	И ПартииМатериалов.ХарактеристикаНоменклатуры = ПартииМатериаловБух.ХарактеристикаНоменклатуры
	|	//ДляНалУчета 	И ПартииМатериалов.СерияНоменклатуры = ПартииМатериаловБух.СерияНоменклатуры
	|	//ДляНалУчета 	И ПартииМатериалов.ФизЛицо = ПартииМатериаловБух.ФизЛицо
	|	//ДляНалУчета 	И ПартииМатериалов.НазначениеИспользования = ПартииМатериаловБух.НазначениеИспользования
	|	//ДляНалУчета 	И ПартииМатериалов.ДокументПередачи = ПартииМатериаловБух.ДокументПередачи
	|
	|	//ДляНалУчета ЛЕВОЕ СОЕДИНЕНИЕ
	|	//ДляНалУчета 	СоответствиеСчетов КАК Соответствие
	|	//ДляНалУчета ПО
	|	//ДляНалУчета 	ПартииМатериаловБух.СчетУчета = Соответствие.СчетБУ
	|	//ДляНалУчета 	И ПартииМатериалов.СчетУчета = Соответствие.СчетНУ
	|
	|	//ДляНалУчета ГДЕ
	|	//ДляНалУчета 	НЕ Соответствие.СчетБУ ЕСТЬ NULL
    |";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоОстаткамВЭксплуатации()

// Функция формирует текст запроса по остаткам материалов в эксплуатации.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция СформироватьТекстЗапросаПоСписаннымМатериаламИзЭксплуатации()
	
	ТекстЗапроса = "
	|	ВЫБРАТЬ
	|		СписанныеМатериалы.Номенклатура,
	|		СписанныеМатериалы.ХарактеристикаНоменклатуры,
	|		СписанныеМатериалы.СерияНоменклатуры,
	|		СписанныеМатериалы.ФизЛицо,
	|		СписанныеМатериалы.НазначениеИспользования,
	|		СписанныеМатериалы.ДокументПередачи	,
	|		
	|		СписанныеМатериалы.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|		СписанныеМатериалы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|		
	|		СУММА(СписанныеМатериалы.Количество) КАК КоличествоСписано,
	|		0 КАК КоличествоУпр,
	|		0 КАК КоличествоБух,
	|		0 КАК КоличествоНал,
	|		
	|		0 КАК Сумма,
	|		0 КАК СуммаБух,
	|		
	|		СписанныеМатериалы.СчетУчетаБУ КАК СчетУчета,
	|		СписанныеМатериалы.СчетУчетаНУ КАК СчетУчетаНУ
	|	ИЗ
	|		РегистрСведений.СписанныеМатериалыИзЭксплуатации КАК СписанныеМатериалы
	|
	|	ГДЕ
	|		СписанныеМатериалы.Период МЕЖДУ &НачДата И &КонДата
	|		И СписанныеМатериалы.Подразделение = &Подразделение 
	|		И СписанныеМатериалы.ПодразделениеОрганизации = &ПодразделениеОрганизации
	|
	|	СГРУППИРОВАТЬ ПО
	|		СписанныеМатериалы.Номенклатура,
	|		СписанныеМатериалы.ХарактеристикаНоменклатуры,
	|		СписанныеМатериалы.СерияНоменклатуры,
	|		СписанныеМатериалы.ФизЛицо,
	|		СписанныеМатериалы.НазначениеИспользования,
	|		СписанныеМатериалы.ДокументПередачи,
	|		СписанныеМатериалы.СчетУчетаБУ,
	|		СписанныеМатериалы.СчетУчетаНУ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		СписанныеМатериалы.Номенклатура,
	|		СписанныеМатериалы.ХарактеристикаНоменклатуры,
	|		СписанныеМатериалы.СерияНоменклатуры,
	|		СписанныеМатериалы.ФизЛицоПолучатель,
	|		СписанныеМатериалы.НазначениеИспользованияПолучатель,
	|		СписанныеМатериалы.ДокументПередачи,
	|		
	|		СписанныеМатериалы.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|		СписанныеМатериалы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|		
	|		СУММА(-СписанныеМатериалы.Количество) КАК КоличествоСписано,
	|		0 КАК КоличествоУпр,
	|		0 КАК КоличествоБух,
	|		0 КАК КоличествоНал,
	|		
	|		0 КАК Сумма,
	|		0 КАК СуммаБух,
	|		
	|		СписанныеМатериалы.СчетУчетаПолучательБУ КАК СчетУчета,
	|		СписанныеМатериалы.СчетУчетаПолучательНУ КАК СчетУчетаНУ
	|	ИЗ
	|		РегистрСведений.СписанныеМатериалыИзЭксплуатации КАК СписанныеМатериалы
	|
	|	ГДЕ
	|		СписанныеМатериалы.Период МЕЖДУ &НачДата И &КонДата
	|		И СписанныеМатериалы.ПодразделениеПолучатель = &Подразделение 
	|		И СписанныеМатериалы.ПодразделениеОрганизацииПолучатель = &ПодразделениеОрганизации
	|
	|	СГРУППИРОВАТЬ ПО
	|		СписанныеМатериалы.Номенклатура,
	|		СписанныеМатериалы.ХарактеристикаНоменклатуры,
	|		СписанныеМатериалы.СерияНоменклатуры,
	|		СписанныеМатериалы.ФизЛицоПолучатель,
	|		СписанныеМатериалы.НазначениеИспользованияПолучатель,
	|		СписанныеМатериалы.ДокументПередачи,
	|		СписанныеМатериалы.СчетУчетаПолучательБУ,
	|		СписанныеМатериалы.СчетУчетаПолучательНУ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоСписаннымМатериаламИзЭксплуатации()

// Процедура устанавливает параметры запроса по остаткам материалов в эксплуатации.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Текущий документ
//	СтруктураОтбора - Структура - Значения условий отбора остатков
//	Запрос - Запрос - Запрос по остаткам
//
Процедура УстановитьПараметрыЗапросаПоОстаткамВЭксплуатации(
	ДокументОбъект,
	СтруктураОтбора,
	Запрос
	)
	
	Дата = УправлениеЗатратами.ПолучитьДатуДляЗапроса(ДокументОбъект);
	
	Запрос.УстановитьПараметр("НачДата", НачалоМесяца(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("КонДата", Дата);
	Если КонецДня(Дата) = КонецМесяца(Дата) Тогда
		Запрос.УстановитьПараметр("КонГраница", Новый Граница(Дата, ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("КонГраница", Новый Граница(Дата, ВидГраницы.Включая));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Подразделение", ДокументОбъект.Подразделение);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", ДокументОбъект.ПодразделениеОрганизации);
	
	Если СтруктураОтбора <> Неопределено Тогда
		
		ВидОтбора = СтруктураОтбора.ВидОтбора;
		Если ВидОтбора = "ПоДокументуПередачи" Тогда
			Запрос.УстановитьПараметр("ДокПередачи", СтруктураОтбора.ДокументПередачи);
			
		ИначеЕсли ВидОтбора = "ПоСрокуЭксплуатации" Тогда
			Запрос.УстановитьПараметр("КолМесяцев", СтруктураОтбора.КолМесяцев);
			Запрос.УстановитьПараметр("ФизЛицо", СтруктураОтбора.ФизЛицо);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьПараметрыЗапросаПоОстаткамВЭксплуатации()

// Функция формирует запрос по остаткам материалов в эксплуатации.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Текущий документ
//	СтруктураОтбора - Структура - Значения условий отбора остатков
//
// Возвращаемое значение:
//	Запрос - Запрос по материалам в эксплуатации
//
Функция СформироватьЗапросПоОстаткамВЭксплуатации(
	ДокументОбъект,
	СтруктураОтбора
	)
	
	ТекстЗапросаСоответствиеСчетов = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеСчетов.СчетБУ КАК СчетБУ,
	|	СоответствиеСчетов.СчетНУ КАК СчетНУ
	|
	|ПОМЕСТИТЬ СоответствиеСчетов
	|ИЗ
	|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(&КонГраница,
	|		СчетНУ В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				СчетУчета КАК СчетУчета
	|			ИЗ
	|				РегистрНакопления.ПартииМатериаловВЭксплуатацииНалоговыйУчет.Остатки(&КонГраница,
	|					Подразделение = &ПодразделениеОрганизации
	|			) КАК ПартииМатериаловВЭксплуатации
	|		)
	|	) КАК СоответствиеСчетов
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПартииМатериалов.Номенклатура,
	|	ПартииМатериалов.ХарактеристикаНоменклатуры,
	|	ПартииМатериалов.СерияНоменклатуры,
	|	ПартииМатериалов.ФизЛицо,
	|	ПартииМатериалов.НазначениеИспользования,
	|	ПартииМатериалов.ДокументПередачи,
	|	
	|	ПартииМатериалов.ЕдиницаИзмерения,
	|	ПартииМатериалов.Коэффициент,
	|	
	|	ПартииМатериалов.СчетУчета КАК СчетУчетаБУ,
	|	ПартииМатериалов.СчетУчетаНУ,
	|	ПартииМатериалов.СчетУчета КАК СчетПередачиБУ,
	|	ПартииМатериалов.СчетУчетаНУ КАК СчетПередачиНУ,
	|	
	|	ПартииМатериалов.КоличествоСписано,
	|	ПартииМатериалов.КоличествоУпр,
	|	ПартииМатериалов.КоличествоБух,
	|	ПартииМатериалов.КоличествоНал,
	|	
	|	ПартииМатериалов.Сумма,
	|	ПартииМатериалов.СуммаБух
	|	
	|ИЗ (
	|
	|	//ТекстЗапросаПоСписаннымМатериаламИзЭксплуатации
	|	//ДляУпрУчета //ТекстЗапросаПоОстаткамВЭксплуатацииУУ
	|	//ДляУпрУчета //ДляБухУчета ОБЪЕДИНИТЬ ВСЕ
	|	//ДляБухУчета //ТекстЗапросаПоОстаткамВЭксплуатацииБУ
	|	//ДляБухУчета //ДляНалУчета ОБЪЕДИНИТЬ ВСЕ
	|	//ДляНалУчета //ТекстЗапросаПоОстаткамВЭксплуатацииНУ
	|	) КАК ПартииМатериалов
	|
	|ГДЕ
	|	Истина
	|	//УсловиеПоСроку
	|	//УсловиеДокПередачи
	|	//УсловиеПоМОЛ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПартииМатериалов.Номенклатура,
	|	ПартииМатериалов.ХарактеристикаНоменклатуры,
	|	ПартииМатериалов.СерияНоменклатуры,
	|	ПартииМатериалов.ФизЛицо,
	|	ПартииМатериалов.НазначениеИспользования,
	|	ПартииМатериалов.ДокументПередачи,
	|	ПартииМатериалов.СчетУчета,
	|	ПартииМатериалов.СчетУчетаНУ
	|
	|ИТОГИ 
	|	СУММА(КоличествоСписано),
	|	СУММА(КоличествоУпр),
	|	СУММА(КоличествоБух),
	|	СУММА(КоличествоНал),
	|	СУММА(Сумма),
	|	СУММА(СуммаБух)
	|ПО
	|	ПартииМатериалов.Номенклатура,
	|	ПартииМатериалов.ХарактеристикаНоменклатуры,
	|	ПартииМатериалов.СерияНоменклатуры,
	|	ПартииМатериалов.ФизЛицо,
	|	ПартииМатериалов.НазначениеИспользования,
	|	ПартииМатериалов.ЕдиницаИзмерения,
	|	ПартииМатериалов.Коэффициент,
	|	ПартииМатериалов.ДокументПередачи,
	|	ПартииМатериалов.СчетУчета
	|";
	
	ИспользоватьРасширеннуюАналитику = глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") 
		И (глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат") <= ДокументОбъект.Дата);
		
	Если ИспользоватьРасширеннуюАналитику Тогда
		РежимИспользованияРасширеннойАналитики = глЗначениеПеременной("РежимИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат");
		
		Если РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.УправленческийИРегламентированныйУчет
		   И ДокументОбъект.ОтражатьВУправленческомУчете
		Тогда
			ИспользоватьДанныеУправленческогоУчета = Истина;
			ИспользоватьДанныеБухгалтерскогоУчета  = Ложь;
		Иначе
			ИспользоватьДанныеУправленческогоУчета = Ложь;
			ИспользоватьДанныеБухгалтерскогоУчета  = Истина;
		КонецЕсли;
		
		ИспользоватьДанныеНалоговогоУчета = Ложь;
	Иначе
		ИспользоватьДанныеУправленческогоУчета = ДокументОбъект.ОтражатьВУправленческомУчете;
		ИспользоватьДанныеБухгалтерскогоУчета  = ДокументОбъект.ОтражатьВБухгалтерскомУчете;
		ИспользоватьДанныеНалоговогоУчета = ДокументОбъект.ОтражатьВНалоговомУчете;
		
		ТекстЗапроса = ТекстЗапросаСоответствиеСчетов + ТекстЗапроса;
	КонецЕсли;
		
	Если ИспользоватьДанныеУправленческогоУчета Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляУпрУчета", "");
	КонецЕсли;
	
	Если ИспользоватьДанныеБухгалтерскогоУчета Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляБухУчета", "");
	КонецЕсли;
	
	Если ИспользоватьДанныеНалоговогоУчета Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляНалУчета", "");
	КонецЕсли;

			
	Если ИспользоватьРасширеннуюАналитику Тогда
		ТекстЗапросаПоОстаткамВЭксплуатации = СформироватьТекстЗапросаПоОстаткамВЭксплуатацииРасширеннаяАналитика();
		ТекстЗапросаПоСписаннымМатериаламИзЭксплуатации = "";
	Иначе
		ТекстЗапросаПоОстаткамВЭксплуатации = СформироватьТекстЗапросаПоОстаткамВЭксплуатации();
		ТекстЗапросаПоСписаннымМатериаламИзЭксплуатации = СформироватьТекстЗапросаПоСписаннымМатериаламИзЭксплуатации();
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстЗапросаПоСписаннымМатериаламИзЭксплуатации) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстЗапросаПоСписаннымМатериаламИзЭксплуатации", ТекстЗапросаПоСписаннымМатериаламИзЭксплуатации);
	КонецЕсли;
	
	Если ИспользоватьДанныеУправленческогоУчета Тогда
		ТекстЗапросаПоОстаткам = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
			ТекстЗапросаПоОстаткамВЭксплуатации,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
		);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"//ТекстЗапросаПоОстаткамВЭксплуатацииУУ",
			ТекстЗапросаПоОстаткам
		);
	КонецЕсли;
	
	Если ИспользоватьДанныеБухгалтерскогоУчета Тогда
		ТекстЗапросаПоОстаткам = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
			ТекстЗапросаПоОстаткамВЭксплуатации,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
		);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"//ТекстЗапросаПоОстаткамВЭксплуатацииБУ",
			ТекстЗапросаПоОстаткам
		);
	КонецЕсли;
	
	Если ИспользоватьДанныеНалоговогоУчета Тогда
		ТекстЗапросаПоОстаткам = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(
			ТекстЗапросаПоОстаткамВЭксплуатации,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете
		);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"//ТекстЗапросаПоОстаткамВЭксплуатацииНУ",
			ТекстЗапросаПоОстаткам
		);
	КонецЕсли;
	
	Если СтруктураОтбора <> Неопределено Тогда
		
		УсловиеДокПередачи = "";
		УсловиеПоСроку = "";
		УсловиеПоМОЛ = "";
		
		ВидОтбора = СтруктураОтбора.ВидОтбора;
		Если ВидОтбора = "ПоДокументуПередачи" Тогда
			УсловиеДокПередачи = " И ДокументПередачи = &ДокПередачи ";
			
		ИначеЕсли ВидОтбора = "ПоСрокуЭксплуатации" Тогда
			
			ВидУсловия = СтруктураОтбора.Условие;
			Если ВидУсловия = Перечисления.УсловияОтбораМатериаловВЭксплуатации.СНеокончившимсяСрокомЭксплуатации Тогда
				УсловиеПоСроку = " И ДОБАВИТЬКДАТЕ(ДокументПередачи.Дата, МЕСЯЦ, НазначениеИспользования.СрокПолезногоИспользования) >= &КонДата ";
				
			ИначеЕсли ВидУсловия = Перечисления.УсловияОтбораМатериаловВЭксплуатации.СОкончившимсяСрокомЭксплуатации Тогда
				УсловиеПоСроку = " И ДОБАВИТЬКДАТЕ(ДокументПередачи.Дата, МЕСЯЦ, НазначениеИспользования.СрокПолезногоИспользования) <  &КонДата ";
				
			ИначеЕсли ВидУсловия = Перечисления.УсловияОтбораМатериаловВЭксплуатации.ДоОкончанияСрокаЭксплуатацииБолееМесяцев Тогда
				УсловиеПоСроку = " И ДОБАВИТЬКДАТЕ(ДокументПередачи.Дата, МЕСЯЦ, НазначениеИспользования.СрокПолезногоИспользования - &КолМесяцев) >= &КонДата ";
				
			ИначеЕсли ВидУсловия = Перечисления.УсловияОтбораМатериаловВЭксплуатации.ДоОкончанияСрокаЭксплуатацииМенееМесяцев Тогда
				УсловиеПоСроку = " И ДОБАВИТЬКДАТЕ(ДокументПередачи.Дата, МЕСЯЦ, НазначениеИспользования.СрокПолезногоИспользования - &КолМесяцев) <  &КонДата " +
					"И (НазначениеИспользования.СрокПолезногоИспользования - &КолМесяцев) >=0";
				
			ИначеЕсли ВидУсловия = Перечисления.УсловияОтбораМатериаловВЭксплуатации.НаходящимисяВЭксплуатацииБолееМесяцев Тогда
				УсловиеПоСроку = " И ДОБАВИТЬКДАТЕ(ДокументПередачи.Дата, МЕСЯЦ, &КолМесяцев) <  &КонДата ";
				
			ИначеЕсли ВидУсловия = Перечисления.УсловияОтбораМатериаловВЭксплуатации.НаходящимисяВЭксплуатацииМенееМесяцев Тогда
				УсловиеПоСроку = " И ДОБАВИТЬКДАТЕ(ДокументПередачи.Дата, МЕСЯЦ, &КолМесяцев) >= &КонДата ";
				
			ИначеЕсли ВидУсловия = Перечисления.УсловияОтбораМатериаловВЭксплуатации.МОЛ Тогда
				УсловиеПоМОЛ = " И ФизЛицо = &ФизЛицо ";
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(УсловиеДокПередачи) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеДокПередачи", УсловиеДокПередачи);
		КонецЕсли;
		Если Не ПустаяСтрока(УсловиеПоСроку) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеПоСроку", УсловиеПоСроку);
		КонецЕсли;
		Если Не ПустаяСтрока(УсловиеПоМОЛ) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеПоМОЛ", УсловиеПоМОЛ);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	УстановитьПараметрыЗапросаПоОстаткамВЭксплуатации(
		ДокументОбъект,
		СтруктураОтбора,
		Запрос
	);
	
	Возврат Запрос;
	
КонецФункции // СформироватьЗапросПоОстаткамВЭксплуатации()

// Процедура формирует таблицу остатков материалов в незавершенном производстве.
//
// Параметры:
//	ДокОбъект - ДокументОбъект - Текущий документ
//	ТаблицаМатериалы - ТабличнаяЧасть - Табличная часть документа
//	СтруктураОтбора - Структура - Значения условий отбора остатков
//	ИмяТабличнойЧасти - Имя табличной части документа
//
Процедура ЗаполнитьМатериалыПоОстаткамВЭксплуатации(
	ДокОбъект, 
	ТаблицаМатериалы, 
	СтруктураОтбора = Неопределено,
	ИмяТабличнойЧасти = "Материалы"
	) Экспорт
	
	ОтражатьВУправленческомУчете = ДокОбъект.ОтражатьВУправленческомУчете;
	ОтражатьВБухгалтерскомУчете  = ДокОбъект.ОтражатьВБухгалтерскомУчете;
	ОтражатьВНалоговомУчете      = ДокОбъект.ОтражатьВНалоговомУчете;
	
	Если Не ОтражатьВУправленческомУчете
	   И Не ОтражатьВБухгалтерскомУчете
	   И Не ОтражатьВНалоговомУчете
	Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьСчетПередачи = Истина;
	ЕстьСчетУчета = Истина;
	Если ТипЗнч(ТаблицаМатериалы) = Тип("ТаблицаЗначений") Тогда
	Иначе // Это табличная часть
		ЕстьСчетПередачи = НЕ Метаданные.НайтиПоТипу(Тип(ТаблицаМатериалы)).Реквизиты.Найти("СчетПередачиБУ") = Неопределено;
		ЕстьСчетУчета 	 = НЕ Метаданные.НайтиПоТипу(Тип(ТаблицаМатериалы)).Реквизиты.Найти("СчетУчетаБУ") = Неопределено;
	КонецЕсли;
		
	Запрос = СформироватьЗапросПоОстаткамВЭксплуатации(
		ДокОбъект,
		СтруктураОтбора
		);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
	ВалютаУправленческогоУчета = глЗначениеПеременной("ВалютаУправленческогоУчета");
	
	ОбходПоНоменклатуре = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ОбходПоНоменклатуре.Следующий() Цикл
		ОбходПоХарактеристикам = ОбходПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ОбходПоХарактеристикам.Следующий() Цикл
			ОбходПоСериям = ОбходПоХарактеристикам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ОбходПоСериям.Следующий() Цикл
				ОбходПоФизЛицам = ОбходПоСериям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ОбходПоФизЛицам.Следующий() Цикл
					ОбходПоНазначению = ОбходПоФизЛицам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ОбходПоНазначению.Следующий() Цикл
						ОбходПоЕдиницам = ОбходПоНазначению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ОбходПоЕдиницам.Следующий() Цикл
							ОбходПоКоэффициенту = ОбходПоЕдиницам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ОбходПоКоэффициенту.Следующий() Цикл
								ОбходПоДокументу= ОбходПоКоэффициенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ОбходПоДокументу.Следующий() Цикл
									
									ВсегоКоличество = Макс(ОбходПоДокументу.КоличествоУпр - ОбходПоДокументу.КоличествоСписано, 0);
									Если ОбходПоДокументу.КоличествоУпр <> 0 Тогда
										ВсегоСумма = Окр(ВсегоКоличество * ОбходПоДокументу.Сумма / ОбходПоДокументу.КоличествоУпр, 2, 1);
									Иначе
										ВсегоСумма = 0;
									КонецЕсли;
										
									ОбходПоСчету = ОбходПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ОбходПоСчету.Следующий() Цикл
											
										ВсегоКоличествоБух = Макс(ОбходПоСчету.КоличествоБух - ОбходПоСчету.КоличествоСписано, 0);
										Если ОбходПоСчету.КоличествоБух <> 0 Тогда
											ВсегоСуммаБух = Окр(ВсегоКоличествоБух * ОбходПоСчету.СуммаБух / ОбходПоСчету.КоличествоБух, 2, 1);
										Иначе
											ВсегоСуммаБух = 0;
										КонецЕсли;
										
										Если ОтражатьВБухгалтерскомУчете И ВсегоКоличествоБух = 0 Тогда
											Продолжить;
										КонецЕсли;
											
										Обход = ОбходПоСчету.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										Пока Обход.Следующий() Цикл
											
											Если ОтражатьВНалоговомУчете Тогда
												Если НЕ ЗначениеЗаполнено(Обход.СчетУчетаНУ) Тогда
													Продолжить;
												КонецЕсли;
												
												ТекКоличество = Макс(Обход.КоличествоНал - Обход.КоличествоСписано, 0);
											ИначеЕсли ОтражатьВБухгалтерскомУчете Тогда
												ТекКоличество = Макс(Обход.КоличествоБух - Обход.КоличествоСписано, 0);
											Иначе
												ТекКоличество = Макс(Обход.КоличествоУпр - Обход.КоличествоСписано, 0);
											КонецЕсли;
											
											Если ТекКоличество = 0 Тогда
												Продолжить;
											КонецЕсли;
											
											ТекСумма = Окр(?(ВсегоКоличество <> 0, ТекКоличество * ВсегоСумма / ВсегоКоличество, 0), 2, 1);
											ТекСуммаРегл = Окр(?(ВсегоКоличествоБух <> 0, ТекКоличество * ВсегоСуммаБух / ВсегоКоличествоБух, 0), 2, 1);
											
											ВсегоКоличество = ВсегоКоличество - ТекКоличество;
											ВсегоСумма = ВсегоСумма - ТекСумма;
											ВсегоКоличествоБух = ВсегоКоличествоБух - ТекКоличество;
											ВсегоСуммаБух = ВсегоСуммаБух - ТекСуммаРегл;
										
											НоваяСтрока = ТаблицаМатериалы.Добавить();
											ЗаполнитьЗначенияСвойств(НоваяСтрока, Обход);
											НоваяСтрока.Количество = ТекКоличество;
											
											ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуМестТабЧасти(НоваяСтрока, докОбъект, Истина);
											
											НоваяСтрока.Сумма = ТекСумма;
											НоваяСтрока.СуммаРегл = ТекСуммаРегл;
											Если ОтражатьВУправленческомУчете Тогда
												НоваяСтрока.Цена = ?(НоваяСтрока.Количество <> 0, НоваяСтрока.Сумма / НоваяСтрока.Количество, 0);
											Иначе
												НоваяСтрока.Цена = ?(НоваяСтрока.Количество <> 0, НоваяСтрока.СуммаРегл / НоваяСтрока.Количество, 0);
											КонецЕсли;
																						
										КонецЦикла; // по детальным записям
											
										Если ОтражатьВБухгалтерскомУчете И ВсегоКоличествоБух > 0 Тогда
											
											ТекСумма = Окр(?(ВсегоКоличество <> 0, ВсегоКоличествоБух * ВсегоСумма / ВсегоКоличество, 0), 2, 1);
											
											ВсегоКоличество = ВсегоКоличество - ВсегоКоличествоБух;
											ВсегоСумма = ВсегоСумма - ТекСумма;
										
											НоваяСтрока = ТаблицаМатериалы.Добавить();
											ЗаполнитьЗначенияСвойств(НоваяСтрока, ОбходПоСчету);
											НоваяСтрока.Количество = ВсегоКоличествоБух;
											
											ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуМестТабЧасти(НоваяСтрока, докОбъект, Истина);
											
											НоваяСтрока.Сумма = ТекСумма;
											НоваяСтрока.СуммаРегл = ВсегоСуммаБух;
											
											Если ЕстьСчетПередачи И ОтражатьВНалоговомУчете Тогда
												НоваяСтрока.СчетПередачиНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", НоваяСтрока.СчетПередачиБУ));
											КонецЕсли;
											Если ЕстьСчетУчета И ОтражатьВНалоговомУчете Тогда
												НоваяСтрока.СчетУчетаНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", НоваяСтрока.СчетУчетаБУ));
											КонецЕсли;
												
											Если ОтражатьВУправленческомУчете Тогда
												НоваяСтрока.Цена = ?(НоваяСтрока.Количество <> 0, НоваяСтрока.Сумма / НоваяСтрока.Количество, 0);
											Иначе
												НоваяСтрока.Цена = ?(НоваяСтрока.Количество <> 0, НоваяСтрока.СуммаРегл / НоваяСтрока.Количество, 0);
											КонецЕсли;
											
										КонецЕсли;
											
									КонецЦикла; // по счетам учета
										
									Если ОтражатьВУправленческомУчете И ВсегоКоличество > 0 Тогда
											
										НоваяСтрока = ТаблицаМатериалы.Добавить();
										ЗаполнитьЗначенияСвойств(НоваяСтрока, ОбходПоДокументу);
										НоваяСтрока.Количество = ВсегоКоличество;
										
										ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуМестТабЧасти(НоваяСтрока, докОбъект, Истина);
										
										НоваяСтрока.Сумма = ВсегоСумма;
										НоваяСтрока.Цена = ?(НоваяСтрока.Количество <> 0, НоваяСтрока.Сумма / НоваяСтрока.Количество, 0);
										
										Если ОтражатьВБухгалтерскомУчете Тогда
											
											НоваяСтрока.СуммаРегл = МодульВалютногоУчета.ПересчитатьВСуммуРегл(
												НоваяСтрока.Сумма, 
												ВалютаРегламентированногоУчета, 
												ВалютаУправленческогоУчета, 
												ДокОбъект.Дата
											);
											
											СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти(ИмяТабличнойЧасти, НоваяСтрока, ДокОбъект, ОтражатьВБухгалтерскомУчете, ОтражатьВНалоговомУчете);
											
										КонецЕсли;
										
									КонецЕсли;
										
								КонецЦикла; // по коэф.
							КонецЦикла;	
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьМатериалыПоОстаткамВЭксплуатации()

// Функция открывает форму выбора условий отбора материалов в эксплуатации
//
Функция ПолучитьУсловиеОтбораМатериаловВЭксплуатации(НачальноеЗначение = Неопределено) Экспорт
	
	ОбщФорма = ПолучитьОбщуюФорму("ВводУсловийОтбораМатериаловВЭксплуатации");
	Список = ОбщФорма.ЭлементыФормы.УсловиеОтбора;
	Список.СписокВыбора.Очистить();
	Список.СписокВыбора.Добавить( Перечисления.УсловияОтбораМатериаловВЭксплуатации.СОкончившимсяСрокомЭксплуатации);
	Список.СписокВыбора.Добавить( Перечисления.УсловияОтбораМатериаловВЭксплуатации.СНеокончившимсяСрокомЭксплуатации);
	Список.СписокВыбора.Добавить( Перечисления.УсловияОтбораМатериаловВЭксплуатации.НаходящимисяВЭксплуатацииБолееМесяцев);
	Список.СписокВыбора.Добавить( Перечисления.УсловияОтбораМатериаловВЭксплуатации.НаходящимисяВЭксплуатацииМенееМесяцев);
	Список.СписокВыбора.Добавить( Перечисления.УсловияОтбораМатериаловВЭксплуатации.ДоОкончанияСрокаЭксплуатацииБолееМесяцев);
	Список.СписокВыбора.Добавить( Перечисления.УсловияОтбораМатериаловВЭксплуатации.ДоОкончанияСрокаЭксплуатацииМенееМесяцев);
	Список.СписокВыбора.Добавить( Перечисления.УсловияОтбораМатериаловВЭксплуатации.МОЛ);
	Список.Значение = ?( НачальноеЗначение = Неопределено, Перечисления.УсловияОтбораМатериаловВЭксплуатации.СОкончившимсяСрокомЭксплуатации, НачальноеЗначение);
	
	ОбщФорма.ЭлементыФормы.КолМесяцев.Значение = 1;
	Результат = ОбщФорма.ОткрытьМодально();
	
	Возврат Результат;
	
КонецФункции // ПолучитьУсловиеОтбораМатериаловВЭксплуатации()

// Функция получает табельные номера физ. лиц с учетом ПодразделенияОрганизации. 
// 
// Параметры:
//	- Организация   - организация
//  - Дата          - дата на которую выбираются данные
//  - МассивФизЛиц  - массив физ. лиц
//Возвращаемое значение: Соответствие, Ключ = ФизЛицо, Значение = ТабельныйНомер
//
Функция ПолучитьТабНомера( Организация, Дата, МассивФизЛиц) Экспорт
	
	СоотвТабНомеров = Новый Соответствие;
	
	Для Каждого ФизЛицо Из МассивФизЛиц Цикл
		
		Если СоотвТабНомеров[ФизЛицо] = Неопределено Тогда
			Сведения = ПолныеПрава.СведенияОСотруднике(ФизЛицо, Дата, Организация);
			СоотвТабНомеров.Вставить(ФизЛицо, Сведения.ТабельныйНомер);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СоотвТабНомеров;
	
КонецФункции // ПолучитьТабНомера()


