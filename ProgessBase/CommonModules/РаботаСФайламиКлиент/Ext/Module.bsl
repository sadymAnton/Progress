// Удаление файла со снятием атрибута readonly
Процедура УдалитьФайл(ПолноеИмяФайла, ЗадаватьВопрос = Неопределено, ШапкаВопроса = Неопределено) Экспорт
	ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов = ФайловыеФункцииКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами().ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов;
	Если ЗадаватьВопрос <> Неопределено Тогда
		ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов = ЗадаватьВопрос;
	КонецЕсли;		
	
	Если ПодтверждатьПриУдаленииИзЛокальногоКэшаФайлов = Истина Тогда
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Удалить файл ""%1"" из основного рабочего каталога?'"), ПолноеИмяФайла);
		
		Если ШапкаВопроса <> Неопределено Тогда
			ТекстВопроса = ШапкаВопроса + Символы.ПС + Символы.ПС + ТекстВопроса;
		КонецЕсли;	
		
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Файл = Новый Файл(ПолноеИмяФайла);
	Файл.УстановитьТолькоЧтение(Ложь);
	УдалитьФайлы(ПолноеИмяФайла);
КонецПроцедуры


// Очистка рабочего каталога - для освобождения места - в первую очередь удаляет файлы 
// наиболее давно помещенные в рабочий каталог
Процедура ОчиститьРабочийКаталог(РазмерФайловВРабочемКаталоге, РазмерДобавляемогоФайла, ОчищатьВсе) Экспорт
#Если Не ВебКлиент Тогда
	ФайловыеФункцииКлиент.ПроинициализироватьПутьКРабочемуКаталогу();
	
	ИмяКаталога = ФайловыеФункцииКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами().ПутьКЛокальномуКэшуФайлов;
	
	ТаблицаФайлов = Новый Массив;
	
	МассивФайлов = НайтиФайлы(ИмяКаталога, "*.*");
	
	ОбходФайловТаблица(ИмяКаталога, МассивФайлов, ТаблицаФайлов);
	
	// Вызов сервера - для сортировки
	//  сортировка по дате - в начале будут самые давно помещенные в рабочий каталог
	РаботаСФайламиВызовСервера.СортироватьМассивСтруктур(ТаблицаФайлов);
	
	МаксРазмер = ФайловыеФункцииКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами().МаксимальныйРазмерЛокальногоКэшаФайлов;
	
	СреднийРазмерФайла = 1000;
	Если ТаблицаФайлов.Количество() <> 0 Тогда
		СреднийРазмерФайла = РазмерФайловВРабочемКаталоге / ТаблицаФайлов.Количество();
	КонецЕсли;
	
	СколькоНадоОсвободитьМеста = МаксРазмер / 10;
	Если СреднийРазмерФайла * 3 / 2 > СколькоНадоОсвободитьМеста Тогда
		СколькоНадоОсвободитьМеста = СреднийРазмерФайла * 3 / 2;
	КонецЕсли;
	
	СколькоОсталось = РазмерФайловВРабочемКаталоге + РазмерДобавляемогоФайла;	
	
	Для Каждого Строка из ТаблицаФайлов Цикл
		
		Если Строка.Версия.Пустая() Тогда
			ТекстВопроса =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Файл ""%1%2"" не найден на сервере.
						   |Удалить его из рабочего каталога?'"),
				ИмяКаталога, Строка.Путь);
				
				
			Если ОчищатьВсе	= Ложь Тогда
				ТекстВопроса = Нстр("ru = 'Выполняется очистка рабочего каталога при добавлении файла.'") + Символы.ПС + Символы.ПС + ТекстВопроса;
			КонецЕсли;	
			
			КодВозврата = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);

			Если КодВозврата = КодВозвратаДиалога.Нет Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		ПолныйПуть = ИмяКаталога + Строка.Путь;
		ФайлНаДиске = Новый Файл(ПолныйПуть);
		ФайлНаДиске.УстановитьТолькоЧтение(Ложь);
		ШапкаВопроса = Нстр("ru = 'Выполняется очистка рабочего каталога при добавлении файла.'");
		УдалитьФайл(ПолныйПуть, Неопределено, ШапкаВопроса);
		
		ПутьСПодкаталогом = ИмяКаталога;
		позиция = Найти(Строка.Путь, "\");
		Если позиция <> 0 Тогда
			ПутьСПодкаталогом = ИмяКаталога + Лев(Строка.Путь, позиция);
		КонецЕсли;
		
		// Если каталог стал пуст - удалить его
		МассивФайловВКаталоге = НайтиФайлы(ПутьСПодкаталогом, "*.*");
		Если МассивФайловВКаталоге.Количество() = 0 Тогда
			Если ПутьСПодкаталогом <> ИмяКаталога Тогда
				УдалитьФайлы(ПутьСПодкаталогом);
			КонецЕсли;
		КонецЕсли;
	
		// Удалим из регистра сведений
		
		СколькоОсталось = СколькоОсталось - Строка.Размер;
		Если СколькоОсталось < МаксРазмер - СколькоНадоОсвободитьМеста Тогда
			Если НЕ ОчищатьВсе Тогда
				Прервать; // Освободили достаточно - выходим
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	

#КонецЕсли
КонецПроцедуры

// Рекурсивный обход файлов в рабочем каталоге и сбор информации о них
Процедура ОбходФайловТаблица(Путь, МассивФайлов, ТаблицаФайлов)
#Если Не ВебКлиент Тогда
	Перем Версия;
	Перем ДатаПомещения;
	
	ИмяКаталога = ФайловыеФункцииКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами().ПутьКЛокальномуКэшуФайлов;
	
	Для Каждого ВыбранныйФайл Из МассивФайлов Цикл
		
		Если ВыбранныйФайл.ЭтоКаталог() Тогда
			НовыйПуть = Строка(Путь);
			НовыйПуть = НовыйПуть + "\";
			НовыйПуть = НовыйПуть + Строка(ВыбранныйФайл.Имя);
			МассивФайловВКаталоге = НайтиФайлы(НовыйПуть, "*.*");
			
			Если МассивФайловВКаталоге.Количество() <> 0 Тогда
				ОбходФайловТаблица(НовыйПуть, МассивФайловВКаталоге, ТаблицаФайлов);
			КонецЕсли;
		
			Продолжить;
		КонецЕсли;
		
		// временные файлы Word не удаляем из рабочего каталога
		Если Лев(ВыбранныйФайл.Имя, 1) = "~" И ВыбранныйФайл.ПолучитьНевидимость() = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		ОтносительныйПуть = Сред(ВыбранныйФайл.ПолноеИмя, СтрДлина(ИмяКаталога) + 1);
		
		// Если не найдем на диске - то минимальная дата 
		//  будет самой старой - и удалится при очистке из рабочего каталога самых старых файлов
		ДатаПомещения = Дата('00010101');
		
		Владелец = Неопределено;
		НомерВерсии = Неопределено;
		ВРегистреНаЧтение = Неопределено;
		ВРегистреКодФайла = Неопределено;
		ВРегистреПапка = Неопределено;
		Запись = Новый Структура;
		Запись.Вставить("Путь", ОтносительныйПуть);
		Запись.Вставить("Размер", ВыбранныйФайл.Размер());
		Запись.Вставить("Версия", Версия);
		Запись.Вставить("ДатаПомещенияВРабочийКаталог", ДатаПомещения);
		ТаблицаФайлов.Добавить(Запись);
		
	КонецЦикла;
#КонецЕсли
	
КонецПроцедуры

// Выбрать путь к рабочему каталогу
// Параметры
//  ИмяКаталога  - Строка - прежнее имя каталога
//  Заголовок  - Строка - заголовок формы выбора пути каталога
//  РабочийКаталогВладельца - Строка-  Рабочий каталог владельца
//
// Возвращаемое значение:
//   Булево  - успешно ли выполнена операция
Функция ВыбратьПутьКРабочемуКаталогу(ИмяКаталога, Заголовок, РабочийКаталогВладельца) Экспорт
	
		Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		ДиалогОткрытияФайла.Каталог = ИмяКаталога;
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = Заголовок;
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			
			ИмяКаталога = ДиалогОткрытияФайла.Каталог;
			ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(   ИмяКаталога, 
																			ОбщегоНазначенияКлиентПовтИсп.ТипПлатформыКлиента());
			
			// Создать каталог для файлов
			Попытка
				СоздатьКаталог(ИмяКаталога);
				ИмяКаталогаТестовое = ИмяКаталога + "ПроверкаДоступа\";
				СоздатьКаталог(ИмяКаталогаТестовое);
				УдалитьФайлы(ИмяКаталогаТестовое);
			Исключение
				// нет прав на создание каталога, или такой путь отсутствует
				
				ТекстОшибки 
					= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Неверный путь или отсутствуют права на запись в каталог ""%1""'"),
					ИмяКаталога);
				Предупреждение(ТекстОшибки);
				Возврат Ложь;
			КонецПопытки;
			
			Если РабочийКаталогВладельца = Ложь Тогда
#Если Не ВебКлиент Тогда
				МассивФайловВКаталоге = НайтиФайлы(ИмяКаталога, "*.*");
				Если МассивФайловВКаталоге.Количество() <> 0 Тогда
					ТекстОшибки 
						= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В выбранном рабочем каталоге (""%1"") уже есть файлы. Выберите другой каталог.'"),
						ИмяКаталога);
					Предупреждение(ТекстОшибки);
					Возврат Ложь;
				КонецЕсли;
#КонецЕсли
			КонецЕсли;
			
			Возврат Истина;
		КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции	

