////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции объекта

Процедура ДополнитьСтруктуруПечатныхФорм(СтруктураПечатныхФорм) Экспорт

	// В этой конфигурации дополнительных действий не предусмотрено

КонецПроцедуры //ДополнитьСтруктуруПечатныхФорм()

Процедура ЗаполнитьЗапросЭтоНеЮрЛицо(Запрос, ЭтотОбъект) Экспорт
	
	Если ЭтотОбъект.НалоговыйПериод > 2007 Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДФЛСведенияОДоходах.ФизЛицо,
		|	ВЫБОР
		|		КОГДА Гражданство.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
		|			ТОГДА ВЫБОР
		|					КОГДА НДФЛСведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|				КОНЕЦ
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Ставка
		|ИЗ
		|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(&КонецНП, ) КАК Гражданство
		|		ПО (Гражданство.ФизЛицо = НДФЛСведенияОДоходах.ФизЛицо)
		|ГДЕ
		|	НДФЛСведенияОДоходах.Организация = &Организация
		|	И ГОД(НДФЛСведенияОДоходах.Период) = &ГодНП
		|	И НДФЛСведенияОДоходах.ПериодРегистрации < &ДатаПодачиСведений
		|
		|УПОРЯДОЧИТЬ ПО
		|	НДФЛСведенияОДоходах.ФизЛицо.Наименование";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДФЛСведенияОДоходах.ФизЛицо,
		|	ВЫБОР
		|		КОГДА Гражданство.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Ставка
		|ИЗ
		|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(&КонецНП, ) КАК Гражданство
		|		ПО (Гражданство.ФизЛицо = НДФЛСведенияОДоходах.ФизЛицо)
		|ГДЕ
		|	НДФЛСведенияОДоходах.Организация = &Организация
		|	И ГОД(НДФЛСведенияОДоходах.Период) = &ГодНП
		|	И НДФЛСведенияОДоходах.ПериодРегистрации < &ДатаПодачиСведений
		|
		|УПОРЯДОЧИТЬ ПО
		|	НДФЛСведенияОДоходах.ФизЛицо.Наименование";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗапросАвтозаполнения(Запрос, ЭтотОбъект) Экспорт
	
	Если ЭтотОбъект.НалоговыйПериод > 2007 Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДФЛСведенияОДоходах.ФизЛицо,
		|	ВЫБОР
		|		КОГДА Гражданство.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
		|			ТОГДА ВЫБОР
		|					КОГДА НДФЛСведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|				КОНЕЦ
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Ставка,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.КодПоОКАТО <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛСведенияОДоходах.КодПоОКАТО
		|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО
		|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|	КОНЕЦ КАК КодПоОКАТО,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.КПП <> &ПустойКПП
		|			ТОГДА НДФЛСведенияОДоходах.КПП
		|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП
		|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|	КОНЕЦ КАК КПП
		|ИЗ
		|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(&КонецНП, ) КАК Гражданство
		|		ПО (Гражданство.ФизЛицо = НДФЛСведенияОДоходах.ФизЛицо)
		|ГДЕ
		|	НДФЛСведенияОДоходах.Организация = &Организация
		|	И ГОД(НДФЛСведенияОДоходах.Период) = &ГодНП
		|	И НДФЛСведенияОДоходах.ПериодРегистрации < &ДатаПодачиСведений
		|
		|УПОРЯДОЧИТЬ ПО
		|	НДФЛСведенияОДоходах.ФизЛицо.Наименование";
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДФЛСведенияОДоходах.ФизЛицо,
		|	ВЫБОР
		|		КОГДА Гражданство.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Ставка,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.КодПоОКАТО <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛСведенияОДоходах.КодПоОКАТО
		|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО
		|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|	КОНЕЦ КАК КодПоОКАТО,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.КПП <> &ПустойКПП
		|			ТОГДА НДФЛСведенияОДоходах.КПП
		|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП
		|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|	КОНЕЦ КАК КПП
		|ИЗ
		|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(&КонецНП, ) КАК Гражданство
		|		ПО (Гражданство.ФизЛицо = НДФЛСведенияОДоходах.ФизЛицо)
		|ГДЕ
		|	НДФЛСведенияОДоходах.Организация = &Организация
		|	И ГОД(НДФЛСведенияОДоходах.Период) = &ГодНП
		|	И НДФЛСведенияОДоходах.ПериодРегистрации < &ДатаПодачиСведений
		|
		|УПОРЯДОЧИТЬ ПО
		|	НДФЛСведенияОДоходах.ФизЛицо.Наименование";
	КонецЕсли;
	
КонецПроцедуры

// Возвращает налоговый период (год), начиная с которого поддерживается формирование справок по НДФЛ
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   число
//
Функция МинимальныйПоддерживаемыйНалоговыйПериод() Экспорт

	Возврат 2005;

КонецФункции // МинимальныйПоддерживаемыйНалоговыйПериод()

#Если ТолстыйКлиентОбычноеПриложение Тогда
	
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, ЭтотОбъект) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "ПечатьФайла" Тогда
		
		ЕстьОшибки = Ложь;
		Если ЭтотОбъект.Проведен Тогда 
			ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ЭтотОбъект,ЕстьОшибки);
		Иначе
			
			// Заголовок для сообщений об ошибках проведения.
			Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(ЭтотОбъект.Ссылка);
			
			ВыборкаПоШапкеДокумента = ЭтотОбъект.СформироватьЗапросПоШапке().Выбрать();

			Если ВыборкаПоШапкеДокумента.Следующий() Тогда

				//Надо позвать проверку заполнения реквизитов шапки
				ЭтотОбъект.ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, ЕстьОшибки, Заголовок);

				// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
				Если НЕ ЕстьОшибки Тогда

					// получим реквизиты табличной части
					ВыборкаПоРаботникиОрганизации = ЭтотОбъект.СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

					Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 

						// проверим очередную строку табличной части
						ЭтотОбъект.ПроверитьЗаполнениеСтрокиРаботникиОрганизации(ВыборкаПоШапкеДокумента,ВыборкаПоРаботникиОрганизации, ЕстьОшибки, Заголовок);
						
						// Заполним записи в наборах записей регистров
						ЭтотОбъект.ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);

					КонецЦикла;
					
				КонецЕсли; 

			КонецЕсли;
			
			Если ЕстьОшибки тогда
				Возврат Неопределено;
			КонецЕсли;	 
		
			// Зафиксируем суммы передаваемые на взыскание
			ЭтотОбъект.Движения.НДФЛРасчетыСБюджетом.Записать();
			ТекстФайла = ЭтотОбъект.СформироватьВыходнойФайл(ЕстьОшибки, "Дерево");
			
			ЭтотОбъект.Движения.НДФЛРасчетыСБюджетом.Очистить();
			ЭтотОбъект.Движения.НДФЛРасчетыСБюджетом.Записать();
			
		КонецЕсли;	 
		Если ЕстьОшибки тогда
			Возврат Неопределено;
		КонецЕсли;	 
		
		// Табличные документы и макеты
		Документ2НДФЛ = Новый ТабличныйДокумент;
		ДокументРеестр = Новый ТабличныйДокумент;
		Документ2НДФЛ.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СведенияОДоходахФизлиц_Форма2НДФЛ";
		ДокументРеестр.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СведенияОДоходахФизлиц_Реестр";
		
		// Области реестра
		МакетРеестр = ЭтотОбъект.ПолучитьМакет("Реестр");
		ОбластьРеестрШапка  = МакетРеестр.ПолучитьОбласть("Шапка");
		ОбластьРеестрСтрока = МакетРеестр.ПолучитьОбласть("Строка");
		ОбластьРеестрПодвал = МакетРеестр.ПолучитьОбласть("Подвал");
		
		НалоговыйПериодГод = Формат(ЭтотОбъект.НалоговыйПериод,"ЧН=' '; ЧГ=");
		НомерРеестра = ПроцедурыПерсонифицированногоУчета.НомерПачкиДокумента(ЭтотОбъект.Номер);// № документа
		ОбластьРеестрШапка.Параметры.Год 			= НалоговыйПериодГод;
		ОбластьРеестрШапка.Параметры.НомерРеестра	= НомерРеестра;
		
		// Итоговые счетчики реестра
		ИтогоДоход = 0;
		ИтогоИсчНалог = 0;
		ИтогоУдНалог = 0;
		
		ТипДанныхЭтоСтрока = ТипЗнч(ТекстФайла) = Тип("Строка");
		Если Не ТипДанныхЭтоСтрока Или Найти(ТекстФайла,"@@@") = 0 Тогда // с 2005 года
			
			Если ТипДанныхЭтоСтрока Тогда
				Дерево2НДФЛ = ПроцедурыПерсонифицированногоУчета.ПреобразоватьВДеревоXML(ТекстФайла);
				Если Дерево2НДФЛ = Неопределено Тогда
					Отказ = Ложь;
					ОбщегоНазначенияЗК.СообщитьОбОшибке("Не удалось разобрать файл с данными!",Отказ, ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(ЭтотОбъект.Ссылка));
					Возврат Неопределено 
				КонецЕсли;
			Иначе
				Дерево2НДФЛ = ТекстФайла
			КонецЕсли;
			
			Дерево2НДФЛ = Дерево2НДФЛ.Строки.Найти("НДФЛ2","Имя");
			Если Дерево2НДФЛ = Неопределено Тогда
				Отказ = Ложь;
				ОбщегоНазначенияЗК.СообщитьОбОшибке("Не удалось разобрать файл с данными!",Отказ, ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(ЭтотОбъект.Ссылка));
				Возврат Неопределено 
			КонецЕсли;
			
			ВерсияФормата = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(Дерево2НДФЛ,"ВерсФорм");

			Если ВерсияФормата = "" Тогда
				Отказ = Ложь;
				ОбщегоНазначенияЗК.СообщитьОбОшибке("Не указана версия формата! Возможно, нарушена структура файла.",Отказ, ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(ЭтотОбъект.Ссылка));
				Возврат Неопределено 
			КонецЕсли;
			
			Если ВерсияФормата = "4.00001" Тогда // с 2006 года
				
				Справка = ЭтотОбъект.ПолучитьМакет("Форма2НДФЛ2006");
				
				Если ЭтотОбъект.Ответственный.Пустая() Тогда
					ОбщегоНазначенияЗК.СообщитьОбОшибке("Не указано ответственное лицо!", Отказ);
				Иначе	
					ДанныеОтветственногоТекст =
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ФИОФизЛицСрезПоследних.Фамилия,
					|	ФИОФизЛицСрезПоследних.Имя,
					|	ФИОФизЛицСрезПоследних.Отчество,
					|	Пользователи.ФизЛицо
					|ИЗ
					|	Справочник.Пользователи КАК Пользователи
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
					|		&ДатаПодачиСведений,
					|		ФизЛицо В
					|			(ВЫБРАТЬ
					|				Пользователи.ФизЛицо
					|			ИЗ
					|				Справочник.Пользователи КАК Пользователи
					|			ГДЕ
					|				Пользователи.Ссылка = &Ответственный)) КАК ФИОФизЛицСрезПоследних
					|		ПО Пользователи.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
					|ГДЕ
					|	Пользователи.Ссылка = &Ответственный";
					
					Запрос = Новый Запрос;
					
					Запрос.УстановитьПараметр("ДатаПодачиСведений",ЭтотОбъект.Дата);
					Запрос.УстановитьПараметр("Ответственный", ЭтотОбъект.Ответственный);
					Запрос.Текст = ДанныеОтветственногоТекст; 	
					ВыборкаСведенийОбОтветственном = Запрос.Выполнить().Выбрать();
					ВыборкаСведенийОбОтветственном.Следующий();
					
					Если Не ЗначениеЗаполнено(ВыборкаСведенийОбОтветственном.ФизЛицо) Тогда 
						ОбщегоНазначенияЗК.СообщитьОбОшибке("У ответственного лица не указано физлицо!", Отказ);	
					ИначеЕсли Не ЗначениеЗаполнено(ВыборкаСведенийОбОтветственном.Фамилия) И Не ЗначениеЗаполнено(ВыборкаСведенийОбОтветственном.Имя) Тогда
						ОбщегоНазначенияЗК.СообщитьОбОшибке("Не указано ФИО ответственного лица, либо отсутствует доступ к этим данным!", Отказ);	
					Иначе	
						Справка.Область("ФИОИсполнителя").Текст = ОбщегоНазначенияЗК.ФамилияИнициалыФизЛица(Неопределено,ВыборкаСведенийОбОтветственном.Фамилия,ВыборкаСведенийОбОтветственном.Имя,ВыборкаСведенийОбОтветственном.Отчество);
					КонецЕсли;
				КонецЕсли;
				
				Если ОбщегоНазначенияЗКПереопределяемый.ЭтоЮрЛицо(ЭтотОбъект.Организация) И ЭтотОбъект.ДолжностьОтветственного.Пустая() Тогда
					ОбщегоНазначенияЗК.СообщитьОбОшибке("Не указана должность ответственного лица!", Отказ);	
				КонецЕсли; 
				
				ДатаСоставления = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(Дерево2НДФЛ,"ДатаСпр");
				
				ОбластьРеестрШапка.Параметры.ДатаСоставления = ДатаСоставления;
				Справка.Область("ДатаДок").Текст = ДатаСоставления;
				Справка.Область("ДолжностьИсполнителя").Текст = Строка(ЭтотОбъект.ДолжностьОтветственного);
				
				ИМНС = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(Дерево2НДФЛ,"ИФНСНА");
				ОбластьРеестрШапка.Параметры.ИМНС = ИМНС;
				Справка.Область("ИФНС").Текст = ИМНС;
				
				ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(ЭтотОбъект.Организация, Дата(Прав(ДатаСоставления,4),Сред(ДатаСоставления,4,2),Лев(ДатаСоставления,2)), ЭтотОбъект.Ответственный);
				ОбластьРеестрШапка.Параметры.ГлБух = ОтветственныеЛица.ГлавныйБухгалтер;
				ОбластьРеестрШапка.Параметры.КоличествоСправок = Дерево2НДФЛ.Строки.Количество() - 1;
				
				ШапкаРеестраНеВыведена = Истина;
				
				Для каждого СтрокаДерева Из Дерево2НДФЛ.Строки Цикл
					Если СтрокаДерева.Имя = "Справка" Тогда
						
						Справка.Параметры.Телефон = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"Телефон");
						Справка.Параметры.ГодДох = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"ГодДох");
						Справка.Параметры.НомСпр = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"НомСпр");
						СтрокаДанных = СтрокаДерева.Строки.Найти("ИстДох","Имя");
						Если СтрокаДанных <> Неопределено Тогда
							Справка.Параметры.НазваниеОрганизации = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"НаимОрг") + ЭтотОбъект.ИзвлечьФИО(СтрокаДанных,"ФИОФЛ");
							ИНН_КПП = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"ИННЮЛ") + "/" + ЭтотОбъект.Организация.КПП;
							Справка.Параметры.ИНН_КПП_НА = ?(ИНН_КПП = "/","",ИНН_КПП) + ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"ИННФЛ");
							Справка.Параметры.ОКАТО = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"ОКАТО");
							Если ШапкаРеестраНеВыведена Тогда
								ОбластьРеестрШапка.Параметры.ИНН_КПП_НА = Справка.Параметры.ИНН_КПП_НА;
								ОбластьРеестрШапка.Параметры.НазваниеОрганизации = Справка.Параметры.НазваниеОрганизации;
								ДокументРеестр.Вывести(ОбластьРеестрШапка);
								ШапкаРеестраНеВыведена = Ложь;
							КонецЕсли;
						КонецЕсли;
						
						СтрокаДанныхФизЛицо = СтрокаДерева.Строки.Найти("ПолучДох","Имя");
						Если СтрокаДанныхФизЛицо <> Неопределено Тогда
							ЭтотОбъект.ВыделитьОдинарныеДанные(СтрокаДанныхФизЛицо,Справка);
						КонецЕсли;
						СтрокаДанных = СтрокаДерева.Строки.Найти("СвДохСтав","Имя");
						Если СтрокаДанных <> Неопределено Тогда
							ЭтотОбъект.ВыделитьОдинарныеДанные(СтрокаДанных,Справка);
							Если Справка.Параметры.ДатаУвед = "00.00.0000" Тогда
								Справка.Параметры.ДатаУвед = ""
							КонецЕсли;
							Если СтрДлина(Справка.Параметры.Ставка) = 2 Тогда
								Справка.Параметры.Ставка = Справка.Параметры.Ставка + "%"
							КонецЕсли;
						КонецЕсли;
						СтрокаДанных = СтрокаДерева.Строки.Найти("СтандВыч","Имя");
						Если СтрокаДанных <> Неопределено Тогда
							ЭтотОбъект.ВыделитьОдинарныеДанные(СтрокаДанных,Справка);
						КонецЕсли;
						СтрокаДанных = СтрокаДерева.Строки.Найти("ИмущВыч","Имя");
						Если СтрокаДанных <> Неопределено Тогда
							ЭтотОбъект.ВыделитьОдинарныеДанные(СтрокаДанных,Справка);
							Если НЕ ЗначениеЗаполнено(Справка.Параметры.НомерУвед) Тогда
								Справка.Параметры.ДатаУвед = "";
								Справка.Параметры.ИФНС = "";
							КонецЕсли;
						КонецЕсли;
						СтрокаДанных = СтрокаДерева.Строки.Найти("СГДНалПер","Имя");
						Если СтрокаДанных <> Неопределено Тогда
							ЭтотОбъект.ВыделитьОдинарныеДанные(СтрокаДанных,Справка);
						КонецЕсли;
						
						Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Шапка"));
						ДоходыПоВидам = СтрокаДерева.Строки.НайтиСтроки(Новый Структура("Имя","ДохВыч"),Истина);
						Если ДоходыПоВидам.Количество() = 0 Тогда
							Справка.Параметры.СумВычет = "";
							Для Сч = 1 По 9 Цикл
								Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Р3Строка"));
							КонецЦикла;
						Иначе
							ОбластиМакета = Новый Массив;
							ОбластиМакета.Добавить(Справка.ПолучитьОбласть("Р3Строка|ЛеваяЧасть"));
							ОбластиМакета.Добавить(Справка.ПолучитьОбласть("Р3Строка|ПраваяЧасть"));
							ЭтотОбъект.ВывестиТабличныеДанные(ДоходыПоВидам,Документ2НДФЛ,ОбластиМакета,9);
						КонецЕсли;
						Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Р4Шапка"));
						ВычетыПоВидам = СтрокаДерева.Строки.НайтиСтроки(Новый Структура("Имя","ПравоВыч"),Истина);
						Если ВычетыПоВидам.Количество() = 0 Тогда
							Справка.Параметры.СумВычет = "";
							Справка.Параметры.КодВычет = "";
							Для Сч = 1 По 3 Цикл
								Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Р4Строка"));
							КонецЦикла;
						Иначе
							ОбластиМакета = Новый Массив;
							Для Сч = 1 По 4 Цикл
								ОбластиМакета.Добавить(Справка.ПолучитьОбласть("Р4Строка|Вычеты"+Сч));
							КонецЦикла;
							ЭтотОбъект.ВывестиТабличныеДанные(ВычетыПоВидам,Документ2НДФЛ,ОбластиМакета,3,4);
						КонецЕсли;
						Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Р5"));
						Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Подвал"));
						Документ2НДФЛ.ВывестиГоризонтальныйРазделительСтраниц();
						
						// Строка реестра
						
						ОбластьРеестрСтрока.Параметры.НомерСправки = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"НомСпр");
						Если СтрокаДанныхФизЛицо <> Неопределено Тогда
							ОбластьРеестрСтрока.Параметры.ФИО = ЭтотОбъект.ИзвлечьФИО(СтрокаДанныхФизЛицо,"ФИО")
						КонецЕсли;
						ОбластьРеестрСтрока.Параметры.ОбщДоход = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"СГДСумм");
						ОбластьРеестрСтрока.Параметры.НИОбщСумм = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"НИОблСумм");
						ОбластьРеестрСтрока.Параметры.НУОбщСумм	= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"НУОблСумм");
						ДокументРеестр.Вывести(ОбластьРеестрСтрока);
						
						// Итоговые счетчики реестра
						ИтогоДоход 		= ИтогоДоход + Число(ОбластьРеестрСтрока.Параметры.ОбщДоход);
						ИтогоИсчНалог 	= ИтогоИсчНалог + Число(ОбластьРеестрСтрока.Параметры.НИОбщСумм);
						ИтогоУдНалог 	= ИтогоУдНалог + Число(ОбластьРеестрСтрока.Параметры.НУОбщСумм);
						
						ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(Справка);
						
					КонецЕсли;
				КонецЦикла; 
				
			ИначеЕсли ВерсияФормата = "4.00" Тогда
				
				Справка = ЭтотОбъект.ПолучитьМакет("Форма2НДФЛ2005");
				
				ДатаСоставления = ЭтотОбъект.Дата;
				СтрокаДерева = Дерево2НДФЛ.Строки.Найти("СлЧаст","Имя");
				Если СтрокаДерева <> Неопределено Тогда
					
					ОбластьРеестрШапка.Параметры.ГлБух = ЭтотОбъект.ИзвлечьФИО(СтрокаДерева,"ФИООтпр");
					Справка.Область("ФИОИсполнителя").Текст = ЭтотОбъект.ИзвлечьФИО(СтрокаДерева,"ФИООтпр", "С_Инициалами");
					
					ДатаСоставления = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"Дата");
					ДатаСоставления = ?(ДатаСоставления = "", "  .  .    ", ДатаСоставления);
					ОбластьРеестрШапка.Параметры.ДатаСоставления = ДатаСоставления;
					Справка.Область("ДатаДок").Текст = ДатаСоставления;
					
					ИМНС = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"ИдПол");
					ОбластьРеестрШапка.Параметры.ИМНС = ИМНС;
					Справка.Область("ИФНС").Текст = ИМНС;
					ОбластьРеестрШапка.Параметры.НазваниеОрганизации = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"НаимОрг") + ЭтотОбъект.ИзвлечьФИО(СтрокаДерева,"ФИО");
					
					ИНН_КПП = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"ИННЮЛ") + "/" + ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"КПП");
					ОбластьРеестрШапка.Параметры.ИНН_КПП_НА = ?(ИНН_КПП = "/","",ИНН_КПП) + ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"ИННФЛ");
				КонецЕсли;
				ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(ЭтотОбъект.Организация, Дата(Прав(ДатаСоставления,4),Сред(ДатаСоставления,4,2),Лев(ДатаСоставления,2)), ЭтотОбъект.Ответственный);
				ОбластьРеестрШапка.Параметры.КоличествоСправок = Дерево2НДФЛ.Строки.Количество() - 2;
				ДокументРеестр.Вывести(ОбластьРеестрШапка);
				
				Для каждого СтрокаДерева Из Дерево2НДФЛ.Строки Цикл
					
					Если СтрокаДерева.Имя = "ИнфЧаст" Тогда
						
						Справка.Параметры.Телефон = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"Телефон");
						Справка.Параметры.ГодДох = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"ГодДох");
						Справка.Параметры.НомДок = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"НомДок");
						СтрокаДанных = СтрокаДерева.Строки.Найти("ИстДох","Имя");
						Если СтрокаДанных <> Неопределено Тогда
							Справка.Параметры.НазваниеОрганизации = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"НаимОрг") + ЭтотОбъект.ИзвлечьФИО(СтрокаДанных,"ФИО");
							ИНН_КПП = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"ИННЮЛ") + "/" + ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"КПП");
							Справка.Параметры.ИНН_КПП_НА = ?(ИНН_КПП = "/","",ИНН_КПП) + ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"ИННФЛ");
						КонецЕсли;
						
						СтрокаДанныхФизЛицо = СтрокаДерева.Строки.Найти("ФизЛицо","Имя");
						Если СтрокаДанныхФизЛицо <> Неопределено Тогда
							ЭтотОбъект.ВыделитьОдинарныеДанные(СтрокаДанныхФизЛицо,Справка);
						КонецЕсли;
						СтрокаДанных = СтрокаДерева.Строки.Найти("Доходы","Имя");
						Если СтрокаДанных <> Неопределено Тогда
							СтрокаДанных = СтрокаДанных.Строки.Найти("Ставка","Имя");
							Если СтрокаДанных <> Неопределено Тогда
								ЭтотОбъект.ВыделитьОдинарныеДанные(СтрокаДанных,Справка);
							КонецЕсли;
						КонецЕсли;
						СтрокаДанных = СтрокаДерева.Строки.Найти("СтандИмущВычет","Имя");
						Если СтрокаДанных <> Неопределено Тогда
							ЭтотОбъект.ВыделитьОдинарныеДанные(СтрокаДанных,Справка);
							Если НЕ ЗначениеЗаполнено(Справка.Параметры.НомерУвед) Тогда
								Справка.Параметры.ДатаУвед = "";
								Справка.Параметры.ИФНС = "";
							КонецЕсли;
						КонецЕсли;
						СтрокаДанных = СтрокаДерева.Строки.Найти("СГДНалПер","Имя");
						Если СтрокаДанных <> Неопределено Тогда
							ЭтотОбъект.ВыделитьОдинарныеДанные(СтрокаДанных,Справка);
						КонецЕсли;
						
						Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Шапка"));
						ДоходыПоВидам = СтрокаДерева.Строки.НайтиСтроки(Новый Структура("Имя","ДохВыч"),Истина);
						Если ДоходыПоВидам.Количество() = 0 Тогда
							Справка.Параметры.СумВычет = "";
							Для Сч = 1 По 9 Цикл
								Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Р3Строка"));
							КонецЦикла;
						Иначе
							ОбластиМакета = Новый Массив;
							ОбластиМакета.Добавить(Справка.ПолучитьОбласть("Р3Строка|ЛеваяЧасть"));
							ОбластиМакета.Добавить(Справка.ПолучитьОбласть("Р3Строка|ПраваяЧасть"));
							ЭтотОбъект.ВывестиТабличныеДанные(ДоходыПоВидам,Документ2НДФЛ,ОбластиМакета,9);
						КонецЕсли;
						Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Р4Шапка"));
						ВычетыПоВидам = СтрокаДерева.Строки.НайтиСтроки(Новый Структура("Имя","ПравоВыч"),Истина);
						Если ВычетыПоВидам.Количество() = 0 Тогда
							Справка.Параметры.СумВычет = "";
							Для Сч = 1 По 3 Цикл
								Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Р4Строка"));
							КонецЦикла;
						Иначе
							ОбластиМакета = Новый Массив;
							Для Сч = 1 По 4 Цикл
								ОбластиМакета.Добавить(Справка.ПолучитьОбласть("Р4Строка|Вычеты"+Сч));
							КонецЦикла;
							ЭтотОбъект.ВывестиТабличныеДанные(ВычетыПоВидам,Документ2НДФЛ,ОбластиМакета,3,4);
						КонецЕсли;
						Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Р6Шапка"));
						Перечислено = СтрокаДерева.Строки.НайтиСтроки(Новый Структура("Имя","ПерНалБюдж"),Истина);
						Если Перечислено.Количество() = 0 Тогда
							Для Сч = 1 По 2 Цикл
								Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Р6Строка"));
							КонецЦикла;
						Иначе
							ОбластиМакета = Новый Массив;
							ОбластиМакета.Добавить(Справка.ПолучитьОбласть("Р6Строка|ЛеваяЧасть"));
							ОбластиМакета.Добавить(Справка.ПолучитьОбласть("Р6Строка|ПраваяЧасть"));
							ЭтотОбъект.ВывестиТабличныеДанные(Перечислено,Документ2НДФЛ,ОбластиМакета,2);
						КонецЕсли;
						Документ2НДФЛ.Вывести(Справка.ПолучитьОбласть("Подвал"));
						Документ2НДФЛ.ВывестиГоризонтальныйРазделительСтраниц();
						
						// Строка реестра
						
						ОбластьРеестрСтрока.Параметры.НомерСправки = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"НомДок");
						Если СтрокаДанныхФизЛицо <> Неопределено Тогда
							ОбластьРеестрСтрока.Параметры.ФИО = ЭтотОбъект.ИзвлечьФИО(СтрокаДанныхФизЛицо,"ФИО")
						КонецЕсли;
						ОбластьРеестрСтрока.Параметры.ОбщДоход = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"СГДСумм");
						ОбластьРеестрСтрока.Параметры.НИОбщСумм = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"НИОблСумм");
						ОбластьРеестрСтрока.Параметры.НУОбщСумм	= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева,"НУОблСумм");
						ДокументРеестр.Вывести(ОбластьРеестрСтрока);
						
						// Итоговые счетчики реестра
						ИтогоДоход 		= ИтогоДоход + Число(ОбластьРеестрСтрока.Параметры.ОбщДоход);
						ИтогоИсчНалог 	= ИтогоИсчНалог + Число(ОбластьРеестрСтрока.Параметры.НИОбщСумм);
						ИтогоУдНалог 	= ИтогоУдНалог + Число(ОбластьРеестрСтрока.Параметры.НУОбщСумм);
						
						ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(Справка);
						
					КонецЕсли;
				КонецЦикла; 
				
			КонецЕсли;
		
		Иначе // устаревший порядок формирования отчетности
			
			// текст файла оформим как текстовый документ 
			ТекстовыйДокумент = Новый ТекстовыйДокумент;
			ТекстовыйДокумент.УстановитьТекст(ТекстФайла);
			
			ТекущаяСтрокаФайла = 0;
			
			Макет2НДФЛ = ЭтотОбъект.ПолучитьМакет("Форма2НДФЛ");
			
			// Области справки о доходах
			ОбластьШапкаСправки = Макет2НДФЛ.ПолучитьОбласть("Шапка");
			ОбластьПодвалСправки = Макет2НДФЛ.ПолучитьОбласть("Подвал");
			ОбластьР3ДоходыПоМесяцам = Макет2НДФЛ.ПолучитьОбласть("Р3ДоходыПоМесяцам");
			ОбластьР3СтрокаДоходов = Макет2НДФЛ.ПолучитьОбласть("Р3СтрокаДоходов");
			ОбластьР3СтрокаВычеты = Макет2НДФЛ.ПолучитьОбласть("Р3СтрокаВычеты");
			ОбластьР3Подвал = Макет2НДФЛ.ПолучитьОбласть("Р3Подвал");
			ОбластьР4Р5Шапка = Макет2НДФЛ.ПолучитьОбласть("Р4Р5Шапка");
			ОбластьР5СтрокаДоходов = Макет2НДФЛ.ПолучитьОбласть("Р5СтрокаДоходов");
			ОбластьР5Подвал_Р7Шапка = Макет2НДФЛ.ПолучитьОбласть("Р5Подвал_Р7Шапка");
			ОбластьР7СтрокаДоходов = Макет2НДФЛ.ПолучитьОбласть("Р7СтрокаДоходов");
			
			// Загружаем формат файла сведений
			ФорматФайлаСведений = СведенияОДоходахФизлицДополнительный.ЗагрузитьФорматФайлаСведений(ЭтотОбъект.ПолучитьМакет("ФорматНДФЛ2003"), ЭтотОбъект);
			
			// Читаем сведения о налоговом агенте
			НаборЗаписейНА = ФорматФайлаСведений.НаборыЗаписей.НА;
			Если НЕ СведенияОДоходахФизлицДополнительный.ПрочитатьНаборЗаписейИзФайла(НаборЗаписейНА, ТекстовыйДокумент, ТекущаяСтрокаФайла) Тогда
				Возврат Неопределено;
			КонецЕсли;
			
			// Данные о налоговом агенте
			ИдФайла = НаборЗаписейНА.ИдФайл.Значение;
			ДатаСоставления = Дата(Сред(ИдФайла, 22,4), Сред(ИдФайла, 26,2), Сред(ИдФайла, 28,2));
			ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(ЭтотОбъект.Организация, ДатаСоставления, ЭтотОбъект.Ответственный);
			ФИОГлавногоБухгалтера = ОтветственныеЛица.ГлавныйБухгалтер;
			ИНН = СтрЗаменить(Лев(ИдФайла,12), "*","");
			КПП = СтрЗаменить(Сред(ИдФайла,13,9), "*","");
			ИНН_КПП_НА = ИНН + ?(КПП<>"",  "/" + КПП, "");
			ИМНС = Формат(НаборЗаписейНА.ИМНС.Значение,"ЧН=' '; ЧГ=");
			
			// Вывод подвала реестра
			ОбластьРеестрШапка.Параметры.ДатаСоставления = Формат(ДатаСоставления,"ДФ=dd.MM.yyyy");
			ОбластьРеестрШапка.Параметры.ГлБух = ФИОГлавногоБухгалтера;
			ОбластьРеестрШапка.Параметры.ИМНС = ИМНС;
			ОбластьРеестрШапка.Параметры.НазваниеОрганизации = НаборЗаписейНА.НаимОтпр.Значение;
			ОбластьРеестрШапка.Параметры.ИНН_КПП_НА 	= ИНН_КПП_НА;
			ОбластьРеестрШапка.Параметры.КоличествоСправок 	= НаборЗаписейНА.КолДок.Значение;
			ДокументРеестр.Вывести(ОбластьРеестрШапка);
			
			// Получим структуру набора записей, представляющих данные справки о доходах
			Справка =  ФорматФайлаСведений.НаборыЗаписей.СправкаОДоходах;
			
			// Последовательно читаем справки о доходах
			Для НомерДокумента = 1 По НаборЗаписейНА.КолДок.Значение Цикл
				
				Если НЕ СведенияОДоходахФизлицДополнительный.ПрочитатьНаборЗаписейИзФайла(Справка, ТекстовыйДокумент, ТекущаяСтрокаФайла) Тогда
					Возврат Неопределено;
				КонецЕсли;
				
				// Раздел 1 - Сведения о наловом агенте
				Попытка
					НомерСправки = Число(Сред(Справка.ИдДок.Значение,26,8));
				Исключение	
					НомерСправки = 0;
				КонецПопытки;	
				ОбластьШапкаСправки.Параметры.Год 			= НалоговыйПериодГод;
				ОбластьШапкаСправки.Параметры.НомерСправки 	= НомерСправки;
				ОбластьШапкаСправки.Параметры.ИМНС 			= ИМНС;
				ОбластьШапкаСправки.Параметры.ИНН_КПП_НА 	= ИНН_КПП_НА;
				ОбластьШапкаСправки.Параметры.ТелОтпр 		= НаборЗаписейНА.ТелОтпр.Значение;
				ОбластьШапкаСправки.Параметры.КодОкато 		= Формат(НаборЗаписейНА.ОКАТО.Значение,"ЧН=' '; ЧГ=");
				ОбластьШапкаСправки.Параметры.НазваниеОрганизации = НаборЗаписейНА.НаимОтпр.Значение;
				
				// Раздел 2 - Сведения о налогоплательщике
				
				ФИО  = Справка.ФИО.Значение.Фамилия + " " + Справка.ФИО.Значение.Имя + " " + Справка.ФИО.Значение.Отчество;
				ОбластьШапкаСправки.Параметры.ИННФизЛица 	= Формат(Справка.ИННФЛ.Значение,"ЧН=' '; ЧГ=");
				ОбластьШапкаСправки.Параметры.ФИО 			= ФИО;
				ОбластьШапкаСправки.Параметры.СтраховойНомерПФР	= Справка.НомСтрСвид.Значение;
				ОбластьШапкаСправки.Параметры.СтатусФЛ		= Справка.СтатусФЛ .Значение;
				ОбластьШапкаСправки.Параметры.КодДокумента	= Справка.УдЛичн.Значение.КодДокумента;
				ОбластьШапкаСправки.Параметры.СерияНомерДокумента	= Справка.УдЛичн.Значение.СерияНомер;
				ОбластьШапкаСправки.Параметры.ДатаРождения	= Формат(Справка.ДатаРожд.Значение,"ДФ=dd.MM.yyyy");
				ОбластьШапкаСправки.Параметры.Гражданство   = Справка.Гражд.Значение;
				ОбластьШапкаСправки.Параметры.КодСтраны 	= Справка.АдрМЖ.Значение.Страна; 
				ОбластьШапкаСправки.Параметры.Индекс 		= Справка.АдрМЖ.Значение.Индекс;
				ОбластьШапкаСправки.Параметры.Регион 		= Справка.АдрМЖ.Значение.Регион;
				ОбластьШапкаСправки.Параметры.Район 		= Справка.АдрМЖ.Значение.Район;
				ОбластьШапкаСправки.Параметры.Город 		= Справка.АдрМЖ.Значение.Город;
				ОбластьШапкаСправки.Параметры.НаселенныйПункт = Справка.АдрМЖ.Значение.НаселенныйПункт;
				ОбластьШапкаСправки.Параметры.Улица 		= Справка.АдрМЖ.Значение.Улица;
				ОбластьШапкаСправки.Параметры.Дом 			= Справка.АдрМЖ.Значение.Дом;
				ОбластьШапкаСправки.Параметры.Корпус 		= Справка.АдрМЖ.Значение.Корпус;
				ОбластьШапкаСправки.Параметры.Квартира 		= Справка.АдрМЖ.Значение.Квартира;
				
				Документ2НДФЛ.Вывести(ОбластьШапкаСправки);
				
				// Раздел 3 - Доходы, облагаемые налогом по ставке 13% (30%)  
				
				// Доходы по видам (выводим по два дохода в строку) 
				НомерДохода = 0;
				Для Каждого Строка ИЗ Справка.ДоходВид.Значение  Цикл
					НомерДохода = НомерДохода + 1;
					НомерКолонки = (НомерДохода-1) % 2 + 1;
					ОбластьР3СтрокаДоходов.Параметры["КодДохода" + НомерКолонки] 	= Формат(Строка.КодДохода,"ЧН=' '; ЧГ=");
					ОбластьР3СтрокаДоходов.Параметры["СуммаДохода" + НомерКолонки] 	= ЭтотОбъект.СуммаВОтчет(Строка.СуммаДохода);
					ОбластьР3СтрокаДоходов.Параметры["КодВычета" + НомерКолонки] 	= Формат(Строка.КодВычета,"ЧН=' '; ЧГ=");
					ОбластьР3СтрокаДоходов.Параметры["СуммаВычета" + НомерКолонки] 	= ЭтотОбъект.СуммаВОтчет(Строка.СуммаВычета);
					Если НомерКолонки = 2 Тогда
						Документ2НДФЛ.Вывести(ОбластьР3СтрокаДоходов);
						ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьР3СтрокаДоходов);
					КонецЕсли; 
				КонецЦикла; 
				// вывод последней неполной строки
				Если НомерДохода % 2 <> 0 Тогда
					Документ2НДФЛ.Вывести(ОбластьР3СтрокаДоходов);
					ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьР3СтрокаДоходов);
				КонецЕсли;		
				
				// Доходы по месяцам
				Для М =1 По 12 Цикл
					ОбластьР3ДоходыПоМесяцам.Параметры["Р3_Доход" + М] = ЭтотОбъект.СуммаВОтчет(Справка.ДоходМес.Значение["Доход" + М])
				КонецЦикла; 
				Документ2НДФЛ.Вывести(ОбластьР3ДоходыПоМесяцам);
				
				// Стандартные вычеты
				НомерВычета = 0;
				Для Каждого Строка ИЗ Справка.Вычет.Значение  Цикл
					НомерВычета = НомерВычета + 1;
					НомерКолонки =  (НомерВычета-1) % 4 + 1;
					ОбластьР3СтрокаВычеты.Параметры["КодВычета"+НомерКолонки] 	= Формат(Строка.КодВычета,"ЧН=' '; ЧГ=");
					ОбластьР3СтрокаВычеты.Параметры["СуммаВычета"+НомерКолонки] = ЭтотОбъект.СуммаВОтчет(Строка.СуммаВычета);
					Если НомерКолонки = 4 Тогда
						Документ2НДФЛ.Вывести(ОбластьР3СтрокаВычеты);
						ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьР3СтрокаВычеты);
					КонецЕсли; 
				КонецЦикла;		
				// вывод последней неполной строки
				Если (НомерВычета %4 ) <> 0 Тогда
					Документ2НДФЛ.Вывести(ОбластьР3СтрокаВычеты);
					ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьР3СтрокаВычеты);
				КонецЕсли; 
				
				// Итоги раздела 3
				ОбластьР3Подвал.Параметры.СГДСумм 	= ЭтотОбъект.СуммаВОтчет(Справка.СГДСумм.Значение);
				ОбластьР3Подвал.Параметры.ОблСумм 	= ЭтотОбъект.СуммаВОтчет(Справка.ОблСумм.Значение);
				ОбластьР3Подвал.Параметры.НИОблСумм = ЭтотОбъект.СуммаВОтчет(Справка.НИОблСумм.Значение);
				ОбластьР3Подвал.Параметры.НУОблСумм = ЭтотОбъект.СуммаВОтчет(Справка.НУОблСумм.Значение);
				Документ2НДФЛ.Вывести(ОбластьР3Подвал);
				
				// Раздел 4 - Дивиденты
				ОбластьР4Р5Шапка.Параметры.ДивСумм 	= ЭтотОбъект.СуммаВОтчет(Справка.ДивСумм.Значение);
				ОбластьР4Р5Шапка.Параметры.ДивОбл 	= ЭтотОбъект.СуммаВОтчет(Справка.ДивОбл.Значение);
				ОбластьР4Р5Шапка.Параметры.НИДив  	= ЭтотОбъект.СуммаВОтчет(Справка.НИДив.Значение);
				ОбластьР4Р5Шапка.Параметры.НУДив  	= ЭтотОбъект.СуммаВОтчет(Справка.НУДив.Значение);
				Документ2НДФЛ.Вывести(ОбластьР4Р5Шапка);
				
				// Раздел 5 - Доходы по ставке 35%
				
				// Доходы по видам (выводим по два дохода в строку) 
				НомерДохода = 0;
				Для Каждого Строка ИЗ Справка.ДоходВидДр.Значение  Цикл
					НомерДохода = НомерДохода + 1;
					НомерКолонки = (НомерДохода-1) % 2 + 1;
					ОбластьР5СтрокаДоходов.Параметры["КодДохода" + НомерКолонки] 	= Формат(Строка.КодДохода,"ЧН=' '; ЧГ=");
					ОбластьР5СтрокаДоходов.Параметры["СуммаДохода" + НомерКолонки] 	= ЭтотОбъект.СуммаВОтчет(Строка.СуммаДохода);
					ОбластьР5СтрокаДоходов.Параметры["КодВычета" + НомерКолонки] 	= Формат(Строка.КодВычета,"ЧН=' '; ЧГ=");
					ОбластьР5СтрокаДоходов.Параметры["СуммаВычета" + НомерКолонки] 	= ЭтотОбъект.СуммаВОтчет(Строка.СуммаВычета);
					Если НомерКолонки = 2 Тогда
						Документ2НДФЛ.Вывести(ОбластьР5СтрокаДоходов);
						ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьР5СтрокаДоходов);
					КонецЕсли; 
				КонецЦикла; 
				// вывод последней неполной строки
				Если НомерДохода % 2 <> 0 Тогда
					Документ2НДФЛ.Вывести(ОбластьР5СтрокаДоходов);
					ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьР5СтрокаДоходов);
				КонецЕсли;		
				
				// итоги раздела 5
				ОбластьР5Подвал_Р7Шапка.Параметры.ДохСуммДр 	= ЭтотОбъект.СуммаВОтчет(Справка.ДохСуммДр.Значение);
				ОбластьР5Подвал_Р7Шапка.Параметры.ОблДохДр	 	= ЭтотОбъект.СуммаВОтчет(Справка.ОблДохДр.Значение);
				ОбластьР5Подвал_Р7Шапка.Параметры.НИОблДохДр 	= ЭтотОбъект.СуммаВОтчет(Справка.НИОблДохДр.Значение);
				ОбластьР5Подвал_Р7Шапка.Параметры.НУОблДохДр	= ЭтотОбъект.СуммаВОтчет(Справка.НУОблДохДр.Значение);
				
				// Раздел 6 - Общая сумма налога на доходы по итогам налогового периода
				
				ОбластьР5Подвал_Р7Шапка.Параметры.НИОбщСумм 	= ЭтотОбъект.СуммаВОтчет(Справка.НИОбщСумм.Значение);
				ОбластьР5Подвал_Р7Шапка.Параметры.НУОбщСумм	 	= ЭтотОбъект.СуммаВОтчет(Справка.НУОбщСумм.Значение);
				ОбластьР5Подвал_Р7Шапка.Параметры.ВозврИМНС 	= ЭтотОбъект.СуммаВОтчет(Справка.ВозврИМНС.Значение);
				ОбластьР5Подвал_Р7Шапка.Параметры.ЗачСумм		= ЭтотОбъект.СуммаВОтчет(Справка.ЗачСумм.Значение);
				ОбластьР5Подвал_Р7Шапка.Параметры.ДолгНП 		= ЭтотОбъект.СуммаВОтчет(Справка.ДолгНП.Значение);
				ОбластьР5Подвал_Р7Шапка.Параметры.ДолгНА 		= ЭтотОбъект.СуммаВОтчет(Справка.ДолгНА.Значение);
				ОбластьР5Подвал_Р7Шапка.Параметры.ВзыскИМНС 	= ЭтотОбъект.СуммаВОтчет(Справка.ВзыскИМНС.Значение);
				Документ2НДФЛ.Вывести(ОбластьР5Подвал_Р7Шапка);
				
				// Раздел 7 - Доходы от продажи имущества 
				
				// Доходы по видам (выводим по три дохода в строку) 
				НомерДохода = 0;
				Для Каждого Строка ИЗ Справка.ДохИмущ.Значение  Цикл
					НомерДохода = НомерДохода + 1;
					НомерКолонки = (НомерДохода-1) % 3 + 1;
					ОбластьР7СтрокаДоходов.Параметры["КодДохода" + НомерКолонки] 	= Формат(Строка.КодДохода,"ЧН=' '; ЧГ=");
					ОбластьР7СтрокаДоходов.Параметры["СуммаДохода" + НомерКолонки] 	= ЭтотОбъект.СуммаВОтчет(Строка.СуммаДохода);
					Если НомерКолонки = 3 Тогда
						Документ2НДФЛ.Вывести(ОбластьР7СтрокаДоходов);
						ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьР7СтрокаДоходов);
					КонецЕсли; 
				КонецЦикла; 
				// вывод последней неполной строки
				Если НомерДохода % 3 <> 0 Тогда
					Документ2НДФЛ.Вывести(ОбластьР7СтрокаДоходов);
					ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластьР7СтрокаДоходов);
				КонецЕсли;		
				
				
				// Подвал справки
				ОбластьПодвалСправки.Параметры.ДатаСоставления = Формат(ДатаСоставления,"ДФ=dd.MM.yyyy");
				ОбластьПодвалСправки.Параметры.ГлБух = ФИОГлавногоБухгалтера;
				Документ2НДФЛ.Вывести(ОбластьПодвалСправки);
				Документ2НДФЛ.ВывестиГоризонтальныйРазделительСтраниц();
				
				// Строка реестра
				
				ОбщийДоходФизЛица = Справка.СГДСумм.Значение + Справка.ДивСумм.Значение + Справка.ДохСуммДр.Значение + Справка.ДохИмущ.Значение.Итог("СуммаДохода");
				ОбластьРеестрСтрока.Параметры.НомерСправки = НомерСправки;
				ОбластьРеестрСтрока.Параметры.ФИО = ФИО;
				ОбластьРеестрСтрока.Параметры.ОбщДоход = ЭтотОбъект.СуммаВОтчет(ОбщийДоходФизЛица);
				ОбластьРеестрСтрока.Параметры.НИОбщСумм 	= ЭтотОбъект.СуммаВОтчет(Справка.НИОбщСумм.Значение);
				ОбластьРеестрСтрока.Параметры.НУОбщСумм	 	= ЭтотОбъект.СуммаВОтчет(Справка.НУОбщСумм.Значение);
				ДокументРеестр.Вывести(ОбластьРеестрСтрока);
				
				// Итоговые счетчики реестра
				ИтогоДоход 		= ИтогоДоход + ОбщийДоходФизЛица;
				ИтогоИсчНалог 	= ИтогоИсчНалог + Справка.НИОбщСумм.Значение;
				ИтогоУдНалог 	= ИтогоУдНалог + Справка.НУОбщСумм.Значение;
				
				// Подготовка к следующей итерации
				СведенияОДоходахФизлицДополнительный.ОчиститьДанныеНабораЗаписей(Справка);
			КонецЦикла; 
			
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(ОбластьРеестрШапка.Параметры.КоличествоСправок) Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Не обнаружено ни одной справки о доходах!");
		Иначе
			
			// Вывод подвала реестра
			ОбластьРеестрПодвал.Параметры.ОбщДоход 	= ЭтотОбъект.СуммаВОтчет(ИтогоДоход);
			ОбластьРеестрПодвал.Параметры.НИОбщСумм = ЭтотОбъект.СуммаВОтчет(ИтогоИсчНалог);
			ОбластьРеестрПодвал.Параметры.НУОбщСумм	= ЭтотОбъект.СуммаВОтчет(ИтогоУдНалог);
			ОбластьРеестрПодвал.Параметры.ФИОРуководителя = ОтветственныеЛица.Руководитель;
			ДокументРеестр.Вывести(ОбластьРеестрПодвал);
			
			Форма = УниверсальныеМеханизмы.НапечататьДокумент(Документ2НДФЛ, 1 , Ложь, "Сведения о доходах физических лиц (Формы 2-НДФЛ)");
			// Реестр нужен только для ИФНС 
			Если ЭтотОбъект.НазначениеСправки = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ДляПередачиВИФНС Тогда
				Возврат УниверсальныеМеханизмы.НапечататьДокумент(ДокументРеестр, 2 , Ложь, "Реестр сведений о доходах");
			КонецЕсли;
			
			Возврат Форма
		КонецЕсли;
		
	КонецЕсли;

КонецФункции // Печать

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы документа

Процедура НалоговыйПериодПриИзмененииДополнительно(ЭтаФорма) Экспорт
	
	СведенияОДоходахФизлицДополнительный.ОпределитьДействующиеСтавкиНалога(ЭтаФорма.НалоговыйПериод, ЭтаФорма);
	
КонецПроцедуры	

Процедура ПередОткрытиемДополнительно(ЭтаФорма, ДополнительныеДействия) Экспорт
	
	КнопкаПодменю = ЭтаФорма.ЭлементыФормы.ДействияФормы.Кнопки.Подменю1;	
	
	Если ЭтаФорма.ПеречисленоНДФЛПоФизлицам.Количество() + ЭтаФорма.ПеречисленоНДФЛВсего.Количество() > 0 Тогда
		СведенияОДоходахФизлицДополнительный.ВставитьКнопкуВПодменю(2, КнопкаПодменю, "Разделитель2",		ТипКнопкиКоманднойПанели.Разделитель);
		СведенияОДоходахФизлицДополнительный.ВставитьКнопкуВПодменю(3, КнопкаПодменю, "ПеречисленоНДФЛ", 	ТипКнопкиКоманднойПанели.Действие, "Справочно о перечисленном НДФЛ", ДополнительныеДействия);
	КонецЕсли;

КонецПроцедуры

Процедура ВыполнитьДополнительныеДействия(Кнопка, ЭтаФорма, ЭтотОбъект) Экспорт
	
	ФормаПеречисленоНДФЛ = ЭтотОбъект.ПолучитьФорму("ФормаПеречисленоНДФЛ", ЭтаФорма);
	ФормаПеречисленоНДФЛ.Открыть();
	
КонецПроцедуры

#КонецЕсли