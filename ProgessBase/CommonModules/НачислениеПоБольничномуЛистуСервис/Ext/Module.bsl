
Функция ПроцентОплатыБольничногоПоСтраховомуСтажу(Лет) Экспорт

	Возврат ?(Лет >= 8, 100,?(Лет >= 5, 80, 60))

КонецФункции

Процедура ПрочитатьДанныеОЛьготах(Объект) Экспорт
	
	Сотрудник = Объект.Сотрудник;
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		
		Запрос = Новый Запрос;
		Если Объект.ПериодРегистрации < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Или Объект.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СотрудникиОрганизаций.Физлицо,
			|	ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка) КАК ВыплатаЗаСчетФедеральногоБюджета
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			|ГДЕ
			|	СотрудникиОрганизаций.Ссылка = &Ссылка";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СотрудникиОрганизаций.Физлицо,
			|	ВЫБОР
			|		КОГДА СотрудникиОрганизаций.Физлицо.ЛьготаПриНачисленииПособий = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПриНачисленииБольничных.Маяк)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк)
			|		КОГДА СотрудникиОрганизаций.Физлицо.ЛьготаПриНачисленииПособий = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПриНачисленииБольничных.ПодразделенияОсобогоРиска)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска)
			|		КОГДА СотрудникиОрганизаций.Физлицо.ЛьготаПриНачисленииПособий = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПриНачисленииБольничных.Семипалатинск)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск)
			|		КОГДА СотрудникиОрганизаций.Физлицо.ЛьготаПриНачисленииПособий = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПриНачисленииБольничных.Чернобыль)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль)
			|		КОГДА ФизическиеЛицаСтажи.НомерСтроки ЕСТЬ НЕ NULL 
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПустаяСсылка)
			|	КОНЕЦ КАК ВыплатаЗаСчетФедеральногоБюджета
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Стажи КАК ФизическиеЛицаСтажи
			|		ПО СотрудникиОрганизаций.Физлицо = ФизическиеЛицаСтажи.Ссылка
			|			И (ФизическиеЛицаСтажи.ВидСтажа = ЗНАЧЕНИЕ(Справочник.ВидыСтажа.РасширенныйСтраховойСтажДляБЛ))
			|ГДЕ
			|	СотрудникиОрганизаций.Ссылка = &Ссылка";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Ссылка", Сотрудник);
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Объект, Выборка);
		
	Иначе
		
		Объект.Физлицо = "";
		Объект.ВыплатаЗаСчетФедеральногоБюджета = "";
		
	КонецЕсли;
	
	Объект.ПрименятьЛьготыПриНачисленииПособия = ЗначениеЗаполнено(Объект.ВыплатаЗаСчетФедеральногоБюджета);

КонецПроцедуры

Процедура ПрочитатьРазмерыПособия(Объект, ДополнительныеДанные, ТолькоДополнительныеДанные, ГоловнаяОрганизация = Неопределено) Экспорт

	// обновляем дополнительные данные
	НачислениеПоБольничномуЛистуПереопределяемый.ОбновитьРазмерыПособия(Объект, ДополнительныеДанные, Истина);
	
	Если ТолькоДополнительныеДанные Тогда
		Возврат
	КонецЕсли;
	
	Если ГоловнаяОрганизация = Неопределено Тогда
		ГоловнаяОрганизация = ОбщегоНазначенияЗК.ГоловнаяОрганизация(Объект.Организация)
	КонецЕсли;
	
	ДатаНачалаСобытия			= Объект.ДатаНачалаСобытия;
	Сотрудник					= Объект.Сотрудник;
	Физлицо						= Объект.Физлицо;
	ПричинаНетрудоспособности	= Объект.ПричинаНетрудоспособности;
	ДатаНачала					= Объект.ДатаНачала;
	ДатаОкончания				= Объект.ДатаОкончания;
	
	// пересчитываем стаж
	Лет	= 0; Месяцев = 0; ДатаСтажа = '00010101';
	Если ЗначениеЗаполнено(ДатаНачалаСобытия) Тогда
		ДатаСтажа = ПроведениеРасчетов.ПолучитьНачалоСтажаДляБольничногоЛиста(ДатаНачалаСобытия, Физлицо, ГоловнаяОрганизация);
		Если ЗначениеЗаполнено(ДатаСтажа) Тогда
			ОбщегоНазначенияЗК.РазобратьРазностьДат(ДатаНачалаСобытия, ДатаСтажа, Лет, Месяцев);
			Если Лет * 12 + Месяцев >= 6 Тогда
				Объект.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение
			Иначе
				Объект.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ;
			КонецЕсли;
		Иначе
			Объект.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ;
			Объект.ПроцентОплаты = 60;
		КонецЕсли;
	КонецЕсли;
	Объект.СтажЛет = Лет;
	Объект.СтажМесяцев = Месяцев;
	
	// определяем процент оплаты и ограничение
	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве Тогда
		
		Объект.ПроцентОплаты = 100;
		Объект.ОграничениеПособия = ?(ДатаНачалаСобытия < ПроведениеРасчетов.ДатаВводаОрганиченийДляПособийПоНС_ПЗ(), Перечисления.ВидыОграниченияПособия.БезОграничений, Перечисления.ВидыОграниченияПособия.ОграничениеМаксимальнымРазмеромЕжемесячнойСтраховойВыплаты);
		
	ИначеЕсли ДатаНачалаСобытия = '00010101' Тогда
		
		Объект.ПроцентОплаты = 100;
		Объект.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение;
		
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда	
		
		Объект.ПроцентОплаты = 100;
		
	ИначеЕсли ЗначениеЗаполнено(ДатаСтажа) Тогда
		
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА  РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|		ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
		|	КОНЕЦ КАК ПричинаИзмененияСостояния
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Сотрудник = &Сотрудник) КАК РаботникиОрганизацийСрезПоследних
		|ГДЕ
		|	ВЫБОР
		|		КОГДА  РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|		ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
		|	КОНЕЦ <> &Увольнение";
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ДатаАктуальности",	ДатаНачалаСобытия);
		Запрос.УстановитьПараметр("Сотрудник",			Сотрудник);
		Запрос.УстановитьПараметр("Увольнение",			Перечисления.ПричиныИзмененияСостояния.Увольнение);
		
		УжеНеРаботает = Запрос.Выполнить().Пустой(); // в рег-ре РаботникиОрганизаций нет других записей, кроме как об увольнении
		
		Объект.ПроцентОплаты = ?(УжеНеРаботает, 60, ПроцентОплатыБольничногоПоСтраховомуСтажу(Лет));
		
		Если УжеНеРаботает Тогда
			Объект.УсловияИсчисленияКод1 = "47"
		КонецЕсли;
		
	КонецЕсли;
	
	// уточняем процент оплаты и ограничение для некоторых ситуаций
	НачислениеПоБольничномуЛистуПереопределяемый.ОбновитьРазмерыПособия(Объект, Ложь, Ложь);
	
	// определяем параметры с учетом льгот сотрудника
	Если ЗначениеЗаполнено(Объект.ВыплатаЗаСчетФедеральногоБюджета) И ПричинаНетрудоспособности <> Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве Тогда
		
		Объект.ПроцентОплатыБезЛьгот = Объект.ПроцентОплаты;
		Объект.ОграничениеПособияБезЛьгот = Объект.ОграничениеПособия;
		Объект.СтажБезНестраховыхПериодовЛет = Объект.СтажЛет;
		Объект.СтажБезНестраховыхПериодовСтажМесяцев = Объект.СтажМесяцев;
		
		Если Объект.ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов Тогда
			Если ДатаНачалаСобытия = '00010101' Тогда
				Объект.ПроцентОплаты = 100;
				Объект.СтажЛет = 0;
				Объект.СтажМесяцев = 0;
			Иначе
				
				ДатаСтажа = ПроведениеРасчетов.ПолучитьНачалоСтажаДляБольничногоЛиста(ДатаНачалаСобытия, Физлицо, ГоловнаяОрганизация, Справочники.ВидыСтажа.РасширенныйСтраховойСтажДляБЛ);
				Лет	= 0; Месяцев = 0; 
				Если ЗначениеЗаполнено(ДатаСтажа) Тогда
					ОбщегоНазначенияЗК.РазобратьРазностьДат(ДатаНачалаСобытия, ДатаСтажа, Лет, Месяцев);
					Если Лет * 12 + Месяцев >= 6 Тогда
						Объект.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение
					Иначе
						Объект.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ;
					КонецЕсли;
				Иначе
					Объект.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ;
					Объект.ПроцентОплаты = 60;
				КонецЕсли;
				Объект.СтажЛет = Лет;
				Объект.СтажМесяцев = Месяцев;
				
				Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда	
					
					Объект.ПроцентОплаты = 100;
					
				ИначеЕсли ЗначениеЗаполнено(ДатаСтажа) Тогда
					
					Запрос = Новый Запрос;
					ТекстЗапроса = 
					"ВЫБРАТЬ
					|	ВЫБОР
					|		КОГДА  РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
					|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
					|		ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
					|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
					|	КОНЕЦ КАК ПричинаИзмененияСостояния
					|ИЗ
					|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Сотрудник = &Сотрудник) КАК РаботникиОрганизацийСрезПоследних
					|ГДЕ
					|	ВЫБОР
					|		КОГДА  РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
					|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
					|		ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
					|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
					|	КОНЕЦ <> &Увольнение";
					
					Запрос.Текст = ТекстЗапроса;
					Запрос.УстановитьПараметр("ДатаАктуальности",	ДатаНачалаСобытия);
					Запрос.УстановитьПараметр("Сотрудник",			Сотрудник);
					Запрос.УстановитьПараметр("Увольнение",			Перечисления.ПричиныИзмененияСостояния.Увольнение);
					
					УжеНеРаботает = Запрос.Выполнить().Пустой(); // в рег-ре РаботникиОрганизаций нет других записей, кроме как об увольнении
					Объект.ПроцентОплаты = ?(УжеНеРаботает, 60, ПроцентОплатыБольничногоПоСтраховомуСтажу(Лет));
						
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			Объект.ПроцентОплаты = 100;
			Объект.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение;
		КонецЕсли;
	Иначе  
		Объект.ПроцентОплатыБезЛьгот = 0;
		Объект.ОграничениеПособияБезЛьгот = "";
		Объект.СтажБезНестраховыхПериодовЛет = 0;
		Объект.СтажБезНестраховыхПериодовСтажМесяцев = 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьРазмерыПособияПоСтажу(ПричинаНетрудоспособности, Лет, Месяцев, Процент, Ограничение) Экспорт

	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве Тогда
		Возврат	
	КонецЕсли;
		
	Ограничение = ?(Лет * 12 + Месяцев >= 6, Перечисления.ВидыОграниченияПособия.ОбщееОграничение, Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ);
	
	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда	
		Возврат	
	КонецЕсли;
		
	Процент = ПроцентОплатыБольничногоПоСтраховомуСтажу(Лет);
	
КонецПроцедуры

///// ПРОЦЕДУРЫ ОБРАБОТКИ ДВУМЕРНОГО СКАНЕРА ШТРИХКОДОВ /////

Функция ДатаИзСтроки(ДатаСтрокой)
	
	Если ПустаяСтрока(ДатаСтрокой) Или СтрДлина(ДатаСтрокой) <> 10 Или ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(ДатаСтрокой, "-").Количество() <> 3 Тогда
		Возврат Дата(1, 1, 1);
	КонецЕсли;
	
	Возврат Дата(Сред(ДатаСтрокой, 1, 4), Сред(ДатаСтрокой, 6, 2), Сред(ДатаСтрокой, 9, 2));
	
КонецФункции

Функция ЭтоДвумерныйШтрихкодБольничного(ОписаниеСобытия) Экспорт
	
	Возврат Найти(ОписаниеСобытия.Данные, "!!8!!") = 1;
	
КонецФункции

Функция ОбработатьСобытиеОтСканераШтрихкода(ОписаниеСобытия, ОписаниеОшибки = "") Экспорт
	
	Если Не ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.НачислениеПоБольничномуЛисту) Тогда
		ОписаниеОшибки = НСтр("ru = 'У текущего пользователя нет прав на ввод начислений по больничному листу!'");
		Возврат Ложь;
	КонецЕсли;
	
	СписокПараметров = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(Сред(ОписаниеСобытия.Данные, 7), "!");
	Если СписокПараметров.Количество() = 0 Тогда
		ОписаниеОшибки = НСтр("ru = 'В считанном штрихкоде отсутствуют сведения о листке нетрудоспособности!'");
		Возврат Ложь;
	КонецЕсли;
	
	// Прочитаем и заполним структуру реквизитов в зависимости от версии
	// Имена полей в структуре должны совпадать с именами реквизитов документа
	СтруктураРеквизитов = Новый Структура;
	Если СписокПараметров[0] = "01" Тогда
		СтруктураРеквизитов.Вставить("НомерВходящегоДокумента",							СписокПараметров[1]);
		
		ВходящийНомерПервичногоЛистка	= СписокПараметров[2];
		
		СтруктураРеквизитов.Вставить("ЯвляетсяПродолжениемБолезни",						СписокПараметров[3] = "0");
		СтруктураРеквизитов.Вставить("ЯвляетсяДубликатом",								СписокПараметров[4] = "1");
		СтруктураРеквизитов.Вставить("ДатаВыдачиБольничного",							ДатаИзСтроки(СписокПараметров[5]));
		СтруктураРеквизитов.Вставить("НаименованиеЛПУ",									СписокПараметров[6]);
		СтруктураРеквизитов.Вставить("АдресЛПУ",										СписокПараметров[7]);
		СтруктураРеквизитов.Вставить("ОГРН_ЛПУ",										СписокПараметров[8]);
		СтруктураРеквизитов.Вставить("Фамилия",											СписокПараметров[9]);
		СтруктураРеквизитов.Вставить("Имя",												СписокПараметров[10]);
		СтруктураРеквизитов.Вставить("Отчество",										СписокПараметров[11]);
		ДатаРожденияСотрудника	= ДатаИзСтроки(СписокПараметров[12]);
		ВидЗанятостиСотрудника	= ?(СписокПараметров[15] = "0", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
		
		НаименованиеОрганизации	= СписокПараметров[14];
		
		СтруктураРеквизитов.Вставить("КодПричиныНетрудоспособности",					СписокПараметров[16]);
		СтруктураРеквизитов.Вставить("ДополнительныйКодПричиныНетрудоспособности",		СписокПараметров[17]);
		СтруктураРеквизитов.Вставить("ВторойКодПричиныНетрудоспособности",				СписокПараметров[18]);
		СтруктураРеквизитов.Вставить("НомерЛисткаПоОсновномуМестуРаботы",				СписокПараметров[19]);
		СтруктураРеквизитов.Вставить("ДатаИзмененияКодаПричиныНетрудоспособности",		ДатаИзСтроки(СписокПараметров[21]));
		СтруктураРеквизитов.Вставить("ДатаОкончанияПутевки",							ДатаИзСтроки(СписокПараметров[22]));
		СтруктураРеквизитов.Вставить("НомерПутевки",									СписокПараметров[23]);
		СтруктураРеквизитов.Вставить("ОГРН_Санатория",									СписокПараметров[24]);
		
		УходЗаБольнымЧленомСемьи = Новый Массив;
		Если СписокПараметров[28] <> "" Тогда
			УходЗаБольнымЧленомСемьи.Добавить(Новый Структура("ВозрастЛет, ВозрастМесяцев, РодственнаяСвязь, ФИО", СписокПараметров[25], СписокПараметров[26], СписокПараметров[27], СписокПараметров[28]));
		КонецЕсли;
		Если СписокПараметров[32] <> "" Тогда
			УходЗаБольнымЧленомСемьи.Добавить(Новый Структура("ВозрастЛет, ВозрастМесяцев, РодственнаяСвязь, ФИО", СписокПараметров[29], СписокПараметров[30], СписокПараметров[31], СписокПараметров[32]));
		КонецЕсли;
		СтруктураРеквизитов.Вставить("УходЗаБольнымЧленомСемьи",						УходЗаБольнымЧленомСемьи);
		
		СтруктураРеквизитов.Вставить("ПоставленаНаУчетВРанниеСрокиБеременности",		СписокПараметров[33] = "1");
		СтруктураРеквизитов.Вставить("ПериодНахожденияВСтационареСРебенкомС",			ДатаИзСтроки(СписокПараметров[34]));
		СтруктураРеквизитов.Вставить("ПериодНахожденияВСтационареСРебенкомПо",			ДатаИзСтроки(СписокПараметров[35]));
		СтруктураРеквизитов.Вставить("КодНарушенияРежима",								СписокПараметров[36]);
		СтруктураРеквизитов.Вставить("ДатаНарушенияРежима",								ДатаИзСтроки(СписокПараметров[37]));
		СтруктураРеквизитов.Вставить("ДатаНаправленияВБюроМСЭ",							ДатаИзСтроки(СписокПараметров[38]));
		СтруктураРеквизитов.Вставить("ДатаРегистрацииДокументовМСЭ",					ДатаИзСтроки(СписокПараметров[39]));
		СтруктураРеквизитов.Вставить("ДатаОсвидетельствованияМСЭ",						ДатаИзСтроки(СписокПараметров[40]));
		
		СтруктураРеквизитов.Вставить("ГруппаИнвалидности",								СписокПараметров[41]);
		СтруктураРеквизитов.Вставить("УстановленаИзмененаГруппаИнвалидности ",			СписокПараметров[41] <> "");
		
		СтруктураРеквизитов.Вставить("ДатаНачала",										ДатаИзСтроки(СписокПараметров[42]));
		СтруктураРеквизитов.Вставить("ДатаНачалаОплаты",								ДатаИзСтроки(СписокПараметров[42]));
		СтруктураРеквизитов.Вставить("ДатаНачалаСобытия",								?(Не СтруктураРеквизитов.ЯвляетсяПродолжениемБолезни, ДатаИзСтроки(СписокПараметров[42]), Дата(1, 1, 1)));
		СтруктураРеквизитов.Вставить("ДатаОкончания",									ДатаИзСтроки(СписокПараметров[43]));
		
		ОсвобождениеОтРаботыВЛисткеНетрудоспособности = Новый Массив;
		Если СписокПараметров[42] <> "" Тогда
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача", ДатаИзСтроки(СписокПараметров[42]), ДатаИзСтроки(СписокПараметров[43]), СписокПараметров[44], СписокПараметров[45]));
		КонецЕсли;
		Если СписокПараметров[46] <> "" Тогда
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача", ДатаИзСтроки(СписокПараметров[46]), ДатаИзСтроки(СписокПараметров[47]), СписокПараметров[48], СписокПараметров[49]));
		КонецЕсли;
		Если СписокПараметров[50] <> "" Тогда
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача", ДатаИзСтроки(СписокПараметров[50]), ДатаИзСтроки(СписокПараметров[51]), СписокПараметров[52], СписокПараметров[53]));
		КонецЕсли;
		СтруктураРеквизитов.Вставить("ОсвобождениеОтРаботыВЛисткеНетрудоспособности",	ОсвобождениеОтРаботыВЛисткеНетрудоспособности);
		
		СтруктураРеквизитов.Вставить("НовыйСтатусНетрудопособного",						СписокПараметров[54]);
		СтруктураРеквизитов.Вставить("ДатаНовыйСтатусНетрудопособного",					ДатаИзСтроки(СписокПараметров[55]));
		СтруктураРеквизитов.Вставить("ДатаВыходаНаРаботу",								ДатаИзСтроки(СписокПараметров[56]));
		СтруктураРеквизитов.Вставить("НомерЛисткаПродолжения",							СокрЛП(СписокПараметров[57]));
		
		Если СтруктураРеквизитов.КодПричиныНетрудоспособности = "01" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "02" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "03" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.Карантин);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "04" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "07" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "05" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "06" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.Протезирование);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "08" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "09" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "10" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "11" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "12" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "13" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "14" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "15" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриВИЧ);
			
		Иначе
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			ОписаниеОшибки = "Неизвестный код '" + СтруктураРеквизитов.КодПричиныНетрудоспособности + "' причины нетрудоспособности. В качестве причины нетрудоспособности установлено '" + Строка(Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание) + "'." + Символы.ПС;
			
		КонецЕсли;
		
	ИначеЕсли СписокПараметров[0] = "" Тогда // Неопубликованная версия
		СтруктураРеквизитов.Вставить("НомерВходящегоДокумента",							СписокПараметров[1]);
		
		ВходящийНомерПервичногоЛистка	= СписокПараметров[2];
		
		СтруктураРеквизитов.Вставить("ЯвляетсяПродолжениемБолезни",						СписокПараметров[3] = "0");
		СтруктураРеквизитов.Вставить("ЯвляетсяДубликатом",								СписокПараметров[4] = "1");
		СтруктураРеквизитов.Вставить("ДатаВыдачиБольничного",							ДатаИзСтроки(СписокПараметров[5]));
		СтруктураРеквизитов.Вставить("НаименованиеЛПУ",									СписокПараметров[6]);
		СтруктураРеквизитов.Вставить("АдресЛПУ",										СписокПараметров[7]);
		СтруктураРеквизитов.Вставить("ОГРН_ЛПУ",										СписокПараметров[8]);
		СтруктураРеквизитов.Вставить("Фамилия",											СписокПараметров[9]);
		СтруктураРеквизитов.Вставить("Имя",												СписокПараметров[10]);
		СтруктураРеквизитов.Вставить("Отчество",										СписокПараметров[11]);
		ДатаРожденияСотрудника	= ДатаИзСтроки(СписокПараметров[12]);
		ВидЗанятостиСотрудника	= ?(СписокПараметров[15] = "0", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
		
		НаименованиеОрганизации	= СписокПараметров[14];
		
		СтруктураРеквизитов.Вставить("КодПричиныНетрудоспособности",					СписокПараметров[16]);
		СтруктураРеквизитов.Вставить("ДополнительныйКодПричиныНетрудоспособности",		СписокПараметров[17]);
		СтруктураРеквизитов.Вставить("ВторойКодПричиныНетрудоспособности",				СписокПараметров[18]);
		СтруктураРеквизитов.Вставить("НомерЛисткаПоОсновномуМестуРаботы",				СписокПараметров[19]);
		СтруктураРеквизитов.Вставить("ДатаИзмененияКодаПричиныНетрудоспособности",		ДатаИзСтроки(СписокПараметров[21]));
		СтруктураРеквизитов.Вставить("ДатаОкончанияПутевки",							ДатаИзСтроки(СписокПараметров[22]));
		СтруктураРеквизитов.Вставить("НомерПутевки",									СписокПараметров[23]);
		СтруктураРеквизитов.Вставить("ОГРН_Санатория",									СписокПараметров[24]);
		
		УходЗаБольнымЧленомСемьи = Новый Массив;
		Если СписокПараметров[28] <> "" Тогда
			УходЗаБольнымЧленомСемьи.Добавить(Новый Структура("ВозрастЛет, ВозрастМесяцев, РодственнаяСвязь, ФИО", СписокПараметров[25], СписокПараметров[26], СписокПараметров[27], СписокПараметров[28]));
		КонецЕсли;
		Если СписокПараметров[32] <> "" Тогда
			УходЗаБольнымЧленомСемьи.Добавить(Новый Структура("ВозрастЛет, ВозрастМесяцев, РодственнаяСвязь, ФИО", СписокПараметров[29], СписокПараметров[30], СписокПараметров[31], СписокПараметров[32]));
		КонецЕсли;
		СтруктураРеквизитов.Вставить("УходЗаБольнымЧленомСемьи",						УходЗаБольнымЧленомСемьи);
		
		СтруктураРеквизитов.Вставить("ПоставленаНаУчетВРанниеСрокиБеременности",		СписокПараметров[33] = "1");
		СтруктураРеквизитов.Вставить("ПериодНахожденияВСтационареСРебенкомС",			ДатаИзСтроки(СписокПараметров[34]));
		СтруктураРеквизитов.Вставить("ПериодНахожденияВСтационареСРебенкомПо",			ДатаИзСтроки(СписокПараметров[35]));
		СтруктураРеквизитов.Вставить("КодНарушенияРежима",								СписокПараметров[36]);
		СтруктураРеквизитов.Вставить("ДатаНарушенияРежима",								ДатаИзСтроки(СписокПараметров[37]));
		СтруктураРеквизитов.Вставить("ДатаНаправленияВБюроМСЭ",							ДатаИзСтроки(СписокПараметров[38]));
		СтруктураРеквизитов.Вставить("ДатаРегистрацииДокументовМСЭ",					ДатаИзСтроки(СписокПараметров[39]));
		СтруктураРеквизитов.Вставить("ДатаОсвидетельствованияМСЭ",						ДатаИзСтроки(СписокПараметров[40]));
		
		СтруктураРеквизитов.Вставить("ГруппаИнвалидности",								СписокПараметров[41]);
		СтруктураРеквизитов.Вставить("УстановленаИзмененаГруппаИнвалидности ",			СписокПараметров[41] <> "");
		
		СтруктураРеквизитов.Вставить("ДатаНачала",										ДатаИзСтроки(СписокПараметров[42]));
		СтруктураРеквизитов.Вставить("ДатаНачалаОплаты",								ДатаИзСтроки(СписокПараметров[42]));
		СтруктураРеквизитов.Вставить("ДатаНачалаСобытия",								?(Не СтруктураРеквизитов.ЯвляетсяПродолжениемБолезни, ДатаИзСтроки(СписокПараметров[42]), Дата(1, 1, 1)));
		СтруктураРеквизитов.Вставить("ДатаОкончания",									ДатаИзСтроки(СписокПараметров[43]));
		
		ОсвобождениеОтРаботыВЛисткеНетрудоспособности = Новый Массив;
		Если СписокПараметров[42] <> "" Тогда
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача, ИдентификационныйНомерВрача, ФИОВрачаПредседателяВК", ДатаИзСтроки(СписокПараметров[42]), ДатаИзСтроки(СписокПараметров[43]), СписокПараметров[44], СписокПараметров[45], СписокПараметров[46], СписокПараметров[48]));
		КонецЕсли;
		Если СписокПараметров[50] <> "" Тогда
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача, ИдентификационныйНомерВрача, ФИОВрачаПредседателяВК", ДатаИзСтроки(СписокПараметров[50]), ДатаИзСтроки(СписокПараметров[51]), СписокПараметров[52], СписокПараметров[53], СписокПараметров[54], СписокПараметров[56]));
		КонецЕсли;
		Если СписокПараметров[58] <> "" Тогда
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача, ИдентификационныйНомерВрача, ФИОВрачаПредседателяВК", ДатаИзСтроки(СписокПараметров[58]), ДатаИзСтроки(СписокПараметров[59]), СписокПараметров[60], СписокПараметров[61], СписокПараметров[62], СписокПараметров[64]));
		КонецЕсли;
		СтруктураРеквизитов.Вставить("ОсвобождениеОтРаботыВЛисткеНетрудоспособности",	ОсвобождениеОтРаботыВЛисткеНетрудоспособности);
		
		СтруктураРеквизитов.Вставить("НовыйСтатусНетрудопособного",						СписокПараметров[66]);
		СтруктураРеквизитов.Вставить("ДатаНовыйСтатусНетрудопособного",					ДатаИзСтроки(СписокПараметров[67]));
		СтруктураРеквизитов.Вставить("ДатаВыходаНаРаботу",								ДатаИзСтроки(СписокПараметров[68]));
		СтруктураРеквизитов.Вставить("НомерЛисткаПродолжения",							СокрЛП(СписокПараметров[69]));
		
		Если СтруктураРеквизитов.КодПричиныНетрудоспособности = "01" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "02" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "03" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.Карантин);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "04" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "07" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "05" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "06" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.Протезирование);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "08" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "09" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "10" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "11" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "12" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "13" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "14" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "15" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриВИЧ);
			
		Иначе
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			ОписаниеОшибки = "Неизвестный код '" + СтруктураРеквизитов.КодПричиныНетрудоспособности + "' причины нетрудоспособности. В качестве причины нетрудоспособности установлено '" + Строка(Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание) + "'." + Символы.ПС;
			
		КонецЕсли;
		
	ИначеЕсли СписокПараметров[0] = "04" Тогда // Неопубликованная версия
		СтруктураРеквизитов.Вставить("НомерВходящегоДокумента",							СписокПараметров[3]);
		
		ВходящийНомерПервичногоЛистка	= СписокПараметров[4];
		
		СтруктураРеквизитов.Вставить("ЯвляетсяПродолжениемБолезни",						СписокПараметров[5] = "0");
		СтруктураРеквизитов.Вставить("ЯвляетсяДубликатом",								СписокПараметров[6] = "1");
		СтруктураРеквизитов.Вставить("ДатаВыдачиБольничного",							ДатаИзСтроки(СписокПараметров[7]));
		СтруктураРеквизитов.Вставить("НаименованиеЛПУ",									СписокПараметров[8]);
		СтруктураРеквизитов.Вставить("АдресЛПУ",										СписокПараметров[9]);
		СтруктураРеквизитов.Вставить("ОГРН_ЛПУ",										СписокПараметров[10]);
		СтруктураРеквизитов.Вставить("Фамилия",											СписокПараметров[11]);
		СтруктураРеквизитов.Вставить("Имя",												СписокПараметров[12]);
		СтруктураРеквизитов.Вставить("Отчество",										СписокПараметров[13]);
		ДатаРожденияСотрудника	= ДатаИзСтроки(СписокПараметров[14]);
		ВидЗанятостиСотрудника	= ?(СписокПараметров[15] = "0", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
		
		НаименованиеОрганизации	= СписокПараметров[1];
		
		СтруктураРеквизитов.Вставить("КодПричиныНетрудоспособности",					СписокПараметров[16]);
		СтруктураРеквизитов.Вставить("ДополнительныйКодПричиныНетрудоспособности",		СписокПараметров[17]);
		СтруктураРеквизитов.Вставить("ВторойКодПричиныНетрудоспособности",				СписокПараметров[18]);
		СтруктураРеквизитов.Вставить("НомерЛисткаПоОсновномуМестуРаботы",				СписокПараметров[19]);
		СтруктураРеквизитов.Вставить("ДатаИзмененияКодаПричиныНетрудоспособности",		ДатаИзСтроки(СписокПараметров[20]));
		СтруктураРеквизитов.Вставить("ДатаОкончанияПутевки",							ДатаИзСтроки(СписокПараметров[21]));
		СтруктураРеквизитов.Вставить("НомерПутевки",									СписокПараметров[22]);
		СтруктураРеквизитов.Вставить("ОГРН_Санатория",									СписокПараметров[23]);
		
		УходЗаБольнымЧленомСемьи = Новый Массив;
		Если СписокПараметров[27] <> "" Тогда
			УходЗаБольнымЧленомСемьи.Добавить(Новый Структура("ВозрастЛет, ВозрастМесяцев, РодственнаяСвязь, ФИО", СписокПараметров[24], СписокПараметров[25], СписокПараметров[26], СписокПараметров[27]));
		КонецЕсли;
		Если СписокПараметров[31] <> "" Тогда
			УходЗаБольнымЧленомСемьи.Добавить(Новый Структура("ВозрастЛет, ВозрастМесяцев, РодственнаяСвязь, ФИО", СписокПараметров[28], СписокПараметров[29], СписокПараметров[30], СписокПараметров[31]));
		КонецЕсли;
		СтруктураРеквизитов.Вставить("УходЗаБольнымЧленомСемьи",						УходЗаБольнымЧленомСемьи);
		
		СтруктураРеквизитов.Вставить("ПоставленаНаУчетВРанниеСрокиБеременности",		СписокПараметров[33] = "1");
		СтруктураРеквизитов.Вставить("ПериодНахожденияВСтационареСРебенкомС",			ДатаИзСтроки(СписокПараметров[34]));
		СтруктураРеквизитов.Вставить("ПериодНахожденияВСтационареСРебенкомПо",			ДатаИзСтроки(СписокПараметров[35]));
		СтруктураРеквизитов.Вставить("КодНарушенияРежима",								СписокПараметров[36]);
		СтруктураРеквизитов.Вставить("ДатаНарушенияРежима",								ДатаИзСтроки(СписокПараметров[37]));
		СтруктураРеквизитов.Вставить("ДатаНаправленияВБюроМСЭ",							ДатаИзСтроки(СписокПараметров[38]));
		СтруктураРеквизитов.Вставить("ДатаРегистрацииДокументовМСЭ",					ДатаИзСтроки(СписокПараметров[39]));
		СтруктураРеквизитов.Вставить("ДатаОсвидетельствованияМСЭ",						ДатаИзСтроки(СписокПараметров[40]));
		
		СтруктураРеквизитов.Вставить("ГруппаИнвалидности",								СписокПараметров[41]);
		СтруктураРеквизитов.Вставить("УстановленаИзмененаГруппаИнвалидности ",			СписокПараметров[41] <> "");
		СтруктураРеквизитов.Вставить("НовыйСтатусНетрудопособного",						СписокПараметров[42]);
		
		СтруктураРеквизитов.Вставить("ДатаНачала",										ДатаИзСтроки(СписокПараметров[43]));
		СтруктураРеквизитов.Вставить("ДатаНачалаОплаты",								ДатаИзСтроки(СписокПараметров[43]));
		СтруктураРеквизитов.Вставить("ДатаНачалаСобытия",								?(Не СтруктураРеквизитов.ЯвляетсяПродолжениемБолезни, ДатаИзСтроки(СписокПараметров[43]), Дата(1, 1, 1)));
		
		ОсвобождениеОтРаботыВЛисткеНетрудоспособности = Новый Массив;
		Если СписокПараметров[43] <> "" Тогда
			СтруктураРеквизитов.Вставить("ДатаОкончания",								ДатаИзСтроки(СписокПараметров[44]));
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача, ИдентификационныйНомерВрача, ФИОВрачаПредседателяВК", ДатаИзСтроки(СписокПараметров[43]), ДатаИзСтроки(СписокПараметров[44]), СписокПараметров[45], СписокПараметров[46], СписокПараметров[47], СписокПараметров[49]));
		КонецЕсли;
		Если СписокПараметров[51] <> "" Тогда
			СтруктураРеквизитов.Вставить("ДатаОкончания",								ДатаИзСтроки(СписокПараметров[52]));
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача, ИдентификационныйНомерВрача, ФИОВрачаПредседателяВК", ДатаИзСтроки(СписокПараметров[51]), ДатаИзСтроки(СписокПараметров[52]), СписокПараметров[53], СписокПараметров[54], СписокПараметров[55], СписокПараметров[57]));
		КонецЕсли;
		Если СписокПараметров[59] <> "" Тогда
			СтруктураРеквизитов.Вставить("ДатаОкончания",								ДатаИзСтроки(СписокПараметров[60]));
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача, ИдентификационныйНомерВрача, ФИОВрачаПредседателяВК", ДатаИзСтроки(СписокПараметров[59]), ДатаИзСтроки(СписокПараметров[60]), СписокПараметров[61], СписокПараметров[62], СписокПараметров[63], СписокПараметров[65]));
		КонецЕсли;
		СтруктураРеквизитов.Вставить("ОсвобождениеОтРаботыВЛисткеНетрудоспособности",	ОсвобождениеОтРаботыВЛисткеНетрудоспособности);
		
		СтруктураРеквизитов.Вставить("ДатаНовыйСтатусНетрудопособного",					ДатаИзСтроки(СписокПараметров[67]));
		СтруктураРеквизитов.Вставить("ДатаВыходаНаРаботу",								ДатаИзСтроки(СписокПараметров[68]));
		СтруктураРеквизитов.Вставить("НомерЛисткаПродолжения",							СокрЛП(СписокПараметров[69]));
		
		Если СтруктураРеквизитов.КодПричиныНетрудоспособности = "01" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "02" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "03" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.Карантин);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "04" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "07" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "05" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "06" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.Протезирование);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "08" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "09" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "10" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "11" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "12" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "13" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "14" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "15" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриВИЧ);
			
		Иначе
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			ОписаниеОшибки = "Неизвестный код '" + СтруктураРеквизитов.КодПричиныНетрудоспособности + "' причины нетрудоспособности. В качестве причины нетрудоспособности установлено '" + Строка(Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание) + "'." + Символы.ПС;
			
		КонецЕсли;
		
	ИначеЕсли СписокПараметров[0] = "05" Тогда // Неопубликованная версия
		СтруктураРеквизитов.Вставить("НомерВходящегоДокумента",							СписокПараметров[3]);
		
		ВходящийНомерПервичногоЛистка	= СписокПараметров[4];
		
		СтруктураРеквизитов.Вставить("ЯвляетсяПродолжениемБолезни",						СписокПараметров[5] = "0");
		СтруктураРеквизитов.Вставить("ЯвляетсяДубликатом",								СписокПараметров[6] = "1");
		СтруктураРеквизитов.Вставить("ДатаВыдачиБольничного",							ДатаИзСтроки(СписокПараметров[7]));
		СтруктураРеквизитов.Вставить("НаименованиеЛПУ",									СписокПараметров[8]);
		СтруктураРеквизитов.Вставить("АдресЛПУ",										СписокПараметров[9]);
		СтруктураРеквизитов.Вставить("ОГРН_ЛПУ",										СписокПараметров[10]);
		СтруктураРеквизитов.Вставить("Фамилия",											СписокПараметров[11]);
		СтруктураРеквизитов.Вставить("Имя",												СписокПараметров[12]);
		СтруктураРеквизитов.Вставить("Отчество",										СписокПараметров[13]);
		ДатаРожденияСотрудника	= ДатаИзСтроки(СписокПараметров[14]);
		ВидЗанятостиСотрудника	= ?(СписокПараметров[15] = "0", Перечисления.ВидыЗанятостиВОрганизации.Совместительство, Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
		
		НаименованиеОрганизации	= СписокПараметров[1];
		
		СтруктураРеквизитов.Вставить("КодПричиныНетрудоспособности",					СписокПараметров[16]);
		СтруктураРеквизитов.Вставить("ДополнительныйКодПричиныНетрудоспособности",		СписокПараметров[17]);
		СтруктураРеквизитов.Вставить("ВторойКодПричиныНетрудоспособности",				СписокПараметров[18]);
		СтруктураРеквизитов.Вставить("НомерЛисткаПоОсновномуМестуРаботы",				СписокПараметров[19]);
		СтруктураРеквизитов.Вставить("ДатаИзмененияКодаПричиныНетрудоспособности",		ДатаИзСтроки(СписокПараметров[20]));
		СтруктураРеквизитов.Вставить("ДатаОкончанияПутевки",							ДатаИзСтроки(СписокПараметров[21]));
		СтруктураРеквизитов.Вставить("НомерПутевки",									СписокПараметров[22]);
		СтруктураРеквизитов.Вставить("ОГРН_Санатория",									СписокПараметров[23]);
		
		УходЗаБольнымЧленомСемьи = Новый Массив;
		Если СписокПараметров[27] <> "" Тогда
			УходЗаБольнымЧленомСемьи.Добавить(Новый Структура("ВозрастЛет, ВозрастМесяцев, РодственнаяСвязь, ФИО", СписокПараметров[24], СписокПараметров[25], СписокПараметров[26], СписокПараметров[27]));
		КонецЕсли;
		Если СписокПараметров[31] <> "" Тогда
			УходЗаБольнымЧленомСемьи.Добавить(Новый Структура("ВозрастЛет, ВозрастМесяцев, РодственнаяСвязь, ФИО", СписокПараметров[28], СписокПараметров[29], СписокПараметров[30], СписокПараметров[31]));
		КонецЕсли;
		СтруктураРеквизитов.Вставить("УходЗаБольнымЧленомСемьи",						УходЗаБольнымЧленомСемьи);
		
		СтруктураРеквизитов.Вставить("ПоставленаНаУчетВРанниеСрокиБеременности",		СписокПараметров[33] = "1");
		СтруктураРеквизитов.Вставить("ПериодНахожденияВСтационареСРебенкомС",			ДатаИзСтроки(СписокПараметров[34]));
		СтруктураРеквизитов.Вставить("ПериодНахожденияВСтационареСРебенкомПо",			ДатаИзСтроки(СписокПараметров[35]));
		СтруктураРеквизитов.Вставить("КодНарушенияРежима",								СписокПараметров[36]);
		СтруктураРеквизитов.Вставить("ДатаНарушенияРежима",								ДатаИзСтроки(СписокПараметров[37]));
		СтруктураРеквизитов.Вставить("ДатаНаправленияВБюроМСЭ",							ДатаИзСтроки(СписокПараметров[38]));
		СтруктураРеквизитов.Вставить("ДатаРегистрацииДокументовМСЭ",					ДатаИзСтроки(СписокПараметров[39]));
		СтруктураРеквизитов.Вставить("ДатаОсвидетельствованияМСЭ",						ДатаИзСтроки(СписокПараметров[40]));
		
		СтруктураРеквизитов.Вставить("ГруппаИнвалидности",								СписокПараметров[41]);
		СтруктураРеквизитов.Вставить("УстановленаИзмененаГруппаИнвалидности ",			СписокПараметров[41] <> "");
		СтруктураРеквизитов.Вставить("НовыйСтатусНетрудопособного",						СписокПараметров[42]);
		
		СтруктураРеквизитов.Вставить("ДатаНачала",										ДатаИзСтроки(СписокПараметров[43]));
		СтруктураРеквизитов.Вставить("ДатаНачалаОплаты",								ДатаИзСтроки(СписокПараметров[43]));
		СтруктураРеквизитов.Вставить("ДатаНачалаСобытия",								?(Не СтруктураРеквизитов.ЯвляетсяПродолжениемБолезни, ДатаИзСтроки(СписокПараметров[43]), Дата(1, 1, 1)));
		
		ОсвобождениеОтРаботыВЛисткеНетрудоспособности = Новый Массив;
		Если СписокПараметров[43] <> "" Тогда
			СтруктураРеквизитов.Вставить("ДатаОкончания",								ДатаИзСтроки(СписокПараметров[44]));
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача, ИдентификационныйНомерВрача, ФИОВрачаПредседателяВК", ДатаИзСтроки(СписокПараметров[43]), ДатаИзСтроки(СписокПараметров[44]), СписокПараметров[45], СписокПараметров[46], СписокПараметров[47], СписокПараметров[49]));
		КонецЕсли;
		Если СписокПараметров[51] <> "" Тогда
			СтруктураРеквизитов.Вставить("ДатаОкончания",								ДатаИзСтроки(СписокПараметров[52]));
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача, ИдентификационныйНомерВрача, ФИОВрачаПредседателяВК", ДатаИзСтроки(СписокПараметров[51]), ДатаИзСтроки(СписокПараметров[52]), СписокПараметров[53], СписокПараметров[54], СписокПараметров[55], СписокПараметров[57]));
		КонецЕсли;
		Если СписокПараметров[59] <> "" Тогда
			СтруктураРеквизитов.Вставить("ДатаОкончания",								ДатаИзСтроки(СписокПараметров[60]));
			ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(Новый Структура("ДатаНачала, ДатаОкончания, ДолжностьВрача, ФИОВрача, ИдентификационныйНомерВрача, ФИОВрачаПредседателяВК", ДатаИзСтроки(СписокПараметров[59]), ДатаИзСтроки(СписокПараметров[60]), СписокПараметров[61], СписокПараметров[62], СписокПараметров[63], СписокПараметров[65]));
		КонецЕсли;
		СтруктураРеквизитов.Вставить("ОсвобождениеОтРаботыВЛисткеНетрудоспособности",	ОсвобождениеОтРаботыВЛисткеНетрудоспособности);
		
		СтруктураРеквизитов.Вставить("ДатаНовыйСтатусНетрудопособного",					ДатаИзСтроки(СписокПараметров[67]));
		СтруктураРеквизитов.Вставить("ДатаВыходаНаРаботу",								ДатаИзСтроки(СписокПараметров[68]));
		СтруктураРеквизитов.Вставить("НомерЛисткаПродолжения",							СокрЛП(СписокПараметров[69]));
		
		Если СтруктураРеквизитов.КодПричиныНетрудоспособности = "01" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "02" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "03" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.Карантин);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "04" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "07" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "05" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "06" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.Протезирование);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "08" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "09" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "10" Или СтруктураРеквизитов.КодПричиныНетрудоспособности = "11" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "12" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "13" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "14" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				?(СтруктураРеквизитов.ПериодНахожденияВСтационареСРебенкомС = Дата(1, 1, 1), Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииАмбулаторно, Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииВСтационаре));
			
		ИначеЕсли СтруктураРеквизитов.КодПричиныНетрудоспособности = "15" Тогда
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриВИЧ);
			
		Иначе
			СтруктураРеквизитов.Вставить("ПричинаНетрудоспособности",					Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание);
			СтруктураРеквизитов.Вставить("СлучайУходаЗаБольнымРебенком",				Перечисления.СлучаиУходаЗаБольнымиДетьми.ПустаяСсылка());
			ОписаниеОшибки = "Неизвестный код '" + СтруктураРеквизитов.КодПричиныНетрудоспособности + "' причины нетрудоспособности. В качестве причины нетрудоспособности установлено '" + Строка(Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание) + "'." + Символы.ПС;
			
		КонецЕсли;
		
	Иначе
		ОписаниеОшибки = "Неизвестная версия '" + СписокПараметров[0] + "' штрихкода листка нетрудоспособности. Если Вы уверены, что считали правильный штрихкод, обратитесь в техническую поддержку.";
		Возврат Ложь;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ОГРН_ЛПУ") Тогда
		СтруктураРеквизитов.Вставить("ЛПУ", Справочники.МедицинскиеОрганизации.НайтиПоРеквизиту("ОГРН",СтруктураРеквизитов.ОГРН_ЛПУ))
	КонецЕсли;
	
	// Проверим наличие документа в ИБ
	СтруктураБольничных = ПолныеПраваЗК.НайтиБольничныеЛистыПоВходящемуНомеру(СтруктураРеквизитов.НомерВходящегоДокумента, ВходящийНомерПервичногоЛистка);
	БольничныйЛист = СтруктураБольничных.БольничныйЛист;
	СтруктураРеквизитов.Вставить("ПервичныйБольничныйЛист",	СтруктураБольничных.ПервичныйЛист);
	
	// Проверим, есть ли у текущего пользователя доступ к этому документу, а заодно прочитаем существующие значения документа
	СтруктураРеквизитовСуществующегоДокумента = Новый Структура("Сотрудник,Физлицо,ПервичныйБольничныйЛист,ЯвляетсяПродолжениемБолезни,ДатаНачала,ДатаОкончания,ПричинаНетрудоспособности");
	Если БольничныйЛист <> Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("БольничныйЛист",	БольничныйЛист);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	НачислениеПоБольничномуЛисту.Сотрудник,
		|	НачислениеПоБольничномуЛисту.Физлицо,
		|	НачислениеПоБольничномуЛисту.ПервичныйБольничныйЛист,
		|	НачислениеПоБольничномуЛисту.ЯвляетсяПродолжениемБолезни,
		|	НачислениеПоБольничномуЛисту.ДатаНачала,
		|	НачислениеПоБольничномуЛисту.ДатаОкончания,
		|	НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
		|ГДЕ
		|	НачислениеПоБольничномуЛисту.Ссылка = &БольничныйЛист
		|	И (НЕ НачислениеПоБольничномуЛисту.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НачислениеПоБольничномуЛисту.ПериодРегистрации УБЫВ,
		|	НачислениеПоБольничномуЛисту.МоментВремени УБЫВ";
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			ОписаниеОшибки = "Документ начисления по больничному листу с входящим номером '" + СтруктураРеквизитов.НомерВходящегоДокумента + "' найден в базе, но не доступен текущему пользователю.";
			Возврат Ложь;
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитовСуществующегоДокумента, Выборка);
	КонецЕсли;
	
	// Проверим доступ к первичному больничному листу
	Если Не СтруктураБольничных.ПервичныйЛист.Пустая() Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("БольничныйЛист",	СтруктураБольничных.ПервичныйЛист);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	НачислениеПоБольничномуЛисту.Сотрудник,
		|	НачислениеПоБольничномуЛисту.Физлицо
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
		|ГДЕ
		|	НачислениеПоБольничномуЛисту.Ссылка = &БольничныйЛист
		|	И (НЕ НачислениеПоБольничномуЛисту.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НачислениеПоБольничномуЛисту.ПериодРегистрации УБЫВ,
		|	НачислениеПоБольничномуЛисту.МоментВремени УБЫВ";
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			ОписаниеОшибки = "Первичный документ начисления по больничному листу с входящим номером '" + СтруктураРеквизитов.НомерВходящегоДокумента + "' найден в базе, но не доступен текущему пользователю.";
			Возврат Ложь;
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитовСуществующегоДокумента, Выборка);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Фамилия",		СтруктураРеквизитов.Фамилия);
	Запрос.УстановитьПараметр("Имя",			СтруктураРеквизитов.Имя);
	Запрос.УстановитьПараметр("Отчество",		СтруктураРеквизитов.Отчество);
	Запрос.УстановитьПараметр("ДатаРождения",	ДатаРожденияСотрудника);
	Запрос.УстановитьПараметр("ВидЗанятости",	ВидЗанятостиСотрудника);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	Сотрудники.Физлицо,
	|	Сотрудники.ТекущееОбособленноеПодразделение КАК Организация
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Физлицо В
	|			(ВЫБРАТЬ
	|				ФИОФизЛицСрезПоследних.ФизЛицо
	|			ИЗ
	|				РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	|			ГДЕ
	|				ФИОФизЛицСрезПоследних.Фамилия = &Фамилия
	|				И ФИОФизЛицСрезПоследних.Имя = &Имя
	|				И ФИОФизЛицСрезПоследних.Отчество = &Отчество
	|				И ФИОФизЛицСрезПоследних.ФизЛицо.ДатаРождения = &ДатаРождения)
	|	И Сотрудники.ВидЗанятости = &ВидЗанятости
	|	И (НЕ Сотрудники.ПометкаУдаления)
	|	И Сотрудники.Актуальность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудники.ДатаПриемаНаРаботу УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтруктураРеквизитов.Вставить("Сотрудник",	Выборка.Сотрудник);
		СтруктураРеквизитов.Вставить("Физлицо",		Выборка.Физлицо);
		СтруктураРеквизитов.Вставить("Организация",	Выборка.Организация);
	Иначе
		СтруктураРеквизитов.Вставить("Сотрудник",	Справочники.СотрудникиОрганизаций.ПустаяСсылка());
		СтруктураРеквизитов.Вставить("Физлицо",		Справочники.ФизическиеЛица.ПустаяСсылка());
		ОписаниеОшибки = ОписаниеОшибки + "Не удалось найти сотрудника с ФИО '" + СтруктураРеквизитов.Фамилия + " " + СтруктураРеквизитов.Имя + " " + СтруктураРеквизитов.Отчество + "' и датой рождения " + Формат(ДатаРожденияСотрудника, "ДЛФ=DD") + ". Укажите сотрудника вручную." + Символы.ПС;
	КонецЕсли;
	
	// Проверим реквизиты существующего больничного на расхождения с данными сканера
	ПерезаполнитьДокумент = Истина;
	Если БольничныйЛист <> Неопределено Тогда
		ЕстьРазличия = Ложь;
		ТекстВопроса = "Найденный документ по начислению больничного листа имеет следующие расхождения:";
		Для Каждого РеквизитБольничного Из СтруктураРеквизитовСуществующегоДокумента Цикл
			Если РеквизитБольничного.Значение <> СтруктураРеквизитов[РеквизитБольничного.Ключ] Тогда
				ТекстВопроса = ТекстВопроса + Символы.ПС + БольничныйЛист.Метаданные().Реквизиты[РеквизитБольничного.Ключ].Синоним + ". Было " + РеквизитБольничного.Значение + ", стало " + СтруктураРеквизитов[РеквизитБольничного.Ключ];
				ЕстьРазличия = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ТекстВопроса = ТекстВопроса + Символы.ПС + "Выполнить перезаполнение документа?";
		Если ЕстьРазличия Тогда
			#Если Клиент Тогда
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
			ПерезаполнитьДокумент = Ответ = КодВозвратаДиалога.Да;
			#КонецЕсли
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НаименованиеОрганизации",	НаименованиеОрганизации);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.НаименованиеСокращенное = &НаименованиеОрганизации
	|			ИЛИ Организации.Наименование = &НаименованиеОрганизации)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организации.ПометкаУдаления УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтруктураРеквизитов.Вставить("Организация",	Выборка.Организация);
		
	Иначе
		Если СтруктураРеквизитов.Свойство("Организация") И Не СтруктураРеквизитов.Организация.Пустая() Тогда
			ОписаниеОшибки = ОписаниеОшибки + "Не удалось найти организацию '" + НаименованиеОрганизации + "'. В качестве организации установлена текущая организация сотрудника." + Символы.ПС;
		Иначе
			ОписаниеОшибки = ОписаниеОшибки + "Не удалось найти организацию '" + НаименованиеОрганизации + "'. В качестве организации установлена организация по умолчанию." + Символы.ПС;
		КонецЕсли;
		
	КонецЕсли;
	
	Если БольничныйЛист = Неопределено Тогда // Создадим новый документ
		Форма = Документы.НачислениеПоБольничномуЛисту.ПолучитьФормуНовогоДокумента(, , СтруктураРеквизитов.НомерВходящегоДокумента);
		
	Иначе
		СтруктураРеквизитов.Удалить("Организация");
		СтруктураРеквизитов.Удалить("Сотрудник");
		СтруктураРеквизитов.Удалить("СлучайУходаЗаБольнымРебенком");
		СтруктураРеквизитов.Удалить("ДатаНачалаОплаты");
		СтруктураРеквизитов.Удалить("ДатаНачалаСобытия");
		Форма = БольничныйЛист.ПолучитьФорму(, , СтруктураРеквизитов.НомерВходящегоДокумента);
		
	КонецЕсли;
	
	Если ПерезаполнитьДокумент Тогда
		ЗаполнитьЗначенияСвойств(Форма, СтруктураРеквизитов);
		Форма.УходЗаБольнымЧленомСемьи.Очистить();
		Для Каждого БольнойЧленСемьи Из СтруктураРеквизитов.УходЗаБольнымЧленомСемьи Цикл
			ЗаполнитьЗначенияСвойств(Форма.УходЗаБольнымЧленомСемьи.Добавить(), БольнойЧленСемьи);
		КонецЦикла;
		Форма.ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Очистить();
		Для Каждого ОсвобождениеОтРаботы Из СтруктураРеквизитов.ОсвобождениеОтРаботыВЛисткеНетрудоспособности Цикл
			ЗаполнитьЗначенияСвойств(Форма.ОсвобождениеОтРаботыВЛисткеНетрудоспособности.Добавить(), ОсвобождениеОтРаботы);
		КонецЦикла;
		Форма.ЗаполнитьОтсканированныйДокумент();
		
	Иначе
		ОписаниеОшибки = ОписаниеОшибки + "Данные существующего документа перезаполнены не были.";
		
	КонецЕсли;
	
	Форма.Открыть();
	Форма.Модифицированность = ПерезаполнитьДокумент;
	
	Возврат ПустаяСтрока(ОписаниеОшибки);
	
КонецФункции

