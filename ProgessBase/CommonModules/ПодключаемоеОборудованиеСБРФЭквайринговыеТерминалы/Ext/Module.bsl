
///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция осуществляет подключение устройства.
//
// Параметры:
//  ОбъектДрайвера   - <*>
//           - ОбъектДрайвера драйвера торгового оборудования.
//
// Возвращаемое значение:
//  <Булево> - Результат работы функции.
//
Функция ПодключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) Экспорт

	Результат = Истина;

	//Обязательные выходные
	ВыходныеПараметры = Новый Массив();

	// Проверка настроенных параметров
	ШиринаСлипЧека             = Неопределено;
	КодСимволаЧастичногоОтреза = Неопределено;
	Модель                     = Неопределено;

	Параметры.Свойство("ШиринаСлипЧека"            , ШиринаСлипЧека);
	Параметры.Свойство("КодСимволаЧастичногоОтреза", КодСимволаЧастичногоОтреза);
	Параметры.Свойство("Модель"                    , Модель);

	Если ШиринаСлипЧека             = Неопределено
	 Или КодСимволаЧастичногоОтреза = Неопределено
	 Или Модель                     = Неопределено Тогда
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Не настроены параметры устройства.
		|Для корректной работы устройства необходимо задать параметры его работы.
		|Сделать это можно при помощи формы ""Настройка параметров"" модели
		|подключаемого оборудования в форме ""Подключение и настройка оборудования"".'"));

		Результат = Ложь;
	КонецЕсли;
	// Конец: Проверка настроенных параметров

	Если Результат Тогда
		ОбъектДрайвера.ШиринаСлипЧека = Число(Параметры.ШиринаСлипЧека);
		ПараметрыПодключения.Вставить("ПоследнийТипКарты", Неопределено);
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет отключение устройства.
//
// Параметры:
//  ОбъектДрайвера - <*>
//         - ОбъектДрайвера драйвера торгового оборудования.
//
// Возвращаемое значение:
//  <Булево> - Результат работы функции.
//
Функция ОтключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) Экспорт

	Результат = Истина;

	//Обязательные выходные
	ВыходныеПараметры = Новый Массив();

	Возврат Результат;

КонецФункции

// Функция получает, обрабатывает и перенаправляет на исполнение команду к драйверу
//
Функция ВыполнитьКоманду(Команда, ВходныеПараметры = Неопределено, ВыходныеПараметры = Неопределено,
                         ОбъектДрайвера, Параметры, ПараметрыПодключения) Экспорт

	Результат = Истина;

	ВыходныеПараметры = Новый Массив();

	// Оплата платежной картой
	Если Команда = "AuthorizeSales" Тогда
		Сумма      = ВходныеПараметры[0];
		НомерКарты = ВходныеПараметры[1];

		Результат = ОплатитьПлатежнойКартой(ОбъектДрайвера, Параметры, ПараметрыПодключения,
		                                    Сумма, НомерКарты, ВыходныеПараметры);

	// Возрат платежа
	ИначеЕсли Команда = "AuthorizeRefund" Тогда
		Сумма      = ВходныеПараметры[0];
		НомерКарты = ВходныеПараметры[1];

		Результат = ВернутьПлатежПоПлатежнойКарте(ОбъектДрайвера, Параметры, ПараметрыПодключения,
		                                          Сумма, НомерКарты, ВыходныеПараметры);

	// Отмена платежа
	ИначеЕсли Команда = "AuthorizeVoid" Тогда
		Сумма          = ВходныеПараметры[0];
		СсылочныйНомер = ВходныеПараметры[1];
		НомерЧека      = ВходныеПараметры[2];

		Результат = ОтменитьПлатежПоПлатежнойКарте(ОбъектДрайвера, Параметры, ПараметрыПодключения,
		                                           Сумма, СсылочныйНомер, НомерЧека, ВыходныеПараметры);

	// Аварийная отмена платежа
	ИначеЕсли Команда = "EmergencyVoid" Тогда
		Сумма          = ВходныеПараметры[0];
		СсылочныйНомер = ВходныеПараметры[1];
		НомерЧека      = ВходныеПараметры[2];

		Результат = АварийнаяОтменаОперации(ОбъектДрайвера, Параметры, ПараметрыПодключения,
		                                    Сумма, СсылочныйНомер, НомерЧека, ВыходныеПараметры);

	// Сверка итогов по картам
	ИначеЕсли Команда = "Settlement" Тогда
		Результат = ИтогиДняПоКартам(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);

	// Получение слип-чека последней операции
	ИначеЕсли Команда = "ПолучитьСтрокиСлипЧека" Тогда
		Результат = ПолучитьСтрокиСлипЧека(ОбъектДрайвера, Параметры, ПараметрыПодключения, Неопределено, ВыходныеПараметры);

	// Указанная команда не поддерживается данным драйвером
	Иначе
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Команда ""%Команда%"" не поддерживается данным драйвером.'"));
		ВыходныеПараметры[1] = СтрЗаменить(ВыходныеПараметры[1], "%Команда%", Команда);
		Результат = Ложь;

	КонецЕсли;

	Возврат Результат;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция осуществляет авторизацию (оплату) по карте.
// (API v2.0)
//
// Параметры: 
//  Объект              - <*>
//                      - Объект драйвера ЭС.
//
//  Сумма               – <Число>
//                      - Сумма к оплате по карте
//
//  КодRRN              - <Строка>
//                      - Уникальный код RRN транзакции
//
//  КодАвторизации      - <Строка>
//                      - Возвращается код авторизации транзакции
//
//  КодОперации         - <Строка>
//                      - Последовательный код операции
//
//  МассивСтрокСлипЧека - <Структура>
//                      - Массив строк слип-чека, сформированного
//                        после успешного выполнения операции
//
//  ШиринаЧека          - <Число>
//                      - Ширина слип-чека, установленная в параметрах настройки
//
//  КоличествоКопий     - <Число>
//                      - Количество печатаемых копий слип-чека
// 
// Возвращаемое значение: 
//     <ПеречислениеСсылка.ОшибкиПриРаботеСТорговымОборудованием>
//                 - Результат работы функции.
//
Функция ОплатитьПлатежнойКартой(ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                Сумма, НомерКарты, ВыходныеПараметры) Экспорт

	Результат = Истина;
	СуммаВременная = Неопределено;
	
	КодКарты       = Неопределено;
	СсылочныйНомер = Неопределено;
	НомерЧека      = Неопределено;

	ОбъектДрайвера.ТипКарты = 0;//ПараметрыПодключения.ПоследнийТипКарты;?????????????????
	СуммаВременная = Сумма*100;

	Ответ = ОбъектДрайвера.ОплатитьПлатежнойКартой(СуммаВременная, СсылочныйНомер, НомерЧека);
	Если Не Ответ Тогда
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить("");
		ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);

		Результат = Ложь;
	Иначе
		СлипЧек = Неопределено;
		Результат = ПолучитьСтрокиСлипЧека(ОбъектДрайвера, Параметры, ПараметрыПодключения, СлипЧек, ВыходныеПараметры);
		Если Результат Тогда
			ВыходныеПараметры.Добавить("****************");
			ВыходныеПараметры.Добавить(СсылочныйНомер);
			ВыходныеПараметры.Добавить(НомерЧека);
			ВыходныеПараметры.Добавить(Новый Массив());
			ВыходныеПараметры[3].Добавить("СлипЧек");
			ВыходныеПараметры[3].Добавить(СлипЧек);
		Иначе
			АварийнаяОтменаОперации(ОбъектДрайвера, Параметры, ПараметрыПодключения,
			                        СуммаВременная, СсылочныйНомер, НомерЧека, ВыходныеПараметры);
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет возврат платежа по карте.
// (API v2.0)
//
// Параметры: 
//  Объект              - <*>
//                      - Объект драйвера ЭС.
//
//  Сумма               – <Число>
//                      - Сумма к оплате по карте
//
//  КодRRN              - <Строка>
//                      - Уникальный код RRN транзакции
//
//  КодАвторизации      - <Строка>
//                      - Возвращается код авторизации транзакции
//
//  КодОперации         - <Строка>
//                      - Последовательный код операции
//
//  МассивСтрокСлипЧека - <Структура>
//                      - Массив строк слип-чека, сформированного
//                        после успешного выполнения операции
//
//  ШиринаЧека          - <Число>
//                      - Ширина слип-чека, установленная в параметрах настройки
//
//  КоличествоКопий     - <Число>
//                      - Количество печатаемых копий слип-чека
// 
// Возвращаемое значение: 
//     <ПеречислениеСсылка.ОшибкиПриРаботеСТорговымОборудованием>
//                 - Результат работы функции.
//
Функция ВернутьПлатежПоПлатежнойКарте(ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                      Сумма, НомерКарты, ВыходныеПараметры) Экспорт

	Результат = Истина;
	СуммаВременная = Неопределено;
	
	КодКарты       = Неопределено;
	СсылочныйНомер = Неопределено;
	НомерЧека      = Неопределено;

	ОбъектДрайвера.ТипКарты = 0;//ПараметрыПодключения.ПоследнийТипКарты;?????????????????
	СуммаВременная = Сумма*100;

	Ответ = ОбъектДрайвера.ВернутьПлатежПоПлатежнойКарте(СуммаВременная, СсылочныйНомер, НомерЧека);
	Если Не Ответ Тогда
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить("");
		ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);

		Результат = Ложь;
	Иначе
		СлипЧек = Неопределено;
		Результат = ПолучитьСтрокиСлипЧека(ОбъектДрайвера, Параметры, ПараметрыПодключения, СлипЧек, ВыходныеПараметры);
		Если Результат Тогда
			ВыходныеПараметры.Добавить("****************");
			ВыходныеПараметры.Добавить(СсылочныйНомер);
			ВыходныеПараметры.Добавить(НомерЧека);
			ВыходныеПараметры.Добавить(Новый Массив());
			ВыходныеПараметры[3].Добавить("СлипЧек");
			ВыходныеПараметры[3].Добавить(СлипЧек);
		Иначе
			АварийнаяОтменаОперации(ОбъектДрайвера, Параметры, ПараметрыПодключения,
			                        СуммаВременная, СсылочныйНомер, НомерЧека, ВыходныеПараметры);
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет отмену платежа по карте.
// (API v2.0)
//
// Параметры: 
//  Объект              - <*>
//                      - Объект драйвера ЭС.
//
//  Сумма               – <Число>
//                      - Сумма к оплате по карте
//
//  КодRRN              - <Строка>
//                      - Уникальный код RRN транзакции
//
//  КодАвторизации      - <Строка>
//                      - Возвращается код авторизации транзакции
//
//  КодОперации         - <Строка>
//                      - Последовательный код операции
//
//  МассивСтрокСлипЧека - <Структура>
//                      - Массив строк слип-чека, сформированного
//                        после успешного выполнения операции
//
//  ШиринаЧека          - <Число>
//                      - Ширина слип-чека, установленная в параметрах настройки
//
//  КоличествоКопий     - <Число>
//                      - Количество печатаемых копий слип-чека
// 
// Возвращаемое значение: 
//     <ПеречислениеСсылка.ОшибкиПриРаботеСТорговымОборудованием>
//                 - Результат работы функции.
//
Функция ОтменитьПлатежПоПлатежнойКарте(ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                       Сумма, СсылочныйНомер, НомерЧека, ВыходныеПараметры) Экспорт

	Результат = Истина;
	СуммаВременная = Неопределено;
	
	ОбъектДрайвера.ТипКарты = 0;//ПараметрыПодключения.ПоследнийТипКарты;?????????????????
	СуммаВременная = Сумма*100;

	Ответ = ОбъектДрайвера.ОтменитьПлатежПоПлатежнойКарте(СуммаВременная, СсылочныйНомер);
	Если Не Ответ Тогда
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить("");
		ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);

		Результат = Ложь;
	Иначе
		СлипЧек = Неопределено;
		Результат = ПолучитьСтрокиСлипЧека(ОбъектДрайвера, Параметры, ПараметрыПодключения, СлипЧек, ВыходныеПараметры);
		Если Результат Тогда
			ВыходныеПараметры.Добавить(Новый Массив());
			ВыходныеПараметры[0].Добавить("СлипЧек");
			ВыходныеПараметры[0].Добавить(СлипЧек);
		Иначе
			АварийнаяОтменаОперации(ОбъектДрайвера, Параметры, ПараметрыПодключения,
			                        СуммаВременная, СсылочныйНомер, НомерЧека, ВыходныеПараметры);
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет аварийную отмену операции по карте.
// (API v2.5)
//
// Параметры: 
//  Объект              - <*>
//                      - Объект драйвера ЭС.
//
//  Сумма               – <Число>
//                      - Сумма отменяемой операции по карте
//
//  КодRRN              - <Строка>
//                      - Уникальный код RRN оригинальной транзакции
//
//  КодАвторизации      - <Строка>
//                      - Код авторизации оригинальной транзакции
//
// Возвращаемое значение: 
//     <ПеречислениеСсылка.ОшибкиПриРаботеСТорговымОборудованием>
//                 - Результат работы функции.
//
Функция АварийнаяОтменаОперации(ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                Сумма, СсылочныйНомер, НомерЧека, ВыходныеПараметры) Экспорт

	Результат = Истина;

	ВыходныеПараметры.Добавить(Неопределено);

	СуммаВременная = Сумма * 100;
	ОбъектДрайвера.ТипКарты = 0;

	Ответ = ОбъектДрайвера.ОтменитьПлатежПоПлатежнойКарте(СуммаВременная, СсылочныйНомер);
	Если Не Ответ Тогда
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить("");
		ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);

		Результат = Ложь;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Функция осуществляет сверку итогов по картам.
// (API v2.0)
//
// Параметры: 
//  Объект              - <*>
//                      - Объект драйвера ЭС.
//
//  МассивСтрокСлипЧека - <Структура>
//                      - Массив строк слип-чека, сформированного
//                        после успешного выполнения операции
//
//  ШиринаЧека          - <Число>
//                      - Ширина слип-чека, установленная в параметрах настройки
//
// Возвращаемое значение: 
//     <ПеречислениеСсылка.ОшибкиПриРаботеСТорговымОборудованием>
//                 - Результат работы функции.
//
Функция ИтогиДняПоКартам(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры)

	Результат = Истина;

	Ответ = ОбъектДрайвера.ИтогиДняПоКартам();
	Если Не Ответ Тогда
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить("");
		ОбъектДрайвера.ПолучитьОшибку(ВыходныеПараметры[1]);

		Результат = Ложь;
	Иначе
		СлипЧек = Неопределено;
		Результат = ПолучитьСтрокиСлипЧека(ОбъектДрайвера, Параметры, ПараметрыПодключения, СлипЧек, ВыходныеПараметры);
		Если Результат Тогда
			ВыходныеПараметры.Добавить(Новый Массив());
			ВыходныеПараметры[0].Добавить("СлипЧек");
			ВыходныеПараметры[0].Добавить(СлипЧек);
		КонецЕсли;
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Заполняет массив строками слип-чека для последующей печати на ФР
//
// Параметры: 
//  Объект              - <*>
//                      - Объект драйвера ЭС.
//
//  МассивСтрокСлипЧека - <Структура>
//                      - Массив строк слип-чека, сформированного
//                        после успешного выполнения операции
//
//  ШиринаЧека          - <Число>
//                      - Ширина слип-чека, установленная в параметрах настройки
//
// Возвращаемое значение: 
//
Функция ПолучитьСтрокиСлипЧека(ОбъектДрайвера, Параметры, ПараметрыПодключения, СлипЧек, ВыходныеПараметры);

	Результат = Истина;
	СлипЧек   = "";

	Для Индекс = 1 По ОбъектДрайвера.КоличествоСтрокСлипЧека Цикл
		СтрокаЧека = "";

		РезультатФункции = ОбъектДрайвера.ПолучитьСтрокуСлипЧека(Индекс, СтрокаЧека);
		Если РезультатФункции Тогда
			СлипЧек = СлипЧек + СтрокаЧека + ?(Индекс = ОбъектДрайвера.КоличествоСтрокСлипЧека, "", Символ(13) + Символ(10));
		Иначе
			ВыходныеПараметры.Очистить();
			ВыходныеПараметры.Добавить(999);
			ВыходныеПараметры.Добавить(НСтр("ru='Ошибка при получении строк слип-чека.'"));

			Результат = Ложь;
		КонецЕсли;
	КонецЦикла;

	Если Результат Тогда
		КопииСлипЧека = "";
		Для Индекс = 1 По ОбъектДрайвера.КоличествоКопийСлипЧека Цикл
			КопииСлипЧека = КопииСлипЧека + СлипЧек + ?(Индекс = ОбъектДрайвера.КоличествоКопийСлипЧека,
			                                            "",
			                                            Символы.ПС + Символ(Параметры.КодСимволаЧастичногоОтреза) + Символы.ПС);
		КонецЦикла;
		СлипЧек = КопииСлипЧека;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции
