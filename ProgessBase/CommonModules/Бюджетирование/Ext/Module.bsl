// Возвращает курс валюты по сценарию на дату
//
//
// Параметры:
//  Валюта    - Валюта (элемент справочника "Валюты")
//  ДатаКурса - Дата, на которую следует получить курс
//  Сценарий (элемент справочника "Сценарии") - сценарий планирования
//
// Возвращаемое значение: 
//  Курс, с учетом кратности
//
Функция КурсВалютыПоСценарию(Валюта, ДатаКурса, Сценарий) Экспорт

	СтруктураОтбора=Новый Структура;
	СтруктураОтбора.Вставить("Валюта", Валюта);
	
	Если Сценарий.ИспользоватьКурсыСценария Тогда
		СтруктураОтбора.Вставить("Сценарий", Сценарий);
        Структура = РегистрыСведений.КурсыВалютПоСценариям.ПолучитьПоследнее(ДатаКурса, СтруктураОтбора);
	Иначе
		Структура = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ДатаКурса, СтруктураОтбора);
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции // КурсВалютыПоСценарию()

// Возвращает структуру с курсами и кратностями для валют, переданных в качестве параметра
//
// Параметры
//  СтруктураГруппаВалют: Структура - Структура, содержащее валюты, для которых необходимо получить курсы
//	ДатаКурса: Дата - дата, на которую необходимо получить курсы.
//
// Возвращаемое значение:
//   СтруктураКурсыВалют: структура - структура, содержащая курсы для указанных валют.
//
Функция ПолучитьКурсыСценарияДляГруппыВалют(СтруктураГруппаВалют,ДатаКурса,Сценарий) Экспорт
	
	Запрос=Новый Запрос;
	СписокВалют=Новый СписокЗначений;
	
	Для каждого Валюта Из СтруктураГруппаВалют Цикл
	
		СписокВалют.Добавить(Валюта.Значение);
	
	КонецЦикла;
	
	ТекстЗапроса="ВЫБРАТЬ
	             |	КурсыВалютСрезПоследних.Курс КАК Курс,
	             |	КурсыВалютСрезПоследних.Кратность КАК Кратность,
	             |	КурсыВалютСрезПоследних.Валюта.Код КАК КодВалюты,
	             |	КурсыВалютСрезПоследних.Валюта.Ссылка КАК Валюта";
				 
	Если Сценарий.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|ИЗ
	    |	РегистрСведений.КурсыВалютПоСценариям.СрезПоследних(&ДатаКурса, (Валюта.Код В (&СписокВалют)) И (Сценарий=&Сценарий)) КАК КурсыВалютСрезПоследних";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"
		|ИЗ
	    |	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаКурса, Валюта.Код В (&СписокВалют)) КАК КурсыВалютСрезПоследних";
	КонецЕсли;
	
	Запрос.Текст=ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ДатаКурса",ДатаКурса);
	Запрос.УстановитьПараметр("СписокВалют",СписокВалют);
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	
	СтруктураКурсыВалют=Новый Структура;

	Результат=Запрос.Выполнить().Выгрузить();;
		
	Для каждого Валюта Из СтруктураГруппаВалют Цикл
		
		СтрокаВалюта=Результат.Найти(Валюта.Значение,"КодВалюты");
		
		Если НЕ СтрокаВалюта=Неопределено Тогда
		   	СтруктураКурсыВалют.Вставить(Валюта.Ключ+"Курс",СтрокаВалюта.Курс);
			СтруктураКурсыВалют.Вставить(Валюта.Ключ+"Кратность",СтрокаВалюта.Кратность);
			СтруктураКурсыВалют.Вставить(Валюта.Ключ,СтрокаВалюта.Валюта);
		Иначе
			СтруктураКурсыВалют.Вставить(Валюта.Ключ+"Курс",0);
			СтруктураКурсыВалют.Вставить(Валюта.Ключ+"Кратность",0);
			СтруктураКурсыВалют.Вставить(Валюта.Ключ,Новый(Тип("СправочникСсылка.Валюты")));
		КонецЕсли;
		
	КонецЦикла; 		
	
	Возврат СтруктураКурсыВалют;

КонецФункции // УправлениеДенежнымиСредствами.ПолучитьКурсыДляГруппыВалют()

// Возвращает количество периодов между указанными датами
//
// Параметры
//  ДатаНачала, ДатаКонца: Дата  – границы интервала
//  Периодичность (Перечисления.Периодичность): периодичность планирования
//
// Возвращаемое значение:
//   КоличествоПериодов   – количество периодов в переданном интервале
//
Функция РассчитатьКоличествоПериодов(ДатаНачала,ДатаКонца,Периодичность) Экспорт
	
	Если ДатаНачала<ДатаКонца Тогда
		
		ИсходнаяДата=ДатаНачала;
		КонечнаяДата=ДатаКонца;
		Коэффициент=1;
		
	ИначеЕсли  ДатаНачала>ДатаКонца Тогда
		
		ИсходнаяДата=ДатаКонца;
		КонечнаяДата=ДатаНачала;
		Коэффициент=-1;
		
	ИначеЕсли ДатаНачала=ДатаКонца Тогда
		
		Возврат 0;
		
	КонецЕсли;
	
	
	КоличествоПериодов=0;
	ТекущаяДата=ИсходнаяДата;
	
	Пока ОбщегоНазначения.ДатаКонцаПериода(ТекущаяДата,Периодичность)<=КонецДня(КонечнаяДата) Цикл
		
		КоличествоПериодов=КоличествоПериодов+1;
		ТекущаяДата=ОбщегоНазначения.ДобавитьИнтервал(ТекущаяДата,Периодичность,1);
		
	КонецЦикла;
	
	Возврат КоличествоПериодов*Коэффициент;
	
КонецФункции // РассчитатьКоличествоПериодов()

// Возвращает текст фрагмента запроса с выборками по стандартным периодам
//
// Параметры
//	Периодичность(строка)	– периодичность выборки данных запроса
//  Период(строка)			- имя измерения, в котором хранится период данных
//
// Возвращаемое значение:
//   ТекстЗапросаПоПериодам   – текст фрагмента запроса
//
Функция СформироватьТекстЗапросаПоПериодам(Периодичность,Период) Экспорт
	
	СписокПериодов=Новый СписокЗначений;
	СписокПериодов.Добавить("День");
	СписокПериодов.Добавить("Неделя");
	СписокПериодов.Добавить("Месяц");
	СписокПериодов.Добавить("Квартал");
	СписокПериодов.Добавить("Год");
	
	ТекстЗапросаПоПериодам="";
	
	НачальныйИндекс=СписокПериодов.Индекс(СписокПериодов.НайтиПоЗначению(Периодичность));
	
	Для Сч=НачальныйИндекс По СписокПериодов.Количество()-1 Цикл
		
		ТекущаяПериодичность=СписокПериодов.Получить(Сч).Значение;
		ТекстЗапросаПоПериодам=ТекстЗапросаПоПериодам+"
		|НачалоПериода("+Период+", "+ТекущаяПериодичность+") КАК Период"+ТекущаяПериодичность+",";
	
	КонецЦикла;
	
	Возврат ТекстЗапросаПоПериодам;

КонецФункции // СформироватьТекстЗапросаПоПериодам()

// Функция формирует список для отбора источников данных, у которых в составе
// ТЧ "ИзмеренияДляРаспределения" есть выбранное измерение бюджетирования.
//
Функция СписокИсточниковДляИзмерения(ИзмерениеБюджетирования) Экспорт

	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсточникиДанныхДляРасчетовБюджетирования.Наименование
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетовБюджетирования КАК ИсточникиДанныхДляРасчетовБюджетирования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиДанныхДляРасчетовБюджетирования.ИзмеренияИсточника КАК ИсточникиДанныхДляРасчетовБюджетированияИзмеренияИсточника
	|		ПО ИсточникиДанныхДляРасчетовБюджетирования.Ссылка = ИсточникиДанныхДляРасчетовБюджетированияИзмеренияИсточника.Ссылка
	|
	|ГДЕ
	|	ИсточникиДанныхДляРасчетовБюджетированияИзмеренияИсточника.ИзмерениеБюджетирования = &ИзмерениеБюджетирования";

	Запрос.УстановитьПараметр("ИзмерениеБюджетирования",ИзмерениеБюджетирования);

	СписокОтбора=Новый СписокЗначений;
    СписокОтбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Наименование"));
	
	Возврат СписокОтбора;


КонецФункции // СписокИсточниковДляИзмерения()

// Функция формирует список элементов перечисления, пропуская исключаемые
//
// Параметры
//  ИмяПеречисления - имя перечисления, как оно задано в конфигураторе
//  СтруктураИсключение - структура, содержащая имена перечислений, которые не должны попадать в список.
//
// Возвращаемое значение:
//   СписокЗначений - список элементов перечисления
//
Функция ПолучитьСписокЭлементовПеречисленияОтбор(ИмяПеречисления, СтруктураИсключение) Экспорт

	СписокЭлементовПеречисления = Новый СписокЗначений;
	
	Попытка
		КоллекцияЭлементовПеречисления = Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления;
	Исключение
		Возврат СписокЭлементовПеречисления;
	КонецПопытки;
	
	Для каждого ЭлементПеречисления Из КоллекцияЭлементовПеречисления Цикл
		
		Если НЕ СтруктураИсключение.Свойство(ЭлементПеречисления.Имя) Тогда		
			СписокЭлементовПеречисления.Добавить(Перечисления[ИмяПеречисления][ЭлементПеречисления.Имя], ЭлементПеречисления.Синоним);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокЭлементовПеречисления;

КонецФункции // ОбщегоНазначения.ПолучитьСписокЭлементовПеречисления()

// Проверяет наличие в системе курсов валют, необходимых для проведения документа
//
Процедура ПроверкаКурсовВалютСценарии(ТаблицаВалют,Отказ,Заголовок) Экспорт
	
	ВалютаУпрУчета=глЗначениеПеременной("ВалютаУправленческогоУчета");
	ТекстОшибки="";
	
	Для Каждого СтрокаВалюта ИЗ ТаблицаВалют Цикл
		
		// Проверяем наличие курсов для валют операций
		
		Если СтрокаВалюта.ИспользоватьКурсыСценария Тогда
			
			СтруктураОтбор=Новый Структура;
			СтруктураОтбор.Вставить("Валюта",СтрокаВалюта.Валюта);
			СтруктураОтбор.Вставить("Сценарий",СтрокаВалюта.Сценарий);
			СтруктураКурсов=РегистрыСведений.КурсыВалютПоСценариям.ПолучитьПоследнее(СтрокаВалюта.ДатаКурса,СтруктураОтбор);
			
		Иначе
			
			СтруктураОтбор=Новый Структура;
			СтруктураОтбор.Вставить("Валюта",СтрокаВалюта.Валюта);
			СтруктураКурсов=РегистрыСведений.КурсыВалют.ПолучитьПоследнее(СтрокаВалюта.ДатаКурса,СтруктураОтбор);
			
		КонецЕсли;
		
		Если СтруктураКурсов.Курс=NULL ИЛИ СтруктураКурсов.Курс=0 Тогда
			ТекстОшибки=ТекстОшибки+?(СтрДлина(ТекстОшибки)>0,Символы.ПС,"")+"Не указан курс валюты "+Строка(СтрокаВалюта.Валюта)+" на дату "+СтрокаВалюта.ДатаКурса;
		ИначеЕсли СтруктураКурсов.Кратность=NULL ИЛИ СтруктураКурсов.Кратность=0 Тогда
			ТекстОшибки=ТекстОшибки+?(СтрДлина(ТекстОшибки)>0,Символы.ПС,"")+"Не указана кратность валюты "+Строка(СтрокаВалюта.Валюта)+" на дату "+СтрокаВалюта.ДатаКурса;
		КонецЕсли;
		
		// Проверяем наличие курсов для валюты сценария
		
		Если НЕ СтрокаВалюта.Валюта=СтрокаВалюта.ВалютаСценария Тогда
			
			Если СтрокаВалюта.ИспользоватьКурсыСценария Тогда
				
				СтруктураОтбор=Новый Структура;
				СтруктураОтбор.Вставить("Валюта",СтрокаВалюта.ВалютаСценария);
				СтруктураОтбор.Вставить("Сценарий",СтрокаВалюта.Сценарий);
				СтруктураКурсов=РегистрыСведений.КурсыВалютПоСценариям.ПолучитьПоследнее(СтрокаВалюта.ДатаКурса,СтруктураОтбор);
				
			Иначе
				
				СтруктураОтбор=Новый Структура;
				СтруктураОтбор.Вставить("Валюта",СтрокаВалюта.ВалютаСценария);
				СтруктураКурсов=РегистрыСведений.КурсыВалют.ПолучитьПоследнее(СтрокаВалюта.ДатаКурса,СтруктураОтбор);
				
			КонецЕсли;
			
			Если СтруктураКурсов.Курс=NULL ИЛИ СтруктураКурсов.Курс=0 Тогда
				ТекстОшибки=ТекстОшибки+?(СтрДлина(ТекстОшибки)>0,Символы.ПС,"")+"Не указан курс валюты "+Строка(СтрокаВалюта.Валюта)+" на дату "+СтрокаВалюта.ДатаКурса;
			ИначеЕсли СтруктураКурсов.Кратность=NULL ИЛИ СтруктураКурсов.Кратность=0 Тогда
				ТекстОшибки=ТекстОшибки+?(СтрДлина(ТекстОшибки)>0,Символы.ПС,"")+"Не указана кратность валюты "+Строка(СтрокаВалюта.Валюта)+" на дату "+СтрокаВалюта.ДатаКурса;
			КонецЕсли;
			
		КонецЕсли;
		
		// Проверяем наличие курсов для валюты упр. учета
		
		Если НЕ СтрокаВалюта.Валюта=ВалютаУпрУчета Тогда
			
			Если СтрокаВалюта.ИспользоватьКурсыСценария Тогда
				
				СтруктураОтбор=Новый Структура;
				СтруктураОтбор.Вставить("Валюта",ВалютаУпрУчета);
				СтруктураОтбор.Вставить("Сценарий",СтрокаВалюта.Сценарий);
				СтруктураКурсов=РегистрыСведений.КурсыВалютПоСценариям.ПолучитьПоследнее(СтрокаВалюта.ДатаКурса,СтруктураОтбор);
				
			Иначе
				
				СтруктураОтбор=Новый Структура;
				СтруктураОтбор.Вставить("Валюта",ВалютаУпрУчета);
				СтруктураКурсов=РегистрыСведений.КурсыВалют.ПолучитьПоследнее(СтрокаВалюта.ДатаКурса,СтруктураОтбор);
				
			КонецЕсли;
			
			Если СтруктураКурсов.Курс=NULL ИЛИ СтруктураКурсов.Курс=0 Тогда
				ТекстОшибки=ТекстОшибки+?(СтрДлина(ТекстОшибки)>0,Символы.ПС,"")+"Не указан курс валюты "+Строка(СтрокаВалюта.Валюта)+" на дату "+СтрокаВалюта.ДатаКурса;
			ИначеЕсли СтруктураКурсов.Кратность=NULL ИЛИ СтруктураКурсов.Кратность=0 Тогда
				ТекстОшибки=ТекстОшибки+?(СтрДлина(ТекстОшибки)>0,Символы.ПС,"")+"Не указана кратность валюты "+Строка(СтрокаВалюта.Валюта)+" на дату "+СтрокаВалюта.ДатаКурса;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
		
	Если СтрДлина(ТекстОшибки)>0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки,Отказ,Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверкаКурсовВалют()

// Возвращает таблицу для проверки контролируемых значений
//
Функция СформироватьТаблицуДляКонтроля(Ссылка, СтруктураПараметров) Экспорт
	
	ЕстьРасчетыСКонтрагентами = СтруктураПараметров.ЕстьРасчетыСКонтрагентами;
	ЕстьРасчетыПоКредитам     = СтруктураПараметров.ЕстьРасчетыПоКредитам;
	
	ВидОперации    = СтруктураПараметров.ВидОперации;
	ДатаРасхода    = СтруктураПараметров.ДатаРасхода;
	ВалютаУпрУчета = глЗначениеПеременной("ВалютаУправленческогоУчета");
	
	Если ЕстьРасчетыСКонтрагентами ИЛИ ЕстьРасчетыПоКредитам Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		             |	РасшифровкаПлатежаДок.Ссылка.Сценарий КАК Сценарий,
		             |	РасшифровкаПлатежаДок.Ссылка.СтатьяОборотов КАК СтатьяОборотов,
		             |	РасшифровкаПлатежаДок.Ссылка.ЦФО КАК ЦФО,
		             |	РасшифровкаПлатежаДок.Ссылка.Контрагент КАК Контрагент,
		             |	РасшифровкаПлатежаДок.Ссылка.Номенклатура КАК Номенклатура,
		             |	РасшифровкаПлатежаДок.Проект КАК Проект,
		             |	СУММА(ВЫРАЗИТЬ(ВЫБОР
		             |				КОГДА РасшифровкаПлатежаДок.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаУпрУчета
		             |					ТОГДА РасшифровкаПлатежаДок.СуммаВзаиморасчетов
		             |				КОГДА КурсыУпрУчета.Курс ЕСТЬ NULL 
		             |						ИЛИ РасшифровкаПлатежаДок.КурсВзаиморасчетов = 0
		             |					ТОГДА 0
		             |				КОГДА РасшифровкаПлатежаДок.ДоговорКонтрагента.ВалютаВзаиморасчетов <> &ВалютаУпрУчета
		             |						И КурсыУпрУчета.Курс <> 0
		             |						И РасшифровкаПлатежаДок.КурсВзаиморасчетов <> 0
		             |					ТОГДА РасшифровкаПлатежаДок.СуммаВзаиморасчетов * РасшифровкаПлатежаДок.КурсВзаиморасчетов * КурсыУпрУчета.Кратность / (КурсыУпрУчета.Курс * РасшифровкаПлатежаДок.КратностьВзаиморасчетов)
		             |				ИНАЧЕ 0
		             |			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
		             |	КурсыУпрУчета.Курс КАК КурсУпрУчета,
		             |	КурсыУпрУчета.Кратность КАК КратностьУпрУчета,
		             |	СУММА(РасшифровкаПлатежаДок.СуммаПлатежа) КАК СуммаПлатежа
		             |ИЗ
		             |	Документ.ЗаявкаНаРасходованиеСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаРасхода, Валюта = &ВалютаУпрУчета) КАК КурсыУпрУчета
		             |		ПО (ИСТИНА)
		             |ГДЕ
		             |	РасшифровкаПлатежаДок.Ссылка = &Ссылка
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	РасшифровкаПлатежаДок.Ссылка.Сценарий,
		             |	РасшифровкаПлатежаДок.Ссылка.СтатьяОборотов,
		             |	РасшифровкаПлатежаДок.Ссылка.ЦФО,
		             |	РасшифровкаПлатежаДок.Ссылка.Контрагент,
		             |	РасшифровкаПлатежаДок.Ссылка.Номенклатура,
		             |	РасшифровкаПлатежаДок.Проект,
		             |	КурсыУпрУчета.Курс,
		             |	КурсыУпрУчета.Кратность";
		
		Запрос.УстановитьПараметр("ДатаРасхода", ДатаРасхода);
		Запрос.УстановитьПараметр("ВалютаУпрУчета", ВалютаУпрУчета);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствПодотчетнику
		ИЛИ ВидОперации = Перечисления.ВидыОперацийЗаявкиНаРасходование.РасчетыПоКредитамИЗаймамСРаботниками Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	РасшифровкаПлатежаДок.Ссылка.Сценарий КАК Сценарий,
		             |	РасшифровкаПлатежаДок.Ссылка.СтатьяОборотов КАК СтатьяОборотов,
		             |	РасшифровкаПлатежаДок.Ссылка.ЦФО КАК ЦФО,
		             |	РасшифровкаПлатежаДок.Ссылка.Контрагент КАК Контрагент,
		             |	РасшифровкаПлатежаДок.Ссылка.Номенклатура КАК Номенклатура,
		             |	РасшифровкаПлатежаДок.Проект КАК Проект,
		             |	СУММА(ВЫРАЗИТЬ(ВЫБОР
		             |				КОГДА РасшифровкаПлатежаДок.Ссылка.ВалютаВзаиморасчетовПодотчетника = &ВалютаУпрУчета
		             |					ТОГДА РасшифровкаПлатежаДок.СуммаВзаиморасчетов
		             |				КОГДА КурсыУпрУчета.Курс ЕСТЬ NULL 
		             |						ИЛИ РасшифровкаПлатежаДок.КурсВзаиморасчетов = 0
		             |					ТОГДА 0
		             |				КОГДА РасшифровкаПлатежаДок.Ссылка.ВалютаВзаиморасчетовПодотчетника <> &ВалютаУпрУчета
		             |						И КурсыУпрУчета.Курс <> 0
		             |						И РасшифровкаПлатежаДок.КурсВзаиморасчетов <> 0
		             |					ТОГДА РасшифровкаПлатежаДок.СуммаВзаиморасчетов * РасшифровкаПлатежаДок.КурсВзаиморасчетов * КурсыУпрУчета.Кратность / (КурсыУпрУчета.Курс * РасшифровкаПлатежаДок.КратностьВзаиморасчетов)
		             |				ИНАЧЕ 0
		             |			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
		             |	КурсыУпрУчета.Курс КАК КурсУпрУчета,
		             |	КурсыУпрУчета.Кратность КАК КратностьУпрУчета,
		             |	СУММА(РасшифровкаПлатежаДок.СуммаПлатежа) КАК СуммаПлатежа
		             |ИЗ
		             |	Документ.ЗаявкаНаРасходованиеСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаРасхода, Валюта = &ВалютаУпрУчета) КАК КурсыУпрУчета
		             |		ПО (ИСТИНА)
		             |ГДЕ
		             |	РасшифровкаПлатежаДок.Ссылка = &Ссылка
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	РасшифровкаПлатежаДок.Ссылка.Сценарий,
		             |	РасшифровкаПлатежаДок.Ссылка.СтатьяОборотов,
		             |	РасшифровкаПлатежаДок.Ссылка.ЦФО,
		             |	РасшифровкаПлатежаДок.Ссылка.Контрагент,
		             |	РасшифровкаПлатежаДок.Ссылка.Номенклатура,
		             |	РасшифровкаПлатежаДок.Проект,
		             |	КурсыУпрУчета.Курс,
		             |	КурсыУпрУчета.Кратность";
		
		Запрос.УстановитьПараметр("ДатаРасхода", ДатаРасхода);
		Запрос.УстановитьПараметр("ВалютаУпрУчета", ВалютаУпрУчета);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	РасшифровкаПлатежаДок.Ссылка.Сценарий,
		|	РасшифровкаПлатежаДок.Ссылка.СтатьяОборотов,
		|	РасшифровкаПлатежаДок.Ссылка.ЦФО,
		|	РасшифровкаПлатежаДок.Ссылка.Контрагент,
		|	РасшифровкаПлатежаДок.Ссылка.Номенклатура,
		|	РасшифровкаПлатежаДок.Проект,
		|	РасшифровкаПлатежаДок.СуммаПлатежа
		|ИЗ
		|	Документ.ЗаявкаНаРасходованиеСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежаДок
		|ГДЕ РасшифровкаПлатежаДок.Ссылка=&Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Возврат Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
			
КонецФункции


/////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Блок процедур для получения данных напрямую из учетных подсистем, используя источники данных

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Обороты по источникам данных

#Если Клиент Тогда
Процедура ДобавитьВТекстОсновногоЗапросаОбороты(СтатьяИсточник,ТекстОсновногоЗапроса,ТекстЗапросаПериод,СтруктураПараметров,НомерСтатьи, 
								СтруктураИспользуемыхИзмерений,ДатаНач,ДатаКон)
	
	ПостроительОтчета=Новый ПостроительОтчета; // Основной построитель отчета
	
	ТекстЗапроса=СтатьяИсточник.ТекстЗапроса;
	
	СохраненнаяНастройка=СтатьяИсточник.НастройкиПостроителя.Получить();
	
	ИзмеренияИсточника=СтатьяИсточник.ИзмеренияИсточника.Выгрузить();
	ДатыОтбораДанныхИсточника=СтатьяИсточник.ДатыОтбораДанныхИсточника.Выгрузить();
	КодИсточника="Статья_"+НомерСтатьи;
	
	Если ТипЗнч(СохраненнаяНастройка.НастройкиПостроителя)=Тип("НастройкиПостроителяОтчета") Тогда
		
		Для Каждого Параметр Из СохраненнаяНастройка.ПараметрыПостроителя Цикл
			СтруктураПараметров.Вставить(Параметр.Ключ+КодИсточника,Параметр.Значение);
			ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"&"+Параметр.Ключ,"&"+Параметр.Ключ+КодИсточника);
		КонецЦикла;
		
		Для каждого Граница Из ДатыОтбораДанныхИсточника Цикл
			
			Если Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.ФиксированнаяДата Тогда
				НачальнаяДатаГраницы=Граница.ДатаНачальнойГраницыОтсчета;
			ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.НачалоПериода Тогда
				НачальнаяДатаГраницы=ДатаНач;
			ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.КонецПериода Тогда
				НачальнаяДатаГраницы=КонецДня(ДатаКон);
			КонецЕсли;
						
			ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"&"+Граница.ИмяДатаГраницы,"&"+Граница.ИмяДатаГраницы+КодИсточника);
			СтруктураПараметров.Вставить(Граница.ИмяДатаГраницы+КодИсточника,НачальнаяДатаГраницы);
			
		КонецЦикла;
		
		ПостроительОтчета.Текст=ТекстЗапроса;
		
		Если СтатьяИсточник.ПроизвольныйЗапрос Тогда
			
			ПостроительОтчета.ЗаполнитьНастройки();
			
		КонецЕсли;
		
		ПостроительОтчета.УстановитьНастройки(СохраненнаяНастройка.НастройкиПостроителя,Истина,Ложь,Истина,Истина);
	Иначе
		Возврат;
	КонецЕсли;
	
	// Формируем структуру измерений для запроса
	
	СтруктураИзмерений=Новый Структура;
	СтруктураИзмерений.Вставить("Валюта","Валюта");
	
	Для Каждого СтрокаСвязь ИЗ ИзмеренияИсточника Цикл
		
		ИмяИзмерения=Строка(СтрокаСвязь.ИзмерениеБюджетирования);
		
		Если СтруктураИспользуемыхИзмерений.Свойство(ИмяИзмерения) ИЛИ ИмяИзмерения="Валюта" Тогда
			
			СтруктураИзмерений.Вставить(ИмяИзмерения,СтрокаСвязь.ИмяПоляИсточника);
			
		Иначе
			
			ПолеКУдалению=ПостроительОтчета.ВыбранныеПоля.Найти(СтрокаСвязь.ИмяПоляИсточника);
			
			Если НЕ ПолеКУдалению=Неопределено Тогда
				ПостроительОтчета.ВыбранныеПоля.Удалить(ПолеКУдалению);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
		
	ПолеПериод=ПостроительОтчета.ДоступныеПоля.Найти("Период");
	
	Если (Не ПолеПериод=Неопределено) И ПостроительОтчета.ВыбранныеПоля.Найти(ПолеПериод.Имя)=Неопределено Тогда
		
		ПостроительОтчета.ВыбранныеПоля.Добавить(ПолеПериод.Имя,ПолеПериод.Имя);
		СтруктураИзмерений.Вставить("Период",ПолеПериод.Имя);
		
	КонецЕсли;
		
	// Убираем валюту из измерений запроса, если она не используется при получении сумм по статье	
	Если (НЕ СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных)
		И СтруктураИзмерений.Свойство("Валюта") Тогда
		
		ПолеВалюта=ПостроительОтчета.ВыбранныеПоля.Найти(СтруктураИзмерений.Валюта);
		
		Если Не ПолеВалюта=Неопределено Тогда
			
			ПостроительОтчета.ВыбранныеПоля.Удалить(ПолеВалюта);
			
		КонецЕсли;
		
	КонецЕсли;
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Настраиваем построитель для получения валюты и периодов оборотов для дальнейшего расчета суммы в валюте упр. учета
	
	ПостроительОтчетаПериод=Новый ПостроительОтчета;
	ПостроительОтчетаПериод.Текст=ПостроительОтчета.Текст;
	
	Если СтатьяИсточник.ПроизвольныйЗапрос Тогда
		
		ПостроительОтчетаПериод.ЗаполнитьНастройки();
		
	КонецЕсли;
	
	ПостроительОтчетаПериод.УстановитьНастройки(СохраненнаяНастройка.НастройкиПостроителя,Истина,Ложь,Истина,Истина);
	
	ПостроительОтчетаПериод.ВыбранныеПоля.Очистить();
	
	Если Не ПолеПериод=Неопределено Тогда
		
		ПостроительОтчетаПериод.ВыбранныеПоля.Добавить(ПолеПериод.Имя,ПолеПериод.Имя);
		
	КонецЕсли;
	
	Если СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных
		И СтруктураИзмерений.Свойство("Валюта") Тогда
		
		СтрокаВалюта=ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Валюта,"ИзмерениеБюджетирования");
		
		Если Не СтрокаВалюта=Неопределено Тогда
			
			ПостроительОтчетаПериод.ВыбранныеПоля.Добавить(СтрокаВалюта.ПутьКДанным,СтрокаВалюта.ИмяПоляИсточника);
			
		КонецЕсли;
		
	КонецЕсли;
		  
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
	
			
	РабочийТекст=ПостроительОтчета.ПолучитьЗапрос().Текст;
	РабочийТекстПериод=ПостроительОтчетаПериод.ПолучитьЗапрос().Текст;
	
	// Определим параметры отбора
	Индекс=1;
	Для Каждого СтрокаОтбора Из ПостроительОтчета.Отбор Цикл
		
		Если СтрокаОтбора.Использование=Истина Тогда
			
			Если СтрокаОтбора.ЗначениеС=Неопределено ИЛИ (НЕ ЗначениеЗаполнено(СтрокаОтбора.ЗначениеС)) ИЛИ СтрокаОтбора.ВидСравнения = ВидСравнения.Равно Тогда
				РабочийТекст=СтрЗаменить(РабочийТекст,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
				РабочийТекстПериод=СтрЗаменить(РабочийТекстПериод,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
				
				СтруктураПараметров.Вставить("Параметр_"+КодИсточника+"_"+Индекс,СтрокаОтбора.Значение);
				Индекс=Индекс+1;
			Иначе
				РабочийТекст=СтрЗаменить(РабочийТекст,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
				РабочийТекстПериод=СтрЗаменить(РабочийТекстПериод,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
				
				СтруктураПараметров.Вставить("Параметр_"+КодИсточника+"_"+Индекс,СтрокаОтбора.ЗначениеС);
				Индекс=Индекс+1;
				РабочийТекст=СтрЗаменить(РабочийТекст,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
				РабочийТекстПериод=СтрЗаменить(РабочийТекстПериод,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
				СтруктураПараметров.Вставить("Параметр_"+КодИсточника+"_"+Индекс,СтрокаОтбора.ЗначениеПо);
				Индекс=Индекс+1;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Формируем текст основного запроса
	
	ТекстЗапросаИсточник="
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|&Статья"+КодИсточника+" КАК СтатьяОборотов,";
	
	СтруктураПараметров.Вставить("Статья"+КодИсточника,СтатьяИсточник.СтатьяОборотов);
	
	Если СтруктураИзмерений.Свойство("Период") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|Период,";	
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&МоментВремени КАК Период,";	
	КонецЕсли;
		
	Если СтруктураИзмерений.Свойство("ЦФО") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.ЦФО+" КАК ЦФО,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойЦФО КАК ЦФО,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Проект") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Проект+" КАК Проект,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойПроект КАК Проект,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Контрагент") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Контрагент+" КАК Контрагент,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойКонтрагент КАК Контрагент,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Номенклатура") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Номенклатура+" КАК Номенклатура,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойНоменклатура КАК Номенклатура,";	
	КонецЕсли;
	
	Если СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Валюта+" КАК Валюта,";
	ИначеЕсли СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаРегламентированногоУчета Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ВалютаРеглУчета КАК Валюта,";
	ИначеЕсли СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаУправленческогоУчета Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ВалютаУпрУчета КАК Валюта,";
	ИначеЕсли СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ОсновнаяВалютаСтатьи Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&Валюта"+КодИсточника+" КАК Валюта,";
		СтруктураПараметров.Вставить("Валюта"+КодИсточника,СтатьяИсточник.ОсновнаяВалюта);
	КонецЕсли;
	
	Если ПустаяСтрока(СтатьяИсточник.ПоказательИсточникаДанныхДляФактаСум) Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|0 КАК Сумма,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтатьяИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК Сумма,";
		СтруктураПараметров.Вставить("КоэффициентДляФактаСум_"+КодИсточника,СтатьяИсточник.КоэффициентДляФактаСум);
	КонецЕсли;
	
	Если ПустаяСтрока(СтатьяИсточник.ПоказательИсточникаДанныхДляФактаКол) Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|0 КАК Количество";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтатьяИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК Количество";
		СтруктураПараметров.Вставить("КоэффициентДляФактаКол_"+КодИсточника,СтатьяИсточник.КоэффициентДляФактаКол);
	КонецЕсли;
	
	ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
	|ИЗ
	|("+РабочийТекст+") КАК "+КодИсточника;
	
	ТекстОсновногоЗапроса=ТекстОсновногоЗапроса+ТекстЗапросаИсточник;
	
	// Формируем текст запроса по периодам
	ТекстЗапросаИсточникПериод="
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ";
	
	Если СтруктураИзмерений.Свойство("Период") Тогда
		ТекстЗапросаИсточникПериод=ТекстЗапросаИсточникПериод+"
		|Период,";	
	Иначе
		ТекстЗапросаИсточникПериод=ТекстЗапросаИсточникПериод+"
		|&МоментВремени КАК Период,";	
	КонецЕсли;
	
	Если СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных Тогда
		ТекстЗапросаИсточникПериод=ТекстЗапросаИсточникПериод+"
		|"+СтруктураИзмерений.Валюта+" КАК Валюта";
	ИначеЕсли СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаРегламентированногоУчета Тогда
		ТекстЗапросаИсточникПериод=ТекстЗапросаИсточникПериод+"
		|&ВалютаРеглУчета КАК Валюта";
	ИначеЕсли СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаУправленческогоУчета Тогда
		ТекстЗапросаИсточникПериод=ТекстЗапросаИсточникПериод+"
		|&ВалютаУпрУчета КАК Валюта";
	ИначеЕсли СтатьяИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ОсновнаяВалютаСтатьи Тогда
		ТекстЗапросаИсточникПериод=ТекстЗапросаИсточникПериод+"
		|&Валюта"+КодИсточника+" КАК Валюта,";
	КонецЕсли;
	
	ТекстЗапросаИсточникПериод=ТекстЗапросаИсточникПериод+"
	|ИЗ
	|("+РабочийТекстПериод+") КАК "+КодИсточника+"_Период";
	
	ТекстЗапросаПериод=ТекстЗапросаПериод+ТекстЗапросаИсточникПериод;
		
КонецПроцедуры // ДобавитьВТекстОсновногоЗапросаОбороты() 

Функция СформироватьТекстЗапросаПоОборотам(СтруктураИспользуемыхИзмерений,Сценарий,ДатаНач,ДатаКон,ОтборСтатьи) Экспорт
	
	// Выберем статьи оборотов, для которых будем получать данные
	Запрос=Новый Запрос;
	СтруктураПараметров=Новый Структура;
	
	ТекстЗапроса="ВЫБРАТЬ
	|	СтатьиОборотовПоБюджетам.Ссылка КАК СтатьяОборотов,
	|	СтатьиОборотовПоБюджетам.Ссылка.Представление КАК СтатьяОборотовПредставление,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.ТекстЗапроса КАК ТекстЗапроса,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.НастройкиПостроителя КАК НастройкиПостроителя,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.ИзмеренияИсточника КАК ИзмеренияИсточника,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.ДатыОтбораДанныхИсточника КАК ДатыОтбораДанныхИсточника,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.ПроизвольныйЗапрос КАК ПроизвольныйЗапрос,
	|	СтатьиОборотовПоБюджетам.ПоказательИсточникаДанныхДляФактаСум,
	|	СтатьиОборотовПоБюджетам.КоэффициентДляФактаСум,
	|	СтатьиОборотовПоБюджетам.СпособОпределенияВалютыОборотаФакт,
	|	СтатьиОборотовПоБюджетам.ПоказательИсточникаДанныхДляФактаКол,
	|	СтатьиОборотовПоБюджетам.КоэффициентДляФактаКол,
	|	СтатьиОборотовПоБюджетам.ОсновнаяВалюта,
	|	СтатьиОборотовПоБюджетам.РазделениеПоКонтрагентам,
	|	СтатьиОборотовПоБюджетам.РазделениеПоНоменклатуре
    |ИЗ
	|	Справочник.СтатьиОборотовПоБюджетам КАК СтатьиОборотовПоБюджетам
	|ГДЕ
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта <> &ПустойИсточникДанных";
	
	Если НЕ ОтборСтатьи.Количество()=0 Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И
		|	СтатьиОборотовПоБюджетам.Ссылка В ИЕРАРХИИ(&СтатьиОборотов)";
		Запрос.УстановитьПараметр("СтатьиОборотов",ОтборСтатьи);
	КонецЕсли;
		
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("ПустойИсточникДанных",Новый(Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования")));
	
	ТекстОсновногоЗапроса="";
	ТекстЗапросаПериод="";
	
	СтруктураПараметров=Новый Структура;
	НомерСтатьи=0;
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		ДобавитьВТекстОсновногоЗапросаОбороты(РезультатЗапроса,ТекстОсновногоЗапроса, ТекстЗапросаПериод,СтруктураПараметров,НомерСтатьи,
					СтруктураИспользуемыхИзмерений,ДатаНач,ДатаКон);	
		НомерСтатьи=НомерСтатьи+1;
		
	КонецЦикла;
	
	ТекстЗапроса=Сред(ТекстОсновногоЗапроса,16);
	ТекстЗапросаПериод=Сред(ТекстЗапросаПериод,16);
	
	Если ТекстЗапроса="" Тогда
		
		Возврат Новый Структура("НетИсточников");
		
	КонецЕсли;
	
	ТекстИтог="ВЫБРАТЬ
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Период КАК Дата) КАК Период,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.СтатьяОборотов КАК Справочник.СтатьиОборотовПоБюджетам) КАК СтатьяОборотов,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Валюта КАК Справочник.Валюты) КАК Валюта,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.ЦФО КАК Справочник.Подразделения) КАК ЦФО,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Проект КАК Справочник.Проекты) КАК Проект,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Контрагент КАК Справочник.Контрагенты) КАК Контрагент,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|ЗапросПоИсточникам.Количество КАК КоличествоОборот,
	|ЗапросПоИсточникам.Сумма КАК ВалютнаяСуммаОборот,
	|ВЫБОР 
	|		КОГДА ВЫРАЗИТЬ(ЗапросПоИсточникам.Валюта КАК Справочник.Валюты)=&ВалютаУпрУчета ТОГДА ЗапросПоИсточникам.Сумма
	|		КОГДА ВЫРАЗИТЬ(ЗапросПоИсточникам.Валюта КАК Справочник.Валюты)<>&ВалютаУпрУчета И КурсыИсточника.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
	|			ЗапросПоИсточникам.Сумма*КурсыИсточника.Курс * КурсыУпрУчета.Кратность 
	|			/ (КурсыУпрУчета.Курс * КурсыИсточника.Кратность)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ  КАК СуммаУпрОборот	
	|ИЗ
	|("+ТекстЗапроса+") КАК ЗапросПоИсточникам
	// Курсы источников 
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность,
	|	КурсыВалют.Валюта КАК Валюта
	|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата,
	|		КурсыВнутр.Валюта КАК Валюта
	|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ЗапросПоПериодам.Период КАК Дата,
	|			ЗапросПоПериодам.Валюта КАК ВалютаДок
	|		ИЗ 
	|		("+ТекстЗапросаПериод+") КАК ЗапросПоПериодам
	|		) КАК Обороты
	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И КурсыВнутр.Валюта = Обороты.ВалютаДок
	|	СГРУППИРОВАТЬ ПО Обороты.Дата, КурсыВнутр.Валюта) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период И 
	|      КурсыВалют.Валюта = ПериодПоследнейЗаписиКурсаНаДатуОборота.Валюта) КАК КурсыИсточника
	|ПО КурсыИсточника.Дата = ЗапросПоИсточникам.Период И
	|   КурсыИсточника.Валюта = ВЫРАЗИТЬ(ЗапросПоИсточникам.Валюта КАК Справочник.Валюты)
	// Курсы валюты управленческого учета
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность
	|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		МАКСИМУМ(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата
	|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ЗапросПоПериодам.Период КАК Дата,
	|			ЗапросПоПериодам.Валюта КАК ВалютаДок
	|		ИЗ 
	|		("+ТекстЗапросаПериод+") КАК ЗапросПоПериодам
	|		) КАК Обороты
	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И (КурсыВнутр.Валюта = &ВалютаУпрУчета)
	|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета) КАК КурсыУпрУчета
	|ПО КурсыУпрУчета.Дата = ЗапросПоИсточникам.Период";
	
			
	СтруктураПараметров.Вставить("МоментВремени",ДатаНач);	
	СтруктураПараметров.Вставить("ПустойЦФО",Справочники.Подразделения.ПустаяСсылка());
	СтруктураПараметров.Вставить("ПустойПроект",Справочники.Проекты.ПустаяСсылка());
	СтруктураПараметров.Вставить("ПустойКонтрагент",Справочники.Контрагенты.ПустаяСсылка());	
	СтруктураПараметров.Вставить("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
	СтруктураПараметров.Вставить("ВалютаРеглУчета",глЗначениеПеременной("ВалютаРегламентированногоУчета"));	
	СтруктураПараметров.Вставить("ПустойНоменклатура",?(Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы,
													Справочники.НоменклатурныеГруппы.ПустаяСсылка(),Справочники.Номенклатура.ПустаяСсылка()));
													
	СтруктураЗапроса=Новый Структура;
	СтруктураЗапроса.Вставить("ТекстЗапроса",ТекстИтог);
	СтруктураЗапроса.Вставить("ПараметрыЗапроса",СтруктураПараметров);
	
	Возврат СтруктураЗапроса;
		
	
КонецФункции // СформироватьТекстЗапросаПоОборотам()

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Остатки по источникам данных

Функция СформироватьТекстЗапросаПоОстаткам(СтруктураИспользуемыхИзмерений,Сценарий,ДатаОстатка,ОтборСчета) Экспорт
	
	// Выберем статьи оборотов, для которых будем получать данные
	Запрос=Новый Запрос;
	СтруктураПараметров=Новый Структура;
	
	ТекстЗапроса="ВЫБРАТЬ
	|	Бюджетирование.Ссылка КАК Счет,
	|	Бюджетирование.Валютный КАК Валютный,
	|	Бюджетирование.Количественный КАК Количественный,
	|	БюджетированиеВидыСубконто1.ВидСубконто.Наименование КАК НаименованиеСубконто1,
	|	БюджетированиеВидыСубконто2.ВидСубконто.Наименование КАК НаименованиеСубконто2,
	|	БюджетированиеВидыСубконто3.ВидСубконто.Наименование КАК НаименованиеСубконто3,
	|	Бюджетирование.ИсточникДанныхДляФакта.ТекстЗапроса КАК ТекстЗапроса,
	|	Бюджетирование.ИсточникДанныхДляФакта.НастройкиПостроителя КАК НастройкиПостроителя,
	|	Бюджетирование.ИсточникДанныхДляФакта.ПроизвольныйЗапрос КАК ПроизвольныйЗапрос,
	|	Бюджетирование.ПоказательИсточникаДанныхДляФактаСум КАК ПоказательИсточникаДанныхДляФактаСум,
	|	Бюджетирование.КоэффициентДляФактаСум КАК КоэффициентДляФактаСум,
	|	Бюджетирование.СпособОпределенияВалютыОборотаФакт КАК СпособОпределенияВалютыОборотаФакт,
	|	Бюджетирование.ПоказательИсточникаДанныхДляФактаКол КАК ПоказательИсточникаДанныхДляФактаКол,
	|	Бюджетирование.КоэффициентДляФактаКол КАК КоэффициентДляФактаКол,
	|	Бюджетирование.ИсточникДанныхДляФакта.ИзмеренияИсточника КАК ИзмеренияИсточника,
	|	Бюджетирование.ИсточникДанныхДляФакта.ДатыОтбораДанныхИсточника КАК ДатыОтбораДанныхИсточника,
	|	Бюджетирование.Представление
	|ИЗ
	|	ПланСчетов.Бюджетирование КАК Бюджетирование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто1
	|		ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто1.Ссылка И (БюджетированиеВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто2
	|		ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто2.Ссылка И (БюджетированиеВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто3
	|		ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто3.Ссылка И (БюджетированиеВидыСубконто3.НомерСтроки = 3)
	|
	|ГДЕ
	|	НЕ Бюджетирование.ИсточникДанныхДляФакта = &ПустойИсточник";
	
	Если НЕ ОтборСчета.Количество()=0 Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И
		|	Бюджетирование.Ссылка В ИЕРАРХИИ(&Счета)";
		Запрос.УстановитьПараметр("Счета",ОтборСчета);
	КонецЕсли;
	
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("ПустойИсточник",Новый(Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования")));
		
	ТекстОсновногоЗапроса="";
	
	СтруктураПараметров=Новый Структура;
	НомерСчета=0;
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		ДобавитьВТекстОсновногоЗапросаОстатки(РезультатЗапроса,ТекстОсновногоЗапроса,СтруктураПараметров,НомерСчета,
					СтруктураИспользуемыхИзмерений,ДатаОстатка);	
		НомерСчета=НомерСчета+1;
		
	КонецЦикла;
	
	ТекстЗапроса=Сред(ТекстОсновногоЗапроса,16);
	
	Если ТекстЗапроса="" Тогда
		
		Возврат Новый Структура("НетИсточников");
		
	КонецЕсли;
	
	ТекстИтог="ВЫБРАТЬ
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Счет КАК ПланСчетов.Бюджетирование) КАК Счет,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Валюта КАК Справочник.Валюты) КАК Валюта,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.ЦФО КАК Справочник.Подразделения) КАК ЦФО,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Проект КАК Справочник.Проекты) КАК Проект,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Контрагент КАК Справочник.Контрагенты) КАК Контрагент,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|ЗапросПоИсточникам.Количество КАК КоличествоОстаток,
	|ЗапросПоИсточникам.Сумма КАК ВалютнаяСуммаОстаток,
	|ВЫБОР 
	|		КОГДА ВЫРАЗИТЬ(ЗапросПоИсточникам.Валюта КАК Справочник.Валюты)=&ВалютаУпрУчета ТОГДА ЗапросПоИсточникам.Сумма
	|		КОГДА ВЫРАЗИТЬ(ЗапросПоИсточникам.Валюта КАК Справочник.Валюты)<>&ВалютаУпрУчета И КурсыИсточника.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
	|			ЗапросПоИсточникам.Сумма*КурсыИсточника.Курс * КурсыУпрУчета.Кратность 
	|			/ (КурсыУпрУчета.Курс * КурсыИсточника.Кратность)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ  КАК СуммаУпрОстаток	
	|ИЗ
	|("+ТекстЗапроса+") КАК ЗапросПоИсточникам
	// Курсы источников 
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОстатка, Валюта=&ВалютаУпрУчета) КАК КурсыУпрУчета
	|	ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОстатка) КАК КурсыИсточника
	|	ПО ВЫРАЗИТЬ(ЗапросПоИсточникам.Валюта КАК Справочник.Валюты)=КурсыИсточника.Валюта";

			
	СтруктураПараметров.Вставить("МоментВремени",ДатаОстатка);
	СтруктураПараметров.Вставить("ДатаОстатка",ДатаОстатка);
	СтруктураПараметров.Вставить("ПустойЦФО",Справочники.Подразделения.ПустаяСсылка());
	СтруктураПараметров.Вставить("ПустойПроект",Справочники.Проекты.ПустаяСсылка());
	СтруктураПараметров.Вставить("ПустойКонтрагент",Справочники.Контрагенты.ПустаяСсылка());	
	СтруктураПараметров.Вставить("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
	СтруктураПараметров.Вставить("ВалютаРеглУчета",глЗначениеПеременной("ВалютаРегламентированногоУчета"));	
	СтруктураПараметров.Вставить("ПустойНоменклатура",?(Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы,
													Справочники.НоменклатурныеГруппы.ПустаяСсылка(),Справочники.Номенклатура.ПустаяСсылка()));
													
	СтруктураЗапроса=Новый Структура;
	СтруктураЗапроса.Вставить("ТекстЗапроса",ТекстИтог);
	СтруктураЗапроса.Вставить("ПараметрыЗапроса",СтруктураПараметров);
	
	Возврат СтруктураЗапроса;
		
	
КонецФункции // СформироватьТекстЗапросаПоОстаткам()

Функция СформироватьТекстЗапросаПоОстаткамПериод(СтруктураИспользуемыхИзмерений,Сценарий,ДатаНач,ДатаКон,Периодичность,ОтборСчета,Префикс="") Экспорт
	
	// Выберем статьи оборотов, для которых будем получать данные
	Запрос=Новый Запрос;
	СтруктураПараметров=Новый Структура;
	
	ТекстЗапроса="ВЫБРАТЬ
	|	Бюджетирование.Ссылка КАК Счет,
	|	Бюджетирование.Валютный КАК Валютный,
	|	Бюджетирование.Вид КАК ВидСчета,
	|	Бюджетирование.Количественный КАК Количественный,
	|	БюджетированиеВидыСубконто1.ВидСубконто.Наименование КАК НаименованиеСубконто1,
	|	БюджетированиеВидыСубконто2.ВидСубконто.Наименование КАК НаименованиеСубконто2,
	|	БюджетированиеВидыСубконто3.ВидСубконто.Наименование КАК НаименованиеСубконто3,
	|	Бюджетирование.ИсточникДанныхДляФакта.ТекстЗапроса КАК ТекстЗапроса,
	|	Бюджетирование.ИсточникДанныхДляФакта.НастройкиПостроителя КАК НастройкиПостроителя,
	|	Бюджетирование.ИсточникДанныхДляФакта.ПроизвольныйЗапрос КАК ПроизвольныйЗапрос,
	|	Бюджетирование.ПоказательИсточникаДанныхДляФактаСум КАК ПоказательИсточникаДанныхДляФактаСум,
	|	Бюджетирование.КоэффициентДляФактаСум КАК КоэффициентДляФактаСум,
	|	Бюджетирование.СпособОпределенияВалютыОборотаФакт КАК СпособОпределенияВалютыОборотаФакт,
	|	Бюджетирование.ПоказательИсточникаДанныхДляФактаКол КАК ПоказательИсточникаДанныхДляФактаКол,
	|	Бюджетирование.КоэффициентДляФактаКол КАК КоэффициентДляФактаКол,
	|	Бюджетирование.ИсточникДанныхДляФакта.ИзмеренияИсточника КАК ИзмеренияИсточника,
	|	Бюджетирование.ИсточникДанныхДляФакта.ДатыОтбораДанныхИсточника КАК ДатыОтбораДанныхИсточника,
	|	Бюджетирование.Представление
	|ИЗ
	|	ПланСчетов.Бюджетирование КАК Бюджетирование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто1
	|		ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто1.Ссылка И (БюджетированиеВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто2
	|		ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто2.Ссылка И (БюджетированиеВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто3
	|		ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто3.Ссылка И (БюджетированиеВидыСубконто3.НомерСтроки = 3)
	|
	|ГДЕ
	|	НЕ Бюджетирование.ИсточникДанныхДляФакта = &ПустойИсточник";
	
	Если НЕ ОтборСчета.Количество()=0 Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И
		|	Бюджетирование.Ссылка В ИЕРАРХИИ(&Счета)";
		Запрос.УстановитьПараметр("Счета",ОтборСчета);
	КонецЕсли;
	
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("ПустойИсточник",Новый(Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования")));
		
	ТекстОсновногоЗапроса="";
	
	СтруктураПараметров=Новый Структура;
	НомерСчета=0;
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		ДобавитьВТекстОсновногоЗапросаОстаткиПериод(РезультатЗапроса,ТекстОсновногоЗапроса,СтруктураПараметров,НомерСчета,
					СтруктураИспользуемыхИзмерений,ДатаНач,ДатаКон,Периодичность,Префикс);	
		НомерСчета=НомерСчета+1;
		
	КонецЦикла;
	
	ТекстЗапроса=Сред(ТекстОсновногоЗапроса,16);
	
	Если ТекстЗапроса="" Тогда
		
		Возврат Новый Структура("НетИсточников");
		
	КонецЕсли;
	
	ТекстИтог="ВЫБРАТЬ
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Счет КАК ПланСчетов.Бюджетирование) КАК Счет,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Период КАК Дата) КАК Период,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Валюта КАК Справочник.Валюты) КАК Валюта,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".ЦФО КАК Справочник.Подразделения) КАК ЦФО,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Проект КАК Справочник.Проекты) КАК Проект,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Контрагент КАК Справочник.Контрагенты) КАК Контрагент,
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|СУММА(ЗапросПоИсточникам"+Префикс+".КоличествоНачальныйОстатокДт) КАК КоличествоНачальныйОстатокДт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".КоличествоНачальныйОстатокКт) КАК КоличествоНачальныйОстатокКт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".КоличествоКонечныйОстатокДт) КАК КоличествоКонечныйОстатокДт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".КоличествоКонечныйОстатокКт) КАК КоличествоКонечныйОстатокКт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".ВалютнаяСуммаНачальныйОстатокДт) КАК ВалютнаяСуммаНачальныйОстатокДт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".ВалютнаяСуммаНачальныйОстатокКт) КАК ВалютнаяСуммаНачальныйОстатокКт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".ВалютнаяСуммаКонечныйОстатокДт) КАК ВалютнаяСуммаКонечныйОстатокДт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".ВалютнаяСуммаКонечныйОстатокКт) КАК ВалютнаяСуммаКонечныйОстатокКт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".СуммаУпрНачальныйОстатокДт) КАК СуммаУпрНачальныйОстатокДт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".СуммаУпрНачальныйОстатокКт) КАК СуммаУпрНачальныйОстатокКт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".СуммаУпрКонечныйОстатокДт) КАК СуммаУпрКонечныйОстатокДт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".СуммаУпрКонечныйОстатокКт) КАК СуммаУпрКонечныйОстатокКт,
	|СУММА(ЗапросПоИсточникам"+Префикс+".КоличествоНачальныйОстатокДтИтог) КАК КоличествоНачальныйОстатокДтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".КоличествоНачальныйОстатокКтИтог) КАК КоличествоНачальныйОстатокКтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".КоличествоКонечныйОстатокДтИтог) КАК КоличествоКонечныйОстатокДтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".КоличествоКонечныйОстатокКтИтог) КАК КоличествоКонечныйОстатокКтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".ВалютнаяСуммаНачальныйОстатокДтИтог) КАК ВалютнаяСуммаНачальныйОстатокДтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".ВалютнаяСуммаНачальныйОстатокКтИтог) КАК ВалютнаяСуммаНачальныйОстатокКтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".ВалютнаяСуммаКонечныйОстатокДтИтог) КАК ВалютнаяСуммаКонечныйОстатокДтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".ВалютнаяСуммаКонечныйОстатокКтИтог) КАК ВалютнаяСуммаКонечныйОстатокКтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".СуммаУпрНачальныйОстатокДтИтог) КАК СуммаУпрНачальныйОстатокДтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".СуммаУпрНачальныйОстатокКтИтог) КАК СуммаУпрНачальныйОстатокКтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".СуммаУпрКонечныйОстатокДтИтог) КАК СуммаУпрКонечныйОстатокДтИтог,
	|СУММА(ЗапросПоИсточникам"+Префикс+".СуммаУпрКонечныйОстатокКтИтог) КАК СуммаУпрКонечныйОстатокКтИтог
	|ИЗ
	|("+ТекстЗапроса+") КАК ЗапросПоИсточникам"+Префикс+" 
	|СГРУППИРОВАТЬ ПО 
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Счет КАК ПланСчетов.Бюджетирование),
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Период КАК Дата),
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Валюта КАК Справочник.Валюты),
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".ЦФО КАК Справочник.Подразделения),
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Проект КАК Справочник.Проекты),
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Контрагент КАК Справочник.Контрагенты),
	|ВЫРАЗИТЬ(ЗапросПоИсточникам"+Префикс+".Номенклатура КАК Справочник.Номенклатура)";

	СтруктураПараметров.Вставить("ПустойЦФО",Справочники.Подразделения.ПустаяСсылка());
	СтруктураПараметров.Вставить("ПустойПроект",Справочники.Проекты.ПустаяСсылка());
	СтруктураПараметров.Вставить("ПустойКонтрагент",Справочники.Контрагенты.ПустаяСсылка());	
	СтруктураПараметров.Вставить("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
	СтруктураПараметров.Вставить("ВалютаРеглУчета",глЗначениеПеременной("ВалютаРегламентированногоУчета"));	
	СтруктураПараметров.Вставить("ПустойНоменклатура",?(Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы,
													Справочники.НоменклатурныеГруппы.ПустаяСсылка(),Справочники.Номенклатура.ПустаяСсылка()));
													
	СтруктураЗапроса=Новый Структура;
	СтруктураЗапроса.Вставить("ТекстЗапроса",ТекстИтог);
	СтруктураЗапроса.Вставить("ПараметрыЗапроса",СтруктураПараметров);
	
	Возврат СтруктураЗапроса;
			
КонецФункции // СформироватьТекстЗапросаПоОстаткамПериод()

Процедура ДобавитьВТекстОсновногоЗапросаОстатки(СчетИсточник,ТекстОсновногоЗапроса,СтруктураПараметров,НомерСчета, 
								СтруктураИспользуемыхИзмерений,ДатаОстатка)
	
	ПостроительОтчета=Новый ПостроительОтчета; // Основной построитель отчета
	
	ТекстЗапроса=СчетИсточник.ТекстЗапроса;
	
	СохраненнаяНастройка=СчетИсточник.НастройкиПостроителя.Получить();
	
	ИзмеренияИсточника=СчетИсточник.ИзмеренияИсточника.Выгрузить();
	ДатыОтбораДанныхИсточника=СчетИсточник.ДатыОтбораДанныхИсточника.Выгрузить();
	КодИсточника="Счет_"+НомерСчета;
	
	Если ТипЗнч(СохраненнаяНастройка.НастройкиПостроителя)=Тип("НастройкиПостроителяОтчета") Тогда
		
		Для Каждого Параметр Из СохраненнаяНастройка.ПараметрыПостроителя Цикл
			СтруктураПараметров.Вставить(Параметр.Ключ+КодИсточника,Параметр.Значение);
			ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"&"+Параметр.Ключ,"&"+Параметр.Ключ+КодИсточника);
		КонецЦикла;
		
		Для каждого Граница Из ДатыОтбораДанныхИсточника Цикл
						
			ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"&"+Граница.ИмяДатаГраницы,"&"+Граница.ИмяДатаГраницы+КодИсточника);
			СтруктураПараметров.Вставить(Граница.ИмяДатаГраницы+КодИсточника,ДатаОстатка);
			
		КонецЦикла;
		
		ПостроительОтчета.Текст=ТекстЗапроса;
		
		Если СчетИсточник.ПроизвольныйЗапрос Тогда
			
			ПостроительОтчета.ЗаполнитьНастройки();
			
		КонецЕсли;
		
		ПостроительОтчета.УстановитьНастройки(СохраненнаяНастройка.НастройкиПостроителя,Истина,Ложь,Истина,Истина);
	Иначе
		Возврат;
	КонецЕсли;
	
	// Формируем структуру измерений для запроса
	
	СтруктураИзмерений=Новый Структура;
		
	//Сформируем структуру, являющуюся пересечением структуры измерений общего запроса и используемых для счета субконто.
	
	СтруктураСубконтоИзмерения=Новый Структура;
	СтруктураСубконтоИзмерения.Вставить("Контрагенты","Контрагент");
	СтруктураСубконтоИзмерения.Вставить("Номенклатура","Номенклатура");
	СтруктураСубконтоИзмерения.Вставить("Проекты","Проект");
	СтруктураСубконтоИзмерения.Вставить("СтатьиОборотов","СтатьяОборотов");
	СтруктураСубконтоИзмерения.Вставить("ЦФО","ЦФО");
		
	СтруктураИспользуемыхСубконто=Новый Структура;
	
	Если (НЕ СчетИсточник.НаименованиеСубконто1=NULL) И СтруктураИспользуемыхИзмерений.Свойство(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто1]) Тогда
		СтруктураИспользуемыхСубконто.Вставить(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто1]);
	КонецЕсли;
	
	Если (НЕ СчетИсточник.НаименованиеСубконто2=NULL) И СтруктураИспользуемыхИзмерений.Свойство(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто2]) Тогда
		СтруктураИспользуемыхСубконто.Вставить(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто2]);
	КонецЕсли;
	
	Если (НЕ СчетИсточник.НаименованиеСубконто3=NULL) И СтруктураИспользуемыхИзмерений.Свойство(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто3]) Тогда
		СтруктураИспользуемыхСубконто.Вставить(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто3]);
	КонецЕсли;
	
	Если СчетИсточник.Валютный Тогда
		СтруктураИспользуемыхСубконто.Вставить("Валюта");
	КонецЕсли;
	
	Для Каждого СтрокаСвязь ИЗ ИзмеренияИсточника Цикл
		
		ИмяИзмерения=Строка(СтрокаСвязь.ИзмерениеБюджетирования);
		
		Если СтруктураИспользуемыхСубконто.Свойство(ИмяИзмерения) Тогда
			
			СтруктураИзмерений.Вставить(ИмяИзмерения,СтрокаСвязь.ИмяПоляИсточника);
			
		Иначе
			
			ПолеКУдалению=ПостроительОтчета.ВыбранныеПоля.Найти(СтрокаСвязь.ИмяПоляИсточника);
			
			Если НЕ ПолеКУдалению=Неопределено Тогда
				ПостроительОтчета.ВыбранныеПоля.Удалить(ПолеКУдалению);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
				
	// Убираем валюту из измерений запроса, если она не используется при получении сумм по статье	
	Если (НЕ (СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных И СчетИсточник.Валютный))
		И СтруктураИзмерений.Свойство("Валюта") Тогда
		
		ПолеВалюта=ПостроительОтчета.ВыбранныеПоля.Найти(СтруктураИзмерений.Валюта);
		
		Если Не ПолеВалюта=Неопределено Тогда
			
			ПостроительОтчета.ВыбранныеПоля.Удалить(ПолеВалюта);
			
		КонецЕсли;
		
	КонецЕсли;	
				
	РабочийТекст=ПостроительОтчета.ПолучитьЗапрос().Текст;
	
	// Определим параметры отбора
	Индекс=1;
	Для Каждого СтрокаОтбора Из ПостроительОтчета.Отбор Цикл
		
		Если СтрокаОтбора.Использование=Истина Тогда
			
			Если СтрокаОтбора.ЗначениеС=Неопределено ИЛИ (НЕ ЗначениеЗаполнено(СтрокаОтбора.ЗначениеС)) ИЛИ СтрокаОтбора.ВидСравнения = ВидСравнения.Равно Тогда
				РабочийТекст=СтрЗаменить(РабочийТекст,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
						
				СтруктураПараметров.Вставить("Параметр_"+КодИсточника+"_"+Индекс,СтрокаОтбора.Значение);
				Индекс=Индекс+1;
			Иначе
				РабочийТекст=СтрЗаменить(РабочийТекст,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
							
				СтруктураПараметров.Вставить("Параметр_"+КодИсточника+"_"+Индекс,СтрокаОтбора.ЗначениеС);
				Индекс=Индекс+1;
				РабочийТекст=СтрЗаменить(РабочийТекст,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
				СтруктураПараметров.Вставить("Параметр_"+КодИсточника+"_"+Индекс,СтрокаОтбора.ЗначениеПо);
				Индекс=Индекс+1;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Формируем текст основного запроса
	
	ТекстЗапросаИсточник="
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|&Счет"+КодИсточника+" КАК Счет,";
	
	СтруктураПараметров.Вставить("Счет"+КодИсточника,СчетИсточник.Счет);
			
	Если СтруктураИзмерений.Свойство("ЦФО") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.ЦФО+" КАК ЦФО,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойЦФО КАК ЦФО,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Проект") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Проект+" КАК Проект,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойПроект КАК Проект,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Контрагент") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Контрагент+" КАК Контрагент,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойКонтрагент КАК Контрагент,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Номенклатура") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Номенклатура+" КАК Номенклатура,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойНоменклатура КАК Номенклатура,";	
	КонецЕсли;
	
	Если СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Валюта+" КАК Валюта,";
	ИначеЕсли СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаРегламентированногоУчета Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ВалютаРеглУчета КАК Валюта,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ВалютаУпрУчета КАК Валюта,";
	КонецЕсли;
	
	Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаСум) Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|0 КАК Сумма,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК Сумма,";
		СтруктураПараметров.Вставить("КоэффициентДляФактаСум_"+КодИсточника,СчетИсточник.КоэффициентДляФактаСум);
	КонецЕсли;
	
	Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаКол) Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|0 КАК Количество";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК Количество,";
		СтруктураПараметров.Вставить("КоэффициентДляФактаКол_"+КодИсточника,СчетИсточник.КоэффициентДляФактаКол);
	КонецЕсли;
	
	ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
	|ИЗ
	|("+РабочийТекст+") КАК "+КодИсточника;
	
	ТекстОсновногоЗапроса=ТекстОсновногоЗапроса+ТекстЗапросаИсточник;
		
КонецПроцедуры // ДобавитьВТекстОсновногоЗапросаОстатки()

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
Процедура ДобавитьВТекстОсновногоЗапросаОстаткиПериод(СчетИсточник,ТекстОсновногоЗапроса,СтруктураПараметров,НомерСчета, 
								СтруктураИспользуемыхИзмерений,ДатаНач,ДатаКон,Периодичность,Префикс)
								
	Перем НачальнаяДатаГраницы;							
								
	ПостроительОтчета=Новый ПостроительОтчета; // Основной построитель отчета
	
	ТекстЗапроса=СчетИсточник.ТекстЗапроса;
	
	СохраненнаяНастройка=СчетИсточник.НастройкиПостроителя.Получить();
	
	ИзмеренияИсточника=СчетИсточник.ИзмеренияИсточника.Выгрузить();
	ДатыОтбораДанныхИсточника=СчетИсточник.ДатыОтбораДанныхИсточника.Выгрузить();
	КодИсточника="Счет_"+НомерСчета+Префикс;
	
	Если ТипЗнч(СохраненнаяНастройка.НастройкиПостроителя)=Тип("НастройкиПостроителяОтчета") Тогда
		
		Для Каждого Параметр Из СохраненнаяНастройка.ПараметрыПостроителя Цикл
			СтруктураПараметров.Вставить(Параметр.Ключ+КодИсточника,Параметр.Значение);
			ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"&"+Параметр.Ключ,"&"+Параметр.Ключ+КодИсточника);
		КонецЦикла;
		
		Для каждого Граница Из ДатыОтбораДанныхИсточника Цикл
						
			ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"&"+Граница.ИмяДатаГраницы,"&ДатаИсточникаQQQ");
			
		КонецЦикла;
		
		ПостроительОтчета.Текст=ТекстЗапроса;
		
		Если СчетИсточник.ПроизвольныйЗапрос Тогда
			
			ПостроительОтчета.ЗаполнитьНастройки();
			
		КонецЕсли;
		
		ПостроительОтчета.УстановитьНастройки(СохраненнаяНастройка.НастройкиПостроителя,Истина,Ложь,Истина,Истина);
	Иначе
		Возврат;
	КонецЕсли;
	
	// Формируем структуру измерений для запроса
	
	СтруктураИзмерений=Новый Структура;
		
	//Сформируем структуру, являющуюся пересечением структуры измерений общего запроса и используемых для счета субконто.
	
	СтруктураСубконтоИзмерения=Новый Структура;
	СтруктураСубконтоИзмерения.Вставить("Контрагенты","Контрагент");
	СтруктураСубконтоИзмерения.Вставить("Номенклатура","Номенклатура");
	СтруктураСубконтоИзмерения.Вставить("Проекты","Проект");
	СтруктураСубконтоИзмерения.Вставить("СтатьиОборотов","СтатьяОборотов");
	СтруктураСубконтоИзмерения.Вставить("ЦФО","ЦФО");
		
	СтруктураИспользуемыхСубконто=Новый Структура;
	
	Если (НЕ СчетИсточник.НаименованиеСубконто1=NULL) И СтруктураИспользуемыхИзмерений.Свойство(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто1]) Тогда
		СтруктураИспользуемыхСубконто.Вставить(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто1]);
	КонецЕсли;
	
	Если (НЕ СчетИсточник.НаименованиеСубконто2=NULL) И СтруктураИспользуемыхИзмерений.Свойство(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто2]) Тогда
		СтруктураИспользуемыхСубконто.Вставить(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто2]);
	КонецЕсли;
	
	Если (НЕ СчетИсточник.НаименованиеСубконто3=NULL) И СтруктураИспользуемыхИзмерений.Свойство(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто3]) Тогда
		СтруктураИспользуемыхСубконто.Вставить(СтруктураСубконтоИзмерения[СчетИсточник.НаименованиеСубконто3]);
	КонецЕсли;
	
	Если СчетИсточник.Валютный Тогда
		СтруктураИспользуемыхСубконто.Вставить("Валюта");
	КонецЕсли;
	
	Для Каждого СтрокаСвязь ИЗ ИзмеренияИсточника Цикл
		
		ИмяИзмерения=Строка(СтрокаСвязь.ИзмерениеБюджетирования);
		
		Если СтруктураИспользуемыхСубконто.Свойство(ИмяИзмерения) Тогда
			
			СтруктураИзмерений.Вставить(ИмяИзмерения,СтрокаСвязь.ИмяПоляИсточника);
			
		Иначе
			
			ПолеКУдалению=ПостроительОтчета.ВыбранныеПоля.Найти(СтрокаСвязь.ИмяПоляИсточника);
			
			Если НЕ ПолеКУдалению=Неопределено Тогда
				ПостроительОтчета.ВыбранныеПоля.Удалить(ПолеКУдалению);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
				
	// Убираем валюту из измерений запроса, если она не используется при получении сумм по статье	
	Если (НЕ (СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных И СчетИсточник.Валютный))
		И СтруктураИзмерений.Свойство("Валюта") Тогда
		
		ПолеВалюта=ПостроительОтчета.ВыбранныеПоля.Найти(СтруктураИзмерений.Валюта);
		
		Если Не ПолеВалюта=Неопределено Тогда
			
			ПостроительОтчета.ВыбранныеПоля.Удалить(ПолеВалюта);
			
		КонецЕсли;
		
	КонецЕсли;	
				
	РабочийТекст=ПостроительОтчета.ПолучитьЗапрос().Текст;
	
	// Определим параметры отбора
	Индекс=1;
	Для Каждого СтрокаОтбора Из ПостроительОтчета.Отбор Цикл
		
		Если СтрокаОтбора.Использование=Истина Тогда
			
			Если СтрокаОтбора.ЗначениеС=Неопределено ИЛИ (НЕ ЗначениеЗаполнено(СтрокаОтбора.ЗначениеС)) ИЛИ СтрокаОтбора.ВидСравнения = ВидСравнения.Равно Тогда
				РабочийТекст=СтрЗаменить(РабочийТекст,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
						
				СтруктураПараметров.Вставить("Параметр_"+КодИсточника+"_"+Индекс,СтрокаОтбора.Значение);
				Индекс=Индекс+1;
			Иначе
				РабочийТекст=СтрЗаменить(РабочийТекст,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
							
				СтруктураПараметров.Вставить("Параметр_"+КодИсточника+"_"+Индекс,СтрокаОтбора.ЗначениеС);
				Индекс=Индекс+1;
				РабочийТекст=СтрЗаменить(РабочийТекст,"Параметр"+Индекс,"Параметр_"+КодИсточника+"_"+Индекс);
				СтруктураПараметров.Вставить("Параметр_"+КодИсточника+"_"+Индекс,СтрокаОтбора.ЗначениеПо);
				Индекс=Индекс+1;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не Периодичность=Перечисления.Периодичность.ПустаяСсылка() Тогда
		// Получаем текст запроса для получения остатков на начало и конец каждого периода
		
		ДатаОстатка=ДатаНач;
		НомерПериода=1;
		
		// Формируем текст основного запроса	
		Пока ДатаОстатка<=ДатаКон Цикл
			
			РабочийТекстПериодНач=СтрЗаменить(РабочийТекст,"&ДатаИсточникаQQQ","&ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Нач");
			РабочийТекстПериодКон=СтрЗаменить(РабочийТекст,"&ДатаИсточникаQQQ","&ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Кон");
							
			СтруктураПараметров.Вставить("ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Нач",НачалоДня(ДатаОстатка));
			СтруктураПараметров.Вставить("ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Кон",ОбщегоНазначения.ДатаКонцаПериода(ДатаОстатка,Периодичность));
							
			ТекстЗапросаИсточник="
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ
			|&Счет"+КодИсточника+" КАК Счет,
			|&ДатаОстатка"+КодИсточника+"_"+НомерПериода+" КАК Период,";
			
			СтруктураПараметров.Вставить("Счет"+КодИсточника,СчетИсточник.Счет);
			СтруктураПараметров.Вставить("ДатаОстатка"+КодИсточника+"_"+НомерПериода,НачалоДня(ДатаОстатка));
			
			Если СтруктураИзмерений.Свойство("ЦФО") Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.ЦФО+" КАК ЦФО,";
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ПустойЦФО КАК ЦФО,";	
			КонецЕсли;
			
			Если СтруктураИзмерений.Свойство("Проект") Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.Проект+" КАК Проект,";
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ПустойПроект КАК Проект,";	
			КонецЕсли;
			
			Если СтруктураИзмерений.Свойство("Контрагент") Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.Контрагент+" КАК Контрагент,";
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ПустойКонтрагент КАК Контрагент,";	
			КонецЕсли;
			
			Если СтруктураИзмерений.Свойство("Номенклатура") Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.Номенклатура+" КАК Номенклатура,";
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ПустойНоменклатура КАК Номенклатура,";	
			КонецЕсли;
			
			Если СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.Валюта+" КАК Валюта,";
				
				ТекстСуммаУпр="
				|ВЫБОР
				|		КОГДА КурсыИсточника.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
				|			"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+"*КурсыИсточника.Курс * КурсыУпрУчета.Кратность 
				|			/ (КурсыУпрУчета.Курс * КурсыИсточника.Кратность)
				|		ИНАЧЕ
				|			0
				|		КОНЕЦ  КАК СуммаУпрОстаток";
				
				ТекстСоединения="
				|	ЛЕВОЕ СОЕДИНЕНИЕ 
				|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Нач, Валюта=&ВалютаУпрУчета) КАК КурсыУпрУчета
				|	ПО ИСТИНА
				|	ЛЕВОЕ СОЕДИНЕНИЕ
				|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Нач) КАК КурсыИсточника
				|	ПО "+КодИсточника+"Нач."+СтруктураИзмерений.Валюта+"=КурсыИсточника.Валюта";
				
				
			ИначеЕсли СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаРегламентированногоУчета Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ВалютаРеглУчета КАК Валюта,";
				
				ТекстСуммаУпр="
				|ВЫБОР
				|		КОГДА КурсыУпрУчета.Курс <>0 ТОГДА
				|			"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+"*КурсыУпрУчета.Кратность 
				|			/ (КурсыУпрУчета.Курс)
				|		ИНАЧЕ
				|			0
				|		КОНЕЦ  КАК СуммаУпрОстаток";
				
				ТекстСоединения="
				|	ЛЕВОЕ СОЕДИНЕНИЕ 
				|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Нач, Валюта=&ВалютаУпрУчета) КАК КурсыУпрУчета
				|	ПО ИСТИНА";
				
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ВалютаУпрУчета КАК Валюта,";
				
				ТекстСуммаУпр=СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК СуммаУпрОстаток";
				ТекстСоединения="";
				
			КонецЕсли;
			
			Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаСум) Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|0 КАК ВалютнаяСуммаНачальныйОстатокДт,
				|0 КАК ВалютнаяСуммаНачальныйОстатокКт,
				|0 КАК ВалютнаяСуммаКонечныйОстатокДт,
				|0 КАК ВалютнаяСуммаКонечныйОстатокКт,";
				
			Иначе
				
				Если СчетИсточник.ВидСчета=ВидСчета.Пассивный Тогда	
					
					ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
					|0 КАК ВалютнаяСуммаНачальныйОстатокДт,
					|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК ВалютнаяСуммаНачальныйОстатокКт,
					|0 КАК ВалютнаяСуммаКонечныйОстатокДт,
					|0 КАК ВалютнаяСуммаКонечныйОстатокКт,
					|0 КАК СуммаУпрНачальныйОстатокДт,
					|"+СтрЗаменить(ТекстСуммаУпр,"СуммаУпрОстаток","СуммаУпрНачальныйОстатокКт")+",
					|0 КАК СуммаУпрКонечныйОстатокДт,
					|0 КАК СуммаУпрКонечныйОстатокКт,";
					
				Иначе
					
					ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
					|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК ВалютнаяСуммаНачальныйОстатокДт,
					|0 КАК ВалютнаяСуммаНачальныйОстатокКт,
					|0 КАК ВалютнаяСуммаКонечныйОстатокДт,
					|0 КАК ВалютнаяСуммаКонечныйОстатокКт,
					|"+СтрЗаменить(ТекстСуммаУпр,"СуммаУпрОстаток","СуммаУпрНачальныйОстатокДт")+",
					|0 КАК СуммаУпрНачальныйОстатокКт,
					|0 КАК СуммаУпрКонечныйОстатокДт,
					|0 КАК СуммаУпрКонечныйОстатокКт,";
					
				КонецЕсли;
				
				СтруктураПараметров.Вставить("КоэффициентДляФактаСум_"+КодИсточника,СчетИсточник.КоэффициентДляФактаСум);
				
			КонецЕсли;
			
			Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаКол) Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|0 КАК КоличествоНачальныйОстатокДт,
				|0 КАК КоличествоНачальныйОстатокКт,
				|0 КАК КоличествоКонечныйОстатокДт,
				|0 КАК КоличествоКонечныйОстатокКт,";
			Иначе
				Если СчетИсточник.ВидСчета=ВидСчета.Пассивный Тогда	
					
					ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
					|0 КАК КоличествоНачальныйОстатокДт,
					|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК КоличествоНачальныйОстатокКт,
					|0 КАК КоличествоКонечныйОстатокДт,
					|0 КАК КоличествоКонечныйОстатокКт,";
					
				Иначе
					
					ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
					|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК КоличествоНачальныйОстатокДт,
					|0 КАК КоличествоНачальныйОстатокКт,
					|0 КАК КоличествоКонечныйОстатокДт,
					|0 КАК КоличествоКонечныйОстатокКт,";
					
				КонецЕсли;
				
				СтруктураПараметров.Вставить("КоэффициентДляФактаКол_"+КодИсточника,СчетИсточник.КоэффициентДляФактаКол);
				
			КонецЕсли;
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|0 КАК ВалютнаяСуммаНачальныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаНачальныйОстатокКтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокКтИтог,
			|0 КАК СуммаУпрНачальныйОстатокДтИтог,
			|0 КАК СуммаУпрНачальныйОстатокКтИтог,
			|0 КАК СуммаУпрКонечныйОстатокДтИтог,
			|0 КАК СуммаУпрКонечныйОстатокКтИтог,
			|0 КАК КоличествоНачальныйОстатокДтИтог,
			|0 КАК КоличествоНачальныйОстатокКтИтог,
			|0 КАК КоличествоКонечныйОстатокДтИтог,
			|0 КАК КоличествоКонечныйОстатокКтИтог";
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|ИЗ
			|("+РабочийТекстПериодНач+") КАК "+КодИсточника+"Нач"+ТекстСоединения;
			
			//Остатки на конец периода
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ
			|&Счет"+КодИсточника+" КАК Счет,
			|&ДатаОстатка"+КодИсточника+"_"+НомерПериода+" КАК Период,";
			
			СтруктураПараметров.Вставить("Счет"+КодИсточника,СчетИсточник.Счет);
			
			Если СтруктураИзмерений.Свойство("ЦФО") Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.ЦФО+" КАК ЦФО,";
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ПустойЦФО КАК ЦФО,";	
			КонецЕсли;
			
			Если СтруктураИзмерений.Свойство("Проект") Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.Проект+" КАК Проект,";
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ПустойПроект КАК Проект,";	
			КонецЕсли;
			
			Если СтруктураИзмерений.Свойство("Контрагент") Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.Контрагент+" КАК Контрагент,";
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ПустойКонтрагент КАК Контрагент,";	
			КонецЕсли;
			
			Если СтруктураИзмерений.Свойство("Номенклатура") Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.Номенклатура+" КАК Номенклатура,";
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ПустойНоменклатура КАК Номенклатура,";	
			КонецЕсли;
			
			Если СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|"+СтруктураИзмерений.Валюта+" КАК Валюта,";
				
				ТекстСуммаУпр="
				|ВЫБОР
				|		КОГДА КурсыИсточника.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
				|			"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+"*КурсыИсточника.Курс * КурсыУпрУчета.Кратность 
				|			/ (КурсыУпрУчета.Курс * КурсыИсточника.Кратность)
				|		ИНАЧЕ
				|			0
				|		КОНЕЦ  КАК СуммаУпрОстаток";
				
				ТекстСоединения="
				|	ЛЕВОЕ СОЕДИНЕНИЕ 
				|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Кон, Валюта=&ВалютаУпрУчета) КАК КурсыУпрУчета
				|	ПО ИСТИНА
				|	ЛЕВОЕ СОЕДИНЕНИЕ
				|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Кон) КАК КурсыИсточника
				|	ПО "+КодИсточника+"Кон."+СтруктураИзмерений.Валюта+"=КурсыИсточника.Валюта";
				
				
			ИначеЕсли СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаРегламентированногоУчета Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ВалютаРеглУчета КАК Валюта,";
				
				ТекстСуммаУпр="
				|ВЫБОР
				|		КОГДА КурсыУпрУчета.Курс <>0 ТОГДА
				|			"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+"*КурсыУпрУчета.Кратность 
				|			/ (КурсыУпрУчета.Курс)
				|		ИНАЧЕ
				|			0
				|		КОНЕЦ  КАК СуммаУпрОстаток";
				
				ТекстСоединения="
				|	ЛЕВОЕ СОЕДИНЕНИЕ 
				|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+НомерПериода+"_"+"Кон, Валюта=&ВалютаУпрУчета) КАК КурсыУпрУчета
				|	ПО ИСТИНА";
				
			Иначе
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|&ВалютаУпрУчета КАК Валюта,";
				
				ТекстСуммаУпр=СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК СуммаУпрОстаток";
				ТекстСоединения="";
				
			КонецЕсли;
			
			Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаСум) Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|0 КАК ВалютнаяСуммаНачальныйОстатокДт,
				|0 КАК ВалютнаяСуммаНачальныйОстатокКт,
				|0 КАК ВалютнаяСуммаКонечныйОстатокДт,
				|0 КАК ВалютнаяСуммаКонечныйОстатокКт,";
				
			Иначе
				
				Если СчетИсточник.ВидСчета=ВидСчета.Пассивный Тогда	
					
					ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
					|0 КАК ВалютнаяСуммаНачальныйОстатокДт,
					|0 КАК ВалютнаяСуммаНачальныйОстатокКт,
					|0 КАК ВалютнаяСуммаКонечныйОстатокДт,
					|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК ВалютнаяСуммаКонечныйОстатокКт,
					|0 КАК СуммаУпрНачальныйОстатокДт,
					|0 КАК СуммаУпрНачальныйОстатокКт,
					|0 КАК СуммаУпрКонечныйОстатокДт,
					|"+СтрЗаменить(ТекстСуммаУпр,"СуммаУпрОстаток","СуммаУпрКонечныйОстатокКт")+",";
					
				Иначе
					
					ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
					|0 КАК ВалютнаяСуммаНачальныйОстатокДт,
					|0 КАК ВалютнаяСуммаНачальныйОстатокКт,
					|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК ВалютнаяСуммаКонечныйОстатокДт,
					|0 КАК ВалютнаяСуммаКонечныйОстатокКт,
					|0 КАК СуммаУпрНачальныйОстатокДт,
					|0 КАК СуммаУпрНачальныйОстатокКт,
					|"+СтрЗаменить(ТекстСуммаУпр,"СуммаУпрОстаток","СуммаУпрКонечныйОстатокДт")+",
					|0 КАК СуммаУпрКонечныйОстатокКт,";
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаКол) Тогда
				ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
				|0 КАК КоличествоНачальныйОстатокДт,
				|0 КАК КоличествоНачальныйОстатокКт,
				|0 КАК КоличествоКонечныйОстатокДт,
				|0 КАК КоличествоКонечныйОстатокКт,";
			Иначе
				Если СчетИсточник.ВидСчета=ВидСчета.Пассивный Тогда	
					
					ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
					|0 КАК КоличествоНачальныйОстатокДт,
					|0 КАК КоличествоНачальныйОстатокКт,
					|0 КАК КоличествоКонечныйОстатокДт,
					|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК КоличествоНачальныйОстатокКт,";
					
				Иначе
					
					ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
					|0 КАК КоличествоНачальныйОстатокДт,
					|0 КАК КоличествоНачальныйОстатокКт,
					|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК КоличествоКонечныйОстатокДт,
					|0 КАК КоличествоКонечныйОстатокКт,";
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|0 КАК ВалютнаяСуммаНачальныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаНачальныйОстатокКтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокКтИтог,
			|0 КАК СуммаУпрНачальныйОстатокДтИтог,
			|0 КАК СуммаУпрНачальныйОстатокКтИтог,
			|0 КАК СуммаУпрКонечныйОстатокДтИтог,
			|0 КАК СуммаУпрКонечныйОстатокКтИтог,
			|0 КАК КоличествоНачальныйОстатокДтИтог,
			|0 КАК КоличествоНачальныйОстатокКтИтог,
			|0 КАК КоличествоКонечныйОстатокДтИтог,
			|0 КАК КоличествоКонечныйОстатокКтИтог";
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|ИЗ
			|("+РабочийТекстПериодКон+") КАК "+КодИсточника+"Кон"+ТекстСоединения;
			
			ТекстОсновногоЗапроса=ТекстОсновногоЗапроса+ТекстЗапросаИсточник;
			
			ДатаОстатка=ОбщегоНазначения.ДобавитьИнтервал(ДатаОстатка,Периодичность,1);	
			НомерПериода=НомерПериода+1;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//Формируем запрос по итогам на границы периода
	
	РабочийТекстПериодНач=СтрЗаменить(РабочийТекст,"&ДатаИсточникаQQQ","&ДатаИсточника_"+"_"+КодИсточника+"_"+"Нач");
	РабочийТекстПериодКон=СтрЗаменить(РабочийТекст,"&ДатаИсточникаQQQ","&ДатаИсточника_"+"_"+КодИсточника+"_"+"Кон");
	
	СтруктураПараметров.Вставить("ДатаИсточника_"+"_"+КодИсточника+"_"+"Нач",НачалоДня(ДатаНач));
	СтруктураПараметров.Вставить("ДатаИсточника_"+"_"+КодИсточника+"_"+"Кон",КонецДня(ДатаКон));		
	
	ТекстЗапросаИсточник="
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|&Счет"+КодИсточника+" КАК Счет,
	|&ДатаОстатка"+КодИсточника+" КАК Период,";
	
	СтруктураПараметров.Вставить("Счет"+КодИсточника,СчетИсточник.Счет);
	СтруктураПараметров.Вставить("ДатаОстатка"+КодИсточника,НачалоДня(ДатаНач));
	
	Если СтруктураИзмерений.Свойство("ЦФО") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.ЦФО+" КАК ЦФО,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойЦФО КАК ЦФО,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Проект") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Проект+" КАК Проект,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойПроект КАК Проект,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Контрагент") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Контрагент+" КАК Контрагент,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойКонтрагент КАК Контрагент,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Номенклатура") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Номенклатура+" КАК Номенклатура,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойНоменклатура КАК Номенклатура,";	
	КонецЕсли;
	
	Если СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Валюта+" КАК Валюта,";
		
		ТекстСуммаУпр="
		|ВЫБОР
		|		КОГДА КурсыИсточника.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
		|			"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+"*КурсыИсточника.Курс * КурсыУпрУчета.Кратность 
		|			/ (КурсыУпрУчета.Курс * КурсыИсточника.Кратность)
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ  КАК СуммаУпрОстаток";
		
		ТекстСоединения="
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+"Нач, Валюта=&ВалютаУпрУчета) КАК КурсыУпрУчета
		|	ПО ИСТИНА
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+"Нач) КАК КурсыИсточника
		|	ПО "+КодИсточника+"Нач."+СтруктураИзмерений.Валюта+"=КурсыИсточника.Валюта";
		
		
	ИначеЕсли СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаРегламентированногоУчета Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ВалютаРеглУчета КАК Валюта,";
		
		ТекстСуммаУпр="
		|ВЫБОР
		|		КОГДА КурсыУпрУчета.Курс <>0 ТОГДА
		|			"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+"*КурсыУпрУчета.Кратность 
		|			/ (КурсыУпрУчета.Курс)
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ  КАК СуммаУпрОстаток";
		
		ТекстСоединения="
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+"Нач, Валюта=&ВалютаУпрУчета) КАК КурсыУпрУчета
		|	ПО ИСТИНА";
		
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ВалютаУпрУчета КАК Валюта,";
		
		ТекстСуммаУпр=СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК СуммаУпрОстаток";
		ТекстСоединения="";
		
	КонецЕсли;
	
	ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
	|0 КАК ВалютнаяСуммаНачальныйОстатокДт,
	|0 КАК ВалютнаяСуммаНачальныйОстатокКт,
	|0 КАК ВалютнаяСуммаКонечныйОстатокДт,
	|0 КАК ВалютнаяСуммаКонечныйОстатокКт,
	|0 КАК СуммаУпрНачальныйОстатокДт,
	|0 КАК СуммаУпрНачальныйОстатокКт,
	|0 КАК СуммаУпрКонечныйОстатокДт,
	|0 КАК СуммаУпрКонечныйОстатокКт,
	|0 КАК КоличествоНачальныйОстатокДт,
	|0 КАК КоличествоНачальныйОстатокКт,
	|0 КАК КоличествоКонечныйОстатокДт,
	|0 КАК КоличествоКонечныйОстатокКт,";
	
	Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаСум) Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|0 КАК ВалютнаяСуммаНачальныйОстатокДтИтог,
		|0 КАК ВалютнаяСуммаНачальныйОстатокКтИтог,
		|0 КАК ВалютнаяСуммаКонечныйОстатокДтИтог,
		|0 КАК ВалютнаяСуммаКонечныйОстатокКтИтог,";
		
	Иначе
		
		Если СчетИсточник.ВидСчета=ВидСчета.Пассивный Тогда	
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|0 КАК ВалютнаяСуммаНачальныйОстатокДтИтог,
			|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК ВалютнаяСуммаНачальныйОстатокКтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокКтИтог,
			|0 КАК СуммаУпрНачальныйОстатокДтИтог,
			|"+СтрЗаменить(ТекстСуммаУпр,"СуммаУпрОстаток","СуммаУпрНачальныйОстатокКтИтог")+",
			|0 КАК СуммаУпрКонечныйОстатокДтИтог,
			|0 КАК СуммаУпрКонечныйОстатокКтИтог,";
			
		Иначе
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК ВалютнаяСуммаНачальныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаНачальныйОстатокКтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокКтИтог,
			|"+СтрЗаменить(ТекстСуммаУпр,"СуммаУпрОстаток","СуммаУпрНачальныйОстатокДтИтог")+",
			|0 КАК СуммаУпрНачальныйОстатокКтИтог,
			|0 КАК СуммаУпрКонечныйОстатокДтИтог,
			|0 КАК СуммаУпрКонечныйОстатокКтИтог,";
			
		КонецЕсли;
		
		СтруктураПараметров.Вставить("КоэффициентДляФактаСум_"+КодИсточника,СчетИсточник.КоэффициентДляФактаСум);
		
	КонецЕсли;
	
	Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаКол) Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|0 КАК КоличествоНачальныйОстатокДтИтог,
		|0 КАК КоличествоНачальныйОстатокКтИтог,
		|0 КАК КоличествоКонечныйОстатокДтИтог,
		|0 КАК КоличествоКонечныйОстатокКтИтог";
	Иначе
		Если СчетИсточник.ВидСчета=ВидСчета.Пассивный Тогда	
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|0 КАК КоличествоНачальныйОстатокДтИтог,
			|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК КоличествоНачальныйОстатокКтИтог,
			|0 КАК КоличествоКонечныйОстатокДтИтог,
			|0 КАК КоличествоКонечныйОстатокКтИтог";
			
		Иначе
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК КоличествоНачальныйОстатокДтИтог,
			|0 КАК КоличествоНачальныйОстатокКтИтог,
			|0 КАК КоличествоКонечныйОстатокДтИтог,
			|0 КАК КоличествоКонечныйОстатокКтИтог";
			
		КонецЕсли;
		
		СтруктураПараметров.Вставить("КоэффициентДляФактаКол_"+КодИсточника,СчетИсточник.КоэффициентДляФактаКол);
		
	КонецЕсли;
	
	ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
	|ИЗ
	|("+РабочийТекстПериодНач+") КАК "+КодИсточника+"Нач"+ТекстСоединения;
	
	//Остатки на конец периода
	
	ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|&Счет"+КодИсточника+" КАК Счет,
	|&ДатаОстатка"+КодИсточника+" КАК Период,";
	
	СтруктураПараметров.Вставить("Счет"+КодИсточника,СчетИсточник.Счет);
	
	Если СтруктураИзмерений.Свойство("ЦФО") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.ЦФО+" КАК ЦФО,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойЦФО КАК ЦФО,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Проект") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Проект+" КАК Проект,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойПроект КАК Проект,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Контрагент") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Контрагент+" КАК Контрагент,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойКонтрагент КАК Контрагент,";	
	КонецЕсли;
	
	Если СтруктураИзмерений.Свойство("Номенклатура") Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Номенклатура+" КАК Номенклатура,";
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ПустойНоменклатура КАК Номенклатура,";	
	КонецЕсли;
	
	Если СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаИсточникаДанных Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|"+СтруктураИзмерений.Валюта+" КАК Валюта,";
		
		ТекстСуммаУпр="
		|ВЫБОР
		|		КОГДА КурсыИсточника.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
		|			"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+"*КурсыИсточника.Курс * КурсыУпрУчета.Кратность 
		|			/ (КурсыУпрУчета.Курс * КурсыИсточника.Кратность)
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ  КАК СуммаУпрОстаток";
		
		ТекстСоединения="
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+"Кон, Валюта=&ВалютаУпрУчета) КАК КурсыУпрУчета
		|	ПО ИСТИНА
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+"Кон) КАК КурсыИсточника
		|	ПО "+КодИсточника+"Кон."+СтруктураИзмерений.Валюта+"=КурсыИсточника.Валюта";
		
		
	ИначеЕсли СчетИсточник.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаРегламентированногоУчета Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ВалютаРеглУчета КАК Валюта,";
		
		ТекстСуммаУпр="
		|ВЫБОР
		|		КОГДА КурсыУпрУчета.Курс <>0 ТОГДА
		|			"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+"*КурсыУпрУчета.Кратность 
		|			/ (КурсыУпрУчета.Курс)
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ  КАК СуммаУпрОстаток";
		
		ТекстСоединения="
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаИсточника_"+"_"+КодИсточника+"_"+"Кон, Валюта=&ВалютаУпрУчета) КАК КурсыУпрУчета
		|	ПО ИСТИНА";
		
	Иначе
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|&ВалютаУпрУчета КАК Валюта,";
		
		ТекстСуммаУпр=СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК СуммаУпрОстаток";
		ТекстСоединения="";
		
	КонецЕсли;
	
	ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
	|0 КАК ВалютнаяСуммаНачальныйОстатокДт,
	|0 КАК ВалютнаяСуммаНачальныйОстатокКт,
	|0 КАК ВалютнаяСуммаКонечныйОстатокДт,
	|0 КАК ВалютнаяСуммаКонечныйОстатокКт,
	|0 КАК СуммаУпрНачальныйОстатокДт,
	|0 КАК СуммаУпрНачальныйОстатокКт,
	|0 КАК СуммаУпрКонечныйОстатокДт,
	|0 КАК СуммаУпрКонечныйОстатокКт,
	|0 КАК КоличествоНачальныйОстатокДт,
	|0 КАК КоличествоНачальныйОстатокКт,
	|0 КАК КоличествоКонечныйОстатокДт,
	|0 КАК КоличествоКонечныйОстатокКт,";
	
	Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаСум) Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|0 КАК ВалютнаяСуммаНачальныйОстатокДтИтог,
		|0 КАК ВалютнаяСуммаНачальныйОстатокКтИтог,
		|0 КАК ВалютнаяСуммаКонечныйОстатокДтИтог,
		|0 КАК ВалютнаяСуммаКонечныйОстатокКтИтог,";
		
	Иначе
		
		Если СчетИсточник.ВидСчета=ВидСчета.Пассивный Тогда	
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|0 КАК ВалютнаяСуммаНачальныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаНачальныйОстатокКтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокДтИтог,
			|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК ВалютнаяСуммаКонечныйОстатокКтИтог,
			|0 КАК СуммаУпрНачальныйОстатокДтИтог,
			|0 КАК СуммаУпрНачальныйОстатокКтИтог,
			|0 КАК СуммаУпрКонечныйОстатокДтИтог,
			|"+СтрЗаменить(ТекстСуммаУпр,"СуммаУпрОстаток","СуммаУпрКонечныйОстатокКтИтог")+",";
			
		Иначе
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|0 КАК ВалютнаяСуммаНачальныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаНачальныйОстатокКтИтог,
			|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаСум+"*&КоэффициентДляФактаСум_"+КодИсточника+" КАК ВалютнаяСуммаКонечныйОстатокДтИтог,
			|0 КАК ВалютнаяСуммаКонечныйОстатокКтИтог,
			|0 КАК СуммаУпрНачальныйОстатокДтИтог,
			|0 КАК СуммаУпрНачальныйОстатокКтИтог,
			|"+СтрЗаменить(ТекстСуммаУпр,"СуммаУпрОстаток","СуммаУпрКонечныйОстатокДтИтог")+",
			|0 КАК СуммаУпрКонечныйОстатокКтИтог,";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(СчетИсточник.ПоказательИсточникаДанныхДляФактаКол) Тогда
		ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
		|0 КАК КоличествоНачальныйОстатокДтИтог,
		|0 КАК КоличествоНачальныйОстатокКтИтог,
		|0 КАК КоличествоКонечныйОстатокДтИтог,
		|0 КАК КоличествоКонечныйОстатокКтИтог";
	Иначе
		Если СчетИсточник.ВидСчета=ВидСчета.Пассивный Тогда	
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|0 КАК КоличествоНачальныйОстатокДтИтог,
			|0 КАК КоличествоНачальныйОстатокКтИтог,
			|0 КАК КоличествоКонечныйОстатокДтИтог,
			|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК КоличествоНачальныйОстатокКтИтог,";
			
		Иначе
			
			ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
			|0 КАК КоличествоНачальныйОстатокДтИтог,
			|0 КАК КоличествоНачальныйОстатокКтИтог,
			|"+СчетИсточник.ПоказательИсточникаДанныхДляФактаКол+"*&КоэффициентДляФактаКол_"+КодИсточника+" КАК КоличествоКонечныйОстатокДтИтог,
			|0 КАК КоличествоКонечныйОстатокКтИтог";
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапросаИсточник=ТекстЗапросаИсточник+"
	|ИЗ
	|("+РабочийТекстПериодКон+") КАК "+КодИсточника+"Кон"+ТекстСоединения;
	
	ТекстОсновногоЗапроса=ТекстОсновногоЗапроса+ТекстЗапросаИсточник;
		
					
КонецПроцедуры // ДобавитьВТекстОсновногоЗапросаОстаткиПериод()

#КонецЕсли
