
// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//	ВыборкаПоШапкеДокумента						- выборка из результата запроса по шапке документа
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ДокументОбъект, ВыборкаПоШапкеДокумента, ВыборкаПоТЧ) Экспорт 
	
	Движения = ДокументОбъект.Движения;

	Если ЗначениеЗаполнено(ВыборкаПоТЧ.КодДоходаНДФЛ) Тогда
		
		Движение = Движения.НДФЛСведенияОДоходах.Добавить();
		
		// Свойства
		Движение.Период					= ВыборкаПоТЧ.МесяцНалоговогоПериода;
		
		// Измерения
		Движение.Организация			= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо				= ВыборкаПоШапкеДокумента.ФизЛицо;
		Движение.КодДохода				= ВыборкаПоТЧ.КодДоходаНДФЛ;
		Движение.ПериодРегистрации		= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Ресурсы
		Движение.СуммаДохода			= ВыборкаПоТЧ.Результат; 
		
		// Реквизиты
		Движение.ОбособленноеПодразделение = ВыборкаПоШапкеДокумента.ОбособленноеПодразделение;
		Движение.ИсчисленоИзЗарплаты	= Истина;
		Движение.ПодразделениеОрганизации = ВыборкаПоТЧ.ПодразделениеОрганизации; 
	КонецЕсли;
	
	Если Не ВыборкаПоТЧ.ЯвляетсяДоходомВНатуральнойФорме Тогда
		Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.Добавить();
		
		// Свойства
		Движение.Период					= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
		
		
		// Измерения
		Движение.Организация			= ВыборкаПоШапкеДокумента.ОбособленноеПодразделение;
		Движение.ФизЛицо				= ВыборкаПоШапкеДокумента.ФизЛицо;
		Движение.ПериодВзаиморасчетов 	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Ресурсы
		Движение.СуммаВзаиморасчетов	= ВыборкаПоТЧ.Результат;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления()

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Формирует запрос по шапке документа для целей выода документа на печать
//
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапкеДляПечати(ДокументОбъект)
		
	ДатаНачалаСобытия = ДокументОбъект.ДатаНачалаСобытия;
		
	Запрос = Новый Запрос;
		
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ОбщегоНазначенияЗК.ГоловнаяОрганизация(ДокументОбъект.Организация));
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",		ДатаНачалаСобытия);
	Запрос.УстановитьПараметр("Сотрудник",				ДокументОбъект.Сотрудник);
	Запрос.УстановитьПараметр("Физлицо",				ДокументОбъект.Сотрудник.Физлицо);
	Запрос.УстановитьПараметр("МесяцевРасчетаПоЗакону",	?(ДатаНачалаСобытия < ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийТрудовогоКодекса2006(),3,12));
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Отпуск.Дата КАК ДатаДокумента,
	|	Отпуск.Номер КАК НомерДокумента,
	|	Отпуск.Сотрудник КАК Сотрудник,
	|	Отпуск.ДатаНачалаОсновногоОтпуска,
	|	Отпуск.ДатаОкончанияОсновногоОтпуска,
	|	Отпуск.РабочийГодС,
	|	Отпуск.РабочийГодПо,
	|	Отпуск.ДатаНачалаДополнительногоОтпуска,
	|	Отпуск.ДатаОкончанияДополнительногоОтпуска,
	|	Отпуск.ПорядокРасчетаОсновногоОтпуска,
	|	ВЫБОР
	|		КОГДА Отпуск.ДополнительныйОтпуск
	|			ТОГДА Отпуск.ВидРасчетаДополнительногоОтпуска.Наименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВидДополнительногоОтпуска,
	|	Отпуск.ИспользоватьСреднеЧасовойЗаработок КАК ИспользоватьСреднеЧасовойЗаработок,
	|	Отпуск.Организация.КодПоОКПО КАК КодПоОКПО,
	|	Отпуск.Организация.НаименованиеПолное КАК НазваниеОрганизации,
	|	Отпуск.Сотрудник.Код КАК ТабельныйНомер,
	|	Отпуск.Организация.Префикс,
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, Отпуск.Сотрудник.Наименование) КАК ФИО,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.Наименование
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность.Наименование
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА СтатусФизЛица.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЯвляетсяНалоговымРезидентомРФ,
	|	Отпуск.ПериодРасчетаСреднегоЗаработкаНачало,
	|	Отпуск.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	ВЫБОР
	|		КОГДА Отпуск.ОсновнойОтпуск
	|			ТОГДА Отпуск.ДатаНачалаОсновногоОтпуска
	|		КОГДА Отпуск.ДополнительныйОтпуск
	|			ТОГДА Отпуск.ДатаНачалаДополнительногоОтпуска
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаНачалаОтпуска,
	|	ВЫБОР
	|		КОГДА (НЕ Отпуск.ОсновнойОтпуск)
	|				И Отпуск.ДополнительныйОтпуск
	|			ТОГДА Отпуск.ДатаОкончанияДополнительногоОтпуска
	|		КОГДА Отпуск.ОсновнойОтпуск
	|				И Отпуск.ДополнительныйОтпуск
	|			ТОГДА ВЫБОР
	|					КОГДА Отпуск.ДатаОкончанияОсновногоОтпуска < Отпуск.ДатаОкончанияДополнительногоОтпуска
	|						ТОГДА Отпуск.ДатаОкончанияДополнительногоОтпуска
	|					ИНАЧЕ Отпуск.ДатаОкончанияОсновногоОтпуска
	|				КОНЕЦ
	|		КОГДА Отпуск.ОсновнойОтпуск
	|			ТОГДА Отпуск.ДатаОкончанияОсновногоОтпуска
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаОкончанияОтпуска
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК Отпуск
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК СтатусФизЛица
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Отпуск.Ссылка = &ДокументСсылка";
		
	Запрос.Текст = ТекстЗапроса;
	Возврат Запрос.Выполнить();
		
КонецФункции // СформироватьЗапросПоШапкеДляПечати()

// Функция формирует табличный документ с печатной формой "Т-60",
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьТ60(ДокументОбъект) Экспорт
		
	// тексты запросов 
		
	РасчетСреднегоЗаработкаТекст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА 1
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК ПорядокЗаписей,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|					ИЛИ РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|				ТОГДА РасчетСреднегоЗаработка.ОтработаноДней
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВсегоДнейРасчетногоПериода,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|					ИЛИ РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|				ТОГДА РасчетСреднегоЗаработка.ОтработаноЧасов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВсегоЧасовРасчетногоПериода,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|				ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|						КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|							ТОГДА 1
	|						ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|					КОНЕЦ
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|				ТОГДА РасчетСреднегоЗаработка.Результат
	|			КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
	|						ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|								КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|									ТОГДА 1
	|								ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|							КОНЕЦ
	|					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
	|						ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|								КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|									ТОГДА 1
	|								ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|							КОНЕЦ * ВЫБОР
	|								КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|									ТОГДА 0
	|								ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|							КОНЕЦ
	|					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиямНеИндексируемые)
	|						ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	|								КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|									ТОГДА 0
	|								ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|							КОНЕЦ
	|					ИНАЧЕ РасчетСреднегоЗаработка.Результат
	|				КОНЕЦ * ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев > РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
	|						ТОГДА РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / РасчетСреднегоЗаработка.ЧислоМесяцев
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2))) КАК ВсегоУчтено,
	|	НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодНачало, МЕСЯЦ) КАК МесяцРасчетногоПериода,
	|	НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодКонец, МЕСЯЦ) КАК БазовыйПериодКонец,
	|	РасчетСреднегоЗаработка.ВидРасчета КАК ВидРасчета,
	|	СУММА(РасчетСреднегоЗаработка.Результат) КАК Результат,
	|	РасчетСреднегоЗаработка.ЧислоМесяцев КАК МесяцевПремии,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&Индексируемые)
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|						ТОГДА 1
	|					ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоэффициентИндексации,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ФиксированныеПремии)
	|			ТОГДА РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоляВремени,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|				ИЛИ РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА 0
	|		ИНАЧЕ РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
	|	КОНЕЦ КАК ПериодРасчетаСреднегоЗаработка
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|ГДЕ
	|	РасчетСреднегоЗаработка.Регистратор = &Регистратор
	|	И РасчетСреднегоЗаработка.СпособРасчета = &СпособРасчета
	|	И (РасчетСреднегоЗаработка.Результат <> 0
	|			ИЛИ РасчетСреднегоЗаработка.ОтработаноДней <> 0
	|			ИЛИ РасчетСреднегоЗаработка.ОтработаноЧасов <> 0)
	|	И РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода = &ДатаНачалаРасчетногоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодНачало, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодКонец, МЕСЯЦ),
	|	РасчетСреднегоЗаработка.ЧислоМесяцев,
	|	РасчетСреднегоЗаработка.ВидРасчета,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ФиксированныеПремии)
	|			ТОГДА РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|				ИЛИ РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработокНеиндексируемый)
	|			ТОГДА 0
	|		ИНАЧЕ РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&Индексируемые)
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	|						ТОГДА 1
	|					ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	МесяцРасчетногоПериода,
	|	ПорядокЗаписей,
	|	ВидРасчета,
	|	МесяцевПремии,
	|	КоэффициентИндексации
	|ИТОГИ
	|	СУММА(ВсегоДнейРасчетногоПериода),
	|	СУММА(ВсегоЧасовРасчетногоПериода),
	|	СУММА(ВсегоУчтено)
	|ПО
	|	ОБЩИЕ";
	
	ДнейКОплатеТекст = 
	///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
	// Измайлова Полина 05.07.2011 15:37 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ПериодДействияНачало,
	|	Начисления.ПериодДействияКонец,
	|	Начисления.ВидРасчета
	|ПОМЕСТИТЬ ВТОсновныеНачисления
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(Регистратор = &Регистратор) КАК Начисления                                          
	|ГДЕ
	|	(НЕ Начисления.Сторно)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследнееКадрИзменение.ВидРасчета,
	|	ПоследнееКадрИзменение.ПериодДействияНачало,
	|	ПоследнееКадрИзменение.ПериодДействияКонец,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= ПоследнееКадрИзменение.ПериодДействияНачало
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.AVT_ПроизводственныйКалендарь
	|		ИНАЧЕ РаботникиОрганизаций.ГрафикРаботы.AVT_ПроизводственныйКалендарь
	|	КОНЕЦ КАК Календарь
	|ПОМЕСТИТЬ ВТОснНачисленияСКалендарем
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|		ВТОсновныеНачисления.Организация КАК Организация,
	|		ВТОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		ВТОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|		ВТОсновныеНачисления.ПериодДействияКонец
	|	ИЗ
	|		ВТОсновныеНачисления КАК ВТОсновныеНачисления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПО ВТОсновныеНачисления.Сотрудник = РаботникиОрганизаций.Сотрудник
	|				И ВТОсновныеНачисления.Организация = РаботникиОрганизаций.Организация
	|				И ВТОсновныеНачисления.ПериодДействияНачало >= РаботникиОрганизаций.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТОсновныеНачисления.ВидРасчета,
	|		ВТОсновныеНачисления.Организация,
	|		ВТОсновныеНачисления.Сотрудник,
	|		ВТОсновныеНачисления.ПериодДействияНачало,
	|		ВТОсновныеНачисления.ПериодДействияКонец) КАК ПоследнееКадрИзменение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ПоследнееКадрИзменение.Сотрудник = РаботникиОрганизаций.Сотрудник
	|			И ПоследнееКадрИзменение.Организация = РаботникиОрганизаций.Организация
	|			И ПоследнееКадрИзменение.Период = РаботникиОрганизаций.Период
	|;
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}                                          
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, МЕСЯЦ) = &ПериодРегистрации
	|			ТОГДА ""Текущий""
	|		ИНАЧЕ ""Будущий""
	|	КОНЕЦ КАК ВидМесяца,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпШестидневка), ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни))
	|				ТОГДА ПроизводственныйКалендарь.КалендарныеДни
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДнейКОплатеОсновногоОтпуска,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпШестидневка), ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни))
	|				ТОГДА 0
	|			КОГДА Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпуск)
	|				ТОГДА ПроизводственныйКалендарь.КалендарныеДни
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДнейКОплатеДополнительногоОтпуска,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпШестидневка), ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни))
	|				ТОГДА ПроизводственныйКалендарь.КалендарныеДни
	|			КОГДА Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпуск)
	|				ТОГДА ПроизводственныйКалендарь.КалендарныеДни
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ВсегоДнейОтпуска
	|ИЗ
	// ЗАКОММЕНТИРОВАНО: Измайлова Полина 05.07.2011 15:43  
	//|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(Регистратор = &Регистратор) КАК Начисления
	///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
	// Измайлова Полина 05.07.2011 15:43 
	|	ВТОснНачисленияСКалендарем КАК Начисления
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}                                          
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	|		ПО (ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ Начисления.ПериодДействияНачало И Начисления.ПериодДействияКонец)
	///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
	// Измайлова Полина 27.06.2011 16:40 
	|			И Начисления.Календарь = ПроизводственныйКалендарь.AVT_ПроизводственныйКалендарь 
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
	// ЗАКОММЕНТИРОВАНО: Измайлова Полина 05.07.2011 15:44  
	//|ГДЕ
	//|	(НЕ Начисления.Сторно)
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, МЕСЯЦ) = &ПериодРегистрации
	|			ТОГДА ""Текущий""
	|		ИНАЧЕ ""Будущий""
	|	КОНЕЦ";
		
	НачисленияТекст = 
	"ВЫБРАТЬ
	|	СУММА(Начисления.НачисленоОтпускных) КАК НачисленоОтпускных,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, МЕСЯЦ) = &ПериодРегистрации
	|			ТОГДА ""Текущий""
	|		ИНАЧЕ ""Будущий""
	|	КОНЕЦ КАК ВидМесяца
	|ИЗ
	|	(ВЫБРАТЬ
	|		Начисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|		Начисления.Результат КАК НачисленоОтпускных
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ГДЕ
	|		Начисления.Регистратор = &Регистратор
	|		И НЕ Начисления.Сторно
	|		И Начисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
	|		ДополнительныеНачисленияРаботниковОрганизаций.Результат
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
	|	ГДЕ
	|		ДополнительныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор
	|		И ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке))
	|		И НЕ ДополнительныеНачисленияРаботниковОрганизаций.Сторно) КАК Начисления
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, МЕСЯЦ) = &ПериодРегистрации
	|			ТОГДА ""Текущий""
	|		ИНАЧЕ ""Будущий""
	|	КОНЕЦ";
		
	ДопНачисленияТекст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Начисления.НачисленоОтпускных), 0) КАК НачисленоДругиеНачисленияЗаТекущийМесяц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Начисления.Результат КАК НачисленоОтпускных
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ГДЕ
	|		Начисления.Регистратор = &Регистратор
	|		И НЕ Начисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДополнительныеНачисленияРаботниковОрганизаций.Результат
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
	|	ГДЕ
	|		ДополнительныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор
	|		И НЕ ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке))) КАК Начисления";
		
	ПлановыеУдержанияРаботниковОрганизацийТекст = 
	"ВЫБРАТЬ
	|	Начисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(Начисления.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор = &Регистратор
	|	И (НЕ Начисления.Сторно)
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ВидРасчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	СУММА(ДополнительныеНачисленияРаботниковОрганизаций.Результат)
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ДополнительныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор
	|	И (НЕ ДополнительныеНачисленияРаботниковОрганизаций.Сторно)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержанияРаботниковОрганизаций.ДокументОснование КАК ДокументОснование,
	|	СУММА(УдержанияРаботниковОрганизаций.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТУплаченныеАлименты
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	|ГДЕ
	|	УдержанияРаботниковОрганизаций.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|	И УдержанияРаботниковОрганизаций.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
	|	И УдержанияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела)
	|	И УдержанияРаботниковОрганизаций.ФизЛицо = &ФизЛицо
	|	И УдержанияРаботниковОрганизаций.Организация = &ГоловнаяОрганизация
	|	И УдержанияРаботниковОрганизаций.ПериодРегистрации < &ПериодРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	УдержанияРаботниковОрганизаций.ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УдержанияОрганизацийБазовыеВидыРасчета.Ссылка КАК ВидРасчета,
	|	Начисления.ВидРасчета КАК БазовыйВидРасчета
	|ПОМЕСТИТЬ ВТВидыУдержаний
	|ИЗ
	|	ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК УдержанияОрганизацийБазовыеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО УдержанияОрганизацийБазовыеВидыРасчета.ВидРасчета = Начисления.ВидРасчета
	|ГДЕ
	|	Начисления.ВидРасчета ЕСТЬ НЕ NULL 
	|	И УдержанияОрганизацийБазовыеВидыРасчета.Ссылка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УдержанияОрганизаций.Ссылка,
	|	Начисления.ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.УдержанияОрганизаций КАК УдержанияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО (ИСТИНА)
	|ГДЕ
	|	УдержанияОрганизаций.Ссылка.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроцентомОтОблагаемыхЕСННачислений)
	|	И Начисления.ВидРасчета.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Удержания.Показатель1) КАК Размер,
	|	Удержания.ВидРасчета КАК ВидРасчета,
	|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	Удержания.ВидРасчета.Наименование КАК Имя
	|ПОМЕСТИТЬ ВТПлановыеУдержания
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&ПериодРегистрации,
	|			ФизЛицо = &ФизЛицо
	|				И ВидРасчета В
	|					(ВЫБРАТЬ
	|						ВидыУдержаний.ВидРасчета
	|					ИЗ
	|						ВТВидыУдержаний КАК ВидыУдержаний)
	|				И Организация = &ГоловнаяОрганизация) КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУплаченныеАлименты КАК УплаченныеАлименты
	|		ПО Удержания.ДокументОснование = УплаченныеАлименты.ДокументОснование
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Удержания.ПериодЗавершения <= &ПериодРегистрации
	|					И Удержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА Удержания.ДействиеЗавершения
	|			ИНАЧЕ Удержания.Действие
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	И ВЫБОР
	|			КОГДА Удержания.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела)
	|				ТОГДА ЕСТЬNULL(УплаченныеАлименты.Результат, 0) < Удержания.ДокументОснование.Предел
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.ВидРасчета,
	|	Удержания.ВидРасчета.СпособРасчета,
	|	Удержания.ВидРасчета.Наименование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Удержания.Размер КАК Размер,
	|	Удержания.СпособРасчета КАК СпособРасчета,
	|	Удержания.Имя КАК Имя,
	|	СУММА(Начисления.Результат) КАК РасчетнаяБаза
	|ИЗ
	|	ВТПлановыеУдержания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыУдержаний КАК ВидыУдержаний
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|			ПО ВидыУдержаний.БазовыйВидРасчета = Начисления.ВидРасчета
	|		ПО Удержания.ВидРасчета = ВидыУдержаний.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.Размер,
	|	Удержания.СпособРасчета,
	|	Удержания.Имя";
		
	РассчитаноНДФЛТекст = 
	"ВЫБРАТЬ
	|	СУММА(НачислениеОтпускаРаботникамОрганизацийНДФЛ.Налог - НачислениеОтпускаРаботникамОрганизацийНДФЛ.ЗачтеноАвансовыхПлатежей) КАК Налог
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций.НДФЛ КАК НачислениеОтпускаРаботникамОрганизацийНДФЛ
	|ГДЕ
	|	НачислениеОтпускаРаботникамОрганизацийНДФЛ.Ссылка В(&Регистраторы)";
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеОтпускаРаботникамОрганизаций_Т60";
		
	Макет = ДокументОбъект.ПолучитьМакет("Т_60");
	СекцияРасчетСреднего = Макет.ПолучитьОбласть("РасчетСреднего");
	СекцияДополнительнаяСтрокаЗаработка = Макет.ПолучитьОбласть("ДополнительнаяСтрокаЗаработка");
	СекцияЛицеваяСторона = Макет.ПолучитьОбласть("ЛицеваяСторона");
	СекцияРасчетСреднегоИтого = Макет.ПолучитьОбласть("РасчетСреднегоИтого");
	СекцияПодвал = Макет.ПолучитьОбласть("Подвал");
		
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДляПечати(ДокументОбъект).Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
		
	// Определение даты начала и конца оплачиваемого события 
	ДатаНачалаСобытия = ДокументОбъект.ДатаНачалаСобытия;

	Если ДокументОбъект.ОсновнойОтпуск Или ДокументОбъект.ДополнительныйОтпуск Тогда
		ДатаОкончанияСобытия = Макс(ДокументОбъект.ДатаОкончанияОсновногоОтпуска, ДокументОбъект.ДатаОкончанияДополнительногоОтпуска);
		Если ДокументОбъект.ОсновнойОтпуск Тогда
			ИспользуемыйСпособРасчетаОтпуска = ?(ДокументОбъект.ПорядокРасчетаОсновногоОтпуска = Перечисления.ПорядокРасчетаОтпуска.ПоКалендарнымДням,Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням,Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
			ДатаНачала = ДокументОбъект.ДатаНачалаОсновногоОтпуска;
		Иначе
			ИспользуемыйСпособРасчетаОтпуска = ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ДокументОбъект.ВидРасчетаДополнительногоОтпуска,"СпособРасчета");
			ДатаНачала = ДокументОбъект.ДатаНачалаДополнительногоОтпуска;
		КонецЕсли;
	Иначе	
		ДатаОкончанияСобытия = ДатаНачалаСобытия;
		ДатаНачала = ДатаНачалаСобытия;
		ИспользуемыйСпособРасчетаОтпуска = ?(ДокументОбъект.ПорядокРасчетаКомпенсацииОтпуска = Перечисления.ПорядокРасчетаОтпуска.ПоКалендарнымДням,Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням,Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	КонецЕсли;
		
	Если Не ПроцедурыУправленияПерсоналомПереопределяемый.РегламентированныйКалендарьЗаполнен(НачалоМесяца(ДатаНачалаСобытия),КонецМесяца(ДатаОкончанияСобытия),Истина) Тогда
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	// Поскольку в документе может выполняться начисление как основного, так и дополнительного отпуска, 
	// а методика расчета у них может отличаться, то при печати будем использовать порядок расчета отпуска, 
	// указанный в первой строке начислений
		
	Запрос = Новый Запрос;
		
	ФиксированныеПремии = Новый Массив(4);
	ФиксированныеПремии[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
	ФиксированныеПремии[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;
	ФиксированныеПремии[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
	ФиксированныеПремии[3] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;
		
	ПоПремиям = Новый Массив(3);
	ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
	ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;
	ПоПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;
	
	ПоФиксПремиямНеИндексируемые = Новый Массив(3);
	ПоФиксПремиямНеИндексируемые[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
	ПоФиксПремиямНеИндексируемые[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;
	ПоФиксПремиямНеИндексируемые[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;
	
	ОсновнойЗаработок = Новый Массив(2);
	ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;
	
	Индексируемые = Новый Массив(7);
	Индексируемые[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;
	Индексируемые[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;
	Индексируемые[2] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;
	Индексируемые[3] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
	Индексируемые[4] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
	Индексируемые[5] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	Индексируемые[6] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии;
	
	ПериодРегистрации = ДокументОбъект.ПериодРегистрации;
	Если ЗначениеЗаполнено(ДокументОбъект.ПерерассчитываемыйДокумент) Тогда
		
		ТаблицаСторнируемыхДокументов = Новый ТаблицаЗначений;
		ТаблицаСторнируемыхДокументов.Колонки.Добавить("СторнируемыйДокумент", Новый ОписаниеТипов("ДокументСсылка.НачислениеОтпускаРаботникамОрганизаций"));
		ТаблицаПромежуточныхИсправлений = ТаблицаСторнируемыхДокументов.Скопировать();
		ТаблицаПромежуточныхИсправлений.Колонки.Добавить("ПромежуточноеИсправление", ТаблицаСторнируемыхДокументов.Колонки.СторнируемыйДокумент.ТипЗначения);
		ТаблицаСторнируемыхДокументов.Добавить().СторнируемыйДокумент = ДокументОбъект.Ссылка;
		
		ПроведениеРасчетов.УточнитьСторнируемыеДокументы(ТаблицаСторнируемыхДокументов, ТаблицаПромежуточныхИсправлений);
		
		МассивРегистраторов = Новый Массив();
		Для каждого СтрокаТЗ Из ТаблицаПромежуточныхИсправлений Цикл
			МассивРегистраторов.Добавить(СтрокаТЗ.СторнируемыйДокумент);
			МассивРегистраторов.Добавить(СтрокаТЗ.ПромежуточноеИсправление);
		КонецЦикла;
		МассивРегистраторов.Добавить(ДокументОбъект.Ссылка);
		Запрос.УстановитьПараметр("Регистраторы", МассивРегистраторов);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеОтпускаРаботникамОрганизаций.ПериодРегистрации
		|ИЗ
		|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК НачислениеОтпускаРаботникамОрганизаций
		|ГДЕ
		|	НачислениеОтпускаРаботникамОрганизаций.Ссылка В(&Регистраторы)
		|	И НачислениеОтпускаРаботникамОрганизаций.ПерерассчитываемыйДокумент = ЗНАЧЕНИЕ(Документ.НачислениеОтпускаРаботникамОрганизаций.ПустаяСсылка)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ПериодРегистрации = Выборка.ПериодРегистрации
		КонецЕсли;
		
	Иначе
		Запрос.УстановитьПараметр("Регистраторы", ДокументОбъект.Ссылка);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Регистратор",			ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("СпособРасчета",			ИспользуемыйСпособРасчетаОтпуска);
	Запрос.УстановитьПараметр("ДатаНачалаРасчетногоПериода",ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало);
	Запрос.УстановитьПараметр("Индексируемые",			Индексируемые);
	Запрос.УстановитьПараметр("ОсновнойЗаработок",		ОсновнойЗаработок);
	Запрос.УстановитьПараметр("ОсновнойЗаработокНеиндексируемый", ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);
	Запрос.УстановитьПараметр("ПоФиксПремиям",			ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям);
	Запрос.УстановитьПараметр("ПоПремиям",				ПоПремиям);
	Запрос.УстановитьПараметр("ФиксированныеПремии",	ФиксированныеПремии);
	Запрос.УстановитьПараметр("ПоФиксПремиямНеИндексируемые", ПоФиксПремиямНеИндексируемые);
	Запрос.УстановитьПараметр("РасчетПоШестидневке",	Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",		ДатаНачалаСобытия);
	Запрос.УстановитьПараметр("ПериодРегистрации",		ПериодРегистрации);
	Запрос.УстановитьПараметр("ФизЛицо",				ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ДокументОбъект.Сотрудник,"ФизЛицо"));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ОбщегоНазначенияЗК.ГоловнаяОрганизация(ДокументОбъект.Организация));
		
	ДнейКОплатеОсновногоОтпускаЗаТекущийМесяц = 0;
	ДнейКОплатеДополнительногоОтпускаЗаТекущийМесяц = 0;
	ДнейКОплатеОсновногоОтпускаЗаБудущиеМесяцы = 0;
	ДнейКОплатеДополнительногоОтпускаЗаБудущиеМесяцы = 0;
		
	ВсегоДнейОтпуска = 0 ;
		
	НачисленоОтпускныхЗаТекущийМесяц = 0;
	НачисленоОтпускныхЗаБудущиеМесяцы = 0;
		
	// Выборка дней, фактически оплаченных за первый месяц отпуска и последующие месяцы
		
	Запрос.Текст = ДнейКОплатеТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ВидМесяца = "Текущий" Тогда
			ДнейКОплатеОсновногоОтпускаЗаТекущийМесяц = ДнейКОплатеОсновногоОтпускаЗаТекущийМесяц + Выборка.ДнейКОплатеОсновногоОтпуска;
			ДнейКОплатеДополнительногоОтпускаЗаТекущийМесяц = ДнейКОплатеДополнительногоОтпускаЗаТекущийМесяц + Выборка.ДнейКОплатеДополнительногоОтпуска;
		Иначе
			ДнейКОплатеОсновногоОтпускаЗаБудущиеМесяцы = ДнейКОплатеОсновногоОтпускаЗаБудущиеМесяцы + Выборка.ДнейКОплатеОсновногоОтпуска;
			ДнейКОплатеДополнительногоОтпускаЗаБудущиеМесяцы = ДнейКОплатеДополнительногоОтпускаЗаБудущиеМесяцы + Выборка.ДнейКОплатеДополнительногоОтпуска;
		КонецЕсли; 
		ВсегоДнейОтпуска = ВсегоДнейОтпуска + Выборка.ВсегоДнейОтпуска
	КонецЦикла; 
	СекцияЛицеваяСторона.Параметры.ВсегоДнейОтпуска = ВсегоДнейОтпуска;
		
	// ВЫВОД ДАННЫХ В ОТЧЕТ
		
	// вывод лицевой стороны
	СекцияЛицеваяСторона.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
		
	СекцияЛицеваяСторона.Параметры.ДнейКОплатеОсновногоОтпуска = ДнейКОплатеОсновногоОтпускаЗаТекущийМесяц + ДнейКОплатеОсновногоОтпускаЗаБудущиеМесяцы;
	СекцияЛицеваяСторона.Параметры.ДнейКОплатеДополнительногоОтпуска = ДнейКОплатеДополнительногоОтпускаЗаТекущийМесяц + ДнейКОплатеДополнительногоОтпускаЗаБудущиеМесяцы;
		
	СекцияЛицеваяСторона.Параметры.ДатаНачалаОсновногоОтпускаПрописью = Формат(ВыборкаПоШапкеДокумента.ДатаНачалаОсновногоОтпуска,"ДЛФ=DD; ДП='                                 '");
	СекцияЛицеваяСторона.Параметры.ДатаОкончанияОсновногоОтпускаПрописью = Формат(ВыборкаПоШапкеДокумента.ДатаОкончанияОсновногоОтпуска,"ДЛФ=DD; ДП='                                 '");
		
	СекцияЛицеваяСторона.Параметры.ДатаНачалаОтпускаПрописью = Формат(ВыборкаПоШапкеДокумента.ДатаНачалаОтпуска,"ДЛФ=DD; ДП='                                 '");
	СекцияЛицеваяСторона.Параметры.ДатаОкончанияОтпускаПрописью = Формат(ВыборкаПоШапкеДокумента.ДатаОкончанияОтпуска,"ДЛФ=DD; ДП='                                 '");
	
	СекцияЛицеваяСторона.Параметры.ТабельныйНомер = ВыборкаПоШапкеДокумента.ТабельныйНомер;
	
	ТабДокумент.Вывести(СекцияЛицеваяСторона);
		
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	// Вывод сведений о порядке расчета среднего заработка
		
	// по окончательным данным проведенного документа
	// собираем итоговые данные и рассчитываем средний заработок
		
	Запрос.Текст = РасчетСреднегоЗаработкаТекст;
	ВыборкаСреднегоЗаработка = Запрос.Выполнить().Выбрать();

	ОсновнойЗаработок = Новый Массив(3);
	ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;
	ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые;

	НомерСтроки = 0;
	Пока ВыборкаСреднегоЗаработка.СледующийПоЗначениюПоля("МесяцРасчетногоПериода") Цикл
		Если ВыборкаСреднегоЗаработка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
				
			СекцияРасчетСреднего.Параметры.Заполнить(ВыборкаСреднегоЗаработка);
			СекцияРасчетСреднегоИтого.Параметры.Заполнить(ВыборкаСреднегоЗаработка);
				
			Если ВыборкаПоШапкеДокумента.ИспользоватьСреднеЧасовойЗаработок Тогда
				СекцияРасчетСреднего.Параметры.ЗаработокЗаЕдиницуВремени = Окр(?(ВыборкаСреднегоЗаработка.ВсегоЧасовРасчетногоПериода = 0,0, ВыборкаСреднегоЗаработка.ВсегоУчтено / ВыборкаСреднегоЗаработка.ВсегоЧасовРасчетногоПериода),2);
			Иначе
				СекцияРасчетСреднего.Параметры.ЗаработокЗаЕдиницуВремени = Окр(?(ВыборкаСреднегоЗаработка.ВсегоДнейРасчетногоПериода = 0,0, ВыборкаСреднегоЗаработка.ВсегоУчтено / ВыборкаСреднегоЗаработка.ВсегоДнейРасчетногоПериода),2);
			КонецЕсли;
				
		Иначе
				
			Пока ВыборкаСреднегоЗаработка.СледующийПоЗначениюПоля("ПорядокЗаписей") Цикл
				Пока ВыборкаСреднегоЗаработка.СледующийПоЗначениюПоля("ВидРасчета") Цикл
						
					НомерСтроки = НомерСтроки  + 1;
						
					// формируем описание периода к которому отнесена выводимая сумма
					Если ВыборкаСреднегоЗаработка.БазовыйПериодКонец = ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода Тогда
						Если НомерСтроки <= 12 Тогда
							СекцияРасчетСреднего.Параметры["Год" + НомерСтроки] = Год(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода);
							СекцияРасчетСреднего.Параметры["Месяц" + НомерСтроки] = Формат(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода,"ДФ='ММММ'");
						Иначе
							СекцияДополнительнаяСтрокаЗаработка.Параметры.Год = Год(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода);
							СекцияДополнительнаяСтрокаЗаработка.Параметры.Месяц = Формат(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода,"ДФ='ММММ'");
						КонецЕсли; 
					Иначе
						Если НомерСтроки <= 12 Тогда
							Если Год(ВыборкаСреднегоЗаработка.БазовыйПериодКонец) = Год(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода) Тогда
								СекцияРасчетСреднего.Параметры["Год" + НомерСтроки] = Год(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода);
								СекцияРасчетСреднего.Параметры["Месяц" + НомерСтроки] = Формат(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода,"ДФ='ММММ'") + " - " + Формат(ВыборкаСреднегоЗаработка.БазовыйПериодКонец,"ДФ='ММММ'");
							Иначе
								СекцияРасчетСреднего.Параметры["Год" + НомерСтроки] = Формат(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода,"ДФ='ММММ гггг'");
								СекцияРасчетСреднего.Параметры["Месяц" + НомерСтроки] = Формат(ВыборкаСреднегоЗаработка.БазовыйПериодКонец,"ДФ='ММММ гггг'");
							КонецЕсли;
						Иначе
							Если Год(ВыборкаСреднегоЗаработка.БазовыйПериодКонец) = Год(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода) Тогда
								СекцияДополнительнаяСтрокаЗаработка.Параметры.Год = Год(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода);
								СекцияДополнительнаяСтрокаЗаработка.Параметры.Месяц = Формат(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода,"ДФ='ММММ'") + " - " + Формат(ВыборкаСреднегоЗаработка.БазовыйПериодКонец,"ДФ='ММММ'");
							Иначе
								СекцияДополнительнаяСтрокаЗаработка.Параметры.Год = Формат(ВыборкаСреднегоЗаработка.МесяцРасчетногоПериода,"ДФ='ММММ гггг'");
								СекцияДополнительнаяСтрокаЗаработка.Параметры.Месяц = Формат(ВыборкаСреднегоЗаработка.БазовыйПериодКонец,"ДФ='ММММ гггг'");
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					Если НомерСтроки <= 12 Тогда
						СекцияРасчетСреднегоГод   = СекцияРасчетСреднего.Параметры["Год" + НомерСтроки];
						СекцияРасчетСреднегоМесяц = СекцияРасчетСреднего.Параметры["Месяц" + НомерСтроки];
					КонецЕсли;
					
					Если ОсновнойЗаработок.Найти(ВыборкаСреднегоЗаработка.ВидРасчета) <> Неопределено Тогда
						//основной заработок
						ВсегоУчтено = 0;
						ПримечаниеКСумме = ""; // формируем примечание к ячейке
						Пока ВыборкаСреднегоЗаработка.Следующий() Цикл
							ВсегоУчтено = ВсегоУчтено + ВыборкаСреднегоЗаработка.ВсегоУчтено;
							Если ВыборкаСреднегоЗаработка.КоэффициентИндексации > 1 Тогда
								ПримечаниеКСумме = ПримечаниеКСумме + ?(ПримечаниеКСумме = "","",Символы.ПС) + "сумма заработка " + ВыборкаСреднегоЗаработка.Результат + " учтена с коэффициентом индексации " + ВыборкаСреднегоЗаработка.КоэффициентИндексации
							КонецЕсли;
						КонецЦикла;
						ОписаниеСуммы = ВсегоУчтено; 
						Если НомерСтроки <= 12 Тогда
							СекцияРасчетСреднего.Параметры["Сумма" + НомерСтроки] = ОписаниеСуммы;
							СекцияРасчетСреднего.Область(НомерСтроки + 7, 7).Примечание.Текст = ПримечаниеКСумме;
							Если НомерСтроки = 12  Тогда
								// вывод среднедневного (часового) заработка
								ТабДокумент.Вывести(СекцияРасчетСреднего);
							КонецЕсли; 
						Иначе
							СекцияДополнительнаяСтрокаЗаработка.Параметры.Сумма = ОписаниеСуммы;
							СекцияДополнительнаяСтрокаЗаработка.Область(1, 7).Примечание.Текст = ПримечаниеКСумме;
							ТабДокумент.Вывести(СекцияДополнительнаяСтрокаЗаработка);
						КонецЕсли;
					Иначе
						// премии
						НомерСтроки = НомерСтроки - 1;
						Пока ВыборкаСреднегоЗаработка.СледующийПоЗначениюПоля("МесяцевПремии") Цикл
							ВсегоУчтено = 0;
							ПримечаниеКСумме = ""; // формируем примечание к ячейке
							НомерСтроки = НомерСтроки  + 1;
							
							Пока ВыборкаСреднегоЗаработка.Следующий() Цикл
								ВсегоУчтено = ВсегоУчтено + ВыборкаСреднегоЗаработка.ВсегоУчтено;
								Если ВыборкаСреднегоЗаработка.КоэффициентИндексации > 1 Или ВыборкаСреднегоЗаработка.ДоляВремени > 0 Тогда
									ПримечаниеКСумме = ПримечаниеКСумме + ?(ПримечаниеКСумме = "","",Символы.ПС) 
									+ "сумма премии " + ВыборкаСреднегоЗаработка.Результат + " учтена "
									+ ?(ВыборкаСреднегоЗаработка.МесяцевПремии > ВыборкаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка,Символы.ПС + "в месячной части за каждый месяц расчетного периода (" + ВыборкаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка + "/" + ВыборкаСреднегоЗаработка.МесяцевПремии + ") ","полностью ")
									+ ?(ВыборкаСреднегоЗаработка.КоэффициентИндексации > 1,
									Символы.ПС + "с коэффициентом индексации " + ВыборкаСреднегоЗаработка.КоэффициентИндексации + "; ","")
									+ ?(ВыборкаСреднегоЗаработка.ДоляВремени > 0,
									Символы.ПС + "пропорционально отработанному времени - в доле " + ВыборкаСреднегоЗаработка.ДоляВремени,"")
								КонецЕсли;
							КонецЦикла;
							ОписаниеСуммы = "Премия за " + ВыборкаСреднегоЗаработка.МесяцевПремии + " мес.: " + Формат(ВсегоУчтено,"ЧЦ=15; ЧДЦ=2; ЧН=-"); 
							
							Если НомерСтроки <= 12 Тогда
								СекцияРасчетСреднего.Параметры["Год" + НомерСтроки]   = СекцияРасчетСреднегоГод;
								СекцияРасчетСреднего.Параметры["Месяц" + НомерСтроки] = СекцияРасчетСреднегоМесяц;
							КонецЕсли;
							
							Если НомерСтроки <= 12 Тогда
								СекцияРасчетСреднего.Параметры["Сумма" + НомерСтроки] = ОписаниеСуммы;
								СекцияРасчетСреднего.Область(НомерСтроки + 7, 7).Примечание.Текст = ПримечаниеКСумме;
								Если НомерСтроки = 12  Тогда
									// вывод среднедневного (часового) заработка
									ТабДокумент.Вывести(СекцияРасчетСреднего);
								КонецЕсли; 
							Иначе
								СекцияДополнительнаяСтрокаЗаработка.Параметры.Сумма = ОписаниеСуммы;
								СекцияДополнительнаяСтрокаЗаработка.Область(1, 7).Примечание.Текст = ПримечаниеКСумме;
								ТабДокумент.Вывести(СекцияДополнительнаяСтрокаЗаработка);
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
				
		КонецЕсли;
	КонецЦикла;
		
	Если НомерСтроки < 12 Тогда
		// вывод среднедневного (часового) заработка
		ТабДокумент.Вывести(СекцияРасчетСреднего);
	КонецЕсли;
		
	// итого средний заработок
	ТабДокумент.Вывести(СекцияРасчетСреднегоИтого);
		
	// Выборка начисленных сумм за отпуск
	Запрос.Текст = НачисленияТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ВидМесяца = "Текущий" Тогда
			НачисленоОтпускныхЗаТекущийМесяц = Выборка.НачисленоОтпускных;
			
		Иначе
			НачисленоОтпускныхЗаБудущиеМесяцы = Выборка.НачисленоОтпускных;
			
		КонецЕсли;
	КонецЦикла;
	НачисленоДругиеНачисленияЗаТекущийМесяц = 0;
	Запрос.Текст = ДопНачисленияТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НачисленоДругиеНачисленияЗаТекущийМесяц = Выборка.НачисленоДругиеНачисленияЗаТекущийМесяц;
	КонецЦикла;
	ВсегоНачисленоОтпускных = НачисленоОтпускныхЗаТекущийМесяц  + НачисленоОтпускныхЗаБудущиеМесяцы + НачисленоДругиеНачисленияЗаТекущийМесяц;
	
	ДругиеНачисления = ПроведениеРасчетовДополнительный.ПолучитьДругиеНачисления(ДокументОбъект.Ссылка, ПериодРегистрации, ДокументОбъект.Сотрудник, ДокументОбъект.Дата);
	ВсегоНачисленоОтпускных = ВсегоНачисленоОтпускных + ДругиеНачисления.ДругиеНачисленияЗаТекущийМесяц + ДругиеНачисления.ДругиеНачисленияЗаБудущиеМесяцы;
	
	// Выборка зарегистрированных процентых удержаний за работником
		
	Запрос.Текст = ПлановыеУдержанияРаботниковОрганизацийТекст;
	ВыборкаУдержаний = Запрос.Выполнить().Выбрать();
	
	// Расчет суммы НДФЛ от ставки налога без учета льгот
	Запрос.Текст = РассчитаноНДФЛТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	СуммаНДФЛ = 0;
	Если Выборка.Следующий() Тогда
		СуммаНДФЛ = ?(ЗначениеЗаполнено(Выборка.Налог),Выборка.Налог,0);
	КонецЕсли;	
	Если ВыборкаПоШапкеДокумента.НеЯвляетсяНалоговымРезидентомРФ Тогда
		СтавкаНДФЛ = ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛСНерезидента();
	Иначе	
		СтавкаНДФЛ = ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛотСтавкиНалогообложенияРезидента(Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	КонецЕсли;
	СуммаНДФЛ = СуммаНДФЛ + Окр((ДругиеНачисления.ДругиеНачисленияЗаТекущийМесяц + ДругиеНачисления.ДругиеНачисленияЗаБудущиеМесяцы - ДругиеНачисления.НеОблагаетсяНДФЛ) * СтавкаНДФЛ/100, 0);
		
	// Вывод подвала
	
	СекцияПодвал.Параметры.ДругиеНачисленияЗаТекущийМесяц = ДругиеНачисления.ДругиеНачисленияЗаТекущийМесяц + НачисленоДругиеНачисленияЗаТекущийМесяц;
	СекцияПодвал.Параметры.ДругиеНачисленияЗаБудущиеМесяцы = ДругиеНачисления.ДругиеНачисленияЗаБудущиеМесяцы;
	СекцияПодвал.Параметры.СтрТекущийМесяц = ПредставлениеПериода(НачалоМесяца(ПериодРегистрации), КонецМесяца(ПериодРегистрации));
	СекцияПодвал.Параметры.ДнейКОплатеЗаТекущийМесяц = ?(ДнейКОплатеОсновногоОтпускаЗаТекущийМесяц = 0, "", Строка(ДнейКОплатеОсновногоОтпускаЗаТекущийМесяц)) 
			+ ?(ДнейКОплатеДополнительногоОтпускаЗаТекущийМесяц = 0 Или ДнейКОплатеОсновногоОтпускаЗаТекущийМесяц = 0 , "", "(") 
			+ ?(ДнейКОплатеДополнительногоОтпускаЗаТекущийМесяц = 0, "",Строка(ДнейКОплатеДополнительногоОтпускаЗаТекущийМесяц)) 
			+ ?(ДнейКОплатеДополнительногоОтпускаЗаТекущийМесяц = 0 Или ДнейКОплатеОсновногоОтпускаЗаТекущийМесяц = 0 , "", ")"); 
	СекцияПодвал.Параметры.НачисленоОтпускныхЗаТекущийМесяц = НачисленоОтпускныхЗаТекущийМесяц;
	Если НачалоМесяца(ДатаОкончанияСобытия) > ПериодРегистрации Тогда
		СекцияПодвал.Параметры.ДнейКОплатеЗаБудущиеМесяцы = ?(ДнейКОплатеОсновногоОтпускаЗаБудущиеМесяцы = 0, "", Строка(ДнейКОплатеОсновногоОтпускаЗаБудущиеМесяцы)) 
		+ ?(ДнейКОплатеДополнительногоОтпускаЗаБудущиеМесяцы = 0 Или ДнейКОплатеОсновногоОтпускаЗаБудущиеМесяцы = 0, "", "(") 
		+ ?(ДнейКОплатеДополнительногоОтпускаЗаБудущиеМесяцы = 0, "", Строка(ДнейКОплатеДополнительногоОтпускаЗаБудущиеМесяцы)) 
		+ ?(ДнейКОплатеДополнительногоОтпускаЗаБудущиеМесяцы = 0 Или ДнейКОплатеОсновногоОтпускаЗаБудущиеМесяцы = 0, "", ")"); 
		СекцияПодвал.Параметры.СтрБудущиеМесяцы = ПредставлениеПериода(КонецМесяца(ПериодРегистрации) +1, КонецМесяца(ДатаОкончанияСобытия));
		СекцияПодвал.Параметры.НачисленоОтпускныхЗаБудущиеМесяцы = НачисленоОтпускныхЗаБудущиеМесяцы;
	КонецЕсли;
	СекцияПодвал.Параметры.ВсегоНачислено = ВсегоНачисленоОтпускных;
		
	СекцияПодвал.Параметры.СуммаНДФЛ = СуммаНДФЛ;
		
	// вывод сумм прочих процентных удержаний
	ВсегоУдержано = СуммаНДФЛ;
	НомерУдержания = 0;
	Пока ВыборкаУдержаний.Следующий() Цикл
		НомерУдержания = НомерУдержания + 1;
		Если ВыборкаУдержаний.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом Или ВыборкаУдержаний.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПроцентомОтОблагаемыхЕСННачислений Тогда
			СуммаУдержания = ВыборкаУдержаний.РасчетнаяБаза * ВыборкаУдержаний.Размер / 100;
		Иначе
			СуммаУдержания = (ВыборкаУдержаний.РасчетнаяБаза - СуммаНДФЛ) * ВыборкаУдержаний.Размер / 100;
		КонецЕсли;
		
		ВсегоУдержано = ВсегоУдержано + СуммаУдержания;
		Если НомерУдержания <= 5 Тогда
			СекцияПодвал.Параметры["СуммаУдержания" + НомерУдержания] = СуммаУдержания;
			СекцияПодвал.Параметры["Имя" + НомерУдержания] = ВыборкаУдержаний.Имя;
		КонецЕсли;
		Если НомерУдержания = 5 Тогда
			Сообщить("Бланк формы не позволяет отразить более 6 удержаний!");
			Прервать;
		КонецЕсли;
	КонецЦикла;
	СекцияПодвал.Параметры.ВсегоУдержано = ВсегоУдержано;	
	КВыплате = ВсегоНачисленоОтпускных - ВсегоУдержано;
	СекцияПодвал.Параметры.КВыплате = КВыплате;
	СекцияПодвал.Параметры.КВыплатеПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(КВыплате, Константы.ВалютаРегламентированногоУчета.Получить());
	СекцияПодвал.Параметры.КВыплатеРубли = Цел(КВыплате);
	СекцияПодвал.Параметры.КВыплатеКопейки = Окр((КВыплате - Цел(КВыплате)) * 100,0);
		
	ТабДокумент.Вывести(СекцияПодвал);
		
	Возврат ТабДокумент;
		
КонецФункции // ПечатьТ60()

#КонецЕсли

