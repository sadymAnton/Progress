////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции объекта

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим       - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим, Ссылка) Экспорт

	РежимНабораПерсонала = ПроцедурыУправленияПерсоналомДополнительный.ПолучитьРежимНабораПерсонала();
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);

	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		СтрокаСоединения = "Док.Сотрудник = НамеченныеСобытияПоПерсоналу.Сотрудник";
	Иначе
		СтрокаСоединения = "Док.Сотрудник.Физлицо = НамеченныеСобытияПоПерсоналу.ФизЛицо";
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка,
	|	Док.Дата,
	|	Док.ДатаИзменения,
	|	Док.Сотрудник,
	|	Док.Сотрудник.Физлицо КАК Физлицо,
	|	Док.Сотрудник.ОбособленноеПодразделение КАК Организация,
	|	Док.Результат,"+РезультатИспытательногоСрокаДополнительный.ДополнитьЗапросПоШапке()+"
	|	ВЫБОР
	|		КОГДА СостояниеРаботниковНаИспытательномСроке.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаНаИспытательномСроке.ПринятНаИспытательныйСрок)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КандидатПринятНаИспытательныйСрок,
	|	ВЫБОР
	|		КОГДА СостояниеРаботниковНаИспытательномСроке.Период = Док.ДатаИзменения
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьРешение,
	|	НамеченныеСобытияПоПерсоналу.ПланируемоеСобытие
	|ИЗ
	|	Документ.РезультатИспытательногоСрока КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НамеченныеСобытияПоПерсоналу КАК НамеченныеСобытияПоПерсоналу
	|		ПО "+СтрокаСоединения+"
	|			И (НАЧАЛОПЕРИОДА(Док.ДатаИзменения, ДЕНЬ) = НамеченныеСобытияПоПерсоналу.ДатаИзменения)
	|			И ВЫБОР
	|				КОГДА Док.Результат = ЗНАЧЕНИЕ(Перечисление.РезультатыИспытательногоСрока.Отрицательный)
	|					ТОГДА НамеченныеСобытияПоПерсоналу.ПланируемоеСобытие = ЗНАЧЕНИЕ(Перечисление.НамеченныеСобытияПоПерсоналу.УвольнениеПослеИспытательногоСрока)
	|				КОГДА Док.Результат = ЗНАЧЕНИЕ(Перечисление.РезультатыИспытательногоСрока.Продлен)
	|					ТОГДА НамеченныеСобытияПоПерсоналу.ПланируемоеСобытие = ЗНАЧЕНИЕ(Перечисление.НамеченныеСобытияПоПерсоналу.РезультатИспытательногоСрока)
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковНаИспытательномСроке КАК СостояниеРаботниковНаИспытательномСроке
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МАКСИМУМ(СостояниеРаботниковНаИспытательномСроке.Период) КАК ДатаЗначения,
	|				Док.Сотрудник.Физлицо КАК ФизЛицо
	|			ИЗ
	|				Документ.РезультатИспытательногоСрока КАК Док
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковНаИспытательномСроке КАК СостояниеРаботниковНаИспытательномСроке
	|					ПО СостояниеРаботниковНаИспытательномСроке.Физлицо = Док.Сотрудник.Физлицо
	|						И СостояниеРаботниковНаИспытательномСроке.Период <= Док.ДатаИзменения
	|			ГДЕ
	|				Док.Ссылка = &ДокументСсылка
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Док.Сотрудник.Физлицо) КАК СписокДат
	|			ПО СостояниеРаботниковНаИспытательномСроке.Период = СписокДат.ДатаЗначения
	|				И СостояниеРаботниковНаИспытательномСроке.Физлицо = СписокДат.ФизЛицо
	|		ПО Док.Сотрудник.Физлицо = СостояниеРаботниковНаИспытательномСроке.Физлицо
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

Процедура ДополнитьДвижение(Движение, ВыборкаПоШапкеДокумента) Экспорт
	
	РежимНабораПерсонала = ПроцедурыУправленияПерсоналомДополнительный.ПолучитьРежимНабораПерсонала();
	
	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Движение.Сотрудник		= ВыборкаПоШапкеДокумента.Сотрудник;
		Движение.Организация	= ВыборкаПоШапкеДокумента.Организация;
	Иначе
		Движение.Физлицо		= ВыборкаПоШапкеДокумента.Физлицо;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеШапкиДополнительно(ВыборкаПоШапкеДокумента, Отказ, Заголовок) Экспорт
	
	РезультатИспытательногоСрокаДополнительный.ПроверитьЗаполнениеШапкиДополнительно(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ДополнитьДвижениеСостоянияРаботникаНаИспытательномСроке(Движение, ВыборкаПоШапкеДокумента) Экспорт
	
	РезультатИспытательногоСрокаДополнительный.ДополнитьДвижениеСостоянияРаботникаНаИспытательномСроке(Движение, ВыборкаПоШапкеДокумента);
	
КонецПроцедуры

Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведенийПродленДополнительно(Движения, ВыборкаПоШапкеДокумента) Экспорт
	
	РезультатИспытательногоСрокаДополнительный.ДобавитьСтрокуВДвиженияПоРегистрамСведенийПродленДополнительно(Движения, ВыборкаПоШапкеДокумента);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы документа

Процедура ПриИзмененииРешенияДополнительно(ЭтаФорма, ЭлементыФормы, Результат) Экспорт
	
	РезультатИспытательногоСрокаДополнительный.ПриИзмененииРешенияДополнительно(ЭтаФорма, ЭлементыФормы, Результат);
	
КонецПроцедуры

#Если ТолстыйКлиентОбычноеПриложение Тогда
Процедура ПередОткрытиемДополнительно(ЭтаФорма, ЭлементыФормы) Экспорт
	
	РезультатИспытательногоСрокаДополнительный.ПередОткрытиемДополнительно(ЭтаФорма, ЭлементыФормы);
	
КонецПроцедуры
#КонецЕсли



