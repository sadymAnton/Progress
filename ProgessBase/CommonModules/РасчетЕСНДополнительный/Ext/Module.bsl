////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Добавляет запись в движения по регистру учета доходов 
//
Процедура ДобавитьСтрокуВДвиженияПоДоходам(ДокументОбъект, ВыборкаПоДоходам, ВыборкаПоШапкеДокумента) Экспорт
	
	Если ВыборкаПоДоходам.ТипСтроки = "Основные начисления" 
		Или ВыборкаПоДоходам.ТипСтроки = "Пособия по социальному страхованию (основные)" 
		Или ВыборкаПоДоходам.ТипСтроки = "Пособия по уходу за ребенком" Тогда
		
		Строка = ДокументОбъект.Движения.ЕСНОсновныеНачисления.Добавить();
		
		ВидУчетаВремени = ПроведениеРасчетов.ПолучитьВидУчетаВремени(ВыборкаПоДоходам.СпособРасчета, ВыборкаПоДоходам.ВидВремени, ВыборкаПоДоходам.СуммированныйУчетРабочегоВремени);
		
		// свойства
		Строка.ПериодДействияНачало		= ВыборкаПоДоходам.ПериодДействияНачало;
		Строка.ПериодДействияКонец		= ВыборкаПоДоходам.ПериодДействияКонец;

		// реквизиты
		Строка.ГрафикРаботы				= ВыборкаПоДоходам.ГрафикРаботы;
		Строка.ВидУчетаВремени			= ВидУчетаВремени;
		
	Иначе
		Строка = ДокументОбъект.Движения.ЕСНДополнительныеНачисления.Добавить();
		
		// ресурсы
		Строка.Скидка					= ВыборкаПоДоходам.Скидка;
		
	КонецЕсли;
	
	// свойства
	Строка.ВидРасчета 		 = ВыборкаПоДоходам.ВидРасчета;
	Строка.ПериодРегистрации = ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Строка.Сторно			 = ВыборкаПоДоходам.Сторно;
	
	// Измерения
	Строка.Сотрудник	= ВыборкаПоДоходам.Сотрудник;
	Строка.Физлицо		= ВыборкаПоДоходам.Физлицо;
	Строка.Организация	= ВыборкаПоШапкеДокумента.Организация;
	
	// ресурсы
	Строка.Результат	= ВыборкаПоДоходам.Результат;
	
	// реквизиты
	Строка.КодДоходаЕСН					= ВыборкаПоДоходам.КодДоходаЕСН;
	Строка.ОблагаетсяЕНВД				= ВыборкаПоДоходам.ОблагаетсяЕНВД;
	Строка.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.ОбособленноеПодразделение;
	Строка.ДокументОснование			= ВыборкаПоДоходам.ДокументОснование;
	
	// продублируем сведения о доходах в рег-ре налогового учета
	Строка = ДокументОбъект.Движения.ЕСНСведенияОДоходах.Добавить();
	
	// свойства
	Строка.Период						= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
	// Измерения
	Строка.Физлицо						= ВыборкаПоДоходам.Физлицо;
	Строка.Организация					= ВыборкаПоШапкеДокумента.Организация;
	
	// ресурсы
	Строка.Результат					= ВыборкаПоДоходам.Результат;
	Если ВыборкаПоДоходам.ТипСтроки = "Дополнительные начисления" Тогда
		Строка.Скидка					= ВыборкаПоДоходам.Скидка;
	КонецЕсли;
	
	// реквизиты
	Строка.КодДоходаЕСН					= ВыборкаПоДоходам.КодДоходаЕСН;
	Строка.ОблагаетсяЕНВД				= ВыборкаПоДоходам.ОблагаетсяЕНВД;
	Строка.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.ОбособленноеПодразделение;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоДоходам()

// Выполняет проверку правильности заполнения строки табличной части о доходах
Процедура ПроверитьЗаполнениеСтрокиДохода(ВыборкаПоДоходам, Отказ, Заголовок = "") Экспорт
	
	ТипСтроки = Лев(ВыборкаПоДоходам.ТипСтроки,34);
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """ + СокрЛП(ВыборкаПоДоходам.НомерСтроки) +
		""" таблицы """ + ТипСтроки + """: ";
		
    Если Найти(ВыборкаПоДоходам.ТипСтроки,"Пособия") <> 0 и Найти(ВыборкаПоДоходам.ТипСтроки,"единовременные") = 0 Тогда
		ТипСтроки = "Основные начисления"
	КонецЕсли;
	
	Если ВыборкаПоДоходам.ВидРасчета.Пустая() Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан вид расчета!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоДоходам.Сотрудник.Пустая() Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоДоходам.КодДоходаЕСН.Пустая() Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан код дохода ЕСН!", Отказ, Заголовок);
	КонецЕсли;
	
	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоДоходам.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "указанный сотрудник оформлен на другую организацию!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ТипСтроки = "Основные начисления" Тогда
		
		// Дата начала
		Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.ПериодДействияНачало) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала начисления!", Отказ, Заголовок);
		Иначе
			// Дата окончания
			Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.ПериодДействияКонец) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания начисления!", Отказ, Заголовок);
			Иначе
				Если ВыборкаПоДоходам.ПериодДействияКонец < ВыборкаПоДоходам.ПериодДействияНачало Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата окончания начисления не должна быть меньше даты начала!", Отказ, Заголовок);
				Иначе
					Если НачалоМесяца(ВыборкаПоДоходам.ПериодДействияКонец) <> НачалоМесяца(ВыборкаПоДоходам.ПериодДействияНачало) Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "даты начала и окончания должны принадлежать одному месяцу!", Отказ, Заголовок);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
Конецпроцедуры // ПроверитьЗаполнениеСтрокиДохода()

// Формирует запрос по табличным частям документа "ОсновныеНачисление" и "ДополнительныеНачисления"
//
Функция СформироватьЗапросПоДоходам(ВыборкаПоШапкеДокумента) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамРегистратор",		ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("Организация",			ВыборкаПоШапкеДокумента.ОбособленноеПодразделение);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Основные.ПериодДействияНачало КАК ПериодДействияНачало,
	|	Основные.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	Документ.РасчетЕСН.ОсновныеНачисления КАК Основные
	|ГДЕ
	|	Основные.Ссылка = &парамРегистратор
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Пособия.ПериодДействияНачало,
	|	Пособия.Сотрудник
	|ИЗ
	|	Документ.РасчетЕСН.ПособияСоциальномуСтрахованию КАК Пособия
	|ГДЕ
	|	Пособия.Ссылка = &парамРегистратор
	|	И Пособия.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПособияПоУходу.ПериодДействияНачало,
	|	ПособияПоУходу.Сотрудник
	|ИЗ
	|	Документ.РасчетЕСН.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияПоУходу
	|ГДЕ
	|	ПособияПоУходу.Ссылка = &парамРегистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодДействияНачало";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиОрганизацииСрез.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизацииСрез.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ПериодЗавершения <= РаботникиОрганизацииСрез.ПериодДействияНачало
	|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения.СуммированныйУчетРабочегоВремени
	|		ИНАЧЕ РаботникиОрганизации.ГрафикРаботы.СуммированныйУчетРабочегоВремени
	|	КОНЕЦ КАК СуммированныйУчетРабочегоВремени,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ПериодЗавершения <= РаботникиОрганизацииСрез.ПериодДействияНачало
	|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения
	|		ИНАЧЕ РаботникиОрганизации.ГрафикРаботы
	|	КОНЕЦ КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТДанныеСотрудников
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(РаботникиОрганизации.Период) КАК ПериодСреза,
	|		Основные.Сотрудник КАК Сотрудник,
	|		Основные.ПериодДействияНачало КАК ПериодДействияНачало
	|	ИЗ
	|		ВТСотрудники КАК Основные
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|			ПО Основные.ПериодДействияНачало >= РаботникиОрганизации.Период
	|				И Основные.Сотрудник = РаботникиОрганизации.Сотрудник
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Основные.Сотрудник,
	|		Основные.ПериодДействияНачало) КАК РаботникиОрганизацииСрез
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО РаботникиОрганизацииСрез.ПериодСреза = РаботникиОрганизации.Период
	|			И РаботникиОрганизацииСрез.Сотрудник = РаботникиОрганизации.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодДействияНачало";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	""Основные начисления"" КАК ТипСтроки,
	|	Основные.НомерСтроки,
	|	Основные.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	Основные.ВидРасчета.ВидВремени КАК ВидВремени,
	|	Основные.ВидРасчета,
	|	Основные.Сотрудник,
	|	Основные.Сотрудник.Физлицо КАК Физлицо,
	|	Основные.КодДоходаЕСН,
	|	Основные.ОблагаетсяЕНВД,
	|	Основные.Результат,
	|	Основные.ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА Основные.ПериодДействияКонец <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА КОНЕЦПЕРИОДА(Основные.ПериодДействияКонец, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	ЕСТЬNULL(РаботникиОрганизацииСрез.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
	|	РаботникиОрганизацииСрез.ГрафикРаботы КАК ГрафикРаботы,
	|	0 КАК Скидка,
	|	ВЫБОР
	|		КОГДА Основные.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	Основные.Сторно КАК Сторно,
	|	Основные.ДокументОснование
	|ИЗ
	|	Документ.РасчетЕСН.ОсновныеНачисления КАК Основные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудников КАК РаботникиОрганизацииСрез
	|		ПО Основные.Сотрудник = РаботникиОрганизацииСрез.Сотрудник
	|			И Основные.ПериодДействияНачало = РаботникиОрганизацииСрез.ПериодДействияНачало
	|ГДЕ
	|	Основные.Ссылка = &парамРегистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Дополнительные начисления"",
	|	Дополнительные.НомерСтроки,
	|	Дополнительные.ВидРасчета.СпособРасчета,
	|	NULL,
	|	Дополнительные.ВидРасчета,
	|	Дополнительные.Сотрудник,
	|	Дополнительные.Сотрудник.Физлицо,
	|	Дополнительные.КодДоходаЕСН,
	|	Дополнительные.ОблагаетсяЕНВД,
	|	Дополнительные.Результат,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	Дополнительные.Скидка,
	|	ВЫБОР
	|		КОГДА Дополнительные.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Дополнительные.Сторно,
	|	Дополнительные.ДокументОснование
	|ИЗ
	|	Документ.РасчетЕСН.ДополнительныеНачисления КАК Дополнительные
	|ГДЕ
	|	Дополнительные.Ссылка = &парамРегистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Пособия по социальному страхованию (основные)"",
	|	Пособия.НомерСтроки,
	|	Пособия.ВидРасчета.СпособРасчета,
	|	Пособия.ВидРасчета.ВидВремени,
	|	Пособия.ВидРасчета,
	|	Пособия.Сотрудник,
	|	Пособия.Сотрудник.Физлицо,
	|	ВЫБОР
	|		КОГДА Пособия.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом)
	|		КОГДА Пособия.СпособФинансированияПособий = ЗНАЧЕНИЕ(Перечисление.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом)
	|	КОНЕЦ,
	|	Пособия.ОблагаетсяЕНВД,
	|	Пособия.СуммаВсего,
	|	Пособия.ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА Пособия.ПериодДействияКонец <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА КОНЕЦПЕРИОДА(Пособия.ПериодДействияКонец, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ,
	|	ЕСТЬNULL(РаботникиОрганизацииСрез.СуммированныйУчетРабочегоВремени, ЛОЖЬ),
	|	РаботникиОрганизацииСрез.ГрафикРаботы,
	|	0,
	|	ВЫБОР
	|		КОГДА Пособия.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Пособия.Сторно,
	|	Пособия.ДокументОснование
	|ИЗ
	|	Документ.РасчетЕСН.ПособияСоциальномуСтрахованию КАК Пособия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудников КАК РаботникиОрганизацииСрез
	|		ПО Пособия.Сотрудник = РаботникиОрганизацииСрез.Сотрудник
	|			И Пособия.ПериодДействияНачало = РаботникиОрганизацииСрез.ПериодДействияНачало
	|ГДЕ
	|	Пособия.Ссылка = &парамРегистратор
	|	И Пособия.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Пособия по социальному страхованию (единовременные)"",
	|	Пособия.НомерСтроки,
	|	Пособия.ВидРасчета.СпособРасчета,
	|	NULL,
	|	Пособия.ВидРасчета,
	|	Пособия.Сотрудник,
	|	Пособия.Сотрудник.Физлицо,
	|	ВЫБОР
	|		КОГДА Пособия.СпособФинансированияПособий = ЗНАЧЕНИЕ(Перечисление.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом)
	|	КОНЕЦ,
	|	Пособия.ОблагаетсяЕНВД,
	|	Пособия.СуммаВсего,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	ВЫБОР
	|		КОГДА Пособия.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Пособия.Сторно,
	|	Пособия.ДокументОснование
	|ИЗ
	|	Документ.РасчетЕСН.ПособияСоциальномуСтрахованию КАК Пособия
	|ГДЕ
	|	Пособия.Ссылка = &парамРегистратор
	|	И Пособия.ВидРасчета ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Пособия по уходу за ребенком"",
	|	ПособияПоУходу.НомерСтроки,
	|	ПособияПоУходу.ВидРасчета.СпособРасчета,
	|	ПособияПоУходу.ВидРасчета.ВидВремени,
	|	ПособияПоУходу.ВидРасчета,
	|	ПособияПоУходу.Сотрудник,
	|	ПособияПоУходу.Сотрудник.Физлицо,
	|	ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС),
	|	ПособияПоУходу.ОблагаетсяЕНВД,
	|	ПособияПоУходу.ПособиеПоУходуЗаПервымРебенком + ПособияПоУходу.ПособиеПоУходуЗаВторымРебенком,
	|	ПособияПоУходу.ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА ПособияПоУходу.ПериодДействияКонец <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА КОНЕЦПЕРИОДА(ПособияПоУходу.ПериодДействияКонец, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ,
	|	ЕСТЬNULL(РаботникиОрганизацииСрез.СуммированныйУчетРабочегоВремени, ЛОЖЬ),
	|	РаботникиОрганизацииСрез.ГрафикРаботы,
	|	0,
	|	ВЫБОР
	|		КОГДА ПособияПоУходу.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ПособияПоУходу.Сторно,
	|	ПособияПоУходу.ДокументОснование
	|ИЗ
	|	Документ.РасчетЕСН.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияПоУходу
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудников КАК РаботникиОрганизацииСрез
	|		ПО ПособияПоУходу.Сотрудник = РаботникиОрганизацииСрез.Сотрудник
	|			И ПособияПоУходу.ПериодДействияНачало = РаботникиОрганизацииСрез.ПериодДействияНачало
	|ГДЕ
	|	ПособияПоУходу.Ссылка = &парамРегистратор";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоДоходам()

Процедура ПроверитьЗаполнениеСтрокиПособияСоциальномуСтрахованию(СтрокаТЧ, Отказ, Заголовок) Экспорт
	
	СтрокаНачалаСообщенияОбОшибке = "В строке № """+ СокрЛП(СтрокаТЧ.НомерСтроки) +
									""" табл. части ""Пособия по социальному страхованию"": ";
									
	Если Не ЗначениеЗаполнено(СтрокаТЧ.ВидПособияСоциальногоСтрахования) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид пособия!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.СпособФинансированияПособий) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан способ финансирования пособия!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиПособияПоУходу()

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоПособияСоциальномуСтрахованию(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Пособия.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	Пособия.Ссылка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Пособия.СпособФинансированияПособий = ЗНАЧЕНИЕ(Перечисление.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС)
	|			ТОГДА Пособия.ВидПособияСоциальногоСтрахования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|	КОНЕЦ КАК ВидПособияСоциальногоСтрахования,
	|	Пособия.ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА (НЕ Пособия.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|		КОГДА Пособия.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗанятости,
	|	СУММА(ВЫБОР
	|			КОГДА Пособия.УчитыватьКакНовыйСтраховойСлучай
	|				ТОГДА ВЫБОР
	|						КОГДА Пособия.Сторно
	|							ТОГДА -1
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтраховыеСлучаи,
	|	СУММА(Пособия.ОплаченныеДни) КАК ОплаченныеДни,
	|	СУММА(Пособия.СуммаВсего) КАК СуммаВсего,
	|	Пособия.Сотрудник,
	|	Пособия.ДокументОснование,
	|	Пособия.ДатаСтраховогоСлучая КАК ДатаСтраховогоСлучая
	|ИЗ
	|	Документ.РасчетЕСН.ПособияСоциальномуСтрахованию КАК Пособия
	|ГДЕ
	|	Пособия.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Пособия.ОблагаетсяЕНВД,
	|	Пособия.Сотрудник,
	|	Пособия.ДокументОснование,
	|	Пособия.Ссылка,
	|	ВЫБОР
	|		КОГДА (НЕ Пособия.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|		КОГДА Пособия.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Пособия.СпособФинансированияПособий = ЗНАЧЕНИЕ(Перечисление.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС)
	|			ТОГДА Пособия.ВидПособияСоциальногоСтрахования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|	КОНЕЦ,
	|	Пособия.ДатаСтраховогоСлучая";
	
	Возврат Запрос.Выполнить();

КонецФункции

Процедура ПроверитьЗаполнениеСтрокиПособияПоУходуЗаРебенкомДоПолутораЛет(СтрокаТЧ, Отказ, Заголовок) Экспорт
	
	СтрокаНачалаСообщенияОбОшибке = "В строке № """+ СокрЛП(СтрокаТЧ.НомерСтроки) +
									""" табл. части ""Пособия по уходу за ребенком до полутора лет"": ";
									
	Если Не ЗначениеЗаполнено(СтрокаТЧ.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан получатель пособия!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиПособияПоУходу()

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоПособияПоУходуЗаРебенкомДоПолутораЛет(Ссылка) Экспорт
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ПособияПоУходуЗаРебенком.Ссылка.Организация КАК Организация,
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо КАК Физлицо,
	|	ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ИСТИНА КАК УходЗаПервымРебенком,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходуЗаРебенком.Сторно
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СтраховыеСлучаи,
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком) КАК СуммаВсего,
	|	ПособияПоУходуЗаРебенком.Сотрудник КАК Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало КАК ДатаСтраховогоСлучая
	|ИЗ
	|	Документ.РасчетЕСН.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияПоУходуЗаРебенком
	|ГДЕ
	|	ПособияПоУходуЗаРебенком.Ссылка = &ДокументСсылка
	|	И ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияПоУходуЗаРебенком.Ссылка,
	|	ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД,
	|	ПособияПоУходуЗаРебенком.Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.Ссылка.ПериодРегистрации, МЕСЯЦ),
	|	ПособияПоУходуЗаРебенком.Ссылка.Организация,
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо,
	|	ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД,
	|	ЛОЖЬ,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияПоУходуЗаРебенком.Сторно
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ),
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком),
	|	ПособияПоУходуЗаРебенком.Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало
	|ИЗ
	|	Документ.РасчетЕСН.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияПоУходуЗаРебенком
	|ГДЕ
	|	ПособияПоУходуЗаРебенком.Ссылка = &ДокументСсылка
	|	И ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияПоУходуЗаРебенком.Ссылка,
	|	ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД,
	|	ПособияПоУходуЗаРебенком.Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало";
	
	Возврат Запрос.Выполнить();

КонецФункции

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПолучателиПособийПоУходу.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТОтсторнированныеПособия
	|ИЗ
	|	Документ.РасчетЕСН.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПолучателиПособийПоУходу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасчетЕСН.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК СторноСтроки
	|		ПО ПолучателиПособийПоУходу.Ссылка = СторноСтроки.Ссылка
	|			И ПолучателиПособийПоУходу.Сторно <> СторноСтроки.Сторно
	|			И ПолучателиПособийПоУходу.Сотрудник = СторноСтроки.Сотрудник
	|			И ПолучателиПособийПоУходу.ОблагаетсяЕНВД = СторноСтроки.ОблагаетсяЕНВД
	|			И ПолучателиПособийПоУходу.ПериодДействияНачало = СторноСтроки.ПериодДействияНачало
	|			И ПолучателиПособийПоУходу.ПериодДействияКонец = СторноСтроки.ПериодДействияКонец
	|			И (ПолучателиПособийПоУходу.ПособиеПоУходуЗаПервымРебенком = -СторноСтроки.ПособиеПоУходуЗаПервымРебенком)
	|			И (ПолучателиПособийПоУходу.ПособиеПоУходуЗаВторымРебенком = -СторноСтроки.ПособиеПоУходуЗаВторымРебенком)
	|ГДЕ
	|	ПолучателиПособийПоУходу.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПолучателиПособийПоУходу.Ссылка.ПериодРегистрации КАК Период,
	|	ПолучателиПособийПоУходу.Ссылка.Организация,
	|	ЗаработкиПолучателей.Физлицо,
	|	ЗаработкиПолучателей.ОблагаетсяЕНВД,
	|	ПолучателиПособийПоУходу.Ссылка КАК ДокументОснование,
	|	ЗаработкиПолучателей.РазмерСреднегоЗаработка,
	|	МАКСИМУМ(ПолучателиПособийПоУходу.Сотрудник) КАК Сотрудник
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПолучателиПособийПоУходу.Сотрудник.Физлицо КАК Физлицо,
	|		ПолучателиПособийПоУходу.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		МАКСИМУМ(ПолучателиПособийПоУходу.СреднийДневнойЗаработок) КАК РазмерСреднегоЗаработка
	|	ИЗ
	|		Документ.РасчетЕСН.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПолучателиПособийПоУходу
	|	ГДЕ
	|		ПолучателиПособийПоУходу.Ссылка = &ДокументСсылка
	|		И (НЕ ПолучателиПособийПоУходу.НомерСтроки В (ВЫБРАТЬ ВТОтсторнированныеПособия.НомерСтроки ИЗ ВТОтсторнированныеПособия))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПолучателиПособийПоУходу.Сотрудник.Физлицо,
	|		ПолучателиПособийПоУходу.ОблагаетсяЕНВД) КАК ЗаработкиПолучателей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетЕСН.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПолучателиПособийПоУходу
	|		ПО ЗаработкиПолучателей.Физлицо = ПолучателиПособийПоУходу.Сотрудник.Физлицо
	|			И ЗаработкиПолучателей.ОблагаетсяЕНВД = ПолучателиПособийПоУходу.ОблагаетсяЕНВД
	|			И ЗаработкиПолучателей.РазмерСреднегоЗаработка = ПолучателиПособийПоУходу.СреднийДневнойЗаработок
	|			И (НЕ ПолучателиПособийПоУходу.НомерСтроки В (ВЫБРАТЬ ВТОтсторнированныеПособия.НомерСтроки ИЗ ВТОтсторнированныеПособия))
	|ГДЕ
	|	ПолучателиПособийПоУходу.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаработкиПолучателей.Физлицо,
	|	ЗаработкиПолучателей.ОблагаетсяЕНВД,
	|	ЗаработкиПолучателей.РазмерСреднегоЗаработка,
	|	ПолучателиПособийПоУходу.Ссылка,
	|	ПолучателиПособийПоУходу.Ссылка.ПериодРегистрации,
	|	ПолучателиПособийПоУходу.Ссылка.Организация";
	
	Возврат Запрос.Выполнить();

КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАСЧЕТА ЕСН

// Функция формирует таблицу начислений и последовательность их обработки
//
// Возвращаемое значение:
//  ТаблицаЗначений
//
Функция ПолучитьТаблицуНачислений(ВыборкаПоШапкеДокумента, ОрганичениеНаСотрудников)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамНеОтбиратьСотрудников", ОрганичениеНаСотрудников = Неопределено);
	
	Если ОрганичениеНаСотрудников = Неопределено Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник
		|ПОМЕСТИТЬ ВТСписокСотрудников";
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаСотрудников.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТСписокСотрудников
		|ИЗ
		|	&парамТаблицаСотрудников КАК ТаблицаСотрудников";
		Запрос.УстановитьПараметр("парамТаблицаСотрудников", ОрганичениеНаСотрудников);
		Запрос.Выполнить();
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""Основные"" КАК ВидНачисления,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисления.ВидРасчета.КатегорияРасчета = ЗНАЧЕНИЕ(Справочник.КатегорииРасчетов.Первичное)
	|				ИЛИ ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
	|			ТОГДА ""00000""
	|		ИНАЧЕ ОсновныеНачисления.ВидРасчета.КатегорияРасчета.Код
	|	КОНЕЦ КАК ПорядокРасчета,
	|	ОсновныеНачисления.ВидРасчета
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОсновныеНачисления.ВидРасчета КАК ВидРасчета
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|	ГДЕ
	|		ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
	|		И (&парамНеОтбиратьСотрудников
	|				ИЛИ ОсновныеНачисления.Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТСписокСотрудников.Сотрудник
	|					ИЗ
	|						ВТСписокСотрудников КАК ВТСписокСотрудников))
	|		И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация) КАК ОсновныеНачисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Дополнительные"",
	|	ВЫБОР
	|		КОГДА ДополнительныеНачисления.ВидРасчета.КатегорияРасчета = ЗНАЧЕНИЕ(Справочник.КатегорииРасчетов.Первичное)
	|				ИЛИ ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
	|			ТОГДА ""00000""
	|		ИНАЧЕ ДополнительныеНачисления.ВидРасчета.КатегорияРасчета.Код
	|	КОНЕЦ,
	|	ДополнительныеНачисления.ВидРасчета
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДополнительныеНачисления.ВидРасчета КАК ВидРасчета
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|	ГДЕ
	|		НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
	|		И (&парамНеОтбиратьСотрудников
	|				ИЛИ ДополнительныеНачисления.Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТСписокСотрудников.Сотрудник
	|					ИЗ
	|						ВТСписокСотрудников КАК ВТСписокСотрудников))
	|		И ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация) КАК ДополнительныеНачисления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокРасчета";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("парамПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", ВыборкаПоШапкеДокумента.ОбособленноеПодразделение); 
	
	ТаблицаНачислений = Запрос.Выполнить().Выгрузить();	
	
	Возврат ТаблицаНачислений;

КонецФункции // ПолучитьТаблицуНачислений()

// получение первичных данных для расчета ЕСН
// первичные в данном случае, это те, для которых учет ЕСН <> РаспределятьПоБазовымНачислениям,
// или те которые определяют свой ЕСН-учет по базовым начисленияи и при этом базируются на прошлом периоде, 
// или те у которых категория начисления = "Первичное"
// 
// Параметры:
//	Основные	- булево, если Истина, то получаем данные по основным начислениям иначе - по доп.
//
// Возвращаемое значение:
//	Результат запроса
//
Функция ПолучитьДанныеУчета(ВыборкаПоШапкеДокумента, УчетнаяПолитика, СписокНачислений, ОрганичениеНаСотрудников, ЭтоОсновныеНачисления, ЭтоПервичныеНачисления)
	
	мЕНВД = УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД;
	мУСН = УчетнаяПолитика.УСН;
	мЕНВД = УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД;
	мФСС_БЛ = УчетнаяПолитика.УплачиватьДобровольныеВзносыВФСС;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНеОтбиратьСотрудников", ОрганичениеНаСотрудников = Неопределено);

	Измерения = Новый Массив(1);
	Измерения[0] = "Сотрудник";
	
	Разрезы = Новый Массив(2);
	Разрезы[0] = "КодДоходаЕСН";
	Разрезы[1] = "ОблагаетсяЕНВД";

	Запрос.УстановитьПараметр("парамИзмерения",		Измерения);
	Запрос.УстановитьПараметр("парамРазрезыЕСН",	Разрезы);
	
	Запрос.УстановитьПараметр("парамСписокНачислений", 		СписокНачислений);
	Запрос.УстановитьПараметр("парамПериодРегистрации",		ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация",			ВыборкаПоШапкеДокумента.ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.Организация);
    Запрос.УстановитьПараметр("ЕстьЕНВД",					мЕНВД);
	
	СписокСоставляющихСреднегоЗаработка = Новый Массив(18); 
	СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
	СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;
	СписокСоставляющихСреднегоЗаработка[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;
	СписокСоставляющихСреднегоЗаработка[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;
	СписокСоставляющихСреднегоЗаработка[4] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииБЛ;
	СписокСоставляющихСреднегоЗаработка[5] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	СписокСоставляющихСреднегоЗаработка[6] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
	СписокСоставляющихСреднегоЗаработка[7] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
	СписокСоставляющихСреднегоЗаработка[8] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
	СписокСоставляющихСреднегоЗаработка[9] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии;
	СписокСоставляющихСреднегоЗаработка[10] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;
	СписокСоставляющихСреднегоЗаработка[11] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые;
	СписокСоставляющихСреднегоЗаработка[12] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;
	СписокСоставляющихСреднегоЗаработка[13] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые;
	СписокСоставляющихСреднегоЗаработка[14] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;
	СписокСоставляющихСреднегоЗаработка[15] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые;
	СписокСоставляющихСреднегоЗаработка[16] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;
	СписокСоставляющихСреднегоЗаработка[17] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;

	Запрос.УстановитьПараметр("парамСписокСоставляющихСреднегоЗаработка", СписокСоставляющихСреднегоЗаработка);
	
	// для учета особенностей расчета среднего заработка
	ОсновнойЗаработок = Новый Массив(4);
	ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
	ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
	ОсновнойЗаработок[3] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;
	
	ПоФиксПремиям = Новый Массив(3);
	ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
	ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;
	ПоФиксПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий;
	
	ПоПремиям = Новый Массив(5);
	ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
	ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;
	ПоПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
	ПоПремиям[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;
	ПоПремиям[4] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;
	
	ФиксГодовыеПремии = Новый Массив(5);
	ФиксГодовыеПремии[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
	ФиксГодовыеПремии[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;
	ФиксГодовыеПремии[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий;
	ФиксГодовыеПремии[3] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;
	ФиксГодовыеПремии[4] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;
	
	Запрос.УстановитьПараметр("парамОсновнойЗаработок",	ОсновнойЗаработок);
	Запрос.УстановитьПараметр("парамОсновнойЗаработокНеиндексируемый",	ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);
	Запрос.УстановитьПараметр("парамПоПремиям",			ПоПремиям);
	Запрос.УстановитьПараметр("парамПоФиксПремиям",		ПоФиксПремиям);
	Запрос.УстановитьПараметр("парамПоФиксПремиямНеИндексируемые",	ФиксГодовыеПремии);

	Запрос.УстановитьПараметр("парамДатаЗакона202ФЗ", '20050101');
	Запрос.УстановитьПараметр("парамДатаЗакона255ФЗ", ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006());
	// для реализации Федерального закона № 180-ФЗ от 22.12.2005 г.
	
	Запрос.УстановитьПараметр("парамРегистратор", ВыборкаПоШапкеДокумента.Ссылка);
	
	МассивПоСреднемуЗаработку = Новый Массив;
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС);
	Запрос.УстановитьПараметр("парамПоСреднемуЗаработку", МассивПоСреднемуЗаработку);
	
	// ФизлицаДляРасчета
	//
	Если ОрганичениеНаСотрудников = Неопределено Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник
		|ПОМЕСТИТЬ ВТСписокСотрудников";
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаСотрудников.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТСписокСотрудников
		|ИЗ
		|	&парамТаблицаСотрудников КАК ТаблицаСотрудников";
		Запрос.УстановитьПараметр("парамТаблицаСотрудников", ОрганичениеНаСотрудников);
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Если ЭтоОсновныеНачисления Тогда
		
		Если Не ЭтоПервичныеНачисления Тогда
            
			//соберем базу для зависимых начислений
			БазаТекст = 
			"ВЫБРАТЬ
            |   База.Регистратор КАК Регистратор,
            |   База.НомерСтроки КАК НомерСтроки,
            |   База.КодДоходаЕСНРазрез,
            |   База.ОблагаетсяЕНВДРазрез,
            |   СУММА(База.РезультатБаза) КАК РезультатБаза
            |ПОМЕСТИТЬ База
            |ИЗ
            |   (ВЫБРАТЬ
            |       ОсновныеНачисленияБазаЕСНОсновныеНачисления.Регистратор КАК Регистратор,
            |       ОсновныеНачисленияБазаЕСНОсновныеНачисления.НомерСтроки КАК НомерСтроки,
            |       ОсновныеНачисленияБазаЕСНОсновныеНачисления.КодДоходаЕСНРазрез КАК КодДоходаЕСНРазрез,
            |       ОсновныеНачисленияБазаЕСНОсновныеНачисления.ОблагаетсяЕНВДРазрез КАК ОблагаетсяЕНВДРазрез,
            |       ОсновныеНачисленияБазаЕСНОсновныеНачисления.РезультатБаза КАК РезультатБаза
            |   ИЗ
            |       РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаЕСНОсновныеНачисления(
            |               &парамИзмерения,
            |               &парамИзмерения,
            |               &парамРазрезыЕСН,
            |               Организация = &парамГоловнаяОрганизация
            |                   И ПериодРегистрации = &парамПериодРегистрации
            |                   И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
            |                   И (&парамНеОтбиратьСотрудников
            |                       ИЛИ Сотрудник В
            |                           (ВЫБРАТЬ
            |                               ВТСписокСотрудников.Сотрудник
            |                           ИЗ
            |                               ВТСписокСотрудников КАК ВТСписокСотрудников))
            |                   И (НЕ Сторно)
            |                   И ВариантОбработкиЗаписиПриОтраженииВРеглУчете = ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
            |                   И (&ЕстьЕНВД
            |                           И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
            |                       ИЛИ ВидРасчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.РаспределятьПоБазовымНачислениям))
            |                   И Результат <> 0
            |                   И ВидРасчета В (&парамСписокНачислений)) КАК ОсновныеНачисленияБазаЕСНОсновныеНачисления
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       ОсновныеНачисленияБазаЕСНДополнительныеНачисления.Регистратор,
            |       ОсновныеНачисленияБазаЕСНДополнительныеНачисления.НомерСтроки,
            |       ОсновныеНачисленияБазаЕСНДополнительныеНачисления.КодДоходаЕСНРазрез,
            |       ОсновныеНачисленияБазаЕСНДополнительныеНачисления.ОблагаетсяЕНВДРазрез,
            |       ОсновныеНачисленияБазаЕСНДополнительныеНачисления.РезультатБаза
            |   ИЗ
            |       РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаЕСНДополнительныеНачисления(
            |               &парамИзмерения,
            |               &парамИзмерения,
            |               &парамРазрезыЕСН,
            |               Организация = &парамГоловнаяОрганизация
            |                   И ПериодРегистрации = &парамПериодРегистрации
            |                   И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
            |                   И (&парамНеОтбиратьСотрудников
            |                       ИЛИ Сотрудник В
            |                           (ВЫБРАТЬ
            |                               ВТСписокСотрудников.Сотрудник
            |                           ИЗ
            |                               ВТСписокСотрудников КАК ВТСписокСотрудников))
            |                   И (НЕ Сторно)
            |                   И (&ЕстьЕНВД
            |                           И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
            |                       ИЛИ ВидРасчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.РаспределятьПоБазовымНачислениям))
            |                   И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
            |                   И Результат <> 0
            |                   И ВидРасчета В (&парамСписокНачислений)) КАК ОсновныеНачисленияБазаЕСНДополнительныеНачисления) КАК База
            |
            |СГРУППИРОВАТЬ ПО
            |   База.Регистратор,
            |   База.ОблагаетсяЕНВДРазрез,
            |   База.КодДоходаЕСНРазрез,
            |   База.НомерСтроки
            |
            |ИНДЕКСИРОВАТЬ ПО
            |   Регистратор,
            |   НомерСтроки";
						
		Иначе	
			
			// для первичных начислений не собираем базу	
			БазаТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК КодДоходаЕСНРазрез,
			|	ЛОЖЬ КАК ОблагаетсяЕНВДРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ База";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаТекст;
		//временная таблица - База
		Запрос.Выполнить();
        
        ///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для прочих начислений
		
		ПолучатьБазу = Ложь;
			
		// ВТ_ПрочиеНачисления
		//
        Запрос.Текст =
        "ВЫБРАТЬ
        |	ОсновныеНачисления.Сотрудник,
        |	ОсновныеНачисления.Регистратор,
        |	ОсновныеНачисления.НомерСтроки,
        |	ОсновныеНачисления.ДатаНачалаСобытия,
        |	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
        |	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
        |	ВЫБОР
        |		КОГДА ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС)
        |			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
        |		ИНАЧЕ ОсновныеНачисления.ВидРасчета.СпособРасчета
        |	КОНЕЦ КАК СпособРасчета
        |ПОМЕСТИТЬ ВТ_ПрочиеНачисления
        |ИЗ
        |	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
        |ГДЕ
        |	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
        |	И (&парамНеОтбиратьСотрудников
        |			ИЛИ ОсновныеНачисления.Сотрудник В
        |				(ВЫБРАТЬ
        |					ВТСписокСотрудников.Сотрудник
        |				ИЗ
        |					ВТСписокСотрудников КАК ВТСписокСотрудников))
        |	И (НЕ ОсновныеНачисления.Сторно)
        |	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
        |	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
        |	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
        |	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
        |	И ОсновныеНачисления.Результат <> 0
        |	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
        Запрос.Выполнить();
		
		// ВТ_СотрудникиПериодыПрочиеНачисления
		// условия для виртуальной таблицы
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТ_СотрудникиПериодыПрочиеНачисления
		|ИЗ
		|	ВТ_ПрочиеНачисления КАК ОсновныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия";
		Результат = Запрос.Выполнить().Выгрузить();
		ПолучатьБазу = Результат[0].Количество > 0;

		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаПрочиеНачисленияТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|	БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеНачисления
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор КАК Регистратор,
			|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза,
			|		БазаСреднегоЗаработка.КодДоходаЕСНРазрез КАК КодДоходаЕСНРазрез,
			|		БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез КАК ОблагаетсяЕНВДРазрез
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаЕСНОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыЕСН,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор,
			|		ОсновныеНачисления.НомерСтроки,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ,
			|		БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|		БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаЕСНДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыЕСН,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки,
			|	БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|	БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаПрочиеНачисленияТекст = 
			"ВЫБРАТЬ
            |   НЕОПРЕДЕЛЕНО КАК Регистратор,
            |   0 КАК НомерСтроки,
            |   НЕОПРЕДЕЛЕНО КАК КодДоходаЕСНРазрез,
            |   ЛОЖЬ КАК ОблагаетсяЕНВДРазрез,
            |   0 КАК РезультатБаза
            |ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеНачисления";
			
		КонецЕсли;	

		Запрос.Текст = БазаСреднегоЗаработкаПрочиеНачисленияТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаПрочиеНачисления
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для прочих начислений
		///////////////////////////////////////////////////////////////////////////////////

        ///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для
        // пособия по уходу за ребенком и отпуск по беременности и родам
		// базу надо получать только при наличии ЕНВД
		
		ПолучатьБазу = Ложь;
		Если мЕНВД Тогда
			
			// ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком
			//
			Запрос.Текст =
			"ВЫБРАТЬ
            |   ОсновныеНачисления.Регистратор,
            |   ОсновныеНачисления.НомерСтроки,
            |   РасчетСреднегоЗаработка.Сотрудник,
            |   РасчетСреднегоЗаработка.ПериодРегистрации,
            |   ОсновныеНачисления.ДатаНачалаСобытия,
            |   ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
            |   ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
            |   ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
            |ПОМЕСТИТЬ ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком
            |ИЗ
            |   РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
            |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
            |       ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
            |           И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
            |           И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
            |           И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
            |           И (ОсновныеНачисления.Сотрудник = ВЫБОР
            |               КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
            |                       И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
            |                   ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
            |               ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
            |           КОНЕЦ)
            |           И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
            |ГДЕ
            |   ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
            |   И (НЕ ОсновныеНачисления.Сторно)
            |   И (&парамНеОтбиратьСотрудников
            |           ИЛИ ОсновныеНачисления.Сотрудник В
            |               (ВЫБРАТЬ
            |                   ВТСписокСотрудников.Сотрудник
            |               ИЗ
            |                   ВТСписокСотрудников КАК ВТСписокСотрудников))
            |   И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
            |   И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
            |   И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
            |   И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
            |   И ОсновныеНачисления.Результат <> 0
            |   И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			Запрос.Выполнить();
			
			// ВТ_СотрудникиПериодыОтпускПоБеременностиИРодамПоУходуЗаРебенком
			// условия для виртуальной таблицы
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
			|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
			|ПОМЕСТИТЬ ВТ_СотрудникиПериодыОтпускПоБеременностиИРодамПоУходуЗаРебенком
			|ИЗ
			|	ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК ОсновныеНачисления
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодРегистрации,
			|	ДатаНачалаСобытия";
			Результат = Запрос.Выполнить().Выгрузить();
			ПолучатьБазу = Результат[0].Количество > 0;
		КонецЕсли;
		
		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенкомТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|	БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор КАК Регистратор,
			|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза,
			|		БазаСреднегоЗаработка.КодДоходаЕСНРазрез КАК КодДоходаЕСНРазрез,
			|		БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез КАК ОблагаетсяЕНВДРазрез
			|	ИЗ
			|		ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаЕСНОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыЕСН,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ПериодРегистрации,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор,
			|		ОсновныеНачисления.НомерСтроки,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ,
			|		БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|		БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез
			|	ИЗ
			|		ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаЕСНДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыЕСН,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ПериодРегистрации,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки,
			|	БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|	БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенкомТекст = 
			"ВЫБРАТЬ
            |   НЕОПРЕДЕЛЕНО КАК Регистратор,
            |   0 КАК НомерСтроки,
            |   НЕОПРЕДЕЛЕНО КАК КодДоходаЕСНРазрез,
            |   ЛОЖЬ КАК ОблагаетсяЕНВДРазрез,
            |   0 КАК РезультатБаза
            |ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком";
			
		КонецЕсли;	

        Запрос.Текст = БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенкомТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для пособия по уходу за ребенком и отпуск по беременности и родам
		///////////////////////////////////////////////////////////////////////////////////

        ///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для 
        // прочих больничных
		// базу надо получать при наличии ЕНВД 		
		ПолучатьБазу = Ложь;
		ПрочиеБЛТекст = "";
		Если мЕНВД  Тогда
			
			// ВТ_ПрочиеБЛ
			//
			ПрочиеБЛТекст =
			"ВЫБРАТЬ
            |   ОсновныеНачисления.Регистратор,
            |   ОсновныеНачисления.НомерСтроки,
            |   РасчетСреднегоЗаработка.Сотрудник,
            |   ОсновныеНачисления.ДатаНачалаСобытия,
            |   ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
            |   ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
            |   ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
            |ПОМЕСТИТЬ ВТ_ПрочиеБЛ
            |ИЗ
            |   РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
            |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
            |       ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
            |           И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
            |           И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
            |           И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
            |           И (ОсновныеНачисления.Сотрудник = ВЫБОР
            |               КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
            |                       И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
            |                   ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
            |               ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
            |           КОНЕЦ)
            |           И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
            |ГДЕ
            |   ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
            |   И (НЕ ОсновныеНачисления.Сторно)
            |   И (&парамНеОтбиратьСотрудников
            |           ИЛИ ОсновныеНачисления.Сотрудник В
            |               (ВЫБРАТЬ
            |                   ВТСписокСотрудников.Сотрудник
            |               ИЗ
            |                   ВТСписокСотрудников КАК ВТСписокСотрудников))
            |   И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
            |   И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
            |   И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание))
            |   И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
            |   И ОсновныеНачисления.Результат <> 0
            |   И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(ПрочиеБЛТекст) Тогда
			// ВТ_СотрудникиПериодыПрочиеБЛ
			// условия для виртуальной таблицы
			
			Запрос.Текст = ПрочиеБЛТекст;
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
			|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
			|ПОМЕСТИТЬ ВТ_СотрудникиПериодыПрочиеБЛ
			|ИЗ
			|	ВТ_ПрочиеБЛ КАК ОсновныеНачисления
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ДатаНачалаСобытия";
			Результат = Запрос.Выполнить().Выгрузить();
			ПолучатьБазу = Результат[0].Количество > 0;	
		КонецЕсли;
		
		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаПрочиеБЛТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|	БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеБЛ
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор КАК Регистратор,
			|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза,
			|		БазаСреднегоЗаработка.КодДоходаЕСНРазрез КАК КодДоходаЕСНРазрез,
			|		БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез КАК ОблагаетсяЕНВДРазрез
			|	ИЗ
			|		ВТ_ПрочиеБЛ КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаЕСНОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыЕСН,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеБЛ КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор,
			|		ОсновныеНачисления.НомерСтроки,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ,
			|		БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|		БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез
			|	ИЗ
			|		ВТ_ПрочиеБЛ КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаЕСНДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыЕСН,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеБЛ КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки,
			|	БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|	БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаПрочиеБЛТекст = 
			"ВЫБРАТЬ
            |   НЕОПРЕДЕЛЕНО КАК Регистратор,
            |   0 КАК НомерСтроки,
            |   НЕОПРЕДЕЛЕНО КАК КодДоходаЕСНРазрез,
            |   ЛОЖЬ КАК ОблагаетсяЕНВДРазрез,
            |   0 КАК РезультатБаза
            |ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеБЛ";
			
		КонецЕсли;	

        Запрос.Текст = БазаСреднегоЗаработкаПрочиеБЛТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаПрочиеБЛ
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для прочих больничных
		///////////////////////////////////////////////////////////////////////////////////
        
        // объединим базы среднего в одну временную таблицу
	    БазаСреднегоЗаработкаТекст = 
		"ВЫБРАТЬ
		|	БазаСреднегоЗаработкаПрочиеНачисления.Регистратор КАК Регистратор,
		|	БазаСреднегоЗаработкаПрочиеНачисления.НомерСтроки КАК НомерСтроки,
		|	БазаСреднегоЗаработкаПрочиеНачисления.КодДоходаЕСНРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.ОблагаетсяЕНВДРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.РезультатБаза
		|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаПрочиеНачисления КАК БазаСреднегоЗаработкаПрочиеНачисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.Регистратор,
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.НомерСтроки,
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.КодДоходаЕСНРазрез,
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.ОблагаетсяЕНВДРазрез,
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.РезультатБаза
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БазаСреднегоЗаработкаПрочиеБЛ.Регистратор,
		|	БазаСреднегоЗаработкаПрочиеБЛ.НомерСтроки,
		|	БазаСреднегоЗаработкаПрочиеБЛ.КодДоходаЕСНРазрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.ОблагаетсяЕНВДРазрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.РезультатБаза
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаПрочиеБЛ КАК БазаСреднегоЗаработкаПрочиеБЛ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = БазаСреднегоЗаработкаТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработка
		Запрос.Выполнить();

        
        ОтражениеВУчетеСторноТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ОбособленноеПодразделение,
		|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТ_ОсновныеНачисленияСторно
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И (&парамНеОтбиратьСотрудников
		|			ИЛИ ОсновныеНачисления.Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТСписокСотрудников.Сотрудник
		|				ИЗ
		|					ВТСписокСотрудников КАК ВТСписокСотрудников))
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.Сторно
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ВидРасчета,
		|	СторнируемыйДокумент,
		|	ПериодДействияНачало,
		|	ПериодДействияКонец";
		
		Запрос.Текст = ОтражениеВУчетеСторноТекст;
		//временная таблица - ВТ_ОсновныеНачисленияСторно
		Результат = Запрос.Выполнить().Выгрузить();
		КоличествоСторноЗаписей = Результат[0].Количество; 
		
		Если КоличествоСторноЗаписей <> 0 Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОсновныеНачисленияСторно.Сотрудник КАК Сотрудник,
			|	ОсновныеНачисленияСторно.ВидРасчета КАК ВидРасчета,
			|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТ_СторноСотрудники
			|ИЗ
			|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисленияСторно
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ПО ОсновныеНачисленияСторно.СторнируемыйДокумент = ОсновныеНачисления.Регистратор
			|ГДЕ
			|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ВидРасчета,
			|	ПериодРегистрации";
			
			//временная таблица - ВТ_СторноСотрудники
			Запрос.Выполнить();

			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор КАК Регистратор,
			|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|	ЕСНОсновныеНачисления.КодДоходаЕСН,
			|	ЕСНОсновныеНачисления.ОблагаетсяЕНВД,
			|	ЕСНОсновныеНачисления.ПериодДействияНачало,
			|	ЕСНОсновныеНачисления.ПериодДействияКонец,
			|	ЕСНОсновныеНачисления.Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно
			|ИЗ
			|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ЕСНОсновныеНачисления.ВидРасчета КАК ВидРасчета,
			|			ЕСНОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
			|			ЕСНОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
			|			ЕСНОсновныеНачисления.Сотрудник КАК Сотрудник,
			|			ЕСНОсновныеНачисления.Результат КАК Результат,
			|			ЕСНОсновныеНачисления.КодДоходаЕСН КАК КодДоходаЕСН,
			|			ЕСНОсновныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
			|			ЕСНОсновныеНачисления.ДокументОснование КАК ДокументОснование
			|		ИЗ
			|			РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
			|		ГДЕ
			|			(ЕСНОсновныеНачисления.ПериодРегистрации, ЕСНОсновныеНачисления.Сотрудник, ЕСНОсновныеНачисления.ВидРасчета) В
			|					(ВЫБРАТЬ
			|						ОсновныеНачисления.ПериодРегистрации,
			|						ОсновныеНачисления.Сотрудник,
			|						ОсновныеНачисления.ВидРасчета
			|					ИЗ
			|						ВТ_СторноСотрудники КАК ОсновныеНачисления)) КАК ЕСНОсновныеНачисления
			|		ПО ОсновныеНачисления.ВидРасчета = ЕСНОсновныеНачисления.ВидРасчета
			|			И ОсновныеНачисления.Сотрудник = ЕСНОсновныеНачисления.Сотрудник
			|			И ОсновныеНачисления.СторнируемыйДокумент = ЕСНОсновныеНачисления.ДокументОснование
			|			И (ЕСНОсновныеНачисления.ПериодДействияНачало МЕЖДУ ОсновныеНачисления.ПериодДействияНачало И ОсновныеНачисления.ПериодДействияКонец
			|				ИЛИ ОсновныеНачисления.ПериодДействияНачало МЕЖДУ ЕСНОсновныеНачисления.ПериодДействияНачало И ЕСНОсновныеНачисления.ПериодДействияКонец)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК КодДоходаЕСН,
			|	ЛОЖЬ КАК ОблагаетсяЕНВД,
			|	НЕОПРЕДЕЛЕНО КАК ПериодДействияНачало,
			|	НЕОПРЕДЕЛЕНО КАК ПериодДействияКонец,
			|	0 КАК Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно";
			
		КонецЕсли;
		
		Запрос.Текст = ОтражениеВУчетеСторноТекст;
		//временная таблица - ВТ_ОтражениеВУчетеСторно
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_УчетПлановыхНачислений
		
		УчетПлановыхНачисленийТекст =
		 "ВЫБРАТЬ
		 |	ОсновныеНачисления.Регистратор КАК Регистратор,
		 |	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		 |	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		 |	ОсновныеНачисления.ДатаНачалаСобытия,
		 |	ОсновныеНачисления.ВидРасчета
		 |ПОМЕСТИТЬ ВТ_ОсновыеНачисленияДляПлановый
		 |ИЗ
		 |	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		 |ГДЕ
		 |	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		 |	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		 |	И (&парамНеОтбиратьСотрудников
		 |			ИЛИ ОсновныеНачисления.Сотрудник В
		 |				(ВЫБРАТЬ
		 |					ВТСписокСотрудников.Сотрудник
		 |				ИЗ
		 |					ВТСписокСотрудников КАК ВТСписокСотрудников))
		 |	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		 |	И ОсновныеНачисления.Результат <> 0
		 |	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		 |	И (НЕ ОсновныеНачисления.Сторно)
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ОсновныеНачисления.Регистратор КАК Регистратор,
		 |	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		 |	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		 |	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		 |	МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период
		 |ПОМЕСТИТЬ ВТ_СведенияОНачислениях
		 |ИЗ
		 |	ВТ_ОсновыеНачисленияДляПлановый КАК ОсновныеНачисления
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		 |		ПО ОсновныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		 |			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		 |			И ОсновныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	ОсновныеНачисления.Регистратор,
		 |	ОсновныеНачисления.НомерСтроки,
		 |	ОсновныеНачисления.Сотрудник,
		 |	ОсновныеНачисления.ВидРасчета
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН КАК КодДоходаЕСН,
		 |	ВЫБОР
		 |		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		 |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.ПустаяСсылка)
		 |		ИНАЧЕ РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД
		 |	КОНЕЦ КАК ОтнесениеРасходовКДеятельностиЕНВД,
		 |	СведенияОНачисленияхСрез.Регистратор КАК Регистратор,
		 |	СведенияОНачисленияхСрез.НомерСтроки КАК НомерСтроки
		 |ПОМЕСТИТЬ ВТ_УчетПлановыхНачислений
		 |ИЗ
		 |	РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОНачислениях КАК СведенияОНачисленияхСрез
		 |		ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		 |			И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		 |			И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		 |
		 |ИНДЕКСИРОВАТЬ ПО
		 |	Регистратор,
		 |	НомерСтроки";
		Запрос.Текст = УчетПлановыхНачисленийТекст;
		Запрос.Выполнить();
		
						
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		ОсновныеНачисленияТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ПодразделениеОрганизации,
		|	ОсновныеНачисления.ОбособленноеПодразделение
		|ПОМЕСТИТЬ ВТ_ОсновыеНачисления
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И (&парамНеОтбиратьСотрудников
		|			ИЛИ ОсновныеНачисления.Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТСписокСотрудников.Сотрудник
		|				ИЗ
		|					ВТСписокСотрудников КАК ВТСписокСотрудников))
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ОсновныеНачисления.Сторно)";
		Запрос.Текст = ОсновныеНачисленияТекст;
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		// таблица ВТ_УчетОсновногоЗаработка

		УчетОсновногоЗаработкаТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(УчетЗарВРеглУчете.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОРаботниках
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ПО ОсновныеНачисления.Сотрудник = УчетЗарВРеглУчете.Сотрудник
		|			И (УчетЗарВРеглУчете.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	СведенияОРаботникахСрез.Регистратор КАК Регистратор,
		|	СведенияОРаботникахСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработка
		|ИЗ
		|	РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОРаботниках КАК СведенияОРаботникахСрез
		|		ПО (СведенияОРаботникахСрез.Сотрудник = УчетЗарВРеглУчете.Сотрудник)
		|			И (СведенияОРаботникахСрез.Период = УчетЗарВРеглУчете.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		// таблица ВТ_УчетОсновногоЗаработкаПодразделения
		
		УчетОсновногоЗаработкаПодразделенияТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	МАКСИМУМ(УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОПодразделениях
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ОсновныеНачисления.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И (УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.ПодразделениеОрганизации,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодразделениеОрганизации,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПодразделенияхСрез.Регистратор КАК Регистратор,
		|	СведенияОПодразделенияхСрез.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаПодразделения
		|ИЗ
		|	ВТ_СведенияОПодразделениях КАК СведенияОПодразделенияхСрез
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО СведенияОПодразделенияхСрез.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И СведенияОПодразделенияхСрез.Период = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";		
		Запрос.Текст = УчетОсновногоЗаработкаПодразделенияТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		// таблица ВТ_УчетОсновногоЗаработкаОрганизации
		
		УчетОсновногоЗаработкаОрганизацииТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	МАКСИМУМ(УчетОсновногоЗаработкаОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияПоОрганизации
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ОсновныеНачисления.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И (УчетОсновногоЗаработкаОрганизации.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.ОбособленноеПодразделение,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбособленноеПодразделение,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПоОрганизации.Регистратор КАК Регистратор,
		|	СведенияПоОрганизации.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаОрганизации
		|ИЗ
		|	ВТ_СведенияПоОрганизации КАК СведенияПоОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО СведенияПоОрганизации.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И СведенияПоОрганизации.Период = УчетОсновногоЗаработкаОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";		
		Запрос.Текст = УчетОсновногоЗаработкаОрганизацииТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		///////////////////////////////////////////////////////////////////////////////////

		
		ДанныеУчетаТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.КодДоходаЕСН
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН <> ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН
		|		ИНАЧЕ ОсновныеНачисления.ВидРасчета.КодДоходаЕСН
		|	КОНЕЦ КАК КодДоходаЕСН,
		|	ОтражениеВУчетеСторно.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ОтражениеВУчетеСторно.ПериодДействияНачало КАК ПериодДействияНачалоСторно,
		|	ОтражениеВУчетеСторно.ПериодДействияКонец КАК ПериодДействияКонецСторно,
		|	ВЫБОР
		|		КОГДА Не &ЕстьЕНВД
		|			ТОГДА 0
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|			ТОГДА 100
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|			ТОГДА 0
		|		КОГДА ОсновныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 100
		|		КОГДА ОсновныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 0
		|		КОГДА Распределение.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА Распределение.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА ЕНВДПроцент.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
		|		КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД 
		|			ТОГДА 100
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		КОГДА УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентЕНВД,
		|	Распределение.ДоляСпособаОтражения КАК ДоляСпособаОтражения,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.Организация КАК Организация,
		|	ОсновныеНачисления.Результат КАК Результат,
		|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|	ОсновныеНачисления.Сторно КАК Сторно,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий)
		|		ИНАЧЕ ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете
		|	КОНЕЦ КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете КАК СтратегияОтраженияВУчете,
		|	ОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования,
		|	ОсновныеНачисления.Показатель1 КАК СреднийДневнойЗаработок,
		|	ОсновныеНачисления.НормаДней КАК НормаДней,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УчитыватьКакНовыйСтраховойСлучай,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ОсновныеНачисления.Сотрудник.Наименование КАК СотрудникНаименование
		|ПОМЕСТИТЬ ДанныеУчета
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетПлановыхНачислений КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ОсновныеНачисления.Регистратор = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = РеглУчетПлановыхНачисленийРаботниковОрганизаций.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетЗарВРеглУчете
		|		ПО ОсновныеНачисления.Регистратор = УчетЗарВРеглУчете.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетЗарВРеглУчете.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|		ПО ОсновныеНачисления.Сотрудник = Распределение.Сотрудник
		|			И (НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ) = Распределение.ПериодРегистрации)
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН ЕСТЬ NULL )
		|			И (ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия))
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентДеятельностиЕНВДСотрудников КАК ЕНВДПроцент
		|		ПО ОсновныеНачисления.Сотрудник = ЕНВДПроцент.Сотрудник
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|			И (ВЫБОР
		|				КОГДА ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия)
		|					ТОГДА ВЫБОР
		|							КОГДА НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ) > ОсновныеНачисления.ПериодРегистрации
		|								ТОГДА ОсновныеНачисления.ПериодРегистрации
		|							ИНАЧЕ НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ)
		|						КОНЕЦ
		|				КОГДА ОсновныеНачисления.ПериодДействия > ОсновныеНачисления.ПериодРегистрации
		|					ТОГДА ОсновныеНачисления.ПериодРегистрации
		|				ИНАЧЕ ОсновныеНачисления.ПериодДействия
		|			КОНЕЦ = ЕНВДПроцент.ПериодРегистрации)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
		|		ПО ОсновныеНачисления.Сотрудник = ЕСНОсновныеНачисления.Сотрудник
		|			И (ЕСНОсновныеНачисления.ВидРасчета = ОсновныеНачисления.ВидРасчета)
		|			И (ЕСНОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации)
		|			И (ЕСНОсновныеНачисления.ПериодДействияНачало >= ОсновныеНачисления.ПериодДействияНачало)
		|			И (ЕСНОсновныеНачисления.ПериодДействияКонец <= ОсновныеНачисления.ПериодДействияКонец)
		|			И (ЕСНОсновныеНачисления.ДокументОснование = ОсновныеНачисления.Регистратор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ОсновныеНачисления.Регистратор = ОтражениеВУчетеСторно.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|ГДЕ
		|	ЕСНОсновныеНачисления.Сотрудник ЕСТЬ NULL 
		|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И ОсновныеНачисления.Результат <> 0
		|	И (&парамНеОтбиратьСотрудников
		|			ИЛИ ОсновныеНачисления.Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТСписокСотрудников.Сотрудник
		|				ИЗ
		|					ВТСписокСотрудников КАК ВТСписокСотрудников))
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		
		Запрос.Текст = ДанныеУчетаТекст;
		//временная таблица - ДанныеУчета
		Запрос.Выполнить();
		
		// данные о пособиях будем собирать с момента вступления в силу Закона 255-ФЗ
		Если НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации) >= НачалоМесяца(ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006()) Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор КАК Регистратор,
			|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|	ОсновныеНачисления.ПериодДействия,
			|	ОсновныеНачисления.ПериодДействияНачало,
			|	ОсновныеНачисления.ПериодДействияКонец,
			|	ОсновныеНачисления.Показатель1,
			|	ОсновныеНачисления.Показатель2,
			|	ОсновныеНачисления.Показатель3,
			|	ОсновныеНачисления.Сторно,
			|	ОсновныеНачисления.Результат,
			|	ВЫБОР
			|		КОГДА ОсновныеНачисления.ПодразделениеОрганизации.КодПоОКАТО <> """"
			|			ТОГДА ВЫБОР
			|					КОГДА ОсновныеНачисления.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
			|					ТОГДА ОсновныеНачисления.ПодразделениеОрганизации.РайонныйКоэффициентРФ
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОГДА ОсновныеНачисления.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
			|			ТОГДА ОсновныеНачисления.ОбособленноеПодразделение.РайонныйКоэффициентРФ
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК РайонныйКоэффициентРФ,
			|	ОсновныеНачисления.ПодразделениеОрганизации.КодПоОКАТО КАК КодПоОКАТОПодразделения,
			|	ВЫРАЗИТЬ(ОсновныеНачисления.Показатель1 * 0.4 * (ВЫРАЗИТЬ(РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ОсновныеНачисления.ПериодДействия, ГОД), ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ОсновныеНачисления.ПериодДействия, ГОД), СЕКУНДА, 1), ДЕНЬ) / 12 КАК ЧИСЛО(15, 2))) КАК ЧИСЛО(15, 2)) КАК МесячноеПособие
			|ПОМЕСТИТЬ ВТЗаписиПособийПоУходу
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|ГДЕ
			|	ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет)
			|	И (&парамНеОтбиратьСотрудников
			|			ИЛИ ОсновныеНачисления.Сотрудник В
			|				(ВЫБРАТЬ
			|					ВТСписокСотрудников.Сотрудник
			|				ИЗ
			|					ВТСписокСотрудников КАК ВТСписокСотрудников))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			Запрос.Выполнить();
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор КАК Регистратор,
			|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|		КОГДА ОсновныеНачисления.Результат = 0
			|			ТОГДА 0
			|		КОГДА ОсновныеНачисления.Показатель2 = 0
			|			ТОГДА 0
			|		КОГДА ОсновныеНачисления.Показатель3 = 0
			|			ТОГДА 0
			|		КОГДА ОсновныеНачисления.Показатель2 = ОсновныеНачисления.Показатель3
			|			ТОГДА 1
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ОсновныеНачисления.МесячноеПособие > (ВЫРАЗИТЬ(МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет.Размер * ОсновныеНачисления.РайонныйКоэффициентРФ КАК ЧИСЛО(15, 2)))
			|					ТОГДА ВЫРАЗИТЬ(МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет.Размер * ОсновныеНачисления.РайонныйКоэффициентРФ КАК ЧИСЛО(15, 2))
			|				КОГДА ОсновныеНачисления.МесячноеПособие < (ВЫРАЗИТЬ(МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет.Размер * ОсновныеНачисления.РайонныйКоэффициентРФ КАК ЧИСЛО(15, 2)))
			|					ТОГДА ВЫРАЗИТЬ(МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет.Размер * ОсновныеНачисления.РайонныйКоэффициентРФ КАК ЧИСЛО(15, 2))
			|				ИНАЧЕ ОсновныеНачисления.МесячноеПособие
			|			КОНЕЦ * ВЫБОР
			|				КОГДА ОсновныеНачисления.ПериодДействияНачало = ОсновныеНачисления.ПериодДействия
			|						И ОсновныеНачисления.ПериодДействияКонец = КОНЕЦПЕРИОДА(ОсновныеНачисления.ПериодДействия, МЕСЯЦ)
			|					ТОГДА 1
			|				ИНАЧЕ РАЗНОСТЬДАТ(ОсновныеНачисления.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ОсновныеНачисления.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ) / РАЗНОСТЬДАТ(ОсновныеНачисления.ПериодДействия, ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ОсновныеНачисления.ПериодДействия, МЕСЯЦ), СЕКУНДА, 1), ДЕНЬ)
			|			КОНЕЦ * ВЫБОР
			|				КОГДА ОсновныеНачисления.Сторно
			|					ТОГДА -1
			|				ИНАЧЕ 1
			|			КОНЕЦ / ОсновныеНачисления.Результат
			|	КОНЕЦ КАК ДоляПособияНаПервогоРебенка
			|ПОМЕСТИТЬ РасчетПособийПоУходуЗаПервымРебенком
			|ИЗ
			|	ВТЗаписиПособийПоУходу КАК ОсновныеНачисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ЗаписиПособийПоУходу.Регистратор КАК Регистратор,
			|			ЗаписиПособийПоУходу.НомерСтроки КАК НомерСтроки,
			|			ГосударственныеПособия.ВидПособия КАК ВидПособия,
			|			МАКСИМУМ(ГосударственныеПособия.Период) КАК ДатаИзмененияРазмераПособия
			|		ИЗ
			|			ВТЗаписиПособийПоУходу КАК ЗаписиПособийПоУходу
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГосударственныеПособия КАК ГосударственныеПособия
			|				ПО ЗаписиПособийПоУходу.ПериодДействия >= ГосударственныеПособия.Период
			|		ГДЕ
			|			ГосударственныеПособия.ВидПособия = ЗНАЧЕНИЕ(Перечисление.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет)
			|		
			|		СГРУППИРОВАТЬ ПО
			|			ЗаписиПособийПоУходу.Регистратор,
			|			ЗаписиПособийПоУходу.НомерСтроки,
			|			ГосударственныеПособия.ВидПособия) КАК ДатыИзРегистраМинимум
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГосударственныеПособия КАК МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет
			|			ПО ДатыИзРегистраМинимум.ВидПособия = МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет.ВидПособия
			|				И ДатыИзРегистраМинимум.ДатаИзмененияРазмераПособия = МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет.Период
			|		ПО ОсновныеНачисления.Регистратор = ДатыИзРегистраМинимум.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = ДатыИзРегистраМинимум.НомерСтроки
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ЗаписиПособийПоУходу.Регистратор КАК Регистратор,
			|			ЗаписиПособийПоУходу.НомерСтроки КАК НомерСтроки,
			|			ГосударственныеПособия.ВидПособия КАК ВидПособия,
			|			МАКСИМУМ(ГосударственныеПособия.Период) КАК ДатаИзмененияРазмераПособия
			|		ИЗ
			|			ВТЗаписиПособийПоУходу КАК ЗаписиПособийПоУходу
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГосударственныеПособия КАК ГосударственныеПособия
			|				ПО ЗаписиПособийПоУходу.ПериодДействия >= ГосударственныеПособия.Период
			|		ГДЕ
			|			ГосударственныеПособия.ВидПособия = ЗНАЧЕНИЕ(Перечисление.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет)
			|		
			|		СГРУППИРОВАТЬ ПО
			|			ЗаписиПособийПоУходу.Регистратор,
			|			ЗаписиПособийПоУходу.НомерСтроки,
			|			ГосударственныеПособия.ВидПособия) КАК ДатыИзРегистраМаксимум
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГосударственныеПособия КАК МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет
			|			ПО ДатыИзРегистраМаксимум.ВидПособия = МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет.ВидПособия
			|				И ДатыИзРегистраМаксимум.ДатаИзмененияРазмераПособия = МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет.Период
			|		ПО ОсновныеНачисления.Регистратор = ДатыИзРегистраМаксимум.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = ДатыИзРегистраМаксимум.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
			|	0 КАК ДоляПособияНаПервогоРебенка
			|ПОМЕСТИТЬ РасчетПособийПоУходуЗаПервымРебенком";
		КонецЕсли;
		
		//временная таблица - РасчетПособийПоУходуЗаПервымРебенком
		Запрос.Выполнить();
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДанныеУчета.Регистратор КАК Регистратор,
		|	ДанныеУчета.Регистратор КАК ДокументОснование,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.СотрудникНаименование КАК СотрудникНаименование,
		|	ДанныеУчета.ФизЛицо КАК Физлицо,
		|	ДанныеУчета.КодДоходаЕСН,
		|	ДанныеУчета.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ДанныеУчета.РезультатСторно КАК РезультатСторно,
		|	ДанныеУчета.ПроцентЕНВД,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.Результат КАК Результат,
		|	ДанныеУчета.ПериодДействияНачало,
		|	ДанныеУчета.ПериодДействияКонец,
		|	ДанныеУчета.ГрафикРаботы,
		|	ДанныеУчета.Сторно,
		|	ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ДанныеУчета.СтратегияОтраженияВУчете,
		|	ДанныеУчета.ВидУчетаВремени,
		|	ЕСТЬNULL(База.КодДоходаЕСНРазрез, БазаСреднегоЗаработка.КодДоходаЕСНРазрез) КАК КодДоходаЕСНРазрез,
		|	ЕСТЬNULL(База.ОблагаетсяЕНВДРазрез, БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез) КАК ОблагаетсяЕНВДРазрез,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ДоляСпособаОтражения ЕСТЬ НЕ NULL 
		|			ТОГДА ДанныеУчета.ДоляСпособаОтражения
		|		КОГДА База.РезультатБаза ЕСТЬ НЕ NULL 
		|			ТОГДА База.РезультатБаза
		|		ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|	КОНЕЦ КАК РезультатБаза,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ПериодДействияНачало >= &парамДатаЗакона255ФЗ
		|			ТОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(РазмерыММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ДанныеУчета.ПериодДействияНачало, МЕСЯЦ)) КАК ЧИСЛО(10, 2))) * ЕСТЬNULL(ДанныеФПД.КалендарныхДней, 0)
		|		КОГДА ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеПериодДействия, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(РазмерыММОТ.Размер, 0) / ДанныеГрафика.ОсновноеЗначениеПериодДействия КАК ЧИСЛО(10, 2))) * ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия, 0)
		|	КОНЕЦ КАК ВПределахММОТ,
		|	ЕСТЬNULL(ДанныеУчетаБЛ.ДоляБЛЗаСчетРаботодателя, 0) КАК ДоляБЛЗаСчетРаботодателя,
		|	ЕСТЬNULL(ДанныеУчетаБЛ.ДниЗаСчетРаботодателя, 0) КАК ДниЗаСчетРаботодателя,
		|	ЕСТЬNULL(ДанныеУчетаБЛ.ВсегоДнейНетрудоспособности, 0) КАК ВсегоДнейНетрудоспособности,
		|	ДанныеУчета.НормаДней,
		|	ДанныеУчета.ВидПособияСоциальногоСтрахования,
		|	ЕСТЬNULL(ДанныеУчета.СреднийДневнойЗаработок, 0) КАК СреднийДневнойЗаработок,
		|	ЕСТЬNULL(РасчетПособийПоУходуЗаПервымРебенком.ДоляПособияНаПервогоРебенка, 0) КАК ДоляПособияНаПервогоРебенка,
		|	ДанныеУчета.ДоляСпособаОтражения,
		|	ДанныеУчета.ДатаНачалаСобытия,
		|	ДанныеУчета.УчитыватьКакНовыйСтраховойСлучай,
		|	0 КАК Скидка,
		|	ДанныеУчета.ПериодДействияНачалоСторно КАК ПериодДействияНачалоСторно,
		|	ДанныеУчета.ПериодДействияКонецСторно КАК ПериодДействияКонецСторно,
		|	ЛОЖЬ КАК ЭтоЕдиновременноеПособиеФСС,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоПособияФСС
		|ИЗ
		|	ДанныеУчета КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ База КАК База
		|		ПО ДанныеУчета.Регистратор = База.Регистратор
		|			И ДанныеУчета.НомерСтроки = База.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.Регистратор = БазаСреднегоЗаработка.Регистратор
		|			И ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РасчетПособийПоУходуЗаПервымРебенком КАК РасчетПособийПоУходуЗаПервымРебенком
		|		ПО ДанныеУчета.Регистратор = РасчетПособийПоУходуЗаПервымРебенком.Регистратор
		|			И ДанныеУчета.НомерСтроки = РасчетПособийПоУходуЗаПервымРебенком.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОсновныеНачисления.Регистратор КАК Регистратор,
		|			ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|			ЕСТЬNULL(ВЫБОР
		|					КОГДА РАЗНОСТЬДАТ(ОсновныеНачисления.ДатаНачалаСобытия, ОсновныеНачисления.ПериодДействияНачало, ДЕНЬ) >= 2
		|						ТОГДА 0
		|					КОГДА ОсновныеНачисления.ДатаНачалаСобытия >= &парамДатаЗакона255ФЗ
		|						ТОГДА ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя / ФактическийПериодДействияЗаписей.КалендарныхДней
		|					КОГДА ВЫБОР
		|							КОГДА ОсновныеНачисления.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
		|								ТОГДА ОсновныеНачисления.НормаДней
		|							ИНАЧЕ ОсновныеНачисления.НормаЧасов
		|						КОНЕЦ = 0
		|						ТОГДА 0
		|					ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение) / ВЫБОР
		|							КОГДА ОсновныеНачисления.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
		|								ТОГДА ОсновныеНачисления.НормаДней
		|							ИНАЧЕ ОсновныеНачисления.НормаЧасов
		|						КОНЕЦ
		|				КОНЕЦ, 0) КАК ДоляБЛЗаСчетРаботодателя,
		|			ЕСТЬNULL(ВЫБОР
		|					КОГДА РАЗНОСТЬДАТ(ОсновныеНачисления.ДатаНачалаСобытия, ОсновныеНачисления.ПериодДействияНачало, ДЕНЬ) >= 2
		|						ТОГДА 0
		|					КОГДА ОсновныеНачисления.ДатаНачалаСобытия >= &парамДатаЗакона255ФЗ
		|						ТОГДА ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя
		|					ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение)
		|				КОНЕЦ, 0) КАК ДниЗаСчетРаботодателя,
		|			ЕСТЬNULL(ВЫБОР
		|					КОГДА ОсновныеНачисления.ДатаНачалаСобытия >= &парамДатаЗакона255ФЗ
		|						ТОГДА ФактическийПериодДействияЗаписей.КалендарныхДней
		|					ИНАЧЕ ОсновныеНачисления.НормаДней
		|				КОНЕЦ, 0) КАК ВсегоДнейНетрудоспособности
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ОсновныеНачисления.Регистратор КАК Регистратор,
		|				ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|				ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|				ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|				ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|				ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|				ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|				ОсновныеНачисления.НормаДней КАК НормаДней,
		|				ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|				ОсновныеНачисления.НормаЧасов КАК НормаЧасов
		|			ИЗ
		|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|			ГДЕ
		|				ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|				И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|				И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|				И ОсновныеНачисления.Результат <> 0
		|				И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|				И ОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
		|				И ОсновныеНачисления.ДатаНачалаСобытия >= &парамДатаЗакона202ФЗ
		|				И (&парамНеОтбиратьСотрудников
		|						ИЛИ ОсновныеНачисления.Сотрудник В
		|							(ВЫБРАТЬ
		|								ВТСписокСотрудников.Сотрудник
		|							ИЗ
		|								ВТСписокСотрудников КАК ВТСписокСотрудников))) КАК ОсновныеНачисления
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
		|				ПО ОсновныеНачисления.ГрафикРаботы = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
		|					И ОсновныеНачисления.ВидУчетаВремени = ГрафикиРаботыПоВидамВремени.ВидУчетаВремени
		|					И (ОсновныеНачисления.ПериодДействия < &парамДатаЗакона255ФЗ)
		|					И ОсновныеНачисления.ПериодДействияНачало <= ГрафикиРаботыПоВидамВремени.Дата
		|					И (ДОБАВИТЬКДАТЕ(ОсновныеНачисления.ДатаНачалаСобытия, ДЕНЬ, 1) >= ГрафикиРаботыПоВидамВремени.Дата)
		|					И ОсновныеНачисления.ПериодДействияКонец >= ГрафикиРаботыПоВидамВремени.Дата
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ФактическийПериодДействияЗаписей.Регистратор КАК Регистратор,
		|					ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|					СУММА(ВЫБОР
		|							КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало = ФактическийПериодДействияЗаписей.ДатаНачалаСобытия
		|								ТОГДА ВЫБОР
		|										КОГДА ФактическийПериодДействияЗаписей.ПериодДействияКонец >= ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|											ТОГДА 2
		|										ИНАЧЕ 1
		|									КОНЕЦ
		|							КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало > ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|								ТОГДА 0
		|							ИНАЧЕ 1
		|						КОНЕЦ) КАК ДнейЗаСчетРаботодателя,
		|					СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|				ИЗ
		|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|							ВидРасчета В (&парамСписокНачислений)
		|								И ОбособленноеПодразделение = &парамОрганизация
		|								И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|								И ВидРасчета.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
		|								И ПериодДействия >= &парамДатаЗакона255ФЗ
		|								И ПериодРегистрации = &парамПериодРегистрации
		|								И (&парамНеОтбиратьСотрудников
		|									ИЛИ Сотрудник В
		|										(ВЫБРАТЬ
		|											ВТСписокСотрудников.Сотрудник
		|										ИЗ
		|											ВТСписокСотрудников КАК ВТСписокСотрудников))) КАК ФактическийПериодДействияЗаписей
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ФактическийПериодДействияЗаписей.Регистратор,
		|					ФактическийПериодДействияЗаписей.НомерСтроки) КАК ФактическийПериодДействияЗаписей
		|				ПО ОсновныеНачисления.Регистратор = ФактическийПериодДействияЗаписей.Регистратор
		|					И ОсновныеНачисления.НомерСтроки = ФактическийПериодДействияЗаписей.НомерСтроки
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОсновныеНачисления.Регистратор,
		|			ОсновныеНачисления.ВидУчетаВремени,
		|			ОсновныеНачисления.ДатаНачалаСобытия,
		|			ОсновныеНачисления.ПериодДействияНачало,
		|			ОсновныеНачисления.ПериодДействияКонец,
		|			ОсновныеНачисления.НормаЧасов,
		|			ОсновныеНачисления.НормаДней,
		|			ОсновныеНачисления.НомерСтроки,
		|			ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя,
		|			ФактическийПериодДействияЗаписей.КалендарныхДней) КАК ДанныеУчетаБЛ
		|		ПО ДанныеУчета.Регистратор = ДанныеУчетаБЛ.Регистратор
		|			И ДанныеУчета.НомерСтроки = ДанныеУчетаБЛ.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДатыАктуальностиММОТ.Регистратор КАК Регистратор,
		|			ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
		|			МинимальнаяОплатаТрудаРФ.Размер КАК Размер
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ОсновныеНачисления.Регистратор КАК Регистратор,
		|				ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|				МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
		|			ИЗ
		|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|					ПО (МинимальнаяОплатаТрудаРФ.Период <= ОсновныеНачисления.ПериодДействияНачало)
		|			ГДЕ
		|				ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|				И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|				И ОсновныеНачисления.Результат <> 0
		|				И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|				И ОсновныеНачисления.ВидРасчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
		|				И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|				И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|				И (&парамНеОтбиратьСотрудников
		|						ИЛИ ОсновныеНачисления.Сотрудник В
		|							(ВЫБРАТЬ
		|								ВТСписокСотрудников.Сотрудник
		|							ИЗ
		|								ВТСписокСотрудников КАК ВТСписокСотрудников))
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ОсновныеНачисления.НомерСтроки,
		|				ОсновныеНачисления.Регистратор) КАК ДатыАктуальностиММОТ
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|				ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)) КАК РазмерыММОТ
		|		ПО ДанныеУчета.Регистратор = РазмерыММОТ.Регистратор
		|			И ДанныеУчета.НомерСтроки = РазмерыММОТ.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
		|				ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|					И ВидРасчета В (&парамСписокНачислений)
		|					И ОбособленноеПодразделение = &парамОрганизация
		|					И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|					И ПериодДействия < &парамДатаЗакона255ФЗ
		|					И ПериодРегистрации = &парамПериодРегистрации
		|					И (&парамНеОтбиратьСотрудников
		|						ИЛИ Сотрудник В
		|							(ВЫБРАТЬ
		|								ВТСписокСотрудников.Сотрудник
		|							ИЗ
		|								ВТСписокСотрудников КАК ВТСписокСотрудников))) КАК ДанныеГрафика
		|		ПО ДанныеУчета.Регистратор = ДанныеГрафика.Регистратор
		|			И ДанныеУчета.НомерСтроки = ДанныеГрафика.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ФактическийПериодДействияЗаписей.Регистратор КАК Регистратор,
		|			ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|			СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|		ИЗ
		|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|					ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|						И ВидРасчета В (&парамСписокНачислений)
		|						И ОбособленноеПодразделение = &парамОрганизация
		|						И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|						И ПериодДействия >= &парамДатаЗакона255ФЗ
		|						И ПериодРегистрации = &парамПериодРегистрации
		|						И (&парамНеОтбиратьСотрудников
		|							ИЛИ Сотрудник В
		|								(ВЫБРАТЬ
		|									ВТСписокСотрудников.Сотрудник
		|								ИЗ
		|									ВТСписокСотрудников КАК ВТСписокСотрудников))) КАК ФактическийПериодДействияЗаписей
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ФактическийПериодДействияЗаписей.Регистратор,
		|			ФактическийПериодДействияЗаписей.НомерСтроки) КАК ДанныеФПД
		|		ПО ДанныеУчета.Регистратор = ДанныеФПД.Регистратор
		|			И ДанныеУчета.НомерСтроки = ДанныеФПД.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Регистратор,
		|	НомерСтроки,
		|	КодДоходаЕСНРазрез,
		|	ОблагаетсяЕНВДРазрез
		|АВТОУПОРЯДОЧИВАНИЕ";
		
    Иначе
        
		// обработка дополнительных начислений
		Если Не ЭтоПервичныеНачисления Тогда
			
			//соберем базу для зависимых начислений
			БазаТекст = 
			"ВЫБРАТЬ
            |   База.Регистратор КАК Регистратор,
            |   База.НомерСтроки КАК НомерСтроки,
            |   База.КодДоходаЕСНРазрез,
            |   База.ОблагаетсяЕНВДРазрез,
            |   СУММА(База.РезультатБаза) КАК РезультатБаза
            |ПОМЕСТИТЬ База
            |ИЗ
            |   (ВЫБРАТЬ
            |       ДополнительныеНачисленияБазаЕСНОсновныеНачисления.Регистратор КАК Регистратор,
            |       ДополнительныеНачисленияБазаЕСНОсновныеНачисления.НомерСтроки КАК НомерСтроки,
            |       ДополнительныеНачисленияБазаЕСНОсновныеНачисления.КодДоходаЕСНРазрез КАК КодДоходаЕСНРазрез,
            |       ДополнительныеНачисленияБазаЕСНОсновныеНачисления.ОблагаетсяЕНВДРазрез КАК ОблагаетсяЕНВДРазрез,
            |       ДополнительныеНачисленияБазаЕСНОсновныеНачисления.РезультатБаза КАК РезультатБаза
            |   ИЗ
            |       РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаЕСНОсновныеНачисления(
            |               &парамИзмерения,
            |               &парамИзмерения,
            |               &парамРазрезыЕСН,
            |               Организация = &парамГоловнаяОрганизация
            |                   И НАЧАЛОПЕРИОДА(ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
            |                   И (&парамНеОтбиратьСотрудников
            |                       ИЛИ Сотрудник В
            |                           (ВЫБРАТЬ
            |                               ВТСписокСотрудников.Сотрудник
            |                           ИЗ
            |                               ВТСписокСотрудников КАК ВТСписокСотрудников))
            |                   И (НЕ Сторно)
            |                   И ВидРасчета В (&парамСписокНачислений)
            |                   И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
            |                   И ВидРасчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.РаспределятьПоБазовымНачислениям)) КАК ДополнительныеНачисленияБазаЕСНОсновныеНачисления
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       ДополнительныеНачисленияБазаЕСНДополнительныеНачисления.Регистратор,
            |       ДополнительныеНачисленияБазаЕСНДополнительныеНачисления.НомерСтроки,
            |       ДополнительныеНачисленияБазаЕСНДополнительныеНачисления.КодДоходаЕСНРазрез,
            |       ДополнительныеНачисленияБазаЕСНДополнительныеНачисления.ОблагаетсяЕНВДРазрез,
            |       ДополнительныеНачисленияБазаЕСНДополнительныеНачисления.РезультатБаза
            |   ИЗ
            |       РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаЕСНДополнительныеНачисления(
            |               &парамИзмерения,
            |               &парамИзмерения,
            |               &парамРазрезыЕСН,
            |               Организация = &парамГоловнаяОрганизация
            |                   И НАЧАЛОПЕРИОДА(ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
            |                   И (&парамНеОтбиратьСотрудников
            |                       ИЛИ Сотрудник В
            |                           (ВЫБРАТЬ
            |                               ВТСписокСотрудников.Сотрудник
            |                           ИЗ
            |                               ВТСписокСотрудников КАК ВТСписокСотрудников))
            |                   И (НЕ Сторно)
            |                   И ВидРасчета В (&парамСписокНачислений)
            |                   И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
            |                   И ВидРасчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.РаспределятьПоБазовымНачислениям)) КАК ДополнительныеНачисленияБазаЕСНДополнительныеНачисления) КАК База
            |
            |СГРУППИРОВАТЬ ПО
            |   База.Регистратор,
            |   База.ОблагаетсяЕНВДРазрез,
            |   База.КодДоходаЕСНРазрез,
            |   База.НомерСтроки
            |
            |ИНДЕКСИРОВАТЬ ПО
            |   Регистратор,
            |   НомерСтроки";
			
		Иначе	
			
			// для первичных начислений не собираем базу	
			БазаТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПустаяСсылка) КАК КодДоходаЕСНРазрез,
			|	ЛОЖЬ КАК ОблагаетсяЕНВДРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ База";
			
		КонецЕсли;
		
		Запрос.Текст = БазаТекст;
		//временная таблица - База
		Запрос.Выполнить();
		
		 ///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для прочих начислений
		
		ПолучатьБазу = Ложь;
			
		// ВТ_ПрочиеНачисления
		//
        Запрос.Текст =
        "ВЫБРАТЬ
        |	ДополнительныеНачисления.Сотрудник,
        |	ДополнительныеНачисления.Регистратор,
        |	ДополнительныеНачисления.НомерСтроки,
        |	ДополнительныеНачисления.ДатаНачалаСобытия,
        |	ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
        |	ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
        |	ДополнительныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
        |ПОМЕСТИТЬ ВТ_ПрочиеНачисления
        |ИЗ
        |	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
        |ГДЕ
        |	ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
        |	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
        |	И (&парамНеОтбиратьСотрудников
        |			ИЛИ ДополнительныеНачисления.Сотрудник В
        |				(ВЫБРАТЬ
        |					ВТСписокСотрудников.Сотрудник
        |				ИЗ
        |					ВТСписокСотрудников КАК ВТСписокСотрудников))
        |	И ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
        |	И ДополнительныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
        |	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
        |	И ДополнительныеНачисления.Результат <> 0
        |	И (НЕ ДополнительныеНачисления.Сторно)";
        Запрос.Выполнить();
		
		// ВТ_СотрудникиПериодыПрочиеНачисления
		// условия для виртуальной таблицы
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТ_СотрудникиПериодыПрочиеНачисления
		|ИЗ
		|	ВТ_ПрочиеНачисления КАК ДополнительныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия";
		Результат = Запрос.Выполнить().Выгрузить();
		ПолучатьБазу = Результат[0].Количество > 0;

		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|	БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка
			|ИЗ
			|	(ВЫБРАТЬ
			|		ДополнительныеНачисления.Регистратор КАК Регистратор,
			|		ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза,
			|		БазаСреднегоЗаработка.КодДоходаЕСНРазрез КАК КодДоходаЕСНРазрез,
			|		БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез КАК ОблагаетсяЕНВДРазрез
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ДополнительныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаЕСНОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыЕСН,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ДополнительныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ДополнительныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ДополнительныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДополнительныеНачисления.Регистратор,
			|		ДополнительныеНачисления.НомерСтроки,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ,
			|		БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|		БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ДополнительныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаЕСНДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыЕСН,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ДополнительныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ДополнительныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки,
			|	БазаСреднегоЗаработка.КодДоходаЕСНРазрез,
			|	БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаТекст = 
			"ВЫБРАТЬ
            |   НЕОПРЕДЕЛЕНО КАК Регистратор,
            |   0 КАК НомерСтроки,
            |   НЕОПРЕДЕЛЕНО КАК КодДоходаЕСНРазрез,
            |   ЛОЖЬ КАК ОблагаетсяЕНВДРазрез,
            |   0 КАК РезультатБаза
            |ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка";
			
		КонецЕсли;	

		Запрос.Текст = БазаСреднегоЗаработкаТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработка
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для прочих начислений
		///////////////////////////////////////////////////////////////////////////////////

 		ОтражениеВУчетеСторноТекст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ДополнительныеНачисления.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисленияСторно
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И (&парамНеОтбиратьСотрудников
		|			ИЛИ ДополнительныеНачисления.Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТСписокСотрудников.Сотрудник
		|				ИЗ
		|					ВТСписокСотрудников КАК ВТСписокСотрудников))
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.Сторно
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СторнируемыйДокумент";
		
		Запрос.Текст = ОтражениеВУчетеСторноТекст;
		//временная таблица - ВТ_ДополнительныеНачисленияСторно
		Результат = Запрос.Выполнить().Выгрузить();
		КоличествоСторноЗаписей = Результат[0].Количество; 
		
		Если КоличествоСторноЗаписей <> 0 Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДополнительныеНачисленияСторно.Регистратор КАК Регистратор,
			|	ДополнительныеНачисленияСторно.НомерСтроки КАК НомерСтроки,
			|	ДополнительныеНачисленияСторно.Сотрудник КАК Сотрудник,
			|	ДополнительныеНачисленияСторно.ВидРасчета КАК ВидРасчета,
			|	ДополнительныеНачисленияСторно.СторнируемыйДокумент КАК СторнируемыйДокумент,
			|	НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТ_СторноСотрудники
			|ИЗ
			|	ВТ_ДополнительныеНачисленияСторно КАК ДополнительныеНачисленияСторно
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
			|		ПО ДополнительныеНачисленияСторно.СторнируемыйДокумент = ДополнительныеНачисления.Регистратор
			|ГДЕ
			|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ВидРасчета,
			|	ПериодРегистрации,
			|	СторнируемыйДокумент";
			
			//временная таблица - ВТ_СторноСотрудники
			Запрос.Выполнить();

			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	ДополнительныеНачисления.Регистратор КАК Регистратор,
			|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|	ЕСНДополнительныеНачисления.КодДоходаЕСН,
			|	ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
			|	ЕСНДополнительныеНачисления.Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно
			|ИЗ
			|	ВТ_СторноСотрудники КАК ДополнительныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			НАЧАЛОПЕРИОДА(ЕСНДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|			ЕСНДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
			|			ЕСНДополнительныеНачисления.Сотрудник КАК Сотрудник,
			|			ЕСНДополнительныеНачисления.Результат КАК Результат,
			|			ЕСНДополнительныеНачисления.КодДоходаЕСН КАК КодДоходаЕСН,
			|			ЕСНДополнительныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
			|			ЕСНДополнительныеНачисления.ДокументОснование КАК ДокументОснование
			|		ИЗ
			|			РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
			|		ГДЕ
			|			(ЕСНДополнительныеНачисления.ПериодРегистрации, ЕСНДополнительныеНачисления.Сотрудник, ЕСНДополнительныеНачисления.ВидРасчета) В
			|					(ВЫБРАТЬ
			|						Начисления.ПериодРегистрации,
			|						Начисления.Сотрудник,
			|						Начисления.ВидРасчета
			|					ИЗ
			|						ВТ_СторноСотрудники КАК Начисления)) КАК ЕСНДополнительныеНачисления
			|		ПО ДополнительныеНачисления.ВидРасчета = ЕСНДополнительныеНачисления.ВидРасчета
			|			И ДополнительныеНачисления.Сотрудник = ЕСНДополнительныеНачисления.Сотрудник
			|			И ДополнительныеНачисления.СторнируемыйДокумент = ЕСНДополнительныеНачисления.ДокументОснование
			|			И ДополнительныеНачисления.ПериодРегистрации = ЕСНДополнительныеНачисления.ПериодРегистрации
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК КодДоходаЕСН,
			|	ЛОЖЬ КАК ОблагаетсяЕНВД,
			|	0 КАК Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно";
			
		КонецЕсли;
		
		Запрос.Текст = ОтражениеВУчетеСторноТекст;
		//временная таблица - ВТ_ОтражениеВУчетеСторно
		Запрос.Выполнить();


		ДанныеУчетаТекст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.КодДоходаЕСН
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН <> ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН
		|		ИНАЧЕ ДополнительныеНачисления.ВидРасчета.КодДоходаЕСН
		|	КОНЕЦ КАК КодДоходаЕСН,
		|	ОтражениеВУчетеСторно.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ВЫБОР
		|		КОГДА (НЕ &ЕстьЕНВД)
		|			ТОГДА 0
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|			ТОГДА 100
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|			ТОГДА 0
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 100
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 0
		|		КОГДА Распределение.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА Распределение.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА ЕНВДПроцент.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
		|		КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентЕНВД,
		|	Распределение.ДоляСпособаОтражения КАК ДоляСпособаОтражения,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ДополнительныеНачисления.Организация КАК Организация,
		|	ДополнительныеНачисления.Результат КАК Результат,
		|	ДополнительныеНачисления.ВидРасчета.КатегорияРасчета КАК КатегорияРасчета,
		|	ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете КАК СтратегияОтраженияВУчете,
		|	ДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования,
		|	ДополнительныеНачисления.Сторно КАК Сторно,
		|	ДополнительныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ДополнительныеНачисления.СкидкаПриНалогообложении КАК Скидка,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЕдиновременноеПособиеФСС,
		|	ЕСНДополнительныеНачисления.Сотрудник.Наименование КАК СотрудникНаименование
		|ПОМЕСТИТЬ ДанныеУчета
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВЫБОР
		|				КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.ПустаяСсылка)
		|				ИНАЧЕ РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД
		|			КОНЕЦ КАК ОтнесениеРасходовКДеятельностиЕНВД,
		|			РеглУчетПлановыхНачисленийРаботниковОрганизаций.КодДоходаЕСН КАК КодДоходаЕСН,
		|			СведенияОНачисленияхСрез.Регистратор КАК Регистратор,
		|			СведенияОНачисленияхСрез.НомерСтроки КАК НомерСтроки
		|		ИЗ
		|			РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ДополнительныеНачисления.Регистратор КАК Регистратор,
		|					ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|					ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|					ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|					МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период,
		|					ДополнительныеНачисления.ДокументОснование КАК ДокументОснование
		|				ИЗ
		|					РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|						ПО ДополнительныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|							И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|							И ДополнительныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|							И ДополнительныеНачисления.ДокументОснование = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ДокументОснование
		|				ГДЕ
		|					ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|					И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|					И (&парамНеОтбиратьСотрудников
		|							ИЛИ ДополнительныеНачисления.Сотрудник В
		|								(ВЫБРАТЬ
		|									ВТСписокСотрудников.Сотрудник
		|								ИЗ
		|									ВТСписокСотрудников КАК ВТСписокСотрудников))
		|					И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|					И ДополнительныеНачисления.Результат <> 0
		|					И (НЕ ДополнительныеНачисления.Сторно)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ДополнительныеНачисления.Регистратор,
		|					ДополнительныеНачисления.НомерСтроки,
		|					ДополнительныеНачисления.Сотрудник,
		|					ДополнительныеНачисления.ВидРасчета,
		|					ДополнительныеНачисления.ДокументОснование) КАК СведенияОНачисленияхСрез
		|				ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|					И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|					И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|					И (СведенияОНачисленияхСрез.ДокументОснование = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ДокументОснование)) КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ДополнительныеНачисления.Регистратор = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = РеглУчетПлановыхНачисленийРаботниковОрганизаций.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|		ПО ДополнительныеНачисления.Сотрудник = Распределение.Сотрудник
		|			И (НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = Распределение.ПериодРегистрации)
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД ЕСТЬ NULL )
		|			И (ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления))
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|			И ((НЕ ДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))))
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВЫБОР
		|				КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА NULL
		|				ИНАЧЕ УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|			КОНЕЦ КАК ПодпадаетПодЕНВД,
		|			СведенияОРаботникахСрез.Регистратор КАК Регистратор,
		|			СведенияОРаботникахСрез.НомерСтроки КАК НомерСтроки
		|		ИЗ
		|			РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ДополнительныеНачисления.Регистратор КАК Регистратор,
		|					ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|					ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|					МАКСИМУМ(УчетЗарВРеглУчете.Период) КАК Период
		|				ИЗ
		|					РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|						ПО ДополнительныеНачисления.Сотрудник = УчетЗарВРеглУчете.Сотрудник
		|							И (УчетЗарВРеглУчете.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|				ГДЕ
		|					ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|					И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|					И (&парамНеОтбиратьСотрудников
		|							ИЛИ ДополнительныеНачисления.Сотрудник В
		|								(ВЫБРАТЬ
		|									ВТСписокСотрудников.Сотрудник
		|								ИЗ
		|									ВТСписокСотрудников КАК ВТСписокСотрудников))
		|					И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|					И ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
		|					И ДополнительныеНачисления.Результат <> 0
		|					И (НЕ ДополнительныеНачисления.Сторно)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ДополнительныеНачисления.Регистратор,
		|					ДополнительныеНачисления.НомерСтроки,
		|					ДополнительныеНачисления.Сотрудник) КАК СведенияОРаботникахСрез
		|				ПО (СведенияОРаботникахСрез.Сотрудник = УчетЗарВРеглУчете.Сотрудник)
		|					И (СведенияОРаботникахСрез.Период = УчетЗарВРеглУчете.Период)) КАК УчетЗарВРеглУчете
		|		ПО ДополнительныеНачисления.Регистратор = УчетЗарВРеглУчете.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетЗарВРеглУчете.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОПодразделенияхСрез.Регистратор КАК Регистратор,
		|			СведенияОПодразделенияхСрез.НомерСтроки КАК НомерСтроки,
		|			ВЫБОР
		|				КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|			КОНЕЦ КАК ПодпадаетПодЕНВД
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ДополнительныеНачисления.Регистратор КАК Регистратор,
		|				ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|				ДополнительныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|				МАКСИМУМ(УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК Период
		|			ИЗ
		|				РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|					ПО ДополнительныеНачисления.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|						И (УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|			ГДЕ
		|				ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|				И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|				И (&парамНеОтбиратьСотрудников
		|						ИЛИ ДополнительныеНачисления.Сотрудник В
		|							(ВЫБРАТЬ
		|								ВТСписокСотрудников.Сотрудник
		|							ИЗ
		|								ВТСписокСотрудников КАК ВТСписокСотрудников))
		|				И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|				И ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
		|				И ДополнительныеНачисления.Результат <> 0
		|				И (НЕ ДополнительныеНачисления.Сторно)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ДополнительныеНачисления.ПодразделениеОрганизации,
		|				ДополнительныеНачисления.Регистратор,
		|				ДополнительныеНачисления.НомерСтроки) КАК СведенияОПодразделенияхСрез
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|				ПО СведенияОПодразделенияхСрез.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|					И СведенияОПодразделенияхСрез.Период = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ДополнительныеНачисления.Регистратор = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентДеятельностиЕНВДСотрудников КАК ЕНВДПроцент
		|		ПО ДополнительныеНачисления.Сотрудник = ЕНВДПроцент.Сотрудник
		|			И (ЕНВДПроцент.ПериодРегистрации = НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ))
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
		|		ПО ДополнительныеНачисления.Сотрудник = ЕСНДополнительныеНачисления.Сотрудник
		|			И (ЕСНДополнительныеНачисления.ВидРасчета = ДополнительныеНачисления.ВидРасчета)
		|			И (ЕСНДополнительныеНачисления.ПериодРегистрации = &парамПериодРегистрации)
		|			И (ЕСНДополнительныеНачисления.ДокументОснование = ДополнительныеНачисления.Регистратор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ДополнительныеНачисления.Регистратор = ОтражениеВУчетеСторно.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОбОрганизацииСрез.Регистратор КАК Регистратор,
		|			СведенияОбОрганизацииСрез.НомерСтроки КАК НомерСтроки,
		|			ВЫБОР
		|				КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|			КОНЕЦ КАК ПодпадаетПодЕНВД
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ДополнительныеНачисления.Регистратор КАК Регистратор,
		|				ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|				ДополнительныеНачисления.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|				МАКСИМУМ(УчетОсновногоЗаработкаОрганизации.Период) КАК Период
		|			ИЗ
		|				РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|					ПО ДополнительныеНачисления.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|						И (УчетОсновногоЗаработкаОрганизации.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|			ГДЕ
		|				ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|				И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|				И (&парамНеОтбиратьСотрудников
		|						ИЛИ ДополнительныеНачисления.Сотрудник В
		|							(ВЫБРАТЬ
		|								ВТСписокСотрудников.Сотрудник
		|							ИЗ
		|								ВТСписокСотрудников КАК ВТСписокСотрудников))
		|				И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|				И ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
		|				И ДополнительныеНачисления.Результат <> 0
		|				И (НЕ ДополнительныеНачисления.Сторно)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ДополнительныеНачисления.ОбособленноеПодразделение,
		|				ДополнительныеНачисления.Регистратор,
		|				ДополнительныеНачисления.НомерСтроки) КАК СведенияОбОрганизацииСрез
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|				ПО СведенияОбОрганизацииСрез.Период = УчетОсновногоЗаработкаОрганизации.Период) КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ((НЕ ДополнительныеНачисления.Сторно))
		|			И (ДополнительныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки)
		|			И (ДополнительныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор)
		|ГДЕ
		|	ЕСНДополнительныеНачисления.Сотрудник ЕСТЬ NULL 
		|	И ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И (&парамНеОтбиратьСотрудников
		|			ИЛИ ДополнительныеНачисления.Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТСписокСотрудников.Сотрудник
		|				ИЗ
		|					ВТСписокСотрудников КАК ВТСписокСотрудников))
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		
		Запрос.Текст = ДанныеУчетаТекст;
		//временная таблица - ДанныеУчета
		Запрос.Выполнить();
				
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДанныеУчета.Регистратор КАК Регистратор,
		|	ДанныеУчета.Регистратор КАК ДокументОснование,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.СотрудникНаименование КАК СотрудникНаименование,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.КодДоходаЕСН,
		|	ДанныеУчета.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ДанныеУчета.РезультатСторно КАК РезультатСторно,
		|	ДанныеУчета.ПроцентЕНВД,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.Результат КАК Результат,
		|	ДанныеУчета.СтратегияОтраженияВУчете,
		|	ДанныеУчета.ВидПособияСоциальногоСтрахования,
		|	ДанныеУчета.ПериодРегистрации,
		|	ДанныеУчета.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка) КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ЕСТЬNULL(База.КодДоходаЕСНРазрез, БазаСреднегоЗаработка.КодДоходаЕСНРазрез) КАК КодДоходаЕСНРазрез,
		|	ЕСТЬNULL(База.ОблагаетсяЕНВДРазрез, БазаСреднегоЗаработка.ОблагаетсяЕНВДРазрез) КАК ОблагаетсяЕНВДРазрез,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ДоляСпособаОтражения ЕСТЬ НЕ NULL 
		|			ТОГДА ДанныеУчета.ДоляСпособаОтражения
		|		КОГДА База.РезультатБаза ЕСТЬ НЕ NULL 
		|			ТОГДА База.РезультатБаза
		|		ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|	КОНЕЦ КАК РезультатБаза,
		|	ДанныеУчета.Сторно КАК Сторно,
		|	ДанныеУчета.ДоляСпособаОтражения,
		|	ИСТИНА КАК УчитыватьКакНовыйСтраховойСлучай,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораАвторские)
		|			ТОГДА ДанныеУчета.Скидка
		|		КОГДА ДанныеУчета.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.МатпомощьПриРожденииРебенка)
		|			ТОГДА ДанныеУчета.Скидка
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Скидка,
		|	ДанныеУчета.ЭтоЕдиновременноеПособиеФСС КАК ЭтоЕдиновременноеПособиеФСС,
		|	ЛОЖЬ КАК ЭтоПособияФСС
		|ИЗ
		|	ДанныеУчета КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ База КАК База
		|		ПО ДанныеУчета.Регистратор = База.Регистратор
		|			И ДанныеУчета.НомерСтроки = База.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.Регистратор = БазаСреднегоЗаработка.Регистратор
		|			И ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Регистратор,
		|	НомерСтроки,
		|	КодДоходаЕСНРазрез,
		|	ОблагаетсяЕНВДРазрез
		|АВТОУПОРЯДОЧИВАНИЕ";

	КонецЕсли;

	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;

КонецФункции // ПолучитьДанныеУчета()

// создает строку движений ЕСНОсновныеНачисления или ЕСНДополнительныеНачисления
// вызывается из ОбработатьДанныеУчета
// Параметры:
//	ДанныеУчета - спозиционированная выборка по результату запроса
//	НаборЗаписей
//
Функция СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления)
	
	СтрокаДанных = НаборЗаписей.Добавить();
	
	// регистратор
	
	// вид расчета
	СтрокаДанных.ВидРасчета					= ДанныеУчета.ВидРасчета;
	// период регистрации
	СтрокаДанных.ПериодРегистрации			= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	// признак сторно
	СтрокаДанных.Сторно						= ДанныеУчета.Сторно;
	
	Если ЭтоОсновныеНачисления Тогда
		// только для ЕСНОсновныеНачисления
		СтрокаДанных.ПериодДействияНачало	= ДанныеУчета.ПериодДействияНачало;
		СтрокаДанных.ПериодДействияКонец	= ДанныеУчета.ПериодДействияКонец;
		СтрокаДанных.ГрафикРаботы			= ДанныеУчета.ГрафикРаботы;
		СтрокаДанных.ВидУчетаВремени		= ДанныеУчета.ВидУчетаВремени;
	Иначе
		// только для ЕСНДополнительныеНачисления
		СтрокаДанных.Скидка = ДанныеУчета.Скидка;
	КонецЕсли;

	// измерения
	СтрокаДанных.Сотрудник					= ДанныеУчета.Сотрудник;
	СтрокаДанных.Физлицо					= ДанныеУчета.Физлицо;
	СтрокаДанных.Организация				= ВыборкаПоШапкеДокумента.Организация;

	// ресурсы
	СтрокаДанных.Результат					= ДанныеУчета.Результат;

	// реквизиты
	СтрокаДанных.КодДоходаЕСН				= ДанныеУчета.КодДоходаЕСН;
	СтрокаДанных.ОблагаетсяЕНВД				= Ложь;
	СтрокаДанных.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.ОбособленноеПодразделение;
	СтрокаДанных.ДокументОснование			= ДанныеУчета.Регистратор;
	
	Возврат СтрокаДанных;
	
КонецФункции // СоздатьСтрокуДвижений()

// Процедура регистрирует в таблице мТаблицаОшибок ошибку обработки данных учета, для
// последующего формирования сообщений пользователю о строке табличной части в 
// которой есть ошибка, причине возникновения ошибки и что делать для устранения ошибки
//
Процедура ЗарегистрироватьОшибкуОбработкиДанныхУчета(ТаблицаОшибок, ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, КодОшибки)
	
	//ошибку регистрируем, если для этого начисления еще не зарегистрирована ошибка
	СтруктураПоискаОшибок.Регистратор = ДанныеУчета.Регистратор;
	СтруктураПоискаОшибок.НомерСтроки = ДанныеУчета.НомерСтроки;
	СтруктураПоискаОшибок.КодОшибки   = КодОшибки;
	
	Если ТаблицаОшибок.НайтиСтроки(СтруктураПоискаОшибок).Количество() = 0 Тогда
		
		СтрокаТаблицыОшибок = ТаблицаОшибок.Добавить();
		СтрокаТаблицыОшибок.Сотрудник  = ДанныеУчета.Сотрудник;
		СтрокаТаблицыОшибок.ВидРасчета = ДанныеУчета.ВидРасчета;
		Если ЭтоОсновныеНачисления Тогда
			СтрокаТаблицыОшибок.ПериодДействияНачало = ДанныеУчета.ПериодДействияНачало;
			СтрокаТаблицыОшибок.ПериодДействияКонец  = ДанныеУчета.ПериодДействияКонец;
		Иначе
			СтрокаТаблицыОшибок.ПериодДействияНачало = Дата('00010101');
			СтрокаТаблицыОшибок.ПериодДействияКонец  = Дата('00010101');
		КонецЕсли;
		СтрокаТаблицыОшибок.Сторно 		= ДанныеУчета.Сторно;
		СтрокаТаблицыОшибок.КодОшибки 	= КодОшибки;
		СтрокаТаблицыОшибок.Регистратор = ДанныеУчета.Регистратор;
		СтрокаТаблицыОшибок.НомерСтроки = ДанныеУчета.НомерСтроки;
		СтрокаТаблицыОшибок.ВидПособияСоциальногоСтрахования = ДанныеУчета.ВидПособияСоциальногоСтрахования;
		
	КонецЕсли;

КонецПроцедуры // ЗарегистрироватьОшибкуОбработкиДанныхУчета()

// Процедура формирует набор записей по данным из запроса
//
// Параметры:
//	РезультатДанныеУчета		- выборка по резултату запроса, возвращенная функцией 
//								  ПолучитьДанныеУчета
//	ОбработкаПервичныхДанных	- проводится ли обработка первичных данных (или вторичных)
//	Успешно						- в этот параметр возвращается значение Ложь, если обработка не выполнена
//								  (например, если не окзалось базовых данных)
//	НаборЗаписей
//
Процедура ОбработатьДанныеУчета(ДокументОбъект, УчетнаяПолитика, ВыборкаПоШапкеДокумента,РезультатДанныеУчета, Успешно, НаборЗаписей, ТаблицаОшибок)

	// признак основных начислений
	ЭтоОсновныеНачисления = (ТипЗнч(НаборЗаписей) = Тип("РегистрРасчетаНаборЗаписей.ЕСНОсновныеНачисления"));
	
	мЕНВД = УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД;
	мУСН = УчетнаяПолитика.УСН;
	мЕНВД = УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД;
	мФСС_БЛ = УчетнаяПолитика.УплачиватьДобровольныеВзносыВФСС;
	
	мДлинаСуток = 86400;		// в секундах
	
	ПособияСоциальномуСтрахованию 		  = ДокументОбъект.ПособияСоциальномуСтрахованию;
	ПособияПоУходуЗаРебенкомДоПолутораЛет = ДокументОбъект.ПособияПоУходуЗаРебенкомДоПолутораЛет;
	
	РаспределятьПоБазовымНачислениям = Справочники.ДоходыЕСН.РаспределятьПоБазовымНачислениям;

	ДатаЗакона180ФЗ = '20060101';
	ФормироватьУчетПособий = НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации) >= НачалоМесяца(ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006());
	
	// структура поиска для позиционирования в ДанныеУчетаВспомогательные
	// при необходимости суммирования "базовых" ресурсов
	СтруктураПоиска = Новый Структура("Регистратор,НомерСтроки");
	
	// структура поиска в таблице ошибок мТаблицаОшибок
	СтруктураПоискаОшибок = Новый Структура("Регистратор,НомерСтроки,КодОшибки");
	
	// основная выборка - по ней ведем обход и вводим записи движений
	ДанныеУчета = РезультатДанныеУчета.Выбрать();
		
	// вспомогательная выборка - по ней ведем суммирование базовых результатов
	ДанныеУчетаВспомогательные = РезультатДанныеУчета.Выбрать();
	
	ПродолжатьОбработку = ДанныеУчета.Следующий();
	Пока ПродолжатьОбработку Цикл
				
		СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);

		Если ДанныеУчета.Сторно Тогда
			
			// необходимо обойти все данные относящиеся к одной строке основного регистра и 
			// выполнить распределение, нормируя на долю 
			ЕстьДанныеУчетаСторно = Истина;
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если ДанныеУчетаВспомогательные.РезультатСторно = NULL Тогда
					//нет данных отражения в учете сторно-записи
					Успешно = Ложь;
					ЕстьДанныеУчетаСторно = Ложь;
					ЗарегистрироватьОшибкуОбработкиДанныхУчета(ТаблицаОшибок, ДанныеУчетаВспомогательные, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, 1);
				Иначе
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатСторно;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатСторно = NULL Тогда
						Доля = 0;
					Иначе
						Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатСторно / СуммаПоСтроке,2);
					КонецЕсли;
				КонецЕсли;
				
				СтрокаДанных.ОблагаетсяЕНВД = ДанныеУчета.ОблагаетсяЕНВД;
				СтрокаДанных.Результат = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
				
				Если ДанныеУчета.ЭтоПособияФСС Тогда
					
					Если ЕстьДанныеУчетаСторно Тогда
						СтрокаДанных.ПериодДействияНачало = ДанныеУчета.ПериодДействияНачалоСторно;	
						СтрокаДанных.ПериодДействияКонец  = ДанныеУчета.ПериодДействияКонецСторно;
					КонецЕсли;

					Если ФормироватьУчетПособий Тогда
						Если ДанныеУчета.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет Тогда
							
							СтрокаУчетаПособий = ДокументОбъект.ПособияПоУходуЗаРебенкомДоПолутораЛет.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,СтрокаДанных);
							ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета,"СреднийДневнойЗаработок");
							СтрокаУчетаПособий.ПособиеПоУходуЗаПервымРебенком = СтрокаДанных.Результат * ДанныеУчета.ДоляПособияНаПервогоРебенка;
							СтрокаУчетаПособий.ПособиеПоУходуЗаВторымРебенком = СтрокаДанных.Результат - СтрокаУчетаПособий.ПособиеПоУходуЗаПервымРебенком;
							
						ИначеЕсли ЗначениеЗаполнено(ДанныеУчета.ВидПособияСоциальногоСтрахования) Тогда 
							
							СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
							СтрокаУчетаПособий.ПериодДействияНачало = СтрокаДанных.ПериодДействияНачало;	
							СтрокаУчетаПособий.ПериодДействияКонец  = СтрокаДанных.ПериодДействияКонец;
							СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
							СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
							
							Если ЕстьДанныеУчетаСторно Тогда
								
								Если ДанныеУчета.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом Тогда
									СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
								Иначе
									СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
								КонецЕсли;
								
								Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание Тогда
									
									Если ДанныеУчета.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом Тогда
										СтрокаУчетаПособий.ОплаченныеДни = -1 * ?(ДанныеУчета.ОблагаетсяЕНВД, ДанныеУчета.ВсегоДнейНетрудоспособности, ДанныеУчета.ДниЗаСчетРаботодателя);
									Иначе
										СтрокаУчетаПособий.ОплаченныеДни = -1 * ?(ДанныеУчета.ОблагаетсяЕНВД, ДанныеУчета.ВсегоДнейНетрудоспособности, Макс(0,ДанныеУчета.ВсегоДнейНетрудоспособности - ДанныеУчета.ДниЗаСчетРаботодателя));
									КонецЕсли;
									
								Иначе
									СтрокаУчетаПособий.ОплаченныеДни = -1 * ДанныеУчета.ВсегоДнейНетрудоспособности;
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
					КонецЕсли;
						
				ИначеЕсли ДанныеУчета.ЭтоЕдиновременноеПособиеФСС и ФормироватьУчетПособий Тогда
						
						СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
						СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
						СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
						СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
						
				КонецЕсли;	
								
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Результат = СтрокаДанных.Результат + ПолныйРезультат - СуммарнаяДоля;
			
		ИначеЕсли ДанныеУчета.ЭтоЕдиновременноеПособиеФСС Тогда
			
			СтрокаДанных.ОблагаетсяЕНВД = мЕНВД и ДанныеУчета.ПроцентЕНВД = 100;
			
			Если ФормироватьУчетПособий Тогда
				СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
				СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
				СтрокаУчетаПособий.ОблагаетсяЕНВД = СтрокаДанных.ОблагаетсяЕНВД;
				СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
				СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДанныеУчета.КодДоходаЕСН) Тогда
				// у вида расчета не заполнен реквизит КодДоходаЕСН
				Успешно = Ложь;
				ЗарегистрироватьОшибкуОбработкиДанныхУчета(ТаблицаОшибок, ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, 6);
			КонецЕсли;
			
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;

		ИначеЕсли ДанныеУчета.ЭтоПособияФСС Тогда
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
					ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			ОбщаяБазаРаспределенияСтроки = 0;
			БазаЕНВД = 0;
			Если ДанныеУчета.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления Тогда
				// суммируем базовые ресурсы по текущей строке набора записей
				Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
					Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
						Если мЕНВД Тогда
							// Нет данных для определения доли ЕНВД пособия
							Успешно = Ложь;
							ЗарегистрироватьОшибкуОбработкиДанныхУчета(ТаблицаОшибок, ДанныеУчетаВспомогательные, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, 2);
						КонецЕсли;
					Иначе
						ОбщаяБазаРаспределенияСтроки = ОбщаяБазаРаспределенияСтроки + ДанныеУчетаВспомогательные.РезультатБаза;
						Если ДанныеУчетаВспомогательные.ОблагаетсяЕНВДРазрез Тогда
							БазаЕНВД = БазаЕНВД + ДанныеУчетаВспомогательные.РезультатБаза;
						КонецЕсли;						
					КонецЕсли;
					Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание
				Или ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий Тогда
				// суммируем базовые ресурсы по текущей строке набора записей
				// сюда попали когда для БЛ доля ЕНВД определяется по текущему месяцу, а доля за счет работодателя распределяется по базовым начислениям
				Если ЗначениеЗаполнено(ДанныеУчета.ДоляСпособаОтражения)  Тогда
					Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
						Если Не ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
							ОбщаяБазаРаспределенияСтроки = ОбщаяБазаРаспределенияСтроки + ДанныеУчетаВспомогательные.РезультатБаза;
							Если ЗначениеЗаполнено(ДанныеУчетаВспомогательные.ПроцентЕНВД) Тогда
								БазаЕНВД = БазаЕНВД + ДанныеУчетаВспомогательные.РезультатБаза;
							КонецЕсли;						
						КонецЕсли;
						Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
						Если Не ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
							ОбщаяБазаРаспределенияСтроки = ОбщаяБазаРаспределенияСтроки + ДанныеУчетаВспомогательные.РезультатБаза;
						КонецЕсли;
						Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					ОбщаяБазаРаспределенияСтроки = ?(ОбщаяБазаРаспределенияСтроки = 0, ДанныеУчета.Результат, ОбщаяБазаРаспределенияСтроки);
					БазаЕНВД = Окр(ОбщаяБазаРаспределенияСтроки * ДанныеУчета.ПроцентЕНВД / 100,2);
				КонецЕсли;
					
			ИначеЕсли ЗначениеЗаполнено(ДанныеУчета.ДоляСпособаОтражения)  Тогда
				// для пособий полностью выплачиваемых за счет ФСС, по которым необходимо определить долю ЕНВД по текущему месяцу
				// суммируем базовые ресурсы по текущей строке набора записей
				Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
					Если Не ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
						ОбщаяБазаРаспределенияСтроки = ОбщаяБазаРаспределенияСтроки + ДанныеУчетаВспомогательные.РезультатБаза;
						Если ЗначениеЗаполнено(ДанныеУчетаВспомогательные.ПроцентЕНВД) Тогда
							БазаЕНВД = БазаЕНВД + ДанныеУчетаВспомогательные.РезультатБаза;
						КонецЕсли;						
					КонецЕсли;
					Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли ДанныеУчета.ПроцентЕНВД = 100 Тогда
	            ОбщаяБазаРаспределенияСтроки = ДанныеУчета.Результат;
	            БазаЕНВД = ДанныеУчета.Результат;
			ИначеЕсли ДанныеУчета.ПроцентЕНВД = 0 Тогда
	            ОбщаяБазаРаспределенияСтроки = ДанныеУчета.Результат;
			Иначе
	            ОбщаяБазаРаспределенияСтроки = ДанныеУчета.Результат;
	            БазаЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
			КонецЕсли;
			
			ВторойКалендарныйДень = ДанныеУчета.ДатаНачалаСобытия + мДлинаСуток;
			ТретийКалендарныйДень = ВторойКалендарныйДень + мДлинаСуток;
			
			// доля пособия за счет работодателя за первые два календарных дня может быть
			// при этом ДоляБЛЗаСчетРаботодателя может быть равна нулю по причине отсутствия ФПД
			ЕстьДоляБЛЗаСчетРаботодателя = ТретийКалендарныйДень > ДанныеУчета.ПериодДействияНачало;
			
			Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве Тогда
				СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
				Если ФормироватьУчетПособий Тогда 
					СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
					СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
					СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
					СтрокаУчетаПособий.ОплаченныеДни = ?(ДанныеУчета.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев,ДанныеУчета.НормаДней,ДанныеУчета.ВсегоДнейНетрудоспособности);
					СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
				КонецЕсли;
			ИначеЕсли ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком Тогда
				
				Если ФормироватьУчетПособий Тогда 
					Если ДанныеУчета.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет Тогда
						СтрокаУчетаПособий = ПособияПоУходуЗаРебенкомДоПолутораЛет.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,СтрокаДанных);
						ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета,"СреднийДневнойЗаработок");
						СтрокаУчетаПособий.ПособиеПоУходуЗаПервымРебенком = СтрокаДанных.Результат * ДанныеУчета.ДоляПособияНаПервогоРебенка;
						СтрокаУчетаПособий.ПособиеПоУходуЗаВторымРебенком = СтрокаДанных.Результат - СтрокаУчетаПособий.ПособиеПоУходуЗаПервымРебенком;
					Иначе 
						СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
						СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
						СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
						СтрокаУчетаПособий.ОплаченныеДни = ?(ДанныеУчета.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды,ДанныеУчета.ВсегоДнейНетрудоспособности,ДанныеУчета.НормаДней);
						СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
					КонецЕсли;
				КонецЕсли;
				
				Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
					
					// есть доля ЕНВД, вычислим результат для дохода под ЕНВД
					РезультатПодЕНВД = Окр(ДанныеУчета.Результат * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
					
					Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
						
						СтрокаДанных.ОблагаетсяЕНВД = Истина;
						
						Если ФормироватьУчетПособий Тогда
							СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;	
						КонецЕсли;	
							
					Иначе
						
						// здесь выделяем часть пособия, относящуюся к видам деятельности, облагаемым ЕНВД
						// заводим новую строку данных - для ввода доли дохода под ЕНВД
						НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
						// ресурсы
						НоваяСтрока.Результат = РезультатПодЕНВД;
						
						// основной строке данных уменьшаем результат
						СтрокаДанных.Результат = ДанныеУчета.Результат - РезультатПодЕНВД;
						
						// это строка для подпадающего под ЕНВД дохода
						// "обычная строка" уже введена в движения выше
						НоваяСтрока.ОблагаетсяЕНВД = Истина;
						
						Если ФормироватьУчетПособий Тогда
							Если ДанныеУчета.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет Тогда
								СтрокаУчетаПособий.ПособиеПоУходуЗаПервымРебенком = СтрокаДанных.Результат * ДанныеУчета.ДоляПособияНаПервогоРебенка;
								СтрокаУчетаПособий.ПособиеПоУходуЗаВторымРебенком = СтрокаДанных.Результат - СтрокаУчетаПособий.ПособиеПоУходуЗаПервымРебенком;
								
								СтрокаУчетаПособий = ПособияПоУходуЗаРебенкомДоПолутораЛет.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,НоваяСтрока);
								ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета,"СреднийДневнойЗаработок");
								СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
								СтрокаУчетаПособий.ПособиеПоУходуЗаПервымРебенком = НоваяСтрока.Результат * ДанныеУчета.ДоляПособияНаПервогоРебенка;
								СтрокаУчетаПособий.ПособиеПоУходуЗаВторымРебенком = НоваяСтрока.Результат - СтрокаУчетаПособий.ПособиеПоУходуЗаПервымРебенком;
							Иначе
								СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
								
								СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
								СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
								СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
								СтрокаУчетаПособий.СуммаВсего = НоваяСтрока.Результат;
								СтрокаУчетаПособий.ОплаченныеДни = ?(ДанныеУчета.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды,ДанныеУчета.ВсегоДнейНетрудоспособности,ДанныеУчета.НормаДней);
								СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий Тогда
				
				Если ФормироватьУчетПособий Тогда 
					СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
					СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
					СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
					СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
					СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
				КонецЕсли;
				
				Если мФСС_БЛ Тогда
					
					Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
						// здесь выделяем часть пособия, относящуюся к видам деятельности, облагаемым ЕНВД
						// заводим новую строку данных - для ввода доли дохода под ЕНВД
						НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
						
						// вычислим результат для дохода под ЕНВД
						РезультатПодЕНВД = Окр(ДанныеУчета.Результат * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
						
						// ресурсы
						НоваяСтрока.Результат = РезультатПодЕНВД;
						
						// основной строке данных уменьшаем результат
						СтрокаДанных.Результат = ДанныеУчета.Результат - РезультатПодЕНВД;
						
						// это строка для подпадающего под ЕНВД дохода
						// "обычная строка" уже введена в движения выше
						НоваяСтрока.ОблагаетсяЕНВД = Истина;
						
						Если ФормироватьУчетПособий Тогда
							СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
							
							СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
							СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
							СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
							СтрокаУчетаПособий.СуммаВсего = НоваяСтрока.Результат;
							СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
							СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Если мУСН Тогда
						
						ЗаСчетФСС = Мин(ДанныеУчета.Результат,ДанныеУчета.ВПределахММОТ);
						СтрокаДанных.Результат = ЗаСчетФСС;
						
						Если ФормироватьУчетПособий Тогда
							СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
						КонецЕсли;
						
						// здесь выделяем часть пособия, относящуюся к видам деятельности, облагаемым ЕНВД
						Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
							// заводим новую строку данных - для ввода доли дохода под ЕНВД
							НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
							
							// вычислим результат для дохода под ЕНВД
							РезультатПодЕНВД = Окр(ЗаСчетФСС * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
							// ресурсы
							НоваяСтрока.Результат = РезультатПодЕНВД;
							
							// основной строке данных уменьшаем результат
							СтрокаДанных.Результат = ЗаСчетФСС - РезультатПодЕНВД;
							
							// это строка для подпадающего под ЕНВД дохода
							// "обычная строка" уже введена в движения выше
							НоваяСтрока.ОблагаетсяЕНВД = Истина;
							
							Если ФормироватьУчетПособий Тогда
								СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
								
								СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
								СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
								СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
								СтрокаУчетаПособий.СуммаВсего = НоваяСтрока.Результат;
								СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
								СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
							КонецЕсли;
						КонецЕсли;
						
						// заводим новую строку данных - для ввода доли за счет работодателя
						СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
						
						// ресурсы
						СтрокаДанных.Результат = ДанныеУчета.Результат - ЗаСчетФСС;
						СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
						
						Если ФормироватьУчетПособий Тогда
							СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
							СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
							СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
							СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
							СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
						КонецЕсли;
						
						// здесь выделяем часть пособия, относящуюся к видам деятельности, облагаемым ЕНВД
						Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
							
							// заводим новую строку данных - для ввода доли дохода под ЕНВД
							НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
							
							// вычислим результат для дохода под ЕНВД
							РезультатПодЕНВД = Окр((ДанныеУчета.Результат - ЗаСчетФСС) * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
							// ресурсы
							НоваяСтрока.Результат = РезультатПодЕНВД;
							// основной строке данных уменьшаем результат
							СтрокаДанных.Результат = ДанныеУчета.Результат - ЗаСчетФСС - РезультатПодЕНВД;
							
							// это строка для подпадающего под ЕНВД дохода
							// "обычная строка" уже введена в движения выше
							НоваяСтрока.ОблагаетсяЕНВД = Истина;
							
							Если ФормироватьУчетПособий Тогда
								СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
								
								СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
								СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
								СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
								СтрокаУчетаПособий.СуммаВсего = НоваяСтрока.Результат;
								СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
								СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
							КонецЕсли;
						КонецЕсли;
						
					ИначеЕсли мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
						// здесь выделяем часть пособия, относящуюся к видам деятельности, облагаемым ЕНВД
						// заводим новую строку данных - для ввода доли дохода под ЕНВД
						НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
						
						// вычислим результат для дохода под ЕНВД
						РезультатПодЕНВД = Окр(ДанныеУчета.Результат * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
						// ресурсы
						НоваяСтрока.Результат = Мин(РезультатПодЕНВД,ДанныеУчета.ВПределахММОТ);
						
						// основной строке данных уменьшаем результат
						СтрокаДанных.Результат = ДанныеУчета.Результат - РезультатПодЕНВД;
						
						// это строка для подпадающего под ЕНВД дохода
						// "обычная строка" уже введена в движения выше
						НоваяСтрока.ОблагаетсяЕНВД = Истина;
						
						Если ФормироватьУчетПособий Тогда
							СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
							
							СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
							СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
							СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
							СтрокаУчетаПособий.СуммаВсего = НоваяСтрока.Результат;
							СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
							СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
						КонецЕсли;
						
						// заводим новую строку данных - для ввода доли за счет работодателя
						БЛЗаСчетРаботадателя_В_части_ЕНВД = РезультатПодЕНВД - Мин(РезультатПодЕНВД,ДанныеУчета.ВПределахММОТ);
						Если БЛЗаСчетРаботадателя_В_части_ЕНВД <> 0 Тогда
							НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
							// ресурсы
							НоваяСтрока.Результат = БЛЗаСчетРаботадателя_В_части_ЕНВД;
							НоваяСтрока.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
							// это строка для подпадающего под ЕНВД дохода
							// "обычная строка" уже введена в движения выше
							НоваяСтрока.ОблагаетсяЕНВД = Истина;
							
							Если ФормироватьУчетПособий Тогда
								СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
								СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
								СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
								СтрокаУчетаПособий.СуммаВсего = НоваяСтрока.Результат;
								СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
								СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
					
			Иначе // заболевание работника
				
				Если ФормироватьУчетПособий Тогда 
					СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
					СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
					СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
					СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
					СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
				КонецЕсли;
				
				Если мФСС_БЛ Тогда // заболевание работника, уплачиваются добровольные взносы
					
					Если мЕНВД и НЕ мУСН Тогда // заболевание работника, уплачиваются добровольные взносы, ОСН+ЕНВД
						
						Если ДанныеУчета.ДатаНачалаСобытия < ДатаЗакона180ФЗ Тогда
							
							Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
								РезультатПодЕНВД = Окр(ДанныеУчета.Результат * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
							Иначе	
								РезультатПодЕНВД = 0;
							КонецЕсли;
							
							// вычислим пособие, выплачиваемое за счет работодателя под общей системой налогообложения 
							БЛЗаСчетРаботодателя = Окр((ДанныеУчета.Результат - РезультатПодЕНВД) * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
							
							// вычислим пособие, выплачиваемое за счет ФСС под общей системой налогообложения
							БЛЗаСчетФСС = ДанныеУчета.Результат - БЛЗаСчетРаботодателя - РезультатПодЕНВД;
							
							Если БЛЗаСчетФСС <> 0 Тогда
								// основной строке данных уменьшаем результат
								СтрокаДанных.Результат	 = ДанныеУчета.Результат - БЛЗаСчетРаботодателя - РезультатПодЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
								Если ЕстьДоляБЛЗаСчетРаботодателя Тогда
									СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
								КонецЕсли;
							КонецЕсли;	
							
							Если БЛЗаСчетРаботодателя <> 0 Тогда
								Если БЛЗаСчетФСС <> 0 Тогда
									// заводим новую строку данных - для ввода доли за счет работодателя
									СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
								КонецЕсли;
								СтрокаДанных.Результат = БЛЗаСчетРаботодателя;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
								СтрокаДанных.ОблагаетсяЕНВД = Ложь;
								СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
							КонецЕсли;
							
							БЛЗаСчетРаботадателя_В_части_ЕНВД = Окр(РезультатПодЕНВД * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
							Если БЛЗаСчетРаботадателя_В_части_ЕНВД <> 0 Тогда
								Если БЛЗаСчетРаботодателя <> 0 или БЛЗаСчетФСС <> 0 Тогда
									// заводим новую строку данных - для ввода доли за счет работодателя
									СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
								КонецЕсли;
								СтрокаДанных.Результат = БЛЗаСчетРаботадателя_В_части_ЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
								СтрокаДанных.ОблагаетсяЕНВД = Истина;
							КонецЕсли;
							
							БЛЗаСчетФСС_В_части_ЕНВД = РезультатПодЕНВД - БЛЗаСчетРаботадателя_В_части_ЕНВД;
							Если БЛЗаСчетФСС_В_части_ЕНВД <> 0 Тогда
								Если БЛЗаСчетРаботодателя <> 0 или БЛЗаСчетФСС <> 0 или БЛЗаСчетРаботадателя_В_части_ЕНВД <> 0 Тогда
									// заводим новую строку данных - для ввода доли за счет работодателя
									СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
								КонецЕсли;
								СтрокаДанных.Результат = РезультатПодЕНВД - БЛЗаСчетРаботадателя_В_части_ЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
								СтрокаДанных.ОблагаетсяЕНВД = Истина;
							КонецЕсли;
							
						Иначе //ДанныеУчета.ДатаНачалаСобытия >= ДатаЗакона180ФЗ
							
							Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
								РезультатПодЕНВД = Окр(ДанныеУчета.Результат * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
							Иначе	
								РезультатПодЕНВД = 0;
							КонецЕсли;
							
							// вычислим пособие, выплачиваемое за счет работодателя под общей системой налогообложения 
							БЛЗаСчетРаботодателя = Окр((ДанныеУчета.Результат - РезультатПодЕНВД) * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
							
							// вычислим пособие, выплачиваемое за счет ФСС под общей системой налогообложения
							БЛЗаСчетФСС = ДанныеУчета.Результат - БЛЗаСчетРаботодателя - РезультатПодЕНВД;
							
							Если БЛЗаСчетФСС <> 0 Тогда
								// основной строке данных уменьшаем результат
								СтрокаДанных.Результат	 = ДанныеУчета.Результат - БЛЗаСчетРаботодателя - РезультатПодЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
								Если ФормироватьУчетПособий Тогда 
									СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
									СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности - ДанныеУчета.ДниЗаСчетРаботодателя;
								КонецЕсли;
								Если ЕстьДоляБЛЗаСчетРаботодателя Тогда
									СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
									Если ФормироватьУчетПособий Тогда
										СтрокаУчетаПособий.ПериодДействияНачало = Мин(СтрокаУчетаПособий.ПериодДействияКонец, ТретийКалендарныйДень);	
									КонецЕсли;	
								КонецЕсли;
							КонецЕсли;	
							
							Если БЛЗаСчетРаботодателя <> 0 Тогда
								Если БЛЗаСчетФСС <> 0 Тогда
									// заводим новую строку данных - для ввода доли за счет работодателя
									СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
									Если ФормироватьУчетПособий Тогда 
										СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
										ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
										СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
									КонецЕсли;
								КонецЕсли;
								СтрокаДанных.Результат = БЛЗаСчетРаботодателя;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
								СтрокаДанных.ОблагаетсяЕНВД = Ложь;
								СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
								Если ФормироватьУчетПособий Тогда 
									СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
									СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
									СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ДниЗаСчетРаботодателя;
									СтрокаУчетаПособий.ПериодДействияКонец = Мин(СтрокаУчетаПособий.ПериодДействияКонец, ВторойКалендарныйДень);
								КонецЕсли;
							КонецЕсли;
							
							Если РезультатПодЕНВД <> 0 Тогда
								Если БЛЗаСчетРаботодателя <> 0 или БЛЗаСчетФСС <> 0 Тогда
									// заводим новую строку данных - для ввода доли за счет работодателя
									СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
									Если ФормироватьУчетПособий Тогда 
										СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
										ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
										СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
									КонецЕсли;
								КонецЕсли;
								СтрокаДанных.Результат = РезультатПодЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
								СтрокаДанных.ОблагаетсяЕНВД = Истина;
								Если ФормироватьУчетПособий Тогда 
									СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
									СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
									СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
									СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
								КонецЕсли;
							КонецЕсли;
							
						КонецЕсли;
						
					ИначеЕсли мУСН Тогда // заболевание работника, уплачиваются добровольные взносы, УСН, УСН+ЕНВД
						
						Если ДанныеУчета.ДатаНачалаСобытия < ДатаЗакона180ФЗ Тогда
							Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
								РезультатПодЕНВД = Окр(ДанныеУчета.Результат * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
							Иначе	
								РезультатПодЕНВД = 0;
							КонецЕсли;
							
							// вычислим пособие, выплачиваемое за счет работодателя по УСН 
							БЛЗаСчетРаботодателя = Окр((ДанныеУчета.Результат - РезультатПодЕНВД) * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
							
							// вычислим пособие, выплачиваемое за счет ФСС по УСН
							БЛЗаСчетФСС = ДанныеУчета.Результат - БЛЗаСчетРаботодателя - РезультатПодЕНВД;
							
							Если БЛЗаСчетФСС <> 0 Тогда
								// основной строке данных уменьшаем результат
								СтрокаДанных.Результат	 = ДанныеУчета.Результат - БЛЗаСчетРаботодателя - РезультатПодЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
								Если БЛЗаСчетРаботодателя <> 0 Тогда
									СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
								КонецЕсли;
							КонецЕсли;	
							
							Если БЛЗаСчетРаботодателя <> 0 Тогда
								Если БЛЗаСчетФСС <> 0 Тогда
									// заводим новую строку данных - для ввода доли за счет работодателя
									СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
								КонецЕсли;
								СтрокаДанных.Результат = БЛЗаСчетРаботодателя;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
								СтрокаДанных.ОблагаетсяЕНВД = Ложь;
								СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
							КонецЕсли;
							
							БЛЗаСчетРаботадателя_В_части_ЕНВД = Окр(РезультатПодЕНВД * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
							Если БЛЗаСчетРаботадателя_В_части_ЕНВД <> 0 Тогда
								Если БЛЗаСчетРаботодателя <> 0 или БЛЗаСчетФСС <> 0 Тогда
									// заводим новую строку данных - для ввода доли за счет работодателя
									СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
								КонецЕсли;
								СтрокаДанных.Результат = БЛЗаСчетРаботадателя_В_части_ЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
								СтрокаДанных.ОблагаетсяЕНВД = Истина;
							КонецЕсли;
							
							БЛЗаСчетФСС_В_части_ЕНВД = РезультатПодЕНВД - БЛЗаСчетРаботадателя_В_части_ЕНВД;
							Если БЛЗаСчетФСС_В_части_ЕНВД <> 0 Тогда
								Если БЛЗаСчетРаботодателя <> 0 или БЛЗаСчетФСС <> 0 или БЛЗаСчетРаботадателя_В_части_ЕНВД <> 0 Тогда
									// заводим новую строку данных - для ввода доли за счет работодателя
									СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
								КонецЕсли;
								СтрокаДанных.Результат = РезультатПодЕНВД - БЛЗаСчетРаботадателя_В_части_ЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
								СтрокаДанных.ОблагаетсяЕНВД = Истина;
							КонецЕсли;
							
						Иначе //ДанныеУчета.ДатаНачалаСобытия >= ДатаЗакона180ФЗ
							
							Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
								РезультатПодЕНВД = Окр(ДанныеУчета.Результат * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
							Иначе	
								РезультатПодЕНВД = 0;
							КонецЕсли;
							
							// вычислим пособие, выплачиваемое за счет ФСС под УСН
							БЛЗаСчетФСС = ДанныеУчета.Результат - РезультатПодЕНВД;
							
							Если БЛЗаСчетФСС <> 0 Тогда
								// основной строке данных уменьшаем результат
								СтрокаДанных.Результат	 = ДанныеУчета.Результат - РезультатПодЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
								Если ФормироватьУчетПособий Тогда 
									СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
								КонецЕсли;
							КонецЕсли;	
							
							Если РезультатПодЕНВД <> 0 Тогда
								Если БЛЗаСчетФСС <> 0 Тогда
									// заводим новую строку данных - для ввода доли за счет работодателя
									СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
									Если ФормироватьУчетПособий Тогда 
										СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
										ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
										СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
									КонецЕсли;
								КонецЕсли;
								СтрокаДанных.Результат = РезультатПодЕНВД;
								СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
								СтрокаДанных.ОблагаетсяЕНВД = Истина;
								Если ФормироватьУчетПособий Тогда 
									СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
									СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
									СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
									СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
								КонецЕсли;
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				Иначе // заболевание работника, НЕ уплачиваются добровольные взносы
					
					Если мУСН Тогда
						
						ЗаСчетФСС = Мин(ДанныеУчета.Результат,ДанныеУчета.ВПределахММОТ);
						СтрокаДанных.Результат = ЗаСчетФСС;
						Если ФормироватьУчетПособий Тогда 
							СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
						КонецЕсли;
						
						// здесь выделяем часть пособия за счет ФСС, относящуюся к видам деятельности, облагаемым ЕНВД
						Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
							
							// вычислим результат для дохода под ЕНВД
							РезультатПодЕНВД = Окр(ЗаСчетФСС * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);

							Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
								
								СтрокаДанных.ОблагаетсяЕНВД = Истина;
								Если ФормироватьУчетПособий Тогда
									СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;	
								КонецЕсли;
								
							Иначе
								
								// заводим новую строку данных - для ввода доли дохода под ЕНВД
								НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
								
								// ресурсы
								НоваяСтрока.Результат = РезультатПодЕНВД;
								
								// основной строке данных уменьшаем результат
								СтрокаДанных.Результат = ЗаСчетФСС - РезультатПодЕНВД;
								
								// это строка для подпадающего под ЕНВД дохода
								// "обычная строка" уже введена в движения выше
								НоваяСтрока.ОблагаетсяЕНВД = Истина;
								
								Если ФормироватьУчетПособий Тогда
									СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
									
									СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
									СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
									СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
									СтрокаУчетаПособий.СуммаВсего = НоваяСтрока.Результат;
									СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
									СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
								КонецЕсли;
								
							КонецЕсли;	
								
						КонецЕсли;
						
						Если ДанныеУчета.Результат - ЗаСчетФСС <> 0 Тогда
							
							// заводим новую строку данных - для ввода доли за счет работодателя
							СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
							
							// ресурсы
							СтрокаДанных.Результат = ДанныеУчета.Результат - ЗаСчетФСС;
							СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
							
							Если ФормироватьУчетПособий Тогда
								СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
								СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
								СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
								СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
								СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
							КонецЕсли;
							
							// здесь выделяем часть пособия, относящуюся к видам деятельности, облагаемым ЕНВД
							Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
								
								// вычислим результат для дохода под ЕНВД
								РезультатПодЕНВД = Окр((ДанныеУчета.Результат - ЗаСчетФСС) * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
								
								Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
									
									СтрокаДанных.ОблагаетсяЕНВД = Истина;
									Если ФормироватьУчетПособий Тогда
										СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;	
									КонецЕсли;
									
								Иначе
									
									// заводим новую строку данных - для ввода доли дохода под ЕНВД
									НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
									// ресурсы
									НоваяСтрока.Результат = РезультатПодЕНВД;
									// основной строке данных уменьшаем результат
									СтрокаДанных.Результат = ДанныеУчета.Результат - ЗаСчетФСС - РезультатПодЕНВД;
									
									// это строка для подпадающего под ЕНВД дохода
									// "обычная строка" уже введена в движения выше
									НоваяСтрока.ОблагаетсяЕНВД = Истина;
									
									Если ФормироватьУчетПособий Тогда
										СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
										
										СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
										ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
										СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
										СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
										СтрокаУчетаПособий.СуммаВсего = НоваяСтрока.Результат;
										СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
										СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
									КонецЕсли;
									
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
						
					Иначе
						// вычислим результат для дохода под ЕНВД
						Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
							РезультатПодЕНВД = Окр(ДанныеУчета.Результат * БазаЕНВД / ОбщаяБазаРаспределенияСтроки,2);
						Иначе	
							РезультатПодЕНВД = 0;
						КонецЕсли;
						
						// вычислим пособие, выплачиваемое за счет работодателя под общей системой налогообложения 
						БЛЗаСчетРаботодателя = Окр((ДанныеУчета.Результат - РезультатПодЕНВД) * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
						
						// вычислим пособие, выплачиваемое за счет ФСС под общей системой налогообложения
						БЛЗаСчетФСС = ДанныеУчета.Результат - БЛЗаСчетРаботодателя - РезультатПодЕНВД;
						
						Если БЛЗаСчетФСС <> 0 Тогда
							// основной строке данных уменьшаем результат
							СтрокаДанных.Результат	 = ДанныеУчета.Результат - БЛЗаСчетРаботодателя - РезультатПодЕНВД;
							СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.ПособияЗаСчетФСС;
							Если ФормироватьУчетПособий Тогда 
								СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
								СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности - ДанныеУчета.ДниЗаСчетРаботодателя;
							КонецЕсли;
							Если ЕстьДоляБЛЗаСчетРаботодателя Тогда
								СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
								Если ФормироватьУчетПособий Тогда
									СтрокаУчетаПособий.ПериодДействияНачало = Мин(СтрокаУчетаПособий.ПериодДействияКонец, ТретийКалендарныйДень);
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
						Если БЛЗаСчетРаботодателя <> 0 Тогда
							Если БЛЗаСчетФСС <> 0 Тогда
								// заводим новую строку данных - для ввода доли за счет работодателя
								СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
								Если ФормироватьУчетПособий Тогда 
									СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
									СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
								КонецЕсли;
							КонецЕсли;
							// ресурсы
							СтрокаДанных.Результат = БЛЗаСчетРаботодателя;
							СтрокаДанных.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
							СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
							Если ФормироватьУчетПособий Тогда 
								СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
								СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
								СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ДниЗаСчетРаботодателя;
								СтрокаУчетаПособий.ПериодДействияКонец = Мин(СтрокаУчетаПособий.ПериодДействияКонец, ВторойКалендарныйДень);
							КонецЕсли;
						КонецЕсли;
						
						// здесь выделяем часть пособия, относящуюся к видам деятельности, облагаемым ЕНВД
						Если мЕНВД и ОбщаяБазаРаспределенияСтроки <> 0 и БазаЕНВД <> 0 Тогда
							
							Если БЛЗаСчетФСС <> 0 или БЛЗаСчетРаботодателя <> 0 Тогда
							// заводим новую строку данных - для ввода доли дохода под ЕНВД
								СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
							КонецЕсли;
							// ресурсы
							СтрокаДанных.Результат = Мин(РезультатПодЕНВД,ДанныеУчета.ВПределахММОТ);
							СтрокаДанных.ОблагаетсяЕНВД = Истина;
							
							Если ФормироватьУчетПособий Тогда 
								Если БЛЗаСчетФСС <> 0 или БЛЗаСчетРаботодателя <> 0 Тогда
									// заводим новую строку данных - для ввода доли дохода под ЕНВД
									СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
								КонецЕсли;
								СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
								СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетФСС;
								СтрокаУчетаПособий.СуммаВсего = СтрокаДанных.Результат;
								СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
								СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
							КонецЕсли;
							
							// заводим новую строку данных - для ввода доли за счет работодателя
							БЛЗаСчетРаботадателя_В_части_ЕНВД = РезультатПодЕНВД - Мин(РезультатПодЕНВД,ДанныеУчета.ВПределахММОТ);
							Если БЛЗаСчетРаботадателя_В_части_ЕНВД <> 0 Тогда
								НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
								// ресурсы
								НоваяСтрока.Результат = БЛЗаСчетРаботадателя_В_части_ЕНВД;
								НоваяСтрока.КодДоходаЕСН = Справочники.ДоходыЕСН.НеОблагаетсяЦеликом;
								// это строка для подпадающего под ЕНВД дохода
								// "обычная строка" уже введена в движения выше
								НоваяСтрока.ОблагаетсяЕНВД = Истина;
								
								Если ФормироватьУчетПособий Тогда 
									СтрокаУчетаПособий = ПособияСоциальномуСтрахованию.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаУчетаПособий,ДанныеУчета);
									СтрокаУчетаПособий.ОблагаетсяЕНВД = Истина;
									СтрокаУчетаПособий.СпособФинансированияПособий = Перечисления.СпособыФинансированияПособийСоцстрахования.ЗаСчетРаботодателя;
									СтрокаУчетаПособий.СуммаВсего = НоваяСтрока.Результат;
									СтрокаУчетаПособий.ОплаченныеДни = ДанныеУчета.ВсегоДнейНетрудоспособности;
									СтрокаУчетаПособий.ДатаСтраховогоСлучая = ДанныеУчета.ДатаНачалаСобытия;
								КонецЕсли;
								
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
 				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ЗначениеЗаполнено(ДанныеУчета.ДоляСпособаОтражения)  Тогда
			// необходимо обойти все данные относящиеся к одной строке основного регистра и 
			// выполнить распределение, нормируя на долю 
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если Не ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатБаза = NULL Тогда
						Доля = 0;
					Иначе
						Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатБаза / СуммаПоСтроке,2);
					КонецЕсли;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ДанныеУчета.ПроцентЕНВД) Тогда
					СтрокаДанных.ОблагаетсяЕНВД = Истина;
				КонецЕсли;
				
				СтрокаДанных.Результат = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Результат = СтрокаДанных.Результат + ПолныйРезультат - СуммарнаяДоля;
			
		ИначеЕсли ДанныеУчета.КодДоходаЕСН <> РаспределятьПоБазовымНачислениям 
			И ДанныеУчета.СтратегияОтраженияВУчете <> Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления
			И ЗначениеЗаполнено(ДанныеУчета.ПроцентЕНВД) Тогда
			
			// это условие не должно выполняться при обработке вторичных данных 
			// для них всегда КодДоходаЕСН = РаспределятьПоБазовымНачислениям
			
			Если Не ЗначениеЗаполнено(ДанныеУчета.КодДоходаЕСН) Тогда
				// у вида расчета не заполнен реквизит КодДоходаЕСН
				Успешно = Ложь;
				ЗарегистрироватьОшибкуОбработкиДанныхУчета(ТаблицаОшибок, ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, 6);
			КонецЕсли;
			
			Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
				// строке данных проставляем признак дохода подпадающего под ЕНВД
				СтрокаДанных.ОблагаетсяЕНВД = Истина;
			Иначе
				// заводим новую строку данных - для ввода доли дохода под ЕНВД
				НоваяСтрока = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
				
				// вычислим результат для дохода под ЕНВД
				РезультатПодЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
				СкидкаПодЕНВД = Окр(ДанныеУчета.Скидка * ДанныеУчета.ПроцентЕНВД / 100,2);
				// ресурсы
				НоваяСтрока.Результат = РезультатПодЕНВД;
				
				// основной строке данных уменьшаем результат
				СтрокаДанных.Результат = ДанныеУчета.Результат - РезультатПодЕНВД;
				
				Если Не ЭтоОсновныеНачисления Тогда
					НоваяСтрока.Скидка    = СкидкаПодЕНВД;
					СтрокаДанных.Скидка    = ДанныеУчета.Скидка - СкидкаПодЕНВД;
				КонецЕсли;
				
				// это строка для подпадающего под ЕНВД дохода
				// "обычная строка" уже введена в движения выше
				НоваяСтрока.ОблагаетсяЕНВД = Истина;
				
			КонецЕсли;
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;
			
		ИначеЕсли ДанныеУчета.КодДоходаЕСН = РаспределятьПоБазовымНачислениям 
			ИЛИ ДанныеУчета.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления Тогда
			// тут обрабатываем начисления, которые необходимо отразить в учете ЕСН как базовые начсиления, или 
			// доля ЕНВД определяется по базовым начислениям
			// вычисляем результат нормируя его на базу для строк базы относящихся 
			// к одной строке основного регистра

			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если 	ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
					ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			
			// по этим переменным будем уточнять расшифровку ошибки
			НуженКодЕСН 	= Ложь;
			НужнаДоляЕНВД 	= Ложь;
			НеЗаданКодЕСН 	= Ложь;
            
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
					// ошибки нет в том случае, когда код ЕСН задан явно и ЕНВД не используется
					// собственно проверку и регистрацию ошибки произведем позже
				Иначе
   					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
				КонецЕсли;
				
				Если ДанныеУчетаВспомогательные.КодДоходаЕСН = РаспределятьПоБазовымНачислениям и ДанныеУчетаВспомогательные.КодДоходаЕСНРазрез = NULL Тогда
					НуженКодЕСН = Истина;
				ИначеЕсли Не ЗначениеЗаполнено(ДанныеУчетаВспомогательные.КодДоходаЕСН) Тогда
					// у в.р. не задан код ЕСН
					НеЗаданКодЕСН = Истина;
				КонецЕсли;
				
				Если ДанныеУчетаВспомогательные.ОблагаетсяЕНВДРазрез = NULL  и мЕНВД Тогда
					НужнаДоляЕНВД = Истина;
				КонецЕсли;
				
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если НуженКодЕСН или НужнаДоляЕНВД или НеЗаданКодЕСН Тогда
				//есть ошибка, определим код ошибки и зарегистрируем ее
				КодОшибки = ?(НуженКодЕСН и НужнаДоляЕНВД, 3, ?(НужнаДоляЕНВД и НеЗаданКодЕСН, 7, ?(НуженКодЕСН, 4, ?(НужнаДоляЕНВД,5,?(НеЗаданКодЕСН,6,0)))));
				Успешно = Ложь;
				ЗарегистрироватьОшибкуОбработкиДанныхУчета(ТаблицаОшибок, ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, КодОшибки);
			КонецЕсли;
						
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуДвижений(ВыборкаПоШапкеДокумента, ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатБаза = NULL Тогда
						Доля = 0;
					Иначе
						Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатБаза / СуммаПоСтроке,2);
					КонецЕсли;
				КонецЕсли;
				
				// вид дохода заполним данными базы
				Если ДанныеУчета.КодДоходаЕСН = РаспределятьПоБазовымНачислениям и ДанныеУчета.КодДоходаЕСНРазрез = NULL Тогда
					НуженКодЕСН = Истина;
					// делаем пустым код дохода ЕСН 
					СтрокаДанных.КодДоходаЕСН  = Справочники.ДоходыЕСН.ПустаяСсылка();
				ИначеЕсли Не ЗначениеЗаполнено(ДанныеУчета.КодДоходаЕСН) Тогда
					// у в.р. не задан код ЕСН
					НеЗаданКодЕСН = Истина;
				Иначе
					СтрокаДанных.КодДоходаЕСН  = ?(ДанныеУчета.КодДоходаЕСН = РаспределятьПоБазовымНачислениям, ДанныеУчета.КодДоходаЕСНРазрез, ДанныеУчета.КодДоходаЕСН);
				КонецЕсли;
				
				// признак обложения ЕНВД заполним данными базы
				Если ДанныеУчета.ОблагаетсяЕНВДРазрез = NULL Тогда
					Если мЕНВД Тогда
						НужнаДоляЕНВД = Истина;
					КонецЕсли;
					СтрокаДанных.ОблагаетсяЕНВД  = Ложь;
				Иначе
					СтрокаДанных.ОблагаетсяЕНВД  = ДанныеУчета.ОблагаетсяЕНВДРазрез;
				КонецЕсли;
				
				СтрокаДанных.Результат = Доля;
				СуммарнаяДоля = СуммарнаяДоля + Доля;
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			// ошибки округления скаладываются на последнюю запись из группы базовых записей
			СтрокаДанных.Результат = СтрокаДанных.Результат + (ПолныйРезультат - СуммарнаяДоля);
		Иначе
			Если Не ЗначениеЗаполнено(ДанныеУчета.КодДоходаЕСН) Тогда
				// у вида расчета не заполнен реквизит КодДоходаЕСН
				Успешно = Ложь;
				ЗарегистрироватьОшибкуОбработкиДанныхУчета(ТаблицаОшибок, ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, 6);
			КонецЕсли;	
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

	// при записи не затираем уже введенные движения
	НаборЗаписей.Записать(Ложь);// выполняем дозапись (набор записей чистится автоматически)

	
КонецПроцедуры  //ОбработатьДанныеУчета

Процедура ОбработатьТаблицуПособий(ДокументОбъект)

	ТаблицаПособий = ДокументОбъект.ПособияСоциальномуСтрахованию.Выгрузить();
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаПособий", ТаблицаПособий);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаПособий.НомерСтроки,
	|	ТаблицаПособий.Сотрудник,
	|	ТаблицаПособий.ФизЛицо,
	|	ТаблицаПособий.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования,
	|	ТаблицаПособий.СпособФинансированияПособий КАК СпособФинансированияПособий,
	|	ТаблицаПособий.УчитыватьКакНовыйСтраховойСлучай,
	|	ТаблицаПособий.ДатаСтраховогоСлучая,
	|	ТаблицаПособий.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ТаблицаПособий.ПериодДействияКонец,
	|	ТаблицаПособий.ОплаченныеДни,
	|	ТаблицаПособий.СуммаВсего,
	|	ТаблицаПособий.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ТаблицаПособий.ВидРасчета,
	|	ТаблицаПособий.ДокументОснование КАК ДокументОснование,
	|	ТаблицаПособий.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТ_ТаблицаПособий
	|ИЗ
	|	&ТаблицаПособий КАК ТаблицаПособий
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	ВидПособияСоциальногоСтрахования,
	|	СпособФинансированияПособий,
	|	ОблагаетсяЕНВД,
	|	ПериодДействияНачало,
	|	Сторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пособия.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования,
	|	Пособия.СпособФинансированияПособий КАК СпособФинансированияПособий,
	|	Пособия.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Пособия.ДокументОснование КАК ДокументОснование,
	|	МИНИМУМ(Пособия.ПериодДействияНачало) КАК ПериодДействияНачало,
	|	Пособия.УчитыватьКакНовыйСтраховойСлучай,
	|	Пособия.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТ_ПособияНовыйСтраховойСлучай
	|ИЗ
	|	ВТ_ТаблицаПособий КАК Пособия
	|ГДЕ
	|	Пособия.УчитыватьКакНовыйСтраховойСлучай
	|
	|СГРУППИРОВАТЬ ПО
	|	Пособия.ДокументОснование,
	|	Пособия.ОблагаетсяЕНВД,
	|	Пособия.ВидПособияСоциальногоСтрахования,
	|	Пособия.СпособФинансированияПособий,
	|	Пособия.УчитыватьКакНовыйСтраховойСлучай,
	|	Пособия.Сторно
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	ВидПособияСоциальногоСтрахования,
	|	СпособФинансированияПособий,
	|	ОблагаетсяЕНВД,
	|	ПериодДействияНачало,
	|	Сторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пособия.Сотрудник КАК Сотрудник,
	|	Пособия.ФизЛицо,
	|	Пособия.ВидПособияСоциальногоСтрахования КАК ВидПособияСоциальногоСтрахования,
	|	Пособия.СпособФинансированияПособий,
	|	Пособия.ДатаСтраховогоСлучая,
	|	Пособия.ПериодДействияНачало КАК ПериодДействияНачало,
	|	Пособия.ПериодДействияКонец,
	|	Пособия.ОплаченныеДни,
	|	Пособия.СуммаВсего,
	|	Пособия.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Пособия.ВидРасчета,
	|	Пособия.ДокументОснование,
	|	Пособия.Сторно,
	|	ЕСТЬNULL(ВТ_ПособияНовыйСтраховойСлучай.УчитыватьКакНовыйСтраховойСлучай, ЛОЖЬ) КАК УчитыватьКакНовыйСтраховойСлучай
	|ИЗ
	|	ВТ_ТаблицаПособий КАК Пособия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПособияНовыйСтраховойСлучай КАК ВТ_ПособияНовыйСтраховойСлучай
	|		ПО Пособия.ДокументОснование = ВТ_ПособияНовыйСтраховойСлучай.ДокументОснование
	|			И Пособия.ВидПособияСоциальногоСтрахования = ВТ_ПособияНовыйСтраховойСлучай.ВидПособияСоциальногоСтрахования
	|			И Пособия.СпособФинансированияПособий = ВТ_ПособияНовыйСтраховойСлучай.СпособФинансированияПособий
	|			И Пособия.ОблагаетсяЕНВД = ВТ_ПособияНовыйСтраховойСлучай.ОблагаетсяЕНВД
	|			И Пособия.ПериодДействияНачало = ВТ_ПособияНовыйСтраховойСлучай.ПериодДействияНачало
	|			И Пособия.Сторно = ВТ_ПособияНовыйСтраховойСлучай.Сторно
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пособия.НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	ТаблицаПособий = Запрос.Выполнить().Выгрузить();
	ДокументОбъект.ПособияСоциальномуСтрахованию.Загрузить(ТаблицаПособий);	

КонецПроцедуры


// Выполняет автоматическое заполнение наборов записей о доходах ЕСН
// Параметры: 
//  НаборЗаписейОсновной, НаборЗаписейДополнительный
//  МассивПодразделений - массив подразделений, если Неопределено, тогда по всем
//
// Возвращаемое значение:
//  Истина, если автозаполнение полностью выполнено 
//	Ложь, если некоторые строки движений остались недозаполненными
//
Функция АвтозаполнениеНаборовЗаписейОДоходах(ДокументОбъект, ВыборкаПоШапкеДокумента, НаборЗаписейОсновной, НаборЗаписейДополнительный, ОрганичениеНаСотрудников, ТаблицаОшибок) Экспорт
	
	Успешно = Истина;
	
	// определим налоговый режим
	НалоговыйУчет.ОбновитьДанныеУчетнойПолитикиПоНалоговомуУчету(глЗначениеПеременной("УчетнаяПолитикаОтраженияЗарплатыВУчете"), КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации), ВыборкаПоШапкеДокумента.ОбособленноеПодразделение);
	УчетнаяПолитика = глЗначениеПеременной("УчетнаяПолитикаОтраженияЗарплатыВУчете")[КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации)][ВыборкаПоШапкеДокумента.ОбособленноеПодразделение];
	
	ТаблицаНачислений = ПолучитьТаблицуНачислений(ВыборкаПоШапкеДокумента, ОрганичениеНаСотрудников);
	ПорядкиРасчета = ТаблицаНачислений.ВыгрузитьКолонку("ПорядокРасчета");
	СтруктураПоиска = Новый Структура;
	СписокНачисленийДляОтбора = Новый Массив;
	
    ПорядокРасчета = Неопределено;
	Для Счетчик = 0 По ПорядкиРасчета.ВГраница() Цикл
		
		Если ПорядкиРасчета[Счетчик] = ПорядокРасчета Тогда
			Продолжить;
		КонецЕсли;
		
		ПорядокРасчета = ПорядкиРасчета[Счетчик];
		
		СписокНачисленийДляОтбора.Очистить();

		СтруктураПоиска.Вставить("ПорядокРасчета", ПорядокРасчета);
		
		//основные начисления
		СтруктураПоиска.Вставить("ВидНачисления", "Основные");
		СтрокиТаблицы = ТаблицаНачислений.НайтиСтроки(СтруктураПоиска);
		Для каждого Строка Из СтрокиТаблицы Цикл
			СписокНачисленийДляОтбора.Добавить(Строка.ВидРасчета);
		КонецЦикла;
		Если СписокНачисленийДляОтбора.Количество() > 0 Тогда
			//получим и обработаем данные учета
			ДанныеУчета = ПолучитьДанныеУчета(ВыборкаПоШапкеДокумента, УчетнаяПолитика, СписокНачисленийДляОтбора, ОрганичениеНаСотрудников, Истина, ?(Счетчик = 0, Истина, Ложь));
			ОбработатьДанныеУчета(ДокументОбъект, УчетнаяПолитика, ВыборкаПоШапкеДокумента, ДанныеУчета, Успешно, НаборЗаписейОсновной, ТаблицаОшибок);
		КонецЕсли;             
			
		//дополнительные начисления
		СписокНачисленийДляОтбора.Очистить();
		СтруктураПоиска.Вставить("ВидНачисления", "Дополнительные");
		СтрокиТаблицы = ТаблицаНачислений.НайтиСтроки(СтруктураПоиска);
		Для каждого Строка Из СтрокиТаблицы Цикл
			СписокНачисленийДляОтбора.Добавить(Строка.ВидРасчета);
		КонецЦикла;
		Если СписокНачисленийДляОтбора.Количество() > 0 Тогда
			//получим и обработаем данные учета
			ДанныеУчета = ПолучитьДанныеУчета(ВыборкаПоШапкеДокумента, УчетнаяПолитика, СписокНачисленийДляОтбора, ОрганичениеНаСотрудников, Ложь, ?(Счетчик = 0, Истина, Ложь));
			ОбработатьДанныеУчета(ДокументОбъект, УчетнаяПолитика, ВыборкаПоШапкеДокумента, ДанныеУчета, Успешно, НаборЗаписейДополнительный, ТаблицаОшибок);
		КонецЕсли;
		
	КонецЦикла;	
	
	ОбработатьТаблицуПособий(ДокументОбъект);
	
	Возврат Не Успешно;
	
КонецФункции

// Процедура рассчитывает скидки по зарегистрированным доходам и записывает их в реквизит "Скидка" набора записей регистра "ЕСНДополнительныеНачисления"
// При расчете учитываются ранее предоставленные скидки в прошлых периодах и в текущем. 
// Если скидки были не предоставлены или неверно рассчитаны, то происходит их корректировка.
//
Процедура РасчетСкидокКДоходам(ВыборкаПоШапкеДокумента, НаборЗаписейДополнительный) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамРегистратор",					ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("парамКонецМесяцаПериодаРегистрации",	КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации));
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",			ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("парамНачалоГода",					НачалоГода(ВыборкаПоШапкеДокумента.ПериодРегистрации));
	
	// ---------------------------------------------------------------------------------------
	// Тексты запросов
	
	// "Скидочные" доходы
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСНСкидкиКДоходамСрезПоследних.КодДоходаЕСН КАК КодДоходаЕСН,
	|	ЕСНСкидкиКДоходамСрезПоследних.ГодоваяСкидка
	|ПОМЕСТИТЬ ВТОбрабатываемыеДоходы
	|ИЗ
	|	РегистрСведений.ЕСНСкидкиКДоходам.СрезПоследних(&парамНачалоГода, ) КАК ЕСНСкидкиКДоходамСрезПоследних
	|ГДЕ
	|	ЕСНСкидкиКДоходамСрезПоследних.ГодоваяСкидка <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодДоходаЕСН";
	Запрос.Выполнить(); 
	// Предполагаем, что доходы, по которым могут быть предоставлены скидки, не регистрируются 
	// в регистре "ЕСНОсновныеНачисления".
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСНДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|	ЕСНДополнительныеНачисления.Результат
	|ПОМЕСТИТЬ ВТСписокФизЛиц
	|ИЗ
	|	РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|ГДЕ
	|	ЕСНДополнительныеНачисления.Регистратор = &парамРегистратор
	|	И ЕСНДополнительныеНачисления.КодДоходаЕСН В
	|			(ВЫБРАТЬ
	|				Список.КодДоходаЕСН
	|			ИЗ
	|				ВТОбрабатываемыеДоходы КАК Список)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";

	Результат = Запрос.Выполнить().Выгрузить(); 
	КоличествоСотрудников = Результат[0].Количество;
	
	Если КоличествоСотрудников = 0 Тогда  // считать оказалось нечего
		Возврат
	КонецЕсли;
	
	// Соберем сведения о ранее предоставленных скидках и доходах налогового периода.
	// Добавим сведения о нормативных размерах скидок ЕСН по кодам доходов
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоходыПоМесяцам.ФизЛицо,
	|	ДоходыПоМесяцам.КодДоходаЕСН КАК КодДоходаЕСН,
	|	СУММА(ДоходыПоМесяцам.Результат) КАК РезультатЗаГод,
	|	СУММА(ДоходыПоМесяцам.Скидка) КАК ПредоставленнаяСкидкаЗаГод,
	|	ЕСНСкидкиКДоходам.ГодоваяСкидка КАК ПравоНаСкидку
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН КАК КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.Результат КАК Результат,
	|		0 КАК Скидка
	|	ИЗ
	|		ВТСписокФизЛиц КАК ЕСНДополнительныеНачисления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНСведенияОДоходах.ФизЛицо,
	|		ЕСНСведенияОДоходах.КодДоходаЕСН,
	|		ЕСНСведенияОДоходах.Результат,
	|		ЕСНСведенияОДоходах.Скидка
	|	ИЗ
	|		РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|	ГДЕ
	|		ЕСНСведенияОДоходах.Период МЕЖДУ &парамНачалоГода И &парамКонецМесяцаПериодаРегистрации
	|		И ЕСНСведенияОДоходах.ФизЛицо В
	|				(ВЫБРАТЬ
	|					СписокФизлиц.ФизЛицо
	|				ИЗ
	|					ВТСписокФизЛиц КАК СписокФизлиц)
	|		И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|		И ЕСНСведенияОДоходах.КодДоходаЕСН В
	|				(ВЫБРАТЬ
	|					Список.КодДоходаЕСН
	|				ИЗ
	|					ВТОбрабатываемыеДоходы КАК Список)) КАК ДоходыПоМесяцам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбрабатываемыеДоходы КАК ЕСНСкидкиКДоходам
	|		ПО ДоходыПоМесяцам.КодДоходаЕСН = ЕСНСкидкиКДоходам.КодДоходаЕСН
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыПоМесяцам.ФизЛицо,
	|	ДоходыПоМесяцам.КодДоходаЕСН,
	|	ЕСНСкидкиКДоходам.ГодоваяСкидка";
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	СтруктураПоиска = Новый Структура("Физлицо, КодДоходаЕСН");
	
	// Выгрузим набор для модификации скидки
	МодифицируемаяТаблица = НаборЗаписейДополнительный.Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		
		// Распределим скидку между строками о доходах
		ЗаполнитьЗначенияСвойств(СтруктураПоиска,Выборка); // Физлицо, КодДоходаЕСН
		
		НайденныеСтроки = МодифицируемаяТаблица.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		// В общем случае предоставляемая скидка есть
		Скидка = Мин(Выборка.РезультатЗаГод, Выборка.ПравоНаСкидку) - Выборка.ПредоставленнаяСкидкаЗаГод;
		
		ОсталосьРаспределить = Скидка;
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			//сначала обработаем записи с отрицательным результатом, "вернем" скидку
			Если НайденнаяСтрока.Результат < 0 Тогда
				НайденнаяСтрока.Скидка = Макс( -(Выборка.ПравоНаСкидку - ОсталосьРаспределить), НайденнаяСтрока.Результат);
				ОсталосьРаспределить = ОсталосьРаспределить - НайденнаяСтрока.Скидка;
			КонецЕсли;
		КонецЦикла; 
		
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			Если НайденнаяСтрока.Результат >= 0 Тогда
				НайденнаяСтрока.Скидка = Мин(ОсталосьРаспределить, НайденнаяСтрока.Результат);
				ОсталосьРаспределить = ОсталосьРаспределить - НайденнаяСтрока.Скидка;
			КонецЕсли;
		КонецЦикла; 	
		
	КонецЦикла; 
	
	// Загрузим модифицированный набор
	НаборЗаписейДополнительный.Загрузить(МодифицируемаяТаблица);
	
КонецПроцедуры // РасчетСкидокКДоходам()



