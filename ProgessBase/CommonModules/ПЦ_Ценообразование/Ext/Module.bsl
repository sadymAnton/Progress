#Если Клиент Тогда
Функция ВернутьБазовыйТипЦенКлиент(ТипЦен) Экспорт
	//Передается объект
	Если Не ТипЦен.Рассчитывается Тогда
		Возврат ТипЦен;
	КонецЕсли;
	
	ТипЦенБаза = ТипЦен;
	Сч = 0;
	Пока Сч < 1 Цикл
		Сч = Сч + 1;
		
		Если Не ТипЦенБаза.БазовыйТипЦен.Рассчитывается Тогда
			Возврат ТипЦенБаза.БазовыйТипЦен;
		Иначе
			ТипЦенБаза = ТипЦенБаза.БазовыйТипЦен;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
	
КонецФункции
#КонецЕсли

// Процедура заполняет единицу и цену по ценам продажи в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти           - строка табличной части документа,
//  ДокументОбъект                 - объект редактируемого документа.
//  ВалютаРегламентированногоУчета - валюта регламентированного учета,
//  ВалютаДокумента                - необязательный параметр, валюта, в которой надо заполнить цену,
//                                   если не задан, то цена заполняется в валюте документа,
//                                   если нет валюты документа, то в валюте упр. учета.
//  ТипЦен                         - необязательный параметр, тип цен для которого нужно выполнить заполнение
//  ЭтоРозница                     - необязательный параметр, признак того, что цену нужно заполнять из регистра цены АТТ
//
Процедура ЗаполнитьЕдиницуЦенуПродажиТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, ВалютаРегламентированногоУчета,
                                              ВалютаДокумента =Неопределено, ТипЦен = Неопределено, ЭтоРозница = Ложь) Экспорт

	ИмяТабличнойЧасти = ОбщегоНазначения.ПолучитьИмяТабличнойЧастиПоСсылкеНаСтроку(СтрокаТабличнойЧасти);

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	
	//m.ionov@a-prof.ru 02.03.2015
	//Определим дату расчета
	мДатаРасчета = ДокументОбъект.Дата;
	//{06.03.2017 Островерхий заявка №60935
	мДатаРасчетаДопСкидки = ДокументОбъект.Дата;
	//06.03.2017 Островерхий} 	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЗаказПокупателя")
		ИЛИ ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КП_ИмпортированныйЗаказ") Тогда
		Если ДокументОбъект.ПЦ_ПересчитыватьЦеныПриОтгрузке Тогда
			//++ Spl_Апроф 17.04.2015 (k.russkih@a-prof.ru)
			//мДатаРасчета = КонецДня(ДокументОбъект.ДатаОтгрузки);
			мДатаРасчета = ?(СтрокаТабличнойЧасти.ПЦ_ДатаЦены = Дата(1,1,1), КонецДня(ДокументОбъект.ДатаОтгрузки), КонецДня(СтрокаТабличнойЧасти.ПЦ_ДатаЦены));
			//{06.03.2017 Островерхий заявка №60935 
			мДатаРасчетаДопСкидки = КонецДня(ДокументОбъект.ДатаОтгрузки);  
			//06.03.2017 Островерхий} 
		Иначе
			//++ Spl_Апроф 17.04.2015 (k.russkih@a-prof.ru)
			//мДатаРасчета = КонецДня(ДокументОбъект.Дата);
			мДатаРасчета = ?(СтрокаТабличнойЧасти.ПЦ_ДатаЦены = Дата(1,1,1), КонецДня(ДокументОбъект.Дата), КонецДня(СтрокаТабличнойЧасти.ПЦ_ДатаЦены));
			//{06.03.2017 Островерхий заявка №60935 
			Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЗаказПокупателя") И ДокументОбъект.ПЦ_ПересчитыватьЦеныНаДатуДоставки Тогда
				мДатаРасчетаДопСкидки = КонецДня(ДокументОбъект.КП_ДатаДоставки); 
			КонецЕсли; 
			//06.03.2017 Островерхий}
		КонецЕсли;
		//++ Spl_Апроф 17.04.2015 (k.russkih@a-prof.ru)
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ПЦ_ДатаЦены", МетаданныеДокумента, МетаданныеДокумента) Тогда
		мДатаРасчета = ?(СтрокаТабличнойЧасти.ПЦ_ДатаЦены = Дата(1,1,1), КонецДня(ДокументОбъект.Дата), КонецДня(СтрокаТабличнойЧасти.ПЦ_ДатаЦены));
	КонецЕсли; 
	
	
	//----m.ionov@a-prof.ru---

	//m.ionov@a-prof.ru 02.10.2014
	Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ПЦ_ТипЦен", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		//Тип цен берем только из табличной части, если тип цен не задан то и цены не будет
		ТекТипЦен = СтрокаТабличнойЧасти.ПЦ_ТипЦен;
		
	Иначе
	//----m.ionov@a-prof.ru---
		Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
			ТекТипЦен = ДокументОбъект.ТипЦен;
		Иначе
			ТекТипЦен = ТипЦен;
		КонецЕсли;
	КонецЕсли;

	ХарактеристикаНоменклатуры = ОбработкаТабличныхЧастей.ПолучитьЗначениеРеквизитаТЧ(МетаданныеДокумента, ИмяТабличнойЧасти, СтрокаТабличнойЧасти, "ХарактеристикаНоменклатуры");

	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		Если МетаданныеДокумента.Реквизиты.Найти("ВалютаДокумента") <> Неопределено Тогда
			ВалютаДокумента    = ДокументОбъект.ВалютаДокумента;
			КурсДокумента      = ЗаполнениеДокументов.КурсДокумента(ДокументОбъект, ВалютаРегламентированногоУчета);
			КратностьДокумента = ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, ВалютаРегламентированногоУчета);
		Иначе

			// Если есть цена и тип цен, но нет валюты, тогда в качестве валюты документа возьмем валюту регламентированного учета.
			ВалютаДокумента    = ВалютаРегламентированногоУчета;
			КурсДокумента      = 1;
			КратностьДокумента = 1;
		КонецЕсли;
	Иначе
		СтруктураВалюты    = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаДокумента, мДатаРасчета);
		КурсДокумента      = СтруктураВалюты.Курс;
		КратностьДокумента = СтруктураВалюты.Кратность;
	КонецЕсли;

	ТекСклад = ОбщегоНазначения.ПолучитьРеквизитШапки("Склад", ДокументОбъект, МетаданныеДокумента);
	Если ТекСклад = Неопределено Тогда
		ТекСклад = ОбщегоНазначения.ПолучитьРеквизитШапки("СкладОрдер", ДокументОбъект, МетаданныеДокумента, Справочники.Склады.ПустаяСсылка());

		Если ТипЗнч(ТекСклад) <> Тип("СправочникСсылка.Склады") Тогда
			ТекСклад = Справочники.Склады.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;

	Если ЭтоРозница И ТекСклад.ВидСклада = Перечисления.ВидыСкладов.Розничный Тогда
		Если НЕ ЗначениеЗаполнено(ТекСклад) Тогда
			СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтрокаТабличнойЧасти.Номенклатура.ЕдиницаХраненияОстатков;
			СтрокаТабличнойЧасти.Цена = 0;
		Иначе
			Цена = УправлениеРозничнойТорговлей.ПолучитьПродажнуюЦену(мДатаРасчета, СтрокаТабличнойЧасти.Номенклатура,
			   ХарактеристикаНоменклатуры, ТекСклад, ОбщегоНазначения.ПолучитьРеквизитШапки("УсловиеПродаж",
			   ДокументОбъект, МетаданныеДокумента));

			Цена = Ценообразование.ПересчитатьЦенуПриИзмененииВалюты(Цена, ВалютаРегламентированногоУчета,
			   ВалютаДокумента, КурсДокумента, КратностьДокумента, мДатаРасчета);

			// Если цену заполнили из регистра, то ее надо пересчитывать по флагам налогообложения.
			Если НЕ ЗначениеЗаполнено(Цена) Тогда
				СтрокаТабличнойЧасти.Цена = 0;
			Иначе
				СтрокаТабличнойЧасти.Цена = Ценообразование.ПересчитатьЦенуПриИзмененииФлаговНалогов(Цена,
							Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры,
							ТекТипЦен.ЦенаВключаетНДС,
							МетаданныеДокумента.Реквизиты.Найти("УчитыватьНДС") <> Неопределено
							И ДокументОбъект.УчитыватьНДС,
							МетаданныеДокумента.Реквизиты.Найти("СуммаВключаетНДС") <> Неопределено
							И ДокументОбъект.СуммаВключаетНДС,
							?(ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти),
							УчетНДС.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС),0));
			КонецЕсли;

			// Если единица оказалась не заполненной, то заполняем ее основной единицей номеклатуры.
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) Тогда
				СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтрокаТабличнойЧасти.Номенклатура.ЕдиницаХраненияОстатков;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Цена = Ценообразование.ПолучитьЦенуНоменклатуры(СтрокаТабличнойЧасти.Номенклатура, ХарактеристикаНоменклатуры,
										ТекТипЦен, мДатаРасчета, СтрокаТабличнойЧасти.ЕдиницаИзмерения,
										ВалютаДокумента, КурсДокумента, КратностьДокумента, ,
										ОбщегоНазначения.ПолучитьРеквизитШапки("ДоговорКонтрагента", ДокументОбъект, МетаданныеДокумента),
										ОбщегоНазначения.ПолучитьРеквизитШапки("УсловиеПродаж", ДокументОбъект, МетаданныеДокумента),
										ОбщегоНазначения.ПолучитьРеквизитШапки("Грузополучатель", ДокументОбъект, МетаданныеДокумента), //m.ionov@a-prof.ru 02.10.2014 Добавили передачу адреса поставки
										ОбщегоНазначения.ПолучитьРеквизитШапки("Контрагент", ДокументОбъект, МетаданныеДокумента)); //m.ionov@a-prof.ru 02.10.2014 Добавили передачу контрагента


		// Если цену заполнили из регистра, то ее надо пересчитывать по флагам налогообложения.
		Если НЕ ЗначениеЗаполнено(Цена) Тогда
			СтрокаТабличнойЧасти.Цена = 0;
		Иначе
			СтрокаТабличнойЧасти.Цена = Ценообразование.ПересчитатьЦенуПриИзмененииФлаговНалогов(Цена,
						Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры,
						ТекТипЦен.ЦенаВключаетНДС,
						МетаданныеДокумента.Реквизиты.Найти("УчитыватьНДС") <> Неопределено
						И ДокументОбъект.УчитыватьНДС,
						МетаданныеДокумента.Реквизиты.Найти("СуммаВключаетНДС") <> Неопределено
						И ДокументОбъект.СуммаВключаетНДС,
						?(ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти),
						УчетНДС.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС),0));
		КонецЕсли;

		//{28.11.2016 Островерхий заявка №57373 
		Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ПЦ_ПроцентДопИзмененияЦены", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
			
			//{06.03.2017 Островерхий заявка №60935
			//ТаблицаУсловийДопИзмененияЦены = Ценообразование.ПолучитьУсловияДопИзмененияЦеныПоАПИНоменклатуре(мДатаРасчета, ДокументОбъект.Грузополучатель, СтрокаТабличнойЧасти.Номенклатура);
			ТаблицаУсловийДопИзмененияЦены = Ценообразование.ПолучитьУсловияДопИзмененияЦеныПоАПИНоменклатуре(мДатаРасчетаДопСкидки, ДокументОбъект.Грузополучатель, СтрокаТабличнойЧасти.Номенклатура);
			//06.03.2017 Островерхий} 
			Ценообразование.УдалимИзНесоответствующиеУсловияДопИзмененияЦены(ДокументОбъект, ТаблицаУсловийДопИзмененияЦены);
			
			СтрокаТабличнойЧасти.ПЦ_ПроцентДопИзмененияЦены = ТаблицаУсловийДопИзмененияЦены.Итог("ПроцентИзмененияЦены");	
			
			Если СтрокаТабличнойЧасти.ПЦ_ПроцентДопИзмененияЦены <> 0 Тогда
			
				СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Цена - (СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.ПЦ_ПроцентДопИзмененияЦены / 100);	
			
			КонецЕсли; 
			
		КонецЕсли;  
		//28.11.2016 Островерхий} 
		
		// Если единица оказалась не заполненной, то заполняем ее основной единицей номеклатуры.
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) Тогда
			СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтрокаТабличнойЧасти.Номенклатура.ЕдиницаХраненияОстатков;
		КонецЕсли;
	КонецЕсли;

	СтрокаТабличнойЧасти.Коэффициент = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;

	//Из-за этих двух проедур пришлось скопировать процедуру из типового общего модуля ОбработкаТабличныхЧастей
	//РассчитатьКоличествоТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект);
	
	//ЗаполнитьЕдиницуМестТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект);

КонецПроцедуры // ЗаполнитьЕдиницуЦенуПродажиТабЧасти()

Функция ПолучитьТипЦенПродажи(Дата, Регион, ПроектГП, КаналПродаж = Неопределено, УсловиеПоставки = Неопределено, Контрагент = Неопределено, ДоговорКонтрагента = Неопределено, АдресПоставки = Неопределено, ТоварнаяКатегория = Неопределено, Брендообъем = Неопределено, Номенклатура = Неопределено, ХарактеристикаНоменклатуры = Неопределено, Дивизион = Неопределено, ВернутьВесьСписок = Ложь) Экспорт	
	//Обязательные параметры Регион и ПроектГП
	//Возвращает список значений с типами цен по указанным параметрам

	СпТиповЦен = Новый СписокЗначений;
	ХарактеристикиНоменклатуры = Ценообразование.ПолучитьМассивХарактеристик(ХарактеристикаНоменклатуры);
	
	//m.ionov@a-prof.ru 22.01.2015
	//Если Дивизион = Неопределено И Не АдресПоставки = Неопределено И ТипЗнч(АдресПоставки) = Тип("СправочникСсылка.АдресаПоставки") Тогда
	Если Дивизион = Неопределено И Не Контрагент = Неопределено И ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		Дивизион = Контрагент.Дивизион;
	КонецЕсли;
	
	//m.ionov@a-prof.ru 27.01.2015
	КатегорияТиповЦен = Справочники.ПЦ_КатегорииТиповЦен.ПустаяСсылка();
	Если Не Контрагент = Неопределено И ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		КатегорияТиповЦен = Контрагент.НСИ_КатегорияТиповЦен;	
	КонецЕсли;
	//----m.ionov@a-prof.ru---
	
	Если НЕ Контрагент = Неопределено И Не Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
		
		//Проверим индивидуальные цены
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Дата", Дата);
		
		Запрос.УстановитьПараметр("Контрагент", Контрагент); 
		
		Запрос.УстановитьПараметр("Договор", ДоговорКонтрагента);
		Запрос.УстановитьПараметр("ПустойДоговор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		
		Запрос.УстановитьПараметр("Регион", Регион);
		Запрос.УстановитьПараметр("ПустойРегион", Справочники.Регионы.ПустаяСсылка());
		
		Запрос.УстановитьПараметр("КаналПродаж", КаналПродаж);
		Запрос.УстановитьПараметр("ПустойКаналПродаж", Справочники.НСИ_КаналыПродаж.ПустаяСсылка());
		
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		//m.ionov@a-prof.ru 14.04.2015
		Запрос.УстановитьПараметр("Брендообъем", Брендообъем); 
		//----m.ionov@a-prof.ru---
		Запрос.УстановитьПараметр("ХарактеристикиНоменклатуры", ХарактеристикиНоменклатуры);
		Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
		
		Запрос.УстановитьПараметр("КатегорияТиповЦен", КатегорияТиповЦен);
		
		Запрос.УстановитьПараметр("Неопределено", Неопределено);

		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	ВложенныйЗапрос.ТипЦен,
		               |	ВложенныйЗапрос.ПорядокДоговор + ВложенныйЗапрос.ПорядокРегион + ВложенныйЗапрос.ПорядокКаналПродаж + ВложенныйЗапрос.ПорядокХарактеристикаНоменклатуры КАК Порядок
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		УсловияПоставок.ПЦ_ТипЦен КАК ТипЦен,
		               |		ВЫБОР
		               |			КОГДА УсловияПоставок.ДоговорКонтрагента = &Договор
		               |				ТОГДА 1
		               |			ИНАЧЕ 0
		               |		КОНЕЦ КАК ПорядокДоговор,
		               |		ВЫБОР
		               |			КОГДА УсловияПоставок.ПЦ_Регион = &Регион
		               |				ТОГДА 1
		               |			ИНАЧЕ 0
		               |		КОНЕЦ КАК ПорядокРегион,
		               |		ВЫБОР
		               |			КОГДА УсловияПоставок.ПЦ_КаналПродаж = &КаналПродаж
		               |				ТОГДА 1
		               |			ИНАЧЕ 0
		               |		КОНЕЦ КАК ПорядокКаналПродаж,
		               |		ВЫБОР
		               |			КОГДА УсловияПоставок.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
		               |				ТОГДА 1
		               |			ИНАЧЕ 0
		               |		КОНЕЦ КАК ПорядокХарактеристикаНоменклатуры
		               |	ИЗ
		               |		РегистрСведений.УсловияПоставокПоДоговорамКонтрагентовПоНоменклатуре.СрезПоследних(
		               |				&Дата,
		               |				((ДоговорКонтрагента = &Договор И НЕ &Договор = &ПустойДоговор)
		               |					ИЛИ (ПЦ_Контрагент = &Контрагент
		               |						И ДоговорКонтрагента = &ПустойДоговор))
		               |					И (ПЦ_Регион = &Регион
		               |						ИЛИ ПЦ_Регион = &ПустойРегион ИЛИ &Регион = &Неопределено)
		               |					И (ПЦ_КаналПродаж = &КаналПродаж
		               |						ИЛИ ПЦ_КаналПродаж = &ПустойКаналПродаж ИЛИ &КаналПродаж = &Неопределено)
					   //m.ionov@a-prof.ru 14.04.2015
		               //|					И Номенклатура = &Номенклатура
					   |					И (Номенклатура = &Номенклатура ИЛИ ((&Номенклатура = &Неопределено) И (Номенклатура.НСИ_Брендообъем = &Брендообъем)))
					   //----m.ionov@a-prof.ru---
		               |					И ХарактеристикаНоменклатуры В (&ХарактеристикиНоменклатуры)
		               |					И НЕ ПЦ_ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦенНоменклатуры.ПустаяСсылка)) КАК УсловияПоставок
		               //|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК сНоменклатура
		               //|			ПО (сНоменклатура.Ссылка = УсловияПоставок.Номенклатура)
		               |	ГДЕ
		               |		УсловияПоставок.Цена > 0"
		               //|		И сНоменклатура.Ссылка = &Номенклатура"
					   +?(ЗначениеЗаполнено(КатегорияТиповЦен),"
					   |		И УсловияПоставок.ПЦ_ТипЦен.ПЦ_Категория = &КатегорияТиповЦен","") + ") КАК ВложенныйЗапрос
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Порядок УБЫВ";
        		
		Запрос.Текст = ТекстЗапроса;

		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СпТиповЦен.Добавить(Выборка.ТипЦен);
			
			//m.ionov@a-prof.ru 24.02.2015
			Если Не ВернутьВесьСписок Тогда
				Прервать;
			КонецЕсли;
			//----m.ionov@a-prof.ru---
		КонецЦикла;
		
		Если СпТиповЦен.Количество() > 0 Тогда
			Возврат СпТиповЦен;
		КонецЕсли;
	КонецЕсли;
	
	//Ищем в ценовых эшелонах
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("ПустойРегион", Справочники.Регионы.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("ПроектГП", ПроектГП);
	Запрос.УстановитьПараметр("ПустойПроектГП", Справочники.ПРГ_ПроектыГП.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("КаналПродаж", КаналПродаж);
	Запрос.УстановитьПараметр("ПустойКаналПродаж", Справочники.НСИ_КаналыПродаж.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("УсловиеПоставки", УсловиеПоставки);
	Запрос.УстановитьПараметр("ПустойУсловиеПоставки", Перечисления.ПТЛ_УсловияПоставки.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент); 
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка()); 
	
	Запрос.УстановитьПараметр("АдресПоставки", АдресПоставки); 
	Запрос.УстановитьПараметр("ПустойАдресПоставки", Справочники.АдресаПоставки.ПустаяСсылка()); 
	
	Запрос.УстановитьПараметр("Дивизион", Дивизион); 
	Запрос.УстановитьПараметр("ПустойДивизион", Справочники.ПРГДивизионы.ПустаяСсылка()); 
	
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ТоварнаяКатегория); 
	Запрос.УстановитьПараметр("ПустойТоварнаяКатегория", Справочники.НСИ_ТоварныеКатегории.ПустаяСсылка()); 
	
	Запрос.УстановитьПараметр("Брендообъем", Брендообъем); 
	Запрос.УстановитьПараметр("ПустойБрендообъем", Справочники.НСИ_Брендообъемы.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура); 
	Запрос.УстановитьПараметр("ПустойНоменклатура", Справочники.Номенклатура.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("КатегорияТиповЦен", КатегорияТиповЦен);
	
	//m.ionov@a-prof.ru 24.02.2015
	Запрос.УстановитьПараметр("Неопределено", Неопределено);
	//----m.ionov@a-prof.ru---

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПЦ_ИсключенияИзЦеновыхЭшелоновСрезПоследних.ТипЦен
	               |ПОМЕСТИТЬ Исключения
	               |ИЗ
	               |	РегистрСведений.ПЦ_ИсключенияИзЦеновыхЭшелонов.СрезПоследних(
	               |			&Дата,
	               |			(Регион = &Регион
				   |					ИЛИ Регион = &ПустойРегион)
	               |				И (ПроектГП = &ПроектГП
				   |					ИЛИ ПроектГП = &ПустойПроектГП)
	               |				И (КаналПродаж = &КаналПродаж            
	               |					ИЛИ КаналПродаж = &ПустойКаналПродаж)
	               |				И (УсловиеПоставки = &УсловиеПоставки
	               |					ИЛИ УсловиеПоставки = &ПустойУсловиеПоставки)
	               |				И (Контрагент = &Контрагент
	               |					ИЛИ Контрагент = &ПустойКонтрагент)
	               |				И (АдресПоставки = &АдресПоставки
	               |					ИЛИ АдресПоставки = &ПустойАдресПоставки)
				   |				И (Дивизион = &Дивизион
	               |					ИЛИ Дивизион = &ПустойДивизион)
	               |				И (ТоварнаяКатегория = &ТоварнаяКатегория
	               |					ИЛИ ТоварнаяКатегория = &ПустойТоварнаяКатегория)
	               |				И (Брендообъем = &Брендообъем
	               |					ИЛИ Брендообъем = &ПустойБрендообъем)
	               |				И (Номенклатура = &Номенклатура
	               |					ИЛИ Номенклатура = &ПустойНоменклатура)) КАК ПЦ_ИсключенияИзЦеновыхЭшелоновСрезПоследних
				   |ГДЕ
				   |	НЕ ПЦ_ИсключенияИзЦеновыхЭшелоновСрезПоследних.ТипЦен = Значение(Справочник.ТипыЦенНоменклатуры.ПустаяСсылка)
				   //|	ПЦ_ИсключенияИзЦеновыхЭшелоновСрезПоследних.Регион = &Регион
				   //|	И ПЦ_ИсключенияИзЦеновыхЭшелоновСрезПоследних.ПроектГП = &ПроектГП
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВложенныйЗапрос.ТипЦен,
				   |	ВложенныйЗапрос.УсловиеПоставки КАК ПорядокУсловиеПоставки,
	               |	ВложенныйЗапрос.Регион + ВложенныйЗапрос.ПроектГП + ВложенныйЗапрос.КаналПродаж + ВложенныйЗапрос.УсловиеПоставки + ВложенныйЗапрос.Контрагент + ВложенныйЗапрос.АдресПоставки + ВложенныйЗапрос.Дивизион + ВложенныйЗапрос.ТоварнаяКатегория + ВложенныйЗапрос.Брендообъем + ВложенныйЗапрос.Номенклатура КАК Порядок
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ПЦ_ЦеновыеЭшелоныСрезПоследних.ТипЦен КАК ТипЦен,
				   |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.Регион = &Регион
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК Регион,
	               |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.ПроектГП = &ПроектГП
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК ПроектГП,
	               |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.КаналПродаж = &КаналПродаж
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК КаналПродаж,
	               |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.УсловиеПоставки = &УсловиеПоставки
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК УсловиеПоставки,
	               |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.Контрагент = &Контрагент
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК Контрагент,
	               |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.АдресПоставки = &АдресПоставки
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК АдресПоставки,
				   |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.Дивизион = &Дивизион
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК Дивизион,
	               |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.ТоварнаяКатегория = &ТоварнаяКатегория
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК ТоварнаяКатегория,
	               |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.Брендообъем = &Брендообъем
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК Брендообъем,
	               |		ВЫБОР
	               |			КОГДА ПЦ_ЦеновыеЭшелоныСрезПоследних.Номенклатура = &Номенклатура
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК Номенклатура
	               |	ИЗ
	               |		РегистрСведений.ПЦ_ЦеновыеЭшелоны.СрезПоследних(
	               |				&Дата,
	               |				НЕ ТипЦен В
	               |							(ВЫБРАТЬ
	               |								Исключения.ТипЦен
	               |							ИЗ
	               |								Исключения)
	               |					И (Регион = &Регион
				   |						ИЛИ Регион = &ПустойРегион ИЛИ &Регион = &Неопределено)
	               |					И (ПроектГП = &ПроектГП
				   |						ИЛИ ПроектГП = &ПустойПроектГП ИЛИ &ПроектГП = &Неопределено)
	               |					И (КаналПродаж = &КаналПродаж
	               |						ИЛИ КаналПродаж = &ПустойКаналПродаж ИЛИ &КаналПродаж = &Неопределено)
	               |					И (УсловиеПоставки = &УсловиеПоставки
	               |						ИЛИ УсловиеПоставки = &ПустойУсловиеПоставки ИЛИ &УсловиеПоставки = &Неопределено)
	               |					И (Контрагент = &Контрагент
	               |						ИЛИ Контрагент = &ПустойКонтрагент ИЛИ &Контрагент = &Неопределено)
	               |					И (АдресПоставки = &АдресПоставки
	               |						ИЛИ АдресПоставки = &ПустойАдресПоставки ИЛИ &АдресПоставки = &Неопределено)
				   |					И (Дивизион = &Дивизион
	               |						ИЛИ Дивизион = &ПустойДивизион ИЛИ &Дивизион = &Неопределено)
	               |					И (ТоварнаяКатегория = &ТоварнаяКатегория
	               |						ИЛИ ТоварнаяКатегория = &ПустойТоварнаяКатегория ИЛИ &ТоварнаяКатегория = &Неопределено)
	               |					И (Брендообъем = &Брендообъем
	               |						ИЛИ Брендообъем = &ПустойБрендообъем ИЛИ &Брендообъем = &Неопределено)
	               |					И (Номенклатура = &Номенклатура
	               |						ИЛИ Номенклатура = &ПустойНоменклатура ИЛИ &Номенклатура = &Неопределено)) КАК ПЦ_ЦеновыеЭшелоныСрезПоследних
				   |ГДЕ
				   |	НЕ ПЦ_ЦеновыеЭшелоныСрезПоследних.ТипЦен = Значение(Справочник.ТипыЦенНоменклатуры.ПустаяСсылка)"
				   + ?(ЗначениеЗаполнено(КатегорияТиповЦен),"
				   |		И ПЦ_ЦеновыеЭшелоныСрезПоследних.ТипЦен.ПЦ_Категория = &КатегорияТиповЦен","") + ") КАК ВложенныйЗапрос
	               |
	               |УПОРЯДОЧИТЬ ПО
				   |	ПорядокУсловиеПоставки УБЫВ,
	               |	Порядок УБЫВ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ Исключения";
	Запрос.Текст = ТекстЗапроса;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СпТиповЦен.Добавить(Выборка.ТипЦен);
		
		//m.ionov@a-prof.ru 14.11.2014
		//Нет смысла возвращать все типы цен
		//m.ionov@a-prof.ru 24.02.2015
		Если Не ВернутьВесьСписок Тогда
			Прервать;
		КонецЕсли;
		//----m.ionov@a-prof.ru---
	КонецЦикла;
	
	Возврат СпТиповЦен;
	
КонецФункции //ПолучитьТипЦенПродажи

Функция ВернутьБазовыйТипЦен(ТипЦен) Экспорт
	
	Если Не ТипЦен.Рассчитывается Тогда
		Возврат ТипЦен;
	КонецЕсли;
	
	ТипЦенБаза = ТипЦен;
	Сч = 0;
	Пока Сч < 3 Цикл
		Сч = Сч + 1;
		
		Если Не ТипЦенБаза.БазовыйТипЦен.Рассчитывается Тогда
			Возврат ТипЦенБаза.БазовыйТипЦен;
		Иначе
			ТипЦенБаза = ТипЦенБаза.БазовыйТипЦен;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
	
КонецФункции

Функция ПолучимПоследниеДанныеПоДокументу_ОтсрочкаПовышенияЦен(мОтсрочкаПовышенияЦен) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен,
	               |	МАКСИМУМ(ПЦ_ОтсрочкаПовышенияЦен.Период) КАК Период
	               |ПОМЕСТИТЬ Т_ПоследниеОтсрочки
	               |ИЗ
	               |	РегистрСведений.ПЦ_ОтсрочкаПовышенияЦен КАК ПЦ_ОтсрочкаПовышенияЦен
	               |ГДЕ
	               |	ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен В(&ОтсрочкаПовышенияЦен)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПЦ_ОтсрочкаПовышенияЦен.ДатаНачала,
	               |	ПЦ_ОтсрочкаПовышенияЦен.ДатаОкончания,
	               |	ПЦ_ОтсрочкаПовышенияЦен.Дивизион,
	               |	ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж,
	               |	ПЦ_ОтсрочкаПовышенияЦен.Контрагент,
	               |	ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион,
	               |	ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска,
	               //{18.11.2015 Островерхий заявка №45043 
				   |	ПЦ_ОтсрочкаПовышенияЦен.Грузополучатель, 
				   //18.11.2015 Островерхий} 
	               |	ПЦ_ОтсрочкаПовышенияЦен.Проект,
	               |	ПЦ_ОтсрочкаПовышенияЦен.ПЦ_ТоварнаяКатегория,
	               |	ПЦ_ОтсрочкаПовышенияЦен.ПЦ_Брендообъем,
	               |	ПЦ_ОтсрочкаПовышенияЦен.Номенклатура,
	               |	ПЦ_ОтсрочкаПовышенияЦен.ХарактеристикаНоменклатуры,
	               |	ПЦ_ОтсрочкаПовышенияЦен.ДатаЦены,
	               |	ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен,
	               |	ПЦ_ОтсрочкаПовышенияЦен.Период,
	               |	ПЦ_ОтсрочкаПовышенияЦен.Регистратор КАК ДокРегистратор
	               |ИЗ
	               |	Т_ПоследниеОтсрочки КАК Т_ПоследниеОтсрочки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПЦ_ОтсрочкаПовышенияЦен КАК ПЦ_ОтсрочкаПовышенияЦен
	               |		ПО Т_ПоследниеОтсрочки.ОтсрочкаПовышенияЦен = ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен
	               |			И Т_ПоследниеОтсрочки.Период = ПЦ_ОтсрочкаПовышенияЦен.Период";
				   
	Запрос.УстановитьПараметр("ОтсрочкаПовышенияЦен", мОтсрочкаПовышенияЦен);
	
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;	

КонецФункции // ()

Функция ПолучимДатуЦеныПоОтсрочкеПовышенияЦены(ДатаЦены, Дивизион, НСИ_КаналПродаж, Контрагент, НСИ_Регион, НСИ_Вывеска, Номенклатура, ХарактеристикаНоменклатуры, Проект, НСИ_ТоварнаяКатегория, НСИ_Брендообъем, Грузополучатель) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен
	               |ИЗ
	               |	РегистрСведений.ПЦ_ОтсрочкаПовышенияЦен КАК ПЦ_ОтсрочкаПовышенияЦен
	               |ГДЕ
				   //{11.05.2016 Островерхий заявка №б/н, ДатаОкончания должны быть включительно (согласно условия период по.., а не до) 
				   //|	&ДатаЦены МЕЖДУ ПЦ_ОтсрочкаПовышенияЦен.ДатаНачала И ПЦ_ОтсрочкаПовышенияЦен.ДатаОкончания 
				   |	&ДатаЦены МЕЖДУ ПЦ_ОтсрочкаПовышенияЦен.ДатаНачала И КОНЕЦПЕРИОДА(ПЦ_ОтсрочкаПовышенияЦен.ДатаОкончания, ДЕНЬ)
				   //11.05.2016 Островерхий} 
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &Дивизион
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &ПустойДивизион)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &НСИ_КаналПродаж
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &ПустойНСИ_КаналПродаж)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &Контрагент
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &ПустойКонтрагент)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &НСИ_Регион
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &ПустойНСИ_Регион)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &НСИ_Вывеска
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &ПустойНСИ_Вывеска)
				   //{18.11.2015 Островерхий заявка №45043 
				   |	И (ПЦ_ОтсрочкаПовышенияЦен.Грузополучатель = &Грузополучатель
				   |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Грузополучатель = &ПустойГрузополучатель) 
				   //18.11.2015 Островерхий}
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен";
				   
	Запрос.УстановитьПараметр("ДатаЦены", ДатаЦены);

	Запрос.УстановитьПараметр("Дивизион"		, Дивизион);
	Запрос.УстановитьПараметр("НСИ_КаналПродаж"	, НСИ_КаналПродаж);
	Запрос.УстановитьПараметр("Контрагент"		, Контрагент);
	Запрос.УстановитьПараметр("НСИ_Регион"		, НСИ_Регион);
	Запрос.УстановитьПараметр("НСИ_Вывеска"		, НСИ_Вывеска);
	//{18.11.2015 Островерхий заявка №45043 
	Запрос.УстановитьПараметр("Грузополучатель"	, Грузополучатель); 
	//18.11.2015 Островерхий}
	
	Запрос.УстановитьПараметр("ПустойДивизион"			, Справочники.ПРГДивизионы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойНСИ_КаналПродаж"	, Справочники.НСИ_КаналыПродаж.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент"		, Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойНСИ_Регион"		, Справочники.Регионы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойНСИ_Вывеска"		, Справочники.НСИ_Вывески.ПустаяСсылка());	
	
	Запрос.УстановитьПараметр("ПустойПроект"						, Справочники.ПРГ_ПроектыГП.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойПЦ_ТоварнаяКатегория"			, Справочники.НСИ_ТоварныеКатегории.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойПЦ_Брендообъем"				, Справочники.НСИ_Брендообъемы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойНоменклатура"					, Справочники.Номенклатура.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойХарактеристикаНоменклатуры"	, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	//{18.11.2015 Островерхий заявка №45043 
	Запрос.УстановитьПараметр("ПустойГрузополучатель"				, Справочники.АдресаПоставки.ПустаяСсылка());
	//18.11.2015 Островерхий} 
	
	РезультатДокументы = Запрос.Выполнить().Выгрузить();
	
	Если РезультатДокументы.Количество() = 0 Тогда	
		Возврат Дата(1,1,1);			
	КонецЕсли; 
	
	ДанныеПоОтсрочкам = ПЦ_Ценообразование.ПолучимПоследниеДанныеПоДокументу_ОтсрочкаПовышенияЦен(РезультатДокументы.ВыгрузитьКолонку("ОтсрочкаПовышенияЦен"));
	
	Запрос.УстановитьПараметр("ДанныеПоОтсрочкам", ДанныеПоОтсрочкам);
	
	//Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПЦ_ОтсрочкаПовышенияЦен.ДатаЦены,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &Дивизион
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Дивизион,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &НСИ_КаналПродаж
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК НСИ_КаналПродаж,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &Контрагент
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Контрагент,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &НСИ_Регион
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК НСИ_Регион,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &НСИ_Вывеска
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК НСИ_Вывеска,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.Проект = &Проект
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Проект,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.ПЦ_ТоварнаяКатегория = &ПЦ_ТоварнаяКатегория
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПЦ_ТоварнаяКатегория,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.ПЦ_Брендообъем = &ПЦ_Брендообъем
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПЦ_Брендообъем,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.Номенклатура = &Номенклатура
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ПЦ_ОтсрочкаПовышенияЦен.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ХарактеристикаНоменклатуры
	               |ПОМЕСТИТЬ Т_КолВоСовпадений
	               |ИЗ
	               |	&ДанныеПоОтсрочкам КАК ПЦ_ОтсрочкаПовышенияЦен
	               |ГДЕ
	               |	ПЦ_ОтсрочкаПовышенияЦен.ДатаНачала <= &ДатаЦены
	               |	И ПЦ_ОтсрочкаПовышенияЦен.ДатаОкончания >= &ДатаЦены
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &Дивизион
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &ПустойДивизион)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &НСИ_КаналПродаж
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &ПустойНСИ_КаналПродаж)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &Контрагент
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &ПустойКонтрагент)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &НСИ_Регион
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &ПустойНСИ_Регион)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &НСИ_Вывеска
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &ПустойНСИ_Вывеска)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.Проект = &Проект
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Проект = &ПустойПроект)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.ПЦ_ТоварнаяКатегория = &ПЦ_ТоварнаяКатегория
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.ПЦ_ТоварнаяКатегория = &ПустойПЦ_ТоварнаяКатегория)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.ПЦ_Брендообъем = &ПЦ_Брендообъем
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.ПЦ_Брендообъем = &ПустойПЦ_Брендообъем)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.Номенклатура = &Номенклатура
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Номенклатура = &ПустойНоменклатура)
	               |	И (ПЦ_ОтсрочкаПовышенияЦен.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	               |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.ХарактеристикаНоменклатуры = &ПустойХарактеристикаНоменклатуры)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Т_КолВоСовпадений.ДатаЦены,
	               |	Т_КолВоСовпадений.Дивизион + Т_КолВоСовпадений.НСИ_КаналПродаж + Т_КолВоСовпадений.Контрагент + Т_КолВоСовпадений.НСИ_Регион + Т_КолВоСовпадений.НСИ_Вывеска + Т_КолВоСовпадений.Проект + Т_КолВоСовпадений.ПЦ_ТоварнаяКатегория + Т_КолВоСовпадений.ПЦ_Брендообъем + Т_КолВоСовпадений.Номенклатура + Т_КолВоСовпадений.ХарактеристикаНоменклатуры КАК ПорядокВыбора
	               |ПОМЕСТИТЬ Т_Порядок
	               |ИЗ
	               |	Т_КолВоСовпадений КАК Т_КолВоСовпадений
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Т_Порядок.ДатаЦены,
	               |	Т_Порядок.ПорядокВыбора КАК ПорядокВыбора
	               |ИЗ
	               |	Т_Порядок КАК Т_Порядок
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПорядокВыбора УБЫВ";
	
	//Для каждого мСтрока Из Товары Цикл
		
		Запрос.УстановитьПараметр("Проект", Проект);
		Запрос.УстановитьПараметр("ПЦ_ТоварнаяКатегория", НСИ_ТоварнаяКатегория);
		Запрос.УстановитьПараметр("ПЦ_Брендообъем", Номенклатура.НСИ_Брендообъем);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры); 
		
		РезультатПоДате = Запрос.Выполнить().Выбрать();
		
		Если РезультатПоДате.Следующий() Тогда		
			Возврат РезультатПоДате.ДатаЦены;
		Иначе
			Возврат Дата(1,1,1);
		КонецЕсли; 
		
	//КонецЦикла;

КонецФункции 

Функция ПроверимНаличиеДокументовПоОтсрочкеПовышенияЦены(ДатаЦены, Дивизион, НСИ_КаналПродаж, Контрагент, НСИ_Регион, НСИ_Вывеска, Грузополучатель) Экспорт

	Запрос = Новый Запрос;
	//>> Степанов 090915 №42317; не учитывались отмены отсрочек повышения цен
	//////Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//////			   |	ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен
	//////			   |ИЗ
	//////			   |	РегистрСведений.ПЦ_ОтсрочкаПовышенияЦен КАК ПЦ_ОтсрочкаПовышенияЦен
	//////			   |ГДЕ
	//////			   |	&ДатаЦены МЕЖДУ ПЦ_ОтсрочкаПовышенияЦен.ДатаНачала И ПЦ_ОтсрочкаПовышенияЦен.ДатаОкончания
	//////			   |	И (ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &Дивизион
	//////			   |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &ПустойДивизион)
	//////			   |	И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &НСИ_КаналПродаж
	//////			   |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &ПустойНСИ_КаналПродаж)
	//////			   |	И (ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &Контрагент
	//////			   |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &ПустойКонтрагент)
	//////			   |	И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &НСИ_Регион
	//////			   |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &ПустойНСИ_Регион)
	//////			   |	И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &НСИ_Вывеска
	//////			   |			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &ПустойНСИ_Вывеска)
	//////			   |
	//////			   |СГРУППИРОВАТЬ ПО
	//////			   |	ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен";
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВложенныйЗапрос2.ОтсрочкаПовышенияЦен,
	               |	ВложенныйЗапрос2.ДокОтсрочка,
	               |	ВложенныйЗапрос2.ДатаОкончания,
	               |	ВложенныйЗапрос2.ДокОтмена,
	               |	ВложенныйЗапрос2.ДатаОкончания1
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВложенныйЗапрос.ОтсрочкаПовышенияЦен КАК ОтсрочкаПовышенияЦен,
	               |		ВложенныйЗапрос.Регистратор КАК ДокОтсрочка,
	               |		КОНЕЦПЕРИОДА(ВложенныйЗапрос.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
	               |		ВложенныйЗапрос1.Регистратор КАК ДокОтмена,
	               |		КОНЕЦПЕРИОДА(ВложенныйЗапрос1.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания1
	               |	ИЗ
	               |		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |			ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен КАК ОтсрочкаПовышенияЦен,
	               |			ПЦ_ОтсрочкаПовышенияЦен.ДатаОкончания КАК ДатаОкончания,
	               |			ПЦ_ОтсрочкаПовышенияЦен.Регистратор КАК Регистратор
	               |		ИЗ
	               |			РегистрСведений.ПЦ_ОтсрочкаПовышенияЦен КАК ПЦ_ОтсрочкаПовышенияЦен
	               |		ГДЕ
	               |			&ДатаЦены МЕЖДУ ПЦ_ОтсрочкаПовышенияЦен.ДатаНачала И КОНЕЦПЕРИОДА(ПЦ_ОтсрочкаПовышенияЦен.ДатаОкончания, ДЕНЬ)
	               |			И (ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &Дивизион
	               |					ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &ПустойДивизион)
	               |			И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &НСИ_КаналПродаж
	               |					ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &ПустойНСИ_КаналПродаж)
	               |			И (ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &Контрагент
	               |					ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &ПустойКонтрагент)
	               |			И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &НСИ_Регион
	               |					ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &ПустойНСИ_Регион)
	               |			И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &НСИ_Вывеска
	               |					ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &ПустойНСИ_Вывеска)
	               |			И ТИПЗНАЧЕНИЯ(ПЦ_ОтсрочкаПовышенияЦен.Регистратор) = ТИП(Документ.ПЦ_ОтсрочкаПовышенияЦен)) КАК ВложенныйЗапрос
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |				ПЦ_ОтсрочкаПовышенияЦен.ОтсрочкаПовышенияЦен КАК ОтсрочкаПовышенияЦен,
	               |				ПЦ_ОтсрочкаПовышенияЦен.ДатаОкончания КАК ДатаОкончания,
	               |				ПЦ_ОтсрочкаПовышенияЦен.Регистратор КАК Регистратор
	               |			ИЗ
	               |				РегистрСведений.ПЦ_ОтсрочкаПовышенияЦен КАК ПЦ_ОтсрочкаПовышенияЦен
	               |			ГДЕ
	               |				(ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &Дивизион
	               |						ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Дивизион = &ПустойДивизион)
	               |				И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &НСИ_КаналПродаж
	               |						ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_КаналПродаж = &ПустойНСИ_КаналПродаж)
	               |				И (ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &Контрагент
	               |						ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Контрагент = &ПустойКонтрагент)
	               |				И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &НСИ_Регион
	               |						ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Регион = &ПустойНСИ_Регион)
	               |				И (ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &НСИ_Вывеска
	               |						ИЛИ ПЦ_ОтсрочкаПовышенияЦен.НСИ_Вывеска = &ПустойНСИ_Вывеска)
				   //{18.11.2015 Островерхий заявка №45043 
				   |			   И (ПЦ_ОтсрочкаПовышенияЦен.Грузополучатель = &Грузополучатель
				   |			   			ИЛИ ПЦ_ОтсрочкаПовышенияЦен.Грузополучатель = &ПустойГрузополучатель) 
				   //18.11.2015 Островерхий} 
	               |				И ТИПЗНАЧЕНИЯ(ПЦ_ОтсрочкаПовышенияЦен.Регистратор) = ТИП(Документ.ПЦ_ОтменаОтсрочкиПовышенияЦен)) КАК ВложенныйЗапрос1
	               |			ПО ВложенныйЗапрос.ОтсрочкаПовышенияЦен = ВложенныйЗапрос1.ОтсрочкаПовышенияЦен) КАК ВложенныйЗапрос2
	               |ГДЕ
	               |	(ВложенныйЗапрос2.ДокОтмена ЕСТЬ NULL 
	               |			ИЛИ НЕ ВложенныйЗапрос2.ДокОтмена ЕСТЬ NULL 
	               |				И &ДатаЦены <= ВложенныйЗапрос2.ДатаОкончания1)";
	//<< 090915 42317			   
				   
	Запрос.УстановитьПараметр("ДатаЦены", ДатаЦены);

	Запрос.УстановитьПараметр("Дивизион"		, Дивизион);
	Запрос.УстановитьПараметр("НСИ_КаналПродаж"	, НСИ_КаналПродаж);
	Запрос.УстановитьПараметр("Контрагент"		, Контрагент);
	Запрос.УстановитьПараметр("НСИ_Регион"		, НСИ_Регион);
	Запрос.УстановитьПараметр("НСИ_Вывеска"		, НСИ_Вывеска);
	//{18.11.2015 Островерхий заявка №45043 
	Запрос.УстановитьПараметр("Грузополучатель"	, Грузополучатель); 
	//18.11.2015 Островерхий} 
	
	Запрос.УстановитьПараметр("ПустойДивизион"			, Справочники.ПРГДивизионы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойНСИ_КаналПродаж"	, Справочники.НСИ_КаналыПродаж.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент"		, Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойНСИ_Регион"		, Справочники.Регионы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойНСИ_Вывеска"		, Справочники.НСИ_Вывески.ПустаяСсылка());	
	
	Запрос.УстановитьПараметр("ПустойПроект"						, Справочники.ПРГ_ПроектыГП.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойПЦ_ТоварнаяКатегория"			, Справочники.НСИ_ТоварныеКатегории.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойПЦ_Брендообъем"				, Справочники.НСИ_Брендообъемы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойНоменклатура"					, Справочники.Номенклатура.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойХарактеристикаНоменклатуры"	, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	//{18.11.2015 Островерхий заявка №45043 
	Запрос.УстановитьПараметр("ПустойГрузополучатель"				, Справочники.АдресаПоставки.ПустаяСсылка());
	//18.11.2015 Островерхий} 
	РезультатДокументы = Запрос.Выполнить().Выгрузить();
	
	Если РезультатДокументы.Количество() = 0 Тогда	
		Возврат Ложь;			
	КонецЕсли;	
	
	Возврат Истина;

КонецФункции // ()

//>>090816 Степанов 54372 скидки
Функция ВыбратьПодходящихПолучателейСкидки(Контрагент, ДоговорКонтрагента, АдресПоставки) Экспорт
	 Запрос = Новый Запрос;
	 Запрос.Текст = 
	 "ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	ВложенныйЗапрос.ПолучательСкидки,
	 |	ВложенныйЗапрос.Контрагент
	 |ПОМЕСТИТЬ ВТ_Контрагенты
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		ПолучателиСкидки.Ссылка КАК ПолучательСкидки,
	 |		ПолучателиСкидки.Контрагент КАК Контрагент
	 |	ИЗ
	 |		Справочник.ПолучателиСкидки КАК ПолучателиСкидки
	 |	ГДЕ
	 |		ПолучателиСкидки.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.Пустаяссылка)
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |		ПолучателиСкидкиКонтрагенты.Ссылка,
	 |		ПолучателиСкидкиКонтрагенты.Контрагент
	 |	ИЗ
	 |		Справочник.ПолучателиСкидки.Контрагенты КАК ПолучателиСкидкиКонтрагенты
	 |	ГДЕ
	 |		ПолучателиСкидкиКонтрагенты.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.Пустаяссылка)) КАК ВложенныйЗапрос
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	ВложенныйЗапрос.ПолучательСкидки,
	 |	ВложенныйЗапрос.Контрагент,
	 |	ВложенныйЗапрос.ДоговорКонтрагента
	 |ПОМЕСТИТЬ ВТ_Договора
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		ПолучателиСкидки.Ссылка КАК ПолучательСкидки,
	 |		ПолучателиСкидки.Контрагент КАК Контрагент,
	 |		ПолучателиСкидки.ДоговорКонтрагента КАК ДоговорКонтрагента
	 |	ИЗ
	 |		Справочник.ПолучателиСкидки КАК ПолучателиСкидки
	 |	ГДЕ
	 |		ПолучателиСкидки.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		ПолучателиСкидкиДоговорыКонтрагентов.Ссылка,
	 |		ПолучателиСкидкиДоговорыКонтрагентов.Контрагент,
	 |		ПолучателиСкидкиДоговорыКонтрагентов.ДоговорКонтрагента
	 |	ИЗ
	 |		Справочник.ПолучателиСкидки.ДоговорыКонтрагентов КАК ПолучателиСкидкиДоговорыКонтрагентов
	 |	ГДЕ
	 |		ПолучателиСкидкиДоговорыКонтрагентов.Ссылка.ФлОтборПоДоговорам
	 |		И ПолучателиСкидкиДоговорыКонтрагентов.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ВложенныйЗапрос
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	ВложенныйЗапрос.ПолучательСкидки,
	 |	ВложенныйЗапрос.Контрагент,
	 |	ВложенныйЗапрос.АдресПоставки
	 |ПОМЕСТИТЬ ВТ_АП
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		ПолучателиСкидки.Ссылка КАК ПолучательСкидки,
	 |		ПолучателиСкидки.Контрагент КАК Контрагент,
	 |		ПолучателиСкидки.АдресПоставки КАК АдресПоставки
	 |	ИЗ
	 |		Справочник.ПолучателиСкидки КАК ПолучателиСкидки
	 |	ГДЕ
	 |		ПолучателиСкидки.АдресПоставки <> ЗНАЧЕНИЕ(Справочник.АдресаПоставки.ПустаяСсылка)
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		ПолучателиСкидкиАдресаПоставки.Ссылка,
	 |		ПолучателиСкидкиАдресаПоставки.Контрагент,
	 |		ПолучателиСкидкиАдресаПоставки.АдресПоставки
	 |	ИЗ
	 |		Справочник.ПолучателиСкидки.АдресаПоставки КАК ПолучателиСкидкиАдресаПоставки
	 |	ГДЕ
	 |		ПолучателиСкидкиАдресаПоставки.Ссылка.ФлОтборПоАП
	 |		И ПолучателиСкидкиАдресаПоставки.АдресПоставки <> ЗНАЧЕНИЕ(Справочник.АдресаПоставки.ПустаяСсылка)) КАК ВложенныйЗапрос
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_Контрагенты.ПолучательСкидки КАК ПолучательСкидки,
	 |	ВТ_Контрагенты.Контрагент КАК Контрагент,
	 |	ВТ_Договора.ДоговорКонтрагента,
	 |	ВТ_АП.АдресПоставки
	 |ПОМЕСТИТЬ ВТ_ПолнаяТаблица
	 |ИЗ
	 |	ВТ_Контрагенты КАК ВТ_Контрагенты
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Договора КАК ВТ_Договора
	 |		ПО ВТ_Контрагенты.Контрагент = ВТ_Договора.Контрагент
	 |			И ВТ_Контрагенты.ПолучательСкидки = ВТ_Договора.ПолучательСкидки
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АП КАК ВТ_АП
	 |		ПО ВТ_Контрагенты.Контрагент = ВТ_АП.Контрагент
	 |			И ВТ_Контрагенты.ПолучательСкидки = ВТ_АП.ПолучательСкидки
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_ПолнаяТаблица.ПолучательСкидки,
	 |	ВТ_ПолнаяТаблица.Контрагент,
	 |	ВТ_ПолнаяТаблица.ДоговорКонтрагента,
	 |	ВТ_ПолнаяТаблица.АдресПоставки
	 |ИЗ
	 |	ВТ_ПолнаяТаблица КАК ВТ_ПолнаяТаблица
	 |ГДЕ
	 |	ВТ_ПолнаяТаблица.Контрагент = &Контрагент
	 |	И (ВТ_ПолнаяТаблица.ДоговорКонтрагента = &ДоговорКонтрагента
	 |			ИЛИ ВТ_ПолнаяТаблица.ДоговорКонтрагента ЕСТЬ NULL )
	 |	И (ВТ_ПолнаяТаблица.АдресПоставки = &АдресПоставки
	 |			ИЛИ ВТ_ПолнаяТаблица.АдресПоставки ЕСТЬ NULL )";
	 
	 Запрос.УстановитьПараметр("Контрагент", Контрагент);
	 Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	 Запрос.УстановитьПараметр("АдресПоставки", АдресПоставки);
	 
	 ТаблицаПолучателейСкидки = Запрос.Выполнить().Выгрузить();
	 Возврат ТаблицаПолучателейСкидки;
КонецФункции	
 
Функция ПолучитьКонтрагентовИзПолучателяСкидки(ПолучательСкидки) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Контрагент
	|ПОМЕСТИТЬ ВТ_Контрагенты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПолучателиСкидки.Контрагент КАК Контрагент
	|	ИЗ
	|		Справочник.ПолучателиСкидки КАК ПолучателиСкидки
	|	ГДЕ
	|		ПолучателиСкидки.Ссылка = &ПолучательСкидки
	|		И ПолучателиСкидки.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.Пустаяссылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПолучателиСкидкиКонтрагенты.Контрагент
	|	ИЗ
	|		Справочник.ПолучателиСкидки.Контрагенты КАК ПолучателиСкидкиКонтрагенты
	|	ГДЕ
	|		ПолучателиСкидкиКонтрагенты.Ссылка = &ПолучательСкидки
	|		И ПолучателиСкидкиКонтрагенты.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.Пустаяссылка)) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.ДоговорКонтрагента
	|ПОМЕСТИТЬ ВТ_Договора
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПолучателиСкидки.Контрагент КАК Контрагент,
	|		ПолучателиСкидки.ДоговорКонтрагента КАК ДоговорКонтрагента
	|	ИЗ
	|		Справочник.ПолучателиСкидки КАК ПолучателиСкидки
	|	ГДЕ
	|		ПолучателиСкидки.Ссылка = &ПолучательСкидки
	|		И ПолучателиСкидки.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПолучателиСкидкиДоговорыКонтрагентов.Контрагент,
	|		ПолучателиСкидкиДоговорыКонтрагентов.ДоговорКонтрагента
	|	ИЗ
	|		Справочник.ПолучателиСкидки.ДоговорыКонтрагентов КАК ПолучателиСкидкиДоговорыКонтрагентов
	|	ГДЕ
	|		ПолучателиСкидкиДоговорыКонтрагентов.Ссылка.ФлОтборПоДоговорам
	|		И ПолучателиСкидкиДоговорыКонтрагентов.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И ПолучателиСкидкиДоговорыКонтрагентов.Ссылка = &ПолучательСкидки) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.АдресПоставки
	|ПОМЕСТИТЬ ВТ_АП
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПолучателиСкидки.Контрагент КАК Контрагент,
	|		ПолучателиСкидки.АдресПоставки КАК АдресПоставки
	|	ИЗ
	|		Справочник.ПолучателиСкидки КАК ПолучателиСкидки
	|	ГДЕ
	|		ПолучателиСкидки.Ссылка = &ПолучательСкидки
	|		И ПолучателиСкидки.АдресПоставки <> ЗНАЧЕНИЕ(Справочник.АдресаПоставки.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПолучателиСкидкиАдресаПоставки.Контрагент,
	|		ПолучателиСкидкиАдресаПоставки.АдресПоставки
	|	ИЗ
	|		Справочник.ПолучателиСкидки.АдресаПоставки КАК ПолучателиСкидкиАдресаПоставки
	|	ГДЕ
	|		ПолучателиСкидкиАдресаПоставки.Ссылка.ФлОтборПоАП
	|		И ПолучателиСкидкиАдресаПоставки.АдресПоставки <> ЗНАЧЕНИЕ(Справочник.АдресаПоставки.ПустаяСсылка)
	|		И ПолучателиСкидкиАдресаПоставки.Ссылка = &ПолучательСкидки) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Контрагенты.Контрагент,
	|	ВТ_Договора.ДоговорКонтрагента,
	|	ВТ_АП.АдресПоставки
	|ИЗ
	|	ВТ_Контрагенты КАК ВТ_Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Договора КАК ВТ_Договора
	|		ПО ВТ_Контрагенты.Контрагент = ВТ_Договора.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АП КАК ВТ_АП
	|		ПО ВТ_Контрагенты.Контрагент = ВТ_АП.Контрагент";
	Запрос.УстановитьПараметр("ПолучательСкидки",ПолучательСкидки);
	
	ТаблицаКонтрагентовДоговоровАдресовПоставки = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаКонтрагентовДоговоровАдресовПоставки;
	
	
КонецФункции	

Функция ПолучитьНоменклатуруИзОбъектаСкидки(ОбъектСкидки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбъектыСкидокПроекты.ПроектГП КАК Проект,
	|	NULL КАК ТоварнаяКатегория,
	|	NULL КАК Брендообъем,
	|	NULL КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ПолнаяПоОбъекту
	|ИЗ
	|	Справочник.ОбъектыСкидок.Проекты КАК ОбъектыСкидокПроекты
	|ГДЕ
	|	ОбъектыСкидокПроекты.Ссылка = &ОбъектСкидки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъектыСкидокТоварныеКатегории.ТоварнаяКатегория.Проект,
	|	ОбъектыСкидокТоварныеКатегории.ТоварнаяКатегория,
	|	NULL,
	|	NULL
	|ИЗ
	|	Справочник.ОбъектыСкидок.ТоварныеКатегории КАК ОбъектыСкидокТоварныеКатегории
	|ГДЕ
	|	ОбъектыСкидокТоварныеКатегории.Ссылка = &ОбъектСкидки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъектыСкидокБрендообъемы.Брендообъем.ТоварнаяКатегория.Проект,
	|	ОбъектыСкидокБрендообъемы.Брендообъем.ТоварнаяКатегория,
	|	ОбъектыСкидокБрендообъемы.Брендообъем,
	|	NULL
	|ИЗ
	|	Справочник.ОбъектыСкидок.Брендообъемы КАК ОбъектыСкидокБрендообъемы
	|ГДЕ
	|	ОбъектыСкидокБрендообъемы.Ссылка = &ОбъектСкидки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъектыСкидокНоменклатура.Номенклатура.Проект,
	|	ОбъектыСкидокНоменклатура.Номенклатура.НСИ_ТоварнаяКатегория,
	|	ОбъектыСкидокНоменклатура.Номенклатура.НСИ_Брендообъем,
	|	ОбъектыСкидокНоменклатура.Номенклатура
	|ИЗ
	|	Справочник.ОбъектыСкидок.Номенклатура КАК ОбъектыСкидокНоменклатура
	|ГДЕ
	|	ОбъектыСкидокНоменклатура.Ссылка = &ОбъектСкидки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПолнаяПоОбъекту.Проект
	|ПОМЕСТИТЬ ВТ_Проекты
	|ИЗ
	|	ВТ_ПолнаяПоОбъекту КАК ВТ_ПолнаяПоОбъекту
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПолнаяПоОбъекту.Проект,
	|	ВТ_ПолнаяПоОбъекту.ТоварнаяКатегория
	|ПОМЕСТИТЬ ВТ_ТоварныеКатегории
	|ИЗ
	|	ВТ_ПолнаяПоОбъекту КАК ВТ_ПолнаяПоОбъекту
	|ГДЕ
	|	НЕ ВТ_ПолнаяПоОбъекту.ТоварнаяКатегория ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПолнаяПоОбъекту.Проект,
	|	ВТ_ПолнаяПоОбъекту.ТоварнаяКатегория,
	|	ВТ_ПолнаяПоОбъекту.Брендообъем
	|ПОМЕСТИТЬ ВТ_Брендообъемы
	|ИЗ
	|	ВТ_ПолнаяПоОбъекту КАК ВТ_ПолнаяПоОбъекту
	|ГДЕ
	|	НЕ ВТ_ПолнаяПоОбъекту.Брендообъем ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПолнаяПоОбъекту.Проект,
	|	ВТ_ПолнаяПоОбъекту.ТоварнаяКатегория,
	|	ВТ_ПолнаяПоОбъекту.Брендообъем,
	|	ВТ_ПолнаяПоОбъекту.Номенклатура
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	ВТ_ПолнаяПоОбъекту КАК ВТ_ПолнаяПоОбъекту
	|ГДЕ
	|	НЕ ВТ_ПолнаяПоОбъекту.Номенклатура ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Проекты.Проект,
	|	ВТ_ТоварныеКатегории.ТоварнаяКатегория,
	|	ВТ_Брендообъемы.Брендообъем,
	|	ВТ_Номенклатура.Номенклатура
	|ПОМЕСТИТЬ ВТ_ПолнаяСвернутая
	|ИЗ
	|	ВТ_Проекты КАК ВТ_Проекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварныеКатегории КАК ВТ_ТоварныеКатегории
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Брендообъемы КАК ВТ_Брендообъемы
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|				ПО ВТ_Брендообъемы.Брендообъем = ВТ_Номенклатура.Брендообъем
	|			ПО ВТ_ТоварныеКатегории.ТоварнаяКатегория = ВТ_Брендообъемы.ТоварнаяКатегория
	|		ПО ВТ_Проекты.Проект = ВТ_ТоварныеКатегории.Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Проект КАК Проект,
	|	Номенклатура.НСИ_ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	Номенклатура.НСИ_Брендообъем КАК Брендообъем,
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.СтатусСКЮ
	|ПОМЕСТИТЬ ВТ_КлассификацияНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.СтатусСКЮ <> &СтатусСКЮЗакрыт
	|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|	И Номенклатура.Ссылка В ИЕРАРХИИ(&ГотоваяПродукция)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПолнаяСвернутая.Проект КАК Проект,
	|	ВТ_ПолнаяСвернутая.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	ВТ_ПолнаяСвернутая.Брендообъем КАК Брендообъем,
	|	ВТ_КлассификацияНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВТ_КлассификацияНоменклатуры.СтатусСКЮ
	|ИЗ
	|	ВТ_ПолнаяСвернутая КАК ВТ_ПолнаяСвернутая
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КлассификацияНоменклатуры КАК ВТ_КлассификацияНоменклатуры
	|		ПО ВТ_ПолнаяСвернутая.Проект = ВТ_КлассификацияНоменклатуры.Проект
	|			И (ЕСТЬNULL(ВТ_ПолнаяСвернутая.ТоварнаяКатегория, ВТ_КлассификацияНоменклатуры.ТоварнаяКатегория) = ВТ_КлассификацияНоменклатуры.ТоварнаяКатегория)
	|			И (ЕСТЬNULL(ВТ_ПолнаяСвернутая.Брендообъем, ВТ_КлассификацияНоменклатуры.Брендообъем) = ВТ_КлассификацияНоменклатуры.Брендообъем)
	|			И (ЕСТЬNULL(ВТ_ПолнаяСвернутая.Номенклатура, ВТ_КлассификацияНоменклатуры.Номенклатура) = ВТ_КлассификацияНоменклатуры.Номенклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Проект,
	|	ТоварнаяКатегория,
	|	Брендообъем,
	|	Номенклатура";
	
	АП_НастройкиПодсистемы = РегистрыСведений.АП_НастройкаПодсистемыПродаж.Выбрать();
	мСтатусГПЗакрыт = Справочники.ПРГ_СтатусыНоменклатуры.ПустаяСсылка();
	Если АП_НастройкиПодсистемы.Следующий() Тогда	
		мСтатусГПЗакрыт = АП_НастройкиПодсистемы.СтатусГПЗакрыт;	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОбъектСкидки",ОбъектСкидки);
	Запрос.УстановитьПараметр("ГотоваяПродукция",Справочники.Номенклатура.НайтиПоНаименованию("Готовая продукция"));
	Запрос.УстановитьПараметр("СтатусСКЮЗакрыт",мСтатусГПЗакрыт);
	
	ТаблицаНоменклатуры = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаНоменклатуры;
	
КонецФункции	