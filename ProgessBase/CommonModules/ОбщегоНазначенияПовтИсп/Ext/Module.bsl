////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность".
// Серверные процедуры и функции общего назначения.
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает признак включения условного разделения.
// В случае вызова в неразделенной конфигурации возвращает Ложь.
//
Функция РазделениеВключено() Экспорт
	
	Возврат Ложь;
	
КонецФункции

// Возвращает тип платформы сервера.
//
// Возвращаемое значение:
// ТипПлатформы; Неопределено.
//
Функция ТипПлатформыСервера() Экспорт
	
	СистемнаяИнфо = Новый СистемнаяИнформация;
	Возврат СистемнаяИнфо.ТипПлатформы;
	
КонецФункции	

// Функция возвращает реквизиты объекта
//
// Параметры
//	Ссылка				- <Произвольный>, ссылка на объект
//	СтруктураПолей		- <Структура>, реквизиты объекта, которые необходимо получить
//	ПолноеИмяОбъекта	- <Строка>, полное имя объекта, например "Справочник.Пользователи"
//
// Возвращаемое значение
//	Структура
//
Функция ПолучитьЗначенияРеквизитовОбъекта(Ссылка, СтруктураПолей, ПолноеИмяОбъекта = Неопределено) Экспорт

	Если ПолноеИмяОбъекта = Неопределено Тогда
		ПолноеИмяОбъекта = Ссылка.Метаданные().ПолноеИмя();
	КонецЕсли; 

	ТекстЗапроса = "";
	
	Для Каждого Элемент Из СтруктураПолей Цикл
		
		ИмяПоля = Элемент.Значение;
		
		Если НЕ ЗначениеЗаполнено(ИмяПоля) Тогда
			ИмяПоля = СокрЛП(Элемент.Ключ);
		КонецЕсли;
		
		ТекстЗапроса  = ТекстЗапроса + ?(ПустаяСтрока(ТекстЗапроса), "", ",") + "
		|	" + ИмяПоля + " КАК " + СокрЛП(Элемент.Ключ);
	КонецЦикла;

	Запрос = Новый Запрос();

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ" + ТекстЗапроса + "
	|ИЗ
	|	" + ПолноеИмяОбъекта + " КАК ТаблицаОбъекта
	|ГДЕ
	|	Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка" , Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Структура;
	Если Выборка.Следующий() Тогда
		Для Каждого КлючИЗначение ИЗ СтруктураПолей Цикл
			Результат.Вставить(КлючИЗначение.Ключ, Выборка[КлючИЗначение.Ключ]);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Функция возвращает объект WSПрокси созданный с переданными параметрами.
//
// Параметры соответствуют конструктору объекта WSПрокси.
//
Функция WSПрокси(Знач АдресWSDL, Знач URIПространстваИмен, Знач ИмяСервиса,
	Знач ИмяТочкиПодключения = "", Знач ИмяПользователя, Знач Пароль, Знач Таймаут = Неопределено) Экспорт
	
	Параметры = Новый Массив;
	Параметры.Добавить(АдресWSDL);
	Параметры.Добавить(ИмяПользователя);
	Параметры.Добавить(Пароль);
	Параметры.Добавить(Таймаут);
		
	WSОпределения = Новый(Тип("WSОпределения"), Параметры);
	
	Если ПустаяСтрока(ИмяТочкиПодключения) Тогда
		ИмяТочкиПодключения = ИмяСервиса + "Soap";
	КонецЕсли;
	
	Параметры = Новый Массив;
	Параметры.Добавить(WSОпределения);
	Параметры.Добавить(URIПространстваИмен);
	Параметры.Добавить(ИмяСервиса);
	Параметры.Добавить(ИмяТочкиПодключения);
	Параметры.Добавить(Таймаут);
	
	Прокси = Новый(Тип("WSПрокси"), Параметры);
	Прокси.Пользователь = ИмяПользователя;
	Прокси.Пароль = Пароль;
	
	Возврат Прокси;
	
КонецФункции