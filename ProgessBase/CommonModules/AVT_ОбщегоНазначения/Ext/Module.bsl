// Устанавливает НазначениеСвойства у СвойстваОбъектов
//
Процедура НастроитьПредопределенныеЗначения() Экспорт
	
	//ПВХОбъект = ПланыВидовХарактеристик.СвойстваОбъектов.Авт_ЛимитГСМ.ПолучитьОбъект();	
	//ПВХОбъект.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_СотрудникиОрганизаций;
	//ПВХОбъект.Записать();
	//
	//ПВХОбъект = ПланыВидовХарактеристик.СвойстваОбъектов.Авт_ЛимитМобСвязи.ПолучитьОбъект();	
	//ПВХОбъект.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_СотрудникиОрганизаций;
	//ПВХОбъект.Записать();
	//
	//ПВХОбъект = ПланыВидовХарактеристик.СвойстваОбъектов.AVT_Город.ПолучитьОбъект();	
	//ПВХОбъект.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ПодразделенияОрганизаций;
	//ПВХОбъект.Записать();
	//
	//ПВХОбъект = ПланыВидовХарактеристик.СвойстваОбъектов.AVT_Филиал.ПолучитьОбъект();	
	//ПВХОбъект.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ПодразделенияОрганизаций;
	//ПВХОбъект.Записать();
	
КонецПроцедуры

// Возвращает список графиков работы по календарю.
//
// Параметры:
// 	Календарь  - [СправочникСсылка.AVT_ПроизводственныеКалендари] - календарь для отбора графиков
//
Функция ПолучитьГрафикиРаботыПоКалендарю(Календарь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикиРаботы.Ссылка
	|ИЗ
	|	Справочник.ГрафикиРаботы КАК ГрафикиРаботы
	|ГДЕ
	|	ГрафикиРаботы.AVT_ПроизводственныйКалендарь = &Календарь";
	Запрос.УстановитьПараметр("Календарь", Календарь);
	
	Графики = Новый СписокЗначений();
	Графики.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Возврат Графики;
	
КонецФункции

// Возвращает список филиалов выбранной организации.
Функция ПолучитьСписокФилиалов(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка КАК ПодразделениеОрганизации
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ПодразделенияОрганизаций.Ссылка = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = &AVT_Филиал)
	|			И (ЗначенияСвойствОбъектов.Значение = ИСТИНА)
	|			И (ПодразделенияОрганизаций.Владелец = &Организация)";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("AVT_Филиал", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Филиал"));
	
	СписокПодразделений = Новый СписокЗначений;
	СписокПодразделений.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПодразделениеОрганизации"));
	
	Возврат СписокПодразделений;
	
КонецФункции

// Подбирает список филиалов выбранной организации по введенному тексту.
//
// Параметры:
// 	Организация  - [СправочникСсылка.Организации] 
// 	Текст  - [Строка] - часть названия филиала
//
Функция ПодобратьСписокФилиалов(Организация, Текст) Экспорт
	
	СписокВыбора = Новый СписокЗначений;
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат СписокВыбора;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	// заменим спецсимволы
	Текст = СокрЛП(Текст);
	Текст = СтрЗаменить(Текст, "~", "~~");
	Текст = СтрЗаменить(Текст, "%", "~%");
	Текст = СтрЗаменить(Текст, "_", "~_");
	Текст = СтрЗаменить(Текст, "[", "~[");
	Текст = СтрЗаменить(Текст, "-", "~-");
	Текст = Текст+"%";
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка КАК ПодразделениеОрганизации
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ПодразделенияОрганизаций.Ссылка = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = &AVT_Филиал)
	|			И (ЗначенияСвойствОбъектов.Значение = ИСТИНА)
	|			И (ПодразделенияОрганизаций.Владелец = &Организация)
	|ГДЕ
	|	ПодразделенияОрганизаций.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Текст",       Текст);
	Запрос.УстановитьПараметр("AVT_Филиал", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Филиал"));
	
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПодразделениеОрганизации");
	
	Если Массив.Количество() < 51 Тогда
		СписокВыбора.ЗагрузитьЗначения(Массив);
		Возврат СписокВыбора;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Подбирает список вложенных подразделений по введенному тексту.
//
// Параметры:
// 	Текст  - [Строка] - часть названия вложенного подразделения
//
Функция ПодобратьСписокВложПодразделений(ПодразделениеОрганизации, Текст) Экспорт
	
	СписокВыбора = Новый СписокЗначений;
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат СписокВыбора;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	// заменим спецсимволы
	Текст = СокрЛП(Текст);
	Текст = СтрЗаменить(Текст, "~", "~~");
	Текст = СтрЗаменить(Текст, "%", "~%");
	Текст = СтрЗаменить(Текст, "_", "~_");
	Текст = СтрЗаменить(Текст, "[", "~[");
	Текст = СтрЗаменить(Текст, "-", "~-");
	Текст = Текст+"%";
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка КАК ПодразделениеОрганизации
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
	|	И ПодразделенияОрганизаций.Ссылка В ИЕРАРХИИ(&ПодразделениеОрганизации)";
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Текст",                    Текст);
	
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПодразделениеОрганизации");
	
	Если Массив.Количество() < 51 Тогда
		СписокВыбора.ЗагрузитьЗначения(Массив);
		Возврат СписокВыбора;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции

// Возвращает подразделение первого уровня.
Функция ПолучитьФилиалПодразделения(ПодразделениеОрганизации) Экспорт
	Если ПодразделениеОрганизации.Родитель = Справочники.ПодразделенияОрганизаций.ПустаяСсылка() Тогда
		Возврат ПодразделениеОрганизации;
	Иначе
		Возврат ПолучитьФилиалПодразделения(ПодразделениеОрганизации.Родитель);
	КонецЕсли;
КонецФункции

Процедура ПолучитьИсториюСотрудника(ТекущийСотрудник) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	РаботникиОрганизаций.Период КАК Период,
	                      |	РаботникиОрганизаций.Регистратор КАК Документ,
	                      |	РаботникиОрганизаций.ОбособленноеПодразделение,
	                      |	РаботникиОрганизаций.ПодразделениеОрганизации,
	                      |	РаботникиОрганизаций.ГрафикРаботы,
	                      |	РаботникиОрганизаций.ПричинаИзмененияСостояния КАК Причина,
	                      |	РаботникиОрганизаций.AVTШтатноеРасписание КАК ШтатноеРасписание
	                      |ИЗ
	                      |	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	                      |ГДЕ
	                      |	РаботникиОрганизаций.Сотрудник = &Сотрудник
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Период");
	Запрос.УстановитьПараметр("Сотрудник", ТекущийСотрудник);
	
	ФормаИстории = ПолучитьОбщуюФорму("ИсторияШтатнойЕденицы");
	ФормаИстории.ИсторияСотрудника = Запрос.Выполнить().Выгрузить();
	ФормаИстории.Сотрудник = ТекущийСотрудник;
	ФормаИстории.ОткрытьМодально();
КонецПроцедуры