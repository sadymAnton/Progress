////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции объекта

// По строке выборок из результатов запроса по документу формируем движения по регистру
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента				- спозиционированная на определенной строке выборка 
//				  							  из результата запроса к ТЧ документа, 
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуРасчетаСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборОсновныеНачисления) Экспорт
	
	Движение = НаборОсновныеНачисления.Добавить();
	
	// Свойства
	Движение.ПериодРегистрации				= НачалоМесяца(ВыборкаПоШапкеДокумента.Дата);
	Движение.БазовыйПериодНачало			= ВыборкаПоСтрокамДокумента.БазовыйПериодНачало;
	Движение.БазовыйПериодКонец				= ВыборкаПоСтрокамДокумента.БазовыйПериодКонец;
	Движение.ВидРасчета						= ВыборкаПоСтрокамДокумента.ВидРасчета;
	
	// Измерения
	Движение.Сотрудник						= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.ФизЛицо						= ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	
	// Ресурсы
	Движение.Результат						= ВыборкаПоСтрокамДокумента.Результат;
	Движение.СкидкаПоСтраховымВзносам		= ВыборкаПоСтрокамДокумента.СкидкаПоСтраховымВзносам;
	Движение.ОтработаноПоПятидневке			= ВыборкаПоСтрокамДокумента.ОтработаноПоПятидневке;
	Движение.НормаПоПятидневке				= ВыборкаПоСтрокамДокумента.НормаПоПятидневке;
	Движение.ОтработаноДней					= ВыборкаПоСтрокамДокумента.ОтработаноДней;
	Движение.ОтработаноЧасов				= ВыборкаПоСтрокамДокумента.ОтработаноЧасов;
	
	// Реквизиты
	Движение.КоэффициентИндексации 			= ВыборкаПоСтрокамДокумента.КоэффициентИндексации;
	Если ВыборкаПоСтрокамДокумента.ВидРасчета = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010
		Или ВыборкаПоСтрокамДокумента.ВидРасчета = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010 Тогда
		Движение.ДатаНачалаСобытия				= Макс(НачалоДня(ВыборкаПоШапкеДокумента.ДатаНачала),НачалоМесяца(ВыборкаПоШапкеДокумента.ДатаОкончания));
	Иначе 	
		Движение.ДатаНачалаСобытия				= ВыборкаПоШапкеДокумента.ДатаНачала;
	КонецЕсли;
	Движение.ДатаНачалаРасчетногоПериода	= ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало;
	Движение.ДатаОкончанияРасчетногоПериода	= ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаОкончание;
	Движение.СпособРасчета					= ВыборкаПоШапкеДокумента.СпособРасчета;
	Движение.ПериодРасчетаСреднегоЗаработка	= 12;
	Движение.ЧислоМесяцев					= ВыборкаПоСтрокамДокумента.ЧислоМесяцев;
	
КонецПроцедуры 

Функция ПолучитьДополнительныеПоляРасчетаСреднего() Экспорт
	
	Возврат	"
	|	1 КАК КоэффициентИндексации,
	|	СтрокаРасчетСреднего.ОтработаноПоПятидневке,
	|	СтрокаРасчетСреднего.НормаПоПятидневке,
	|	0 КАК ОтработаноЧасов,
	|	СтрокаРасчетСреднего.ЧислоМесяцев,";
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы документа

#Если ТолстыйКлиентОбычноеПриложение Тогда

Процедура ПередОткрытиемДополнительно(ЭтаФорма) Экспорт	
	
	РасчетСреднего = ЭтаФорма.РасчетСреднего;
	ПоказыватьУстаревшиеКолонки = РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий, "ВидРасчета") <> Неопределено 
									Или РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииПособий, "ВидРасчета") <> Неопределено 
									Или РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий, "ВидРасчета") <> Неопределено;

	Если ПоказыватьУстаревшиеКолонки Тогда
		ТабличноеПоле = ЭтаФорма.ЭлементыФормы.РасчетСреднего;
		РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(, ТабличноеПоле, "КолонкаЗаголовок", "Для премий", , , , , , ПоложениеКолонки.НоваяКолонка);
		РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(, ТабличноеПоле, "ЧислоМесяцев", "Число месяцев", "ЧислоМесяцев", , , , Тип("ПолеВвода"), ПоложениеКолонки.НаСледующейСтроке);
		РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(, ТабличноеПоле, "ОтработаноДней", "Отработано", "ОтработаноПоПятидневке", , , , Тип("ПолеВвода"), ПоложениеКолонки.ВТойЖеКолонке);
		РаботаСДиалогами.ВставитьКолонкуВТабличноеПоле(, ТабличноеПоле, "НормаДней", "Норма", "НормаПоПятидневке", , , , Тип("ПолеВвода"), ПоложениеКолонки.ВТойЖеКолонке);
	КонецЕсли;						
	
КонецПроцедуры

Процедура ДополнитьСписокСоставляющихСреднегозаработка(ЭтаФорма, СписокСоставляющихСреднегозаработка) Экспорт
	
	РасчетСреднего = ЭтаФорма.РасчетСреднего;
	Если РасчетСреднего.Количество() > 0 Тогда
		Если РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий, "ВидРасчета") <> Неопределено Тогда
			СписокСоставляющихСреднегозаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий);
		КонецЕсли;
		Если РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииПособий, "ВидРасчета") <> Неопределено Тогда
			СписокСоставляющихСреднегозаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииПособий);
		КонецЕсли;
		Если РасчетСреднего.Найти(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий, "ВидРасчета") <> Неопределено Тогда
			СписокСоставляющихСреднегозаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьВидимостьДополнительныхКолонок(ЭтаФорма, СписокСоставляющихСреднегозаработка) Экспорт
	
	// В этой конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры

Процедура РасчетСреднегоПриВыводеСтрокиДополнительно(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	Если Элемент.Колонки.Найти("КолонкаЗаголовок") <> Неопределено Тогда
		Если Элемент.Колонки.КолонкаЗаголовок.Видимость Тогда
			ОформлениеСтроки.Ячейки.КолонкаЗаголовок.Видимость = Ложь
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработатьСписокВидовДокументовДляЖурнала(СписокВидовДокументов) Экспорт

	// В этой конфигурации ничего не делается

КонецПроцедуры // ОбработатьСписокВидовДокументовДляЖурнала()

#КонецЕсли
