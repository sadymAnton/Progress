Функция СоздатьЛокальнуюПартию(Документ1С, СтрокаПеречня) Экспорт
	
	НовыйЭлемент = Справочники.Вет_Партии.СоздатьЭлемент();
	НовыйЭлемент.ТипПартии = Перечисления.Вет_ТипПартии.Складская;
	НовыйЭлемент.Документ1С = Документ1С;
	НовыйЭлемент.Номенклатура = СтрокаПеречня.Номенклатура;
	НовыйЭлемент.ЕдиницаИзмерения = СтрокаПеречня.ЕдиницаИзмерения;
	НовыйЭлемент.Записать();
	
	ЭлементСсылка = НовыйЭлемент.Ссылка;
	ДобавитьДвижениеПоПартии(ЭлементСсылка, СтрокаПеречня.Количество);	
	
	Возврат ЭлементСсылка;
	
КонецФункции

Процедура ДобавитьДвижениеПоПартии(Партия, Количество) Экспорт
	
	// TO DO Решить проблему с паралелльным доступом из двух мест 
	МенеджерЗаписи = РегистрыСведений.Вет_ДвижениеПоПартиям.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Вет_Партия = Партия;
	МенеджерЗаписи.ПорядковыйНомер = КоличествоДвиженийПоПартии(Партия) + 1;
	МенеджерЗаписи.Количество = Количество;
	МенеджерЗаписи.Записать(Истина);
	
КонецПроцедуры

Функция КоличествоДвиженийПоПартии(Партия)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(Вет_ДвижениеПоПартиям.ПорядковыйНомер) КАК ПорядковыйНомер
		|ИЗ
		|	РегистрСведений.Вет_ДвижениеПоПартиям КАК Вет_ДвижениеПоПартиям
		|ГДЕ
		|	Вет_ДвижениеПоПартиям.Вет_Партия = &Партия";
	
	Запрос.УстановитьПараметр("Партия", Партия);
	РезультатЗапроса = Запрос.Выполнить();
	РезультатТаблица = РезультатЗапроса.Выгрузить();
	
	Возврат ?(РезультатТаблица.ПорядковыйНомер = неопределено, 0, РезультатТаблица.ПорядковыйНомер);
	
КонецФункции

Функция ОстатокПартии(Партия) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Вет_ДвижениеПоПартиям.Вет_Партия КАК Партия,
		|	СУММА(Вет_ДвижениеПоПартиям.Количество) КАК Остаток
		|ИЗ
		|	РегистрСведений.Вет_ДвижениеПоПартиям КАК Вет_ДвижениеПоПартиям
		|ГДЕ
		|	Вет_ДвижениеПоПартиям.Вет_Партия = &Вет_Партия
		|
		|СГРУППИРОВАТЬ ПО
		|	Вет_ДвижениеПоПартиям.Вет_Партия";
	
	Запрос.УстановитьПараметр("Вет_Партия", Партия);
	РезультатЗапроса = Запрос.Выполнить();
	Выгрузка = РезультатЗапроса.Выгрузить();
	Возврат Выгрузка.Остаток;
	
КонецФункции

Функция ПартииПоДокументу(Документ1С) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Вет_Партии.Ссылка КАК Ссылка,
		|	Вет_Партии.Номенклатура КАК Номенклатура,
		|	Вет_Партии.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	Справочник.Вет_Партии КАК Вет_Партии
		|ГДЕ
		|	Вет_Партии.Документ1С = &Документ1С";
	
	Запрос.УстановитьПараметр("Документ1С", Документ1С);
	РезультатЗапроса = Запрос.Выполнить();
	Выгрузка = РезультатЗапроса.Выгрузить();
	
	Возврат Выгрузка;
	
КонецФункции

Функция РазностьМеждуДокументомИНачальнымиЗначениямиПартий(Документ1С, Документ1СКорр=Неопределено) Экспорт
	
	Если Документ1СКорр = Неопределено Тогда
		Документ1СКорр = Документ1С;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Срез.Номенклатура,
		|	Срез.ЕдиницаИзмерения,
		|	СУММА(Срез.НачальныйОстаток) КАК Разность
		|
		|ИЗ (
		|	ВЫБРАТЬ
		|		Партии.Номенклатура КАК Номенклатура,
		|		Партии.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		СУММА(ДвижениеПоПартиям.Количество) КАК НачальныйОстаток
		|	ИЗ
		|		Справочник.Вет_Партии КАК Партии
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Вет_ДвижениеПоПартиям КАК ДвижениеПоПартиям
		|			ПО (ДвижениеПоПартиям.Вет_Партия = Партии.Ссылка)
		|	ГДЕ
		|		Партии.Документ1С = &Документ1С
		|		И ДвижениеПоПартиям.ВидДвижения В (
		|				ЗНАЧЕНИЕ(Перечисление.Вет_ВидДвиженияПартии.НачальныйОстаток), 
		|				ЗНАЧЕНИЕ(Перечисление.Вет_ВидДвиженияПартии.КорректировкаНачальногоОстатка))
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Партии.Номенклатура,
		|		Партии.ЕдиницаИзмерения
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТЧТовары.Номенклатура,
		|		ТЧТовары.ЕдиницаИзмерения,
		|		- СУММА(ТЧТовары.Количество) КАК НачальныйОстаток
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.Товары КАК ТЧТовары
		|	ГДЕ
		|		ТЧТовары.Ссылка = &Документ1СКорр
		|
		|	СГРУППИРОВАТЬ ПО
		|		ТЧТовары.Номенклатура,
		|		ТЧТовары.ЕдиницаИзмерения 
		|) КАК Срез
		|
		|СГРУППИРОВАТЬ ПО
		|	Срез.Номенклатура,
		|	Срез.ЕдиницаИзмерения
		|
		|ИМЕЮЩИЕ
		|	СУММА(Срез.НачальныйОстаток) <> 0";
	
	Запрос.УстановитьПараметр("Документ1С", 		Документ1С);
	Запрос.УстановитьПараметр("Документ1СКорр", 	Документ1СКорр);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выгрузка = РезультатЗапроса.Выгрузить();
	
	Возврат Выгрузка;
	
КонецФункции
