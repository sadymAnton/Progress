
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='ЭТ'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СписокЗначений = Элементы.Порт.СписокВыбора;
	Для Индекс = 1 По 32 Цикл
		СписокЗначений.Добавить(Индекс, "COM" + Строка(Индекс));
	КонецЦикла;
	
	//СписокЗначений = Элементы.Скорость.СписокВыбора;
	СписокЗначений.Добавить(9600,     "9600");
	СписокЗначений.Добавить(19200,   "19200");
	СписокЗначений.Добавить(38400,   "38400");
	СписокЗначений.Добавить(57600,   "57600");
	СписокЗначений.Добавить(115200, "115200");
	
	времМодель = Неопределено;
	времИДТерминала = Неопределено;
	времПорт        = Неопределено;
	времСкорость    = Неопределено;
	времБитыДанных  = Неопределено;
	времЧетность    = Неопределено;
	времСтопБиты    = Неопределено;
	времУправлениеПотоком = Неопределено;
	времКодВалюты   = Неопределено;
	времКоличествоКопий    = Неопределено;
	времШиринаСлипЧека = Неопределено;
	времКодСимволаОтреза = Неопределено;
	времТекстШапки = Неопределено;
	времТекстПодвала = Неопределено;
	времДанныеМакетаСлипЧека = Неопределено;

	Параметры.Свойство("Модель", времМодель);
	Параметры.Свойство("ИДТерминала", времИДТерминала);
	Параметры.Свойство("Порт",   времПорт);
	Параметры.Свойство("Скорость", времСкорость);
	Параметры.Свойство("БитыДанных", времБитыДанных);
	Параметры.Свойство("Четность", времЧетность);
	Параметры.Свойство("СтопБиты", времСтопБиты);
	Параметры.Свойство("УправлениеПотоком", времУправлениеПотоком);	
	Параметры.Свойство("КодВалюты", времКодВалюты);
	Параметры.Свойство("КоличествоКопий", времКоличествоКопий);
	Параметры.Свойство("КодСимволаОтреза", времКодСимволаОтреза);
	Параметры.Свойство("ТекстШапки", времТекстШапки);
	Параметры.Свойство("ТекстПодвала", времТекстПодвала);
	
	Параметры.Свойство("ДанныеМакетаСлипЧека", времДанныеМакетаСлипЧека);
			
	ИДТерминала = ?(времИДТерминала = Неопределено, "", времИДТерминала);
	Порт = ?(времПорт  = Неопределено, 1, времПорт);
	Скорость = ?(времСкорость  = Неопределено, 9600, времСкорость);
	БитыДанных = ?(времБитыДанных  = Неопределено, 8, времБитыДанных);
	Четность = ?(времЧетность  = Неопределено, 0, времЧетность);
	СтопБиты = ?(времСтопБиты  = Неопределено, 1, времСтопБиты);
	УправлениеПотоком    = ?(времУправлениеПотоком  = Неопределено, 2, времУправлениеПотоком);
	КодВалюты = ?(времКодВалюты  = Неопределено, 643, времКодВалюты);
	ШиринаСлипЧека = ?(времШиринаСлипЧека = Неопределено, 36, времШиринаСлипЧека);
	КоличествоКопий = ?(времКоличествоКопий  = Неопределено, 2, времКоличествоКопий);
	ТекстШапки = ?(времТекстШапки  = Неопределено, "", времТекстШапки);	
	ТекстПодвала = ?(времТекстПодвала  = Неопределено, "", времТекстПодвала);
	КодСимволаОтреза = ?(времКодСимволаОтреза  = Неопределено, 22, времКодСимволаОтреза);
	ДанныеМакетаСлипЧека = времДанныеМакетаСлипЧека;
	
	ПрочитатьДанныеМакета();
	
	Параметры.Свойство("Модель", времМодель);
	Модель = ?(времМодель = Неопределено, Элементы.Модель.СписокВыбора[0], времМодель);
	
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);

КонецПроцедуры

// Процедура - обработчик события "Перед открытием" формы.
//
// Параметры:
//  Отказ                - <Булево>
//                       - Признак отказа от открытия формы. Если в теле
//                         процедуры-обработчика установить данному параметру
//                         значение Истина, открытие формы выполнено не будет.
//                         Значение по умолчанию: Ложь 
//
//  СтандартнаяОбработка - <Булево>
//                       - В данный параметр передается признак выполнения
//                         стандартной (системной) обработки события. Если в
//                         теле процедуры-обработчика установить данному
//                         параметру значение Ложь, стандартная обработка
//                         события производиться не будет. Отказ от стандартной
//                         обработки не отменяет открытие формы.
//                         Значение по умолчанию: Истина 
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
//
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
//
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	ЗаписатьДанныеМакета();
	
	Параметры.ПараметрыНастройки.Добавить(Модель, 		"Модель");
	Параметры.ПараметрыНастройки.Добавить(ИДТерминала, 	"ИДТерминала");
	Параметры.ПараметрыНастройки.Добавить(Порт, 		"Порт");
	Параметры.ПараметрыНастройки.Добавить(Скорость, 	"Скорость");
	Параметры.ПараметрыНастройки.Добавить(БитыДанных, 	"БитыДанных");
	Параметры.ПараметрыНастройки.Добавить(Четность, 	"Четность");
	Параметры.ПараметрыНастройки.Добавить(СтопБиты, 	"СтопБиты");
	Параметры.ПараметрыНастройки.Добавить(УправлениеПотоком, "УправлениеПотоком");
	
	Параметры.ПараметрыНастройки.Добавить(КодВалюты, 		"КодВалюты");
	Параметры.ПараметрыНастройки.Добавить(ШиринаСлипЧека, 	"ШиринаСлипЧека");
	Параметры.ПараметрыНастройки.Добавить(КоличествоКопий, 	"КоличествоКопий");	
	Параметры.ПараметрыНастройки.Добавить(КодСимволаОтреза,	"КодСимволаОтреза");
	Параметры.ПараметрыНастройки.Добавить(ТекстШапки,	"ТекстШапки");
	Параметры.ПараметрыНастройки.Добавить(ТекстПодвала,	"ТекстПодвала");
	Параметры.ПараметрыНастройки.Добавить(ДанныеМакетаСлипЧека, "ДанныеМакетаСлипЧека");

	ОчиститьСообщения();
	Закрыть(КодВозвратаДиалога.ОК);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)

	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("ИДТерминала", ИДТерминала);
	времПараметрыУстройства.Вставить("Порт", Порт);
	времПараметрыУстройства.Вставить("Скорость", Скорость);
	времПараметрыУстройства.Вставить("БитыДанных", БитыДанных);
	времПараметрыУстройства.Вставить("Четность", Четность);
	времПараметрыУстройства.Вставить("СтопБиты", СтопБиты);
	времПараметрыУстройства.Вставить("УправлениеПотоком", УправлениеПотоком);
	времПараметрыУстройства.Вставить("КодВалюты", КодВалюты);
	времПараметрыУстройства.Вставить("КодСимволаОтреза", КодСимволаОтреза);
	времПараметрыУстройства.Вставить("ТекстШапки", ТекстШапки);
	времПараметрыУстройства.Вставить("ТекстПодвала", ТекстПодвала);
	

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
		                           И ВыходныеПараметры.Количество() >= 2,
		                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
		                           "");


		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура(); 	
//	времПараметрыУстройства.Вставить("ИДТерминала", ИДТерминала);
//	времПараметрыУстройства.Вставить("Порт", Порт);
//	времПараметрыУстройства.Вставить("Скорость", Скорость);
	
	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьНомерВерсии",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

КонецПроцедуры

Процедура ПрочитатьДанныеМакета()

	Если ДанныеМакетаСлипЧека.Количество() = 0 Тогда
		ДанныеМакетаСлипЧека.Добавить("БАНК"   , "Банк");
		ДанныеМакетаСлипЧека.Добавить(""       , "Организация");
		ДанныеМакетаСлипЧека.Добавить(""       , "Город");
		ДанныеМакетаСлипЧека.Добавить(""       , "Адрес");
		ДанныеМакетаСлипЧека.Добавить("ОТДЕЛ1" , "Отдел");
		ДанныеМакетаСлипЧека.Добавить("КАССИР" , "Кассир");
		ДанныеМакетаСлипЧека.Добавить("ЗДРАВСТВУЙТЕ", "ТекстШапки");
		ДанныеМакетаСлипЧека.Добавить("СПАСИБО", "ТекстПодвала");
	КонецЕсли;

	Банк         = ДанныеМакетаСлипЧека[0].Значение;
	Организация  = ДанныеМакетаСлипЧека[1].Значение;
	Город        = ДанныеМакетаСлипЧека[2].Значение;
	Адрес        = ДанныеМакетаСлипЧека[3].Значение;
	Отдел        = ДанныеМакетаСлипЧека[4].Значение;
	Кассир       = ДанныеМакетаСлипЧека[5].Значение;
	ТекстПодвала = ДанныеМакетаСлипЧека[6].Значение;
	ТекстШапки   = ДанныеМакетаСлипЧека[7].Значение;

КонецПроцедуры

Процедура ЗаписатьДанныеМакета()

	ДанныеМакетаСлипЧека[0].Значение = Банк;
	ДанныеМакетаСлипЧека[1].Значение = Организация;
	ДанныеМакетаСлипЧека[2].Значение = Город;
	ДанныеМакетаСлипЧека[3].Значение = Адрес;
	ДанныеМакетаСлипЧека[4].Значение = Отдел;
	ДанныеМакетаСлипЧека[5].Значение = Кассир;
	ДанныеМакетаСлипЧека[6].Значение = ТекстПодвала;
	ДанныеМакетаСлипЧека[7].Значение = ТекстШапки;
	
КонецПроцедуры
