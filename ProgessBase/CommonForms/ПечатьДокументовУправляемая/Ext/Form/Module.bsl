
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем КоллекцияПечатныхФорм, ПараметрыВывода;
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ИсточникДанных") Тогда
		
		Если НЕ УправлениеПечатьюПереопределяемый.ПечатьПоВнешнемуИсточнику(
					Параметры.ИсточникДанных,
					Параметры.ПараметрыИсточника,
					КоллекцияПечатныхФорм,
					ОбъектыПечати,
					ПараметрыВывода) Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		КлючНастроек = Неопределено;
	Иначе
		
		ИмяМенеджераПечати = Параметры.ИмяМенеджераПечати;
		ИменаМакетов       = Параметры.ИменаМакетов;
		ПараметрКоманды    = Параметры.ПараметрКоманды;
		ПараметрыПечати    = Параметры.ПараметрыПечати;
		
		УправлениеПечатью.СформироватьПечатныеФормы(ИмяМенеджераПечати, ИменаМакетов, ПараметрКоманды, ПараметрыПечати,
			КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
		КлючНастроек = Параметры.ИмяМенеджераПечати + "-" + Параметры.ИменаМакетов;
		
	КонецЕсли;
	
	ДоступнаПечатьПоКомплектно = ПараметрыВывода.ДоступнаПечатьПоКомплектно;
	
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ПереопределитьПользовательскиеНастройкиКоличества") Тогда
		Если Параметры.ПараметрыПечати.ПереопределитьПользовательскиеНастройкиКоличества Тогда
			КлючНастроек = Неопределено;
		КонецЕсли;
	КонецЕсли;	
	
	НеРазрешеноРедактированиеТаблиц = УправлениеДопПравамиПользователей.ЗащитаТаблиц();
	
	Если ПустаяСтрока(КлючНастроек) Тогда
		КоличествоКопийДляПечати = Новый Массив;
	Иначе
		КоличествоКопийДляПечати = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"КоличествоКопийДляПечати", 
			КлючНастроек, 
			Новый Массив
		);
	КонецЕсли;
	
	Колво = КоллекцияПечатныхФорм.Количество();
	
	Для Сч = 1 По 5 Цикл
		Если Сч > Колво Тогда
			ЭтаФорма["Таб" + Сч] = Неопределено;
			Элементы["Группа" + Сч].Видимость = Ложь;
			Элементы["Копии"  + Сч].Видимость = Ложь;
		Иначе
			СтрМакета = КоллекцияПечатныхФорм[Сч-1];
			
			ЭтаФорма["Таб" + Сч] = СтрМакета.ТабличныйДокумент;
			Элементы["Таб" + Сч].Защита = НеРазрешеноРедактированиеТаблиц;
			Элементы["Группа" + Сч].Видимость = Истина;
			Элементы["Группа" + Сч].Заголовок = СтрМакета.СинонимМакета;
			Элементы["Копии"  + Сч].Видимость = Истина;
			КраткоеПредставлениеСинонимаМакета = ?(СтрДлина(СтрМакета.СинонимМакета) > 18, 
				Лев(СтрМакета.СинонимМакета, 15) + "...", СтрМакета.СинонимМакета);
			Элементы["Копии"  + Сч].Заголовок = КраткоеПредставлениеСинонимаМакета;
			Элементы["Копии"  + Сч].Подсказка = СтрМакета.СинонимМакета;
			
			Если Сч <= КоличествоКопийДляПечати.Количество() Тогда
				ЭтаФорма["Копии" + Сч] = КоличествоКопийДляПечати[Сч-1];
			Иначе
				ЭтаФорма["Копии" + Сч] = СтрМакета.Экземпляров;
			КонецЕсли;
			
			ЭтаФорма["Таб" + Сч].КоличествоЭкземпляров = ЭтаФорма["Копии" + Сч];
			ИменаТабДокументов.Добавить(Сч, СтрМакета.СинонимМакета);
			
			Если НЕ ПустаяСтрока(СтрМакета.ПолныйПутьКМакету) Тогда
				МакетыПечатныхФорм.Добавить(СтрМакета.ПолныйПутьКМакету);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Колво = 1 Тогда
		Элементы.ГруппаКопии.Видимость = Ложь;
		Элементы.Копии.Видимость = Истина;
		Если КоличествоКопийДляПечати.Количество() = 1 Тогда
			Копии = КоличествоКопийДляПечати[0];
		Иначе
			Копии = КоллекцияПечатныхФорм[0].Экземпляров;
		КонецЕсли;
	Иначе
		Элементы.Копии.Видимость = Ложь;
		Элементы.ГруппаКопии.Видимость = Истина;
	КонецЕсли;
	
	Если Колво <= 1 Тогда
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	Если ТекущийРежимЗапуска() <> РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение 
		И Элементы.Найти("ОтправитьПоПочте") <> Неопределено Тогда
		
		Элементы.ОтправитьПоПочте.Видимость = Ложь;
		
	КонецЕсли;
	
	Элементы.Перейти.Доступность = ОбъектыПечати.Количество() > 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если НужноСохранитьНастройкиКопий Тогда
		КоличествоКопийДляПечати = Новый Массив;
		
		Если Элементы.ГруппаКопии.Видимость Тогда
			Для Сч = 1 По 5 Цикл
				Если Элементы["Копии" + Сч].Видимость Тогда
					КоличествоКопийДляПечати.Добавить(ЭтаФорма["Копии"+Сч]);
				Иначе
					Прервать; // дальше не имеет смысла просматривать
				КонецЕсли;
			КонецЦикла;
		Иначе
			КоличествоКопийДляПечати.Добавить(Копии);
		КонецЕсли;
		
		Если Не ПустаяСтрока(КлючНастроек) Тогда
			СохранитьНастройкиКоличестваКопий(КлючНастроек, КоличествоКопийДляПечати);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПечатьВыполнить()
	
	ТабличныеДокументы = Новый СписокЗначений;
	
	Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
		ТабличныеДокументы.Добавить(ЭтаФорма["Таб" + ТабДокумент.Значение], ТабДокумент.Представление);
	КонецЦикла;
	
	УправлениеПечатьюКлиент.РаспечататьТабличныеДокументы(ТабличныеДокументы, ОбъектыПечати,
								ДоступнаПечатьПоКомплектно);
	
КонецПроцедуры

&НаКлиенте
Процедура КопииПриИзменении(Элемент)
	
	Копий = ЭтаФорма[Элемент.Имя];
	ИмяТабДока = "Таб" + ?(Элемент.Имя = "Копии", "1", Сред(Элемент.Имя, 6));
	ТабДок = ЭтаФорма[ИмяТабДока];
	ТабДок.КоличествоЭкземпляров = Копий;
	НужноСохранитьНастройкиКопий = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоПочтеВыполнить()
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		УправлениеОтчетами.ОтправитьДокументПоЭлектроннойПочте(Таб1, Элементы.Группа1.Заголовок, ОбъектыПечати);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВыполнить()

	спсВыбора = Новый СписокЗначений;
	Для Каждого Элемент Из ОбъектыПечати Цикл
		спсВыбора.Добавить(Элемент.Значение);
	КонецЦикла;
	
	Элемент = спсВыбора.ВыбратьЭлемент(НСтр("ru = 'Перейти к печатной форме'"));
	Если Элемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элемент = ОбъектыПечати.НайтиПоЗначению(Элемент.Значение);
	Если Элемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОбласти = Элемент.Представление;
	Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
		
		ИмяЭлемента = "Таб" + ТабДокумент.Значение;
		Таб = ЭтаФорма[ИмяЭлемента];
		Область = Таб.Области.Найти(ИмяОбласти);
		Если Область = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяОбласть = Таб.Область(Область.Верх, , Область.Верх);
		Элементы[ИмяЭлемента].ТекущаяОбласть = ТекущаяОбласть;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Процедура СохранитьНастройкиКоличестваКопий(КлючНастроек, КоличествоКопийДляПечати)
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("КоличествоКопийДляПечати", КлючНастроек, КоличествоКопийДляПечати);
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКУправлениюМакетами(Команда)
	
	ПараметрыОткрытия = ?(МакетыПечатныхФорм.Количество() > 0, Новый Структура("Фильтр", ОбъектыПечати[0].Значение), Неопределено);
	
	ОткрытьФорму("РегистрСведений.ПользовательскиеМакетыПечати.Форма.МакетыПечатныхФорм", ПараметрыОткрытия);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ И ПРОЦЕДУРЫ ПОДГОТАВЛИВАЮЩИЕ ТАБЛИЧНЫЕ ДОКУМЕНТЫ К ОТПРАВКЕ

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСписокТиповФайловТабличныхДокументов(Результат)
	
	СписокТипов = Новый СписокЗначений;
	
	Если Результат.ФорматMXL Тогда
		СписокТипов.Добавить(ТипФайлаТабличногоДокумента.MXL, "mxl");
	КонецЕсли;
	
	Если Результат.ФорматHTML Тогда
		СписокТипов.Добавить(ТипФайлаТабличногоДокумента.HTML, "html");
	КонецЕсли;
	
	Если Результат.ФорматXLS Тогда
		СписокТипов.Добавить(ТипФайлаТабличногоДокумента.XLS, "xls");
	КонецЕсли;
	
	Возврат СписокТипов;	
	
КонецФункции

&НаСервере
Процедура ПоместитьТабличныеДокументыВоВременноеХранилище(СписокФайлов, НастройкиСохранения)
	
	ЗаписьZipФайла = Неопределено;
	ИмяАрхива = Неопределено;
	Если НастройкиСохранения.ЗапаковатьZIP Тогда
		ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
		ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяАрхива);
	КонецЕсли;
	
	СписокТипов = ПолучитьСписокТиповФайловТабличныхДокументов(НастройкиСохранения);
	ДатаПредставление = Формат(ТекущаяДата(), "ДФ='yyyyMMdd HH:mm'");
	
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	
	Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
		ТабДок = ЭтаФорма["Таб" + ТабДокумент.Значение];
		
		Для Каждого ТипФайла Из СписокТипов Цикл
			
			Если ОбъектыПечати.Количество() > 1 Тогда
				ИмяФайла = "[ИмяМакета] ([ДатаПредставление]).[Расширение]";
			Иначе
				ИмяФайла = "[Документ] ([ИмяМакета] [ДатаПредставление]).[Расширение]";
			КонецЕсли;
			
			ИмяФайла = СтрЗаменить(ИмяФайла, "[Документ]",			Строка(ОбъектыПечати[0].Значение));
			ИмяФайла = СтрЗаменить(ИмяФайла, "[ИмяМакета]",			ТабДокумент.Представление);
			ИмяФайла = СтрЗаменить(ИмяФайла, "[ДатаПредставление]",	ДатаПредставление);
			ИмяФайла = СтрЗаменить(ИмяФайла, "[Расширение]",		ТипФайла.Представление);
			
			ИмяФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайла);
			
			ИмяВременногоФайла = ИмяВременнойПапки + "\" + ИмяФайла;
			ТабДок.Записать(ИмяВременногоФайла, ТипФайла.Значение);
			
			Если ТипФайла.Значение = ТипФайлаТабличногоДокумента.HTML Тогда
				ВставитьКартинкиВHTML(ИмяВременногоФайла);
			КонецЕсли;			
			
			Если ЗаписьZipФайла <> Неопределено Тогда 
				ЗаписьZipФайла.Добавить(ИмяВременногоФайла);
			Иначе
				ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
				ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
				СписокФайлов.Добавить(ПутьВоВременномХранилище, ИмяФайла);
				УдалитьФайлы(ИмяВременногоФайла);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если ЗаписьZipФайла <> Неопределено Тогда 
		ЗаписьZipФайла.Записать();
		ФайлАрхива = Новый Файл(ИмяАрхива);
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяАрхива);
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
		СписокФайлов.Добавить(ПутьВоВременномХранилище, ФайлАрхива.Имя);
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременнойПапки);
	
КонецПроцедуры

&НаСервере
Процедура ВставитьКартинкиВHTML(ИмяФайлаHTML)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	ТекстHTML = ТекстовыйДокумент.ПолучитьТекст();
	
	ФайлHTML = Новый Файл(ИмяФайлаHTML);
	
	ИмяПапкиКартинок = ФайлHTML.ИмяБезРасширения + "_files";
	ПутьКПапкеКартинок = СтрЗаменить(ФайлHTML.ПолноеИмя, ФайлHTML.Имя, ИмяПапкиКартинок);
	
	// ожидается, что в папке будут только картинки
	ФайлыКартинок = НайтиФайлы(ПутьКПапкеКартинок, "*");
	
	Для Каждого ФайлКартинки Из ФайлыКартинок Цикл
		КартинкаТекстом = Base64Строка(Новый ДвоичныеДанные(ФайлКартинки.ПолноеИмя));
		КартинкаТекстом = "data:image/" + Сред(ФайлКартинки.Расширение,2) + ";base64," + Символы.ПС + КартинкаТекстом;
		
		ТекстHTML = СтрЗаменить(ТекстHTML, ИмяПапкиКартинок + "\" + ФайлКартинки.Имя, КартинкаТекстом);
	КонецЦикла;
		
	ТекстовыйДокумент.УстановитьТекст(ТекстHTML);
	ТекстовыйДокумент.Записать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	
КонецПроцедуры
