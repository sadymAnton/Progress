
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='ЭТ'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СпШиринаСлипЧека = Элементы.ШиринаСлипЧека.СписокВыбора;
	СпШиринаСлипЧека.Добавить(24,  "24 сим");
	СпШиринаСлипЧека.Добавить(32,  "32 сим");
	СпШиринаСлипЧека.Добавить(36,  "36 сим");
	СпШиринаСлипЧека.Добавить(40,  "40 сим"); 
	СпШиринаСлипЧека.Добавить(48,  "48 сим");

	времКодВалюты                  = Неопределено;
	времШиринаСлипЧека             = Неопределено;
	времКоличествоКопийСлипчека    = Неопределено;
	времКодСимволаЧастичногоОтреза = Неопределено;
	времДанныеМакетаСлипЧека       = Неопределено;

	Параметры.Свойство("КодВалюты"                 , времКодВалюты);
	Параметры.Свойство("ШиринаСлипЧека"            , времШиринаСлипЧека);
	Параметры.Свойство("КоличествоКопийСлипчека"   , времКоличествоКопийСлипчека);
	Параметры.Свойство("КодСимволаЧастичногоОтреза", времКодСимволаЧастичногоОтреза);
	Параметры.Свойство("ДанныеМакетаСлипЧека"      , времДанныеМакетаСлипЧека);

	КодВалюты                  = ?(времКодВалюты                  = Неопределено, "643", времКодВалюты);
	ШиринаСлипЧека             = ?(времШиринаСлипЧека             = Неопределено,    36, времШиринаСлипЧека);
	КоличествоКопийСлипчека    = ?(времКоличествоКопийСлипчека    = Неопределено,     2, времКоличествоКопийСлипчека);
	КодСимволаЧастичногоОтреза = ?(времКодСимволаЧастичногоОтреза = Неопределено,    22, времКодСимволаЧастичногоОтреза);
	ДанныеМакетаСлипЧека       = времДанныеМакетаСлипЧека;

	ПрочитатьДанныеМакета();

	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);

КонецПроцедуры

// Процедура - обработчик события "Перед открытием" формы.
//
// Параметры:
//  Отказ                - <Булево>
//                       - Признак отказа от открытия формы. Если в теле
//                         процедуры-обработчика установить данному параметру
//                         значение Истина, открытие формы выполнено не будет.
//                         Значение по умолчанию: Ложь 
//
//  СтандартнаяОбработка - <Булево>
//                       - В данный параметр передается признак выполнения
//                         стандартной (системной) обработки события. Если в
//                         теле процедуры-обработчика установить данному
//                         параметру значение Ложь, стандартная обработка
//                         события производиться не будет. Отказ от стандартной
//                         обработки не отменяет открытие формы.
//                         Значение по умолчанию: Истина 
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
//
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
//
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	ЗаписатьДанныеМакета();
	Параметры.ПараметрыНастройки.Добавить(ШиринаСлипЧека            , "ШиринаСлипЧека");
	Параметры.ПараметрыНастройки.Добавить(КоличествоКопийСлипчека   , "КоличествоКопийСлипчека");
	Параметры.ПараметрыНастройки.Добавить(КодСимволаЧастичногоОтреза, "КодСимволаЧастичногоОтреза");
	Параметры.ПараметрыНастройки.Добавить(ДанныеМакетаСлипЧека      , "ДанныеМакетаСлипЧека");

	ОчиститьСообщения();
	Закрыть(КодВозвратаДиалога.ОК);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)

	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("ШиринаСлипЧека"            , ШиринаСлипЧека);
	времПараметрыУстройства.Вставить("КоличествоКопийСлипчека"   , КоличествоКопийСлипчека);
	времПараметрыУстройства.Вставить("КодСимволаЧастичногоОтреза", КодСимволаЧастичногоОтреза);
	времПараметрыУстройства.Вставить("ДанныеМакетаСлипЧека"      , ДанныеМакетаСлипЧека);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
		                           И ВыходныеПараметры.Количество() >= 2,
		                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
		                           "");


		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("ШиринаСлипЧека"            , ШиринаСлипЧека);
	времПараметрыУстройства.Вставить("КоличествоКопийСлипчека"   , КоличествоКопийСлипчека);
	времПараметрыУстройства.Вставить("КодСимволаЧастичногоОтреза", КодСимволаЧастичногоОтреза);
	времПараметрыУстройства.Вставить("ДанныеМакетаСлипЧека"      , ДанныеМакетаСлипЧека);

	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

КонецПроцедуры

Процедура ПрочитатьДанныеМакета()

	Если ДанныеМакетаСлипЧека.Количество() = 0 Тогда
		ДанныеМакетаСлипЧека.Добавить("ОАО ""Альфа Банк"""	, "Банк");
		ДанныеМакетаСлипЧека.Добавить(""       				, "Организация");
		ДанныеМакетаСлипЧека.Добавить(""       				, "Город");
		ДанныеМакетаСлипЧека.Добавить(""       				, "Адрес");
		ДанныеМакетаСлипЧека.Добавить("СПАСИБО"				, "ТекстПодвала");
	КонецЕсли;

	Банк         = ДанныеМакетаСлипЧека[0].Значение;
	Организация  = ДанныеМакетаСлипЧека[1].Значение;
	Город        = ДанныеМакетаСлипЧека[2].Значение;
	Адрес        = ДанныеМакетаСлипЧека[3].Значение;
	ТекстПодвала = ДанныеМакетаСлипЧека[4].Значение;

КонецПроцедуры

Процедура ЗаписатьДанныеМакета()

	ДанныеМакетаСлипЧека[0].Значение = Банк;
	ДанныеМакетаСлипЧека[1].Значение = Организация;
	ДанныеМакетаСлипЧека[2].Значение = Город;
	ДанныеМакетаСлипЧека[3].Значение = Адрес;
	ДанныеМакетаСлипЧека[4].Значение = ТекстПодвала;

КонецПроцедуры
