//------------------------------------------------------------------------------
// СПЕЦИФИКАЦИЯ ПАРАМЕТРОВ ПЕРЕДАВАЕМЫХ В ФОРМУ
//
// УчетнаяЗапись*  - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты
//
// ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ
//
// Неопределено - пользователь отказался от ввода пароля
// Структура  - 
//            ключ "Статус", булево - истина или ложь в зависмости от успеха вызова
//            ключ "Пароль", строка - в случае если статус Истина содержит пароль
//            ключ "СообщениеОбОшибке" - в случае если статус Истина содержит текст
//                                       сообщения об ошибке
//
//------------------------------------------------------------------------------
// СПЕЦИФИКАЦИЯ ФУНКЦИОНИРОВАНИЯ ФОРМЫ
//
//   Если в списке переданных учетных записей более одной записи, то на форме
// появится возможность выбора учетной записи, с которой будет отправлено
// электронное сообщение.
//
//------------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
// СЕКЦИЯ ОБРАБОТЧИКОВ СОБЫТИЙ ФОРМЫ И ЭЛЕМЕНТОВ ФОРМЫ
//

// Обработчик события "при создании на сервере" формы
// 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.УчетнаяЗапись.Пустая() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УчетнаяЗапись = Параметры.УчетнаяЗапись;
	
	Результат = ЗагрузитьПароль();
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Пароль = Результат;
		ПодтверждениеПароля = Результат;
		СохранятьПароль = Истина;
	Иначе
		Пароль = "";
		ПодтверждениеПароля = "";
		СохранятьПароль = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события нажатия на кнопку "Продолжить"
//
&НаКлиенте
Процедура СохранитьПарольИПродолжитьВыполнить()
	
	Если Пароль <> ПодтверждениеПароля Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = 'Пароль и подтверждение пароля не совпадают'"), , "Пароль");
		Возврат;
	КонецЕсли;
	
	Если СохранятьПароль Тогда
		СохранитьПароль(Пароль);
	Иначе
		СохранитьПароль(Неопределено);
	КонецЕсли;
	
	Закрыть(Пароль);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЕКЦИЯ СЕРВИСНЫХ ФУНКЦИЙ
//

// Сохраняет значение в системном хранилище настроек ИБ
//
&НаСервере
Процедура СохранитьПароль(Значение)
	
	ХранилищеОбщихНастроек.Сохранить(
	               "ФормаПодтвержденияПароляУчетнойЗаписи",
	               УчетнаяЗапись,
	               Значение, ,
	               ПользователиСервер.ТекущийПользователь());
	
КонецПроцедуры

// Получает значение из системного хранилища настроек ИБ
//
&НаСервере
Функция ЗагрузитьПароль()
	
	Значение = ХранилищеОбщихНастроек.Загрузить(
	               "ФормаПодтвержденияПароляУчетнойЗаписи",
	               УчетнаяЗапись, ,
	               ПользователиСервер.ТекущийПользователь());
	
	Возврат Значение;
	
КонецФункции
