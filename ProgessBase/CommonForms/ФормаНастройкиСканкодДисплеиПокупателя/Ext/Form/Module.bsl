
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Заголовок = НСтр("ru='ДП'") + " """ + Строка(Идентификатор) + """";

	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СпПорт = Элементы.Порт.СписокВыбора;
	Для Номер = 1 По 32 Цикл
		СпПорт.Добавить(Номер, "COM" + Формат(Номер, "ЧЦ=2; ЧДЦ=0; ЧН=0; ЧГ=0"));
	КонецЦикла;
	
	СпМодель = Элементы.Модель.СписокВыбора;
	СпМодель.Добавить(0, "DSP860");
	СпМодель.Добавить(1, "DSP850B");
	СпМодель.Добавить(2, "DSP840");
	СпМодель.Добавить(3, "DSP820");
	СпМодель.Добавить(4, "Firich FV2029");

	СпСкорость = Элементы.Скорость.СписокВыбора;
	СпСкорость.Добавить(9600,  "9600");

	времПорт            			= Неопределено;
	времСкорость        			= Неопределено;
	времМодель 						= Неопределено;
	времИспользоватьБегущуюСтроку	= времИспользоватьБегущуюСтроку;
	времБегущаяСтрока				= Неопределено;

	Параметры.Свойство("Порт",            			времПорт);
	Параметры.Свойство("Скорость",        			времСкорость);
	Параметры.Свойство("Модель",        			времМодель);
	Параметры.Свойство("ИспользоватьБегущуюСтроку",	времИспользоватьБегущуюСтроку);
	Параметры.Свойство("БегущаяСтрока",				времБегущаяСтрока);

	Порт						= ?(времПорт						= Неопределено,     1, времПорт);
	Скорость					= ?(времСкорость					= Неопределено,  9600, времСкорость);
	Модель						= ?(времМодель						= Неопределено,  	0, времМодель);
	ИспользоватьБегущуюСтроку	= ?(времИспользоватьБегущуюСтроку	= Неопределено,  Ложь, времИспользоватьБегущуюСтроку);
	БегущаяСтрока				= ?(времБегущаяСтрока				= Неопределено,    "", времБегущаяСтрока);

	Элементы.ТестУстройства.Видимость    = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);
	Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента
	                                        = Идентификатор.РабочееМесто);

КонецПроцедуры

// Процедура - обработчик события "Перед открытием" формы.
//
// Параметры:
//  Отказ                - <Булево>
//                       - Признак отказа от открытия формы. Если в теле
//                         процедуры-обработчика установить данному параметру
//                         значение Истина, открытие формы выполнено не будет.
//                         Значение по умолчанию: Ложь 
//
//  СтандартнаяОбработка - <Булево>
//                       - В данный параметр передается признак выполнения
//                         стандартной (системной) обработки события. Если в
//                         теле процедуры-обработчика установить данному
//                         параметру значение Ложь, стандартная обработка
//                         события производиться не будет. Отказ от стандартной
//                         обработки не отменяет открытие формы.
//                         Значение по умолчанию: Истина 
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

	УстановитьДоступностьЭлементов();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
//
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
//
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	Параметры.ПараметрыНастройки.Добавить(Порт            			, "Порт");
	Параметры.ПараметрыНастройки.Добавить(Скорость        			, "Скорость");
	Параметры.ПараметрыНастройки.Добавить(Модель        			, "Модель");
	Параметры.ПараметрыНастройки.Добавить(ИспользоватьБегущуюСтроку	, "ИспользоватьБегущуюСтроку");
	Параметры.ПараметрыНастройки.Добавить(БегущаяСтрока				, "БегущаяСтрока");

	ОчиститьСообщения();
	Закрыть(КодВозвратаДиалога.ОК);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)

	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"						, Порт);
	времПараметрыУстройства.Вставить("Скорость"       			, Скорость);
	времПараметрыУстройства.Вставить("Четность"					, 0);
	времПараметрыУстройства.Вставить("БитыДанных"				, 8);
	времПараметрыУстройства.Вставить("СтопБиты"					, 1);
	времПараметрыУстройства.Вставить("Модель"					, Модель);
	времПараметрыУстройства.Вставить("ИспользоватьБегущуюСтроку", ИспользоватьБегущуюСтроку);
	времПараметрыУстройства.Вставить("БегущаяСтрока"			, БегущаяСтрока);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.'");
		ПоказатьОповещениеПользователя(ТекстСообщения);
	Иначе
		ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
		                           И ВыходныеПараметры.Количество() >= 2,
		                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
		                           "");


		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()

	Элементы.Порт.Доступность              = Истина;
	Элементы.Скорость.Доступность          = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Порт"           			, Порт);
	времПараметрыУстройства.Вставить("Скорость"       			, Скорость);
	времПараметрыУстройства.Вставить("Четность"					, 0);
	времПараметрыУстройства.Вставить("БитыДанных"				, 8);
	времПараметрыУстройства.Вставить("СтопБиты"					, 1);
	времПараметрыУстройства.Вставить("Модель"					, Модель);
	времПараметрыУстройства.Вставить("ИспользоватьБегущуюСтроку", ИспользоватьБегущуюСтроку);
	времПараметрыУстройства.Вставить("БегущаяСтрока"			, БегущаяСтрока);
	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен'"));

КонецПроцедуры
