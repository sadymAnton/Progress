
Процедура ЗаполнитьКрайнийСрокУплаты(ДатыУдержанияНалога = Неопределено) Экспорт 

	Если ДатыУдержанияНалога = Неопределено Тогда
		ДатыУдержанияНалога = Новый Массив;
		Для Каждого СтрокаНабора Из ЭтотОбъект Цикл
			Если СтрокаНабора.ВидСтроки = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание Тогда	
				Если СтрокаНабора.ВключатьВДекларациюПоНалогуНаПрибыль Тогда // пп. 3 п. 9 ст. 226.1 
					СрокУплаты = ДобавитьМесяц(НачалоДня(СтрокаНабора.Период), 1)
				ИначеЕсли СтрокаНабора.СрокПеречисления = Перечисления.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные Тогда
					СрокУплаты = НачалоДня(КонецМесяца(СтрокаНабора.Период))
				Иначе
					СрокУплаты = КонецДня(СтрокаНабора.Период) + 1;
				КонецЕсли;
				Если ДатыУдержанияНалога.Найти(СрокУплаты) = Неопределено Тогда
					ДатыУдержанияНалога.Добавить(СрокУплаты)
				КонецЕсли;
				СтрокаНабора.КрайнийСрокУплаты = СрокУплаты;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ДатыУдержанияНалога.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	РабочиеДни = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СрокиУплаты", ДатыУдержанияНалога);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря КАК СрокУплаты
	|ПОМЕСТИТЬ ВТДанныеКОбработке
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря В(&СрокиУплаты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКОбработке.СрокУплаты,
	|	МИНИМУМ(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря) КАК КрайнийСрокУплаты
	|ИЗ
	|	ВТДанныеКОбработке КАК ДанныеКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|		ПО ДанныеКОбработке.СрокУплаты <= РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ВидДня В (ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий), ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКОбработке.СрокУплаты";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.КрайнийСрокУплаты) Тогда
			РабочиеДни.Вставить(Выборка.СрокУплаты, Выборка.КрайнийСрокУплаты)
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаНабора Из ЭтотОбъект Цикл
		Если СтрокаНабора.ВидСтроки = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание Тогда	
			БлижайшийРабочийДень = РабочиеДни[СтрокаНабора.КрайнийСрокУплаты];
			Если БлижайшийРабочийДень <> Неопределено И БлижайшийРабочийДень <> СтрокаНабора.КрайнийСрокУплаты Тогда
				СтрокаНабора.КрайнийСрокУплаты = БлижайшийРабочийДень;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	СправкиПоНДФЛ.ОчиститьКодыОКТМО(ЭтотОбъект);
	
	ЗаполнитьКрайнийСрокУплаты();
	
КонецПроцедуры

