
Процедура УстановкаПараметровСеанса(ТребуемыеПараметры)
	
	Если ТребуемыеПараметры = Неопределено Тогда
		// раздел "безусловной" инициализации параметров сеанса
		
		ПолныеПрава.УстановитьПараметрыМеханизмаОграниченияПравДоступа();
		
	Иначе		
		
		УстановленныеПараметры = Новый Структура;
		
		Для Каждого ИмяПараметра ИЗ ТребуемыеПараметры Цикл
			УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры);
		КонецЦикла;
		
		// СтандартныеПодсистемы
		СтандартныеПодсистемыСервер.УстановкаПараметровСеанса(ТребуемыеПараметры);
		// Конец СтандартныеПодсистемы
		
	КонецЕсли;
	
	//начало изменений Ожиганов 31.08.2015 уберем каждый раз обновление параметра, при инициализации других параметров
	//определение перенесем в   УстановитьЗначениеПараметраСеанса
	//ПараметрыСеанса.ПроведениеДокументов = Ложь;   //Веснина 2015.07.17
	//конец изменений 

КонецПроцедуры

Процедура УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры)
	
	Если УстановленныеПараметры.Свойство(ИмяПараметра) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыРИБ = Новый Структура;
	ПараметрыРИБ.Вставить("НаличиеОбменаУПП");
	ПараметрыРИБ.Вставить("ВсеУзлыОбменаУПП");
	ПараметрыРИБ.Вставить("СоответствиеОрганизацийИУзловОбменаУПП");
	ПараметрыРИБ.Вставить("СоответствиеУзловИДатДляОбменаУПП");
	
	ПараметрыРИБ.Вставить("ИспользованиеРИБ");
	ПараметрыРИБ.Вставить("ПрефиксУзлаРаспределеннойИнформационнойБазы");
	ПараметрыРИБ.Вставить("ВсеУзлыДляОбменаССайтомТоварами");
	ПараметрыРИБ.Вставить("ВсеУзлыДляОбменаССайтомЗаказами");
	ПараметрыРИБ.Вставить("НаличиеОбменаССайтом");
	
	ПараметрыРИБ.Вставить("ВсеУзлыОбменаУТУПП");
	ПараметрыРИБ.Вставить("НаличиеОбменаУТУПП");
	ПараметрыРИБ.Вставить("СоответствиеОрганизацийИУзловОбменаУТУПП");
	ПараметрыРИБ.Вставить("СоответствиеУзловИДатДляОбменаУТУПП");
	ПараметрыРИБ.Вставить("СохранятьИнформациюОМестеСозданияОбъектов");
	
	ПараметрыРИБ.Вставить("НаличиеОбменаСРозничнойТорговлей");
	ПараметрыРИБ.Вставить("ВсеУзлыОбменаСРозничнойТорговлей");
	ПараметрыРИБ.Вставить("СоответствиеУзловИДатДляОбменаУправлениеПредприятиемРозничнаяТорговля");
	ПараметрыРИБ.Вставить("СоответствиеРеквизитовИУзловОбменаСРозничнойТорговлей");
	
	Если ИмяПараметра = "ОбщиеЗначения" Тогда
		ПараметрыСеанса.ОбщиеЗначения = Новый ХранилищеЗначения(Новый Структура);
		УстановленныеПараметры.Вставить("ОбщиеЗначения");
		
	ИначеЕсли ПараметрыРИБ.Свойство(ИмяПараметра) Тогда	
		ПолныеПрава.ОпределитьФактИспользованияРИБ();
		ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРИБ);
		
	ИначеЕсли ИмяПараметра = "ТекущийПользователь" Тогда
		ПользователиПолныеПрава.ОпределитьТекущегоПользователя("ТекущийПользователь", УстановленныеПараметры);
		
	ИначеЕсли ИмяПараметра = "ГраницыЗапретаИзмененияДанных" Тогда		
		ПолныеПрава.УстановитьПараметрГраницыЗапретаИзмененияДанных();
		УстановленныеПараметры.Вставить("ГраницыЗапретаИзмененияДанных");
	//начало изменений БП 14
	ИначеЕсли ИмяПараметра = "НеведетсяУПРУчетВЧастиЗатратИОС" Тогда		
			ПараметрыСеанса.НеведетсяУПРУчетВЧастиЗатратИОС = Константы.НеведетсяУПРУчетВЧастиЗатратИОС.Получить();
			УстановленныеПараметры.Вставить("НеведетсяУПРУчетВЧастиЗатратИОС");
	//конец изменений БП 14 
	//начало изменений
	ИначеЕсли ИмяПараметра = "ПРГ_ГраницыЗапретаИзмененияДанныхМСФО" Тогда		
		ПРГ_Привелегированный.УстановитьПараметрГраницыЗапретаИзмененияДанныхМСФО();
		УстановленныеПараметры.Вставить("ПРГ_ГраницыЗапретаИзмененияДанныхМСФО");
	ИначеЕсли ИмяПараметра = "ПРГ_ИмяОбъектовМСФО" Тогда		
		ПРГ_Привелегированный.ПРГ_УстановитьИменаМетаданныхМСФО();
		УстановленныеПараметры.Вставить("ПРГ_ИмяОбъектовМСФО");
	//конец изменений 
	//начало изменений
	ИначеЕсли ИмяПараметра = "ПРГ_КаталогХраненияФайлов" Тогда
	    ПараметрыСеанса.ПРГ_КаталогХраненияФайлов = "";
		УстановленныеПараметры.Вставить("ПРГ_КаталогХраненияФайлов");
	//конец изменений 
	//начало изменений Ожиганов 25.05.2015 немножко оптимизируем 	
	ИначеЕсли ИмяПараметра = "ПРГ_СчетаУчетаЦенностей" Тогда
	      ПараметрыСеанса.ПРГ_СчетаУчетаЦенностей = ПРГ_ДопФункцииКлиентСервер.ПРГПолучитьСоотвествиеСчетовУчета();
		  УстановленныеПараметры.Вставить("ПРГ_СчетаУчетаЦенностей");
	//конец изменений 
	//начало изменений Ожиганов 08.07.2015 создание базы МСФО 
	ИначеЕсли ИмяПараметра = "ПРГ_ПараметрыОбменМСФО" Тогда
		ПРГ_Привелегированный.УстановитьПРГ_ПараметрыОбменМСФО();
		УстановленныеПараметры.Вставить("ПРГ_ПараметрыОбменМСФО");
	//конец изменений 
	//начало изменений Ожиганов 31.08.2015 обновление единого
	ИначеЕсли ИмяПараметра = "ПроведениеДокументов" Тогда
		//ПРГ_Привелегированный.УстановитьПРГ_ПараметрыОбменМСФО();
		ПараметрыСеанса.ПроведениеДокументов = Ложь;
		УстановленныеПараметры.Вставить("ПроведениеДокументов");
	//конец изменений 
	КонецЕсли;
	
	//ПодключаемоеОборудование
	МенеджерОборудованияСервер.УстановитьПараметрыСеансаПодключаемогоОборудования(ИмяПараметра, УстановленныеПараметры);
	//Конец ПодключаемоеОборудование
	
КонецПроцедуры

Процедура ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРаздела)
	
	Для Каждого КлючИЗначение ИЗ ПараметрыРаздела Цикл
		УстановленныеПараметры.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;
		
КонецПроцедуры