// Создает новый штрихкод
//
// Параметры
//  Штрихкод	 - Строка - штрихкод
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура для которой регистрируется новый штрихкод
//
&НаСервереБезКонтекста
Функция ВыполнитьРегистрациюНовогоШтрихкода(Штрихкод, Номенклатура)

	СтруктураШК = Новый Структура;
	СтруктураШК.Вставить("Владелец",         Номенклатура);	                              
	СтруктураШК.Вставить("Штрихкод",         Штрихкод);	                              
	СтруктураШК.Вставить("ТипШтрихкода",     ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);	                              
	СтруктураШК.Вставить("ЕдиницаИзмерения", Номенклатура.ЕдиницаХраненияОстатков);	                              
	СтруктураШК.Вставить("Качество",         Справочники.Качество.Новый);	                              
	
	
	НоваяЗаписьШК = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(НоваяЗаписьШК, СтруктураШК);
	
	Попытка
		НоваяЗаписьШК.Записать();
	Исключение
		Возврат Ложь
	КонецПопытки; 
	
	Возврат Истина;
	
КонецФункции
 
&НаКлиенте
Процедура ПолученыШтрихкоды(ДанныеШтрихкодов)
	
	СведенияПоШтрихКоду = ШтрихКодыНоменклатуры.ПолучитьСведенияПоШтрихКоду(ДанныеШтрихкодов);
	Если СведенияПоШтрихКоду <> Неопределено Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Штрихкод %1 уже зарегистрирован.'"), ДанныеШтрихкодов.Штрихкод);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат
	КонецЕсли; 

	Результат = ВыполнитьРегистрациюНовогоШтрихкода(ДанныеШтрихкодов.Штрихкод, Номенклатура);
	Если Результат Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Зарегистрирован новый штрихкод %1.'"), ДанныеШтрихкодов.Штрихкод);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.Штрихкоды"));
	КонецЕсли; 
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//РаботаСВнешнимОборудованием
	ИспользоватьПодключаемоеОборудование = ПолучитьФункциональнуюОпцию("ИспользоватьПодключаемоеОборудование");
	//Конец РаботаСВнешнимОборудованием
	
	Если ИспользоватьПодключаемоеОборудование И Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Владелец") Тогда
		Номенклатура = Параметры.Отбор.Владелец;
	Иначе
		ИспользоватьПодключаемоеОборудование = Ложь;
	КонецЕсли; 
	
	Если НЕ ИспользоватьПодключаемоеОборудование Тогда
		Элементы.ПодсказкаОРегистрацииНовогоШтрихкода.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// МеханизмВнешнегоОборудования
	Если ИспользоватьПодключаемоеОборудование
		И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "";
		
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
		
		Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:
			                      |""%ОписаниеОшибки%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
	// Конец МеханизмВнешнегоОборудования
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		
		Если ИмяСобытия = "ScanData" Тогда
			
			//Преобразуем предварительно к ожидаемому формату
			Если Параметр[1] = Неопределено Тогда
				Данные = Новый Структура("Штрихкод, Количество", Параметр[0], 1); // Достаем штрихкод из основных данных
			Иначе
				Данные = Новый Структура("Штрихкод, Количество", Параметр[1][1], 1); // Достаем штрихкод из дополнительных данных
			КонецЕсли;
			
			ПолученыШтрихкоды(Данные);
			
		КонецЕсли;
		
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры
