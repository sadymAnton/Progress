Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета

Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю

#Если ТолстыйКлиентОбычноеПриложение Тогда
	
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	//Параметры документа
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Результат.ПолеСлева			 = 0;
	Результат.ПолеСправа		 = 0;
	Результат.Защита             = Ложь;
	Результат.ТолькоПросмотр     = Истина;
	Результат.АвтоМАсштаб        = Истина;
	Результат.Очистить();
	
	ЗначениеПанелипользователя = ТиповыеОтчеты.ПолучитьЗначенияНастроекПанелиПользователяОбъекта(ЭтотОбъект);
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	Если ЗначениеПараметра <> Неопределено тогда
		Если Дата(ЗначениеПараметра.Значение) <> '00010101' тогда
			ДатаАктуальности = Дата(ЗначениеПараметра.Значение);
		Иначе
			ДатаАктуальности           = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
			ЗначениеПараметра.Значение = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
			ЗначениеПараметра.Использование = истина;
		КонецЕсли;
	Иначе
		ДатаАктуальности = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
	КонецЕсли;
	
	Если ЗначениеПараметра <> Неопределено тогда
		КурсВалютыОтчета = МодульВалютногоУчета.ПолучитьКурсВалюты(Константы.ВалютаРегламентированногоУчета.Получить(), Дата(ЗначениеПараметра.Значение)).Курс;
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КурсВалютыОтчета", ?(КурсВалютыОтчета = 0,1,КурсВалютыОтчета));
	КонецЕсли;
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ПериодКонец",  КонецМесяца(ДатаАктуальности));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ПериодНачало", НачалоМесяца(ДатаАктуальности));
	
	КомпоновщикНастроек.Настройки.Структура.Очистить();
	КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	
	ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "Организация", );
	//ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "Порядок", );
	ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "ПодразделениеОрганизации", );
	ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "Должность", );
	ГруппировкаНадбавки = ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "ВидНадбавки", );
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "КоличествоСтавок");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "Курс");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "МинСтавка");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "МаксСтавка");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "МинСуммаНадбавки");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "МаксСуммаНадбавки");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "КоличествоСтавок");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "Размер");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "РазмерНадбавки");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "СпособРасчета");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "МинОсновнойТариф");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "МаксОсновнойТариф");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ДолжностьРуководителя");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "КадровикДолжность");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФИОГлавбуха");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФИОКадровика");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФИОРуководителя");
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФамилияГлавбуха");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФамилияКадровика");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФамилияРуководителя");
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ИмяГлавбуха");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ИмяКадровика");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ИмяРуководителя");
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ОтчествоГлавбуха");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ОтчествоКадровика");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ОтчествоРуководителя");
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "НормаДнейЗаПериод");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "НормаЧасовЗаПериод");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ВходитВБазуРК");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ВидТарифнойСтавки");
	
	
	//ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета);
	//Возврат Результат;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	Макет = ПолучитьМакет("Т3_от_5_1_2004");
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ДеревоДанных =  Новый ДеревоЗначений;
	
	ПроцессорВывода.УстановитьОбъект(ДеревоДанных);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Для каждого ДанныеОрганизации из ДеревоДанных.Строки Цикл
		ВыведеноСтрокВОтчет   = 0;
		
		КоличествоСтрокОтчета = РассчитатьКолвоСтрокОтчета(ДанныеОрганизации);
		СписокНадбавок        = ПолучитьСписокНадбавок(ДанныеОрганизации);
		//Количество надбавок должны быть не меньше трёх (согласно типовой форме)
		Пока СписокНадбавок.Количество()<3 Цикл
			СписокНадбавок.Добавить("");
		КонецЦикла;
		КоличествоНадбавок    = СписокНадбавок.Количество();
		//Выводим шапку
		ОбластьШапкаДоНадбавок = Макет.ПолучитьОбласть("Шапка|ДоНадбавок");
		ОбластьШапкаДоНадбавок.Параметры.НазваниеОрганизации = ДанныеОрганизации.Организация.НаименованиеПолное;
		ОбластьШапкаДоНадбавок.Параметры.Организация = ДанныеОрганизации.Организация;
		ОбластьШапкаДоНадбавок.Параметры.ДатаАктуальности = НачалоМесяца(ДатаАктуальности);
		Результат.Вывести(ОбластьШапкаДоНадбавок);
		
		ОбластьШапкаНадбавка = Макет.ПолучитьОбласть("Шапка|Надбавка");
		Для Н=0 по КоличествоНадбавок-1 цикл
			Результат.Присоединить(ОбластьШапкаНадбавка);	
		КонецЦикла;	
		
		// рассчитаем кол-во ставок
		//
		КолВоСтавок = 0;
		Для каждого СтрокаПодразделния из ДанныеОрганизации.Строки Цикл
			Для каждого СтрокаДолжность из СтрокаПодразделния.Строки Цикл
				КолСТ = 0;
				Для каждого СтрокаНадбавка из СтрокаДолжность.Строки Цикл
					КолСТ = СтрокаНадбавка.КоличествоСтавок;
				КонецЦикла;
				КолВоСтавок = КолВоСтавок + КолСТ;
			КонецЦикла;
		КонецЦикла;
		
		ОбластьШапкаПослеНадбавок = Макет.ПолучитьОбласть("Шапка|ПослеНадбавок");
		ОбластьШапкаПослеНадбавок.Параметры.ОКПО = ДанныеОрганизации.Организация.КодПоОКПО;
		ОбластьШапкаПослеНадбавок.Параметры.ШтатВКоличестве = "штат в количестве " + КолВоСтавок + " единиц";
		Результат.Присоединить(ОбластьШапкаПослеНадбавок);
		
		//Выводим шапку листа
		НомерВерхнейСтрокиШапки = Результат.ВысотаТаблицы + 1;
		ОбластьДоНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ДоНадбавок");
		Результат.Вывести(ОбластьДоНадбавок);
		
		ОбластьНадбавка = Макет.ПолучитьОбласть("ШапкаЛиста|Надбавка");
		Для Н=0 по КоличествоНадбавок-1 цикл
			ОбластьНадбавка.Параметры.ИмяНадбавки = СписокНадбавок[Н];
			ОбластьНадбавка.Параметры.НомерКолонки = 6+Н;
			Результат.Присоединить(ОбластьНадбавка);	
		КонецЦикла;	
		//Объединяем ячейки и пишем общий заголовок для надбавок 
		ОбластьШапкиНадбавок = Результат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+1,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоНадбавок*3);
		ОбластьШапкиНадбавок.Объединить();
		ОбластьШапкиНадбавок.Текст = "Надбавки, руб";
		
		ОбластьПослеНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ПослеНадбавок");
		ОбластьПослеНадбавок.Параметры.НомерКолонкиФонд = 6+КоличествоНадбавок;
		ОбластьПослеНадбавок.Параметры.НомерКолонкиПримечание = 6+КоличествоНадбавок+1;
		Результат.Присоединить(ОбластьПослеНадбавок);
		
		ОбластьСтрокаДоНадбавок = Макет.ПолучитьОбласть("Строка|ДоНадбавок");
		ОбластьСтрокаНадбавка = Макет.ПолучитьОбласть("Строка|Надбавка");
		ОбластьСтрокаПослеНадбавок = Макет.ПолучитьОбласть("Строка|ПослеНадбавок");
		
		ОбластьПодвалаЛистаДоНадбавок = Макет.ПолучитьОбласть("ПодвалЛиста|ДоНадбавок");
		ОбластьПодвалаЛистаПослеНадбавок = Макет.ПолучитьОбласть("ПодвалЛиста|ПослеНадбавок");
		ОбластьПодвалаЛистаНадбавка = Макет.ПолучитьОбласть("ПодвалЛиста|Надбавка");
		
		КоличествоСтавокЛиста = 0;
		МинимальныйМесячныйФондЛиста = 0;
		СуммаМинимальныхТарифныхСтавокЛиста = 0;
		МаксимальныйМесячныйФондЛиста = 0;
		СуммаМаксимальныйТарифныхСтавокЛиста = 0;
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимаяСтрока = Новый ТабличныйДокумент();
		ВыводимыеОбласти.Добавить(ВыводимаяСтрока);
		ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("ПодвалЛиста"));
		
		
		КоличествоСтавокЛиста      = 0;
		ВсегоКоличествоСтавок = 0;
		МинимальныйМесячныйФондЛиста = 0;
		СуммаМинимальныхТарифныхСтавокЛиста = 0;
		МинимальныйМесячныйФондОрганизации  = 0;
		МаксимальныйМесячныйФондЛиста = 0;
		СуммаМинимальныхТарифныхСтавокЛиста = 0;
		МаксимальныйМесячныйФондОрганизации  = 0;
		
		ВывестиШтатноеРасписание(ДанныеОрганизации, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, Результат, СписокНадбавок, ОбластьДоНадбавок, ОбластьНадбавка, ОбластьПослеНадбавок,
		ОбластьСтрокаДоНадбавок, ОбластьСтрокаНадбавка, ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста,
		СуммаМинимальныхТарифныхСтавокЛиста, СуммаМаксимальныйТарифныхСтавокЛиста, ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет, МинимальныйМесячныйФондОрганизации, МаксимальныйМесячныйФондОрганизации, ВсегоКоличествоСтавок);
		
		ОбластьПодвалаЛистаДоНадбавок.Параметры.КоличествоСтавок = КоличествоСтавокЛиста;
		Результат.Вывести(ОбластьПодвалаЛистаДоНадбавок);
		
		Для Н=0 по КоличествоНадбавок-1 цикл
			Результат.Присоединить(ОбластьПодвалаЛистаНадбавка);
		КонецЦикла;	
		
		ОбластьПодвалаЛистаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста);
		Результат.Присоединить(ОбластьПодвалаЛистаПослеНадбавок);
		
		//Выводим подвал документа
		НомерВерхнейСтрокиПодвала = Результат.ВысотаТаблицы+1;
		ОбластьПодвалДоНадбавок = Макет.ПолучитьОбласть("Подвал|ДоНадбавок");
		
		ОбластьПодвалДоНадбавок.Параметры.Заполнить(ДанныеОрганизации); 
		ОбластьПодвалДоНадбавок.Параметры.КоличествоСтавок = ВсегоКоличествоСтавок;
		
		Подписи = Макет.ПолучитьОбласть("Подписи");
		Подписи.Параметры.Заполнить(ДанныеОрганизации);
		Подписи.Параметры.ФИОКадровика = УправлениеОтчетамиЗК.ФамилияИнициалыОтветсвенногоЛица(ДанныеОрганизации.ФИОКадровика, ДанныеОрганизации.ФамилияКадровика, ДанныеОрганизации.ИмяКадровика, ДанныеОрганизации.ОтчествоКадровика);
		Подписи.Параметры.ФИОГлавбуха = УправлениеОтчетамиЗК.ФамилияИнициалыОтветсвенногоЛица(ДанныеОрганизации.ФИОГлавбуха, ДанныеОрганизации.ФамилияГлавбуха, ДанныеОрганизации.ИмяГлавбуха, ДанныеОрганизации.ОтчествоГлавбуха);
		
		Результат.Вывести(ОбластьПодвалДоНадбавок);
		
		ОбластьПодвалНадбавка = Макет.ПолучитьОбласть("Подвал|Надбавка");
		Для Н=0 по КоличествоНадбавок-1 цикл
			Результат.Присоединить(ОбластьПодвалНадбавка);	
		КонецЦикла;	
		
		//ШиринаДляПодписи = КоличествоНадбавок*3-1;
		//НомерЛевойКолонкиДляПодписи = ОбластьПодвалДоНадбавок.ШиринаТаблицы+2;
		//НомерПравойКолонкиДляПодписи = НомерЛевойКолонкиДляПодписи + ШиринаДляПодписи-1;
		//ЛинияДляПодписи = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
		//
		////Объединим ячейки для 2-ух подписей руководителей
		//Для Н=1 по 2 цикл
		//	НомерСтрокиДляПодписи = НомерВерхнейСтрокиПодвала+Н*2;
		//	ОбластьВерхнейСтрокиПодписи = Результат.Область(НомерСтрокиДляПодписи,НомерЛевойКолонкиДляПодписи,НомерСтрокиДляПодписи,НомерПравойКолонкиДляПодписи);
		//	ОбластьВерхнейСтрокиПодписи.Объединить();
		//	ОбластьВерхнейСтрокиПодписи.ГраницаСнизу = ЛинияДляПодписи;
		//	ОбластьНижнейСтрокиПодписи = Результат.Область(НомерСтрокиДляПодписи+1,НомерЛевойКолонкиДляПодписи,НомерСтрокиДляПодписи+1,НомерПравойКолонкиДляПодписи);
		//	ОбластьНижнейСтрокиПодписи.Объединить();
		//	ОбластьНижнейСтрокиПодписи.Текст = "личная подпись";
		//КонецЦикла;	
		
		ОбластьПодвалПослеНадбавок = Макет.ПолучитьОбласть("Подвал|ПослеНадбавок");
		ОбластьПодвалПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинимальныйМесячныйФондОрганизации, МаксимальныйМесячныйФондОрганизации);
		
		ОбластьПодвалПослеНадбавок.Параметры.Заполнить(ДанныеОрганизации);
	
		Результат.Присоединить(ОбластьПодвалПослеНадбавок);
		Результат.Вывести(Подписи);
		
		Если НЕ ДеревоДанных.Строки.Индекс(ДанныеОрганизации)+1 = ДеревоДанных.Строки.Количество() тогда
			Результат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

	КонецЦикла;                                                 	
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	Возврат Результат;
	
КонецФункции

Функция РассчитатьКолвоСтрокОтчета(ДанныеСтроки)
	КолВоДетальныхСтрок = 0;
	Для каждого СтрокаДвижения из ДанныеСтроки.Строки Цикл
		Если СтрокаДвижения.Строки.Количество() = 0 и ЗначениеЗаполнено(СтрокаДвижения.Должность)  тогда 
			//проверка на заполненость колонки "Должность" нужна для проверки выборки по подразделению без штатного расписания
			КолВоДетальныхСтрок = КолВоДетальныхСтрок + 1;
		ИначеЕсли СтрокаДвижения.Строки.Количество() > 0 тогда
			КолВоДетальныхСтрок = КолВоДетальныхСтрок + РассчитатьКолвоСтрокОтчета(СтрокаДвижения);
		КонецЕсли;
	КонецЦикла;
	Возврат КолВоДетальныхСтрок;	
КонецФункции

Функция ПолучитьСписокНадбавок(ДанныеСтроки, СписокНадбавок = Неопределено)
	Если СписокНадбавок = Неопределено тогда
		СписокНадбавок = Новый СписокЗначений; 
	КонецЕсли;
	Для каждого СтрокаДвижения из ДанныеСтроки.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаДвижения.ВидНадбавки) И СписокНадбавок.НайтиПоЗначению(СтрокаДвижения.ВидНадбавки) = Неопределено тогда
			СписокНадбавок.Добавить(СтрокаДвижения.ВидНадбавки);
		КонецЕсли;
		Если СтрокаДвижения.Строки.Количество() <> 0 тогда 
			ПолучитьСписокНадбавок(СтрокаДвижения, СписокНадбавок);			
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокНадбавок;
КонецФункции

Функция ПолучитьСтрокуИзДвухЧисел(Число1,Число2)
	Если Число1=Число2 Тогда
		Возврат ОбщегоНазначенияЗК.ФорматСумм(Число1);
	Иначе
		Возврат ""+ОбщегоНазначенияЗК.ФорматСумм(Число1)+" - "+ОбщегоНазначенияЗК.ФорматСумм(Число2);
	КонецЕсли;
КонецФункции	 
	


// Выводит строки по подразделениям очередного уровня
Процедура ВывестиШтатноеРасписание(ДанныеВыборкаСтрокШтРасписания, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, 
	СписокНадбавок, ОбластьДоНадбавок, ОбластьНадбавка, ОбластьПослеНадбавок,
	ОбластьСтрокаДоНадбавок, ОбластьСтрокаНадбавка, ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, 
	КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста, СуммаМинимальныхТарифныхСтавокЛиста, СуммаМаксимальныйТарифныхСтавокЛиста,
	ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет, МинимальныйМесячныйФондОрганизации, МаксимальныйМесячныйФондОрганизации, ВсегоКоличествоСтавок)
	
	КоличествоНадбавок = СписокНадбавок.Количество();
	
	//МинимальныйМесячныйФондОрганизации = 0;
	Для каждого ВыборкаСтрокШтРасписания из ДанныеВыборкаСтрокШтРасписания.Строки Цикл 
		
		//ВыборкаПодразделенийСледующегоУровня = ВыборкаСтрокШтРасписания.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		ЕстьВыборкаСледующегоУровня = ВыборкаСтрокШтРасписания.Строки.Количество() > 0 И НЕ ЗначениеЗаполнено(ВыборкаСтрокШтРасписания.Строки[0].Должность);
		
		МинСтавка = 0;
		МаксСтавка = 0;
		КоличествоСтавок = 0;
		МинФонд = 0;
		МаксФонд = 0;
		
		Для каждого ВыборкаСтрокШтРасписанияДолжность из ВыборкаСтрокШтРасписания.Строки Цикл 
			Если Не ЗначениеЗаполнено(ВыборкаСтрокШтРасписанияДолжность.Должность) тогда
				Продолжить;
			КонецЕсли;
			
			// Готовим строку отчета для последующего вывода
			ВыводимаяСтрока.Очистить();
			ВыведеноНадбавок = 0;
			МинДопБазаДляРК = 0;
			МаксДопБазаДляРК = 0;
			
			//Рассчитываем базу РК по надбавкам
			Для каждого ВыборкаСтрокШтРасписанияНадбавка из ВыборкаСтрокШтРасписанияДолжность.Строки Цикл 
				
				//Из первой строки надбавок возьмем общие данные позиции штатного расписания
				Если ВыведеноНадбавок = 0 Тогда
					
					МинСтавка = 0;
					МаксСтавка = 0;
					Если ВыборкаСтрокШтРасписанияНадбавка.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.Месячная тогда
						МинСтавка  = ВыборкаСтрокШтРасписанияНадбавка.МинСтавка;
						МаксСтавка = ВыборкаСтрокШтРасписанияНадбавка.МаксСтавка;
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.Дневная тогда
						МинСтавка  = ВыборкаСтрокШтРасписанияНадбавка.МинСтавка * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
						МаксСтавка = ВыборкаСтрокШтРасписанияНадбавка.МаксСтавка * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.Часовая тогда
						МинСтавка  = ВыборкаСтрокШтРасписанияНадбавка.МинСтавка * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
						МаксСтавка = ВыборкаСтрокШтРасписанияНадбавка.МаксСтавка * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
					КонецЕсли;
					
				КонецЕсли;	 
				
				РазмерНадбавки = "";
				Если ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки <> NULL И ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки <> 0 И ВыборкаСтрокШтРасписанияНадбавка.ВходитВБазуРК Тогда
					
					Если ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоЧасовойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоЧасовойТарифнойСтавке тогда
						
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
						МаксСуммаНадбвки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
						
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоДневнойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоДневнойТарифнойСтавке тогда
						
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
						МаксСуммаНадбвки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
						
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом тогда 
						
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки / 100 * МинСтавка;
						МаксСуммаНадбвки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки / 100 * МаксСтавка;
						
					Иначе 
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки;
						МаксСуммаНадбвки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки;
					КонецЕсли;
					
					МинДопБазаДляРК  = МинДопБазаДляРК  + МинСуммаНадбвки;
					МаксДопБазаДляРК = МаксДопБазаДляРК + МаксСуммаНадбвки;
					
				КонецЕсли;	 
			КонецЦикла;
			
			// Формирование отчета
			Для каждого ВыборкаСтрокШтРасписанияНадбавка из ВыборкаСтрокШтРасписанияДолжность.Строки Цикл 
				
				КоличествоСтавок = ВыборкаСтрокШтРасписанияНадбавка.КоличествоСтавок;
				
				//Из первой строки надбавок возьмем общие данные позиции штатного расписания
				Если ВыведеноНадбавок = 0 Тогда
					МинСт  = ВыборкаСтрокШтРасписанияНадбавка.МинСтавка;
					МаксСТ = ВыборкаСтрокШтРасписанияНадбавка.МаксСтавка;
					МинСтавка = 0;
					МаксСтавка = 0;
					МинФонд = 0;
					МаксФонд = 0;
					Если ВыборкаСтрокШтРасписанияНадбавка.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.Месячная тогда
						МинФонд    = ?(ВыборкаСтрокШтРасписанияНадбавка.МинОсновнойТариф <> NULL,ВыборкаСтрокШтРасписанияНадбавка.МинОсновнойТариф,0);
						МаксФонд   = ?(ВыборкаСтрокШтРасписанияНадбавка.МаксОсновнойТариф <> NULL,ВыборкаСтрокШтРасписанияНадбавка.МаксОсновнойТариф,0);
						МинСтавка  = ВыборкаСтрокШтРасписанияНадбавка.МинСтавка;
						МаксСтавка = ВыборкаСтрокШтРасписанияНадбавка.МаксСтавка;
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.Дневная тогда
						МинФонд    = ?(ВыборкаСтрокШтРасписанияНадбавка.МинОсновнойТариф <> NULL,ВыборкаСтрокШтРасписанияНадбавка.МинОсновнойТариф,0) * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
						МаксФонд   = ?(ВыборкаСтрокШтРасписанияНадбавка.МаксОсновнойТариф <> NULL,ВыборкаСтрокШтРасписанияНадбавка.МаксОсновнойТариф,0)  * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
						МинСтавка  = ВыборкаСтрокШтРасписанияНадбавка.МинСтавка * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
						МаксСтавка = ВыборкаСтрокШтРасписанияНадбавка.МаксСтавка * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.Часовая тогда
						МинФонд    = ?(ВыборкаСтрокШтРасписанияНадбавка.МинОсновнойТариф <> NULL,ВыборкаСтрокШтРасписанияНадбавка.МинОсновнойТариф,0) * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
						МаксФонд   = ?(ВыборкаСтрокШтРасписанияНадбавка.МаксОсновнойТариф <> NULL,ВыборкаСтрокШтРасписанияНадбавка.МаксОсновнойТариф,0)  * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
						МинСтавка  = ВыборкаСтрокШтРасписанияНадбавка.МинСтавка * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
						МаксСтавка = ВыборкаСтрокШтРасписанияНадбавка.МаксСтавка * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
					КонецЕсли;
					//Выводим начало строки
					ОбластьСтрокаДоНадбавок.Параметры.Заполнить(ВыборкаСтрокШтРасписанияНадбавка); 
					ОбластьСтрокаДоНадбавок.Параметры.ОкладТарифнаяСтавка = ПолучитьСтрокуИзДвухЧисел(МинСт, МаксСт);
					КодПодразделения = ?(ОбщегоНазначенияЗК.ТолькоЦифрыВСтроке(ВыборкаСтрокШтРасписания.ПодразделениеОрганизации.Код), Формат(Число(ВыборкаСтрокШтРасписания.ПодразделениеОрганизации.Код), "ЧГ=0"), ВыборкаСтрокШтРасписания.ПодразделениеОрганизации.Код);
					ОбластьСтрокаДоНадбавок.Параметры.ПодразделениеОрганизацииКод = КодПодразделения;
					ВыводимаяСтрока.Вывести(ОбластьСтрокаДоНадбавок);
					
				КонецЕсли;	 
				
				РазмерНадбавки = "";
				Если ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки <> NULL и ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки <> 0 Тогда
					//Рассчитываем фонд заработной платы с учетом надбавок
					
					Если ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоЧасовойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоЧасовойТарифнойСтавке тогда
						
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
						МаксСуммаНадбвки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаЧасовЗаПериод;
						РазмерНадбавки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки;
						
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоДневнойТарифнойСтавке 
						ИЛИ ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоДневнойТарифнойСтавке тогда
						
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
						МаксСуммаНадбвки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки * ВыборкаСтрокШтРасписанияНадбавка.НормаДнейЗаПериод;
						РазмерНадбавки   = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки;
						
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.ВидНадбавки = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.РайонныйКоэффициент тогда 
						
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки / 100 * (МинСтавка + МинДопБазаДляРК);
						МаксСуммаНадбвки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки / 100 * (МаксСтавка + МаксДопБазаДляРК);
						РазмерНадбавки   = "" + ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки + "%"
						
					ИначеЕсли ВыборкаСтрокШтРасписанияНадбавка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом тогда 
						
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки / 100 * МинСтавка;
						МаксСуммаНадбвки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки / 100 * МаксСтавка;
						РазмерНадбавки   = "" + ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки + "%"
						
					Иначе 
						МинСуммаНадбвки  = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки;
						МаксСуммаНадбвки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки;
						РазмерНадбавки = ВыборкаСтрокШтРасписанияНадбавка.РазмерНадбавки;
					КонецЕсли;
					
					МинФонд  = МинФонд + ВыборкаСтрокШтРасписанияНадбавка.КоличествоСтавок * МинСуммаНадбвки;
					МаксФонд = МаксФонд + ВыборкаСтрокШтРасписанияНадбавка.КоличествоСтавок * МаксСуммаНадбвки;
					
				КонецЕсли;	 
				ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = РазмерНадбавки;
				ВыводимаяСтрока.Присоединить(ОбластьСтрокаНадбавка);	
				ВыведеноНадбавок = ВыведеноНадбавок+1;
			КонецЦикла;//Цикл по надбавкам
			
			// Согласно типовой формы должно быть не менее 3 колонок для надбавок
			ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = "";
			Для Н=ВыведеноНадбавок+1 По 3 цикл
				ВыводимаяСтрока.Присоединить(ОбластьСтрокаНадбавка);	
			КонецЦикла;	
			
			// Выводим хвост строки
			ОбластьСтрокаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинФонд, МаксФонд);
			ВыводимаяСтрока.Присоединить(ОбластьСтрокаПослеНадбавок);
			
			// Посчитали подготовленную строку
			ВыведеноСтрокВОтчет = ВыведеноСтрокВОтчет + 1;  
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста и ВыведеноСтрокВОтчет = КоличествоСтрокОтчета Тогда
				// Для последней строки отчета дополнительно проверим, 
				// уместится ли на этой же странице подвал всего отчета
				ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("Подвал"));
				ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			КонецЕсли;	
			
			// Если нужно, выводим подвал листа
			Если ВывестиПодвалЛиста Тогда
				ОбластьПодвалаЛистаДоНадбавок.Параметры.КоличествоСтавок = КоличествоСтавокЛиста;
				ДокументРезультат.Вывести(ОбластьПодвалаЛистаДоНадбавок);
				
				Для Н=0 по КоличествоНадбавок-1 цикл
					ДокументРезультат.Присоединить(ОбластьПодвалаЛистаНадбавка);
				КонецЦикла;	
				
				ОбластьПодвалаЛистаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста);;
				ДокументРезультат.Присоединить(ОбластьПодвалаЛистаПослеНадбавок);
				
				//Начнем новую страницу
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				КоличествоСтавокЛиста = 0;
				МинимальныйМесячныйФондЛиста = 0;
				СуммаМинимальныхТарифныхСтавокЛиста = 0;
				МаксимальныйМесячныйФондЛиста = 0;
				СуммаМаксимальныйТарифныхСтавокЛиста = 0;
				
				//Выводим шапку нового листа
				НомерВерхнейСтрокиШапки = ДокументРезультат.ВысотаТаблицы+1;
				ДокументРезультат.Вывести(ОбластьДоНадбавок);
				Для Н=0 по КоличествоНадбавок-1 цикл
					ОбластьНадбавка.Параметры.ИмяНадбавки = СписокНадбавок[Н];
					ОбластьНадбавка.Параметры.НомерКолонки = 6+Н;
					ДокументРезультат.Присоединить(ОбластьНадбавка);	
				КонецЦикла;	
				//Объединяем ячейки и пишем общий заголовок для надбавок 
				ОбластьШапкиНадбавок = ДокументРезультат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+1,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоНадбавок*3);
				ОбластьШапкиНадбавок.Объединить();
				ОбластьШапкиНадбавок.Текст = "Надбавки, руб";
				
				ОбластьПослеНадбавок.Параметры.НомерКолонкиФонд = 6+КоличествоНадбавок;
				ОбластьПослеНадбавок.Параметры.НомерКолонкиПримечание = 6+КоличествоНадбавок+1;
				ДокументРезультат.Присоединить(ОбластьПослеНадбавок);
			КонецЕсли;
			
			//Теперь выводим строку
			ДокументРезультат.Вывести(ВыводимаяСтрока);
			
			//Увеличиваем счетчики по листу
			КоличествоСтавокЛиста                = КоличествоСтавокЛиста + КоличествоСтавок;
			СуммаМинимальныхТарифныхСтавокЛиста  = СуммаМинимальныхТарифныхСтавокЛиста + МинСтавка;
			МинимальныйМесячныйФондЛиста         = МинимальныйМесячныйФондЛиста + МинФонд;
			МинимальныйМесячныйФондОрганизации   = МинимальныйМесячныйФондОрганизации + МинФонд;
			СуммаМаксимальныйТарифныхСтавокЛиста = СуммаМаксимальныйТарифныхСтавокЛиста + МаксСтавка;
			МаксимальныйМесячныйФондЛиста        = МаксимальныйМесячныйФондЛиста + МаксФонд;
			МаксимальныйМесячныйФондОрганизации  = МаксимальныйМесячныйФондОрганизации + МаксФонд;
			ВсегоКоличествоСтавок                = ВсегоКоличествоСтавок + КоличествоСтавок;
			
		КонецЦикла;//цикл по должностям
		
		Если ЕстьВыборкаСледующегоУровня тогда
			ВывестиШтатноеРасписание(ВыборкаСтрокШтРасписания, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, 
			СписокНадбавок, ОбластьДоНадбавок, ОбластьНадбавка, ОбластьПослеНадбавок,
			ОбластьСтрокаДоНадбавок, ОбластьСтрокаНадбавка, ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, 
			КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста, СуммаМинимальныхТарифныхСтавокЛиста, СуммаМаксимальныйТарифныхСтавокЛиста,
			ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет, МинимальныйМесячныйФондОрганизации, МаксимальныйМесячныйФондОрганизации, ВсегоКоличествоСтавок)
		КонецЕсли;
		
	КонецЦикла;//цикл по подразделениям текущего уровня 
	
КонецПроцедуры
	
	
Процедура СохранитьНастройку() Экспорт
		
		СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
		СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
		
	КонецПроцедуры
	
Процедура ПрименитьНастройку() Экспорт
		
		Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);
		
		// Считываение структуры настроек отчета
		Если Не СохраненнаяНастройка.Пустая() Тогда
			
			СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
			Если Не СтруктураНастроек = Неопределено Тогда
				КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
				ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
			Иначе
				КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
			КонецЕсли;
			
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	КонецПроцедуры
	
Процедура ПередВыводомЭлементРезультата(МакетКомпоновки, ПроцессорКомпоновки, ЭлементРезультата) Экспорт
		
	КонецПроцедуры

Процедура ПередВыводомОтчета(МакетКомпоновки, ПроцессорКомпоновки) Экспорт
		
		
	КонецПроцедуры
	
Процедура ПриВыводеЗаголовкаОтчета(ОбластьЗаголовок) Экспорт
	КонецПроцедуры
	
Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	СписокПолейПодстановкиОтборовПоУмолчанию = Новый Соответствие;
	СписокПолейПодстановкиОтборовПоУмолчанию.Вставить("Организация", "ОсновнаяОрганизация");
	
	Возврат Новый Структура("ИспользоватьСобытияПриФормированииОтчета,
	|ПриВыводеЗаголовкаОтчета,
	|ПослеВыводаПанелиПользователя,
	|ПослеВыводаПериода,
	|ПослеВыводаПараметра,
	|ПослеВыводаГруппировки,
	|ПослеВыводаОтбора,
	|ДействияПанелиИзменениеФлажкаДопНастроек,
	|ПриПолучениеНастроекПользователя, 
	|ЗаполнитьОтборыПоУмолчанию, 
	|СписокПолейПодстановкиОтборовПоУмолчанию", 
	ложь, ложь, ложь, ложь, ложь, ложь, ложь, ложь, ложь, истина, СписокПолейПодстановкиОтборовПоУмолчанию);
КонецФункции
	
#КонецЕсли

#Если ТолстыйКлиентОбычноеПриложение Тогда
	
	// Настройка отчета при отработки расшифровки
	Процедура Настроить(Отбор) Экспорт
		
		// Настройка отбора
		Для каждого ЭлементОтбора Из Отбор Цикл
			
			Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
				ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
			Иначе
				ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
			КонецЕсли;
			
			Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
				ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
			Иначе
				НовыйЭлементОтбора.Использование  = Истина;
				НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
				Если ЭлементОтбора.Иерархия Тогда
					Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
						НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
					Иначе
						НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
					КонецЕсли;
				Иначе
					Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
						НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
					Иначе
						НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
					КонецЕсли;
				КонецЕсли;
				
				НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
		
	КонецПроцедуры
	
#КонецЕсли

Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если ЗначениеПараметра = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеПараметра.Значение = Неопределено или Дата(ЗначениеПараметра.Значение) = '00010101' Тогда
		ЗначениеПараметра.Значение = КонецДня(ТекущаяДата());
		ЗначениеПараметра.Использование = Истина;
	КонецЕсли;
КонецПроцедуры



Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;

Если КомпоновщикНастроек = Неопределено Тогда
	КомпоновщикНастроек =  Новый КомпоновщикНастроекКомпоновкиДанных;
КонецЕсли;
УправлениеОтчетами.ЗаменитьНазваниеПолейСхемыКомпоновкиДанных(СхемаКомпоновкиДанных);