
#Если Клиент Тогда
Перем Счет, Счет45 Экспорт;
Перем НП Экспорт;

Функция ПолучитьТекстОграниченийПоПостроителюОтчетаМПЗ(ПостроительОтчета, Запрос = "")
	
	ТекстФильтры = "";
	
	Индекс = 0;
	Для Каждого СтрокаОтбора Из ПостроительОтчета.Отбор Цикл
		
		Индекс = Индекс + 1;
		Если Не СтрокаОтбора.Использование 
			ИЛИ ПустаяСтрока(СтрокаОтбора.ПутьКДанным) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если Не Запрос = "" Тогда
			Запрос.УстановитьПараметр("Значение" + Индекс, СтрокаОтбора.Значение);
			Запрос.УстановитьПараметр("ЗначениеС" + Индекс, СтрокаОтбора.ЗначениеС);
			Запрос.УстановитьПараметр("ЗначениеПо" + Индекс, СтрокаОтбора.ЗначениеПо);
		КонецЕсли;
	
		ТекстСтрокиПоля = "";
		Если СтрокаОтбора.ВидСравнения = ВидСравнения.ВИерархии
			И СтрокаОтбора.Значение <> Неопределено Тогда
			
			МетаданныеОграничения = СтрокаОтбора.Значение.Метаданные();	
			
			ТипВыражения = "";
			
			Если Метаданные.Справочники.Содержит(МетаданныеОграничения) Тогда
				
				ТипВыражения = "Справочник."; 
				
			ИначеЕсли Метаданные.Документы.Содержит(МетаданныеОграничения) Тогда
				
				ТипВыражения = "Документ."; 
				
			ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеОграничения) Тогда
				
				ТипВыражения = "ПланВидовХарактеристик.";	
				
			ИначеЕсли Метаданные.Перечисления.Содержит(МетаданныеОграничения) Тогда
				
				ТипВыражения = "Перечисление.";	
				
			КонецЕсли;
			
			Если ТипВыражения <> "" Тогда
				
				ТекстСтрокиПоля = "Выразить(" + СтрокаОтбора.ПутьКДанным + " КАК " + ТипВыражения + МетаданныеОграничения.Имя + ")"
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТекстСтрокиПоля = "" Тогда
			
				ТекстСтрокиПоля = СтрокаОтбора.Представление;
			
		КонецЕсли;
			
		ТекстФильтры = ТекстФильтры + " И " + УправлениеОтчетами.ПолучитьСтрокуОтбора(СтрокаОтбора.ВидСравнения, "&Значение" + Индекс, 
			ТекстСтрокиПоля, "&ЗначениеС" + Индекс, "&ЗначениеПо" + Индекс, СтрокаОтбора.Значение, 
			СтрокаОтбора.ЗначениеС, СтрокаОтбора.ЗначениеПо);
				
	КонецЦикла;
	
	Возврат Сред(ТекстФильтры, 3);
	
КонецФункции

Функция СформироватьТекстЗапроса()
	
Счет = Новый Массив;
Счет45 = Новый Массив;
Если ВидТМЦ = 1 Тогда
	Счет.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);
	Счет.Добавить(ПланыСчетов.Налоговый.ПокупныеПолуфабрикатыИКомплектующие);
	Счет.Добавить(ПланыСчетов.Налоговый.Топливо);
	Счет.Добавить(ПланыСчетов.Налоговый.Тара);
	Счет.Добавить(ПланыСчетов.Налоговый.ЗапасныеЧасти);
	Счет.Добавить(ПланыСчетов.Налоговый.ПрочиеМатериалы);
	Счет.Добавить(ПланыСчетов.Налоговый.МатериалыПереданныеВПереработку);
	Счет.Добавить(ПланыСчетов.Налоговый.СтроительныеМатериалы);
	Счет.Добавить(ПланыСчетов.Налоговый.ИнвентарьИХозяйственныеПринадлежности);
	Счет.Добавить(ПланыСчетов.Налоговый.СпецоснасткаИСпецодеждаНаСкладе);
	
	Счет45.Добавить(ПланыСчетов.Налоговый.ПрочиеТоварыОтгруженные);
ИначеЕсли ВидТМЦ = 2 Тогда
	Счет.Добавить(ПланыСчетов.Налоговый.ГотоваяПродукция);
	Счет.Добавить(ПланыСчетов.Налоговый.Полуфабрикаты);
	
	Счет45.Добавить(ПланыСчетов.Налоговый.ГотоваяПродукцияОтгруженная);
Иначе
	Счет.Добавить(ПланыСчетов.Налоговый.Товары);
	Счет45.Добавить(ПланыСчетов.Налоговый.ПокупныеТоварыОтгруженные);
КонецЕсли;	
	
	Если ВидОтчета = 1 Тогда
		Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Склад КАК Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ДокументОприходования КАК ДокументОприходования,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.СерияНоменклатуры КАК СерияНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Заказ КАК Заказ,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Регистратор КАК Регистратор,
		|	ПартииТоваровНаСкладахНалоговыйУчет.КодОперации КАК КодОперации,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Период КАК Период,
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.СтоимостьКонечныйОстаток) КАК СтоимостьКонечныйОстаток,
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.КоличествоОборот) КАК КоличествоОборот,
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.СтоимостьОборот) КАК СтоимостьОборот,
		|	СУММА(0) КАК КоличествоНачальныйОстаток,
		|	СУММА(0) КАК СтоимостьНачальныйОстаток
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет.ОстаткиИОбороты(
		|		&НачалоПериода,
		|		&КонецПериода,
		|		Запись,
		|		ДвиженияИГраницыПериода,
		|		Организация = &Организация
		|		    И СчетУчета В ИЕРАРХИИ (&Счет)) КАК ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет КАК ПартииТоваровНаСкладахНалоговыйУчет
		|		ПО ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Регистратор = ПартииТоваровНаСкладахНалоговыйУчет.Регистратор
		|			И ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.НомерСтроки = ПартииТоваровНаСкладахНалоговыйУчет.НомерСтроки
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.СерияНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Заказ,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Регистратор,
		|	ПартииТоваровНаСкладахНалоговыйУчет.КодОперации,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Период,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ДокументОприходования
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ДокументОприходования,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.СерияНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Заказ,
		|	NULL,
		|	NULL,
		|	NULL,
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстатки.КоличествоОстаток),
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстатки.СтоимостьОстаток)
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет.Остатки(
		|		&НачалоПериода,
		|		Организация = &Организация
		|		    И СчетУчета В ИЕРАРХИИ (&Счет)) КАК ПартииТоваровНаСкладахНалоговыйУчетОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.СерияНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Заказ,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ДокументОприходования
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументОприходования,
		|	Номенклатура,
		|	Склад,
		|	ХарактеристикаНоменклатуры,
		|	СерияНоменклатуры,
		|	Заказ,
		|	Период
		|ИТОГИ ПО
		|	ДокументОприходования,
		|	Номенклатура,
		|	Склад,
		|	ХарактеристикаНоменклатуры,
		|	СерияНоменклатуры,
		|	Заказ";
		
	ИначеЕсли ВидОтчета = 2 Тогда
		Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументПередачи КАК ДокументПередачи,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументОприходования КАК ДокументОприходования,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Регистратор КАК Регистратор,
		|	ПартииТоваровПереданныеНалоговыйУчет.КодОперации КАК КодОперации,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Период КАК Период,
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.СтоимостьКонечныйОстаток) КАК СтоимостьКонечныйОстаток,
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.КоличествоОборот) КАК КоличествоОборот,
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.СтоимостьОборот) КАК СтоимостьОборот,
		|	СУММА(0) КАК КоличествоНачальныйОстаток,
		|	СУММА(0) КАК СтоимостьНачальныйОстаток
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Запись, ДвиженияИГраницыПериода, Организация = &Организация И СчетУчета В ИЕРАРХИИ (&Счет45)) КАК ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет КАК ПартииТоваровПереданныеНалоговыйУчет
		|		ПО ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Регистратор = ПартииТоваровПереданныеНалоговыйУчет.Регистратор И ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.НомерСтроки = ПартииТоваровПереданныеНалоговыйУчет.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Регистратор,
		|	ПартииТоваровПереданныеНалоговыйУчет.КодОперации,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Период,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДоговорКонтрагента,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументПередачи,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументОприходования
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДоговорКонтрагента,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДокументПередачи,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДокументОприходования,
		|	NULL,
		|	NULL,
		|	NULL,
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстатки.КоличествоОстаток),
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстатки.СтоимостьОстаток)
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет.Остатки(&НачалоПериода, Организация = &Организация И СчетУчета В ИЕРАРХИИ (&Счет45)) КАК ПартииТоваровПереданныеНалоговыйУчетОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДоговорКонтрагента,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДокументПередачи,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДокументОприходования
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументОприходования,
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры,
		|	ДоговорКонтрагента,
		|	ДокументПередачи,
		|	Период
		|
		|ИТОГИ ПО
		|	ДокументОприходования,
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры,
		|	ДоговорКонтрагента,
		|	ДокументПередачи";
	КонецЕсли;	
	Возврат Текст;
КонецФункции


Процедура ВывестиПоТоварамНаСкладе(ДокументРезультат, Макет, Результат, УчетнаяПолитика)
	
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьНоменклатура  = Макет.ПолучитьОбласть("Номенклатура");
	ОбластьИтоги		 = Макет.ПолучитьОбласть("Итоги");
	ОбластьГруппировки   = Макет.ПолучитьОбласть("Итоговая2");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");
	
	ВсегоПриход = 0;
	ВсегоВозврат = 0;
	ВсегоСписание = 0;
	ВсегоОтгружено = 0;
	
	СпособВыборки = ОбходРезультатаЗапроса.ПоГруппировкам;
	
	ВыборкаПартия = Результат.Выбрать(СпособВыборки,"ДокументОприходования");
	Пока ВыборкаПартия.Следующий() Цикл
		Если (ВыборкаПартия.Количество() > 1) ИЛИ
			(УчетнаяПолитика = Перечисления.СпособыОценки.ФИФО) ИЛИ
			(УчетнаяПолитика = Перечисления.СпособыОценки.ЛИФО) Тогда
			ИтоговаяСтрокаНоменклатуры = "По партии: """ + ВыборкаПартия.ДокументОприходования + """   Сальдо на начало периода (кол): " +
			Формат(ВыборкаПартия.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаПартия.СтоимостьНачальныйОстаток, "ЧДЦ=2");
			ОбластьНоменклатура.Параметры.ИтоговаяСтрокаНоменклатуры = ИтоговаяСтрокаНоменклатуры;
			ДокументРезультат.Вывести(ОбластьНоменклатура);
		КонецЕсли;
		
		ВыборкаНоменклатуры = ВыборкаПартия.Выбрать(СпособВыборки, "Номенклатура");
		Пока ВыборкаНоменклатуры.Следующий() Цикл
			ИтоговаяСтрокаНоменклатуры = "    По товару: """ + ВыборкаНоменклатуры.Номенклатура + """   Сальдо на начало периода (кол): " +
			Формат(ВыборкаНоменклатуры.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаНоменклатуры.СтоимостьНачальныйОстаток, "ЧДЦ=2");
			ОбластьНоменклатура.Параметры.ИтоговаяСтрокаНоменклатуры = ИтоговаяСтрокаНоменклатуры;
			ДокументРезультат.Вывести(ОбластьНоменклатура);
			
			ВыборкаСклад = ВыборкаНоменклатуры.Выбрать(СпособВыборки,"Склад");
			Пока ВыборкаСклад.Следующий() Цикл
				Если ВыборкаСклад.Количество() > 1 Тогда
					ИтоговаяСтрока2 = "        По складу: """ + ВыборкаСклад.Склад + """   Сальдо на начало периода (кол): " +
					Формат(ВыборкаСклад.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаСклад.СтоимостьНачальныйОстаток, "ЧДЦ=2");
					ОбластьГруппировки.Параметры.ИтоговаяСтрока2 = ИтоговаяСтрока2;
					ДокументРезультат.Вывести(ОбластьГруппировки);
				КонецЕсли;
				
				ВыборкаХарактеристика = ВыборкаСклад.Выбрать(СпособВыборки,"ХарактеристикаНоменклатуры");
				Пока ВыборкаХарактеристика.Следующий() Цикл
					Если ВыборкаХарактеристика.Количество() > 1 Тогда
						ИтоговаяСтрока2 = "            По характеристике: """ + ВыборкаХарактеристика.ХарактеристикаНоменклатуры + """   Сальдо на начало периода (кол): " +
						Формат(ВыборкаХарактеристика.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаХарактеристика.СтоимостьНачальныйОстаток, "ЧДЦ=2");
						ОбластьГруппировки.Параметры.ИтоговаяСтрока2 = ИтоговаяСтрока2;
						ДокументРезультат.Вывести(ОбластьГруппировки);
					КонецЕсли;
					
					ВыборкаСерия = ВыборкаХарактеристика.Выбрать(СпособВыборки, "СерияНоменклатуры");
					Пока ВыборкаСерия.Следующий() Цикл
						Если ВыборкаСерия.Количество() > 1 Тогда
							ИтоговаяСтрока2 = "                По серии: """ + ВыборкаСерия.СерияНоменклатуры + """   Сальдо на начало периода (кол): " +
							Формат(ВыборкаСерия.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаСерия.СтоимостьНачальныйОстаток, "ЧДЦ=2");
							ОбластьГруппировки.Параметры.ИтоговаяСтрока2 = ИтоговаяСтрока2;
							ДокументРезультат.Вывести(ОбластьГруппировки);
						КонецЕсли;
						
						ВыборкаЗаказ = ВыборкаСерия.Выбрать(СпособВыборки, "Заказ");
						Пока ВыборкаЗаказ.Следующий() Цикл
							Если ВыборкаЗаказ.Количество() > 1 Тогда
								ИтоговаяСтрока2 = "                    По заказу: """ + ВыборкаЗаказ.Заказ + """   Сальдо на начало периода (кол): " +
								Формат(ВыборкаЗаказ.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаЗаказ.СтоимостьНачальныйОстаток, "ЧДЦ=2");
								ОбластьГруппировки.Параметры.ИтоговаяСтрока2 = ИтоговаяСтрока2;
								ДокументРезультат.Вывести(ОбластьГруппировки);
							КонецЕсли;
							
							ВыборкаСтрок = ВыборкаЗаказ.Выбрать(СпособВыборки);
							Пока ВыборкаСтрок.Следующий() Цикл
								Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.КоличествоОборот) И НЕ ЗначениеЗаполнено(ВыборкаСтрок.СтоимостьОборот) Тогда
									Продолжить;
								КонецЕсли;
								
								ОбластьСтрока.Параметры.ДатаОперации = ВыборкаСтрок.Период;
								ОбластьСтрока.Параметры.ОснованиеОперации = ВыборкаСтрок.Регистратор;
								
								ОбластьСтрока.Параметры.ВозвратКоличество = 0;
								ОбластьСтрока.Параметры.ВозвратСумма = 0;
								ОбластьСтрока.Параметры.ОтгруженоКоличество = 0;
								ОбластьСтрока.Параметры.ОтгруженоСумма = 0;
								ОбластьСтрока.Параметры.ПриходКоличество = 0;
								ОбластьСтрока.Параметры.ПриходСумма = 0;
								ОбластьСтрока.Параметры.СписаниеКоличество = 0;
								ОбластьСтрока.Параметры.СписаниеСумма = 0;
								
								Если ВыборкаСтрок.КодОперации = Перечисления.КодыОперацийПартииТоваров.ВозвратПоставщику Тогда
									ОбластьСтрока.Параметры.ВозвратКоличество = - ВыборкаСтрок.КоличествоОборот;
									ОбластьСтрока.Параметры.ВозвратСумма = - ВыборкаСтрок.СтоимостьОборот;
									ВсегоВозврат = ВсегоВозврат - ВыборкаСтрок.СтоимостьОборот;
								ИначеЕсли ВыборкаСтрок.КодОперации = Перечисления.КодыОперацийПартииТоваров.ПередачаНаКомиссию Тогда
									ОбластьСтрока.Параметры.ОтгруженоКоличество = - ВыборкаСтрок.КоличествоОборот;
									ОбластьСтрока.Параметры.ОтгруженоСумма = - ВыборкаСтрок.СтоимостьОборот;
									ВсегоОтгружено = ВсегоОтгружено - ВыборкаСтрок.СтоимостьОборот;
								ИначеЕсли ВыборкаСтрок.СтоимостьОборот > 0 Тогда
									ОбластьСтрока.Параметры.ПриходКоличество = ВыборкаСтрок.КоличествоОборот;
									ОбластьСтрока.Параметры.ПриходСумма = ВыборкаСтрок.СтоимостьОборот;
									ВсегоПриход = ВсегоПриход + ВыборкаСтрок.СтоимостьОборот;
								Иначе
									ОбластьСтрока.Параметры.СписаниеКоличество = - ВыборкаСтрок.КоличествоОборот;
									ОбластьСтрока.Параметры.СписаниеСумма = - ВыборкаСтрок.СтоимостьОборот;
									ВсегоСписание = ВсегоСписание - ВыборкаСтрок.СтоимостьОборот;
								КонецЕсли;
								ОбластьСтрока.Параметры.ОстатокКоличество = ВыборкаСтрок.КоличествоКонечныйОстаток;
								ОбластьСтрока.Параметры.ОстатокСумма = ВыборкаСтрок.СтоимостьКонечныйОстаток;
								ОбластьСтрока.Параметры.СписаниеЦена = ?(ВыборкаСтрок.КоличествоОборот <> 0, ВыборкаСтрок.СтоимостьОборот/ВыборкаСтрок.КоличествоОборот, 0);
								ДокументРезультат.Вывести(ОбластьСтрока);
								
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ОбластьИтоги.Параметры.ВсегоПриходСумма = ВсегоПриход;
	ОбластьИтоги.Параметры.ВсегоВозвратСумма = ВсегоВозврат;
	ОбластьИтоги.Параметры.ВсегоСписаниеСумма = ВсегоСписание;
	ОбластьИтоги.Параметры.ВсегоОтгруженоСумма = ВсегоОтгружено;
	ДокументРезультат.Вывести(ОбластьИтоги);
	
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ВывестиПоТоварамОтгруженным(ДокументРезультат, Макет, Результат, УчетнаяПолитика)
	
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьНоменклатура  = Макет.ПолучитьОбласть("Номенклатура");
	ОбластьИтоги		 = Макет.ПолучитьОбласть("Итоги");
	ОбластьГруппировки   = Макет.ПолучитьОбласть("Итоговая2");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");
	
	ВсегоПриход = 0;
	ВсегоВозврат = 0;
	ВсегоСписание = 0;
	
	СпособВыборки = ОбходРезультатаЗапроса.ПоГруппировкам;
	
	ВыборкаПартия = Результат.Выбрать(СпособВыборки,"ДокументОприходования");
	Пока ВыборкаПартия.Следующий() Цикл
		Если (ВыборкаПартия.Количество() > 1) ИЛИ
			(УчетнаяПолитика = Перечисления.СпособыОценки.ФИФО) ИЛИ
			(УчетнаяПолитика = Перечисления.СпособыОценки.ЛИФО) Тогда
			ИтоговаяСтрокаНоменклатуры = "По партии: """ + ВыборкаПартия.ДокументОприходования + """   Сальдо на начало периода (кол): " +
			Формат(ВыборкаПартия.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаПартия.СтоимостьНачальныйОстаток, "ЧДЦ=2");
			ОбластьНоменклатура.Параметры.ИтоговаяСтрока = ИтоговаяСтрокаНоменклатуры;
			ДокументРезультат.Вывести(ОбластьНоменклатура);
		КонецЕсли;
		
		ВыборкаНоменклатуры = ВыборкаПартия.Выбрать(СпособВыборки, "Номенклатура");
		Пока ВыборкаНоменклатуры.Следующий() Цикл
			ИтоговаяСтрокаНоменклатуры = "    По товару: """ + ВыборкаНоменклатуры.Номенклатура + """   Сальдо на начало периода (кол): " +
			Формат(ВыборкаНоменклатуры.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаНоменклатуры.СтоимостьНачальныйОстаток, "ЧДЦ=2");
			ОбластьНоменклатура.Параметры.ИтоговаяСтрока = ИтоговаяСтрокаНоменклатуры;
			ДокументРезультат.Вывести(ОбластьНоменклатура);
			
			ВыборкаХарактеристика = ВыборкаНоменклатуры.Выбрать(СпособВыборки,"ХарактеристикаНоменклатуры");
			Пока ВыборкаХарактеристика.Следующий() Цикл
				Если ВыборкаХарактеристика.Количество() > 1 Тогда
					ИтоговаяСтрока2 = "        По характеристике: """ + ВыборкаХарактеристика.ХарактеристикаНоменклатуры + """   Сальдо на начало периода (кол): " +
					Формат(ВыборкаХарактеристика.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаХарактеристика.СтоимостьНачальныйОстаток, "ЧДЦ=2");
					ОбластьГруппировки.Параметры.ИтоговаяСтрока2 = ИтоговаяСтрока2;
					ДокументРезультат.Вывести(ОбластьГруппировки);
				КонецЕсли;
				
				ВыборкаДоговор = ВыборкаХарактеристика.Выбрать(СпособВыборки, "ДоговорКонтрагента");
				Пока ВыборкаДоговор.Следующий() Цикл
					Если ВыборкаДоговор.Количество() > 1 Тогда
						ИтоговаяСтрока2 = "            По договору: """ + ВыборкаДоговор.ДоговорКонтрагента + """  (" + ВыборкаДоговор.ДоговорКонтрагента.Владелец + ")   Сальдо на начало периода (кол): " +
						Формат(ВыборкаДоговор.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаДоговор.СтоимостьНачальныйОстаток, "ЧДЦ=2");
						ОбластьГруппировки.Параметры.ИтоговаяСтрока2 = ИтоговаяСтрока2;
						ДокументРезультат.Вывести(ОбластьГруппировки);
					КонецЕсли;
					
					ВыборкаДокумент = ВыборкаДоговор.Выбрать(СпособВыборки, "ДокументПередачи");
					Пока ВыборкаДокумент.Следующий() Цикл
						Если ВыборкаДокумент.Количество() > 1 Тогда
							ИтоговаяСтрока2 = "                По документу: """ + ВыборкаДокумент.ДокументПередачи + """   Сальдо на начало периода (кол): " +
							Формат(ВыборкаДокумент.КоличествоНачальныйОстаток, "ЧДЦ=3") + "; Сальдо на начало периода (сумма): " + Формат(ВыборкаДокумент.СтоимостьНачальныйОстаток, "ЧДЦ=2");
							ОбластьГруппировки.Параметры.ИтоговаяСтрока2 = ИтоговаяСтрока2;
							ДокументРезультат.Вывести(ОбластьГруппировки);
						КонецЕсли;
						
						ВыборкаСтрок = ВыборкаДокумент.Выбрать(СпособВыборки);
						Пока ВыборкаСтрок.Следующий() Цикл
							Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.КоличествоОборот) И НЕ ЗначениеЗаполнено(ВыборкаСтрок.СтоимостьОборот) Тогда
								Продолжить;
							КонецЕсли;
							
							ОбластьСтрока.Параметры.ДатаОперации = ВыборкаСтрок.Период;
							ОбластьСтрока.Параметры.ОснованиеОперации = ВыборкаСтрок.Регистратор;
							
							ОбластьСтрока.Параметры.ВозвратКоличество = 0;
							ОбластьСтрока.Параметры.ВозвратСумма = 0;
							ОбластьСтрока.Параметры.ПриходКоличество = 0;
							ОбластьСтрока.Параметры.ПриходСумма = 0;
							ОбластьСтрока.Параметры.СписаниеКоличество = 0;
							ОбластьСтрока.Параметры.СписаниеСумма = 0;
							
							Если ВыборкаСтрок.КодОперации = Перечисления.КодыОперацийПартииТоваров.ВозвратОтКомиссионера Тогда
								ОбластьСтрока.Параметры.ВозвратКоличество = - ВыборкаСтрок.КоличествоОборот;
								ОбластьСтрока.Параметры.ВозвратСумма = - ВыборкаСтрок.СтоимостьОборот;
								ВсегоВозврат = ВсегоВозврат - ВыборкаСтрок.СтоимостьОборот;
							ИначеЕсли ВыборкаСтрок.СтоимостьОборот > 0 Тогда
								ОбластьСтрока.Параметры.ПриходКоличество = ВыборкаСтрок.КоличествоОборот;
								ОбластьСтрока.Параметры.ПриходСумма = ВыборкаСтрок.СтоимостьОборот;
								ВсегоПриход = ВсегоПриход + ВыборкаСтрок.СтоимостьОборот;
							Иначе
								ОбластьСтрока.Параметры.СписаниеКоличество = - ВыборкаСтрок.КоличествоОборот;
								ОбластьСтрока.Параметры.СписаниеСумма = - ВыборкаСтрок.СтоимостьОборот;
								ВсегоСписание = ВсегоСписание - ВыборкаСтрок.СтоимостьОборот;
							КонецЕсли;
							ОбластьСтрока.Параметры.ОстатокКоличество = ВыборкаСтрок.КоличествоКонечныйОстаток;
							ОбластьСтрока.Параметры.ОстатокСумма = ВыборкаСтрок.СтоимостьКонечныйОстаток;
							ОбластьСтрока.Параметры.СписаниеЦена = ?(ВыборкаСтрок.КоличествоОборот <> 0, ВыборкаСтрок.СтоимостьОборот/ВыборкаСтрок.КоличествоОборот, 0);
							ДокументРезультат.Вывести(ОбластьСтрока);
							
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ОбластьИтоги.Параметры.ВсегоПриходСумма = ВсегоПриход;
	ОбластьИтоги.Параметры.ВсегоВозвратСумма = ВсегоВозврат;
	ОбластьИтоги.Параметры.ВсегоСписаниеСумма = ВсегоСписание;
    ДокументРезультат.Вывести(ОбластьИтоги);
	
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры

	
// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	НачалоПериода = ДатаНач;
	КонецПериода = ДатаКон;
	
	ДокументРезультат.Очистить();
	
	Если ВидОтчета = 2 Тогда
		Макет = ПолучитьМакет("Отгружено");	
	Иначе
		Макет = ПолучитьМакет("НаСкладе");
	КонецЕсли;
		
	Если ВидТМЦ = 1 Тогда
		ТМЦ = "материалов";     ТМЦ2 = "материалам";       ТМЦ3 = " отгруженным";
	ИначеЕсли ВидТМЦ = 2 Тогда
		ТМЦ = "продукции и полуфабрикатов";      ТМЦ2 = "продукции и полуфабрикатам";        ТМЦ3 = " отгруженным";
	Иначе
		ТМЦ = "товаров";        ТМЦ2 = "товарам";          ТМЦ3 = " отгруженным";
	КонецЕсли;
	

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");
	
	СрезСведений = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(КонецПериода, Организация);
	Если ЗначениеЗаполнено(СрезСведений) Тогда
		УчетнаяПолитика = СрезСведений.СпособОценкиМПЗ;
	Иначе 
		Возврат;
	КонецЕсли;

	Если УчетнаяПолитика = Перечисления.СпособыОценки.ФИФО Тогда
		Заголовок = "Регистр информации о партиях "+ТМЦ+", учитываемых по методу ФИФО";
	ИначеЕсли УчетнаяПолитика = Перечисления.СпособыОценки.ЛИФО Тогда
		Заголовок = "Регистр информации о партиях "+ТМЦ+", учитываемых по методу ЛИФО";
	Иначе
		Заголовок = "Регистр информации о движении "+ТМЦ+", учитываемых по методу средней себестоимости";
	КонецЕсли;
	Заголовок = Заголовок +  ?(ВидОтчета = 2, " (по "+ТМЦ2+ТМЦ3+")", " (по "+ТМЦ2+" на складе)");
	
	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.Заголовок 		   = Заголовок;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	ОграниченияПоПостроителюОтчета = ПолучитьТекстОграниченийПоПостроителюОтчетаМПЗ(ПостроительОтчета, Запрос);
	Если Не ПустаяСтрока(ОграниченияПоПостроителюОтчета) Тогда
		
		ОграниченияПоПостроителюОтчета = " И " + ОграниченияПоПостроителюОтчета;
	КонецЕсли;
	
	Запрос.Текст = СформироватьТекстЗапроса();
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(ДатаНач, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",  Новый Граница(БухгалтерскийУчет.КонецПериодаОтчета(ДатаКон), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("Счет",    Счет);
	Запрос.УстановитьПараметр("Счет45",  Счет45);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ")) КАК ", ")" + ОграниченияПоПостроителюОтчета + ") КАК ");
	Результат = Запрос.Выполнить();
	
	
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	
	Если ВидОтчета = 1 Тогда
		ВывестиПоТоварамНаСкладе(ДокументРезультат, Макет, Результат, УчетнаяПолитика);
	ИначеЕсли ВидОтчета = 2 Тогда
		ВывестиПоТоварамОтгруженным(ДокументРезультат, Макет, Результат, УчетнаяПолитика);
	КонецЕсли;
		
КонецПроцедуры // СформироватьОтчет

Процедура ЗаполнитьНачальныеНастройки(ВидОтчетаИзменен = Ложь) Экспорт
	
	Если Не ПостроительОтчета.Отбор.Количество() = 0 Тогда
		Если ВидОтчетаИзменен Тогда
			Для Каждого ЭлементОтбора Из ПостроительОтчета.Отбор Цикл
				ПостроительОтчета.Отбор.Удалить(ПостроительОтчета.Отбор.Индекс(ЭлементОтбора));
				Для Каждого ЭлементОтбора2 Из ПостроительОтчета.Отбор Цикл
					ПостроительОтчета.Отбор.Удалить(ПостроительОтчета.Отбор.Индекс(ЭлементОтбора2));
				КонецЦикла;
			КонецЦикла;
		Иначе
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	СтруктураПредставлениеПолей = Новый Структура;
	
	Счет = Новый Массив;
	Счет45 = Новый Массив;
	Если ВидТМЦ = 1 Тогда
		Счет.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);
		Счет.Добавить(ПланыСчетов.Налоговый.ПокупныеПолуфабрикатыИКомплектующие);
		Счет.Добавить(ПланыСчетов.Налоговый.Топливо);
		Счет.Добавить(ПланыСчетов.Налоговый.Тара);
		Счет.Добавить(ПланыСчетов.Налоговый.ЗапасныеЧасти);
		Счет.Добавить(ПланыСчетов.Налоговый.ПрочиеМатериалы);
		Счет.Добавить(ПланыСчетов.Налоговый.МатериалыПереданныеВПереработку);
		Счет.Добавить(ПланыСчетов.Налоговый.СтроительныеМатериалы);
		Счет.Добавить(ПланыСчетов.Налоговый.ИнвентарьИХозяйственныеПринадлежности);
		Счет.Добавить(ПланыСчетов.Налоговый.СпецоснасткаИСпецодеждаНаСкладе);
		
		Счет45.Добавить(ПланыСчетов.Налоговый.ПрочиеТоварыОтгруженные);
	ИначеЕсли ВидТМЦ = 2 Тогда
		Счет.Добавить(ПланыСчетов.Налоговый.ГотоваяПродукция);
		Счет45.Добавить(ПланыСчетов.Налоговый.ГотоваяПродукцияОтгруженная);
	ИначеЕсли ВидТМЦ = 3 Тогда
		Счет.Добавить(ПланыСчетов.Налоговый.Полуфабрикаты);
		Счет45.Добавить(ПланыСчетов.Налоговый.ГотоваяПродукцияОтгруженная);
	Иначе
		Счет.Добавить(ПланыСчетов.Налоговый.Товары);
		Счет45.Добавить(ПланыСчетов.Налоговый.ПокупныеТоварыОтгруженные);
	КонецЕсли;	
	
	
	Если ВидОтчета = 1 Тогда
		Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Склад КАК Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ДокументОприходования КАК ДокументОприходования,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.СерияНоменклатуры КАК СерияНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Заказ КАК Заказ,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Регистратор КАК Регистратор,
		|	ПартииТоваровНаСкладахНалоговыйУчет.КодОперации КАК КодОперации,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Период КАК Период,
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.СтоимостьКонечныйОстаток) КАК СтоимостьКонечныйОстаток,
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.КоличествоОборот) КАК КоличествоОборот,
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.СтоимостьОборот) КАК СтоимостьОборот,
		|	СУММА(0) КАК КоличествоНачальныйОстаток,
		|	СУММА(0) КАК СтоимостьНачальныйОстаток
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет.ОстаткиИОбороты(
		|		&НачалоПериода,
		|		&КонецПериода,
		|		Запись,
		|		ДвиженияИГраницыПериода,
		|		Организация = &Организация
		|		    И СчетУчета В ИЕРАРХИИ (&Счет)) КАК ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет КАК ПартииТоваровНаСкладахНалоговыйУчет
		|		ПО ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Регистратор = ПартииТоваровНаСкладахНалоговыйУчет.Регистратор
		|			И ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.НомерСтроки = ПартииТоваровНаСкладахНалоговыйУчет.НомерСтроки
		|{ГДЕ
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Номенклатура		          КАК Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ДокументОприходования      КАК ДокументОприходования,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Склад		              КАК Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Заказ	                  КАК Заказ
		|}
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.СерияНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Заказ,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Регистратор,
		|	ПартииТоваровНаСкладахНалоговыйУчет.КодОперации,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.Период,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстаткиИОбороты.ДокументОприходования
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ДокументОприходования,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.СерияНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Заказ,
		|	NULL,
		|	NULL,
		|	NULL,
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстатки.КоличествоОстаток),
		|	СУММА(ПартииТоваровНаСкладахНалоговыйУчетОстатки.СтоимостьОстаток)
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет.Остатки(
		|		&НачалоПериода,
		|		Организация = &Организация
		|		    И СчетУчета В ИЕРАРХИИ (&Счет)) КАК ПартииТоваровНаСкладахНалоговыйУчетОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.СерияНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Заказ,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ДокументОприходования
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументОприходования,
		|	Номенклатура,
		|	Склад,
		|	ХарактеристикаНоменклатуры,
		|	СерияНоменклатуры,
		|	Заказ,
		|	Период
		|ИТОГИ ПО
		|	ДокументОприходования,
		|	Номенклатура,
		|	Склад,
		|	ХарактеристикаНоменклатуры,
		|	СерияНоменклатуры,
		|	Заказ";
		
	ИначеЕсли ВидОтчета = 2 Тогда
		Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументПередачи КАК ДокументПередачи,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументОприходования КАК ДокументОприходования,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Регистратор КАК Регистратор,
		|	ПартииТоваровПереданныеНалоговыйУчет.КодОперации КАК КодОперации,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Период КАК Период,
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.СтоимостьКонечныйОстаток) КАК СтоимостьКонечныйОстаток,
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.КоличествоОборот) КАК КоличествоОборот,
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.СтоимостьОборот) КАК СтоимостьОборот,
		|	СУММА(0) КАК КоличествоНачальныйОстаток,
		|	СУММА(0) КАК СтоимостьНачальныйОстаток
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Запись, ДвиженияИГраницыПериода, Организация = &Организация И СчетУчета В ИЕРАРХИИ (&Счет45)) КАК ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет КАК ПартииТоваровПереданныеНалоговыйУчет
		|		ПО ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Регистратор = ПартииТоваровПереданныеНалоговыйУчет.Регистратор И ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.НомерСтроки = ПартииТоваровПереданныеНалоговыйУчет.НомерСтроки
		|
		|{ГДЕ
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Номенклатура		          КАК Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументОприходования      КАК ДокументОприходования,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументПередачи		      КАК ДокументПередачи,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДоговорКонтрагента	      КАК ДоговорКонтрагента
		|}
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Регистратор,
		|	ПартииТоваровПереданныеНалоговыйУчет.КодОперации,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.Период,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДоговорКонтрагента,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументПередачи,
		|	ПартииТоваровПереданныеНалоговыйУчетОстаткиИОбороты.ДокументОприходования
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДоговорКонтрагента,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДокументПередачи,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДокументОприходования,
		|	NULL,
		|	NULL,
		|	NULL,
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(0),
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстатки.КоличествоОстаток),
		|	СУММА(ПартииТоваровПереданныеНалоговыйУчетОстатки.СтоимостьОстаток)
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет.Остатки(&НачалоПериода, Организация = &Организация И СчетУчета В ИЕРАРХИИ (&Счет45)) КАК ПартииТоваровПереданныеНалоговыйУчетОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДоговорКонтрагента,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДокументПередачи,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДокументОприходования
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументОприходования,
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры,
		|	ДоговорКонтрагента,
		|	ДокументПередачи,
		|	Период
		|
		|ИТОГИ ПО
		|	ДокументОприходования,
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры,
		|	ДоговорКонтрагента,
		|	ДокументПередачи";
	КонецЕсли;	
	
	ПостроительОтчета.Параметры.Вставить("НачалоПериода", Новый Граница(ДатаНач, ВидГраницы.Включая));
	ПостроительОтчета.Параметры.Вставить("КонецПериода",  Новый Граница(БухгалтерскийУчет.КонецПериодаОтчета(ДатаКон), ВидГраницы.Включая));
	ПостроительОтчета.Параметры.Вставить("Организация",  Организация);
	ПостроительОтчета.Параметры.Вставить("Счет",    Счет);
	ПостроительОтчета.Параметры.Вставить("Счет45",  Счет45);
	
	// Соответствие имен полей в запросе и их представлений в отчете.
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Номенклатура",							"Номенклатура");
	СтруктураПредставлениеПолей.Вставить("ХарактеристикаНоменклатуры",				"ХарактеристикаНоменклатуры");
	СтруктураПредставлениеПолей.Вставить("ДокументОприходования", 					"ДокументОприходования");
	
	Если ВидОтчета = 2 Тогда
		СтруктураПредставлениеПолей.Вставить("ДоговорКонтрагента",                   "Договор контрагента");
		СтруктураПредставлениеПолей.Вставить("ДокументПередачи",                     "Документ передачи");
	Иначе
		СтруктураПредставлениеПолей.Вставить("Склад", 	                			"Склад");
		СтруктураПредставлениеПолей.Вставить("Заказ", 	                			"Заказ");
		
	КонецЕсли;

	ПостроительОтчета.Текст = Текст;
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Номенклатура");
	МассивОтбора.Добавить("ХарактеристикаНоменклатуры");
	МассивОтбора.Добавить("ДокументОприходования");
	
	Если ВидОтчета = 2 Тогда
		МассивОтбора.Добавить("ДоговорКонтрагента");
		МассивОтбора.Добавить("ДокументПередачи");
	Иначе
		МассивОтбора.Добавить("Склад");
		МассивОтбора.Добавить("Заказ");
		
	КонецЕсли;

	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
КонецПроцедуры // ЗаполнитьНачальныеНастройки()


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 


НП           = Новый НастройкаПериода;



#КонецЕсли
