#Если Клиент Тогда
Перем НП Экспорт;

Процедура ДополнитьТаблицуПериодами(ТаблицаРезультатов)
	НачалоПериода = НачалоМесяца(ДатаНач);
	КонецПериода = КонецМесяца(ДатаКон);
	
	НачалоРабочегоПериода = НачалоПериода;
	Индекс = 0;
		
	//Если пустой результат, добавим границы
	Если ТаблицаРезультатов.Количество() = 0 Тогда
		Строка = ТаблицаРезультатов.Добавить();
		Строка.Период =  НачалоРабочегоПериода;
		Строка.СНД41 = 0;
		Строка.СКД41 = 0;
		Строка.СНД44 = 0;
		Строка.СКД44 = 0;
		Строка.ДО41 = 0;
		Строка.ДО44 = 0;
		Строка.Продано = 0;
		Строка.Списано = 0;
		
		Если НЕ НачалоПериода = НачалоМесяца(ДатаКон) Тогда
			Строка = ТаблицаРезультатов.Добавить();
			Строка.Период =  НачалоМесяца(ДатаКон);
			Строка.СНД41 = 0;
			Строка.СКД41 = 0;
			Строка.СНД44 = 0;
			Строка.СКД44 = 0;
			Строка.ДО41 = 0;
			Строка.ДО44 = 0;
			Строка.Продано = 0;
			Строка.Списано = 0;
		КонецЕсли;
		
	КонецЕсли;

	Пока НачалоРабочегоПериода < НачалоМесяца(ДатаКон) Цикл
		
		//Добавим недостающие строки
		Пока ТаблицаРезультатов[Индекс].Период > НачалоРабочегоПериода Цикл
			Строка = ТаблицаРезультатов.Вставить(Индекс);
			Строка.Период =  НачалоРабочегоПериода;
			Если Индекс = 0 Тогда
				Строка.СНД41 = 0;
				Строка.СКД41 = 0;
				Строка.СНД44 = 0;
				Строка.СКД44 = 0;
				Строка.ДО41 = 0;
				Строка.ДО44 = 0;
				Строка.Продано = 0;
				Строка.Списано = 0;
			Иначе
				СтрокаСальдо = ТаблицаРезультатов.Получить(Индекс - 1);
				Строка.СНД41 = СтрокаСальдо.СКД41;
				Строка.СКД41 = СтрокаСальдо.СКД41;
				Строка.СНД44 = СтрокаСальдо.СКД44;
				Строка.СКД44 = СтрокаСальдо.СКД44;
				Строка.ДО41 = 0;
				Строка.ДО44 = 0;
				Строка.Продано = 0;
				Строка.Списано = 0;
			КонецЕсли;
		КонецЦикла;
		
		//Проверим сальдо в существующих строках
		Если Индекс > 0 Тогда
			СтрокаПредыдущая = ТаблицаРезультатов.Получить(Индекс - 1);
			СтрокаТекущая = ТаблицаРезультатов.Получить(Индекс);
			Если (СтрокаТекущая.СНД41 = 0) и (СтрокаТекущая.СКД41 = 0) и (СтрокаТекущая.ДО41 = 0) Тогда
				СтрокаТекущая.СНД41 = СтрокаПредыдущая.СКД41;
				СтрокаТекущая.СКД41 = СтрокаПредыдущая.СКД41;
			КонецЕсли;
			Если (СтрокаТекущая.СНД44 = 0) и (СтрокаТекущая.СКД44 = 0) и (СтрокаТекущая.ДО44 = 0) Тогда
				СтрокаТекущая.СНД44 = СтрокаПредыдущая.СКД44;
				СтрокаТекущая.СКД44 = СтрокаПредыдущая.СКД44;
			КонецЕсли;
		КонецЕсли;
		
		НачалоРабочегоПериода = ДобавитьМесяц(НачалоРабочегоПериода,1);
		Индекс = Индекс + 1;
	КонецЦикла
КонецПроцедуры
	
	
// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	НачалоПериода = НачалоМесяца(ДатаНач);
	КонецПериода = КонецМесяца(ДатаКон);
	
	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	СписокСчетовТоваров = Новый Массив;
	СписокСчетовТоваров.Добавить(ПланыСчетов.Налоговый.ТоварыНаСкладах);
	СписокСчетовТоваров.Добавить(ПланыСчетов.Налоговый.ТоварыВРозничнойТорговле);
	СписокСчетовТоваров.Добавить(ПланыСчетов.Налоговый.ТараПодТоваромИПорожняя);
	СписокСчетовТоваров.Добавить(ПланыСчетов.Налоговый.ПокупныеИзделия);
	СписокСчетовТоваров.Добавить(ПланыСчетов.Налоговый.ПокупныеТоварыОтгруженные);
	
	// Формируем запрос по виду затрат
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Начало", НачалоПериода);
	Запрос.УстановитьПараметр("Конец",  КонецПериода);
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ВидЗатрат",    Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	Запрос.УстановитьПараметр("Счет",		  ПланыСчетов.Налоговый.ИздержкиОбращения);
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("ВидУчета",     Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.УстановитьПараметр("СчетаТоваров", СписокСчетовТоваров);
	Запрос.УстановитьПараметр("КорСчет",	  ПланыСчетов.Налоговый.СебестоимостьПродаж);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НалоговыйОстаткиИОбороты.Период КАК Период,
	|	СУММА(НалоговыйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СНД41,
	|	СУММА(НалоговыйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СКД41,
	|	СУММА(0) КАК ДО41,
	|	0 КАК Списано,
	|	0 КАК ДО44,
	|	0 КАК СНД44,
	|	0 КАК СКД44,
	|	NULL КАК КорСчет
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
	|			&Начало,
	|			&Конец,
	|			Месяц,
	|			ДвиженияИГраницыПериода,
	|			Счет В ИЕРАРХИИ (&СчетаТоваров),
	|			,
	|			Организация = &Организация
	|				И ВидУчета = &ВидУчета) КАК НалоговыйОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОстаткиИОбороты.Период
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НалоговыйОстаткиИОбороты.Период,
	|	0,
	|	0,
	|	0,
	|	0,
	|	СУММА(НалоговыйОстаткиИОбороты.СуммаОборотДт),
	|	СУММА(НалоговыйОстаткиИОбороты.СуммаНачальныйОстатокДт),
	|	СУММА(НалоговыйОстаткиИОбороты.СуммаКонечныйОстатокДт),
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
	|			&Начало,
	|			&Конец,
	|			Месяц,
	|			ДвиженияИГраницыПериода,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&ВидСубконто,
	|			Организация = &Организация
	|				И ВидУчета = &ВидУчета) КАК НалоговыйОстаткиИОбороты
	|ГДЕ
	|	НалоговыйОстаткиИОбороты.Субконто1.ВидРасходовНУ = &ВидЗатрат
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОстаткиИОбороты.Период
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НалоговыйОбороты.Период,
	|	0,
	|	0,
	|	НалоговыйОбороты.СуммаОборотДт,
	|	СУММА(НалоговыйОбороты.СуммаОборотКт),
	|	0,
	|	0,
	|	0,
	|	НалоговыйОбороты.КорСчет
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&Начало,
	|			&Конец,
	|			Месяц,
	|			Счет В ИЕРАРХИИ (&СчетаТоваров),
	|			,
	|			Организация = &Организация
	|				И ВидУчета = &ВидУчета,
	|			(НЕ КорСчет В ИЕРАРХИИ (&СчетаТоваров)),
	|			) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.Период,
	|	НалоговыйОбороты.КорСчет,
	|	НалоговыйОбороты.СуммаОборотДт
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Результат = Запрос.Выполнить();
	ТаблицаРезультатов = Новый ТаблицаЗначений;
	ТаблицаРезультатов = Результат.Выгрузить();
	ТипЧисло = Новый ОписаниеТипов("Число");
	ТаблицаРезультатов.Колонки.Добавить("Продано", ТипЧисло);
	
	Для каждого СтрокаРезультатов из ТаблицаРезультатов Цикл
		СтрокаРезультатов.ДО41 = ?(СтрокаРезультатов.ДО41 = Null, 0, СтрокаРезультатов.ДО41);
		СтрокаРезультатов.ДО44 = ?(СтрокаРезультатов.ДО44 = Null, 0, СтрокаРезультатов.ДО44);
		СтрокаРезультатов.СНД41 = ?(СтрокаРезультатов.СНД41 = Null, 0, СтрокаРезультатов.СНД41);
		СтрокаРезультатов.СНД44 = ?(СтрокаРезультатов.СНД44 = Null, 0, СтрокаРезультатов.СНД44);
		СтрокаРезультатов.СКД41 = ?(СтрокаРезультатов.СКД41 = Null, 0, СтрокаРезультатов.СКД41);
		СтрокаРезультатов.СКД44 = ?(СтрокаРезультатов.СКД44 = Null, 0, СтрокаРезультатов.СКД44);
		Если НЕ СтрокаРезультатов.КорСчет = NULL Тогда
			ПеремещениеТоваров = Ложь;
			Для Сч = 0 по СписокСчетовТоваров.ВГраница() Цикл
				Если СтрокаРезультатов.КорСчет = СписокСчетовТоваров[Сч] Тогда
					ПеремещениеТоваров = Истина;
				КонецЕсли;
			КонецЦикла;
			Если СтрокаРезультатов.КорСчет = ПланыСчетов.Налоговый.СебестоимостьПродаж Тогда
				СтрокаРезультатов.Продано = ?(СтрокаРезультатов.Списано = Null, 0, СтрокаРезультатов.Списано);
				СтрокаРезультатов.Списано = ?(СтрокаРезультатов.Списано = Null, 0, СтрокаРезультатов.Списано);
			ИначеЕсли ПеремещениеТоваров Тогда
				СтрокаРезультатов.Продано = 0;
				СтрокаРезультатов.Списано = 0;
			Иначе
				СтрокаРезультатов.Продано = ?(СтрокаРезультатов.Продано = Null, 0, СтрокаРезультатов.Продано);
				СтрокаРезультатов.Списано = ?(СтрокаРезультатов.Списано = Null, 0, СтрокаРезультатов.Списано);
			КонецЕсли;
		Иначе
			СтрокаРезультатов.Продано = 0;
			СтрокаРезультатов.Списано = ?(СтрокаРезультатов.Списано = Null, 0, СтрокаРезультатов.Списано);
		КонецЕсли
	КонецЦикла;
		
	ТаблицаРезультатов.Свернуть("Период","ДО41, ДО44, СНД41, СНД44, СКД41, СКД44, Продано, Списано");
	
	ДополнитьТаблицуПериодами(ТаблицаРезультатов);
	// Состав показателей регистра (графа/колонка таблицы)
	//  1 / Период
	//  2 / СНД44 
	//  3 / ДО44
	//  4 / СНД41 
	//  5 / ДО41
	//  6 / Продано
	//  7 / -
	//  8 / Списано-Продано
	//  9 / СКД41 
	// 10 / (расчетная)
	// 11 / (расчетная, контрольная по СКД44)
	// 12 / (расчетная)
	
	ТаблицаРезультатов.Сортировать("Период Возр");
	
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	ВсегоСуммаСписанияТранспортныхРасходов = 0;
	Для каждого СтрокаРезультатов из ТаблицаРезультатов Цикл
		
		//Рассчитаем списание транспортных расходов
		РеализованоТоваров = СтрокаРезультатов.Продано;
		ОстатокТоваров = СтрокаРезультатов.СКД41;
		ТранспортныеРасходы = СтрокаРезультатов.СНД44 + СтрокаРезультатов.ДО44;
		
		Процент = ?((РеализованоТоваров + ОстатокТоваров)>0, ТранспортныеРасходы /(РеализованоТоваров + ОстатокТоваров), 0);
		ОстатокТранспортныхРасходов = Окр(Процент * ОстатокТоваров, 2);
		СуммаСписанияТранспортныхРасходов = ТранспортныеРасходы - ОстатокТранспортныхРасходов;
		
		ОбластьСтрока.Параметры.ДатаОперации        				= СтрокаРезультатов.Период;
		ОбластьСтрока.Параметры.СуммаПрямыхРасходовНаНачало         = СтрокаРезультатов.СНД44;
		ОбластьСтрока.Параметры.СуммаТранспортныхРасходовЗаМесяц 	= СтрокаРезультатов.ДО44;
		ОбластьСтрока.Параметры.ОстатокТовараНаНачало 				= СтрокаРезультатов.СНД41;
		ОбластьСтрока.Параметры.ПриобретеноТоваровЗаМесяц 			= СтрокаРезультатов.ДО41;
		ОбластьСтрока.Параметры.РеализованноТоваровЗаМесяц 			= РеализованоТоваров;
		ОбластьСтрока.Параметры.ВыбылоПоЕНДВЗаМесяц 				= 0;
		ОбластьСтрока.Параметры.ПрочееВыбытиеЗаМесяц 				= СтрокаРезультатов.Списано - РеализованоТоваров;
		ОбластьСтрока.Параметры.ОстатокТовараНаКонец 				= ОстатокТоваров;
		ОбластьСтрока.Параметры.СреднийПроцент 						= Процент;
		ОбластьСтрока.Параметры.СуммаПрямыхРасходовДляОстаткаТоваров = ОстатокТранспортныхРасходов;
		Если ОстатокТранспортныхРасходов <> СтрокаРезультатов.СКД44 Тогда
			Сообщить(Формат(СтрокаРезультатов.Период, "ДФ=ММММ.yyyy")+ " г. Результат расчета не совпадает с данными на счетах по контрольному показателю:",СтатусСообщения.Внимание); 
			Сообщить("Остаток транспортных расходов на конец месяца (расчетный): "+ОстатокТранспортныхРасходов);
			Сообщить("Остаток транспортных расходов на конец месяца (по счетам): "+СтрокаРезультатов.СКД44);
		КонецЕсли;
		ОбластьСтрока.Параметры.СуммаРасходаТекущегоМесяца 			= СуммаСписанияТранспортныхРасходов;
		ВсегоСуммаСписанияТранспортныхРасходов						= ВсегоСуммаСписанияТранспортныхРасходов + СуммаСписанияТранспортныхРасходов;		
		ДокументРезультат.Вывести(ОбластьСтрока);
		
	КонецЦикла;

	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ОбластьПодвал.Параметры.ИтогоСуммаРасходовЗаПериод = ВсегоСуммаСписанияТранспортныхРасходов;
	ДокументРезультат.Вывести(ОбластьПодвал);
	
КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли
