#Если Клиент Тогда
Перем НП Экспорт;

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();
	
	Макет = ПолучитьМакет("Макет");
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	Заголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	Заголовок.Параметры.Заголовок = "Сравнение данных о суммах НДС по приобретенным ценностям в бухгалтерском учете и специализированных регистрах";
	Заголовок.Параметры.ОписаниеПериода = "" + Формат(ДатаНач, "ДФ = ""дд.ММ.гггг""; ДП = ""...""") + " - " + 
											   Формат(ДатаКон, "ДФ = ""дд.ММ.гггг""; ДП = ""...""");
	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	ДокументРезультат.Вывести(Заголовок);
	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	ДокументРезультат.Области.Заголовок.Видимость = ПоказыватьЗаголовок;

	РезультирующаяТаблица = Новый ТаблицаЗначений;
	
	Счетчик = 1;
	
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы|ОбщаяЧасть");
	СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы|ОбщаяЧасть");
	ИтогиТаблицы     = Макет.ПолучитьОбласть("СтрокаИтогов|ОбщаяЧасть");
	
	Если СравнитьНДСПредъявленныйПоставщиком Тогда
		// Сначала формируем таблицу для сравнения поступлений в дебет 19 счета 
		// и отражения таких операций в регистрах подсистемы НДС
		ЗаголовокПоступило = Макет.ПолучитьОбласть("ЗаголовокТаблицы|Поступило");
		ЗаголовокРазница   = Макет.ПолучитьОбласть("ЗаголовокТаблицы|Разница");
		СтрокаПоступило    = Макет.ПолучитьОбласть("СтрокаТаблицы|Поступило");
		СтрокаРазница      = Макет.ПолучитьОбласть("СтрокаТаблицы|Разница");
		ИтогиПоступило     = Макет.ПолучитьОбласть("СтрокаИтогов|Поступило");
		ИтогиРазница       = Макет.ПолучитьОбласть("СтрокаИтогов|Разница");

		ЗаголовокТаблицы.Параметры.ОписаниеТаблицы = Строка(Счетчик) + ". Суммы НДС, предъявленные поставщиками в текущем периоде:";
		ДокументРезультат.Вывести(ЗаголовокТаблицы);
		ДокументРезультат.Присоединить(ЗаголовокПоступило);
		ДокументРезультат.Присоединить(ЗаголовокРазница);
		
		ВыполнитьСравнительныйЗапросНДСПредъявленПоставщиком(РезультирующаяТаблица);
		//ВыполнитьСравнительныйЗапросПоРегиструИБухИтогам(РезультирующаяТаблица, "Дебет");

		Для Каждого СтрокаРез Из РезультирующаяТаблица Цикл
			
			СтрокаТаблицы.Параметры.ДатаПоступления = Формат(СтрокаРез.Дата, "ДФ=dd.MM.yyyy");
			СтрокаТаблицы.Параметры.СчетУчетаНДС    = СтрокаРез.СчетУчетаНДС;
			СтрокаТаблицы.Параметры.Контрагент      = СтрокаРез.Контрагент;
			СтрокаТаблицы.Параметры.СчетФактура     = СтрокаРез.СчетФактура;
			
			СтрокаПоступило.Параметры.СуммаПоступления    = СтрокаРез.СуммаПоступления;
			СтрокаПоступило.Параметры.СуммаНДСПоРегистру  = СтрокаРез.СуммаНДСПоРегистру;
			СтрокаПоступило.Параметры.СуммаНДСПоБухИтогам = СтрокаРез.СуммаНДСПоБухИтогам;
			СтрокаРазница.Параметры.Разница               = СтрокаРез.Разница;
			
			ДокументРезультат.Вывести(СтрокаТаблицы);
			ДокументРезультат.Присоединить(СтрокаПоступило);
			ДокументРезультат.Присоединить(СтрокаРазница);
			
		КонецЦикла;

		ИтогиПоступило.Параметры.ИтогСуммаПоступления    = РезультирующаяТаблица.Итог("СуммаПоступления");
		ИтогиПоступило.Параметры.ИтогСуммаНДСПоРегистру  = РезультирующаяТаблица.Итог("СуммаНДСПоРегистру");
		ИтогиПоступило.Параметры.ИтогСуммаНДСПоБухИтогам = РезультирующаяТаблица.Итог("СуммаНДСПоБухИтогам");
		ИтогиРазница.Параметры.ИтогРазница               = РезультирующаяТаблица.Итог("Разница");
		
		ДокументРезультат.Вывести(ИтогиТаблицы);
		ДокументРезультат.Присоединить(ИтогиПоступило);
		ДокументРезультат.Присоединить(ИтогиРазница);
		
		Счетчик = Счетчик + 1;
	КонецЕсли;
	
	Если СравнитьНДСПредъявленныйКВычету Тогда
		// Затем формируем таблицу для сравнения операций принятия НДС к вычету 
		// и отражения таких операций в регистрах подсистемы НДС
		ЗаголовокПринято = 	 Макет.ПолучитьОбласть("ЗаголовокТаблицы|Принято");
		ЗаголовокРазница = 	 Макет.ПолучитьОбласть("ЗаголовокТаблицы|Разница");
		СтрокаПринято = 	 Макет.ПолучитьОбласть("СтрокаТаблицы|Принято");
		СтрокаРазница = 	 Макет.ПолучитьОбласть("СтрокаТаблицы|Разница");
		ИтогиПринято = 	 	 Макет.ПолучитьОбласть("СтрокаИтогов|Принято");
		ИтогиРазница = 	 	 Макет.ПолучитьОбласть("СтрокаИтогов|Разница");
		
		ЗаголовокТаблицы.Параметры.ОписаниеТаблицы = Строка(Счетчик) + ". Суммы НДС, предъявленные к вычету в текущем периоде:";
		ДокументРезультат.Вывести(ЗаголовокТаблицы);
		ДокументРезультат.Присоединить(ЗаголовокПринято);
		ДокументРезультат.Присоединить(ЗаголовокРазница);
		
		ВыполнитьСравнительныйЗапросНДСПринятКВычету(РезультирующаяТаблица);
		////ВыполнитьСравнительныйЗапросНДСПринятКВычету(РезультирующаяТаблица, "КредитПредъявленоКВычету");
		
		Для Каждого СтрокаРез Из РезультирующаяТаблица Цикл
			СтрокаТаблицы.Параметры.ДатаПоступления = Формат(СтрокаРез.Дата, "ДФ=dd.MM.yyyy");
			СтрокаТаблицы.Параметры.СчетУчетаНДС    = СтрокаРез.СчетУчетаНДС;
			СтрокаТаблицы.Параметры.Контрагент      = СтрокаРез.Контрагент;
			СтрокаТаблицы.Параметры.СчетФактура     = СтрокаРез.СчетФактура;
			
			СтрокаПринято.Параметры.СуммаНДСПоРегистру  	= СтрокаРез.СуммаНДСПоРегистру;
			СтрокаПринято.Параметры.СуммаНДСПоБухИтогам 	= СтрокаРез.СуммаНДСПоБухИтогам;
			СтрокаПринято.Параметры.СуммаНДСВосстановлена 	= СтрокаРез.СуммаНДСВосстановлена;
			СтрокаРазница.Параметры.Разница             	= СтрокаРез.Разница;
			
			ДокументРезультат.Вывести(СтрокаТаблицы);
			ДокументРезультат.Присоединить(СтрокаПринято);
			ДокументРезультат.Присоединить(СтрокаРазница);
			
		КонецЦикла;

		ИтогиПринято.Параметры.ИтогСуммаНДСПоРегистру 	= РезультирующаяТаблица.Итог("СуммаНДСПоРегистру");
		ИтогиПринято.Параметры.ИтогСуммаНДСПоБухИтогам 	= РезультирующаяТаблица.Итог("СуммаНДСПоБухИтогам");
		ИтогиПринято.Параметры.ИтогСуммаНДСВосстановлена= РезультирующаяТаблица.Итог("СуммаНДСВосстановлена");
		ИтогиРазница.Параметры.ИтогРазница 				= РезультирующаяТаблица.Итог("Разница");
		
		ДокументРезультат.Вывести(ИтогиТаблицы);
		ДокументРезультат.Присоединить(ИтогиПринято);
		ДокументРезультат.Присоединить(ИтогиРазница);
		
		Счетчик = Счетчик + 1;
	КонецЕсли;

	Если СравнитьНДСВключенныйВСтоимость Тогда
		
		// Формируем таблицу для сравнения операций включения НДС в стоимость товаров или услуг 
		// и отражения таких операций в регистрах подсистемы НДС
		ЗаголовокВключеноВСтоимость = Макет.ПолучитьОбласть("ЗаголовокТаблицы|ВключеноВСтоимость");
		ЗаголовокРазница            = Макет.ПолучитьОбласть("ЗаголовокТаблицы|Разница");
		СтрокаВключеноВСтоимость    = Макет.ПолучитьОбласть("СтрокаТаблицы|ВключеноВСтоимость");
		СтрокаРазница               = Макет.ПолучитьОбласть("СтрокаТаблицы|Разница");
		ИтогиВключеноВСтоимость     = Макет.ПолучитьОбласть("СтрокаИтогов|ВключеноВСтоимость");
		ИтогиРазница                = Макет.ПолучитьОбласть("СтрокаИтогов|Разница");
		
		ЗаголовокТаблицы.Параметры.ОписаниеТаблицы = Строка(Счетчик) + ". Суммы НДС, включенные в стоимость ценностей в текущем периоде:";
		ДокументРезультат.Вывести(ЗаголовокТаблицы);
		ДокументРезультат.Присоединить(ЗаголовокВключеноВСтоимость);
		ДокументРезультат.Присоединить(ЗаголовокРазница);
		
		ВыполнитьСравнительныйЗапросНДСВключеноВСтоимость(РезультирующаяТаблица);
		//ВыполнитьСравнительныйЗапросПоРегиструИБухИтогам(РезультирующаяТаблица, "КредитВключеноВСтоимость");
		
		Для Каждого СтрокаРез Из РезультирующаяТаблица Цикл
			
			СтрокаТаблицы.Параметры.ДатаПоступления = Формат(СтрокаРез.Дата, "ДФ=dd.MM.yyyy");
			СтрокаТаблицы.Параметры.СчетУчетаНДС    = СтрокаРез.СчетУчетаНДС;
			СтрокаТаблицы.Параметры.Контрагент      = СтрокаРез.Контрагент;
			СтрокаТаблицы.Параметры.СчетФактура     = СтрокаРез.СчетФактура;
			
			СтрокаВключеноВСтоимость.Параметры.СуммаНДСПоРегистру	= СтрокаРез.СуммаНДСПоРегистру;
			СтрокаВключеноВСтоимость.Параметры.СуммаНДСПоБухИтогам	= СтрокаРез.СуммаНДСПоБухИтогам;
			СтрокаВключеноВСтоимость.Параметры.СуммаНДСНаРасходы	= СтрокаРез.СуммаНДСНаРасходы;
			СтрокаРазница.Параметры.Разница             = СтрокаРез.Разница;
			
			ДокументРезультат.Вывести(СтрокаТаблицы);
			ДокументРезультат.Присоединить(СтрокаВключеноВСтоимость);
			ДокументРезультат.Присоединить(СтрокаРазница);
			
		КонецЦикла;
		
		ИтогиВключеноВСтоимость.Параметры.ИтогСуммаНДСПоРегистру =  РезультирующаяТаблица.Итог("СуммаНДСПоРегистру");
		ИтогиВключеноВСтоимость.Параметры.ИтогСуммаНДСПоБухИтогам = РезультирующаяТаблица.Итог("СуммаНДСПоБухИтогам");
		ИтогиВключеноВСтоимость.Параметры.ИтогСуммаНДСНаРасходы = РезультирующаяТаблица.Итог("СуммаНДСНаРасходы");
		ИтогиРазница.Параметры.ИтогРазница = РезультирующаяТаблица.Итог("Разница");
		
		ДокументРезультат.Вывести(ИтогиТаблицы);
		ДокументРезультат.Присоединить(ИтогиВключеноВСтоимость);
		ДокументРезультат.Присоединить(ИтогиРазница);
		
	КонецЕсли;
	
	ДокументРезультат.Автомасштаб = Истина;

КонецПроцедуры

// Выполняет сравнительный запрос к БД для сопоставления информации между регистром учета НДС
// и бухитогами
Процедура ВыполнитьСравнительныйЗапросНДСПредъявленПоставщиком(РезультирующаяТаблица)

	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИсходныеДанные.СчетФактура КАК СчетФактура,
		|	ИсходныеДанные.Контрагент КАК Контрагент,
		|	ИсходныеДанные.СчетУчетаНДС КАК СчетУчетаНДС,
		|	СУММА(ИсходныеДанные.СуммаНДСПоРегистру) КАК СуммаНДСПоРегистру,
		|	СУММА(ИсходныеДанные.СуммаПоступления) КАК СуммаПоступления,
		|	СУММА(ИсходныеДанные.СуммаНДСПоБухИтогам) КАК СуммаНДСПоБухИтогам,
		|	СУММА(ИсходныеДанные.СуммаНДСПоРегистру - ИсходныеДанные.СуммаНДСПоБухИтогам) КАК Разница,
		|	ИсходныеДанные.Дата КАК Дата
		|ИЗ
		|	(ВЫБРАТЬ
		|		НДСПредъявленныйОбороты.СчетФактура КАК СчетФактура,
		|		НДСПредъявленныйОбороты.Поставщик КАК Контрагент,
		|		НДСПредъявленныйОбороты.СчетУчетаНДС КАК СчетУчетаНДС,
		|		НДСПредъявленныйОбороты.СчетФактура.Дата КАК Дата,
		|		НДСПредъявленныйОбороты.НДСПриход - ВЫБОР
		|			КОГДА (НЕ НДСПредъявленныйОбороты.НДСПриход = 0)
		|				ТОГДА НДСПредъявленныйОбороты.НДСРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаНДСПоРегистру,
		|		НДСПредъявленныйОбороты.СуммаБезНДСПриход + НДСПредъявленныйОбороты.НДСПриход - ВЫБОР
		|			КОГДА (НЕ НДСПредъявленныйОбороты.СуммаБезНДСПриход + НДСПредъявленныйОбороты.НДСПриход = 0)
		|				ТОГДА НДСПредъявленныйОбороты.СуммаБезНДСРасход + НДСПредъявленныйОбороты.НДСРасход
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаПоступления,
		|		0 КАК СуммаНДСПоБухИтогам
		|	ИЗ
		|		РегистрНакопления.НДСПредъявленный.Обороты(
		|				&ДатаНач,
		|				&ДатаКон,
		|				Регистратор,
		|				Организация = &Организация
		|					И (НЕ ВидЦенности В (&ВидыЦенностейИсключаемые))) КАК НДСПредъявленныйОбороты
		|	ГДЕ
		|		(НДСПредъявленныйОбороты.СуммаБезНДСРасход + НДСПредъявленныйОбороты.НДСРасход = 0
		|				ИЛИ НДСПредъявленныйОбороты.СуммаБезНДСПриход + НДСПредъявленныйОбороты.НДСПриход > НДСПредъявленныйОбороты.СуммаБезНДСРасход + НДСПредъявленныйОбороты.НДСРасход)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОбороты.Субконто2,
		|		ХозрасчетныйОбороты.Субконто1,
		|		ХозрасчетныйОбороты.Счет,
		|		ХозрасчетныйОбороты.Субконто2.Дата,
		|		0,
		|		0,
		|		ХозрасчетныйОбороты.СуммаОборотДт + ВЫБОР
		|			КОГДА ХозрасчетныйОбороты.СуммаОборотКт < 0
		|				ТОГДА -1 * ХозрасчетныйОбороты.СуммаОборотКт
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымЦенностям)), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&КорСчета), ) КАК ХозрасчетныйОбороты
		|	ГДЕ
		|		ВЫБОР
		|				КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВводНачальныхОстатковНДС
		|					ТОГДА (НЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ВводНачальныхОстатковНДС).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВводНачОстатковНДС.НДСпоСМРдляСобственногоПотребления))
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ) КАК ИсходныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсходныеДанные.Дата,
		|	ИсходныеДанные.СчетФактура,
		|	ИсходныеДанные.СчетУчетаНДС,
		|	ИсходныеДанные.Контрагент
		|
		|ИМЕЮЩИЕ
		|	(НЕ(СУММА(ИсходныеДанные.СуммаПоступления) = 0
		|			И СУММА(ИсходныеДанные.СуммаНДСПоРегистру) = 0
		|			И СУММА(ИсходныеДанные.СуммаНДСПоБухИтогам) = 0))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ДатаНач", ?(НЕ ЗначениеЗаполнено(ДатаНач),неопределено,Новый Граница(НачалоДня(ДатаНач), ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("ДатаКон", ?(НЕ ЗначениеЗаполнено(ДатаКон),неопределено,Новый Граница(КонецДня (ДатаКон), ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("Организация",     Организация);
	
	МассивВидыЦенностей = Новый Массив;
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	
	Запрос.УстановитьПараметр("ВидыЦенностейИсключаемые", МассивВидыЦенностей);
	
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.Вспомогательный);
	
	Запрос.УстановитьПараметр("КорСчета", МассивКорСчетов);
	
	РезультирующаяТаблица = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры // ВыполнитьСравнительныйЗапросНДСПредъявленПоставщиком()

// Выполняет сравнительный запрос к БД для сопоставления информации между регистром учета НДС
// и бухитогами
Процедура ВыполнитьСравнительныйЗапросНДСПринятКВычету(РезультирующаяТаблица)

	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсходныеДанные.СчетФактура,
		|	ИсходныеДанные.Контрагент,
		|	ИсходныеДанные.СчетУчетаНДС,
		|	СУММА(ИсходныеДанные.СуммаНДСПоРегистру) КАК СуммаНДСПоРегистру,
		|	СУММА(ИсходныеДанные.СуммаПоступления) КАК СуммаПоступления,
		|	СУММА(ИсходныеДанные.СуммаНДСПоБухИтогам) КАК СуммаНДСПоБухИтогам,
		|	СУММА(ИсходныеДанные.СуммаНДСПоРегистру - ИсходныеДанные.СуммаНДСПоБухИтогам) КАК Разница,
		|	ИсходныеДанные.Дата КАК Дата
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОбороты.Субконто2 КАК СчетФактура,
		|		ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
		|		ХозрасчетныйОбороты.Счет КАК СчетУчетаНДС,
		|		0 КАК СуммаНДСПоРегистру,
		|		0 КАК СуммаПоступления,
		|		ХозрасчетныйОбороты.СуммаОборотКт - ВЫБОР
		|			КОГДА ХозрасчетныйОбороты.Счет В (&СчетаНДС)
		|					И ХозрасчетныйОбороты.СуммаОборотДт > 0
		|				ТОГДА 0
		|			ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
		|		КОНЕЦ КАК СуммаНДСПоБухИтогам,
		|		ХозрасчетныйОбороты.Субконто2.Дата КАК Дата
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Период, Счет В ИЕРАРХИИ (&СчетаНДС), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&КорСчета), ) КАК ХозрасчетныйОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НДСЗаписиКнигиПокупокОбороты.СчетФактура,
		|		НДСЗаписиКнигиПокупокОбороты.Поставщик,
		|		ВЫБОР
		|			КОГДА НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидЦенностиАвансы)
		|				ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам)
		|			КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытияСтавка0)
		|				ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоТоварамРеализованнымПоСтавке0)
		|			ИНАЧЕ НДСЗаписиКнигиПокупокОбороты.СчетУчетаНДС
		|		КОНЕЦ,
		|		НДСЗаписиКнигиПокупокОбороты.НДСОборот,
		|		НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот,
		|		0,
		|		НДСЗаписиКнигиПокупокОбороты.СчетФактура.Дата
		|	ИЗ
		|		РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(&ДатаНач, &ДатаКон, Период, Организация = &Организация) КАК НДСЗаписиКнигиПокупокОбороты) КАК ИсходныеДанные
		|ГДЕ
		|	(ИсходныеДанные.СуммаНДСПоРегистру <> 0
		|			ИЛИ ИсходныеДанные.СуммаПоступления <> 0
		|			ИЛИ ИсходныеДанные.СуммаНДСПоБухИтогам <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсходныеДанные.СчетУчетаНДС,
		|	ИсходныеДанные.Контрагент,
		|	ИсходныеДанные.Дата,
		|	ИсходныеДанные.СчетФактура
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ДатаНач",  ?(НЕ ЗначениеЗаполнено(ДатаНач),неопределено,Новый Граница(НачалоДня(ДатаНач), ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("ДатаКон",  ?(НЕ ЗначениеЗаполнено(ДатаКон),неопределено,Новый Граница(КонецДня (ДатаКон), ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("Организация",      Организация);
	
	МассивСчетов = Новый Массив;
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымЦенностям);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам);
	МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДСприСтроительствеОсновныхСредств);
	
	Запрос.УстановитьПараметр("СчетаНДС", МассивСчетов);
	
	МассивВидыЦенностей = Новый Массив;
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	
	Запрос.УстановитьПараметр("ВидЦенностиАвансы", МассивВидыЦенностей);
	
	МассивСобытия0 = Новый Массив;
	МассивСобытия0.Добавить(Перечисления.СобытияПоНДСПокупки.НеПодтвержденаСтавка0);
	МассивСобытия0.Добавить(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету0);
	Запрос.УстановитьПараметр("СобытияСтавка0", МассивСобытия0);
	
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДС);
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДСНачисленныйПриНеподтверждении0);
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДСпоЭкспортуКВозмещению);
	Запрос.УстановитьПараметр("КорСчета", МассивКорСчетов);
	
	РезультирующаяТаблица = Запрос.Выполнить().Выгрузить();
	РезультирующаяТаблица.Колонки.Добавить("СуммаНДСВосстановлена", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	
	Запрос.УстановитьПараметр("СписокСчетовФактур", РезультирующаяТаблица.ВыгрузитьКолонку("СчетФактура"));
	Запрос.УстановитьПараметр("ВосстановлениеНДС", Перечисления.СобытияПоНДСПродажи.ВосстановлениеНДС);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСЗаписиКнигиПродажОбороты.Покупатель КАК Контрагент,
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
		|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот) КАК НДС
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			Организация = &Организация
		|				И СчетФактура В (&СписокСчетовФактур)
		|				И Событие = &ВосстановлениеНДС) КАК НДСЗаписиКнигиПродажОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПродажОбороты.Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура";
				   
	ТаблицаПродаж = Запрос.Выполнить().Выгрузить();
	Отбор = Новый Структура("СчетФактура, Контрагент");
	Для Каждого СтрокаПродаж Из ТаблицаПродаж Цикл
				
		Если Не СтрокаПродаж.НДС = 0 Тогда
			
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаПродаж);
			СтрокиСчетФактура = РезультирующаяТаблица.НайтиСтроки(Отбор);
			Для Каждого СтрокаСчетФактура Из СтрокиСчетФактура Цикл
				Если СтрокаПродаж.НДС = 0 Тогда
					Прервать;
				КонецЕсли;
				
				СтрокаСчетФактура.СуммаНДСВосстановлена = Мин(СтрокаСчетФактура.СуммаНДСПоРегистру, СтрокаПродаж.НДС);
				СтрокаСчетФактура.Разница = СтрокаСчетФактура.Разница - СтрокаСчетФактура.СуммаНДСВосстановлена;
				СтрокаПродаж.НДС = СтрокаПродаж.НДС - СтрокаСчетФактура.СуммаНДСВосстановлена;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ВыполнитьСравнительныйЗапросНДСПринятКВычету()

// Выполняет сравнительный запрос к БД для сопоставления информации между регистром учета НДС
// и бухитогами
Процедура ВыполнитьСравнительныйЗапросНДСВключеноВСтоимость(РезультирующаяТаблица)

	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ИсходныеДанные.СчетФактура,
		|	ИсходныеДанные.Контрагент,
		|	ИсходныеДанные.СчетУчетаНДС,
		|	СУММА(ИсходныеДанные.СуммаНДСПоРегистру) КАК СуммаНДСПоРегистру,
		|	СУММА(ИсходныеДанные.СуммаПоступления) КАК СуммаПоступления,
		|	СУММА(ИсходныеДанные.СуммаНДСПоБухИтогам) КАК СуммаНДСПоБухИтогам,
		|	СУММА(ИсходныеДанные.СуммаНДСПоРегистру - ИсходныеДанные.СуммаНДСПоБухИтогам) КАК Разница,
		|	ИсходныеДанные.Дата КАК Дата
		|ИЗ
		|	(ВЫБРАТЬ
		|		НДСВключенныйВСтоимостьОбороты.СчетФактура КАК СчетФактура,
		|		НДСВключенныйВСтоимостьОбороты.Поставщик КАК Контрагент,
		|		НДСВключенныйВСтоимостьОбороты.СчетУчетаНДС КАК СчетУчетаНДС,
		|		НДСВключенныйВСтоимостьОбороты.СчетФактура.Дата КАК Дата,
		|		НДСВключенныйВСтоимостьОбороты.НДСОборот КАК СуммаНДСПоРегистру,
		|		НДСВключенныйВСтоимостьОбороты.СуммаБезНДСОборот + НДСВключенныйВСтоимостьОбороты.НДСОборот КАК СуммаПоступления,
		|		0 КАК СуммаНДСПоБухИтогам
		|	ИЗ
		|		РегистрНакопления.НДСВключенныйВСтоимость.Обороты(
		|				&ДатаНач,
		|				&ДатаКон,
		|				Период,
		|				Организация = &Организация
		|					И (НЕ ВидЦенности В (&ВидЦенностиАвансы))) КАК НДСВключенныйВСтоимостьОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОбороты.Субконто2,
		|		ХозрасчетныйОбороты.Субконто1,
		|		ХозрасчетныйОбороты.Счет,
		|		ХозрасчетныйОбороты.Субконто2.Дата,
		|		0,
		|		0,
		|		СУММА(ХозрасчетныйОбороты.СуммаОборотКт)
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Период, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоПриобретеннымЦенностям)), , Организация = &Организация, (НЕ КорСчет В ИЕРАРХИИ (&КорСчета)), ) КАК ХозрасчетныйОбороты
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ХозрасчетныйОбороты.Субконто2,
		|		ХозрасчетныйОбороты.Счет,
		|		ХозрасчетныйОбороты.Субконто1,
		|		ХозрасчетныйОбороты.Субконто2.Дата
		|	
		|	ИМЕЮЩИЕ
		|		СУММА(ХозрасчетныйОбороты.СуммаОборотКт) > 0) КАК ИсходныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсходныеДанные.Дата,
		|	ИсходныеДанные.СчетФактура,
		|	ИсходныеДанные.СчетУчетаНДС,
		|	ИсходныеДанные.Контрагент
		|
		|ИМЕЮЩИЕ
		|	(НЕ(СУММА(ИсходныеДанные.СуммаНДСПоРегистру) = 0
		|			И СУММА(ИсходныеДанные.СуммаНДСПоБухИтогам) = 0))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ДатаНач", ?(НЕ ЗначениеЗаполнено(ДатаНач), Неопределено, Новый Граница(НачалоДня(ДатаНач), ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("ДатаКон", ?(НЕ ЗначениеЗаполнено(ДатаКон), Неопределено, Новый Граница(КонецДня (ДатаКон), ВидГраницы.Включая)));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	МассивВидыЦенностей = Новый Массив;
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	МассивВидыЦенностей.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	
	Запрос.УстановитьПараметр("ВидЦенностиАвансы", МассивВидыЦенностей);
	
	МассивКорСчетов = Новый Массив;
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымЦенностям);
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.НДС);
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиям);
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиямВал);
	МассивКорСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиямУЕ);
	
	Запрос.УстановитьПараметр("КорСчета", МассивКорСчетов);
	
	РезультирующаяТаблица = Запрос.Выполнить().Выгрузить();
	РезультирующаяТаблица.Колонки.Добавить("СуммаНДСНаРасходы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	
	Запрос.УстановитьПараметр("СписокСчетовФактур", РезультирующаяТаблица.ВыгрузитьКолонку("СчетФактура"));
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСНачисленныйОбороты.СчетФактура,
		|	НДСНачисленныйОбороты.Покупатель КАК Контрагент,
		|	НДСНачисленныйОбороты.НДСПриход КАК НДС
		|ИЗ
		|	РегистрНакопления.НДСНачисленный.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			Организация = &Организация
		|				И СчетФактура В (&СписокСчетовФактур)
		|				И ВидНачисления = ЗНАЧЕНИЕ(перечисление.НДСВидНачислениЯ.НДСВосстановлен)) КАК НДСНачисленныйОбороты";
				   
	ТаблицаПродаж = Запрос.Выполнить().Выгрузить();
	Отбор = Новый Структура("СчетФактура, Контрагент");
	Для Каждого СтрокаПродаж Из ТаблицаПродаж Цикл
				
		Если Не СтрокаПродаж.НДС = 0 Тогда
			
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаПродаж);
			СтрокиСчетФактура = РезультирующаяТаблица.НайтиСтроки(Отбор);
			Для Каждого СтрокаСчетФактура Из СтрокиСчетФактура Цикл
				Если СтрокаПродаж.НДС = 0 Тогда
					Прервать;
				КонецЕсли;
				
				СтрокаСчетФактура.СуммаНДСНаРасходы = Мин(СтрокаСчетФактура.СуммаНДСПоБухИтогам, СтрокаПродаж.НДС);
				СтрокаСчетФактура.Разница = СтрокаСчетФактура.Разница + СтрокаСчетФактура.СуммаНДСНаРасходы;
				СтрокаПродаж.НДС = СтрокаПродаж.НДС - СтрокаСчетФактура.СуммаНДСНаРасходы;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры // ВыполнитьСравнительныйЗапросНДСВключеноВСтоимость()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
НП = Новый НастройкаПериода;
#КонецЕсли
