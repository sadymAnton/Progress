Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем КэшОтчетов Экспорт;
Перем ТекущийМакет Экспорт;
Перем КоллекцияНастроек Экспорт;

#Если Клиент Тогда

// Формирует отчет в табличный документ
//
// Параметры:
//  Результат         - табличный документ куда будет сформирован отчет
//  ДанныеРасшифровки - данные расшифровки отчета схемы компоновки данных
//  ВыводВФормуОтчета - признак вывода отчета в форму  
//
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	//ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	
	ДоступностьРасшифровки = НЕ (Найти(ТекущийМакет, "МакетРасшифровкиПоТЗР") 
								ИЛИ Найти(ТекущийМакет, "МакетРасшифровкиПоСотрудникам") 
								ИЛИ Найти(ТекущийМакет, "МакетРасшифровкиПоНалогам") 
								ИЛИ Найти(ТекущийМакет, "МакетРасшифровкиПоУслугам") 
								ИЛИ Найти(ТекущийМакет, "МакетРасшифровкиПоРБП") 
								ИЛИ Найти(ТекущийМакет, "МакетРасшифровкиПоНДС") 
								ИЛИ Найти(ТекущийМакет, "МакетРасшифровкиРаспределения"));
								
		
	//Вывод заголовка
	Результат.Очистить();
	ВыводЗаголовкаОтчета(Результат, ВыводВФормуОтчета);
	
	//Для другого оформления макета
	ЭтотОбъект.КомпоновщикНастроек.Восстановить();
	Схема = СхемаКомпоновкиДанных;
	
	//Сгенерируем макет компоновки данных при помощи компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	Попытка
		
		//В качестве схемы компоновки будет выступать схема самого отчета
		//В качестве настроек отчета - текущие настройки отчета
		//Данные расшифровки будем помещать в ДанныеРасшифровки
		МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, ЭтотОбъект.КомпоновщикНастроек.Настройки, ДанныеРасшифровки, ЭтотОбъект.ПолучитьМакет("МакетОформленияОтчетовЗеленый"));
		ТиповыеОтчеты.ДополнитьМакетыМакетаКомпоновкиРасшифровкойРесурсов(МакетКомпоновки, КомпоновщикНастроек);
		//Создадим и инициализируем процессор компоновки
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		Если ВнешниеНаборыДанных = Неопределено Тогда
			Если ДоступностьРасшифровки Тогда
				ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);			
			Иначе
				ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
			КонецЕсли;
		Иначе
			ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
		КонецЕсли;
		
		//Создадим и инициализируем процессор вывода результата
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(Результат);
		
		//Обозначим начало вывода
		ПроцессорВывода.НачатьВывод();
		Состояние(НСТР("ru='Если Вы хотите прервать вывод отчета, нажмите Ctrl+Break'"));
		
		ТаблицаЗафиксирована = Не ВыводВФормуОтчета;
		
		Результат.ФиксацияСверху = 0;
		//Основной цикл вывода отчета
		Пока Истина Цикл
			
			ОбработкаПрерыванияПользователя();
			//Получим следующий элемент результата компоновки
			ЭлементРезультата = ПроцессорКомпоновки.Следующий();
			
			Если ЭлементРезультата = Неопределено Тогда
				//Следующий элемент не получен - заканчиваем цикл вывода
				Прервать;
				
			Иначе
				
				// Зафиксируем шапку
				Если Не РасширеннаяНастройка 
					И Не ТаблицаЗафиксирована 
					И ЭлементРезультата.ЗначенияПараметров.Количество() > 0 
					И ТипЗнч(КомпоновщикНастроек.Настройки.Структура[0]) <> Тип("ДиаграммаКомпоновкиДанных") Тогда
					ТаблицаЗафиксирована = Истина;
					Результат.ФиксацияСверху = Результат.ВысотаТаблицы;
				КонецЕсли;
				
				//Элемент получен - выведем его при помощи процессора вывода
				ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
				
			КонецЕсли;
			
		КонецЦикла;
		
			
		//Обозначем завершение вывода
		ПроцессорВывода.ЗакончитьВывод();
		
		ОбработкаРезультатаОтчета(Результат);
		
	Исключение
		Вопрос("Отчет не сформирован!" + Символы.ПС + ТиповыеОтчеты.ПолучитьОписаниеРодительскойПричиныИнформацииОбОшибке(ИнформацияОбОшибке()), РежимДиалогаВопрос.ОК);
	КонецПопытки;
	
КонецФункции


Процедура ЗаполнитьДанныеСхемы(ДокументРезультат, ВыделятьНДСУСН) Экспорт
	
	ДокументРезультат.Очистить();
	ДокументРезультат.ФиксацияСверху = 0;
	Секция = ПолучитьМакет("МакетКарты");
	КартыИКредиты = Новый Массив();
	КартыИКредиты.Добавить(Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПоступлениеОплатыПоПлатежнымКартам);
	КартыИКредиты.Добавить(Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПоступлениеОплатыПоБанковскимКредитам);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("РозничнаяВыручка", Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка);
	Запрос.УстановитьПараметр("КартыИКредиты", КартыИКредиты);
	Запрос.УстановитьПараметр("СПокупателем", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	Запрос.УстановитьПараметр("СКомиссионером", Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	Запрос.УстановитьПараметр("СКомитентом", Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	СУММА(КнигаУчетаДоходовИРасходов.Графа5) КАК Графа5,
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.ЭтапПроведения = -1
	|			ТОГДА ""Курсовая разница""
	|		КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ИЛИ ПриходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.ВидОперации = &РозничнаяВыручка
	|			ТОГДА ""Розничная выручка""
	|		КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ПлатежныйОрдерСписаниеДенежныхСредств
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.АккредитивПолученный
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ИнкассовоеПоручениеПолученное
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ПлатежноеТребованиеПолученное
	|			ТОГДА ""Сторно доходов при возврате аванса покупателю""
	|		КОГДА ПриходныйКассовыйОрдерРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ АккредитивПереданныйРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ АккредитивПереданныйРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РеализацияОтгруженныхТоваров
	|			ТОГДА ""Поступления от покупателей""
	|		КОГДА ПриходныйКассовыйОрдерРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ АккредитивПереданныйРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|			ТОГДА ""Поступления от комиссионеров""
	|		КОГДА ПриходныйКассовыйОрдерРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ АккредитивПереданныйРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ОтчетКомитентуОПродажах
	|			ТОГДА ""Комиссионное вознаграждение""
	|		ИНАЧЕ ""Доходы, отраженные вручную""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручениеВходящее.РасшифровкаПлатежа КАК ПлатежноеПоручениеВходящееРасшифровкаПлатежа
	|		ПО КнигаУчетаДоходовИРасходов.Регистратор = ПлатежноеПоручениеВходящееРасшифровкаПлатежа.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежныйОрдерПоступлениеДенежныхСредств.РасшифровкаПлатежа КАК ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа
	|		ПО КнигаУчетаДоходовИРасходов.Регистратор = ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПриходныйКассовыйОрдерРасшифровкаПлатежа
	|		ПО КнигаУчетаДоходовИРасходов.Регистратор = ПриходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АккредитивПереданный.РасшифровкаПлатежа КАК АккредитивПереданныйРасшифровкаПлатежа
	|		ПО КнигаУчетаДоходовИРасходов.Регистратор = АккредитивПереданныйРасшифровкаПлатежа.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнкассовоеПоручениеПереданное.РасшифровкаПлатежа КАК ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа
	|		ПО КнигаУчетаДоходовИРасходов.Регистратор = ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеТребованиеВыставленное.РасшифровкаПлатежа КАК ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа
	|		ПО КнигаУчетаДоходовИРасходов.Регистратор = ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.Ссылка
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И КнигаУчетаДоходовИРасходов.Организация = &Организация
	|	И КнигаУчетаДоходовИРасходов.Активность
	|	И (ПлатежноеПоручениеВходящееРасшифровкаПлатежа.НомерСтроки = 1 ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.НомерСтроки ЕСТЬ NULL)
	|	И (ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.НомерСтроки = 1 ИЛИ ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.НомерСтроки ЕСТЬ NULL)
	|	И (ПриходныйКассовыйОрдерРасшифровкаПлатежа.НомерСтроки = 1 ИЛИ ПриходныйКассовыйОрдерРасшифровкаПлатежа.НомерСтроки ЕСТЬ NULL)
	|	И (АккредитивПереданныйРасшифровкаПлатежа.НомерСтроки = 1 ИЛИ АккредитивПереданныйРасшифровкаПлатежа.НомерСтроки ЕСТЬ NULL)
	|	И (ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.НомерСтроки = 1 ИЛИ ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.НомерСтроки ЕСТЬ NULL)
	|	И (ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.НомерСтроки = 1 ИЛИ ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.НомерСтроки ЕСТЬ NULL)	
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.ЭтапПроведения = -1
	|			ТОГДА ""Курсовая разница""
	|		КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ИЛИ ПриходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка.ВидОперации = &РозничнаяВыручка
	|			ТОГДА ""Розничная выручка""
	|		КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ПлатежныйОрдерСписаниеДенежныхСредств
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.АккредитивПолученный
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ИнкассовоеПоручениеПолученное
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ПлатежноеТребованиеПолученное
	|			ТОГДА ""Сторно доходов при возврате аванса покупателю""
	|		КОГДА ПриходныйКассовыйОрдерРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ АккредитивПереданныйРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СПокупателем
	|				ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ АккредитивПереданныйРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.Ссылка.ВидОперации В (&КартыИКредиты)
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РеализацияОтгруженныхТоваров
	|			ТОГДА ""Поступления от покупателей""
	|		КОГДА ПриходныйКассовыйОрдерРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ АккредитивПереданныйРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомиссионером
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|			ТОГДА ""Поступления от комиссионеров""
	|		КОГДА ПриходныйКассовыйОрдерРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ ПлатежныйОрдерПоступлениеДенежныхСредствРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ АккредитивПереданныйРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ ИнкассовоеПоручениеПереданноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ ПлатежноеТребованиеВыставленноеРасшифровкаПлатежа.ДоговорКонтрагента.ВидДоговора = &СКомитентом
	|				ИЛИ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ОтчетКомитентуОПродажах
	|			ТОГДА ""Комиссионное вознаграждение""
	|		ИНАЧЕ ""Доходы, отраженные вручную""
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(КнигаУчетаДоходовИРасходов.Графа5) <> 0";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВсегоДоходов = 0;
	Пока Выборка.Следующий() Цикл
		ВсегоДоходов = ВсегоДоходов + Выборка.Графа5;
		
		Если СокрЛП(Выборка.Содержание) = "Розничная выручка" Тогда
			
			Секция.Параметры.РозничнаяВыручка = Выборка.Графа5;
			Секция.Параметры.РасшифровкаРозничнаяВыручка = 1;
			
		ИначеЕсли СокрЛП(Выборка.Содержание) = "Сторно доходов при возврате аванса покупателю" Тогда
			
			Секция.Параметры.ВозвратАвансов = Выборка.Графа5;
			Секция.Параметры.РасшифровкаВозвратАвансов = 4;
			
		ИначеЕсли СокрЛП(Выборка.Содержание) = "Поступления от покупателей" Тогда
			
			Секция.Параметры.ПоступленияОтПокупателей = Выборка.Графа5;
			Секция.Параметры.РасшифровкаПоступленияОтПокупателей = 0;
			
		ИначеЕсли СокрЛП(Выборка.Содержание) = "Поступления от комиссионеров" Тогда
			
			Секция.Параметры.ПоступленияОтКомиссионеров = Выборка.Графа5;
			Секция.Параметры.РасшифровкаПоступленияОтКомиссионеров = 2;
			
		ИначеЕсли СокрЛП(Выборка.Содержание) = "Комиссионное вознаграждение" Тогда
			
			Секция.Параметры.КомиссионноеВознаграждение = Выборка.Графа5;
			Секция.Параметры.РасшифровкаКомиссионноеВознаграждение = 3;
			
		ИначеЕсли СокрЛП(Выборка.Содержание) = "Курсовая разница" Тогда
			
			Секция.Параметры.КурсовыеРазницы = Выборка.Графа5;
			Секция.Параметры.РасшифровкаКурсовыеРазницы = 5;
			
		ИначеЕсли СокрЛП(Выборка.Содержание) = "Доходы, отраженные вручную" Тогда
			
			Секция.Параметры.ДоходыВручную = Выборка.Графа5;
			Секция.Параметры.РасшифровкаДоходыВручную = 6;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Секция.Параметры.ДоходыВсего = ВсегоДоходов;
	
	Секция.Параметры.ТекстНДС = ?(ВыделятьНДСУСН, "НДС, предъявленный поставщиком", "Сторно НДС прошлых периодов");
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ПустойВидРасхода", Перечисления.ВидыРасходовУСН.ПустаяСсылка());
	Запрос.УстановитьПараметр("Номенклатура", Перечисления.ВидыРасходовУСН.Номенклатура);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(КнигаУчетаДоходовИРасходов.Графа7) КАК Графа7,
	|	СУММА(КнигаУчетаДоходовИРасходов.НДС) КАК НДС,
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.ВидРасхода = &ПустойВидРасхода
	|			ТОГДА ВЫБОР
	|					КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|						ТОГДА &Номенклатура
	|					КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РегламентныеОперацииНалоговогоУчетаПоУСН
	|							И КнигаУчетаДоходовИРасходов.ЭтапПроведения = 2
	|						ТОГДА ""Распределение по видам деятельности""
	|					ИНАЧЕ ""Прочее""
	|				КОНЕЦ
	|		ИНАЧЕ КнигаУчетаДоходовИРасходов.ВидРасхода
	|	КОНЕЦ КАК ВидРасхода
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И КнигаУчетаДоходовИРасходов.Организация = &Организация
	|	И КнигаУчетаДоходовИРасходов.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.ВидРасхода = &ПустойВидРасхода
	|			ТОГДА ВЫБОР
	|					КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|						ТОГДА &Номенклатура
	|					КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РегламентныеОперацииНалоговогоУчетаПоУСН
	|							И КнигаУчетаДоходовИРасходов.ЭтапПроведения = 2
	|						ТОГДА ""Распределение по видам деятельности""
	|					ИНАЧЕ ""Прочее""
	|				КОНЕЦ
	|		ИНАЧЕ КнигаУчетаДоходовИРасходов.ВидРасхода
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	(СУММА(КнигаУчетаДоходовИРасходов.Графа7) <> 0
	|		ИЛИ СУММА(КнигаУчетаДоходовИРасходов.НДС) <> 0)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВсегоРасходов = 0;
	Пока Выборка.Следующий() Цикл
		ВсегоРасходов = ВсегоРасходов + Выборка.Графа7;
		
		Если ТипЗнч(Выборка.ВидРасхода) = Тип("ПеречислениеСсылка.ВидыРасходовУСН") Тогда
			
			Если Выборка.ВидРасхода = Перечисления.ВидыРасходовУСН.Номенклатура Тогда
				
				Секция.Параметры.Номенклатура = Выборка.Графа7;
				Секция.Параметры.НДСНоменклатура = ?(ВыделятьНДСУСН или Выборка.НДС = 0, "", "в т.ч. НДС: " + Формат(Выборка.НДС, "ЧЦ=20; ЧДЦ=2; ЧРГ=' '"));
				Секция.Параметры.РасшифровкаНоменклатура = Выборка.ВидРасхода;
				
			ИначеЕсли Выборка.ВидРасхода = Перечисления.ВидыРасходовУСН.ДопРасходы Тогда
				
				Секция.Параметры.ДопРасходы = Выборка.Графа7;
				Секция.Параметры.НДСДопРасходы = ?(ВыделятьНДСУСН или Выборка.НДС = 0, "", "в т.ч. НДС: " + Формат(Выборка.НДС, "ЧЦ=20; ЧДЦ=2; ЧРГ=' '"));
				Секция.Параметры.РасшифровкаДопРасходы = Выборка.ВидРасхода;
				
			ИначеЕсли Выборка.ВидРасхода = Перечисления.ВидыРасходовУСН.Услуги Тогда
				
				Секция.Параметры.Услуги = Выборка.Графа7;
				Секция.Параметры.НДСУслуги = ?(ВыделятьНДСУСН или Выборка.НДС = 0, "", "в т.ч. НДС: " + Формат(Выборка.НДС, "ЧЦ=20; ЧДЦ=2; ЧРГ=' '"));
				Секция.Параметры.РасшифровкаУслуги = Выборка.ВидРасхода;
				
			ИначеЕсли Выборка.ВидРасхода = Перечисления.ВидыРасходовУСН.РБП Тогда
				
				Секция.Параметры.РБП = Выборка.Графа7;
				Секция.Параметры.НДСРБП = ?(ВыделятьНДСУСН или Выборка.НДС = 0, "", "в т.ч. НДС: " + Формат(Выборка.НДС, "ЧЦ=20; ЧДЦ=2; ЧРГ=' '"));
				Секция.Параметры.РасшифровкаРБП = Выборка.ВидРасхода;
				
			ИначеЕсли Выборка.ВидРасхода = Перечисления.ВидыРасходовУСН.НДС Тогда
				
				Секция.Параметры.НДС = Выборка.Графа7;
				Секция.Параметры.РасшифровкаНДС = Выборка.ВидРасхода;
				
			ИначеЕсли Выборка.ВидРасхода = Перечисления.ВидыРасходовУСН.Зарплата Тогда
				
				Секция.Параметры.Зарплата = Выборка.Графа7;
				Секция.Параметры.РасшифровкаЗарплата = Выборка.ВидРасхода;
				
			ИначеЕсли Выборка.ВидРасхода = Перечисления.ВидыРасходовУСН.Налоги Тогда
				
				Секция.Параметры.Налоги = Выборка.Графа7;
				Секция.Параметры.РасшифровкаНалоги = Выборка.ВидРасхода;
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Выборка.ВидРасхода) = Тип("Строка") Тогда
			
			Если СокрЛП(Выборка.ВидРасхода) = "Распределение по видам деятельности" Тогда
				
				Секция.Параметры.Распределение = Выборка.Графа7;
				Секция.Параметры.НДСРаспределение = ?(ВыделятьНДСУСН или Выборка.НДС = 0, "", "в т.ч. НДС: " + Формат(Выборка.НДС, "ЧЦ=20; ЧДЦ=2; ЧРГ=' '"));
				Секция.Параметры.РасшифровкаРаспределение = СокрЛП(Выборка.ВидРасхода);
								
			ИначеЕсли СокрЛП(Выборка.ВидРасхода) = "Прочее" Тогда
				
				Секция.Параметры.Прочее = Выборка.Графа7;
				Секция.Параметры.НДСПрочее = ?(ВыделятьНДСУСН или Выборка.НДС = 0, "", "в т.ч. НДС: " + Формат(Выборка.НДС, "ЧЦ=20; ЧДЦ=2; ЧРГ=' '"));
				Секция.Параметры.РасшифровкаПрочее = СокрЛП(Выборка.ВидРасхода);
								
			КонецЕсли;
			
		КонецЕсли;
								
	КонецЦикла;
	
	Секция.Параметры.РасходыВсего = ВсегоРасходов;
	Секция.Параметры.УсловнаяБаза = ВсегоДоходов - ВсегоРасходов;
	
	ДокументРезультат.Вывести(Секция);
	
КонецПроцедуры

Функция ПолучитьКоэффРаспределенияЕНВД(Организация, Дата, Период = "Квартал", Способ = "БУ") Экспорт
	
	Коэфф = 0;
	НачальнаяДата = ?(Период = "Квартал", НачалоКвартала(Дата), НачалоГода(Дата));
	
	Если Способ = "БУ" Тогда
		Коэфф = НалоговыйУчет.КоэффициентРаспределенияРасходовПоВидамДеятельности(Организация, Дата, НачальнаяДата);
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачДата", НачальнаяДата);
		Запрос.УстановитьПараметр("КонДата", КонецМесяца(Дата));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот,
		|	КнигаУчетаДоходовИРасходовОбороты.ДоходЕНВДОборот,
		|	КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот
		|ИЗ
		|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачДата, &КонДата, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты";
		
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			
			ДоходЕНВДОборот = ?(НЕ ЗначениеЗаполнено(Результат.ДоходЕНВДОборот), 0, Результат.ДоходЕНВДОборот);
			Графа4Оборот 	= ?(НЕ ЗначениеЗаполнено(Результат.Графа4Оборот), 0, Результат.Графа4Оборот);
			Графа5Оборот 	= ?(НЕ ЗначениеЗаполнено(Результат.Графа5Оборот), 0, Результат.Графа5Оборот);
			
			Если Способ = "НУ" Тогда
				Коэфф = ?(ДоходЕНВДОборот + Графа5Оборот = 0, 0, Результат.ДоходЕНВДОборот/(ДоходЕНВДОборот + Графа5Оборот));
			Иначе
				Коэфф = ?(Графа4Оборот = 0, 0, Результат.ДоходЕНВДОборот/Графа4Оборот);
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Коэфф;
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет
//
// Параметры:
//  Нет.
//
Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	Если ЗначениеПараметра = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеПараметра.Значение = '00010101' Тогда
		ЗначениеПараметра.Значение = КонецДня(ТекущаяДата());
		ЗначениеПараметра.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаРезультатаОтчета(Результат) 
	
	Для Каждого Рисунок Из Результат.Рисунки Цикл
		Если ТипЗнч(Рисунок.Объект) = Тип("Диаграмма") Тогда
		    Рисунок.Объект.ОбластьПостроения.ВертикальныеМетки  = Истина;
			Рисунок.Объект.ФорматЗначенийВПодписях = "ЧН";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(Результат, ВыводВФормуОтчета)
	
	Макет = ПолучитьМакет("МакетЗаголовкаРасшифровки");
	ОбластьОтчета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьОтчета.Параметры.ТекстЗаголовка = Организация.НаименованиеПолное + ", " + ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина");
	Результат.Вывести(ОбластьОтчета);
	
	Если Найти(ТекущийМакет, "МакетРасшифровкиНоменклатурыПоДокументам") Тогда
		Номенклатура = "";
		ЗначениеПараметраНоменклатура = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Номенклатура"));
		Если ЗначениеПараметраНоменклатура <> Неопределено Тогда
			Номенклатура = ЗначениеПараметраНоменклатура.Значение;
		КонецЕсли;
		ОбластьОтчета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьОтчета.Параметры.ТекстЗаголовка = "Номенклатура: """ + Номенклатура + """";
		Результат.Вывести(ОбластьОтчета);
	КонецЕсли;
	
КонецПроцедуры
	
Процедура СохранитьНастройку() Экспорт
	
	СтруктураПараметров = Новый Структура;
	Для каждого Реквизит Из ЭтотОбъект.Метаданные().Реквизиты Цикл
		Если Реквизит.Имя = "СхемаКомпоновкиДанных" 
		 ИЛИ Реквизит.Имя = "ДатаВерсииИсточникаДанных"
		 ИЛИ Реквизит.Имя = "ИсточникДанныхОтчета"
		 ИЛИ Реквизит.Имя = "Описание"
		 ИЛИ Реквизит.Имя = "ПодлежитПередачеВПодчиненныеУзлыПриОбменеПоОрганизации" Тогда
			Продолжить;
		КонецЕсли;
		СтруктураПараметров.Вставить(Реквизит.Имя, ЭтотОбъект[Реквизит.Имя])
	КонецЦикла;
	СтруктураПараметров.Вставить("КоллекцияНастроек", КоллекцияНастроек);
		
	Если СохраненнаяНастройка = Неопределено Тогда
		СсылкаНаОбъект = ТиповыеОтчеты.ПолучитьИдентификаторОбъекта(ЭтотОбъект);
		Настройка = Справочники.СохраненныеНастройки.СоздатьЭлемент();
		Настройка.НастраиваемыйОбъект = СсылкаНаОбъект;
		Настройка.ТипНастройки = Перечисления.ТипыНастроек.НастройкиПользователяНастройкиОтчета;
		Настройка.Наименование = "НастройкиПользователяНастройкиОтчета";
		Настройка.ИспользоватьПриОткрытии = Истина;
		НовыйПользователь = Настройка.Пользователи.Добавить();
		НовыйПользователь.Пользователь = глЗначениеПеременной("глТекущийПользователь");
		Настройка.Записать();
		
		СохраненнаяНастройка = Настройка.Ссылка;
	КонецЕсли;
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураПараметров);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	Если СтруктураПараметров = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураПараметров);
	ИнициализацияОтчета();
	Если СтруктураПараметров.Свойство("КоллекцияНастроек") Тогда
		КоллекцияНастроек = СтруктураПараметров.КоллекцияНастроек;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоПериода);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода",  КонецПериода);
	
КонецПроцедуры

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;
КэшОтчетов = Новый Структура;
КоллекцияНастроек = Новый Структура;

#КонецЕсли