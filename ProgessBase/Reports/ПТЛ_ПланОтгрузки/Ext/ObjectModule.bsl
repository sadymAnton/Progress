
Процедура ИнициализироватьПостроительОтчета() Экспорт
	
	ПостроительОтчета.Текст = "ВЫБРАТЬ
	                          |	ПТЛ_ПланДоставки.Рейс КАК Рейс,
	                          |	ПТЛ_ПланДоставки.ДатаОтгрузки КАК ДатаОтгрузки,
	                          |	ПТЛ_ПланДоставки.Отделение,
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПеревозку,
	                          |	ПТЛ_ПланДоставки.ПланДоставки,
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПодбор,
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПеревозку.Регион КАК РегионДоставки,
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПеревозку.ГородДоставки КАК ГородДоставки,
	                          |	ПТЛ_ПланДоставки.Маршрут,
	                          |	ПТЛ_ПланДоставки.ПриоритетОтгрузки КАК Приоритет,
	                          |	ПТЛ_ПланДоставки.ВремяПодачиТС,
	                          |	ПТЛ_ПланДоставки.ТЭК,
	                          |	ПТЛ_ПланДоставки.Водитель,
	                          |	ПТЛ_ПланДоставки.ТранспортноеСредство,
/// Кунов О.В., 26.10.2016 - 58421
							  |	ПТЛ_ПланДоставки.Коментарий,
///
	                          |	СУММА(ПТЛ_ПланДоставки.ВесБрутто) КАК Вес,
	                          |	СУММА(ПТЛ_ПланДоставки.Объем) КАК Объем,
	                          |	СУММА(ПТЛ_ПланДоставки.КоличествоМест) КАК КоличествоМест,
	                          |	СУММА(ПТЛ_ПланДоставки.КоличествоПаллетоМест) КАК КоличествоПаллетоМест,
	                          |	СУММА(ПТЛ_ПланДоставки.КоличествоПозиций) КАК КоличествоПозиций,
	                          |	ПТЛ_ПланДоставки.ДатаДоставки,
/// Кунов О.В., 11.08.2017 - 68144
							  |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ЦелыеПоддоныПлан, 0)) КАК КоличествоЦелыхПаллет,
							  | СУММА(ЕСТЬNULL(ВложенныйЗапрос.НаборныеУпаковкиПлан, 0)) КАК КоличествоНаборныхУпаковок,
///
	                          |	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ВесЦелыхПоддоновПлан, 0)) КАК ВесЦелыхПаллет,
	                          |	СУММА(ЕСТЬNULL(ВЫБОР
	                          |				КОГДА ВложенныйЗапрос.ВесЦелыхПоддоновПлан >= ВложенныйЗапрос.ВесВсехПоддоновПлан
	                          |					ТОГДА 0
	                          |				ИНАЧЕ ВложенныйЗапрос.ВесВсехПоддоновПлан - ВложенныйЗапрос.ВесЦелыхПоддоновПлан
	                          |			КОНЕЦ, 0)) КАК ВесНаборныхПаллет
	                          |ИЗ
	                          |	РегистрНакопления.ПТЛ_ПланДоставки КАК ПТЛ_ПланДоставки
	                          |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                          |			ВложенныйЗапрос.ЗаданиеНаПодбор КАК ЗаданиеНаПодбор,
	                          |			СУММА(ВложенныйЗапрос.ШтукиПлан) КАК ШтукиПлан,
	                          |			СУММА(ВложенныйЗапрос.ШтукиФакт) КАК ШтукиФакт,
	                          |			СУММА(ВложенныйЗапрос.УпаковкиПлан) КАК УпаковкиПлан,
	                          |			СУММА(ВложенныйЗапрос.УпаковкиФакт) КАК УпаковкиФакт,
	                          |			СУММА(ВложенныйЗапрос.ПоддоныПлан) КАК ПоддоныПлан,
	                          |			СУММА(ВложенныйЗапрос.ПоддоныФакт) КАК ПоддоныФакт,
	                          |			СУММА(ВложенныйЗапрос.ЦелыеПоддоныПлан) КАК ЦелыеПоддоныПлан,
	                          |			СУММА(ВложенныйЗапрос.ЦелыеПоддоныФакт) КАК ЦелыеПоддоныФакт,
/// Кунов О.В., 11.08.2017 - 68144
							  |			СУММА(ВложенныйЗапрос.УпаковкиПлан -
							  |				ВЫБОР
							  |					КОГДА ВложенныйЗапрос.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент = 0 ТОГДА 0
							  |					ИНАЧЕ ВложенныйЗапрос.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент / ВложенныйЗапрос.Номенклатура.ЕдиницаИзмеренияМест.Коэффициент * ВложенныйЗапрос.ЦелыеПоддоныПлан
							  |				КОНЕЦ
							  |			) КАК НаборныеУпаковкиПлан,
///
							  |
	                          |			СУММА(ВложенныйЗапрос.ПаллетМестаПлан) КАК ПаллетМестаПлан,
	                          |			СУММА(ВложенныйЗапрос.ПаллетМестаФакт) КАК ПаллетМестаФакт,
	                          |			СУММА(ВложенныйЗапрос.ВесБруттоПлан) КАК ВесБруттоПлан,
	                          |			СУММА(ВложенныйЗапрос.ВесБруттоФакт) КАК ВесБруттоФакт,
	                          |			СУММА(ВложенныйЗапрос.ВесЦелыхПоддоновПлан) КАК ВесЦелыхПоддоновПлан,
	                          |			СУММА(ВложенныйЗапрос.ВесЦелыхПоддоновФакт) КАК ВесЦелыхПоддоновФакт,
	                          |			СУММА(ВложенныйЗапрос.ВесВсехПоддоновПлан) КАК ВесВсехПоддоновПлан,
	                          |			СУММА(ВложенныйЗапрос.ВесВсехПоддоновФакт) КАК ВесВсехПоддоновФакт
	                          |		ИЗ
	                          |			(ВЫБРАТЬ
	                          |				СП_ЗаданияНаПодборОбороты.ЗаданиеНаПодбор КАК ЗаданиеНаПодбор,
	                          |				СП_ЗаданияНаПодборОбороты.Номенклатура КАК Номенклатура,
	                          |				СУММА(СП_ЗаданияНаПодборОбороты.КоличествоПланОборот) КАК ШтукиПлан,
	                          |				СУММА(СП_ЗаданияНаПодборОбороты.КоличествоФактОборот) КАК ШтукиФакт,
	                          |				СУММА(СП_ЗаданияНаПодборОбороты.КоличествоМестОборот) КАК УпаковкиПлан,
	                          |				СУММА(СП_ЗаданияНаПодборОбороты.КоличествоМестОборот) КАК УпаковкиФакт,
	                          |				ВЫБОР
	                          |					КОГДА СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0
	                          |						ТОГДА 0
	                          |					ИНАЧЕ СУММА(СП_ЗаданияНаПодборОбороты.КоличествоПланОборот) / СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент
	                          |				КОНЕЦ КАК ПоддоныПлан,
	                          |				ВЫБОР
	                          |					КОГДА СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0
	                          |						ТОГДА 0
	                          |					ИНАЧЕ СУММА(СП_ЗаданияНаПодборОбороты.КоличествоФактОборот) / СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент
	                          |				КОНЕЦ КАК ПоддоныФакт,
	                          |				ВЫБОР
	                          |					КОГДА СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0
	                          |						ТОГДА 0
	                          |					ИНАЧЕ ВЫБОР
	                          |							КОГДА СУММА(СП_ЗаданияНаПодборОбороты.КоличествоПланОборот) = 0
	                          |								ТОГДА 0
	                          |							ИНАЧЕ ВЫРАЗИТЬ(СУММА(СП_ЗаданияНаПодборОбороты.КоличествоПланОборот) / СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент - 0.5 КАК ЧИСЛО(13, 0))
	                          |						КОНЕЦ
	                          |				КОНЕЦ КАК ЦелыеПоддоныПлан,
	                          |				ВЫБОР
	                          |					КОГДА СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0
	                          |						ТОГДА 0
	                          |					ИНАЧЕ ВЫБОР
	                          |							КОГДА СУММА(СП_ЗаданияНаПодборОбороты.КоличествоФактОборот) = 0
	                          |								ТОГДА 0
	                          |							ИНАЧЕ ВЫРАЗИТЬ(СУММА(СП_ЗаданияНаПодборОбороты.КоличествоФактОборот) / СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент - 0.5 КАК ЧИСЛО(13, 0))
	                          |						КОНЕЦ
	                          |				КОНЕЦ КАК ЦелыеПоддоныФакт,
	                          |				СУММА(ЕСТЬNULL(ПТЛ_ЗаданияНаПеревозкуОбороты.КоличествоПаллетоМестПланОборот, 0)) КАК ПаллетМестаПлан,
	                          |				СУММА(ПТЛ_ЗаданияНаПеревозкуОбороты.КоличествоПаллетоМестФактОборот) КАК ПаллетМестаФакт,
	                          |				СУММА(СП_ЗаданияНаПодборОбороты.ВесБруттоПланОборот) КАК ВесБруттоПлан,
	                          |				СУММА(СП_ЗаданияНаПодборОбороты.ВесБруттоФактОборот) КАК ВесБруттоФакт,
	                          |				ВЫБОР
	                          |					КОГДА СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0
	                          |						ТОГДА 0
	                          |					ИНАЧЕ ВЫБОР
	                          |							КОГДА СУММА(СП_ЗаданияНаПодборОбороты.КоличествоПланОборот) = 0
	                          |								ТОГДА 0
	                          |							ИНАЧЕ СУММА(СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Вес) / 1000 * (ВЫРАЗИТЬ(СУММА(СП_ЗаданияНаПодборОбороты.КоличествоПланОборот) / СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент - 0.5 КАК ЧИСЛО(13, 0)))
	                          |						КОНЕЦ
	                          |				КОНЕЦ КАК ВесЦелыхПоддоновПлан,
	                          |				ВЫБОР
	                          |					КОГДА СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент = 0
	                          |						ТОГДА 0
	                          |					ИНАЧЕ ВЫБОР
	                          |							КОГДА СУММА(СП_ЗаданияНаПодборОбороты.КоличествоФактОборот) = 0
	                          |								ТОГДА 0
	                          |							ИНАЧЕ СУММА(СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Вес) / 1000 * (ВЫРАЗИТЬ(СУММА(СП_ЗаданияНаПодборОбороты.КоличествоФактОборот) / СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент - 0.5 КАК ЧИСЛО(13, 0)))
	                          |						КОНЕЦ
	                          |				КОНЕЦ КАК ВесЦелыхПоддоновФакт,
	                          |				СУММА(СП_ЗаданияНаПодборОбороты.ВесБруттоПланОборот) КАК ВесВсехПоддоновПлан,
	                          |				СУММА(СП_ЗаданияНаПодборОбороты.ВесБруттоФактОборот) КАК ВесВсехПоддоновФакт
	                          |			ИЗ
	                          |				РегистрНакопления.СП_ЗаданияНаПодбор.Обороты(, , , ) КАК СП_ЗаданияНаПодборОбороты
	                          |					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПТЛ_ЗаданияНаПеревозку.Обороты(, , , ) КАК ПТЛ_ЗаданияНаПеревозкуОбороты
	                          |					ПО СП_ЗаданияНаПодборОбороты.ЗаданиеНаПодбор = ПТЛ_ЗаданияНаПеревозкуОбороты.ЗаданиеНаПодбор
	                          |			
	                          |			СГРУППИРОВАТЬ ПО
	                          |				СП_ЗаданияНаПодборОбороты.ЗаданиеНаПодбор,
	                          |				СП_ЗаданияНаПодборОбороты.Номенклатура,
	                          |				СП_ЗаданияНаПодборОбороты.Номенклатура.НСИ_ЕдиницаИзмеренияПаллет.Коэффициент) КАК ВложенныйЗапрос
	                          |		
	                          |		СГРУППИРОВАТЬ ПО
	                          |			ВложенныйЗапрос.ЗаданиеНаПодбор) КАК ВложенныйЗапрос
	                          |		ПО ПТЛ_ПланДоставки.ЗаданиеНаПодбор = ВложенныйЗапрос.ЗаданиеНаПодбор
	                          |ГДЕ
	                          |	ПТЛ_ПланДоставки.ДатаОтгрузки МЕЖДУ &ДатаНачала И &ДатаОкончания
	                          |	И ПТЛ_ПланДоставки.Исключено = ЛОЖЬ
							  //Blik 060217 62038 н
							  |	И ПТЛ_ПланДоставки.ПланДоставки.ВидОперации = Значение(перечисление.ПРГ_ВидыОперацийДокументаПланДоставки.ДоставкаГП)
							  //Blik 060217 62038 к
	                          |{ГДЕ
	                          |	ПТЛ_ПланДоставки.Отделение.*,
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПеревозку.Регион.* КАК РегионДоставки,
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПеревозку.ГородДоставки.* КАК ГородДоставки,
							  | ПТЛ_ПланДоставки.ЗаданиеНаПодбор.Склад.* КАК Склад}
	                          |
	                          |СГРУППИРОВАТЬ ПО
	                          |	ПТЛ_ПланДоставки.Рейс,
	                          |	ПТЛ_ПланДоставки.ДатаОтгрузки,
	                          |	ПТЛ_ПланДоставки.Отделение,
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПеревозку,
	                          |	ПТЛ_ПланДоставки.ПланДоставки,
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПодбор,
	                          |	ПТЛ_ПланДоставки.Маршрут,
	                          |	ПТЛ_ПланДоставки.ПриоритетОтгрузки,
	                          |	ПТЛ_ПланДоставки.ВремяПодачиТС,
	                          |	ПТЛ_ПланДоставки.ТЭК,
	                          |	ПТЛ_ПланДоставки.Водитель,
	                          |	ПТЛ_ПланДоставки.ТранспортноеСредство,
/// Кунов О.В., 26.10.2016 - 58421
							  | ПТЛ_ПланДоставки.Коментарий,
///
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПеревозку.Регион,
	                          |	ПТЛ_ПланДоставки.ЗаданиеНаПеревозку.ГородДоставки,
	                          |	ПТЛ_ПланДоставки.ДатаДоставки
	                          |
	                          |УПОРЯДОЧИТЬ ПО
	                          |	ДатаОтгрузки,
	                          |	Рейс";
	
	
	ПостроительОтчета.Параметры.Вставить("ДатаНачала");
	ПостроительОтчета.Параметры.Вставить("ДатаОкончания");
	
	ПостроительОтчета.Отбор.Добавить("Отделение");
	ПостроительОтчета.Отбор.Добавить("РегионДоставки");
	ПостроительОтчета.Отбор.Добавить("ГородДоставки");
	ПостроительОтчета.Отбор.Добавить("Склад");  //Blik 150315 50187 добавлен отбор по складу
	//	
	ПостроительОтчета.Отбор.Найти("РегионДоставки").Представление="Регион доставки";
	ПостроительОтчета.Отбор.Найти("ГородДоставки").Представление="Город доставки";
		
КонецПроцедуры

Процедура ОчиститьПараметрыОбласти(Область)
	
	Для Индекс=0 По Область.Параметры.Количество()-1 Цикл
		Область.Параметры.Установить(Индекс,"");
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьТаблицуРеализаций(МассивЗаданийНаСборку)
	
	Запрос=Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.СП_ЗаданиеНаПодбор КАК ЗаданиеНаПодбор
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Проведен
	|	И РеализацияТоваровУслуг.СП_ЗаданиеНаПодбор В(&МассивЗаданийНаСборку)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка,
	|	ПеремещениеТоваров.СП_ЗаданиеНаПодбор
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Проведен
	|	И ПеремещениеТоваров.СП_ЗаданиеНаПодбор В(&МассивЗаданийНаСборку)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТребованиеНакладная.Ссылка,
	|	ТребованиеНакладная.СП_ЗаданиеНаПодбор
	|ИЗ
	|	Документ.ТребованиеНакладная КАК ТребованиеНакладная
	|ГДЕ
	|	ТребованиеНакладная.Проведен
	|	И ТребованиеНакладная.СП_ЗаданиеНаПодбор В(&МассивЗаданийНаСборку)";
	Запрос.УстановитьПараметр("МассивЗаданийНаСборку",МассивЗаданийНаСборку);
	ТаблицаЗапроса=Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаЗапроса;
	
КонецФункции

Функция ПолучитьНомераРеализацийТоваровУслуг(ЗаданиеНаПодбор,ТаблицаРеализаций)

	НомераРеализацийТоваровУслуг="";
	НайденныеСтроки = ТаблицаРеализаций.НайтиСтроки(Новый Структура("ЗаданиеНаПодбор",ЗаданиеНаПодбор));
	Для каждого Строка Из НайденныеСтроки Цикл
		НомераРеализацийТоваровУслуг=НомераРеализацийТоваровУслуг+СокрЛП(Строка.Ссылка.Номер)+", ";
	КонецЦикла;
	НомераРеализацийТоваровУслуг=Лев(НомераРеализацийТоваровУслуг,СтрДлина(НомераРеализацийТоваровУслуг)-2);
	Возврат НомераРеализацийТоваровУслуг;

КонецФункции

Процедура ЗаполнитьПараметрыИзЗаданияНаПеревозку(Область,ЗаданиеНаПеревозку)
	
	Область.Параметры.КонтрагентКод                = ЗаданиеНаПеревозку.Получатель.Код;
	Область.Параметры.Контрагент                   = ЗаданиеНаПеревозку.Получатель;
	Область.Параметры.НомерСклада                  = ЗаданиеНаПеревозку.Склад.Код;
	//Область.Параметры.Примечание                   = СокрЛП(ЗаданиеНаПеревозку.Заказ.КП_КомментарийКОтгрузке);
	Область.Параметры.НаправлениеПеревозки         = ЗаданиеНаПеревозку.ВидОперации;
	Область.Параметры.Условие                      = ЗаданиеНаПеревозку.УсловиеПоставки;
	Область.Параметры.Склад                        = ЗаданиеНаПеревозку.Склад;
	Область.Параметры.ДатаДоставки = ЗаданиеНаПеревозку.ДатаДоставкиПлан;
	
	Область.Параметры.АдресДоставки = СокрЛП(ЗаданиеНаПеревозку.АдресПоставки);
	Область.Параметры.РегионДоставки = ЗаданиеНаПеревозку.Регион;
	Область.Параметры.ГородДоставки = ЗаданиеНаПеревозку.ГородДоставки;
		
	//++ Spl_Апроф 26.05.2015 (k.russkih@a-prof.ru)
	Область.Параметры.ДатаЗаданияНаПеревозку = Формат(ЗаданиеНаПеревозку.Дата, "ДФ=dd.MM.yyyy");
	Область.Параметры.ВремяЗаданияНаПеревозку = Формат(ЗаданиеНаПеревозку.Дата, "ДФ=HH:mm");
	//-- Spl_Апроф
	
КонецПроцедуры

Процедура Сформировать(ТабличныйДокумент) Экспорт
	
	Если СортироватьПоДатам Тогда
		
		времТЗ = Новый ТаблицаЗначений;
		времТЗ.Колонки.Добавить("Рейс");
		времТЗ.Колонки.Добавить("ДатаЗаданияНаПеревозку");
		времТЗ.Колонки.Добавить("ВремяЗаданияНаПеревозку");
		времТЗ.Колонки.Добавить("ДатаОтгрузки");
		времТЗ.Колонки.Добавить("Приоритет");
		времТЗ.Колонки.Добавить("ВремяПодачиТС");
		времТЗ.Колонки.Добавить("Вес");
		времТЗ.Колонки.Добавить("Объем");
		времТЗ.Колонки.Добавить("КоличествоМест");
		времТЗ.Колонки.Добавить("КоличествоПаллетоМест");
		времТЗ.Колонки.Добавить("ВесЦелыхПаллет");
		времТЗ.Колонки.Добавить("ВесНаборныхПаллет");
		времТЗ.Колонки.Добавить("КоличествоПозиций");
		времТЗ.Колонки.Добавить("НомераЗаданийНаСборку");
		времТЗ.Колонки.Добавить("ГородДоставки");
		времТЗ.Колонки.Добавить("Контрагент");
		времТЗ.Колонки.Добавить("НомераРеализацийТоваровУслуг");
		времТЗ.Колонки.Добавить("ТЭК");
		времТЗ.Колонки.Добавить("Водитель");
		времТЗ.Колонки.Добавить("ТранспортноеСредство");
		времТЗ.Колонки.Добавить("ДатаВремяПолученияДокументов");
		времТЗ.Колонки.Добавить("ДатаВремяВъезда");
		времТЗ.Колонки.Добавить("ДатаВремяВыезда");
		времТЗ.Колонки.Добавить("Комментарий");
		времТЗ.Колонки.Добавить("ПриоритетСортировки");
		
	КонецЕсли;
	
	
	ТабличныйДокумент.Очистить();
	
	ПостроительОтчета.Параметры.ДатаНачала=НачалоДня(ДатаНачала);
	ПостроительОтчета.Параметры.ДатаОкончания=КонецДня(ДатаОкончания);
	ПостроительОтчета.Выполнить();
	ТаблицаЗапроса = ПостроительОтчета.Результат.Выгрузить();
	Если ТаблицаЗапроса.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРеализаций = ПолучитьТаблицуРеализаций(ТаблицаЗапроса.ВыгрузитьКолонку("ЗаданиеНаПодбор"));
	
	Если ВыводитьЗаданияНаСборку Тогда
		Макет = ПолучитьМакет("Макет");
	Иначе
		Макет = ПолучитьМакет("Рейсы");
	КонецЕсли;
			
	СтруктураОбластей=Новый Структура;
	Для каждого Область Из Макет.Области Цикл
		СтруктураОбластей.Вставить(Область.Имя,Макет.ПолучитьОбласть(Область.Имя));		
	КонецЦикла;
	
	СтруктураОбластей.Заголовок.Параметры.ПредставлениеПериода=ПредставлениеПериода(НачалоДня(ДатаНачала),КонецДня(ДатаОкончания));
	ТабличныйДокумент.Вывести(СтруктураОбластей.Заголовок);
	ТабличныйДокумент.Вывести(СтруктураОбластей.Шапка);
	
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	
	//рейсы
	/// Кунов О.В., 26.10.2016 - 58421
	ТаблицаРейсов=ТаблицаЗапроса.Скопировать(,"Рейс,ДатаОтгрузки,Приоритет,ВремяПодачиТС,ТЭК,Водитель,ТранспортноеСредство,Вес,Объем,КоличествоМест,КоличествоПаллетоМест,КоличествоПозиций, ВесНаборныхПаллет, ВесЦелыхПаллет, КоличествоЦелыхПаллет, КоличествоНаборныхУпаковок, Коментарий");
	ТаблицаРейсов.Свернуть("Рейс,ДатаОтгрузки,Приоритет,ВремяПодачиТС,ТЭК,Водитель,ТранспортноеСредство,Коментарий","Вес,Объем,КоличествоМест,КоличествоПаллетоМест,КоличествоПозиций, ВесНаборныхПаллет, ВесЦелыхПаллет, КоличествоЦелыхПаллет, КоличествоНаборныхУпаковок");
	///	
	ТаблицаРейсов.Сортировать("ДатаОтгрузки, Приоритет, ВремяПодачиТС,Рейс");  
	
	Для каждого СтрокаРейса Из ТаблицаРейсов Цикл
		
		Область=СтруктураОбластей.СтрокаРейс;
		ОчиститьПараметрыОбласти(Область);
		//Blik 151116 57613 н
		Если не ВыводитьЗаданияНаСборку Тогда
			ОбластьКР = СтруктураОбластей.СтрокаРейсКр;
			ОбластьЖл = СтруктураОбластей.СтрокаРейсЖ;
		КонецЕсли;
		//Blik 151116 57613 к
		Область.Параметры.Заполнить(СтрокаРейса);
		Область.Параметры.Рейс = ОбщегоНазначения.ПолучитьНомерНаПечать(СтрокаРейса.Рейс.ПланДоставки)+"/"+СокрЛП(СтрокаРейса.Рейс.КлючСтроки);
		
		Если ВыводитьЗаданияНаСборку Тогда
			ТабличныйДокумент.Вывести(Область,0);
		КонецЕсли;
		
		//таблица рейса
		НайденныеСтроки=ТаблицаЗапроса.НайтиСтроки(Новый Структура("Рейс",СтрокаРейса.Рейс));
		ТаблицаРейса=ТаблицаЗапроса.Скопировать(НайденныеСтроки);
		
		//задания на перевозку
		ТаблицаЗаданийНаПеревозку=ТаблицаРейса.Скопировать(,"ЗаданиеНаПодбор,ЗаданиеНаПеревозку,ДатаДоставки,Вес,Объем,КоличествоМест,КоличествоПаллетоМест,КоличествоПозиций, ВесНаборныхПаллет, ВесЦелыхПаллет, КоличествоЦелыхПаллет, КоличествоНаборныхУпаковок");
		ТаблицаЗаданийНаПеревозку.Свернуть("ЗаданиеНаПодбор,ЗаданиеНаПеревозку,ДатаДоставки","Вес,Объем,КоличествоМест,КоличествоПаллетоМест,КоличествоПозиций, ВесНаборныхПаллет, ВесЦелыхПаллет, КоличествоЦелыхПаллет, КоличествоНаборныхУпаковок");
		
		СтруктураНомеровДокументов = Новый Структура("НомераЗаданийНаСборку,НомераЗаданийНаПеревозку,НомераЗаказовПокупателей,НомераРеализацийТоваровУслуг","","","","");
		
		Города = "";
		Получатель = "";
		//Blik 57613 151116 н
		ЕстьДаты = Ложь;
		ДатаВыезда = Дата(1, 1, 1);
		ДатаВъезда = Дата(1, 1, 1);
		//Blik 57613 151116 к
		Для каждого СтрокаЗаданияНаСборку Из ТаблицаЗаданийНаПеревозку Цикл
			
			Если ВыводитьЗаданияНаСборку Тогда
				СтруктураНомеровДокументов = Новый Структура("НомераЗаданийНаСборку,НомераЗаданийНаПеревозку,НомераЗаказовПокупателей,НомераРеализацийТоваровУслуг","","","","");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаЗаданияНаСборку.ЗаданиеНаПодбор) Тогда 
				СтатусЗаданияНаСборку = Перечисления.СП_СтатусыЗаданияНаПодбор.Индекс(СтрокаЗаданияНаСборку.ЗаданиеНаПодбор.СтатусДокумента)+1;
				СтруктураНомеровДокументов.НомераЗаданийНаСборку=СтруктураНомеровДокументов.НомераЗаданийНаСборку+СокрЛП(СтрокаЗаданияНаСборку.ЗаданиеНаПодбор.Номер)+" С: "+СтатусЗаданияНаСборку+", ";
				СтруктураНомеровДокументов.НомераЗаказовПокупателей=СтруктураНомеровДокументов.НомераЗаказовПокупателей+СокрЛП(СтрокаЗаданияНаСборку.ЗаданиеНаПодбор.Заказ.Номер)+", ";
			Иначе
				СтатусЗаданияНаСборку = "";
				СтруктураНомеровДокументов.НомераЗаданийНаСборку=СтруктураНомеровДокументов.НомераЗаданийНаСборку+" С: "+СтатусЗаданияНаСборку+", ";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку) Тогда
				СтатусЗаданияНаСборку = Перечисления.ПТЛ_СтатусыЗаданияНаПеревозку.Индекс(СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку.СтатусДокумента)+1;
				СтруктураНомеровДокументов.НомераЗаданийНаПеревозку = СтруктураНомеровДокументов.НомераЗаданийНаПеревозку+СокрЛП(СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку.Номер)+" С: "+СтатусЗаданияНаСборку+", ";
			Иначе
				СтруктураНомеровДокументов.НомераЗаданийНаПеревозку = СтруктураНомеровДокументов.НомераЗаданийНаПеревозку+" С: "+СтатусЗаданияНаСборку+", ";
			КонецЕсли;
			
			НомераРеализацийУслуг = ПолучитьНомераРеализацийТоваровУслуг(СтрокаЗаданияНаСборку.ЗаданиеНаПодбор,ТаблицаРеализаций);
			СтруктураНомеровДокументов.НомераРеализацийТоваровУслуг = СтруктураНомеровДокументов.НомераРеализацийТоваровУслуг+?(НомераРеализацийУслуг="","",НомераРеализацийУслуг+", ");
			
			Если ВыводитьЗаданияНаСборку Тогда 
				
				Для каждого КлючЗначение Из СтруктураНомеровДокументов Цикл
					СтруктураНомеровДокументов[КлючЗначение.Ключ]=Лев(КлючЗначение.Значение,СтрДлина(КлючЗначение.Значение)-2);
				КонецЦикла;
				
				Область=СтруктураОбластей.СтрокаЗаданиеНаПеревозку;
				ОчиститьПараметрыОбласти(Область);
				Область.Параметры.Заполнить(СтрокаЗаданияНаСборку);
				
				Область.Параметры.НомераЗаданийНаСборку        = СтруктураНомеровДокументов.НомераЗаданийНаСборку;
				//Область.Параметры.НомераЗаданийНаПеревозку        = СтруктураНомеровДокументов.НомераЗаданийНаПеревозку;
				//Область.Параметры.НомераЗаказовПокупателей     = СтруктураНомеровДокументов.НомераЗаказовПокупателей;
				Область.Параметры.НомераРеализацийТоваровУслуг = СтруктураНомеровДокументов.НомераРеализацийТоваровУслуг;
				ЗаполнитьПараметрыИзЗаданияНаПеревозку(Область,СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку);
				
				//Если ВыводитьАдресДоставки Тогда
				//	Область.Параметры.АдресДоставки = СокрЛП(СтрокаЗаданияНаПеревозку.ЗаданиеНаПеревозку.АдресДоставкиПредставление);
				//КонецЕсли;
				
				ТабличныйДокумент.Вывести(Область,1);
			Иначе
				Если Не СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку = Неопределено и Найти(Города,СокрЛП(СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку.ГородДоставки)+";")=0 тогда
					Города = Города + СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку.ГородДоставки + "; "
				КонецЕсли;
				Если Не СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку = Неопределено и Найти(Получатель,СокрЛП(СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку.Получатель) +"(" + Формат(СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку.ДатаДоставкиПлан,"ДФ=dd.MM.yyyy") + ")" +";")=0 тогда
					Получатель = Получатель + СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку.Получатель +"(" + Формат(СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку.ДатаДоставкиПлан,"ДФ=dd.MM.yyyy") + ")" + "; "
				КонецЕсли; 				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ВыводитьЗаданияНаСборку Тогда
			
			Область.Параметры.НомераЗаданийНаСборку        = СтруктураНомеровДокументов.НомераЗаданийНаСборку;
			//Область.Параметры.НомераЗаданийНаПеревозку        = СтруктураНомеровДокументов.НомераЗаданийНаПеревозку;
			//Область.Параметры.НомераЗаказовПокупателей     = СтруктураНомеровДокументов.НомераЗаказовПокупателей;
			Область.Параметры.НомераРеализацийТоваровУслуг = СтруктураНомеровДокументов.НомераРеализацийТоваровУслуг;
			//ЗаполнитьПараметрыИзЗаданияНаПеревозку(Область,СтрокаЗаданияНаПеревозку.ЗаданиеНаПеревозку);
			
			Область.Параметры.ГородДоставки = Города;
			Область.Параметры.Контрагент = Получатель;
			
			/// Кунов О.В., 25.10.2016 - 58421
			Область.Параметры.Комментарий = СтрокаРейса.Коментарий;
			///
			
			ЖурналУчетаАМ = АП_ОбщегоНазначенияСервер.ВернутьЖурналУчетаАМ(СтрокаЗаданияНаСборку.ЗаданиеНаПеревозку);
			Если ЗначениеЗаполнено(ЖурналУчетаАМ) Тогда
				Область.Параметры.ДатаВремяПолученияДокументов 	= ЖурналУчетаАМ.ДатаПолученияДокументов;
				Область.Параметры.ДатаВремяВъезда 				= ЖурналУчетаАМ.ДатаВъезда;
				Область.Параметры.ДатаВремяВыезда				= ЖурналУчетаАМ.ДатаВыезда;
				/// Кунов О.В., 25.10.2016 - 58421
				//Область.Параметры.Комментарий					= ЖурналУчетаАМ.Коментарий;
				///
				
				//Blik 57613 151116 н
				ЕстьДаты = Истина;
				ДатаВыезда = ЖурналУчетаАМ.ДатаВыезда;
				ДатаВъезда = ЖурналУчетаАМ.ДатаВъезда;
				//Blik 57613 151116 к
				
			КонецЕсли;
			
			//Blik 57613 151116 н
			Если ЕстьДаты Тогда
				Если ДатаВыезда = Дата(1,1,1) и ДатаВъезда = Дата(1,1,1) тогда
					// <- Шевченков 20170822 #69270
					Если СортироватьПоДатам Тогда
						нСтрока = времТЗ.Добавить();
						ЗаполнитьЗначенияСвойств(нСтрока, Область.Параметры);
						нСтрока.ПриоритетСортировки = 1;
					Иначе
						ТабличныйДокумент.Вывести(Область,0);
					КонецЕсли;					
					// ->					
				Иначе 
					Если не ДатаВыезда = Дата(1,1,1) и не ДатаВъезда = Дата(1,1,1) тогда//тут красное
						// <- Шевченков 20170822 #69270
						Если СортироватьПоДатам Тогда						
							нСтрока = времТЗ.Добавить();
							ЗаполнитьЗначенияСвойств(нСтрока, Область.Параметры);
							нСтрока.ПриоритетСортировки = 3;
						Иначе
							ОбластьКР.Параметры.Заполнить(Область.Параметры);
							ТабличныйДокумент.Вывести(ОбластьКР,0);
						КонецЕсли;					
						// ->
						//ОбластьКР.Параметры.Заполнить(Область.Параметры);
						//ТабличныйДокумент.Вывести(ОбластьКР,0);
					ИначеЕсли ДатаВыезда = Дата(1,1,1) и не ДатаВъезда = Дата(1,1,1) тогда //тут желтые
						// <- Шевченков 20170822 #69270
						Если СортироватьПоДатам Тогда						
							нСтрока = времТЗ.Добавить();
							ЗаполнитьЗначенияСвойств(нСтрока, Область.Параметры);
							нСтрока.ПриоритетСортировки = 2;
						Иначе
							ОбластьЖл.Параметры.Заполнить(Область.Параметры);
							ТабличныйДокумент.Вывести(ОбластьЖл,0);
						КонецЕсли;					
						// ->
						//ОбластьЖл.Параметры.Заполнить(Область.Параметры);
						//ТабличныйДокумент.Вывести(ОбластьЖл,0);
					Иначе
						// <- Шевченков 20170822 #69270
						Если СортироватьПоДатам Тогда						
							нСтрока = времТЗ.Добавить();
							ЗаполнитьЗначенияСвойств(нСтрока, Область.Параметры);
							нСтрока.ПриоритетСортировки = 1;
						Иначе
							ТабличныйДокумент.Вывести(Область,0);
						КонецЕсли;					
						// ->
						//ТабличныйДокумент.Вывести(Область,0);
					КонецЕсли;
				КонецЕсли;
			Иначе
				// <- Шевченков 20170822 #69270
				Если СортироватьПоДатам Тогда						
					нСтрока = времТЗ.Добавить();
					ЗаполнитьЗначенияСвойств(нСтрока, Область.Параметры);
					нСтрока.ПриоритетСортировки = 1;
				Иначе
					ТабличныйДокумент.Вывести(Область,0);
				КонецЕсли;					
				// ->
				//ТабличныйДокумент.Вывести(Область,0);
			КонецЕсли;
			//Blik 57613 151116 к

		КонецЕсли;

	КонецЦикла;
	
	Если СортироватьПоДатам И НЕ ВыводитьЗаданияНаСборку Тогда
		
		времТЗ.Сортировать("ПриоритетСортировки Убыв");
		
		Для Каждого ТекСтрока Из времТЗ Цикл
			
			Если ТекСтрока.ПриоритетСортировки = 3 Тогда
				ОбластьКР.Параметры.Заполнить(ТекСтрока);
				ТабличныйДокумент.Вывести(ОбластьКР,0);
			ИначеЕсли ТекСтрока.ПриоритетСортировки = 2 Тогда
				ОбластьЖл.Параметры.Заполнить(ТекСтрока);
				ТабличныйДокумент.Вывести(ОбластьЖл,0);
			Иначе
				Область.Параметры.Заполнить(ТекСтрока);
				ТабличныйДокумент.Вывести(Область,0);
			КонецЕсли;
			
		КонецЦикла;
				
	КонецЕсли;	
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	
	//итоги
	ТаблицаРейсов.Свернуть("","Вес,Объем,КоличествоМест,КоличествоПаллетоМест,КоличествоПозиций, ВесНаборныхПаллет, ВесЦелыхПаллет, КоличествоЦелыхПаллет, КоличествоНаборныхУпаковок");
	СтруктураОбластей.Итоги.Параметры.Заполнить(ТаблицаРейсов[0]);
	ТабличныйДокумент.Вывести(СтруктураОбластей.Итоги);
			
КонецПроцедуры













































