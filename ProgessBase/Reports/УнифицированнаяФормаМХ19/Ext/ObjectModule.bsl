
Перем мИспользоватьРА;
Перем мДатаНачалаИспользованияРА;
Перем мИспользоватьАналитикуСкладПриРА;
Перем мИспользоватьАналитикуСклад;
Перем мКоличествоКолонок Экспорт;

#Если Клиент Тогда

// Процедура формирования печатной формы отчета
//
Процедура ОбновитьОтчет(ТабДокумент) Экспорт
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ТабДокумент.Очистить();
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	РезультатЗапроса = ПолучитьРезультатЗапросаОстаткиТоваров();
	
	Макет 	= ПолучитьОбщийМакет("МХ19");
	Область = Макет.ПолучитьОбласть("ПервыйЛист");
	
	ИнфоОрг = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), "ОКПО");
	МОЛ 	= РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(
			ТекущаяДата(),
			Новый Структура("СтруктурнаяЕдиница", Склад)
			).ФизическоеЛицо;
	
	// Вывод заголовка
	Область.Параметры.Организация		= Организация;
	Область.Параметры.Склад				= Склад;
	
	Область.Параметры.ПечОрганизация	= СокрЛП(Организация);
	Область.Параметры.ПечКодОКПО		= ИнфоОрг.ОКПО;
	Область.Параметры.ПечДата			= ТекущаяДата();
	Область.Параметры.МОЛ 				= ОбщегоНазначения.ФамилияИнициалыФизЛица(МОЛ);
	
	// Получим период формирования отчета
	ПустаяДата = Дата("00010101");
	СтруктураПериод = Новый Структура;
	СтруктураПериод.Вставить(
		"ПериодПо",
		Макс(
			?(ВыводитьДанныеВКолонку1, Дата1, ПустаяДата),
			?(ВыводитьДанныеВКолонку2, Дата2, ПустаяДата),
			?(ВыводитьДанныеВКолонку3, Дата3, ПустаяДата)));
	СтруктураПериод.Вставить(
		"ПериодС",
		Мин(
			?(ВыводитьДанныеВКолонку1, Дата1, СтруктураПериод.ПериодПо),
			?(ВыводитьДанныеВКолонку2, Дата2, СтруктураПериод.ПериодПо),
			?(ВыводитьДанныеВКолонку3, Дата3, СтруктураПериод.ПериодПо)));
	
	Если СтруктураПериод.ПериодС <> СтруктураПериод.ПериодПо Тогда
		// Если заполняем несколько колонок, то ПериодС отобразим в печатной форме как следующий день
		// Например, если Дата1 = 31.12.11, Дата2 = 31.01.12, то фактически период отчета это 01.01.12-31.01.12
		СтруктураПериод.ПериодС = КонецДня(СтруктураПериод.ПериодС) + 1;
	КонецЕсли;
	
	Область.Параметры.Заполнить(СтруктураПериод);
	
	ТабДокумент.Вывести(Область);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Вывод шапки таблицы
	ОбластьТабШапка = Макет.ПолучитьОбласть("ТабШапка");
	Для НомерКолонки = 1 По мКоличествоКолонок Цикл
		Если НЕ ЭтотОбъект["ВыводитьДанныеВКолонку" + СокрЛП(НомерКолонки)] Тогда
			Продолжить;
		КонецЕсли;
		ИмяКолонкиДата = "Дата" + СокрЛП(НомерКолонки);
		ОбластьТабШапка.Параметры[ИмяКолонкиДата] = Формат(ЭтотОбъект[ИмяКолонкиДата], "ДФ='dd MMM yyyy'");
	КонецЦикла;
	
	ТабДокумент.Вывести(ОбластьТабШапка);
	
	// Вывод табличной части
	Область = Макет.ПолучитьОбласть("ТабСтрока");
	
	МассивОбластей = Новый Массив;
	МассивОбластей.Добавить(Область);
	МассивОбластей.Добавить(Макет.ПолучитьОбласть("ТабИтог"));
	МассивОбластей.Добавить(Макет.ПолучитьОбласть("Подвал"));
	
	ОбходИтого = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ОбходИтого.Следующий() Тогда
		
		Обход = ОбходИтого.Выбрать();
		НомПП = 0;
		
		Пока Обход.Следующий() Цикл
			
			НомПП = НомПП + 1;
			Область.Параметры.ПечНомПП = Строка(НомПП);
			
			Область.Параметры.Заполнить(Обход);
			
			Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивОбластей) Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьТабШапка);
			КонецЕсли;
			
			ТабДокумент.Вывести(Область);
			
		КонецЦикла;
		
		Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивОбластей, Ложь) Цикл
			Область = Макет.ПолучитьОбласть("ПустТаб");
			ТабДокумент.Вывести(Область);
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("ТабИтог");
		Область.Параметры.Заполнить(ОбходИтого);
		
		ТабДокумент.Вывести(Область);
		
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Подвал");
	ТабДокумент.Вывести(Область);
	
КонецПроцедуры // ОбновитьОтчет()

#КонецЕсли

Функция ПолучитьРезультатЗапросаОстаткиТоваров()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Граница1",	 		Новый Граница(КонецДня(Дата1), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Граница2",	 		Новый Граница(КонецДня(Дата2), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Граница3",	 		Новый Граница(КонецДня(Дата3), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Дата1",		 		Дата1);
	Запрос.УстановитьПараметр("Дата2",		 		Дата2);
	Запрос.УстановитьПараметр("Дата3",		 		Дата3);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Склад",		 		Склад);
	Запрос.УстановитьПараметр("ОтборПоСкладуПриРА", мИспользоватьАналитикуСкладПриРА);
	Запрос.УстановитьПараметр("ОтборПоСкладу",		мИспользоватьАналитикуСклад);
	ТекстЗапроса = "";
	
	Если мИспользоватьРА И Макс(Дата1, Дата2, Дата3) >= мДатаНачалаИспользованияРА Тогда
		
		// Если хоть одна дата приходится на период использования режима расширенной аналитики учета затрат,
		// то необходимо сформировать временную таблицу для отбора по аналитике вида учета
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	АналитикаВидаУчета.Ссылка КАК Ссылка
		|	
		|ПОМЕСТИТЬ ОтборАналитикаВидаУчета
		|ИЗ
		|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
		|ГДЕ 
		|	АналитикаВидаУчета.Организация = &Организация
		|	И (&ОтборПоСкладуПриРА = ЛОЖЬ ИЛИ АналитикаВидаУчета.Склад = &Склад)
		|;
		|///////////////////////////////////////////////////////";
		
	КонецЕсли;
	
	// Создадим три временные таблицы ОстаткиТоваровN
	Для НомерКолонки = 1 По мКоличествоКолонок Цикл
		
		Если НЕ ЭтотОбъект["ВыводитьДанныеВКолонку" + СокрЛП(НомерКолонки)] Тогда
			
			// Эта колонку заполнять не надо - создадим пустую временную таблицу
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
			|	0 КАК Количество,
			|	0 КАК Сумма
			|	
			|ПОМЕСТИТЬ ОстаткиТоваров" + СокрЛП(НомерКолонки) + "
			|;
			|///////////////////////////////////////////////////////";
			
			Продолжить;
			
		КонецЕсли;
		
		// Из регистра ТоварыОрганизаций получим ВТ с остатками номенклатуры по количеству
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ОстаткиТоварыОрганизаций.Номенклатура		КАК Номенклатура,
		|	ОстаткиТоварыОрганизаций.КоличествоОстаток 	КАК Количество
		|	
		|ПОМЕСТИТЬ ОстаткиТоварыОрганизаций
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			&Граница" + СокрЛП(НомерКолонки) + ",
		|			Организация = &Организация
		|				И Склад = &Склад
		|	) КАК ОстаткиТоварыОрганизаций
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|///////////////////////////////////////////////////////";
		
		Если мИспользоватьРА И ЭтотОбъект["Дата" + СокрЛП(НомерКолонки)] >= мДатаНачалаИспользованияРА Тогда
			
			// Выберем данные из регистров при использовании режима расширенной аналитики учета затрат
			
			// 1. Из регистра АналитикаУчетаЗатрат получим ВТ для отбора по номенклатуре 
			// 2. Из регистра УчетЗатратРегл получим ВТ с данными для расчета цены по ключам аналитики учета затрат
			// 3. Из ВТ п.2 получим ВТ, в которой заменим аналитику учета затрат на номенклатуру
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	АналитикаУчетаЗатрат.Ссылка  КАК Ссылка,
			|	АналитикаУчетаЗатрат.Затрата КАК Номенклатура
			|	
			|ПОМЕСТИТЬ ОтборАналитикаУчетаЗатрат
			|ИЗ
			|	РегистрСведений.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатрат
			|
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|	ОстаткиТоварыОрганизаций КАК ОстаткиТоварыОрганизаций
			|		ПО АналитикаУчетаЗатрат.Затрата = ОстаткиТоварыОрганизаций.Номенклатура
			|;
			|///////////////////////////////////////////////////////
			|
			|ВЫБРАТЬ
			|	УчетЗатратОстаткиИОбороты.АналитикаУчетаЗатрат,
			|	УчетЗатратОстаткиИОбороты.КоличествоНачальныйОстаток + УчетЗатратОстаткиИОбороты.КоличествоПриход КАК Количество,
			|	УчетЗатратОстаткиИОбороты.СтоимостьНачальныйОстаток + УчетЗатратОстаткиИОбороты.СтоимостьПриход КАК Сумма
			|	
			|ПОМЕСТИТЬ ОстаткиУчетЗатрат
			|ИЗ
			|	РегистрНакопления.УчетЗатратРегл.ОстаткиИОбороты(
			|		НАЧАЛОПЕРИОДА(&Дата" + СокрЛП(НомерКолонки) + ", МЕСЯЦ),
			|		КОНЕЦПЕРИОДА(&Дата" + СокрЛП(НомерКолонки) + ", МЕСЯЦ),
			|		,
			|		ДвиженияИГраницыПериода,
			|		АналитикаВидаУчета В (ВЫБРАТЬ ОтборАналитикаВидаУчета.Ссылка ИЗ ОтборАналитикаВидаУчета)
			|			И АналитикаУчетаЗатрат В (ВЫБРАТЬ ОтборАналитикаУчетаЗатрат.Ссылка ИЗ ОтборАналитикаУчетаЗатрат)
			|	) КАК УчетЗатратОстаткиИОбороты
			|ГДЕ
			|	(УчетЗатратОстаткиИОбороты.КоличествоНачальныйОстаток + УчетЗатратОстаткиИОбороты.КоличествоПриход) <> 0
			|;
			|///////////////////////////////////////////////////////
			|
			|ВЫБРАТЬ
			|	ОтборАналитикаУчетаЗатрат.Номенклатура 	КАК Номенклатура,
			|	СУММА(ОстаткиУчетЗатрат.Количество) 	КАК Количество,
			|	СУММА(ОстаткиУчетЗатрат.Сумма) 			КАК Сумма
			|	
			|ПОМЕСТИТЬ ДанныеДляРасчетаЦенНоменклатуры
			|ИЗ
			|	ОстаткиУчетЗатрат КАК ОстаткиУчетЗатрат
			|
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|	ОтборАналитикаУчетаЗатрат КАК ОтборАналитикаУчетаЗатрат
			|		ПО ОстаткиУчетЗатрат.АналитикаУчетаЗатрат = ОтборАналитикаУчетаЗатрат.Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтборАналитикаУчетаЗатрат.Номенклатура
			|
			|ИМЕЮЩИЕ
			|	СУММА(ОстаткиУчетЗатрат.Количество) <> 0
			|	И СУММА(ОстаткиУчетЗатрат.Сумма) <> 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|///////////////////////////////////////////////////////
			|
			|УНИЧТОЖИТЬ ОстаткиУчетЗатрат
			|;
			|///////////////////////////////////////////////////////
			|
			|УНИЧТОЖИТЬ ОтборАналитикаУчетаЗатрат
			|;
			|///////////////////////////////////////////////////////";
			
		Иначе
			
			// Выберем данные из регистров при использовании традиционного режима учета затрат
			
			// Из регистра ПартииТоваровНаСкладахБухгалтерскийУчет получим ВТ с данными для расчета цены
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	РегистрПартииТоваров.Номенклатура 				КАК Номенклатура,
			|	СУММА(РегистрПартииТоваров.КоличествоОстаток)	КАК Количество,
			|	СУММА(РегистрПартииТоваров.СтоимостьОстаток) 	КАК Сумма
			|	
			|ПОМЕСТИТЬ ДанныеДляРасчетаЦенНоменклатуры
			|ИЗ
			|	РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет.Остатки(
			|		&Граница" + СокрЛП(НомерКолонки) + ",
			|		Организация = &Организация 
			|			И Номенклатура В (ВЫБРАТЬ ОстаткиТоварыОрганизаций.Номенклатура ИЗ ОстаткиТоварыОрганизаций)
			|			И (&ОтборПоСкладу = ЛОЖЬ ИЛИ Склад = &Склад)
			|	) КАК РегистрПартииТоваров
			|
			|СГРУППИРОВАТЬ ПО
			|	РегистрПартииТоваров.Номенклатура
			|
			|ИМЕЮЩИЕ
			|	СУММА(РегистрПартииТоваров.КоличествоОстаток) <> 0
			|	И СУММА(РегистрПартииТоваров.СтоимостьОстаток) <> 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|///////////////////////////////////////////////////////";
			
		КонецЕсли;
		
		// Из ВТ с остатками по количеству и ВТ с ценами получим ВТ с остатками номенклатуры по количеству и сумме
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ОстаткиТоварыОрганизаций.Номенклатура 									КАК Номенклатура,
		|	ОстаткиТоварыОрганизаций.Количество 									КАК Количество,
		|	ВЫБОР
		|		КОГДА ДанныеДляРасчетаЦенНоменклатуры.Номенклатура ЕСТЬ NULL ТОГДА
		|			0
		|		ИНАЧЕ
		|			ОстаткиТоварыОрганизаций.Количество 
		|				* ДанныеДляРасчетаЦенНоменклатуры.Сумма
		|				/ ДанныеДляРасчетаЦенНоменклатуры.Количество
		|	КОНЕЦ 																	КАК Сумма
		|	
		|ПОМЕСТИТЬ ОстаткиТоваров" + СокрЛП(НомерКолонки) + "
		|ИЗ
		|	ОстаткиТоварыОрганизаций КАК ОстаткиТоварыОрганизаций
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ДанныеДляРасчетаЦенНоменклатуры КАК ДанныеДляРасчетаЦенНоменклатуры
		|		ПО ОстаткиТоварыОрганизаций.Номенклатура = ДанныеДляРасчетаЦенНоменклатуры.Номенклатура
		|;
		|///////////////////////////////////////////////////////
		|
		|УНИЧТОЖИТЬ ДанныеДляРасчетаЦенНоменклатуры
		|;
		|///////////////////////////////////////////////////////
		|
		|УНИЧТОЖИТЬ ОстаткиТоварыОрганизаций
		|;
		|///////////////////////////////////////////////////////";
		
	КонецЦикла;
	
	// Выберем данные для формирования отчета из временных таблиц
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ОстаткиТоваров.Номенклатура														КАК Номенклатура,
	|	ОстаткиТоваров.Номенклатура.Код 												КАК ПечКод,
	|	ОстаткиТоваров.Номенклатура.Наименование 										КАК ПечНоменклатура,
	|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков 							КАК ЕдИзм,
	|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков.Наименование 				КАК ПечЕдИзм,
	|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК ПечКодЕдИзм,
	|	СУММА(ОстаткиТоваров.Количество1)												КАК Количество1,
	|	СУММА(ОстаткиТоваров.Сумма1) 													КАК Сумма1,
	|	СУММА(ОстаткиТоваров.Количество2)												КАК Количество2,
	|	СУММА(ОстаткиТоваров.Сумма2) 													КАК Сумма2,
	|	СУММА(ОстаткиТоваров.Количество3)												КАК Количество3,
	|	СУММА(ОстаткиТоваров.Сумма3) 													КАК Сумма3
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиТоваров1.Номенклатура КАК Номенклатура,
	|		ОстаткиТоваров1.Количество 	 КАК Количество1,
	|		ОстаткиТоваров1.Сумма 		 КАК Сумма1,
	|		0 							 КАК Количество2,
	|		0 							 КАК Сумма2,
	|		0 							 КАК Количество3,
	|		0 							 КАК Сумма3
	|	ИЗ
	|		ОстаткиТоваров1 КАК ОстаткиТоваров1
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ОстаткиТоваров2.Номенклатура КАК Номенклатура,
	|		0 							 КАК Количество1,
	|		0 							 КАК Сумма1,
	|		ОстаткиТоваров2.Количество 	 КАК Количество2,
	|		ОстаткиТоваров2.Сумма 		 КАК Сумма2,
	|		0 							 КАК Количество3,
	|		0 							 КАК Сумма3
	|	ИЗ
	|		ОстаткиТоваров2 КАК ОстаткиТоваров2
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ОстаткиТоваров3.Номенклатура КАК Номенклатура,
	|		0 							 КАК Количество1,
	|		0 							 КАК Сумма1,
	|		0 							 КАК Количество2,
	|		0 							 КАК Сумма2,
	|		ОстаткиТоваров3.Количество 	 КАК Количество3,
	|		ОстаткиТоваров3.Сумма 		 КАК Сумма3
	|	ИЗ
	|		ОстаткиТоваров3 КАК ОстаткиТоваров3
	|	) КАК ОстаткиТоваров
	|
	|ГДЕ
	|	ОстаткиТоваров.Номенклатура <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТоваров.Номенклатура,
	|	ОстаткиТоваров.Номенклатура.Код,
	|	ОстаткиТоваров.Номенклатура.Наименование,
	|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков,
	|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков.Наименование,
	|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОстаткиТоваров.Номенклатура.Наименование
	|
	|ИТОГИ
	|	СУММА(Количество1),
	|	СУММА(Сумма1),
	|	СУММА(Количество2),
	|	СУММА(Сумма2),
	|	СУММА(Количество3),
	|	СУММА(Сумма3)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции


Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НЕ ВыводитьДанныеВКолонку1 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Дата1");
	КонецЕсли;
	Если НЕ ВыводитьДанныеВКолонку2 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Дата2");
	КонецЕсли;
	Если НЕ ВыводитьДанныеВКолонку3 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Дата3");
	КонецЕсли;
	
	Для Каждого ИмяРеквизита Из МассивНепроверяемыхРеквизитов Цикл
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти(ИмяРеквизита));
	КонецЦикла;
	
	Если НЕ ВыводитьДанныеВКолонку1 И НЕ ВыводитьДанныеВКолонку2 И НЕ ВыводитьДанныеВКолонку3 Тогда
		ОбщегоНазначения.Сообщение("Не выбрана ни одна колонка для заполнения");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////

мКоличествоКолонок 		   = 3;

мИспользоватьРА 		   = глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат");
мДатаНачалаИспользованияРА = глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат");

мИспользоватьАналитикуСклад = глЗначениеПеременной("ВестиПартионныйУчетПоСкладамРегл");

Если мИспользоватьРА Тогда
	
	СтруктураИзмерений = Новый Структура("Склад");
	РасширеннаяАналитикаУчета.ПолучитьИспользуемыеИзмерения(СтруктураИзмерений);
	
	мИспользоватьАналитикуСкладПриРА = СтруктураИзмерений.Склад И мИспользоватьАналитикуСклад;
	
КонецЕсли;
