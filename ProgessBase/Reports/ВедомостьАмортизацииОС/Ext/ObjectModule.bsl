#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |   СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость
    |ПОМЕСТИТЬ СтоимостьОСОстаткиИОбороты
    |ИЗ
    |   РегистрНакопления.СтоимостьОС.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {(ОсновноеСредство).* КАК ОсновноеСредство}) КАК СтоимостьОСОстаткиИОбороты
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |   РегСведенияОбОС.ОсновноеСредство КАК ОсновноеСредство,
    |   РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
    |   РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость
    |ПОМЕСТИТЬ РегСведенияОбОС
    |ИЗ
    |   РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбОС
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |   МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
    |   МестонахождениеОС.МОЛ КАК МОЛ,
    |   МестонахождениеОС.Местонахождение КАК Местонахождение
    |ПОМЕСТИТЬ МестонахождениеОС
    |ИЗ
    |   РегистрСведений.МестонахождениеОС.СрезПоследних(&ДатаКон, ) КАК МестонахождениеОС
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |   СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
    |   ПРЕДСТАВЛЕНИЕ(СтоимостьОСОстаткиИОбороты.ОсновноеСредство),
    |   РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
    |   РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
    |   СтоимостьОСОстаткиИОбороты.ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
    |   РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
    |   СтоимостьОСОстаткиИОбороты.ОсновноеСредство.Код КАК ИнвентарныйНомер,
    |   МестонахождениеОС.МОЛ КАК МОЛ,
    |   МестонахождениеОС.Местонахождение КАК Подразделение
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
    |{ВЫБРАТЬ
    |   ОсновноеСредство.*,
    |   ИнвентарныйНомер,
    |   МОЛ.*,
    |   Подразделение.*,
    |   СпособНачисления,
    |   ДатаВводаВЭксплуатацию,
    |   ПервоначальнаяСтоимость,
    |   СтоимостьНачальныйОстаток,
    |   СтоимостьКонечныйОстаток,
    |   СтоимостьОборот,
    |   АмортизацияНачальныйОстаток,
    |   АмортизацияКонечныйОстаток,
    |   АмортизацияОборот,
    |   ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
    |ИЗ
    |   СтоимостьОСОстаткиИОбороты КАК СтоимостьОСОстаткиИОбороты
    |       {ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС КАК РегСостояниеОС
    |       ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСостояниеОС.ОсновноеСредство
    |           И (РегСостояниеОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВведеноВЭксплуатацию))}
    |       {ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбОС КАК РегСведенияОбОС
    |       ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСведенияОбОС.ОсновноеСредство}
    |       {ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
    |       ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство}
	|	//СОЕДИНЕНИЯ
    |{ГДЕ
    |   РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
    |   РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
    |   (СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток) КАК ОстаточнаяСтоимость,
    |   РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
    |   СтоимостьОСОстаткиИОбороты.ОсновноеСредство.Код КАК ИнвентарныйНомер,
    |   МестонахождениеОС.МОЛ.* КАК МОЛ,
    |   МестонахождениеОС.Местонахождение.* КАК Подразделение
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
    |{УПОРЯДОЧИТЬ ПО
    |   ОсновноеСредство.*,
    |   ИнвентарныйНомер,
    |   МОЛ.*,
    |   Подразделение.*,
    |   СпособНачисления,
    |   ДатаВводаВЭксплуатацию,
    |   ПервоначальнаяСтоимость,
    |   СтоимостьНачальныйОстаток,
    |   СтоимостьКонечныйОстаток,
    |   СтоимостьОборот,
    |   АмортизацияНачальныйОстаток,
    |   АмортизацияКонечныйОстаток,
    |   АмортизацияОборот,
    |   ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
    |ИТОГИ
    |   МАКСИМУМ(СпособНачисления),
    |   МАКСИМУМ(ДатаВводаВЭксплуатацию),
    |   СУММА(СтоимостьНачальныйОстаток),
    |   СУММА(СтоимостьКонечныйОстаток),
    |   СУММА(СтоимостьОборот),
    |   СУММА(АмортизацияНачальныйОстаток),
    |   СУММА(АмортизацияКонечныйОстаток),
    |   СУММА(АмортизацияОборот),
    |   СУММА(ОстаточнаяСтоимость),
    |   СУММА(ПервоначальнаяСтоимость),
    |   МАКСИМУМ(ИнвентарныйНомер),
    |   МАКСИМУМ(МОЛ)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
    |ПО
    |   ОБЩИЕ,
    |   Подразделение
    |{ИТОГИ ПО
    |   ОсновноеСредство.*,
    |   Подразделение.*,
    |   МОЛ.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СтоимостьОСОстаткиИОбороты.ОсновноеСредство" , "ОсновноеСредство","Основное средство", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ОсновныеСредства);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОсновноеСредство",       "Основное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",        "Изменение стоимости ОС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",      "Амортизация за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОстаточнаяСтоимость",    "Остаточная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СпособНачисления",       "Способ начисления амортизации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию", "Дата ввода в эксплуатацию");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток","Стоимость начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток","Стоимость конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот","Стоимость оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияНачальныйОстаток", "Амортизация начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияКонечныйОстаток","Амортизация конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот", "Амортизация оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость","Первоначальная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ИнвентарныйНомер","Инвентарный номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "МОЛ","МОЛ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Подразделение","Подразделение");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель( "ПервоначальнаяСтоимость",   "первоначальная ",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьОборот",           "изменение",         Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ОстаточнаяСтоимость",       "остаточная",        Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияОборот",           "за период",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ОсновноеСредство");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("МОЛ");
	УниверсальныйОтчет.ДобавитьОтбор("ОсновноеСредство");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СпособНачисления", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаВводаВЭксплуатацию", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ИнвентарныйНомер", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("МОЛ", "ОсновноеСредство");
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	// УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);

	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СпособНачисления",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройкиУпр()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиБух(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |   СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
    |   СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость
    |ПОМЕСТИТЬ СтоимостьОСОстаткиИОбороты
    |ИЗ
    |   РегистрНакопления.СтоимостьОСБухгалтерскийУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {(ОсновноеСредство).* КАК ОсновноеСредство}) КАК СтоимостьОСОстаткиИОбороты
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |   РегСведенияОбОС.ОсновноеСредство КАК ОсновноеСредство,
    |   РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
    |   РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
    |   РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
    |   РегСведенияОбОС.Организация
    |ПОМЕСТИТЬ РегСведенияОбОС
    |ИЗ
    |   РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбОС
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |   МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
    |   МестонахождениеОС.МОЛ КАК МОЛ,
    |   МестонахождениеОС.Местонахождение КАК Местонахождение,
    |   МестонахождениеОС.Организация
    |ПОМЕСТИТЬ МестонахождениеОС
    |ИЗ
    |   РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК МестонахождениеОС
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |   СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
    |   СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
    |   ПРЕДСТАВЛЕНИЕ(СтоимостьОСОстаткиИОбороты.ОсновноеСредство),
    |   РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
    |   РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
    |   РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
    |   РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
    |   МестонахождениеОС.МОЛ КАК МОЛ,
    |   МестонахождениеОС.Местонахождение КАК Подразделение
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
    |{ВЫБРАТЬ
    |   ОсновноеСредство.*,
    |   Организация.*,
    |   МОЛ.*,
    |   Подразделение.*,
    |   ИнвентарныйНомер,
    |   СпособНачисления,
    |   ДатаВводаВЭксплуатацию,
    |   ПервоначальнаяСтоимость,
    |   СтоимостьНачальныйОстаток,
    |   СтоимостьКонечныйОстаток,
    |   СтоимостьОборот,
    |   АмортизацияНачальныйОстаток,
    |   АмортизацияКонечныйОстаток,
    |   АмортизацияОборот,
    |   ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
    |ИЗ
    |   СтоимостьОСОстаткиИОбороты КАК СтоимостьОСОстаткиИОбороты
    |       {ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК РегСостояниеОС
    |       ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСостояниеОС.ОсновноеСредство
    |           И СтоимостьОСОстаткиИОбороты.Организация = РегСостояниеОС.Организация
    |           И (РегСостояниеОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВведеноВЭксплуатацию))}
    |       {ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбОС КАК РегСведенияОбОС
    |       ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСведенияОбОС.ОсновноеСредство
    |           И СтоимостьОСОстаткиИОбороты.Организация = РегСведенияОбОС.Организация}
    |       {ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
    |       ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
    |           И СтоимостьОСОстаткиИОбороты.Организация = МестонахождениеОС.Организация}
	|	//СОЕДИНЕНИЯ
    |{ГДЕ
    |   СтоимостьОСОстаткиИОбороты.Организация.* КАК Организация,
    |   МестонахождениеОС.МОЛ.* КАК МОЛ,
    |   МестонахождениеОС.Местонахождение.* КАК Подразделение,
    |   РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
    |   РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
    |   СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
    |   (СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток) КАК ОстаточнаяСтоимость,
    |   РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
    |   РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
    |{УПОРЯДОЧИТЬ ПО
    |   ОсновноеСредство.*,
    |   Организация.*,
    |   МОЛ.*,
    |   Подразделение.*,
    |   ИнвентарныйНомер,
    |   СпособНачисления,
    |   ДатаВводаВЭксплуатацию,
    |   ПервоначальнаяСтоимость,
    |   СтоимостьНачальныйОстаток,
    |   СтоимостьКонечныйОстаток,
    |   СтоимостьОборот,
    |   АмортизацияНачальныйОстаток,
    |   АмортизацияКонечныйОстаток,
    |   АмортизацияОборот,
    |   ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
    |ИТОГИ
	|	МАКСИМУМ(СпособНачисления),
	|	МАКСИМУМ(ДатаВводаВЭксплуатацию),
	|	МАКСИМУМ(ИнвентарныйНомер),
	|	МАКСИМУМ(МОЛ),
    |   СУММА(СтоимостьНачальныйОстаток),
    |   СУММА(СтоимостьКонечныйОстаток),
    |   СУММА(СтоимостьОборот),
    |   СУММА(АмортизацияНачальныйОстаток),
    |   СУММА(АмортизацияКонечныйОстаток),
    |   СУММА(АмортизацияОборот),
    |   СУММА(ПервоначальнаяСтоимость),
    |   СУММА(ОстаточнаяСтоимость)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
    |ПО
    |   ОБЩИЕ,
    |   Подразделение
    |{ИТОГИ ПО
    |   ОсновноеСредство.*,
    |   Организация.*,
    |   Подразделение.*,
    |   МОЛ.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";

	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СтоимостьОСОстаткиИОбороты.ОсновноеСредство" , "ОсновноеСредство","Основное средство", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ОсновныеСредства);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	 УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОсновноеСредство",       "Основное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",        "Изменение стоимости ОС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",      "Амортизация за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОстаточнаяСтоимость",    "Остаточная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СпособНачисления",       "Способ начисления амортизации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию", "Дата ввода в эксплуатацию");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток","Стоимость начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток","Стоимость конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот","Стоимость оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияНачальныйОстаток", "Амортизация начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияКонечныйОстаток","Амортизация конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот", "Амортизация оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость","Первоначальная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ИнвентарныйНомер","Инвентарный номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "МОЛ","МОЛ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Подразделение","Подразделение");

	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель( "ПервоначальнаяСтоимость",   "первоначальная ",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьОборот",           "изменение",         Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ОстаточнаяСтоимость",       "остаточная",        Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияОборот",           "за период",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ОсновноеСредство");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("МОЛ");
	УниверсальныйОтчет.ДобавитьОтбор("ОсновноеСредство");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Подразделение", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СпособНачисления", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаВводаВЭксплуатацию", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ИнвентарныйНомер", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("МОЛ", "ОсновноеСредство");
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	// УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);

	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СпособНачисления",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройкиБух()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиНал(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ СтоимостьОСОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.СтоимостьОСНалоговыйУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {(ОсновноеСредство).* КАК ОсновноеСредство}) КАК СтоимостьОСОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбОС.ОсновноеСредство КАК ОсновноеСредство,
	|	РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	РегСведенияОбОС.Организация
	|ПОМЕСТИТЬ РегСведенияОбОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбОСНУ.ОсновноеСредство КАК ОсновноеСредство,
	|	РегСведенияОбОСНУ.МетодНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	РегСведенияОбОСНУ.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимость,
	|	РегСведенияОбОСНУ.Организация
	|ПОМЕСТИТЬ РегСведенияОбОСНУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбОСНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	МестонахождениеОС.Организация
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК МестонахождениеОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(СтоимостьОСОстаткиИОбороты.ОсновноеСредство),
	|	РегСведенияОбОСНУ.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	РегСведенияОбОСНУ.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Подразделение
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	ОсновноеСредство.*,
	|	Организация.*,
	|	МОЛ.*,
	|	Подразделение.*,
	|	ИнвентарныйНомер,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИЗ
	|	СтоимостьОСОстаткиИОбороты КАК СтоимостьОСОстаткиИОбороты
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК РегСостояниеОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСостояниеОС.ОсновноеСредство
	|			И СтоимостьОСОстаткиИОбороты.Организация = РегСостояниеОС.Организация
	|			И (РегСостояниеОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВведеноВЭксплуатацию))}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбОС КАК РегСведенияОбОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСведенияОбОС.ОсновноеСредство
	|			И СтоимостьОСОстаткиИОбороты.Организация = РегСведенияОбОС.Организация}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбОСНУ КАК РегСведенияОбОСНУ
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСведенияОбОСНУ.ОсновноеСредство
	|			И СтоимостьОСОстаткиИОбороты.Организация = РегСведенияОбОСНУ.Организация}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			И СтоимостьОСОстаткиИОбороты.Организация = МестонахождениеОС.Организация}
	|	//СОЕДИНЕНИЯ
	|{ГДЕ
	|	СтоимостьОСОстаткиИОбороты.Организация.* КАК Организация,
	|	МестонахождениеОС.МОЛ.* КАК МОЛ,
	|	МестонахождениеОС.Местонахождение.* КАК Подразделение,
	|	РегСведенияОбОСНУ.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	(СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток) КАК ОстаточнаяСтоимость,
	|	РегСведенияОбОСНУ.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
	|{УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство.*,
	|	Организация.*,
	|	МОЛ.*,
	|	Подразделение.*,
	|	ИнвентарныйНомер,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИТОГИ
	|	МАКСИМУМ(СпособНачисления),
	|	МАКСИМУМ(ДатаВводаВЭксплуатацию),
	|	МАКСИМУМ(ИнвентарныйНомер),
	|	МАКСИМУМ(МОЛ),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(СтоимостьКонечныйОстаток),
	|	СУММА(СтоимостьОборот),
	|	СУММА(АмортизацияНачальныйОстаток),
	|	СУММА(АмортизацияКонечныйОстаток),
	|	СУММА(АмортизацияОборот),
	|	СУММА(ПервоначальнаяСтоимость),
	|	СУММА(ОстаточнаяСтоимость)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ,
	|	Подразделение
	|{ИТОГИ ПО
	|	ОсновноеСредство.*,
	|	Организация.*,
	|	Подразделение.*,
	|	МОЛ.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СтоимостьОСОстаткиИОбороты.ОсновноеСредство" , "ОсновноеСредство","Основное средство", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ОсновныеСредства);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	 УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОсновноеСредство",       "Основное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",        "Изменение стоимости ОС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",      "Амортизация за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОстаточнаяСтоимость",    "Остаточная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СпособНачисления",       "Способ начисления амортизации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию", "Дата ввода в эксплуатацию");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток","Стоимость начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток","Стоимость конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот","Стоимость оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияНачальныйОстаток", "Амортизация начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияКонечныйОстаток","Амортизация конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот", "Амортизация оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость","Первоначальная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ИнвентарныйНомер","Инвентарный номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "МОЛ","МОЛ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Подразделение","Подразделение");
	
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель( "ПервоначальнаяСтоимость",   "первоначальная ",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьОборот",           "изменение",         Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ОстаточнаяСтоимость",       "остаточная",        Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияОборот",           "за период",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ОсновноеСредство");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("МОЛ");
	УниверсальныйОтчет.ДобавитьОтбор("ОсновноеСредство");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Подразделение", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СпособНачисления", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаВводаВЭксплуатацию", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ИнвентарныйНомер", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("МОЛ", "ОсновноеСредство");
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	// УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);

	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СпособНачисления",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройкиНал()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним) + " "
		+ ?(ВидУчета = 1, "(бухгалтерский учет)",
		  ?(ВидУчета = 2, "(налоговый учет)",
		  ?(ВидУчета = 3, "(международный учет)", "(управленческий учет)")));
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	УниверсальныйОтчет.ИмяРегистра = "";

	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	Если      ВидУчета = 1 Тогда // Бух.
		УстановитьНачальныеНастройкиБух(ДополнительныеПараметры);
	ИначеЕсли ВидУчета = 2 Тогда // Нал.
		УстановитьНачальныеНастройкиНал(ДополнительныеПараметры);
	Иначе // Упр
		УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	КонДата = Дата(УниверсальныйОтчет.ДатаКон);
	КонДата = КонецДня(?(КонДата = Дата('00010101000000'), Дата('39991231235959'), КонДата));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "НачДата", Дата(УниверсальныйОтчет.ДатаНач));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "КонДата", КонДата);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	Возврат "";
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
