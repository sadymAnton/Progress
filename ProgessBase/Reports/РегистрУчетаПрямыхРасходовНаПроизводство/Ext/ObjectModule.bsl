#Если Клиент Тогда
	
//Обявление переменных
Перем НП Экспорт;

// Преобразует таблицу значений в дерево значений, группируя значения по первым КолГрупп колонкам
Функция ВДеревоСГруппировкой(ТаблицаРезультатов, КолГрупп = 1)
	
	ДеревоРезультатов = Новый ДеревоЗначений;
	Для Каждого Колонка ИЗ ТаблицаРезультатов.Колонки Цикл
		ДеревоРезультатов.Колонки.Добавить(Колонка.Имя);
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы ИЗ ТаблицаРезультатов Цикл
		КоллекцияСтрокДерева = ДеревоРезультатов.Строки;
		Для Группа = 0 По КолГрупп - 1 Цикл
			Ключ = СтрокаТаблицы[Группа];
			СтрокаПоГруппе = КоллекцияСтрокДерева.Найти(Ключ, ТаблицаРезультатов.Колонки[Группа].Имя, Ложь); 
			Если СтрокаПоГруппе = Неопределено Тогда
				СтрокаПоГруппе = КоллекцияСтрокДерева.Добавить();
				СтрокаПоГруппе[Группа] = Ключ;
				СтрокаПоГруппе.СтоимостьПриход = 0;
			КонецЕсли;
			СтрокаПоГруппе.СтоимостьПриход = СтрокаПоГруппе.СтоимостьПриход + СтрокаТаблицы.СтоимостьПРиход;
			КоллекцияСтрокДерева = СтрокаПоГруппе.Строки;
		КонецЦикла;
		ДетальнаяЗапись = КоллекцияСтрокДерева.Добавить();
		ОбходКолонок = Макс(0, КолГрупп - 1); 
		Для Колонка = ОбходКолонок По ТаблицаРезультатов.Колонки.Количество()-1 Цикл
			ДетальнаяЗапись[Колонка] = СтрокаТаблицы[Колонка];
		КонецЦикла;
	КонецЦикла;
		
	Возврат ДеревоРезультатов;
КонецФункции

//Рекурсивно выводит структуру дерева значений результата
Процедура ВывестиСтрокиДерева(ДеревоРезультатов, Уровень = 0, ДокументРезультат, Макет, УчетнаяПолитика,ТекущийВидЗатрат)
	ОбластьГруппа   	 = Макет.ПолучитьОбласть("Группа");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");
	Для Каждого Строка из ДеревоРезультатов.Строки Цикл
		Отступ = "";
		Для  н = 1 по Уровень Цикл
			Отступ = Отступ + "    ";
		КонецЦикла;
		Если  ЗначениеЗаполнено(Строка.ВидЗатрат) Тогда
		ТекущийВидЗатрат = Строка.ВидЗатрат; 
		КонецЕсли;
		Если Строка.Строки.Количество() = 0 Тогда //детальные строки
			ОбластьСтрока.Параметры.ДатаОперации = Строка.ДатаОперации;
			ОбластьСтрока.Параметры.Расшифровка = Строка.Регистратор;
			ОбластьСтрока.Параметры.ВидРасхода = ТекущийВидЗатрат;
			ОбластьСтрока.Параметры.НаименованиеОперации = Строка.Содержание;
			ОбластьСтрока.Параметры.Сумма = Строка.СтоимостьПриход;
			ДокументРезультат.Вывести(ОбластьСтрока);
		Иначе //группировка, содержащая подчиненные строки
			СтрокаГруппы = "";
			Для Н = 0 по Уровень Цикл
				Если ТипЗнч(Строка[Н]) = Тип("Дата") Тогда
					Дата = Формат((Строка[Н]),"ДФ=MMMM.yyyy");
					Дата = СтрЗаменить(Дата,"."," ");
					СтрокаГруппы = СтрокаГруппы + Дата;
				Иначе
					СтрокаГруппы = СтрокаГруппы + Строка(Строка[Н]);
				КонецЕсли;
			КонецЦикла;
			ОбластьГруппа.Параметры.Группа = Отступ + СтрокаГруппы;
			ОбластьГруппа.Параметры.ГрСтоимость = Строка.СтоимостьПриход;
			Если ЗначениеЗаполнено(СтрокаГруппы) Тогда
				ДокументРезультат.Вывести(ОбластьГруппа);
			КонецЕсли;
		КонецЕсли;
		ВывестиСтрокиДерева(Строка, Уровень+1, ДокументРезультат, Макет, УчетнаяПолитика,ТекущийВидЗатрат);
	КонецЦикла;
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");
	
	СписокВидов = Новый СписокЗначений();
	Для каждого ЭлементСписка из ВидыРасходов Цикл
		Если ЭлементСписка.Пометка Тогда
			СписокВидов.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СрезСведений = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, Ложь, Организация);
	УчетнаяПолитика = ?(НЕ ЗначениеЗаполнено(СрезСведений) ИЛИ СрезСведений.Количество() = 0, Перечисления.СпособыОценки.ПустаяСсылка(), СрезСведений.СпособОценкиМПЗ);
	Заголовок = "Регистр учета прямых расходов на производство";
	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаКон);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");;
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	СписокСчетов = Новый Массив;
	Если (Строка(ВидОтчета) = "0") Или (Строка(ВидОтчета) = "1") Тогда
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыПоВыявленномуБраку);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств);
		Если Строка(ВидОтчета) = "1" Тогда
			СписокСчетов.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы);
			
		КонецЕсли;
	Иначе
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы);
	
	КонецЕсли;
	
	
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ДатаНач",      Новый Граница(НачалоДня(ДатаНач), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаКон",      Новый Граница(КонецДня(ДатаКон), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("ВидУчета",Перечисления.ВидыУчетаПоПБУ18.НУ);
    Запрос.УстановитьПараметр("Счет",  СписокСчетов);
    Запрос.УстановитьПараметр("Счет25",  ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы);
	Запрос.УстановитьПараметр("СписокВидовЗатрат",  СписокВидов);
	
	Запрос.Текст = "";
	Если (Строка(ВидОтчета) = "0") Или (Строка(ВидОтчета) = "1") Тогда
		// Запрос по 20 и 23 счетам
		Запрос.Текст =  Запрос.Текст + 
		"ВЫБРАТЬ
		|НалоговыйДвиженияССубконто.Период КАК ДатаОперации,
		|НалоговыйДвиженияССубконто.Регистратор,
		|НалоговыйДвиженияССубконто.Содержание,
		|НалоговыйДвиженияССубконто.СубконтоДт1 КАК Подразделение,
		|НалоговыйДвиженияССубконто.СубконтоДт2 КАК НоменклатурнаяГруппа,
		|НалоговыйДвиженияССубконто.СубконтоДт3.ВидРасходовНУ КАК ВидЗатрат,
		|НалоговыйДвиженияССубконто.Сумма КАК СтоимостьПриход
		|ИЗ
		| РегистрБухгалтерии.Налоговый.ДвиженияССубконто(&ДатаНач,
		|&ДатаКон, 
		|СчетДт в (&Счет) И 
		|ВидУчетаДт = &ВидУчета И
	    |Организация = &Организация И
     	|Активность = Истина  И
	    |СубконтоДт3.ВидРасходовНУ В (&СписокВидовЗатрат) И
	    |ВидУчетаДт = &ВидУчета И
	    |СчетКт <> &Счет25
		|) КАК НалоговыйДвиженияССубконто
		|"; 
		
	КонецЕсли;
	
	Если (Строка(ВидОтчета) = "1") Тогда
		  // объденинение 20,23 и 25
		Запрос.Текст =  Запрос.Текст + "
    	|Объединить Все
		|
		|";
	КонецЕсли;
	
	Если (Строка(ВидОтчета) = "1") Или (Строка(ВидОтчета) = "2") Тогда
		 // счет 25
		Запрос.Текст =  Запрос.Текст + 
		"ВЫБРАТЬ
		|НалоговыйДвиженияССубконто.Период КАК ДатаОперации,
		|НалоговыйДвиженияССубконто.Регистратор КАК Регистратор,
		|НалоговыйДвиженияССубконто.Содержание КАК Содержание,
		|НалоговыйДвиженияССубконто.СубконтоДт1 КАК Подразделение,
		|NULL КАК НоменклатурнаяГруппа,
		|НалоговыйДвиженияССубконто.СубконтоДт2.ВидРасходовНУ КАК ВидЗатрат,
		|НалоговыйДвиженияССубконто.Сумма КАК СтоимостьПриход
		|ИЗ
		| РегистрБухгалтерии.Налоговый.ДвиженияССубконто(&ДатаНач,
		|   &ДатаКон, 
		|   СчетДт = (&Счет25) И 
		|   ВидУчетаДт = &ВидУчета И
	    |   Организация = &Организация И
    	|	Активность = Истина  И
	    |   СубконтоДт2.ВидРасходовНУ В (&СписокВидовЗатрат) И
	    |   ВидУчетаДт = &ВидУчета
		|) КАК НалоговыйДвиженияССубконто"; 
	КонецЕсли;
	
        Запрос.Текст =  Запрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОперации
		|";
		
		Результат = Запрос.Выполнить();
	

	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	
	ТаблицаРезультатов = Новый ТаблицаЗначений;
	
	КолГрупп = 0;
	Для Каждого Группировка ИЗ Показатели Цикл
		Если Группировка.Использование Тогда
			ТаблицаРезультатов.Колонки.Добавить(Группировка.Имя);
			КолГрупп = КолГрупп + 1;
		КонецЕсли;
	КонецЦикла;
	ТаблицаРезультатов.Колонки.Добавить("ДатаОперации");
	ТаблицаРезультатов.Колонки.Добавить("Регистратор");
	Если ТаблицаРезультатов.Колонки.Найти("ВидЗатрат") = Неопределено Тогда
		ТаблицаРезультатов.Колонки.Добавить("ВидЗатрат");
	КонецЕсли;
    ТаблицаРезультатов.Колонки.Добавить("Содержание");
	ТаблицаРезультатов.Колонки.Добавить("СтоимостьПриход");
			
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если (Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке) ИЛИ
			(Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии) Тогда
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(Выборка.НоменклатурнаяГруппа) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицыРезультатов = ТаблицаРезультатов.Добавить();
		Для Каждого Колонка из ТаблицаРезультатов.Колонки Цикл
			
			Если Колонка.Имя = "Месяц" Тогда
				СтрокаТаблицыРезультатов[Колонка.Имя] = НачалоМесяца(Выборка.ДатаОперации);
			Иначе
				СтрокаТаблицыРезультатов[Колонка.Имя] = Выборка[Колонка.Имя];
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	ДеревоРезультатов = ВДеревоСГруппировкой(ТаблицаРезультатов, КолГрупп);
	СтрокаСортировки = "";
	Для Колонка = 0 по КолГрупп - 1 Цикл
		СтрокаСортировки = СтрокаСортировки + ДеревоРезультатов.Колонки[Колонка].Имя + " ,"; 
	КонецЦикла;
	СтрокаСортировки = СтрокаСортировки + "ДатаОперации";
	ДеревоРезультатов.Строки.Сортировать(СтрокаСортировки, Истина);
	
	//Вывести строки
	ВывестиСтрокиДерева(ДеревоРезультатов, 0, ДокументРезультат, Макет, УчетнаяПолитика,"");
	
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.ИтогоСтоимость = ДеревоРезультатов.Строки.Итог("СтоимостьПриход");
	
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП           = Новый НастройкаПериода;

#КонецЕсли