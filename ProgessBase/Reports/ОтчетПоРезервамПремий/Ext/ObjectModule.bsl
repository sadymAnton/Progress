Перем ДанныеРасшифровки;
Перем История;
Перем ПоследниеНастройки, НастройкиМенялись;

Процедура Инициализация()
	// Инициализация настройки периода
	Период = Новый НастройкаПериода;
	Период.РедактироватьКакИнтервал = Ложь;
	Период.РедактироватьКакПериод = Истина;
	Период.ВариантНастройки = ВариантНастройкиПериода.Период;
	КонПериода = НачалоМесяца(ТекущаяДата()) - 1;
	НачПериода = НачалоМесяца(КонПериода);
	Период.УстановитьПериод(НачПериода, КонПериода);
	
	История = Новый Массив;
	НастройкиМенялись = Ложь;
КонецПроцедуры

Функция Сформировать(ТабДокумент = Неопределено) экспорт
	Если ТабДокумент = Неопределено тогда
		ТабДокумент = Новый ТабличныйДокумент;
	Иначе
		ТабДокумент.Очистить();
	КонецЕсли;
	
	// Устанавливаем параметры периода
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	Параметр.Значение = Период.ДатаНачала;
	Параметр.Использование = Истина;
	
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	Параметр.Значение = Период.ДатаОкончания;
	Параметр.Использование = Истина;
	
	// Формируем отчет
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабДокумент);
	
	// Для фиксации заголовков вместо простого метода Вывести() будем извращаться
	
	//ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ПроцессорВывода.НачатьВывод();
	ТаблицаЗафиксирована = Ложь;
	Если ТипЗнч(КомпоновщикНастроек.Настройки.Структура[0]) = Тип("ДиаграммаКомпоновкиДанных") тогда
		// В этом случае не надо ничего фиксировать
		ТаблицаЗафиксирована = Истина;
	КонецЕсли;
	ТабДокумент.ФиксацияСверху = 0;
	Пока Истина цикл
		ОбработкаПрерыванияПользователя();
		ЭлементРезультата = ПроцессорКомпоновкиДанных.Следующий();
		Если ЭлементРезультата = Неопределено тогда
			Прервать;
		Иначе
			// Зафиксируем шапку
			Если не ТаблицаЗафиксирована
			   и ЭлементРезультата.ЗначенияПараметров.Количество() > 0 тогда
				ТабДокумент.ФиксацияСверху = ТабДокумент.ВысотаТаблицы;
				ТаблицаЗафиксирована = Истина;
			КонецЕсли;
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
		КонецЕсли;
	КонецЦикла;
	ПроцессорВывода.ЗакончитьВывод();
	
	Если НастройкиМенялись тогда
		История.Добавить(ПоследниеНастройки);
		НастройкиМенялись = Ложь;
	КонецЕсли;
	
	ПоследниеНастройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	Возврат ТабДокумент;
КонецФункции

Процедура ОбработатьРасшифровку(ТабДокумент, Расшифровка) экспорт
	Перем выбДействие, Настройки;
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	//мсвДействия = Новый Массив;
	//мсвДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	//мсвДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	//мсвДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	//мсвДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	//мсвДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	//мсвДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);

	Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, выбДействие);
	Если Настройки <> Неопределено тогда
		//Если текДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить тогда
		История.Добавить(КомпоновщикНастроек.ПолучитьНастройки());
		КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
		Сформировать(ТабДокумент);
	КонецЕсли;
КонецПроцедуры

Процедура НастройкиИзменились() экспорт
	НастройкиМенялись = Истина;
КонецПроцедуры

Процедура ВернутьсяНазад() экспорт
	Если не МожноНазад() тогда
		Возврат;
	КонецЕсли;
	
	индекс = История.ВГраница();
	КомпоновщикНастроек.ЗагрузитьНастройки(История[индекс]);
	История.Удалить(индекс);
КонецПроцедуры

Функция МожноНазад() экспорт
	Возврат История.Количество() > 0;
КонецФункции

Функция НомерКвартала(Дата)
	Номер = Цел((Месяц(НачалоКвартала(Дата)) + 2) / 3);
	Если Номер = 1 тогда
		Возврат "I";
	ИначеЕсли Номер = 2 тогда
		Возврат "II";
	ИначеЕсли Номер = 3 тогда
		Возврат "III";
	ИначеЕсли Номер = 4 тогда
		Возврат "IV";
	КонецЕсли;
КонецФункции

Функция ПолучитьСтрокуПериода() экспорт
	НачПериода = Период.ПолучитьДатуНачала();
	КонПериода = Период.ПолучитьДатуОкончания();
	
	Если НачПериода = НачалоГода(НачПериода) и КонПериода = КонецГода(КонПериода) тогда
		Если Год(НачПериода) = Год(КонПериода) тогда
			Возврат Формат(НачПериода, "ДФ='гггг ""г.""'");
		Иначе
			Возврат Формат(НачПериода, "ДФ=гггг") + " — " + Формат(КонПериода, "ДФ='гггг ""г.""'");
		КонецЕсли;
	ИначеЕсли НачПериода = НачалоКвартала(НачПериода) и КонПериода = КонецКвартала(КонПериода) тогда
		Если Год(НачПериода) = Год(КонПериода) тогда
			Если НачалоКвартала(НачПериода) = НачалоКвартала(КонПериода) тогда
				Возврат НомерКвартала(НачПериода) + " кв. " + Формат(НачПериода, "ДФ=гггг") + " г.";
			Иначе
				Возврат НомерКвартала(НачПериода) + " — " + НомерКвартала(КонПериода) + " кв. " + Формат(НачПериода, "ДФ=гггг") + " г.";
			КонецЕсли;
		Иначе
			Возврат НомерКвартала(НачПериода) + " кв. " + Формат(НачПериода, "ДФ=гггг") + " г. — " + НомерКвартала(КонПериода) + " кв. " + Формат(КонПериода, "ДФ=гггг") + " г.";
		КонецЕсли;
	ИначеЕсли НачПериода = НачалоМесяца(НачПериода) и КонПериода = КонецМесяца(КонПериода) тогда
		Если Год(НачПериода) = Год(КонПериода) тогда
			Если Месяц(НачПериода) = Месяц(КонПериода) тогда
				Возврат Формат(НачПериода, "ДФ='ММММ гггг ""г.""'");
			Иначе
				Возврат Формат(НачПериода, "ДФ=ММММ") + " — " + НРег(Формат(КонПериода, "ДФ='ММММ гггг ""г.""'"));
			КонецЕсли;
		Иначе
			Возврат Формат(НачПериода, "ДФ='ММММ гггг ""г.""'") + " — " + НРег(Формат(КонПериода, "ДФ='ММММ гггг ""г.""'"));
		КонецЕсли;
	ИначеЕсли Год(НачПериода) = Год(КонПериода) тогда
		Если Месяц(НачПериода) = Месяц(КонПериода) тогда
			Если НачалоДня(НачПериода) = НачалоДня(КонПериода) тогда
				Возврат Формат(НачПериода, "ДЛФ=DD");
			Иначе
				Возврат Формат(НачПериода, "ДФ=д") + " — " + Формат(КонПериода, "ДЛФ=DD");
			КонецЕсли;
		Иначе
			Возврат Формат(НачПериода, "ДФ='д ММММ'") + " — " + Формат(КонПериода, "ДЛФ=DD");
		КонецЕсли;
	Иначе
		Возврат Формат(НачПериода, "ДЛФ=DD") + " — " + Формат(КонПериода, "ДЛФ=DD");
	КонецЕсли;
КонецФункции

Процедура СдвинутьПериод(Направление) экспорт
	ВарПериода = Период.ВариантПериода;
	Если ВарПериода = ВариантПериода.День тогда
		Сдвиг = 24 * 3600;
		Период.ЗначениеПериода = Период.ЗначениеПериода + Направление * Сдвиг;
		Период.ДатаНачала = НачалоДня(Период.ЗначениеПериода);
		Период.ДатаОкончания = КонецДня(Период.ЗначениеПериода);
	ИначеЕсли ВарПериода = ВариантПериода.ДеньСНачалаМесяца тогда
		Сдвиг = 24 * 3600;
		Период.ЗначениеПериода = Период.ЗначениеПериода + Направление * Сдвиг;
		Период.ДатаНачала = НачалоМесяца(Период.ЗначениеПериода);
		Период.ДатаОкончания = КонецДня(Период.ЗначениеПериода);
	ИначеЕсли ВарПериода = ВариантПериода.ДеньСНачалаКвартала тогда
		Сдвиг = 24 * 3600;
		Период.ЗначениеПериода = Период.ЗначениеПериода + Направление * Сдвиг;
		Период.ДатаНачала = НачалоКвартала(Период.ЗначениеПериода);
		Период.ДатаОкончания = КонецДня(Период.ЗначениеПериода);
	ИначеЕсли ВарПериода = ВариантПериода.ДеньСНачалаГода тогда
		Сдвиг = 24 * 3600;
		Период.ЗначениеПериода = Период.ЗначениеПериода + Направление * Сдвиг;
		Период.ДатаНачала = НачалоГода(Период.ЗначениеПериода);
		Период.ДатаОкончания = КонецДня(Период.ЗначениеПериода);
	ИначеЕсли ВарПериода = ВариантПериода.Месяц тогда
		Период.ЗначениеПериода = ДобавитьМесяц(Период.ЗначениеПериода, Направление);
		Период.ДатаНачала = НачалоМесяца(Период.ЗначениеПериода);
		Период.ДатаОкончания = КонецМесяца(Период.ЗначениеПериода);
	ИначеЕсли ВарПериода = ВариантПериода.МесяцСНачалаКвартала тогда
		Период.ЗначениеПериода = ДобавитьМесяц(Период.ЗначениеПериода, Направление);
		Период.ДатаНачала = НачалоКвартала(Период.ЗначениеПериода);
		Период.ДатаОкончания = КонецМесяца(Период.ЗначениеПериода);
	ИначеЕсли ВарПериода = ВариантПериода.МесяцСНачалаГода тогда
		Период.ЗначениеПериода = ДобавитьМесяц(Период.ЗначениеПериода, Направление);
		Период.ДатаНачала = НачалоГода(Период.ЗначениеПериода);
		Период.ДатаОкончания = КонецМесяца(Период.ЗначениеПериода);
	ИначеЕсли ВарПериода = ВариантПериода.Квартал тогда
		Период.ЗначениеПериода = ДобавитьМесяц(Период.ЗначениеПериода, Направление * 3);
		Период.ДатаНачала = НачалоКвартала(Период.ЗначениеПериода);
		Период.ДатаОкончания = КонецКвартала(Период.ЗначениеПериода);
	ИначеЕсли ВарПериода = ВариантПериода.КварталСНачалаГода тогда
		Период.ЗначениеПериода = ДобавитьМесяц(Период.ЗначениеПериода, Направление * 3);
		Период.ДатаНачала = НачалоГода(Период.ЗначениеПериода);
		Период.ДатаОкончания = КонецКвартала(Период.ЗначениеПериода);
	ИначеЕсли ВарПериода = ВариантПериода.Год тогда
		НовыйГод = Год(Период.ЗначениеПериода) + Направление;
		Период.ЗначениеПериода = Дата(НовыйГод, 1, 1);
		Период.ДатаНачала = Период.ЗначениеПериода;
		Период.ДатаОкончания = КонецГода(Период.ЗначениеПериода);
	Иначе
		ДлинаПериода = Период.ДатаОкончания - Период.ДатаНачала;
		Если Направление > 0 тогда
			Период.ДатаНачала = Период.ДатаОкончания + 1;
			Период.ДатаОкончания = Период.ДатаНачала + ДлинаПериода;
		Иначе
			Период.ДатаОкончания = Период.ДатаНачала - 1;
			Период.ДатаНачала = Период.ДатаОкончания - ДлинаПериода;
		КонецЕсли;
	КонецЕсли;
	Период.ВариантПериода = ВарПериода; // вариант периода обычно сбивается
КонецПроцедуры

Инициализация();
