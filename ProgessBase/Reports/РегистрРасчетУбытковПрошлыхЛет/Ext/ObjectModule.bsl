#Если Клиент Тогда
	
Перем НП Экспорт;

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ДатаНач",       НачалоДня(НачалоГода(ДатаНач)));
	Запрос.УстановитьПараметр("ДатаКон",       КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("СчетУбытков",   ПланыСчетов.Налоговый.УбыткиПрошлыхЛет);
	Запрос.УстановитьПараметр("ВидСубконто",   ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("Счет99",        ПланыСчетов.Налоговый.ПрибылиИУбыткиБезНалогаНаПрибыль);
	Запрос.УстановитьПараметр("Счет909",       ПланыСчетов.Налоговый.ПрибыльУбытокОтПродаж);
	Запрос.УстановитьПараметр("Счет919",       ПланыСчетов.Налоговый.СальдоПрочихДоходовИРасходов);
	Запрос.УстановитьПараметр("ПрибылиИУбытки",Перечисления.ПрибылиИУбытки.ПрибыльУбытокОтПродаж);
	Запрос.УстановитьПараметр("ПрибылиИУбытки91",Перечисления.ПрибылиИУбытки.СальдоПрочихДоходовИРасходов);
	Запрос.УстановитьПараметр("ВидУчета",      Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УбыткиПрошлыхЛет.Период КАК ДатаОперации,
	|	УбыткиПрошлыхЛет.Субконто1.Наименование КАК ГодУбытка,
	|	УбыткиПрошлыхЛет.СуммаОборотКт - УбыткиПрошлыхЛет.СуммаОборотДт КАК УбытокПринятый,
	|	ТекущаяПрибыль.Прибыль КАК Прибыль,
	|	НачОстаткиУбытковПрошлыхЛет.СуммаОстатокДт КАК ОстатокНачальный
	|ИЗ
	|	(ВЫБРАТЬ
	|		-НалоговыйОбороты.СуммаОборот КАК Прибыль,
	|		НалоговыйОбороты.Период КАК Период
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет = &Счет99,
	|			,
	|			Организация = &Организация
	|			    И ВидУчета = &ВидУчета
	|			    И (Субконто1 = &ПрибылиИУбытки Или Субконто1 = &ПрибылиИУбытки91),
	|			КорСчет = &Счет909
	|			    ИЛИ КорСчет = &Счет919,
	|			) КАК НалоговыйОбороты) КАК ТекущаяПрибыль
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Обороты(
	|		&ДатаНач,
	|		&ДатаКон,
	|		Месяц,
	|		Счет В ИЕРАРХИИ (&СчетУбытков),
	|		&ВидСубконто,
	|		Организация = &Организация
	|		    И ВидУчета = &ВидУчета,
	|		КорСчет В ИЕРАРХИИ (&Счет99),
	|		) КАК УбыткиПрошлыхЛет
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				НалоговыйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
	|				НалоговыйОстатки.Субконто1 КАК Субконто1
	|			ИЗ
	|				РегистрБухгалтерии.Налоговый.Остатки(
	|					&ДатаНач,
	|					Счет В ИЕРАРХИИ (&СчетУбытков),
	|					&ВидСубконто,
	|					Организация = &Организация
	|					    И ВидУчета = &ВидУчета) КАК НалоговыйОстатки) КАК НачОстаткиУбытковПрошлыхЛет
	|			ПО УбыткиПрошлыхЛет.Субконто1 = НачОстаткиУбытковПрошлыхЛет.Субконто1
	|		ПО УбыткиПрошлыхЛет.Период = ТекущаяПрибыль.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОперации,
	|	ГодУбытка
	|ИТОГИ
	|	СУММА(УбытокПринятый),
	|	МИНИМУМ(Прибыль),
	|	СУММА(ОстатокНачальный)
	|ПО
	|	ДатаОперации,
	|	ГодУбытка";
	Результат = Запрос.Выполнить();

	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаПериод  = Макет.ПолучитьОбласть("СтрокаПериода");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");
	
	ПрошлыеПринятыеУбытки = Новый Соответствие;
	

	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);

	ВыборкаПериод = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаОперации");
	ИтогоСуммаПрибыли = 0;

	Пока ВыборкаПериод.Следующий() Цикл
				
		ОбластьСтрокаПериод.Параметры.ДатаОперации      = ПредставлениеПериода(НачалоДня(ВыборкаПериод.ДатаОперации), КонецДня(КонецМесяца(ВыборкаПериод.ДатаОперации)), "ФП = Истина");
		
		ПрошлыйПринятыйУбыток = ПрошлыеПринятыеУбытки.Получить(ВыборкаПериод.ГодУбытка);
		Если ПрошлыйПринятыйУбыток = Неопределено Тогда
			ПрошлыйПринятыйУбыток = 0;
		КонецЕсли;
		ПрошлыеПринятыеУбытки.Вставить(ВыборкаПериод.ГодУбытка, ПрошлыйПринятыйУбыток + ВыборкаПериод.УбытокПринятый);
		
		ОбластьСтрокаПериод.Параметры.УбытокТекущий     = ВыборкаПериод.УбытокПринятый;
		ОбластьСтрокаПериод.Параметры.Убыток     = ПрошлыйПринятыйУбыток + ВыборкаПериод.УбытокПринятый;
		ОбластьСтрокаПериод.Параметры.ОстатокНачальный  = ВыборкаПериод.ОстатокНачальный - ПрошлыйПринятыйУбыток;
		ОбластьСтрокаПериод.Параметры.ОстатокКонечный   = ВыборкаПериод.ОстатокНачальный - ПрошлыйПринятыйУбыток - ВыборкаПериод.УбытокПринятый;
		
		ИтогоСуммаПрибыли = ИтогоСуммаПрибыли + ВыборкаПериод.Прибыль;
		ОбластьСтрокаПериод.Параметры.Прибыль           = ИтогоСуммаПрибыли;
		ОбластьСтрокаПериод.Параметры.ПрибыльТекущая    = ВыборкаПериод.Прибыль;
		ОбластьСтрокаПериод.Параметры.Процент           = 100 * (ПрошлыйПринятыйУбыток + ВыборкаПериод.УбытокПринятый) / ИтогоСуммаПрибыли;
		
		ДокументРезультат.Вывести(ОбластьСтрокаПериод);
		Выборка = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ГодУбытка");
		Пока Выборка.Следующий() Цикл
			
			ОбластьСтрока.Параметры.ГодУбытка         = Выборка.ГодУбытка;
			ПрошлыйПринятыйУбыток = ПрошлыеПринятыеУбытки.Получить(Выборка.ГодУбытка);
			Если ПрошлыйПринятыйУбыток = Неопределено Тогда
				  ПрошлыйПринятыйУбыток = 0;
			  КонецЕсли;
			  
			ПрошлыеПринятыеУбытки.Вставить(Выборка.ГодУбытка, ПрошлыйПринятыйУбыток + Выборка.УбытокПринятый);
			ОбластьСтрока.Параметры.УбытокТекущий     = Выборка.УбытокПринятый;
			ОбластьСтрока.Параметры.Убыток     = ПрошлыйПринятыйУбыток + Выборка.УбытокПринятый;
			ОбластьСтрока.Параметры.ОстатокНачальный  = Выборка.ОстатокНачальный - ПрошлыйПринятыйУбыток;
			ОбластьСтрока.Параметры.ОстатокКонечный   = Выборка.ОстатокНачальный - ПрошлыйПринятыйУбыток - Выборка.УбытокПринятый;
			
			
			ДокументРезультат.Вывести(ОбластьСтрока);
		КонецЦикла;
	КонецЦикла;

	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);

	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;

	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли