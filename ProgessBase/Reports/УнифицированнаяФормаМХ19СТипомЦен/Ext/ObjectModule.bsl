
Перем мКоличествоКолонок Экспорт;
Перем мВалютаРегламентированногоУчета;

////////////////////////////////////////////////

#Если Клиент Тогда

// Процедура формирования печатной формы отчета
//
Процедура ОбновитьОтчет(ТабДокумент) Экспорт
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ТабДокумент.Очистить();
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	РезультатЗапроса = ПолучитьРезультатЗапросаОстаткиТоваров();
	
	Макет 	= ПолучитьОбщийМакет("МХ19");
	Область = Макет.ПолучитьОбласть("ПервыйЛист");
	
	ИнфоОрг = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), "ОКПО");
	МОЛ 	= РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(
		ТекущаяДата(),
		Новый Структура("СтруктурнаяЕдиница", Склад)
		).ФизическоеЛицо;
	
	// Вывод заголовка
	Область.Параметры.Организация		= Организация;
	Область.Параметры.Склад				= Склад;
	
	Область.Параметры.ПечОрганизация	= СокрЛП(Организация);
	Область.Параметры.ПечКодОКПО		= ИнфоОрг.ОКПО;
	Область.Параметры.ПечДата			= ТекущаяДата();
	Область.Параметры.МОЛ 				= ОбщегоНазначения.ФамилияИнициалыФизЛица(МОЛ);
	
	// Получим период формирования отчета
	ПустаяДата 		= Дата("00010101");
	СтруктураПериод = Новый Структура;
	СтруктураПериод.Вставить(
		"ПериодПо",
		Макс(
			?(ВыводитьДанныеВКолонку1, Дата1, ПустаяДата),
			?(ВыводитьДанныеВКолонку2, Дата2, ПустаяДата),
			?(ВыводитьДанныеВКолонку3, Дата3, ПустаяДата)));
	СтруктураПериод.Вставить(
		"ПериодС",
		Мин(
			?(ВыводитьДанныеВКолонку1, Дата1, СтруктураПериод.ПериодПо),
			?(ВыводитьДанныеВКолонку2, Дата2, СтруктураПериод.ПериодПо),
			?(ВыводитьДанныеВКолонку3, Дата3, СтруктураПериод.ПериодПо)));
	
	Если СтруктураПериод.ПериодС <> СтруктураПериод.ПериодПо Тогда
		// Если заполняем несколько колонок, то ПериодС отобразим в печатной форме как следующий день
		// Например, если Дата1 = 31.12.11, Дата2 = 31.01.12, то фактически период отчета это 01.01.12-31.01.12
		СтруктураПериод.ПериодС = КонецДня(СтруктураПериод.ПериодС) + 1;
	КонецЕсли;
	
	Область.Параметры.Заполнить(СтруктураПериод);
	
	ТабДокумент.Вывести(Область);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Вывод шапки таблицы
	ОбластьТабШапка = Макет.ПолучитьОбласть("ТабШапка");
	Для НомерКолонки = 1 По мКоличествоКолонок Цикл
		Если НЕ ЭтотОбъект["ВыводитьДанныеВКолонку" + СокрЛП(НомерКолонки)] Тогда
			Продолжить;
		КонецЕсли;
		ИмяКолонкиДата = "Дата" + СокрЛП(НомерКолонки);
		ОбластьТабШапка.Параметры[ИмяКолонкиДата] = Формат(ЭтотОбъект[ИмяКолонкиДата], "ДФ='dd MMM yyyy'");
	КонецЦикла;
	
	ТабДокумент.Вывести(ОбластьТабШапка);
	
	// Вывод табличной части
	Область = Макет.ПолучитьОбласть("ТабСтрока");
	
	МассивОбластей = Новый Массив;
	МассивОбластей.Добавить(Область);
	МассивОбластей.Добавить(Макет.ПолучитьОбласть("ТабИтог"));
	МассивОбластей.Добавить(Макет.ПолучитьОбласть("Подвал"));
	
	ОбходИтого = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ОбходИтого.Следующий() Тогда
		
		Обход = ОбходИтого.Выбрать();
		НомПП = 0;
		
		Пока Обход.Следующий() Цикл
			
			НомПП = НомПП + 1;
			Область.Параметры.ПечНомПП = Строка(НомПП);
			
			Область.Параметры.Заполнить(Обход);
			
			Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивОбластей) Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьТабШапка);
			КонецЕсли;
			
			ТабДокумент.Вывести(Область);
			
		КонецЦикла;
		
		Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивОбластей, Ложь) Цикл
			Область = Макет.ПолучитьОбласть("ПустТаб");
			ТабДокумент.Вывести(Область);
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("ТабИтог");
		Область.Параметры.Заполнить(ОбходИтого);
		
		ТабДокумент.Вывести(Область);
		
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Подвал");
	ТабДокумент.Вывести(Область);
	
КонецПроцедуры // ОбновитьОтчет()

#КонецЕсли

Функция ПолучитьРезультатЗапросаОстаткиТоваров()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Граница1",						Новый Граница(КонецДня(Дата1), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Граница2",						Новый Граница(КонецДня(Дата2), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Граница3",						Новый Граница(КонецДня(Дата3), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Дата1",							Дата1);
	Запрос.УстановитьПараметр("Дата2",							Дата2);
	Запрос.УстановитьПараметр("Дата3",							Дата3);
	Запрос.УстановитьПараметр("Организация",					Организация);
	Запрос.УстановитьПараметр("Склад",							Склад);
	Запрос.УстановитьПараметр("ТипЦен",							ТипЦен);
    Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", мВалютаРегламентированногоУчета);
	
	ТекстЗапроса = "";
	
	// Создадим три временные таблицы ОстаткиТоваровN
	Для НомерКолонки = 1 По мКоличествоКолонок Цикл
		
		Если НЕ ЭтотОбъект["ВыводитьДанныеВКолонку" + СокрЛП(НомерКолонки)] Тогда
			
			// Эта колонку заполнять не надо - создадим пустую временную таблицу
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
			|	0 КАК Количество,
			|	0 КАК Сумма
			|
			|ПОМЕСТИТЬ ОстаткиТоваров" + СокрЛП(НомерКолонки) + "
			|;
			|///////////////////////////////////////////////////////";
			
		Иначе
			
			// 1. Из регистра ТоварыОрганизаций получим ВТ с остатками номенклатуры по количеству
			// 2. Из регистра ЦеныНоменклатуры получим ВТ с ценами номенклатуры
			// 3. Из таблиц п.1 и п.2 получим ВТ с остатками номенклатуры по количеству и сумме
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	ОстаткиТоварыОрганизаций.Номенклатура				КАК Номенклатура,
			|	ОстаткиТоварыОрганизаций.ХарактеристикаНоменклатуры	КАК ХарактеристикаНоменклатуры,
			|	ОстаткиТоварыОрганизаций.КоличествоОстаток 			КАК Количество
			|
			|ПОМЕСТИТЬ ОстаткиТоварыОрганизаций
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций.Остатки(
			|			&Граница" + СокрЛП(НомерКолонки) + ",
			|			Организация = &Организация
			|				И Склад = &Склад
			|	) КАК ОстаткиТоварыОрганизаций
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	ХарактеристикаНоменклатуры
			|;
			|///////////////////////////////////////////////////////
			|
			|ВЫБРАТЬ
			|	ЦеныНоменклатуры.Номенклатура					КАК Номенклатура,
			|	ЦеныНоменклатуры.ХарактеристикаНоменклатуры		КАК ХарактеристикаНоменклатуры,
			|	СРЕДНЕЕ(
			|		ЦеныНоменклатуры.Цена
			|		* ЕСТЬNULL(КурсыВалют.Курс, 0)
			|		* ВЫБОР
			|			КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент ЕСТЬ NULL 
			|				ИЛИ ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент = 0
			|			ТОГДА 1
			|			ИНАЧЕ ЦеныНоменклатуры.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 
			|					/ ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент
			|		  КОНЕЦ 
			|		* ЕСТЬNULL(КурсВалютыУчета.Кратность, 1) 
			|		/ (ЕСТЬNULL(КурсВалютыУчета.Курс, 1) 
			|			* ВЫБОР
			|				КОГДА КурсыВалют.Кратность ЕСТЬ NULL 
			|					ИЛИ КурсыВалют.Кратность = 0
			|				ТОГДА 1
			|				ИНАЧЕ КурсыВалют.Кратность
			|			 КОНЕЦ)
			|	) 												КАК Цена
			|	
			|ПОМЕСТИТЬ ЦеныНоменклатуры
			|ИЗ
			|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|			&Граница" + СокрЛП(НомерКолонки) + ", 
			|			ТипЦен = &ТипЦен
			|				И (Номенклатура, ХарактеристикаНоменклатуры) 
			|					В (ВЫБРАТЬ Номенклатура, ХарактеристикаНоменклатуры ИЗ ОстаткиТоварыОрганизаций)
			|	) КАК ЦеныНоменклатуры
			|		
			|ЛЕВОЕ СОЕДИНЕНИЕ 
			|	РегистрСведений.КурсыВалют.СрезПоследних(
			|		&Граница" + СокрЛП(НомерКолонки) + "
			|	) КАК КурсыВалют
			|		ПО КурсыВалют.Валюта = ЦеныНоменклатуры.Валюта
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ 
			|	РегистрСведений.КурсыВалют.СрезПоследних(
			|		&Граница" + СокрЛП(НомерКолонки) + ",
			|		Валюта = &ВалютаРегламентированногоУчета
			|	) КАК КурсВалютыУчета
			|		ПО ИСТИНА
			|
			|СГРУППИРОВАТЬ ПО
			|	ЦеныНоменклатуры.Номенклатура,
			|	ЦеныНоменклатуры.ХарактеристикаНоменклатуры
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	ХарактеристикаНоменклатуры
			|;
			|///////////////////////////////////////////////////////
			|
			|ВЫБРАТЬ
			|	ОстаткиТоварыОрганизаций.Номенклатура			КАК Номенклатура,
			|	СУММА(ОстаткиТоварыОрганизаций.Количество)		КАК Количество,
			|	СУММА(ОстаткиТоварыОрганизаций.Количество 
			|			* ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0))	КАК Сумма
			|	
			|ПОМЕСТИТЬ ОстаткиТоваров" + СокрЛП(НомерКолонки) + "
			|ИЗ
			|	ОстаткиТоварыОрганизаций КАК ОстаткиТоварыОрганизаций
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ 
			|	ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО ОстаткиТоварыОрганизаций.Номенклатура = ЦеныНоменклатуры.Номенклатура
			|			И ОстаткиТоварыОрганизаций.ХарактеристикаНоменклатуры = ЦеныНоменклатуры.ХарактеристикаНоменклатуры
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиТоварыОрганизаций.Номенклатура
			|;
			|/////////////////////////////////////////////////////////////////////////
			|
			|УНИЧТОЖИТЬ ОстаткиТоварыОрганизаций
			|;
			|/////////////////////////////////////////////////////////////////////////
			|
			|УНИЧТОЖИТЬ ЦеныНоменклатуры
			|;
			|/////////////////////////////////////////////////////////////////////////";
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Выберем данные для формирования отчета из временных таблиц
	ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ОстаткиТоваров.Номенклатура														КАК Номенклатура,
		|	ОстаткиТоваров.Номенклатура.Код 												КАК ПечКод,
		|	ОстаткиТоваров.Номенклатура.Наименование 										КАК ПечНоменклатура,
		|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков 							КАК ЕдИзм,
		|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков.Наименование 				КАК ПечЕдИзм,
		|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код КАК ПечКодЕдИзм,
		|	СУММА(ОстаткиТоваров.Количество1)												КАК Количество1,
		|	СУММА(ОстаткиТоваров.Сумма1) 													КАК Сумма1,
		|	СУММА(ОстаткиТоваров.Количество2)												КАК Количество2,
		|	СУММА(ОстаткиТоваров.Сумма2) 													КАК Сумма2,
		|	СУММА(ОстаткиТоваров.Количество3)												КАК Количество3,
		|	СУММА(ОстаткиТоваров.Сумма3) 													КАК Сумма3
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОстаткиТоваров1.Номенклатура КАК Номенклатура,
		|		ОстаткиТоваров1.Количество 	 КАК Количество1,
		|		ОстаткиТоваров1.Сумма 		 КАК Сумма1,
		|		0 							 КАК Количество2,
		|		0 							 КАК Сумма2,
		|		0 							 КАК Количество3,
		|		0 							 КАК Сумма3
		|	ИЗ
		|		ОстаткиТоваров1 КАК ОстаткиТоваров1
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОстаткиТоваров2.Номенклатура КАК Номенклатура,
		|		0 							 КАК Количество1,
		|		0 							 КАК Сумма1,
		|		ОстаткиТоваров2.Количество 	 КАК Количество2,
		|		ОстаткиТоваров2.Сумма 		 КАК Сумма2,
		|		0 							 КАК Количество3,
		|		0 							 КАК Сумма3
		|	ИЗ
		|		ОстаткиТоваров2 КАК ОстаткиТоваров2
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОстаткиТоваров3.Номенклатура КАК Номенклатура,
		|		0 							 КАК Количество1,
		|		0 							 КАК Сумма1,
		|		0 							 КАК Количество2,
		|		0 							 КАК Сумма2,
		|		ОстаткиТоваров3.Количество 	 КАК Количество3,
		|		ОстаткиТоваров3.Сумма 		 КАК Сумма3
		|	ИЗ
		|		ОстаткиТоваров3 КАК ОстаткиТоваров3
		|	) КАК ОстаткиТоваров
		|
		|ГДЕ
		|	ОстаткиТоваров.Номенклатура <> НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиТоваров.Номенклатура,
		|	ОстаткиТоваров.Номенклатура.Код,
		|	ОстаткиТоваров.Номенклатура.Наименование,
		|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков,
		|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков.Наименование,
		|	ОстаткиТоваров.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОстаткиТоваров.Номенклатура.Наименование
		|
		|ИТОГИ
		|	СУММА(Количество1),
		|	СУММА(Сумма1),
		|	СУММА(Количество2),
		|	СУММА(Сумма2),
		|	СУММА(Количество3),
		|	СУММА(Сумма3)
		|ПО
		|	ОБЩИЕ";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции


Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НЕ ВыводитьДанныеВКолонку1 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Дата1");
	КонецЕсли;
	Если НЕ ВыводитьДанныеВКолонку2 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Дата2");
	КонецЕсли;
	Если НЕ ВыводитьДанныеВКолонку3 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Дата3");
	КонецЕсли;
	
	Для Каждого ИмяРеквизита Из МассивНепроверяемыхРеквизитов Цикл
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти(ИмяРеквизита));
	КонецЦикла;
	
	Если НЕ ВыводитьДанныеВКолонку1 И НЕ ВыводитьДанныеВКолонку2 И НЕ ВыводитьДанныеВКолонку3 Тогда
		ОбщегоНазначения.Сообщение("Не выбрана ни одна колонка для заполнения");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////

мКоличествоКолонок 				= 3;
мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
