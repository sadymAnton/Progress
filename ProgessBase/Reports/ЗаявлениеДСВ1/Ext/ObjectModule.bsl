Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета

Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю
Перем Макет;

Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	ЗначениеПанелипользователя = ТиповыеОтчеты.ПолучитьЗначенияНастроекПанелиПользователяОбъекта(ЭтотОбъект);
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	
	КомпоновщикНастроек.Настройки.Структура.Очистить();
	КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	Группивровка = ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "Организация");
	ПолеГруппировки = Группивровка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("ФизЛицо");
	ПолеГруппировки.Использование = истина;
	
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "АдресДляИнформирования");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "Имя");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "Отчество");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "СтраховойНомерПФР");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "Фамилия");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "НаименованиеПФР");
	
	ТиповыеОтчеты.УстановитьПараметрВывода(КомпоновщикНастроек, "VerticalOverallPlacement", РасположениеИтоговКомпоновкиДанных.Нет);
	
	Результат.Очистить();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	// установить период по умолчанию
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Данные =  Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(Данные);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	
	Результат.Очистить();
	Результат.ПолеСлева				= 0;
	Результат.ПолеСправа			= 0;
	Результат.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Форма_ДСВ1";
	Результат.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	Результат.АвтоМасштаб           = истина;
	
	Макет = ПолучитьМакет("ФормаДСВ_1");

	ПервыйПроходЦикла = истина;
	
	Для каждого СтрокаСотрудника из Данные Цикл
		Если НЕ ПервыйПроходЦикла тогда
			Результат.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйПроходЦикла = Ложь;
		КонецЕсли;
		ВывестиЗаявлениеСотрудника(Результат, СтрокаСотрудника);
	КонецЦикла;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	Возврат Результат;
		
КонецФункции


Процедура ВывестиЗаявлениеСотрудника(Результат, Данные)
	
	Макет.Параметры.НаименованиеПФР = СокрЛП(Данные.НаименованиеПФР);
	Макет.Параметры.Фамилия = Данные.Фамилия;
	Макет.Параметры.Имя = Данные.Имя;
	Макет.Параметры.Отчество = Данные.Отчество;
	Адрес = Данные.АдресДляИнформирования;
	Если СтрДлина(Адрес) > 70 Тогда
		ИндексПереносаСтроки = 70;
		Пока ИндексПереносаСтроки > 0 Цикл
			Если Сред(Адрес, ИндексПереносаСтроки, 1) = "," Тогда
				Прервать;
			Иначе
				ИндексПереносаСтроки = ИндексПереносаСтроки - 1;
			КонецЕсли;
		КонецЦикла;
		Макет.Параметры.Адрес_1 = СОКРЛП(Лев(Адрес, ИндексПереносаСтроки));
		Макет.Параметры.Адрес_2 = СокрЛП(Сред(Адрес, ИндексПереносаСтроки + 1));
	Иначе
		Макет.Параметры.Адрес_1 = СокрЛП(Адрес);
		Макет.Параметры.Адрес_2 = "";
	КонецЕсли;
	
	НомерПФР = СтрЗаменить(СтрЗаменить(Данные.СтраховойНомерПФР, "-", ""), " ", "");
	Макет.Параметры.НомерПФР_1 = Сред(НомерПФР, 1, 1);
	Макет.Параметры.НомерПФР_2 = Сред(НомерПФР, 2, 1);
	Макет.Параметры.НомерПФР_3 = Сред(НомерПФР, 3, 1);
	Макет.Параметры.НомерПФР_4 = Сред(НомерПФР, 4, 1);
	Макет.Параметры.НомерПФР_5 = Сред(НомерПФР, 5, 1);
	Макет.Параметры.НомерПФР_6 = Сред(НомерПФР, 6, 1);
	Макет.Параметры.НомерПФР_7 = Сред(НомерПФР, 7, 1);
	Макет.Параметры.НомерПФР_8 = Сред(НомерПФР, 8, 1);
	Макет.Параметры.НомерПФР_9 = Сред(НомерПФР, 9, 1);
	Макет.Параметры.НомерПФР_10 = Сред(НомерПФР, 10, 1);
	Макет.Параметры.НомерПФР_11 = Сред(НомерПФР, 11, 1);
	
	Результат.Вывести(Макет);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт

	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

Процедура ПрименитьНастройку() Экспорт
	
	Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);

	// Считываение структуры настроек отчета
 	Если Не СохраненнаяНастройка.Пустая() Тогда
		
		СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
		Если Не СтруктураНастроек = Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	КонецЕсли;

КонецПроцедуры

Процедура ПередВыводомЭлементРезультата(МакетКомпоновки, ПроцессорКомпоновки, ЭлементРезультата) Экспорт
	
КонецПроцедуры

Процедура ПередВыводомОтчета(МакетКомпоновки, ПроцессорКомпоновки) Экспорт
	
	
КонецПроцедуры

Процедура ПриВыводеЗаголовкаОтчета(ОбластьЗаголовок) Экспорт
КонецПроцедуры

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	СписокПолейПодстановкиОтборовПоУмолчанию = Новый Соответствие;
	СписокПолейПодстановкиОтборовПоУмолчанию.Вставить("Организация", "ОсновнаяОрганизация");
	
	Возврат Новый Структура("ИспользоватьСобытияПриФормированииОтчета,
	|ПриВыводеЗаголовкаОтчета,
	|ПослеВыводаПанелиПользователя,
	|ПослеВыводаПериода,
	|ПослеВыводаПараметра,
	|ПослеВыводаГруппировки,
	|ПослеВыводаОтбора,
	|ДействияПанелиИзменениеФлажкаДопНастроек,
	|ПриПолучениеНастроекПользователя, 
	|ЗаполнитьОтборыПоУмолчанию, 
	|СписокПолейПодстановкиОтборовПоУмолчанию", 
	ложь, ложь, ложь, ложь, ложь, ложь, ложь, ложь, ложь, истина, СписокПолейПодстановкиОтборовПоУмолчанию);
КонецФункции

#Если ТолстыйКлиентОбычноеПриложение Тогда
	
// Настройка отчета при отработки расшифровки
Процедура Настроить(Отбор) Экспорт
	
	// Настройка отбора
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
		Иначе
			ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
		КонецЕсли;
		
		Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
		Иначе
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			Если ЭлементОтбора.Иерархия Тогда
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
				КонецЕсли;
			Иначе
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				КонецЕсли;
			КонецЕсли;
			
			НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
	
КонецПроцедуры

#КонецЕсли

Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
КонецПроцедуры

Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;

Если КомпоновщикНастроек = Неопределено Тогда
	КомпоновщикНастроек =  Новый КомпоновщикНастроекКомпоновкиДанных;
КонецЕсли;

УправлениеОтчетами.ЗаменитьНазваниеПолейСхемыКомпоновкиДанных(СхемаКомпоновкиДанных)
