Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета

Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю

#Если Клиент ИЛИ ВнешнееСоединение Тогда
	
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	//ЗначениеПанелипользователя = ТиповыеОтчеты.ПолучитьЗначенияНастроекПанелиПользователяОбъекта(ЭтотОбъект);
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	
	//СтруктураВнешнихДанных = Новый Структура;
	//СтруктураВнешнихДанных.Вставить("ТаблицаДанных", СформироватьТаблицуДанных());
		
	ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета); //,СтруктураВнешнихДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	
	СпКолонокДляОбъединения = Новый СписокЗначений;
	СтрокаШапки = 0;
		
	Область = Результат.НайтиТекст("Код рецептуры",,,,Истина);
	Если Не ТипЗнч(Область) = Тип("Неопределено") Тогда
		//ОбъединитьСтроки(Результат, Область.Лево, Область.Верх);
		СпКолонокДляОбъединения.Добавить(Область.Лево);
		Если СтрокаШапки = 0 Тогда
			СтрокаШапки = Область.Верх;
		КонецЕсли;
	КонецЕсли;

	Область = Результат.НайтиТекст("Код версии",,,,Истина);
	Если Не ТипЗнч(Область) = Тип("Неопределено") Тогда
		//ОбъединитьСтроки(Результат, Область.Лево, Область.Верх);
		СпКолонокДляОбъединения.Добавить(Область.Лево);
		Если СтрокаШапки = 0 Тогда
			СтрокаШапки = Область.Верх;
		КонецЕсли;
	КонецЕсли;
	
	Область = Результат.НайтиТекст("ГП",,,,Истина);
	Если Не ТипЗнч(Область) = Тип("Неопределено") Тогда
		//ОбъединитьСтроки(Результат, Область.Лево, Область.Верх);
		СпКолонокДляОбъединения.Добавить(Область.Лево);
		Если СтрокаШапки = 0 Тогда
			СтрокаШапки = Область.Верх;
		КонецЕсли;
	КонецЕсли;
	
	Область = Результат.НайтиТекст("Дата изменения",,,,Истина);
	Если Не ТипЗнч(Область) = Тип("Неопределено") Тогда
		//ОбъединитьСтроки(Результат, Область.Лево, Область.Верх);
		СпКолонокДляОбъединения.Добавить(Область.Лево);
		Если СтрокаШапки = 0 Тогда
			СтрокаШапки = Область.Верх;
		КонецЕсли;
	КонецЕсли;
	
	Область = Результат.НайтиТекст("Описание изменений",,,,Истина);
	Если Не ТипЗнч(Область) = Тип("Неопределено") Тогда
		//ОбъединитьСтроки(Результат, Область.Лево, Область.Верх);
		СпКолонокДляОбъединения.Добавить(Область.Лево);
		Если СтрокаШапки = 0 Тогда
			СтрокаШапки = Область.Верх;
		КонецЕсли;
	КонецЕсли;
	
	Если СпКолонокДляОбъединения.Количество() > 0 Тогда
		ОбъединитьСтроки(Результат, СпКолонокДляОбъединения, СтрокаШапки);
	КонецЕсли;
		
КонецФункции

Процедура СохранитьНастройку() Экспорт

	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

Процедура ПрименитьНастройку() Экспорт
	
	Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);

	// Считываение структуры настроек отчета
 	Если Не СохраненнаяНастройка.Пустая() Тогда
		
		СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
		Если Не СтруктураНастроек = Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	КонецЕсли;

КонецПроцедуры

//Процедура ПередВыводомЭлементРезультата(МакетКомпоновки, ПроцессорКомпоновки, ЭлементРезультата) Экспорт
//КонецПроцедуры

//Процедура ПередВыводомОтчета(МакетКомпоновки, ПроцессорКомпоновки) Экспорт
//КонецПроцедуры

//Процедура ПриВыводеЗаголовкаОтчета(ОбластьЗаголовок) Экспорт
//КонецПроцедуры

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	СтруктураНатроек = Новый Структура();
	//СтруктураНатроек.Вставить("ИспользоватьСобытияПриФормированииОтчета", истина);
	//СтруктураНатроек.Вставить("ПриВыводеЗаголовкаОтчета",                 истина);
	//СтруктураНатроек.Вставить("ПослеВыводаПанелиПользователя",            истина);
	//СтруктураНатроек.Вставить("ПослеВыводаПериода",                       истина);
	//СтруктураНатроек.Вставить("ПослеВыводаПараметра",                     истина);
	//СтруктураНатроек.Вставить("ПослеВыводаГруппировки",                   истина);
	//СтруктураНатроек.Вставить("ПослеВыводаОтбора",                        истина);
	//СтруктураНатроек.Вставить("ДействияПанелиИзменениеФлажкаДопНастроек", истина);
	//СтруктураНатроек.Вставить("ПриПолучениеНастроекПользователя",         истина);
	Возврат СтруктураНатроек;
КонецФункции

#КонецЕсли

#Если Клиент Тогда
	
// Настройка отчета при отработки расшифровки
Процедура Настроить(Отбор) Экспорт
	
	// Настройка отбора
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
		Иначе
			ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
		КонецЕсли;
		
		Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
		Иначе
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			Если ЭлементОтбора.Иерархия Тогда
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
				КонецЕсли;
			Иначе
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				КонецЕсли;
			КонецЕсли;
			
			НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
	
КонецПроцедуры

#КонецЕсли

Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	//ПараметрНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	//Если ПараметрНачалоПериода <> Неопределено Тогда
	//	ПараметрНачалоПериода.Использование = Истина;
	//КонецЕсли;
	//
	//ПараметрКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	//Если ПараметрКонецПериода <> Неопределено Тогда
	//	ПараметрКонецПериода.Использование = Истина;
	//КонецЕсли;	
КонецПроцедуры

Процедура ОбъединитьСтроки(Результат, СпКолонокДляОбъединения, НачальнаяСтрока)
	
	НомерПервойСтроки             = НачальнаяСтрока;
    НомерПоследнейСтроки          = Результат.ВысотаТаблицы;
	
	ТабДляОбъединений = Новый ТаблицаЗначений;
	ТабДляОбъединений.Колонки.Добавить("НомерКолонки");
	ТабДляОбъединений.Колонки.Добавить("НачалоВыделения");
	ТабДляОбъединений.Колонки.Добавить("ВыделеннаяОбластьНачало");
	ТабДляОбъединений.Колонки.Добавить("ВыделеннаяОбластьОкончание");
	
	Для каждого НужнаяКолонка Из СпКолонокДляОбъединения Цикл
	
		НоваяСтрока = ТабДляОбъединений.Добавить();
		НоваяСтрока.НомерКолонки = НужнаяКолонка.Значение;
		
		НоваяСтрока.НачалоВыделения = Истина;
		НоваяСтрока.ВыделеннаяОбластьНачало = 0;
		НоваяСтрока.ВыделеннаяОбластьОкончание = 0;	
	
	КонецЦикла; 
		   
	Для НомерСтрокиТаблицы = НомерПервойСтроки По НомерПоследнейСтроки Цикл
		
		Для каждого НужнаяКолонка Из ТабДляОбъединений Цикл
			
			ТекстТекущейЯчеи     = Результат.Область(НомерСтрокиТаблицы, НужнаяКолонка.НомерКолонки, НомерСтрокиТаблицы, НужнаяКолонка.НомерКолонки).Текст;
			ТекстЯчеиСнизу        = Результат.Область(НомерСтрокиТаблицы+1, НужнаяКолонка.НомерКолонки, НомерСтрокиТаблицы+1, НужнаяКолонка.НомерКолонки).Текст;
			
			Если НужнаяКолонка.НачалоВыделения Тогда
				
				НужнаяКолонка.ВыделеннаяОбластьНачало = НомерСтрокиТаблицы;
				
			КонецЕсли;
			
			Если ТекстТекущейЯчеи = ТекстЯчеиСнизу И Не ПустаяСтрока(ТекстТекущейЯчеи) Тогда
				
				НужнаяКолонка.ВыделеннаяОбластьОкончание  = НомерСтрокиТаблицы;
				НужнаяКолонка.НачалоВыделения             = Ложь;
				
			ИначеЕсли НужнаяКолонка.ВыделеннаяОбластьНачало <= НужнаяКолонка.ВыделеннаяОбластьОкончание Тогда
				
				ОбластьОбъединения = Результат.Область(НужнаяКолонка.ВыделеннаяОбластьНачало, НужнаяКолонка.НомерКолонки, НужнаяКолонка.ВыделеннаяОбластьОкончание+1, НужнаяКолонка.НомерКолонки);
				ОбластьОбъединения.Объединить();
				НужнаяКолонка.НачалоВыделения = Истина;
				
			КонецЕсли;
			
		КонецЦикла;		

		
		#Если Клиент Тогда
			Состояние("Объединение вывода ячеек " + СокрЛП(НомерСтрокиТаблицы) + "/" + СокрЛП(НомерПоследнейСтроки));
		#КонецЕсли
       
	КонецЦикла; 	
	
КонецПроцедуры 	

Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;
