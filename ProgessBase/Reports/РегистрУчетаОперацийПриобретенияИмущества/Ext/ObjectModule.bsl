#Если Клиент Тогда
	
Перем НП Экспорт;

Перем Счет07;
Перем Счет08;
Перем Счет08_01;
Перем Счет08_02;
Перем Счет08_03;
Перем Счет08_04;
Перем Счет08_05;
Перем Счет08_08;
Перем Счет10;
Перем Счет20;
Перем Счет23;
Перем Счет25;
Перем Счет26;
Перем Счет28;
Перем Счет29;
Перем Счет20_01_01;
Перем Счет23_01;
Перем Счет25_01;
Перем Счет28_01;
Перем Счет29_01;
Перем Счет20_01_02;
Перем Счет23_02;
Перем Счет25_02;
Перем Счет26_02;
Перем Счет28_02;
Перем Счет29_02;
Перем Счет41;
Перем Счет44;
Перем Счет44_01;
Перем Счет58_01_1;
Перем Счет58_01_2;
Перем Счет58_02;
Перем Счет58_05;
Перем Счет91_02;
Перем Счет91_02_1;
Перем Счет91_02_2;
Перем Счет91_02_3;
Перем Счет91_02_4;
Перем Счет91_02_5;
Перем Счет91_02_7;
Перем Счет91_02_9;
Перем Счет97;
Перем СчетНПВ;

Перем СписокСчетовВозврата;


// Формирует массив в который помещеет только отмеченные
// в списке значения.
//
// Параметры:
// СписокЗначений - список значений из которого выбирются элементы
Функция МассивИзПомеченныхЭлементов(СписокЗначений)

	Массив = Новый СписокЗначений;

	Для каждого ЭлементСписка из СписокЗначений Цикл

		Если ЭлементСписка.Пометка Тогда
			Массив.Добавить(ЭлементСписка.Значение);
		КонецЕсли;

	КонецЦикла;

	Возврат Массив;

КонецФункции

Функция ВидРасходаПоОперации(Счет, Субконто1, Субконто2, Субконто3, Выборка)

	ВидРасхода       = "";
	ОбъектУчета      = "";
	ДатаПринятия     = "";
	ДокументПринятия = "";

	Попытка
		ВидЗатратНалоговогоУчета = Субконто1.ВидРасходовНУ;
	Исключение
		Попытка
			ВидЗатратНалоговогоУчета = Субконто2.ВидРасходовНУ;
		Исключение
			
			Попытка
				ВидЗатратНалоговогоУчета = Субконто1.ВидПрочихДоходовИРасходов;
			Исключение
				ВидЗатратНалоговогоУчета = "";
			КонецПопытки;
		КонецПопытки;
	КонецПопытки;  
	
	Если Счет.ПринадлежитЭлементу(Счет07) ИЛИ Счет = Счет07 Тогда
		ВидРасхода  = "На приобретение оборудования, требующего монтажа";
		ОбъектУчета = СокрЛП(Выборка.НоменклатураНаименованиеПолное);
		Если  НЕ ЗначениеЗаполнено(ОбъектУчета) Тогда
			 ОбъектУчета = СокрЛП(Выборка.СубконтоДт2);
		ИначеЕсли  НЕ ЗначениеЗаполнено(ОбъектУчета) Тогда
			 ОбъектУчета = СокрЛП(Выборка.СубконтоДт3);	 
		ИначеЕсли  НЕ ЗначениеЗаполнено(ОбъектУчета) Тогда
			ОбъектУчета = Строка(Субконто1);
		КонецЕсли;

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет08) ИЛИ Счет = Счет08 Тогда
		ВидРасхода  = "На приобретение ОС";
		Если НЕ ЗначениеЗаполнено(Выборка.НоменклатураНаименованиеПолное) Тогда
			ОбъектУчета = Строка(Субконто1);
		Иначе
			ОбъектУчета = СокрЛП(Выборка.НоменклатураНаименованиеПолное);
		КонецЕсли;
		
		ДокументПринятия = "";
		ДатаПринятия     = "";
		ДокументыПринятия = Новый СписокЗначений;
		
		// Попробуем найти операции принятия к учету внеоборотных активов.			 
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Счет",        Счет);
		Запрос.УстановитьПараметр("Субконто1",   Субконто1);
		Запрос.УстановитьПараметр("Субконто2",   Субконто2);
		Запрос.УстановитьПараметр("Субконто3",   Субконто3);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("НачПериода",  Выборка.ДатаОперации);
		Запрос.УстановитьПараметр("КонПериода",  КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("ВидУчета",    Перечисления.ВидыУчетаПоПБУ18.НУ);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НалоговыйДвиженияССубконто.Регистратор КАК ДокументПринятия,
		|	НалоговыйДвиженияССубконто.Период      КАК ДатаПринятия
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.ДвиженияССубконто(
		|		&НачПериода,
		|		&КонПериода,
		|		Организация = &Организация
	|		    И Активность = Истина
		|			И СчетКт = &Счет
		|			" + ?(?(ЗначениеЗаполнено(Субконто1), НЕ (Счет.ВидыСубконто[0].ТолькоОбороты = Истина), Ложь), "И СубконтоКт1 = &Субконто1", "") + "
		|			" + ?(?(ЗначениеЗаполнено(Субконто2), НЕ (Счет.ВидыСубконто[1].ТолькоОбороты = Истина), Ложь), "И СубконтоКт2 = &Субконто2", "") + "
		|			" + ?(?(ЗначениеЗаполнено(Субконто3), НЕ (Счет.ВидыСубконто[2].ТолькоОбороты = Истина), Ложь), "И СубконтоКт3 = &Субконто3", "") + "
		|			И ВидУчетаДт = &ВидУчета
		|			И ВидУчетаКт = &ВидУчета) КАК НалоговыйДвиженияССубконто
		|";
		ВыборкаОбъектовУчета = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаОбъектовУчета.Следующий() Цикл
			ДокументПринятия = ДокументПринятия + ?(НЕ ЗначениеЗаполнено(ДокументПринятия), "", ", ") + ВыборкаОбъектовУчета.ДокументПринятия;
			ДатаПринятия     = ДатаПринятия + ?(НЕ ЗначениеЗаполнено(ДатаПринятия), "", ", ") + Формат(ВыборкаОбъектовУчета.ДатаПринятия, "ДФ=dd.MM.yyyy");
			ДокументыПринятия.Добавить(ВыборкаОбъектовУчета.ДокументПринятия);
			
		КонецЦикла;
		
		Если Счет.ПринадлежитЭлементу(Счет08_01) ИЛИ Счет = Счет08_01 ИЛИ
			 Счет.ПринадлежитЭлементу(Счет08_02) ИЛИ Счет = Счет08_02 ИЛИ
			 Счет.ПринадлежитЭлементу(Счет08_03) ИЛИ Счет = Счет08_03 ИЛИ
			 Счет.ПринадлежитЭлементу(Счет08_04) ИЛИ Счет = Счет08_04 Тогда

		ИначеЕсли Счет.ПринадлежитЭлементу(Счет08_05) ИЛИ Счет = Счет08_05 Тогда
			ВидРасхода = "На приобретение НМА";

		ИначеЕсли Счет.ПринадлежитЭлементу(Счет08_08) ИЛИ Счет = Счет08_08 Тогда
			ВидРасхода = "На НИОКР";

		КонецЕсли;

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет10) ИЛИ Счет = Счет10 Тогда
		ВидРасхода  = "На приобретение материалов";
		Если НЕ ЗначениеЗаполнено(Выборка.НоменклатураНаименованиеПолное) Тогда
			ОбъектУчета = Строка(Субконто1);
		Иначе
			ОбъектУчета = СокрЛП(Выборка.НоменклатураНаименованиеПолное);
		КонецЕсли;

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет41) ИЛИ Счет = Счет41 Тогда
		ВидРасхода = "На приобретение товаров";
		Если НЕ ЗначениеЗаполнено(Выборка.НоменклатураНаименованиеПолное) Тогда
			ОбъектУчета = Строка(Субконто1);
		Иначе
			ОбъектУчета = СокрЛП(Выборка.НоменклатураНаименованиеПолное);
		КонецЕсли;

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет58_01_1) ИЛИ Счет = Счет58_01_1 Тогда
		ВидРасхода  = "На приобретение паев";
		Если НЕ ЗначениеЗаполнено(Выборка.НоменклатураНаименованиеПолное) Тогда
			ОбъектУчета = Строка(Субконто1);
		Иначе
			ОбъектУчета = СокрЛП(Выборка.НоменклатураНаименованиеПолное);
		КонецЕсли;

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет58_01_2) ИЛИ Счет = Счет58_01_2
		  ИЛИ Счет.ПринадлежитЭлементу(Счет58_02)   ИЛИ Счет = Счет58_02 Тогда
		ВидРасхода  = "На приобретение ценных бумаг";
		ОбъектУчета = Строка(Субконто1) + " (" + Строка(Субконто2) + ")";

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет58_05) ИЛИ Счет = Счет58_05 Тогда
		ВидРасхода  = "На приобретение прав требования";
		ОбъектУчета = Строка(Субконто1) + " (" + Строка(Субконто2) + ")";

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет44_01) ИЛИ Счет = Счет44_01 Тогда
		Если ВидЗатратНалоговогоУчета = Перечисления.ВидыРасходовНУ.ТранспортныеРасходы Тогда
			ВидРасхода = "Транспортные расходы";
		Иначе
			 ВидРасхода = "Издержки обращения";

		КонецЕсли;

	ИначеЕсли (ВидЗатратНалоговогоУчета = Перечисления.ВидыРасходовНУ.ПредставительскиеРасходы)
			  И
			  (Счет.ПринадлежитЭлементу(Счет44)       ИЛИ Счет = Счет44 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет20_01_02) ИЛИ Счет = Счет20_01_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет23_02)    ИЛИ Счет = Счет23_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет25_02)    ИЛИ Счет = Счет25_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет26_02)    ИЛИ Счет = Счет26_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет28_02)    ИЛИ Счет = Счет28_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет29_02))   ИЛИ Счет = Счет29_02 Тогда
			ВидРасхода = "Представительские расходы";

	ИначеЕсли (ВидЗатратНалоговогоУчета = Перечисления.ВидыРасходовНУ.РасходыНаРекламуНормируемые)
			  И
			  (Счет.ПринадлежитЭлементу(Счет44)       ИЛИ Счет = Счет44 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет20_01_02) ИЛИ Счет = Счет20_01_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет23_02)    ИЛИ Счет = Счет23_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет25_02)    ИЛИ Счет = Счет25_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет26_02)    ИЛИ Счет = Счет26_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет28_02)    ИЛИ Счет = Счет28_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет29_02))   ИЛИ Счет = Счет29_02 Тогда
			ВидРасхода = "Расходы на рекламу (нормируемые)";

	ИначеЕсли (
			  (Счет.ПринадлежитЭлементу(Счет44)       ИЛИ Счет = Счет44 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет20_01_02) ИЛИ Счет = Счет20_01_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет23_02)    ИЛИ Счет = Счет23_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет25_02)    ИЛИ Счет = Счет25_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет26_02)    ИЛИ Счет = Счет26_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет28_02)    ИЛИ Счет = Счет28_02 ИЛИ 
			   Счет.ПринадлежитЭлементу(Счет29_02))   ИЛИ Счет = Счет29_02
			   )
			   И
			   (ВидЗатратНалоговогоУчета <> Перечисления.ВидыРасходовНУ.ТранспортныеРасходы ИЛИ
			    ВидЗатратНалоговогоУчета <> Перечисления.ВидыРасходовНУ.ПредставительскиеРасходы ИЛИ
			    ВидЗатратНалоговогоУчета <> Перечисления.ВидыРасходовНУ.РасходыНаРекламуНормируемые ИЛИ
			    ВидЗатратНалоговогоУчета <> Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения) Тогда
			ВидРасхода  = "Косвенные расходы";
			ОбъектУчета = ВидЗатратНалоговогоУчета;

	ИначеЕсли (Счет.ПринадлежитЭлементу(Счет20_01_01) ИЛИ Счет = Счет20_01_01 ИЛИ
			   Счет.ПринадлежитЭлементу(Счет23_01)    ИЛИ Счет = Счет23_01 ИЛИ
			   Счет.ПринадлежитЭлементу(Счет25_01)    ИЛИ Счет = Счет25_01 ИЛИ
			   Счет.ПринадлежитЭлементу(Счет29_01)    ИЛИ Счет = Счет29_01 ИЛИ
			   Счет.ПринадлежитЭлементу(Счет28_01)    ИЛИ Счет = Счет28_01 ) Тогда
			ВидРасхода  = "Прямые расходы";
			ОбъектУчета = ВидЗатратНалоговогоУчета;

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет91_02_1) ИЛИ Счет = Счет91_02_1 Тогда
		ВидРасхода = "Расходы на реализацию ОС";
		ОбъектУчета = Строка(Субконто2);

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет91_02_2) ИЛИ Счет = Счет91_02_2 Тогда
		ВидРасхода = "Расходы на реализацию НМА";
		ОбъектУчета = Строка(Субконто2);

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет91_02_3) ИЛИ Счет = Счет91_02_3 Тогда
		Если ТипЗнч(Субконто2) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если НЕ Субконто2.Услуга Тогда
				ВидРасхода = "Расходы на реализацию прочего имущества";
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет91_02_4)  ИЛИ Счет = Счет91_02_4 Тогда
		ВидРасхода = "Расходы, связанные с реализацией имущественных прав";
		ОбъектУчета = Строка(Субконто2) + " (" + Строка(Субконто3) + ")";

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет91_02_5)  ИЛИ Счет = Счет91_02_5 Тогда
		ВидРасхода = "Расходы, связанные с реализацией ЦБ";
		ОбъектУчета = Строка(Субконто2);

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет91_02_7)  ИЛИ Счет = Счет91_02_7  Тогда
		Если ВидЗатратНалоговогоУчета <> Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения Тогда
			ВидРасхода  = "Внереализационные расходы";
			ОбъектУчета = Строка(Субконто1);
		КонецЕсли;
	ИначеЕсли Счет.ПринадлежитЭлементу(Счет91_02_9)  ИЛИ Счет = Счет91_02_9 Тогда
		Если ВидЗатратНалоговогоУчета <> Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения Тогда
			ВидРасхода  = "Прочие косвенные расходы";
			ОбъектУчета = Строка(Субконто1);
		КонецЕсли;
		
	ИначеЕсли выборка.УсловиеПоступления = "91" Тогда
			ВидРасхода  = "Внереализационные доходы";
			ОбъектУчета = Строка(Субконто1);
		

	ИначеЕсли Счет.ПринадлежитЭлементу(Счет97) ИЛИ Счет = Счет97 Тогда
		ВидРасхода = "Прочие РБП";
		//На долгосрочное страхование жизни
		//На освоение природных ресурсов
		//Страхование на оплату медицинских расходов
		//Страхование на случай смерти и утраты трудоспособности

	Иначе
		ВидРасхода = "Без расходов";

	КонецЕсли;
	
	    Если  НЕ ЗначениеЗаполнено(ОбъектУчета) Тогда
	    	 ОбъектУчета = СокрЛП(Выборка.СубконтоДт2);
		КонецЕсли;	 
	    Если  НЕ ЗначениеЗаполнено(ОбъектУчета) Тогда
	    	 ОбъектУчета = СокрЛП(Выборка.СубконтоДт3);
		КонецЕсли;	 
 	    Если  НЕ ЗначениеЗаполнено(ОбъектУчета) Тогда
	    	ОбъектУчета = Строка(Субконто1);
		КонецЕсли;

	Возврат Новый Структура("ВидРасхода, ОбъектУчета, ДатаПринятия, ДокументПринятия, ДокументыПринятия", ВидРасхода, ОбъектУчета, ДатаПринятия, ДокументПринятия, ДокументыПринятия);

КонецФункции

Функция ВидРасходаСоответствуетКритериюОтбора(ВидРасхода)

	Соответствие        = ЛОЖЬ;
	НайденныйВидРасхода = ВидыРасходов.НайтиПоЗначению(ВидРасхода);

	Если НайденныйВидРасхода <> Неопределено Тогда

		Если НайденныйВидРасхода.Пометка Тогда
			Соответствие = ИСТИНА;
		КонецЕсли;

	КонецЕсли;

	Возврат Соответствие;

КонецФункции

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + "/" + Организация.КПП;
	
	// Подсчитаем количество отмеченных условий получения.
	КоличествоОтмеченных = 0;
	Для Каждого УсловиеПолучения Из УсловияПолучения Цикл
		Если УсловиеПолучения.Пометка Тогда
			КоличествоОтмеченных = КоличествоОтмеченных + 1;
		КонецЕсли;
	КонецЦикла;
	ОбластьЗаголовок.Параметры.УсловияПолучения = ?(КоличествоОтмеченных > 0, 
	                                                ?(КоличествоОтмеченных = УсловияПолучения.Количество(), "По всем", "Выборочно"),					  
	                                                "");
	
	// Подсчитаем количество отмеченных видов расходов.
	КоличествоОтмеченных = 0;
	Для Каждого ВидРасхода Из ВидыРасходов Цикл
		Если ВидРасхода.Пометка Тогда
			КоличествоОтмеченных = КоличествоОтмеченных + 1;
		КонецЕсли;
	КонецЦикла;
	ОбластьЗаголовок.Параметры.ВидыРасхода = ?(КоличествоОтмеченных > 0, 
	                                           ?(КоличествоОтмеченных = ВидыРасходов.Количество(), "По всем", "Выборочно"),
	                                           "");
	
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	МассивУсловийПолучений = МассивИзПомеченныхЭлементов(УсловияПолучения);
	ОбластьПодвал          = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы    = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы   = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьСтрока          = Макет.ПолучитьОбласть("Строка");

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("ДатаНач",                НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",                КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("МассивУсловийПолучений", МассивУсловийПолучений);
	Запрос.УстановитьПараметр("ВнереализационныеДоходы",Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	Запрос.УстановитьПараметр("ВидУчета",               Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.УстановитьПараметр("СчетаВозврата",          СписокСчетовВозврата);
	Запрос.УстановитьПараметр("СчетНПВ",                СчетНПВ);
	Запрос.УстановитьПараметр("Счет91",                 ПланыСчетов.Налоговый.ВнереализационныеДоходы);
	Запрос.Текст = "ВЫБРАТЬ
	               |	НалоговыйОборотыДтКт.СчетДт КАК СчетДт,
	               |	НалоговыйОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
	               |	ВЫРАЗИТЬ(НалоговыйОборотыДтКт.СубконтоДт1.НаименованиеПолное КАК СТРОКА(200)) КАК НоменклатураНаименованиеПолное,
	               |	НалоговыйОборотыДтКт.СубконтоДт2 КАК СубконтоДт2,
	               |	НалоговыйОборотыДтКт.СубконтоДт3 КАК СубконтоДт3,
	               |	НалоговыйОборотыДтКт.СубконтоКт1 КАК УсловиеПоступления,
	               |	НалоговыйОборотыДтКт.СубконтоКт2 КАК Контрагент,
	               |	ВЫРАЗИТЬ(НалоговыйОборотыДтКт.СубконтоКт2.НаименованиеПолное КАК СТРОКА(200)) КАК КонтрагентНаименованиеПолное,
	               |	НалоговыйОборотыДтКт.СубконтоКт3 КАК Договор,
	               |	НалоговыйОборотыДтКт.Сумма КАК Сумма,
	               |	НалоговыйОборотыДтКт.КоличествоДт КАК Количество,
	               |	НалоговыйОборотыДтКт.Период КАК ДатаОперации,
	               |	НалоговыйОборотыДтКт.Регистратор КАК Регистратор,
	               |	НалоговыйОборотыДтКт.Содержание КАК НаименованиеОперации
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.ДвиженияССубконто(
	               |			&ДатаНач,
	               |			&ДатаКон,
	               |			СчетКт = &СчетНПВ
	               |				И Организация = &Организация
	               |				И Активность = ИСТИНА
	               |				И ВидУчетаДт = &ВидУчета
	               |				И СубконтоКт1 В (&МассивУсловийПолучений)) КАК НалоговыйОборотыДтКт
	               |ГДЕ
	               |	НалоговыйОборотыДтКт.Сумма <> 0
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОборотыДтКт.СчетКт,
	               |	НалоговыйОборотыДтКт.СубконтоКт1,
	               |	ВЫРАЗИТЬ(НалоговыйОборотыДтКт.СубконтоКт1.НаименованиеПолное КАК СТРОКА(200)),
	               |	НалоговыйОборотыДтКт.СубконтоКт2,
	               |	НалоговыйОборотыДтКт.СубконтоКт3,
	               |	НалоговыйОборотыДтКт.СубконтоДт1,
	               |	НалоговыйОборотыДтКт.СубконтоДт2,
	               |	ВЫРАЗИТЬ(НалоговыйОборотыДтКт.СубконтоДт2.НаименованиеПолное КАК СТРОКА(200)),
	               |	НалоговыйОборотыДтКт.СубконтоДт3,
	               |	-НалоговыйОборотыДтКт.Сумма,
	               |	-НалоговыйОборотыДтКт.КоличествоКт,
	               |	НалоговыйОборотыДтКт.Период,
	               |	НалоговыйОборотыДтКт.Регистратор,
	               |	НалоговыйОборотыДтКт.Содержание
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.ДвиженияССубконто(
	               |			&ДатаНач,
	               |			&ДатаКон,
	               |			СчетДт = &СчетНПВ
	               |				И СчетКт В ИЕРАРХИИ (&СчетаВозврата)
	               |				И Организация = &Организация
	               |				И Активность = ИСТИНА
	               |				И ВидУчетаКт = &ВидУчета
	               |				И СубконтоКт1 В (&МассивУсловийПолучений)) КАК НалоговыйОборотыДтКт
	               |ГДЕ
	               |	НалоговыйОборотыДтКт.Сумма <> 0
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОборотыДтКт.СчетДт,
	               |	НалоговыйОборотыДтКт.СубконтоДт1,
	               |	ВЫРАЗИТЬ(НалоговыйОборотыДтКт.СубконтоДт1.НаименованиеПолное КАК СТРОКА(200)),
	               |	НалоговыйОборотыДтКт.СубконтоДт2,
	               |	НалоговыйОборотыДтКт.СубконтоДт3,
	               |	91,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	НалоговыйОборотыДтКт.Сумма,
	               |	НалоговыйОборотыДтКт.КоличествоДт,
	               |	НалоговыйОборотыДтКт.Период,
	               |	НалоговыйОборотыДтКт.Регистратор,
	               |	НалоговыйОборотыДтКт.Содержание
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.ДвиженияССубконто(
	               |			&ДатаНач,
	               |			&ДатаКон,
	               |			СчетКт = &Счет91
	               |				И Организация = &Организация
	               |				И Активность = ИСТИНА
	               |				И ВидУчетаДт = &ВидУчета
	               |				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ВнереализационныеДоходы) КАК НалоговыйОборотыДтКт
	               |ГДЕ
	               |	НалоговыйОборотыДтКт.Сумма <> 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаОперации
	               |ИТОГИ ПО
	               |	ДатаОперации,
	               |	СчетДт ТОЛЬКО ИЕРАРХИЯ";
	Результат = Запрос.Выполнить();

	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	ИтогоСумма = 0;
	ИтогоКоличество = 0;

	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл

		Если (Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке) ИЛИ
			(Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии) Тогда
			Продолжить;
		КонецЕсли;

		ВидРасхода = ВидРасходаПоОперации(Выборка.СчетДт, Выборка.СубконтоДт1, Выборка.СубконтоДт2, Выборка.СубконтоДт3, Выборка);

		Если ВидРасходаСоответствуетКритериюОтбора(ВидРасхода.ВидРасхода) Тогда

			ОбластьСтрока.Параметры.Дата               = Формат(Выборка.ДатаОперации, "ДФ=dd.MM.yyyy");
			НаименованиеОперации = Выборка.НаименованиеОперации;
			ОбластьСтрока.Параметры.НаименованиеОперации = ?(НЕ ЗначениеЗаполнено(НаименованиеОперации),Выборка.Регистратор.Метаданные().Синоним,НаименованиеОперации);
			ОбластьСтрока.Параметры.УсловиеПоступления = ?(Выборка.УсловиеПоступления = 91, "Излишки выявленные при инвентаризации",УсловияПолучения.НайтиПоЗначению(Выборка.УсловиеПоступления).Представление);
			ОбластьСтрока.Параметры.Основание          = ?(Выборка.УсловиеПоступления = 91, Выборка.НаименованиеОперации, СокрЛП(Выборка.КонтрагентНаименованиеПолное) + " (" + СокрЛП(Выборка.Договор) + ")");
			ОбластьСтрока.Параметры.ВидРасхода         = ВидРасхода.ВидРасхода;
			ОбластьСтрока.Параметры.Количество         = Выборка.Количество;
			ОбластьСтрока.Параметры.Сумма              = Выборка.Сумма;
			ОбластьСтрока.Параметры.Расшифровка        = Выборка.Регистратор;
			ОбластьСтрока.Параметры.РасшифровкаПринятия   = ВидРасхода.ДокументыПринятия;
			ОбластьСтрока.Параметры.ОбъектУчета           = ВидРасхода.ОбъектУчета;
			ОбластьСтрока.Параметры.ДатаВвода             = ВидРасхода.ДатаПринятия;
			ОбластьСтрока.Параметры.ОснованиеОбъектаУчета = ВидРасхода.ДокументПринятия;

			ДокументРезультат.Вывести(ОбластьСтрока);
			
			ИтогоСумма      = ИтогоСумма      + ?(Выборка.Сумма =      Null, 0, Выборка.Сумма);
			ИтогоКоличество = ИтогоКоличество + ?(Выборка.Количество = Null, 0, Выборка.Количество);

		КонецЕсли;

	КонецЦикла;

	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = ОбщегоНазначения.ФамилияИнициалыФизЛица(СтруктураЛиц.ОтветственныйЗаРегистры);
	ОбластьПодвалТаблицы.Параметры.ИтогоСумма = ИтогоСумма;
	ОбластьПодвалТаблицы.Параметры.ИтогоКоличество = ИтогоКоличество;
	ДокументРезультат.Вывести(ОбластьПодвалТаблицы);
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

Счет07       = ПланыСчетов.Налоговый.ОборудованиеКУстановке;
Счет08       = ПланыСчетов.Налоговый.ВложенияВоВнеоборотныеАктивы;
Счет08_01    = ПланыСчетов.Налоговый.ПриобретениеЗемельныхУчастков;
Счет08_02    = ПланыСчетов.Налоговый.ПриобретениеОбъектовПриродопользования;
Счет08_03    = ПланыСчетов.Налоговый.СтроительствоОбъектовОсновныхСредств;
Счет08_04    = ПланыСчетов.Налоговый.ПриобретениеОбъектовОсновныхСредств;
Счет08_05    = ПланыСчетов.Налоговый.ПриобретениеНематериальныхАктивов;
Счет08_08    = ПланыСчетов.Налоговый.ВыполнениеНИОКР;
Счет10       = ПланыСчетов.Налоговый.Материалы;

Счет20       = ПланыСчетов.Налоговый.ОсновноеПроизводство_;
Счет23       = ПланыСчетов.Налоговый.ВспомогательныеПроизводства;
Счет25       = ПланыСчетов.Налоговый.ОбщепроизводственныеРасходы;
Счет26       = ПланыСчетов.Налоговый.ОбщехозяйственныеРасходы;
Счет28       = ПланыСчетов.Налоговый.БракВПроизводстве;
Счет29       = ПланыСчетов.Налоговый.ОбслуживающиеПроизводства;

Счет20_01_01 = ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства;
Счет23_01    = ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств;
Счет25_01    = ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы;
Счет28_01    = ПланыСчетов.Налоговый.ПрямыеРасходыПоВыявленномуБраку;
Счет29_01    = ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств;

Счет20_01_02 = ПланыСчетов.Налоговый.КосвенныеРасходыОсновногоПроизводства;
Счет23_02    = ПланыСчетов.Налоговый.КосвенныеРасходыВспомогательныхПроизводств;
Счет25_02    = ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы;
Счет26_02    = ПланыСчетов.Налоговый.КосвенныеОбщехозяйственныеРасходы;
Счет28_02    = ПланыСчетов.Налоговый.КосвенныеРасходыПоВыявленномуБраку;
Счет29_02    = ПланыСчетов.Налоговый.КосвенныеРасходыОбслуживающихПроизводств;

Счет41       = ПланыСчетов.Налоговый.Товары;
Счет44       = ПланыСчетов.Налоговый.РасходыНаПродажу;
Счет44_01    = ПланыСчетов.Налоговый.ИздержкиОбращения;

Счет58_01_1  = ПланыСчетов.Налоговый.Паи;
Счет58_01_2  = ПланыСчетов.Налоговый.Акции;
Счет58_02    = ПланыСчетов.Налоговый.ДолговыеЦенныеБумаги;
Счет58_05    = ПланыСчетов.Налоговый.ПриобретенныеПрава;

Счет91_02    = ПланыСчетов.Налоговый.ПрочиеРасходы;
Счет91_02_1  = ПланыСчетов.Налоговый.РасходыСвязанныеСРеализациейОсновныхСредств;
Счет91_02_2  = ПланыСчетов.Налоговый.РасходыСвязанныеСРеализациейНематериальныхАктивов;
Счет91_02_3  = ПланыСчетов.Налоговый.РасходыСвязанныеСРеализациейПрочегоИмущества;
Счет91_02_4  = ПланыСчетов.Налоговый.РасходыСвязанныеСРеализациейИмущественныхПрав;
Счет91_02_5  = ПланыСчетов.Налоговый.РасходыСвязанныеСРеализациейЦенныхБумаг;
Счет91_02_7  = ПланыСчетов.Налоговый.ВнереализационныеРасходы;
Счет91_02_9  = ПланыСчетов.Налоговый.ПрочиеКосвенныеРасходы;

Счет97       = ПланыСчетов.Налоговый.РасходыБудущихПериодов;
СчетНПВ      = ПланыСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав;

СписокСчетовВозврата = Новый СписокЗначений();
СписокСчетовВозврата.Добавить(Счет10);
СписокСчетовВозврата.Добавить(Счет41);

#КонецЕсли