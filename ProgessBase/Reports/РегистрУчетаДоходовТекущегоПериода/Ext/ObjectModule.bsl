#Если Клиент Тогда
Перем НП Экспорт;

Перем CписокСчетов;
Перем Счет90_01_1;
Перем Счет90_01_2;
Перем Счет91_01_1;
Перем Счет91_01_2;
Перем Счет91_01_3;
Перем Счет91_01_4;
Перем Счет91_01_5;
Перем Счет91_01_6;

// Определяет вид дохода в зависимости от операции и параметров операции
//
Функция ВидДоходаПоОперации(Счет, Субконто1, Субконто2, Субконто3, ВидДоходов, Контрагент, Договор)

	ОбъектУчета = "";
	ВидДохода   = "";

	Если      Счет = Счет90_01_1 Тогда
		ВидДохода   = "Выручка от реализации товаров (работ, услуг) собственного производства";
		ОбъектУчета = Строка(Субконто1);

	ИначеЕсли Счет = Счет90_01_2 Тогда
		ВидДохода   = "Выручка от реализации покупных товаров";
		ОбъектУчета = Строка(Субконто1);

	ИначеЕсли Счет = Счет91_01_1 Тогда
		ВидДохода   = "Выручка от реализации ОС";
		ОбъектУчета = Строка(Субконто1);

	ИначеЕсли Счет = Счет91_01_2 Тогда
		ВидДохода   = "Выручка от реализации НМА";
		ОбъектУчета = Строка(Субконто1);

	ИначеЕсли Счет = Счет91_01_3 Тогда
		ВидДохода   = "Выручка от реализации прочего имущества";
		ОбъектУчета = Строка(Субконто1);

	ИначеЕсли Счет = Счет91_01_4 Тогда
		Если      ВидДоходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияКакОказанияФинансовыхУслуг Тогда
			ВидДохода   = "Выручка от реализации прав требования";

		ИначеЕсли ВидДоходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияДоНаступленияСрокаПлатежа Тогда
			ВидДохода   = "Выручка от уступки права до наступления срока платежа";

		ИначеЕсли ВидДоходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСРеализациейПраваТребованияПослеНаступленияСрокаПлатежа Тогда
			ВидДохода   = "Выручка от уступки права после наступления срока платежа";

		Иначе
			ВидДохода   = "Выручка от реализации имущественных прав";

		КонецЕсли;
		Если ЗначениеЗаполнено(Контрагент) тогда
			ОбъектУчета = Контрагент + " (" + Договор + ")";
		КонецЕсли;

	ИначеЕсли Счет = Счет91_01_5 Тогда
		ВидДохода   = "Выручка от реализации ЦБ";
		ОбъектУчета = Строка(Субконто2);

	ИначеЕсли Счет = Счет91_01_6 Тогда
		Если ВидДоходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоОперациямСФинансовымиИнструментамиСрочныхСделок Тогда
			ВидДохода   = "Доходы по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке";

		ИначеЕсли Субконто1.ПринятиеКналоговомуУчету Тогда
			ВидДохода   = "Внереализационные доходы";
			ОбъектУчета = Строка(ВидДоходов);

		КонецЕсли;
	КонецЕсли;

	Возврат Новый Структура("ВидДохода, ОбъектУчета", ВидДохода, ОбъектУчета);

КонецФункции // ВидДоходаПоОперации

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	
	ВидыДохода = "";
	Для Каждого ЭлементСписка из ВидыДоходов Цикл
		Если ЭлементСписка.Пометка Тогда
			ВидыДохода = ВидыДохода + ЭлементСписка.Значение + "
			|";
		КонецЕсли;
	КонецЦикла;
	ОбластьЗаголовок.Параметры.ВидыДохода = ВидыДохода;
	
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ДатаНач",      НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",      БухгалтерскийУчет.КонецПериодаОтчета(ДатаКон));
	Запрос.УстановитьПараметр("СписокСчетов", CписокСчетов);
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("ВидУчета",     Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Период      КАК ДатаОперации,
	|	СчетКт,
	|	СуммаОборот КАК Сумма,
	|	СубконтоКт1,
	|	СубконтоКт2,
	|	СубконтоКт3,
	|	СубконтоКт1.ВидПрочихДоходовИРасходов КАК ВидДоходов,
	|	СубконтоКт2.НаименованиеПолное        КАК Контрагент,
	|	СубконтоКт3.Представление             КАК Договор,
	|	Регистратор
	|
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, , , СчетКт В (&СписокСчетов), , (Организация = &Организация)И (ВидУчетаКт = &ВидУчета)) КАК НалоговыйОборотыДтКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОперации
	|
	|ИТОГИ ПО
	|	СчетКт ТОЛЬКО ИЕРАРХИЯ";
	Результат = Запрос.Выполнить();

	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");

	ВидыДоходовТекст = "";

	Выборка = Результат.Выбрать();
	Итого   = 0;

	СписокВидов = новый СписокЗначений();
	Для каждого ЭлементСписка из ВидыДоходов Цикл
		Если ЭлементСписка.Пометка Тогда
			СписокВидов.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);

	Пока Выборка.Следующий() Цикл

		СтруктураВида = ВидДоходаПоОперации(Выборка.СчетКт,
		                                    Выборка.СубконтоКт1, Выборка.СубконтоКт2, Выборка.СубконтоКт3, 
		                                    Выборка.ВидДоходов,  Выборка.Контрагент,  Выборка.Договор);

		Если СписокВидов.НайтиПоЗначению(СтруктураВида.ВидДохода) = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ОбластьСтрока.Параметры.ДатаОперации = Выборка.ДатаОперации;
		ОбластьСтрока.Параметры.ВидДохода    = СтруктураВида.ВидДохода;
		ОбластьСтрока.Параметры.ОбъектУчета  = СтруктураВида.ОбъектУчета;
		ОбластьСтрока.Параметры.Сумма        = Выборка.Сумма;
		ОбластьСтрока.Параметры.Расшифровка  = Выборка.Регистратор;

		ДокументРезультат.Вывести(ОбластьСтрока);

		Итого = Итого + Выборка.Сумма;

	КонецЦикла;

	ОбластьПодвалТаблицы.Параметры.ИтогоСуммаДохода = Итого;
	ДокументРезультат.Вывести(ОбластьПодвалТаблицы);

	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП           = Новый НастройкаПериода;

Счет90_01_1  = ПланыСчетов.Налоговый.ВыручкаОтРеализацииТоваровРаботСобственногоПроизводства;
Счет90_01_2  = ПланыСчетов.Налоговый.ВыручкаОтРеализацииПокупныхТоваров;
Счет91_01_1  = ПланыСчетов.Налоговый.ВыручкаОтРеализацииОсновныхСредств;
Счет91_01_2  = ПланыСчетов.Налоговый.ВыручкаОтРеализацииНематериальныхАктивов;
Счет91_01_3  = ПланыСчетов.Налоговый.ВыручкаОтРеализацииПрочегоИмуществаРаботУслуг;
Счет91_01_4  = ПланыСчетов.Налоговый.ВыручкаОтРеализацииИмущественныхПрав;
Счет91_01_5  = ПланыСчетов.Налоговый.ВыручкаОтРеализацииЦенныхБумаг;
Счет91_01_6  = ПланыСчетов.Налоговый.ВнереализационныеДоходы;

CписокСчетов = Новый СписокЗначений();
CписокСчетов.Добавить(Счет90_01_1);
CписокСчетов.Добавить(Счет90_01_2);
CписокСчетов.Добавить(Счет91_01_1);
CписокСчетов.Добавить(Счет91_01_2);
CписокСчетов.Добавить(Счет91_01_3);
CписокСчетов.Добавить(Счет91_01_4);
CписокСчетов.Добавить(Счет91_01_5);
CписокСчетов.Добавить(Счет91_01_6);

#КонецЕсли
