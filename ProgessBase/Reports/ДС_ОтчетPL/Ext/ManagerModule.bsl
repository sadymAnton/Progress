
// is ЯннуровВФ 20140527
// Перенесено из модуля формы
// Параметры:
//  НачалоПериода - дата - начало периода,
//  ОкончаниеПериода - дата - окончание периода,
//  Разрезы - булево - использование дополнительных разрезов
//  Подразделение - число - номер разреза
// Возвращаемое значение - таблица значений - найденные показатели
Функция ПолучитьТаблицуПоказателей(НачалоПериода, ОкончаниеПериода, Разрезы=Ложь, Подразделение=0, Периодичность=0, ВидПоказателя="", 
		ОтборРазреза=Неопределено, ФильтрПоПродажам=Неопределено, ОтборПоЦФО=Неопределено, УдалитьГруппы=Истина) Экспорт 
	
	ОсновнойЗапрос = Новый Запрос;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	// is ЯннуровВФ нач 20140723
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ДС_ПоказателиОтчетаPL.Ссылка КАК Показатель,
	//|	ДС_ПоказателиОтчетаPL.РасчетПоФормуле,
	//|	ДС_ПоказателиОтчетаPL.ЗапросПараметры,
	//|	ДС_ПоказателиОтчетаPL.ЗапросТекст,
	//|	ДС_ПоказателиОтчетаPL.Формула
	//|ИЗ
	//|	Справочник.ДС_ПоказателиОтчетаPL КАК ДС_ПоказателиОтчетаPL
	//|ГДЕ
	//|	ДС_ПоказателиОтчетаPL.ПометкаУдаления = ЛОЖЬ";
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДС_ПоказателиОтчетаPL.Ссылка КАК Показатель,
	|	ДС_ПоказателиОтчетаPL.КодPL КАК КодPL,
	|	ДС_ПоказателиОтчетаPL.РасчетПоФормуле,
	|	ДС_ПоказателиОтчетаPL.ЗапросПараметры,
	|	ДС_ПоказателиОтчетаPL.ЗапросТекст,
	|	ДС_ПоказателиОтчетаPL.Формула,
	|	ДС_ПоказателиОтчетаPL.ис_Минус,
	|	ДС_ПоказателиОтчетаPL.ис_ПоПроизводству,
	|	ДС_ПоказателиОтчетаPL.ис_ПоРеализации
	|ИЗ
	|	Справочник.ДС_ПоказателиОтчетаPL КАК ДС_ПоказателиОтчетаPL
	|ГДЕ
	|	ДС_ПоказателиОтчетаPL.ПометкаУдаления = ЛОЖЬ
	|	И ДС_ПоказателиОтчетаPL.ис_Активность = ИСТИНА";
	Если ЗначениеЗаполнено(ВидПоказателя) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|	И (ДС_ПоказателиОтчетаPL."+ВидПоказателя+" = ИСТИНА
		|		ИЛИ (ДС_ПоказателиОтчетаPL.ис_ПоПроизводству = ЛОЖЬ И ДС_ПоказателиОтчетаPL.ис_ПоРеализации = ЛОЖЬ))";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|УПОРЯДОЧИТЬ ПО
	|	КодPL";
	// is ЯннуровВФ кон 20140723
	Выборка = Запрос.Выполнить().Выбрать();	
	
	КоличествоВыборки = Выборка.Количество();
	
	СоответствиеПоказателейРасчетаПоФормуле = Новый Соответствие;
	
	// is ЯннуровВФ нач 20140814
	лМаксКоличествоПодзапросов = 10; // Было 20
	лКоличествоПодзапросов = 0;
	лКоличествоТаблиц = 0;
	// is ЯннуровВФ кон 20140814
	// is ЯннуровВФ нач 20150630 
	//Пока Выборка.Следующий() Цикл
	//	
	//	//Если расчет по формуле, то добавляем в соответствие требующих расчета по формуле показателей, иначе формируем текст основного запроса объединением
	//	Если Выборка.Показатель.ЭтоГруппа Или Выборка.РасчетПоФормуле Тогда
	//		СоответствиеПоказателейРасчетаПоФормуле.Вставить(Выборка.Показатель, Выборка.Формула);
	//	Иначе
	//		//Формируем большой запрос, объединением мелких запросов показателей, дабы исключить запросы в цикле.
	//		// is ЯннуровВФ нач 20140725
	//		//ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + Символы.ПС + Выборка.ЗапросТекст + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	//		лТекстЗапроса = Выборка.ЗапросТекст;
	//		// is ЯннуровВФ нач 20140829
	//		Если лКоличествоПодзапросов = 0 Тогда 
	//			лКоличествоТаблиц = лКоличествоТаблиц + 1;
	//		КонецЕсли;
	//		// is ЯннуровВФ кон 20140829
	//		// is ЯннуровВФ нач 20140901
	//		//Если Разрезы И ЗначениеЗаполнено(ОтборРазреза) Тогда 
	//		// is ЯннуровВФ нач 20141119
	//		//Если Разрезы 
	//		// И (ЗначениеЗаполнено(ОтборРазреза) Или ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПРГЦФО")) Тогда 
	//		Если (Разрезы И ЗначениеЗаполнено(ОтборРазреза)) Или ЗначениеЗаполнено(ОтборПоЦФО) Тогда 
	//		// is ЯннуровВФ кон 20141119
	//		// is ЯннуровВФ нач 20140901
	//			// is ЯннуровВФ нач 20141119
	//			лУсловиеОтбора = "";
	//			Если Разрезы И ЗначениеЗаполнено(ОтборРазреза) Тогда 
	//			// is ЯннуровВФ кон 20141119
	//				Если ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда 
	//					лУсловиеОтбора = лУсловиеОтбора + " И Подразделение = &ОтборРазреза";
	//				ИначеЕсли ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПРГДивизионы") Тогда 
	//					лУсловиеОтбора = лУсловиеОтбора + " И Дивизион = &ОтборРазреза";
	//				ИначеЕсли ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПРГДопОфисы") Тогда 
	//					лУсловиеОтбора = лУсловиеОтбора + " И ДопОфис = &ОтборРазреза";
	//				ИначеЕсли ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПРГЦФО") Тогда 
	//					// is ЯннуровВФ нач 20141119
	//					//// is ЯннуровВФ нач 20140901
	//					//Если ЗначениеЗаполнено(ОтборРазреза) Тогда 
	//					//	лУсловиеОтбора = "ЦФО = &ОтборРазреза";
	//					//Иначе
	//					//	лУсловиеОтбора = "ЦФО.Наименование <> ""2.1""";
	//					//КонецЕсли;
	//					//// is ЯннуровВФ нач 20140901
	//					лУсловиеОтбора = лУсловиеОтбора + " И ЦФО = &ОтборРазреза";
	//					// is ЯннуровВФ кон 20141119
	//				ИначеЕсли ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПРГ_ЦентрыУчетаЗатрат2014") Тогда 
	//					лУсловиеОтбора = лУсловиеОтбора + " И УкрупКод = &ОтборРазреза";
	//				КонецЕсли;
	//			КонецЕсли;
	//			// is ЯннуровВФ нач 20141119
	//			Если ЗначениеЗаполнено(ОтборПоЦФО) Тогда 
	//				лУсловиеОтбора = лУсловиеОтбора + " И ЦФО = &ОтборПоЦФО";
	//			КонецЕсли;
	//			// is ЯннуровВФ кон 20141119
	//			// is ЯннуровВФ нач 20140829
	//			//Если лКоличествоПодзапросов = 0 Тогда 
	//			//	лКоличествоТаблиц = лКоличествоТаблиц + 1;
	//			//КонецЕсли;
	//			// is ЯннуровВФ кон 20140829
	//			лТекстЗапроса = 
	//			"ВЫБРАТЬ
	//			|	Запрос.Показатель,
	//			|	Запрос.Подразделение,
	//			|	Запрос.Дивизион,
	//			|	Запрос.ДопОфис,
	//			|	Запрос.ЦФО,
	//			|	Запрос.УкрупКод,
	//			|	Запрос.Сумма
	//			|"+?(лКоличествоПодзапросов=0, "ПОМЕСТИТЬ втТаблица"+Формат(лКоличествоТаблиц,"ЧН=0; ЧГ=0"), "")+"
	//			|ИЗ
	//			|	("+лТекстЗапроса+") КАК Запрос
	//			|ГДЕ ИСТИНА"+лУсловиеОтбора;
	//		Иначе
	//			// is ЯннуровВФ нач 20140829
	//			//Если ЗначениеЗаполнено(ОсновнойЗапрос.Текст) Тогда 
	//			//	ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС + лТекстЗапроса;
	//			//Иначе
	//			//	ОсновнойЗапрос.Текст = лТекстЗапроса;
	//			//КонецЕсли;
	//			Если лКоличествоПодзапросов = 0 Тогда
	//				лПозицияВставки = Найти(лТекстЗапроса, Символы.ПС+"ИЗ");
	//				лТекстЗапроса = Сред(лТекстЗапроса, 1, лПозицияВставки) 
	//					+ "ПОМЕСТИТЬ втТаблица"+Формат(лКоличествоТаблиц,"ЧН=0; ЧГ=0")+Символы.ПС
	//					+ Сред(лТекстЗапроса, лПозицияВставки+1);
	//			КонецЕсли;
	//			// is ЯннуровВФ кон 20140829
	//		КонецЕсли;
	//		// is ЯннуровВФ нач 20141119
	//		Если ФильтрПоПродажам <> Неопределено Тогда 
	//			лТекстЗапроса = СтрЗаменить(лТекстЗапроса, """ФильтрПоПродажам"" = ""ФильтрПоПродажам""", ФильтрПоПродажам.Текст);
	//		КонецЕсли;
	//		// is ЯннуровВФ кон 20141119
	//		// is ЯннуровВФ нач 20140829
	//		лКоличествоПодзапросов = лКоличествоПодзапросов + 1;
	//		Если лКоличествоПодзапросов >= лМаксКоличествоПодзапросов Тогда 
	//			лТекстЗапроса = лТекстЗапроса + ";";
	//			лКоличествоПодзапросов = 0;
	//		КонецЕсли;
	//		Если лКоличествоПодзапросов = 1 Тогда 
	//			ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + Символы.ПС + Символы.ПС + лТекстЗапроса;
	//		Иначе
	//			ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС + лТекстЗапроса;
	//		КонецЕсли;
	//		// is ЯннуровВФ кон 20140829
	//		// is ЯннуровВФ нач 20140725
	//		//Установка параметров запроса по параметрам из выборки
	//		// is ЯннуровВФ нач 20140720
	//		Попытка
	//		// is ЯннуровВФ кон 20140720
	//			ПараметрыВыборки = Выборка.ЗапросПараметры.Получить();
	//			Для Каждого Параметр Из ПараметрыВыборки Цикл
	//				ОсновнойЗапрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	//			КонецЦикла;	
	//		// is ЯннуровВФ нач 20140720
	//		Исключение
	//			Сообщить("Ошибка при обработке параметров показателя <"+Выборка.Показатель+">");
	//			Возврат "Ошибка";
	//		КонецПопытки;
	//		// is ЯннуровВФ кон 20140720
	//	КонецЕсли;	
	//КонецЦикла;
	//
	////Удаляем "Объединить все" с конца запроса
	//// is ЯннуровВФ нач 20140814
	////ОсновнойЗапрос.Текст = Лев(ОсновнойЗапрос.Текст, СтрДлина(ОсновнойЗапрос.Текст) - 15);
	//Если лКоличествоТаблиц > 0 Тогда 
	//	Если лКоличествоПодзапросов > 0 Тогда 
	//		ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + ";";
	//	КонецЕсли;
	//	ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + Символы.ПС + Символы.ПС;
	//	
	//	лГруппировка = Неопределено;
	//	Если Разрезы Тогда 
	//		Если Подразделение = 0 Тогда
	//			лГруппировка = "Подразделение";
	//		ИначеЕсли Подразделение = 1 Тогда
	//			лГруппировка = "Дивизион";
	//		ИначеЕсли Подразделение = 2 Тогда
	//			лГруппировка = "ДопОфис";
	//		ИначеЕсли Подразделение = 3 Тогда
	//			лГруппировка = "ЦФО";
	//		ИначеЕсли Подразделение = 4 Тогда
	//			лГруппировка = "УкрупКод";
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//	ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + 
	//	"ВЫБРАТЬ
	//	|	Запрос.Показатель,
	//	|	"+?(лГруппировка<>Неопределено, "Запрос.Подразделение", "НЕОПРЕДЕЛЕНО")+" КАК Группировка,
	//	|	СУММА(Запрос.Сумма) КАК Сумма
	//	|ИЗ
	//	|	(";
	//	Для лНомерТаблицы=1 По лКоличествоТаблиц Цикл 
	//		Если лНомерТаблицы > 1 Тогда 
	//			ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
	//		КонецЕсли;
	//		ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + 
	//		"ВЫБРАТЬ
	//		|	втТаблица.Показатель,
	//		|	втТаблица.Подразделение,
	//		|	втТаблица.Дивизион,
	//		|	втТаблица.ДопОфис,
	//		|	втТаблица.ЦФО,
	//		|	втТаблица.УкрупКод,
	//		|	втТаблица.Сумма
	//		|ИЗ
	//		|	втТаблица"+Формат(лНомерТаблицы,"ЧН=0; ЧГ=0")+" КАК втТаблица";
	//	КонецЦикла;
	//	ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + ") КАК Запрос
	//	|СГРУППИРОВАТЬ ПО
	//	|	Запрос.Показатель,
	//	|	"+?(лГруппировка<>Неопределено, "Запрос.Подразделение", "НЕОПРЕДЕЛЕНО");
	//КонецЕсли;
	//// is ЯннуровВФ кон 20140814
	//
	//// is ЯннуровВФ нач 20140720
	//ОсновнойЗапрос.Текст = СтрЗаменить(ОсновнойЗапрос.Текст, "{Период}", "НЕОПРЕДЕЛЕНО");
	//ОсновнойЗапрос.Текст = СтрЗаменить(ОсновнойЗапрос.Текст, "{Периодичность}", "Период");
	//// is ЯннуровВФ кон 20140720
	//
	//ОсновнойЗапрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	//ОсновнойЗапрос.УстановитьПараметр("КонецПериода", КонецДня(ОкончаниеПериода));
	//// is ЯннуровВФ нач 20140724
	//ОсновнойЗапрос.УстановитьПараметр("ВидПоказателя", ВидПоказателя);
	//// is ЯннуровВФ кон 20140724
	//// is ЯннуровВФ нач 20140725
	//ОсновнойЗапрос.УстановитьПараметр("Разрезы", Разрезы);
	//ОсновнойЗапрос.УстановитьПараметр("ОтборРазреза", ОтборРазреза);
	//// is ЯннуровВФ кон 20140725
	//// is ЯннуровВФ нач 20141119
	//ОсновнойЗапрос.УстановитьПараметр("ОтборПоЦФО", ОтборПоЦФО);
	//Если ФильтрПоПродажам <> Неопределено Тогда 
	//	Попытка
	//		Для Каждого лПараметр Из ФильтрПоПродажам.Параметры Цикл 
	//			ОсновнойЗапрос.УстановитьПараметр(лПараметр.Ключ, лПараметр.Значение);
	//		КонецЦикла;
	//	Исключение
	//		//
	//	КонецПопытки;
	//КонецЕсли;
	//// is ЯннуровВФ кон 20141119
	//
	//Попытка	
	//	ТаблицаПоказателей = ОсновнойЗапрос.Выполнить().Выгрузить();
	//Исключение
	//	лИнформация = ИнформацияОбОшибке();
	//	Сообщить("Не введено ни одного показателя получающего данные из регистров: "+лИнформация.Причина.Описание);
	//	Возврат "Ошибка";
	//КонецПопытки;	
	
	лГруппировка = Неопределено;
	Если Разрезы Тогда 
		Если Подразделение = 0 Тогда
			лГруппировка = "Подразделение";
		ИначеЕсли Подразделение = 1 Тогда
			лГруппировка = "Дивизион";
		ИначеЕсли Подразделение = 2 Тогда
			лГруппировка = "ДопОфис";
		ИначеЕсли Подразделение = 3 Тогда
			лГруппировка = "ЦФО";
		ИначеЕсли Подразделение = 4 Тогда
			лГруппировка = "УкрупКод";
		КонецЕсли;
	КонецЕсли;
				
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	ТаблицаПоказателей.Колонки.Добавить("Показатель");
	ТаблицаПоказателей.Колонки.Добавить("Группировка");
	ТаблицаПоказателей.Колонки.Добавить("Сумма");
	Пока Выборка.Следующий() Цикл
		
		//Если расчет по формуле, то добавляем в соответствие требующих расчета по формуле показателей, иначе формируем текст основного запроса объединением
		Если Выборка.Показатель.ЭтоГруппа Или Выборка.РасчетПоФормуле Тогда
			СоответствиеПоказателейРасчетаПоФормуле.Вставить(Выборка.Показатель, Выборка.Формула);
		Иначе
			//Формируем большой запрос, объединением мелких запросов показателей, дабы исключить запросы в цикле.
			лТекстЗапроса = Выборка.ЗапросТекст;
			Если лКоличествоПодзапросов = 0 Тогда 
				лКоличествоТаблиц = лКоличествоТаблиц + 1;
			КонецЕсли;
			Если (Разрезы И ЗначениеЗаполнено(ОтборРазреза)) Или ЗначениеЗаполнено(ОтборПоЦФО) Тогда 
				лУсловиеОтбора = "";
				Если Разрезы И ЗначениеЗаполнено(ОтборРазреза) Тогда 
					Если ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда 
						лУсловиеОтбора = лУсловиеОтбора + " И Подразделение = &ОтборРазреза";
					ИначеЕсли ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПРГДивизионы") Тогда 
						лУсловиеОтбора = лУсловиеОтбора + " И Дивизион = &ОтборРазреза";
					ИначеЕсли ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПРГДопОфисы") Тогда 
						лУсловиеОтбора = лУсловиеОтбора + " И ДопОфис = &ОтборРазреза";
					ИначеЕсли ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПРГЦФО") Тогда 
						лУсловиеОтбора = лУсловиеОтбора + " И ЦФО = &ОтборРазреза";
					ИначеЕсли ТипЗнч(ОтборРазреза) = Тип("СправочникСсылка.ПРГ_ЦентрыУчетаЗатрат2014") Тогда 
						лУсловиеОтбора = лУсловиеОтбора + " И УкрупКод = &ОтборРазреза";
					КонецЕсли;
				КонецЕсли;
				Если ЗначениеЗаполнено(ОтборПоЦФО) Тогда 
					лУсловиеОтбора = лУсловиеОтбора + " И ЦФО = &ОтборПоЦФО";
				КонецЕсли;
				лТекстЗапроса = 
				"ВЫБРАТЬ
				|	Запрос.Показатель,
				|	Запрос.Подразделение,
				|	Запрос.Дивизион,
				|	Запрос.ДопОфис,
				|	Запрос.ЦФО,
				|	Запрос.УкрупКод,
				|	Запрос.Сумма
				|ИЗ
				|	("+лТекстЗапроса+") КАК Запрос
				|ГДЕ ИСТИНА"+лУсловиеОтбора;
			КонецЕсли;
			Если ФильтрПоПродажам <> Неопределено Тогда 
				лТекстЗапроса = СтрЗаменить(лТекстЗапроса, """ФильтрПоПродажам"" = ""ФильтрПоПродажам""", ФильтрПоПродажам.Текст);
			КонецЕсли;
			лКоличествоПодзапросов = лКоличествоПодзапросов + 1;
			Если лКоличествоПодзапросов = 1 Тогда 
				ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + Символы.ПС + Символы.ПС + лТекстЗапроса;
			Иначе
				ОсновнойЗапрос.Текст = ОсновнойЗапрос.Текст + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС + лТекстЗапроса;
			КонецЕсли;
			Попытка
				ПараметрыВыборки = Выборка.ЗапросПараметры.Получить();
				Для Каждого Параметр Из ПараметрыВыборки Цикл
					ОсновнойЗапрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
				КонецЦикла;	
			Исключение
				Сообщить("Ошибка при обработке параметров показателя <"+Выборка.Показатель+">");
				Возврат "Ошибка";
			КонецПопытки;
			Если лКоличествоПодзапросов >= лМаксКоличествоПодзапросов Тогда 
				ОсновнойЗапрос.Текст = 
				"ВЫБРАТЬ
				|	Запрос.Показатель,
				|	"+?(лГруппировка<>Неопределено, "Запрос."+лГруппировка, "НЕОПРЕДЕЛЕНО")+" КАК Группировка,
				|	СУММА(Запрос.Сумма) КАК Сумма
				|ИЗ
				|	("+ОсновнойЗапрос.Текст+") КАК Запрос
				|СГРУППИРОВАТЬ ПО 
				|	Запрос.Показатель,
				|	"+?(лГруппировка<>Неопределено, "Запрос."+лГруппировка, "НЕОПРЕДЕЛЕНО");
				ОсновнойЗапрос.Текст = СтрЗаменить(ОсновнойЗапрос.Текст, "{Период}", "НЕОПРЕДЕЛЕНО");
				ОсновнойЗапрос.Текст = СтрЗаменить(ОсновнойЗапрос.Текст, "{Периодичность}", "Период");
				ОсновнойЗапрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
				ОсновнойЗапрос.УстановитьПараметр("КонецПериода", КонецДня(ОкончаниеПериода));
				ОсновнойЗапрос.УстановитьПараметр("ВидПоказателя", ВидПоказателя);
				ОсновнойЗапрос.УстановитьПараметр("Разрезы", Разрезы);
				ОсновнойЗапрос.УстановитьПараметр("ОтборРазреза", ОтборРазреза);
				ОсновнойЗапрос.УстановитьПараметр("ОтборПоЦФО", ОтборПоЦФО);
				Если ФильтрПоПродажам <> Неопределено Тогда 
					Попытка
						Для Каждого лПараметр Из ФильтрПоПродажам.Параметры Цикл 
							ОсновнойЗапрос.УстановитьПараметр(лПараметр.Ключ, лПараметр.Значение);
						КонецЦикла;
					Исключение
						//
					КонецПопытки;
				КонецЕсли;
				Попытка	
					лТаблицаПоказателей = ОсновнойЗапрос.Выполнить().Выгрузить();
				Исключение
					лИнформация = ИнформацияОбОшибке();
					Сообщить("Не введено ни одного показателя получающего данные из регистров: "+лИнформация.Причина.Описание);
					Возврат "Ошибка";
				КонецПопытки;	
				Для Каждого лСтрокаПоказателя Из лТаблицаПоказателей Цикл 
					ЗаполнитьЗначенияСвойств(ТаблицаПоказателей.Добавить(), лСтрокаПоказателя);
				КонецЦикла;
				ОсновнойЗапрос.Текст = "";
				ОсновнойЗапрос.Параметры.Очистить();
				лКоличествоПодзапросов = 0;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	Если лКоличествоПодзапросов > 0 Тогда 
		ОсновнойЗапрос.Текст = 
		"ВЫБРАТЬ
		|	Запрос.Показатель,
		|	"+?(лГруппировка<>Неопределено, "Запрос."+лГруппировка, "НЕОПРЕДЕЛЕНО")+" КАК Группировка,
		|	СУММА(Запрос.Сумма) КАК Сумма
		|ИЗ
		|	("+ОсновнойЗапрос.Текст+") КАК Запрос
		|СГРУППИРОВАТЬ ПО 
		|	Запрос.Показатель,
		|	"+?(лГруппировка<>Неопределено, "Запрос."+лГруппировка, "НЕОПРЕДЕЛЕНО");
		ОсновнойЗапрос.Текст = СтрЗаменить(ОсновнойЗапрос.Текст, "{Период}", "НЕОПРЕДЕЛЕНО");
		ОсновнойЗапрос.Текст = СтрЗаменить(ОсновнойЗапрос.Текст, "{Периодичность}", "Период");
		ОсновнойЗапрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
		ОсновнойЗапрос.УстановитьПараметр("КонецПериода", КонецДня(ОкончаниеПериода));
		ОсновнойЗапрос.УстановитьПараметр("ВидПоказателя", ВидПоказателя);
		ОсновнойЗапрос.УстановитьПараметр("Разрезы", Разрезы);
		ОсновнойЗапрос.УстановитьПараметр("ОтборРазреза", ОтборРазреза);
		ОсновнойЗапрос.УстановитьПараметр("ОтборПоЦФО", ОтборПоЦФО);
		Если ФильтрПоПродажам <> Неопределено Тогда 
			Попытка
				Для Каждого лПараметр Из ФильтрПоПродажам.Параметры Цикл 
					ОсновнойЗапрос.УстановитьПараметр(лПараметр.Ключ, лПараметр.Значение);
				КонецЦикла;
			Исключение
				//
			КонецПопытки;
		КонецЕсли;
		Попытка	
			лТаблицаПоказателей = ОсновнойЗапрос.Выполнить().Выгрузить();
		Исключение
			лИнформация = ИнформацияОбОшибке();
			Сообщить("Не введено ни одного показателя получающего данные из регистров: "+лИнформация.Причина.Описание);
			Возврат "Ошибка";
		КонецПопытки;	
		Для Каждого лСтрокаПоказателя Из лТаблицаПоказателей Цикл 
			ЗаполнитьЗначенияСвойств(ТаблицаПоказателей.Добавить(), лСтрокаПоказателя);
		КонецЦикла;
		ОсновнойЗапрос.Текст = "";
		ОсновнойЗапрос.Параметры.Очистить();
		лКоличествоПодзапросов = 0;
	КонецЕсли;
	// is ЯннуровВФ кон 20150630 
	
	////Получение тпблицы показателей с рассчитанными суммами посредством запроса
	//Если Не ТаблицаПоказателей.Количество() = 0 Тогда
	//	
	//	Если Подразделение = 0 Тогда
	//		ТаблицаПоказателей.Колонки.Удалить("Дивизион");
	//		ТаблицаПоказателей.Колонки.Удалить("ДопОфис");
	//		ТаблицаПоказателей.Колонки.Удалить("ЦФО");
	//		ТаблицаПоказателей.Колонки.Удалить("УкрупКод");
	//		ТаблицаПоказателей.Колонки["Подразделение"].Имя = "Группировка";
	//	ИначеЕсли Подразделение = 1 Тогда
	//		ТаблицаПоказателей.Колонки.Удалить("Подразделение");
	//		ТаблицаПоказателей.Колонки.Удалить("ДопОфис");
	//		ТаблицаПоказателей.Колонки.Удалить("ЦФО");
	//		ТаблицаПоказателей.Колонки.Удалить("УкрупКод");
	//		ТаблицаПоказателей.Колонки["Дивизион"].Имя = "Группировка";
	//	ИначеЕсли Подразделение = 2 Тогда
	//		ТаблицаПоказателей.Колонки.Удалить("Подразделение");
	//		ТаблицаПоказателей.Колонки.Удалить("Дивизион");
	//		ТаблицаПоказателей.Колонки.Удалить("ЦФО");
	//		ТаблицаПоказателей.Колонки.Удалить("УкрупКод");
	//		ТаблицаПоказателей.Колонки["ДопОфис"].Имя = "Группировка";
	//	ИначеЕсли Подразделение = 3 Тогда
	//		ТаблицаПоказателей.Колонки.Удалить("Подразделение");
	//		ТаблицаПоказателей.Колонки.Удалить("Дивизион");
	//		ТаблицаПоказателей.Колонки.Удалить("ДопОфис");
	//		ТаблицаПоказателей.Колонки.Удалить("УкрупКод");
	//		ТаблицаПоказателей.Колонки["ЦФО"].Имя = "Группировка";
	//	ИначеЕсли Подразделение = 4 Тогда
	//		ТаблицаПоказателей.Колонки.Удалить("Подразделение");
	//		ТаблицаПоказателей.Колонки.Удалить("Дивизион");
	//		ТаблицаПоказателей.Колонки.Удалить("ДопОфис");
	//		ТаблицаПоказателей.Колонки.Удалить("ЦФО");
	//		ТаблицаПоказателей.Колонки["УкрупКод"].Имя = "Группировка";
	//	КонецЕсли;
	//Иначе
	//	ТаблицаПоказателей.Колонки.Удалить("Подразделение");
	//	ТаблицаПоказателей.Колонки.Удалить("Дивизион");
	//	ТаблицаПоказателей.Колонки.Удалить("ДопОфис");
	//	ТаблицаПоказателей.Колонки.Удалить("ЦФО");
	//	ТаблицаПоказателей.Колонки.Удалить("УкрупКод");
	//	ТаблицаПоказателей.Колонки.Добавить("Группировка");
	//КонецЕсли;
	
	Если Разрезы Тогда
		ТаблицаПоказателей.Свернуть("Показатель, Группировка", "Сумма");
	Иначе
		ТаблицаПоказателей.Колонки.Удалить("Группировка");
		ТаблицаПоказателей.Свернуть("Показатель","Сумма");
	КонецЕсли;	
	
	//Добавление в таблицу показателей показателей, рассчитываемых по формуле
	Для Каждого ПоказательПоФормуле Из СоответствиеПоказателейРасчетаПоФормуле Цикл
		
		ТекстФормулы 	  = ПоказательПоФормуле.Значение;
		ТекущийПоказатель = ПоказательПоФормуле.Ключ;
		
		РассчитатьПоказатель(ТекущийПоказатель, ТекстФормулы, ТаблицаПоказателей, Разрезы, Подразделение, ВидПоказателя);	
	КонецЦикла;
	
	//Удаляем группы, т.к. они необходимы были только для расчета по формулам, ибо если не удалить, то задвоится в СКД
	Если УдалитьГруппы Тогда 
		МассивСтрокНаУдаление = Новый Массив;	
		Для Каждого Строка Из ТаблицаПоказателей Цикл
			Если Строка.Показатель.ЭтоГруппа Тогда
				МассивСтрокНаУдаление.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка Из МассивСтрокНаУдаление Цикл
			ТаблицаПоказателей.Удалить(Строка);
		КонецЦикла;	
	КонецЕсли;
	
	Возврат ТаблицаПоказателей;
	
КонецФункции

// is ЯннуровВФ нач 20140722
//Процедура РассчитатьПоказатель(ТекущийПоказатель, ТекстФормулы, ТаблицаПоказателей, Разрезы, Подразделение)
Процедура РассчитатьПоказатель(ТекущийПоказатель, Знач ТекстФормулы, ТаблицаПоказателей, Разрезы, Подразделение, ВидПоказателя) Экспорт 
// is ЯннуровВФ нач 20140722
	
	//Если показатель уже рассчитан, тогда выходим из процедуры
	Если ЗначениеЗаполнено(ТаблицаПоказателей.Найти(ТекущийПоказатель, "Показатель")) Тогда
		Возврат;
	КонецЕсли;
	// is ЯннуровВФ нач 20140819
	Если Не ТекущийПоказатель.ЭтоГруппа И Не ТекущийПоказатель.РасчетПоФормуле Тогда 
		// Показатель рассчитывается запросом
		Возврат;
	КонецЕсли;
	// is ЯннуровВФ кон 20140819
	
	// is ЯннуровВФ нач 20140721
	Сообщить("Рассчитывается значение показателя <"+ТекущийПоказатель+"> с кодом <"+СокрЛП(ТекущийПоказатель.Код)+">");
	// is ЯннуровВФ кон 20140721
	Если Не ТекущийПоказатель.ЭтоГруппа Тогда
		//Таблица значений, в которой будут хранится временные данные по разрезам текущего показателя
		ВремТЗ = Новый ТаблицаЗначений;
		ВремТЗ.Колонки.Добавить("Показатель");
		Если Разрезы Тогда 
			ВремТЗ.Колонки.Добавить("Группировка");
		КонецЕсли;	
		ВремТЗ.Колонки.Добавить("Сумма");
		//Массив показателей - хранит все влияющие показатели
		МассивВлияющихПоказателей = Новый Массив;
		
		Пока Не Найти(ТекстФормулы, "[") = 0 Цикл
			НомерСимволаОт = Найти(ТекстФормулы, "[");
			НомерСимволаДо = Найти(ТекстФормулы, "]");
			НайдПоказатель = Сред(ТекстФормулы, НомерСимволаОт + 1, НомерСимволаДо - НомерСимволаОт - 1);
			// is ЯннуровВФ нач 20140723
			//НайдПоказательСсылка = Справочники.ДС_ПоказателиОтчетаPL.НайтиПоНаименованию(НайдПоказатель);
			// is ЯннуровВФ нач 20150722
			//НайдПоказательСсылка = НайтиПоказатель(НайдПоказатель, ВидПоказателя);
			НайдПоказателиСсылки = НайтиПоказатели(НайдПоказатель, ВидПоказателя);
			// is ЯннуровВФ кон 20150722
			// is ЯннуровВФ кон 20140723
			
			//Если элемент был удален или не найден, то в дальнейшем заменим его на 0
			// is ЯннуровВФ нач 20150722
			//Если ЗначениеЗаполнено(НайдПоказательСсылка) Тогда
			Если НайдПоказателиСсылки.Количество() > 0 Тогда 
				
				Для Каждого НайдПоказательСсылка Из НайдПоказателиСсылки Цикл 
			// is ЯннуровВФ кон 20150722
					МассивВлияющихПоказателей.Добавить(НайдПоказательСсылка);
					
					МассивНайденныхСтрокТаблицыПоказателей = ТаблицаПоказателей.НайтиСтроки(Новый Структура("Показатель", НайдПоказательСсылка));
					//Если есть не расчитанные показатели от которых зависит текущий, то рекурсивно рассчитываем их
					Если МассивНайденныхСтрокТаблицыПоказателей.Количество() = 0 Тогда
						РассчитатьПоказатель(НайдПоказательСсылка, НайдПоказательСсылка.Формула, ТаблицаПоказателей, Разрезы, Подразделение, ВидПоказателя);	
						МассивНайденныхСтрокТаблицыПоказателей = ТаблицаПоказателей.НайтиСтроки(Новый Структура("Показатель", НайдПоказательСсылка));
					КонецЕсли;	
					
					//Для каждой строки из найденных значений уже рассчитанных строк (актуально прииспользовании разреза)
					//добавляем рассчитанные по формуле значения
					Для каждого НайдСтрокаТаблицыПоказателей Из МассивНайденныхСтрокТаблицыПоказателей Цикл
						СтрокаВремТаб = ВремТЗ.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаВремТаб, НайдСтрокаТаблицыПоказателей);
					КонецЦикла;
				КонецЦикла;
				
				ТекстФормулы = СтрЗаменить(ТекстФормулы, "[" + НайдПоказатель + "]", "{" + НайдПоказатель + "}");
				
			Иначе	
				//Если показатель был удален или не найден, то заменим значение показателя на 0 и выдадим сообщение
				ТекстФормулы = СтрЗаменить(ТекстФормулы, "[" + НайдПоказатель + "]", "0");
				
				// is ЯннуровВФ нач 20140819
				//СтрокаВремТаб = ВремТЗ.Добавить();
				// is ЯннуровВФ кон 20140819
				
				Сообщить("Для показателя <"+ТекущийПоказатель+"> с кодом <"+СокрЛП(ТекущийПоказатель.Код)+"> в расчете формулы значение  
					|влияющего показателя <"+НайдПоказатель+"> приравнено нулю, т.к. влияющий показатель удален или переименован.");
			КонецЕсли;	
			
		КонецЦикла;	
		
		Если Разрезы Тогда	
			ВремТЗ.Свернуть("Показатель, Группировка", "Сумма");
		Иначе	
			ВремТЗ.Свернуть("Показатель", "Сумма");
		КонецЕсли;
		
		Если Разрезы Тогда
			НовТЗДляМассива = Новый ТаблицаЗначений;
			НовТЗДляМассива.Колонки.Добавить("Группировка");
			
			Для Каждого СтрокаВремТЗ Из ВремТЗ Цикл
				НовСтрокаДляТЗМассив = НовТЗДляМассива.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрокаДляТЗМассив, СтрокаВремТЗ);
			КонецЦикла;
			
			НовТЗДляМассива.Свернуть("Группировка");
			
			МассивВлияющихГруппировок = НовТЗДляМассива.ВыгрузитьКолонку("Группировка");
			
			Для каждого ВлияющаяГруппировка из МассивВлияющихГруппировок Цикл
				
				// is ЯннуровВФ нач 20140804
				ТекстФормулыГруп = НРег(ТекстФормулы);
				// is ЯннуровВФ кон 20140804
				
				// is ЯннуровВФ нач 20150722
				лДанныеПоказателей = Новый Соответствие;
				// is ЯннуровВФ кон 20150722
				Для Каждого ВлияющийПоказатель Из МассивВлияющихПоказателей Цикл
					НайдСтрокаВремТаблицы = ВремТЗ.НайтиСтроки(Новый Структура("Показатель, Группировка", ВлияющийПоказатель, ВлияющаяГруппировка));
					
					СуммаПоказателя = 0;
					Если Не НайдСтрокаВремТаблицы.Количество() = 0 Тогда
						СуммаПоказателя = НайдСтрокаВремТаблицы[0].Сумма;
					КонецЕсли;	
					
					// is ЯннуровВФ нач 20140804
					//ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, ВлияющийПоказатель.Наименование , СуммаПоказателя);
					// is ЯннуровВФ нач 20140819 В формулах КодPL вместо наименования
					//ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, "{"+НРег(ВлияющийПоказатель)+"}", Формат(СуммаПоказателя,"ЧН=0; ЧГ=0"));
					// is ЯннуровВФ нач 20150722
					//ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, "{"+ВлияющийПоказатель.КодPL+"}", Формат(СуммаПоказателя,"ЧН=0; ЧГ=0"));
					лПрежняяСуммаПоказателя = лДанныеПоказателей[ВлияющийПоказатель.КодPL];
					Если лПрежняяСуммаПоказателя = Неопределено Тогда 
						лПрежняяСуммаПоказателя = 0;
					КонецЕсли;
					лДанныеПоказателей.Вставить(ВлияющийПоказатель.КодPL, лПрежняяСуммаПоказателя+СуммаПоказателя); 
					// is ЯннуровВФ кон 20150722
					// is ЯннуровВФ кон 20140819
					// is ЯннуровВФ кон 20140804
					//Избавляемся от неразрывного пробела
					ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, Символы.НПП, "");
				КонецЦикла;
				// is ЯннуровВФ нач 20150722
				Для Каждого лДанныеПоказателя Из лДанныеПоказателей Цикл 
					ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, "{"+лДанныеПоказателя.Ключ+"}", Формат(лДанныеПоказателя.Значение,"ЧН=0; ЧГ=0"));
				КонецЦикла;
				// is ЯннуровВФ кон 20150722
				
				// is ЯннуровВФ нач 20140804
				лФормула = СтрЗаменить(СокрЛП(ТекстФормулыГруп),",", ".");
				// is ЯннуровВФ кон 20140804
				Попытка
					
					//Если влияющий показатель удален или не найден, то зададим группировке пустую ссылку 
					//в зависимости от вида разреза
					Если Не ЗначениеЗаполнено(ВлияющаяГруппировка) Тогда
						Если Подразделение = 0 Тогда
							ВлияющаяГруппировка = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
						ИначеЕсли Подразделение = 1 Тогда	
							ВлияющаяГруппировка = Справочники.ПРГДивизионы.ПустаяСсылка();
						ИначеЕсли Подразделение = 2 Тогда
							ВлияющаяГруппировка = Справочники.ПРГДопОфисы.ПустаяСсылка();
						ИначеЕсли Подразделение = 3 Тогда
							ВлияющаяГруппировка = Справочники.ПРГЦФО.ПустаяСсылка();
						ИначеЕсли Подразделение = 4 Тогда
							ВлияющаяГруппировка = Справочники.ПРГ_ЦентрыУчетаЗатрат2014.ПустаяСсылка();
						КонецЕсли;
					КонецЕсли;	
					
					// is ЯннуровВФ нач 20140804
					//СуммаПоказРасчитанная 		= Вычислить(ТекстФормулыГруп);
					СуммаПоказРасчитанная 		= Вычислить(лФормула);
					// is ЯннуровВФ кон 20140804
					НовСтрокаОснТаб 			= ТаблицаПоказателей.Добавить();
					НовСтрокаОснТаб.Показатель  = ТекущийПоказатель;
					НовСтрокаОснТаб.Группировка = ВлияющаяГруппировка;
					НовСтрокаОснТаб.Сумма       = СуммаПоказРасчитанная;
					Если НовСтрокаОснТаб.Показатель.ис_Минус Тогда 
						НовСтрокаОснТаб.Сумма = -НовСтрокаОснТаб.Сумма;
					КонецЕсли;
					
				Исключение	
					// is ЯнннуровВФ нач 20140720
					Если ЗначениеЗаполнено(ТекстФормулыГруп) Тогда 
						лИнформация = ИнформацияОбОшибке();
						НовСтрокаОснТаб 			= ТаблицаПоказателей.Добавить();
						НовСтрокаОснТаб.Показатель  = ТекущийПоказатель;
						НовСтрокаОснТаб.Группировка = ВлияющаяГруппировка;
						НовСтрокаОснТаб.Сумма       = 0;
						Сообщить("Ошибка при вычислении формулы показателя <"+ТекущийПоказатель+"> с кодом <"+СокрЛП(ТекущийПоказатель.Код)+"> с формулой <"+ТекстФормулыГруп+">: "+лИнформация.Описание);
						Сообщить("Показателю <"+ТекущийПоказатель+"> с кодом <"+СокрЛП(ТекущийПоказатель.Код)+"> присвоено значение 0");
					КонецЕсли;
					// is ЯнннуровВФ кон 20140720
				КонецПопытки;	
				
			КонецЦикла;	
			
		Иначе
			
			// is ЯннуровВФ нач 20140804
			//ТекстФормулыГруп = ТекстФормулы;
			ТекстФормулыГруп = НРег(ТекстФормулы);
			// is ЯннуровВФ кон 20140804
			
			// is ЯннуровВФ нач 20150722
			лДанныеПоказателей = Новый Соответствие;
			// is ЯннуровВФ кон 20150722
			Для Каждого ВлияющийПоказатель Из МассивВлияющихПоказателей Цикл
				НайдСтрокаВремТаблицы = ВремТЗ.НайтиСтроки(Новый Структура("Показатель", ВлияющийПоказатель));
				
				СуммаПоказателя = 0;
				Если Не НайдСтрокаВремТаблицы.Количество() = 0 Тогда
					СуммаПоказателя = НайдСтрокаВремТаблицы[0].Сумма;
				КонецЕсли;	
				
				// is ЯннуровВФ нач 20140804
				//ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, ВлияющийПоказатель, СуммаПоказателя);
				// is ЯннуровВФ нач 20140819 В формулах КодPL вместо наименования
				//ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, "{"+НРег(ВлияющийПоказатель)+"}", Формат(СуммаПоказателя,"ЧН=0; ЧГ=0"));
				// is ЯннуровВФ нач 20150722
				//ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, "{"+ВлияющийПоказатель.КодPL+"}", Формат(СуммаПоказателя,"ЧН=0; ЧГ=0"));
				лПрежняяСуммаПоказателя = лДанныеПоказателей[ВлияющийПоказатель.КодPL];
				Если лПрежняяСуммаПоказателя = Неопределено Тогда 
					лПрежняяСуммаПоказателя = 0;
				КонецЕсли;
				лДанныеПоказателей.Вставить(ВлияющийПоказатель.КодPL, лПрежняяСуммаПоказателя+СуммаПоказателя); 
				// is ЯннуровВФ кон 20150722
				// is ЯннуровВФ кон 20140819
				// is ЯннуровВФ кон 20140804
				//Избавляемся от неразрывного пробела
				ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, Символы.НПП, "");
			КонецЦикла;
			// is ЯннуровВФ нач 20150722
			Для Каждого лДанныеПоказателя Из лДанныеПоказателей Цикл 
				ТекстФормулыГруп = СтрЗаменить(ТекстФормулыГруп, "{"+лДанныеПоказателя.Ключ+"}", Формат(лДанныеПоказателя.Значение,"ЧН=0; ЧГ=0"));
			КонецЦикла;
			// is ЯннуровВФ кон 20150722
			
			// is ЯннуровВФ нач 20140804
			лФормула = СтрЗаменить(СокрЛП(ТекстФормулыГруп),",", ".");
			// is ЯннуровВФ кон 20140804
			Попытка
				// is ЯннуровВФ нач 20140804
				//СуммаПоказРасчитанная 		= Вычислить(СтрЗаменить(ТекстФормулыГруп,",", "."));
				СуммаПоказРасчитанная 		= Вычислить(лФормула);
				// is ЯннуровВФ кон 20140804
				НовСтрокаОснТаб 			= ТаблицаПоказателей.Добавить();
				НовСтрокаОснТаб.Показатель  = ТекущийПоказатель;
				НовСтрокаОснТаб.Сумма       = СуммаПоказРасчитанная;
				Если НовСтрокаОснТаб.Показатель.ис_Минус Тогда 
					НовСтрокаОснТаб.Сумма = -НовСтрокаОснТаб.Сумма;
				КонецЕсли;
			Исключение	
				// is ЯнннуровВФ нач 20140720
				Если ЗначениеЗаполнено(ТекстФормулыГруп) Тогда 
					лИнформация = ИнформацияОбОшибке();
					НовСтрокаОснТаб 			= ТаблицаПоказателей.Добавить();
					НовСтрокаОснТаб.Показатель  = ТекущийПоказатель;
					НовСтрокаОснТаб.Сумма       = 0;
					Сообщить("Ошибка при вычислении формулы показателя <"+ТекущийПоказатель+"> с кодом <"+СокрЛП(ТекущийПоказатель.Код)+"> с формулой <"+лФормула+">: "+лИнформация.Описание);
					Сообщить("Показателю <"+ТекущийПоказатель+"> с кодом <"+СокрЛП(ТекущийПоказатель.Код)+"> присвоено значение 0");
				КонецЕсли;
				// is ЯнннуровВФ кон 20140720
			КонецПопытки;
		КонецЕсли;
		
	Иначе
		
		//Получаем все подчиненные элементы
		ЗапросПодчиненные = Новый Запрос;
		ЗапросПодчиненные.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДС_ПоказателиОтчетаPL.Ссылка
		|ИЗ
		|	Справочник.ДС_ПоказателиОтчетаPL КАК ДС_ПоказателиОтчетаPL
		|ГДЕ
		|	ДС_ПоказателиОтчетаPL.Родитель = &Родитель
		|	И ДС_ПоказателиОтчетаPL.ПометкаУдаления = ЛОЖЬ
		|	И ДС_ПоказателиОтчетаPL.ис_Активность = ИСТИНА";
		// is ЯннуровВФ нач 20140813
		Если ЗначениеЗаполнено(ВидПоказателя) Тогда 
			ЗапросПодчиненные.Текст = ЗапросПодчиненные.Текст + "
			|	И (ДС_ПоказателиОтчетаPL.ЭтоГруппа = ИСТИНА
			|		ИЛИ ДС_ПоказателиОтчетаPL."+ВидПоказателя+" = ИСТИНА)";
		КонецЕсли;
		ЗапросПодчиненные.УстановитьПараметр("ВидПоказателя", ВидПоказателя);
		// is ЯннуровВФ кон 20140813

		ЗапросПодчиненные.УстановитьПараметр("Родитель", ТекущийПоказатель);

		Выборка = ЗапросПодчиненные.Выполнить().Выбрать();

		//Буфер, в котором храним временные данные
		ВремТаб = Новый ТаблицаЗначений;
		ВремТаб.Колонки.Добавить("Показатель");
		ВремТаб.Колонки.Добавить("Сумма");
		
		Если Разрезы Тогда
			ВремТаб.Колонки.Добавить("Группировка");
		КонецЕсли;	
		
		Пока Выборка.Следующий() Цикл
			ТекстФормулыРод = Выборка.Ссылка.Формула;
			РассчитатьПоказатель(Выборка.Ссылка, ТекстФормулыРод, ТаблицаПоказателей, Разрезы, Подразделение, ВидПоказателя);
			МассивПодчиненныхПоказателей = ТаблицаПоказателей.НайтиСтроки(Новый Структура("Показатель", Выборка.Ссылка));
			Для Каждого СтрокаПодчиненныхПоказателей Из МассивПодчиненныхПоказателей Цикл 
				СтрокаВремТаб = ВремТаб.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаВремТаб, СтрокаПодчиненныхПоказателей);
				СтрокаВремТаб.Показатель = ТекущийПоказатель;
				Если СтрокаВремТаб.Показатель.ис_Минус Тогда 
					СтрокаВремТаб.Сумма = -СтрокаВремТаб.Сумма;
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;
		
		Если Разрезы Тогда
			ВремТаб.Свернуть("Показатель, Группировка", "Сумма");
			Для каждого СтрокаВремТаб Из ВремТаб Цикл
				НовСтрокаТабПоказателей = ТаблицаПоказателей.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрокаТабПоказателей, СтрокаВремТаб);
			КонецЦикла;
		Иначе
			ВремТаб.Свернуть("Показатель","Сумма");
			Для Каждого СтрокаВремТаб Из ВремТаб Цикл
				НовСтрокаТабПоказателей = ТаблицаПоказателей.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрокаТабПоказателей, СтрокаВремТаб);
			КонецЦикла;
		КонецЕсли;	

	КонецЕсли;
	
КонецПроцедуры		

// is ЯннуровВФ 20140723
Функция НайтиПоказатели(КодPL, ВидПоказателя) Экспорт 
	
	лЗапрос = Новый Запрос;
	Если ЗначениеЗаполнено(ВидПоказателя) Тогда 
		лЗапрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДС_ПоказателиОтчетаPL.Ссылка КАК Показатель,
		|	1 КАК Порядок
		|ИЗ
		|	Справочник.ДС_ПоказателиОтчетаPL КАК ДС_ПоказателиОтчетаPL
		|ГДЕ
		|	ДС_ПоказателиОтчетаPL.ПометкаУдаления = ЛОЖЬ
		|	И ДС_ПоказателиОтчетаPL.ис_Активность = ИСТИНА
		// is ЯннуровВФ нач 20140819 В формулах КодPL вместо наименования
		//|	И ДС_ПоказателиОтчетаPL.Наименование ПОДОБНО &Наименование
		|	И ДС_ПоказателиОтчетаPL.КодPL = &КодPL
		// is ЯннуровВФ кон 20140819
		|	И ДС_ПоказателиОтчетаPL.ЭтоГруппа = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ 
		|	ДС_ПоказателиОтчетаPL.Ссылка КАК Показатель,
		|	2 КАК Порядок
		|ИЗ
		|	Справочник.ДС_ПоказателиОтчетаPL КАК ДС_ПоказателиОтчетаPL
		|ГДЕ
		|	ДС_ПоказателиОтчетаPL.ПометкаУдаления = ЛОЖЬ
		|	И ДС_ПоказателиОтчетаPL.ис_Активность = ИСТИНА
		// is ЯннуровВФ нач 20140819 В формулах КодPL вместо наименования
		//|	И ДС_ПоказателиОтчетаPL.Наименование ПОДОБНО &Наименование
		|	И ДС_ПоказателиОтчетаPL.КодPL = &КодPL
		// is ЯннуровВФ кон 20140819
		|	И ДС_ПоказателиОтчетаPL."+ВидПоказателя+" = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ 
		|	ДС_ПоказателиОтчетаPL.Ссылка КАК Показатель,
		|	3 КАК Порядок
		|ИЗ
		|	Справочник.ДС_ПоказателиОтчетаPL КАК ДС_ПоказателиОтчетаPL
		|ГДЕ
		|	ДС_ПоказателиОтчетаPL.ПометкаУдаления = ЛОЖЬ
		|	И ДС_ПоказателиОтчетаPL.ис_Активность = ИСТИНА
		// is ЯннуровВФ нач 20140819 В формулах КодPL вместо наименования
		//|	И ДС_ПоказателиОтчетаPL.Наименование ПОДОБНО &Наименование
		|	И ДС_ПоказателиОтчетаPL.КодPL = &КодPL
		// is ЯннуровВФ кон 20140819
		|	И ДС_ПоказателиОтчетаPL.ис_ПоПроизводству = ЛОЖЬ
		|	И ДС_ПоказателиОтчетаPL.ис_ПоРеализации = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок";
	Иначе
		лЗапрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДС_ПоказателиОтчетаPL.Ссылка КАК Показатель
		|ИЗ
		|	Справочник.ДС_ПоказателиОтчетаPL КАК ДС_ПоказателиОтчетаPL
		|ГДЕ
		|	ДС_ПоказателиОтчетаPL.ПометкаУдаления = ЛОЖЬ
		|	И ДС_ПоказателиОтчетаPL.ис_Активность = ИСТИНА
		// is ЯннуровВФ нач 20140819 В формулах КодPL вместо наименования
		//|	И ДС_ПоказателиОтчетаPL.Наименование ПОДОБНО &Наименование
		|	И ДС_ПоказателиОтчетаPL.КодPL = &КодPL";
		// is ЯннуровВФ нач 20140819 В формулах КодPL вместо наименования
	КонецЕсли;
	лЗапрос.УстановитьПараметр("КодPL", КодPL);
	лТаблица = лЗапрос.Выполнить().Выгрузить();
	лТаблица.Свернуть("Показатель");
	Возврат лТаблица.ВыгрузитьКолонку("Показатель");
КонецФункции
