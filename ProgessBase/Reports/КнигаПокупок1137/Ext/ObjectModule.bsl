
#Если КЛИЕНТ Тогда
	
// Процедуры формирования отчета	
	
Процедура СформироватьКнигуПокупок(ЭлементыФормы) Экспорт
	
	мСведенияОбОрганизации = Неопределено;
    		
	ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
	ОсновнойРаздел = ПанельРазделовКниги.Страницы.ОсновнойРаздел;
	КоличествоОтображаемыхРазделов = ПанельРазделовКниги.Страницы.Количество();
	
	Для НомерСтраницы = 1 по КоличествоОтображаемыхРазделов Цикл
		Если ПанельРазделовКниги.Страницы[КоличествоОтображаемыхРазделов - НомерСтраницы] = ОсновнойРаздел Тогда
			Продолжить;
		КонецЕсли; 
		ПанельРазделовКниги.Страницы.Удалить(КоличествоОтображаемыхРазделов - НомерСтраницы);
	КонецЦикла; 

	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.Добавить(Организация);
	
	ПрефиксыРИБиОрганизации = ОбщегоНазначения.СформироватьМассивПрефиксовДляРИБИОрганизации(Организация);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НачалоПериода", НачалоПериода);
	СтруктураПараметров.Вставить("КонецПериода", КонецПериода);
	СтруктураПараметров.Вставить("СформироватьОтчетПоСтандартнойФорме", СформироватьОтчетПоСтандартнойФорме);
	СтруктураПараметров.Вставить("ОтбиратьПоКонтрагенту", ОтбиратьПоКонтрагенту);
	СтруктураПараметров.Вставить("КонтрагентДляОтбора", КонтрагентДляОтбора);
	СтруктураПараметров.Вставить("ГруппироватьПоКонтрагентам", ГруппироватьПоКонтрагентам); 
	СтруктураПараметров.Вставить("ВыводитьПокупателейПоАвансам", ВыводитьПокупателейПоАвансам);
	СтруктураПараметров.Вставить("ВыводитьТолькоДопЛисты", ВыводитьТолькоДопЛисты);
	СтруктураПараметров.Вставить("ФормироватьДополнительныеЛисты", ФормироватьДополнительныеЛисты);
	СтруктураПараметров.Вставить("СписокОрганизаций", СписокОрганизаций);
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("ДополнительныеЛистыЗаТекущийПериод", ДополнительныеЛистыЗаТекущийПериод); 
	СтруктураПараметров.Вставить("ДатаФормированияДопЛиста"); 
	СтруктураПараметров.Вставить("ЗаписьДополнительногоЛиста", Ложь);
	СтруктураПараметров.Вставить("СкрытьКолонкиПоСтавке20", СкрытьКолонкиПоСтавке20);
	СтруктураПараметров.Вставить("ЕстьЗаписиПоКолонке20");
	СтруктураПараметров.Вставить("ЗаполнениеДокумента", Ложь);
	СтруктураПараметров.Вставить("ПрефиксыРИБиОрганизации", ПрефиксыРИБиОрганизации);
	
	Если НЕ (ВыводитьТолькоДопЛисты И ФормироватьДополнительныеЛисты) Тогда
		
		СписокСчетовФактур = Неопределено;
		ТабличныйДокумент = ЭлементыФормы.ТабличныйДокумент;	
	    Результат = УчетНДС.ПолучитьЗаписиКнигиПокупок(СписокСчетовФактур, СтруктураПараметров);
		
		СформироватьОсновнойРаздел(ЭлементыФормы, СтруктураПараметров, ТабличныйДокумент, Результат, СписокСчетовФактур);
		
	КонецЕсли;
		
	// Проверка наличия дополнительных листов за текущий период
	СтруктураПараметров = УчетНДС.ПроверитьНаличиеДопЛистовКнигиПокупок(СтруктураПараметров);
	
	Если ФормироватьДополнительныеЛисты Тогда
		
		СписокСчетовФактур = Неопределено;
		
		// Получение записей дополнительных листов
		Результат = УчетНДС.ПолучитьЗаписиДополнительныхЛистовКнигиПокупок(СписокСчетовФактур, СтруктураПараметров);
        		
		СформироватьДополнительныеЛисты(ЭлементыФормы, СтруктураПараметров, Результат, СписокСчетовФактур);
		
	КонецЕсли;
    	
КонецПроцедуры

Процедура СформироватьОсновнойРаздел(ЭлементыФормы, СтруктураПараметров, ТабличныйДокумент, Результат, СписокСчетовФактур);
		
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупок";

	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(СтруктураПараметров.КонецПериода);
	Если ВерсияПостановленияНДС1137 = 3 Тогда
		Макет = ПолучитьОбщийМакет("КнигаПокупок735");
	Иначе
		Макет = ПолучитьОбщийМакет("КнигаПокупок1137");
	КонецЕсли;
	
	СтруктураПараметров.ЕстьЗаписиПоКолонке20 = Ложь;	
	
	/////////////////////////////////////////////////////////////////////////
	// Вывод шапки книги покупок
	
	Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;	
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.УстановленныйОтбор = "";
	Секция.Параметры.НачалоПериода = Формат(СтруктураПараметров.НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(СтруктураПараметров.КонецПериода, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");;
	Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Секция.Параметры.ИННКППОрганизации = "" + Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	
	Если НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме И СтруктураПараметров.ОтбиратьПоКонтрагенту Тогда
		Секция.Параметры.УстановленныйОтбор = "Отбор: Контрагент " + ?(КонтрагентДляОтбора.ЭтоГруппа, "в группе ", "= ") + КонтрагентДляОтбора;
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
	// Вывод шапки книги покупок
	/////////////////////////////////////////////////////////////////////////
	
	/////////////////////////////////////////////////////////////////////////
	// Вывод пустой книги покупок, если данных нет
	Если Результат.Пустой() Тогда
		
		Секция = Макет.ПолучитьОбласть("Всего");
		ТабличныйДокумент.Вывести(Секция);
		
		/////////////////////////////////////////////////////////////////////////
		// Вывод подвала
		ВывестиПодвал(ТабличныйДокумент, Макет);
		// Вывод подвала
		////////////////////////////////////////////////////////////////////////
        		
		/////////////////////////////////////////////////////////////////////////
		// Удаление колонок 20% и связанного примечания
		Если ВерсияПостановленияНДС1137 < 3 
				И СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
			УдалитьКолонки20ПроцентовОсновнойРаздел(ТабличныйДокумент);
		КонецЕсли; 
		// Удаление колонок 20% и связанного примечания
		/////////////////////////////////////////////////////////////////////////
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
		Возврат;
		
	КонецЕсли; 
	// Вывод пустой книги покупок, если данных нет
	/////////////////////////////////////////////////////////////////////////
	
	СтруктураСекций = Новый Структура("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));
	ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;
		
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
		СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
	КонецЕсли;
    	
	ИтогПоОрганизации = 0;
	
	УчетНДСКлиент.ПреобразоватьЗаписиКнигиПокупок(
		СтруктураПараметров, Результат, ТабличныйДокумент, СписокСчетовФактур, ИтогПоОрганизации, ПараметрыСтроки, , СтруктураСекций);
    
	// Вывод всего
	Секция = Макет.ПолучитьОбласть("Всего");
	Секция.Параметры.Заполнить(ИтогПоОрганизации);
	
	ТабличныйДокумент.Вывести(Секция);
	
	/////////////////////////////////////////////////////////////////////////
	// Вывод подвала
	ВывестиПодвал(ТабличныйДокумент, Макет);
	// Вывод подвала
	/////////////////////////////////////////////////////////////////////////
	
	/////////////////////////////////////////////////////////////////////////
	// Повтор шапки таблицы на каждой строке
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
	// Повтор шапки таблицы на каждой строке
	/////////////////////////////////////////////////////////////////////////
	
	/////////////////////////////////////////////////////////////////////////
	// Удаление колонок 20% и связанного примечания
	Если ВерсияПостановленияНДС1137 <> 3 И СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
		Если СтруктураПараметров.ЕстьЗаписиПоКолонке20 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("В книге продаж организации <"+Организация+"> за период "+ПредставлениеПериода(НачалоПериода, ?(КонецПериода='00010101',КонецПериода,КонецДня(КонецПериода)))+" есть записи по ставке НДС 20%!
			|Отображение соотвествующих колонок не может быть отключено.");
		Иначе
			УдалитьКолонки20ПроцентовОсновнойРаздел(ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли; 
	// Удаление колонок 20% и связанного примечания
	/////////////////////////////////////////////////////////////////////////
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
	
КонецПроцедуры

Процедура СформироватьДополнительныеЛисты(ЭлементыФормы, СтруктураПараметров, Результат, СписокСчетовФактур)
	
	Перем Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента;
	Перем ТабличныйДокумент;
    		
	Если Результат.Пустой() Тогда
	    Возврат;
	КонецЕсли; 
	
	НомерОтображаемогоПериода = 0;
	
	Если СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
	    ТаблицаОбластейДляКорректировки = Новый ТаблицаЗначений();
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("Подпись20Процентов");
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("КонецЛистаБезПодписи20Процентов");
	КонецЕсли; 
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураПараметров.ЗаписьДополнительногоЛиста = Истина;
		
	Для Каждого ИтогПоПериодам ИЗ ДеревоЗаписей.Строки Цикл;
		
		НомерЛиста = 0;
		
		/////////////////////////////////////////////////////////////////////////
		// Добавление новой страницы панели разделов для вывода доп. листа
		НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
		НалоговыйПериод = ПредставлениеПериода(ИтогПоПериодам.НалоговыйПериод, КонецДня(ИтогПоПериодам.КонецНалоговогоПериода), "ФП = Истина");
				
		ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
		НоваяСтраница = ПанельРазделовКниги.Страницы.Добавить("ДопЛист"+НомерОтображаемогоПериода,"Доп.листы за " + НалоговыйПериод);
		ПанельРазделовКниги.ТекущаяСтраница = НоваяСтраница;
		ТабличныйДокумент = ЭлементыФормы.Добавить(Тип("ПолеТабличногоДокумента"),"ТД_ДопЛист"+НомерОтображаемогоПериода, Истина, ПанельРазделовКниги);
		ТабличныйДокумент.Лево = ЭлементыФормы.ТабличныйДокумент.Лево;
		ТабличныйДокумент.Верх = ЭлементыФормы.ТабличныйДокумент.Верх;
		ТабличныйДокумент.Высота = ЭлементыФормы.ТабличныйДокумент.Высота;
		ТабличныйДокумент.Ширина = ЭлементыФормы.ТабличныйДокумент.Ширина;
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупокДопЛист";
		
		ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(ГраницаЭлементаУправления.Низ,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.УстановитьПривязку(ГраницаЭлементаУправления.Низ,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(ГраницаЭлементаУправления.Право,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.УстановитьПривязку(ГраницаЭлементаУправления.Право,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.ТолькоПросмотр = Истина;
		
		Если СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
		    ТаблицаОбластейДляКорректировки.Очистить();
		КонецЕсли;
		// Добавление новой страницы панели разделов для вывода доп. листа
		/////////////////////////////////////////////////////////////////////////
		МожноСкрытьКолонкиПоСтавке20 = СтруктураПараметров.СкрытьКолонкиПоСтавке20;

		Для Каждого ИтогПоПериодамКорректировки ИЗ ИтогПоПериодам.Строки Цикл
			
			ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(ИтогПоПериодамКорректировки.КонецНалоговогоПериода);
			Если ВерсияПостановленияНДС1137 = 1 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок1137");
			ИначеЕсли ВерсияПостановленияНДС1137 = 2 Тогда 	
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок952");
			Иначе
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок735");
			КонецЕсли; 
		
			Секция 		= Макет.ПолучитьОбласть("Строка");
			СтрокаИтого = Макет.ПолучитьОбласть("Итого");
			СтрокаВсего = Макет.ПолучитьОбласть("Всего");
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
				СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
			КонецЕсли;
			
			// Формирование шапки доп. листа
			ОкончаниеПредыдущегоРаздела = ТабличныйДокумент.ВысотаТаблицы;
			НомерЛиста = НомерЛиста + 1;
			
			СтруктураПараметров.Вставить("НалоговыйПериод", ИтогПоПериодамКорректировки.НалоговыйПериод);
			СтруктураПараметров.Вставить("КонецНалоговогоПериода", КонецКвартала(ИтогПоПериодамКорректировки.КонецНалоговогоПериода));
			СтруктураПараметров.Вставить("ДатаОформления", ИтогПоПериодамКорректировки.ДатаОформления);
				
			УчетНДСКлиент.ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, СтруктураПараметров, НомерЛиста);

			СтруктураПараметров.ДатаФормированияДопЛиста = ИтогПоПериодамКорректировки.ДатаОформления;
			
			ИтогЗаПериод = УчетНДС.ПолучитьИтогиЗаПериодКнигаПокупок(СтруктураПараметров);
						
			СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
			
			СтруктураПараметров.ЕстьЗаписиПоКолонке20 = НЕ (ИтогЗаПериод.СуммаБезНДС20 = 0 и ИтогЗаПериод.НДС20 = 0);
			ТабличныйДокумент.Вывести(СтрокаИтого);
            
			СтруктураСекций = Новый Структура("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));
			ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
				СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
			КонецЕсли;
			
			УчетНДСКлиент.ПреобразоватьЗаписиДополнительногоЛистаКнигиПокупок(
				СтруктураПараметров, ИтогПоПериодамКорректировки, ИтогЗаПериод, ТабличныйДокумент, СписокСчетовФактур, ПараметрыСтроки, , СтруктураСекций);
			
			СтрокаВсего.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаВсего);
			
			/////////////////////////////////////////////////////////////////////////
			// Вывод подвала
			ВывестиПодвал(ТабличныйДокумент, Макет);
			// Вывод подвала
			/////////////////////////////////////////////////////////////////////////
			
			
			Если ВерсияПостановленияНДС1137 < 3 Тогда
				МожноСкрытьКолонкиПоСтавке20 = МожноСкрытьКолонкиПоСтавке20 И НЕ СтруктураПараметров.ЕстьЗаписиПоКолонке20;

				Если МожноСкрытьКолонкиПоСтавке20 тогда
					МакетТекущегоЛиста = ТаблицаОбластейДляКорректировки.Добавить();
					МакетТекущегоЛиста.Подпись20Процентов = ТабличныйДокумент.Область("Подпись20Процентов");
					МакетТекущегоЛиста.КонецЛистаБезПодписи20Процентов = ТабличныйДокумент.Область(МакетТекущегоЛиста.Подпись20Процентов.Верх,,МакетТекущегоЛиста.Подпись20Процентов.Верх); 
				КонецЕсли;
			КонецЕсли;	
			
		КонецЦикла; 
		
		Если ВерсияПостановленияНДС1137 < 3 Тогда
			Если СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
				Если НЕ МожноСкрытьКолонкиПоСтавке20 Тогда
					ОбщегоНазначения.СообщитьОбОшибке("В дополнительном листе книге покупок организации <"+Организация+"> за период "+ПредставлениеПериода(ИтогПоПериодамКорректировки.НалоговыйПериод, КонецДня(ИтогПоПериодамКорректировки.КонецНалоговогоПериода))+" есть записи по ставке НДС 20%!
					|Отображение соотвествующих колонок не может быть отключено.");
				Иначе
					Для каждого ОбластиДляКорректировки Из ТаблицаОбластейДляКорректировки Цикл
						ТабличныйДокумент.УдалитьОбласть(ОбластиДляКорректировки.Подпись20Процентов);
						
						ОбластиДляКорректировки.КонецЛистаБезПодписи20Процентов.КонецСтраницы = Истина;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЦикла; 	
					
					Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
					ЛеваяКолонка = Область20Процентов.Лево;
					ПраваяКолонка = Область20Процентов.Право;
					ОбластьКУдалению = ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка);
					ТабличныйДокумент.УдалитьОбласть(ОбластьКУдалению,ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедуры печати


Процедура УдалитьКолонки20ПроцентовОсновнойРаздел(ТабличныйДокумент)
	
	Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
	ЛеваяКолонка = Область20Процентов.Лево;
	ПраваяКолонка = Область20Процентов.Право;
	ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
	ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
	
КонецПроцедуры // УдалитьКолонки20ПроцентовОсновнойРаздел()

Процедура ВывестиПодвал(ТабличныйДокумент, Макет)
	
	СписокПоказателей = Новый Массив;
	СписокПоказателей.Добавить("ФИОРук");
	СписокПоказателей.Добавить("ФИО");
	
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), СписокПоказателей);
	СведенияОЮрФизЛице  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ТекущаяДата());
	СведенияОбОрганизации.Вставить("Свидетельство", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,"));
		
	Секция = Макет.ПолучитьОбласть("Подвал");
	Секция.Параметры.ИмяРук = СведенияОбОрганизации.ФИОРук;
	Секция.Параметры.ИмяОрг = ?(РегламентированнаяОтчетность.ЭтоПБОЮЛ(Организация), СведенияОбОрганизации.ФИО, "");
	Секция.Параметры.Свидетельство = СведенияОбОрганизации.Свидетельство;
	
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры


#КонецЕсли 

                                       