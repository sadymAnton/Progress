
//Возвращает значение пользовательской настройки
//Параметры:
//ИмяПараметра - имя параметра данных
//
Функция НастройкаПараметра(ИмяПараметра)

	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			Возврат ПараметрПользовательскойНастройки;
		Иначе
			Возврат ПараметрДанных;
		КонецЕсли;
	КонецЕсли;
	Возврат Неопределено;

КонецФункции

Процедура УстановитьОтбор(ИмяОтбора, ЗначениеОтбора, ВидСравнения)
	
	Если ЗначениеЗаполнено(ЗначениеОтбора) Тогда
		Отбор = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяОтбора);
		Отбор.ВидСравнения   = ВидСравнения;
		Отбор.ПравоеЗначение = ЗначениеОтбора;
		Отбор.Использование  = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиУволенныхИПринятых()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &КонецПериода
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &КонецПериода
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &КонецПериода
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ГрафикРаботыЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ГрафикРаботы
	|	КОНЕЦ КАК ГрафикРаботы,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &КонецПериода
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения.КатегорияСтатистическогоУчета
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность.КатегорияСтатистическогоУчета
	|	КОНЕЦ КАК Категория
	|ПОМЕСТИТЬ ДанныеСотрудников
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонецПериода, ) КАК РаботникиОрганизацийСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизаций.Период КАК Период,
	|	РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизаций.ГрафикРаботы КАК ГрафикРаботы,
	|	РаботникиОрганизаций.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|	РаботникиОрганизаций.Должность,
	|	РаботникиОрганизаций.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТКадрДанные
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Период > &НачалоПериода
	|	И РаботникиОрганизаций.Период <= &КонецПериода
	|	И РаботникиОрганизаций.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РаботникиОрганизаций.ПериодЗавершения,
	|	РаботникиОрганизаций.Сотрудник,
	|	РаботникиОрганизаций.ГрафикРаботыЗавершения,
	|	РаботникиОрганизаций.ПричинаИзмененияСостоянияЗавершения,
	|	РаботникиОрганизаций.Сотрудник.Физлицо,
	|	РаботникиОрганизаций.ДолжностьЗавершения,
	|	РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПериодыПерекрытия
	|		ПО РаботникиОрганизаций.Период < ПериодыПерекрытия.Период
	|			И РаботникиОрганизаций.ПериодЗавершения >= ПериодыПерекрытия.Период
	|ГДЕ
	|	РаботникиОрганизаций.ПериодЗавершения > &НачалоПериода
	|	И РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|	И РаботникиОрганизаций.Организация = &Организация
	|	И ПериодыПерекрытия.Сотрудник ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТКадрДанные.Период КАК ДатаУвольнения,
	|	МИНИМУМ(ВТКадрДанные1.Период) КАК ДатаПриема,
	|	ВТКадрДанные1.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТКадрДанные КАК ВТКадрДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадрДанные КАК ВТКадрДанные1
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеСотрудников КАК ДанныеСотрудников
	|			ПО ДанныеСотрудников.Сотрудник = ВТКадрДанные1.Сотрудник
	|		ПО ВТКадрДанные.Период <= ВТКадрДанные1.Период
	|			И ВТКадрДанные.Физлицо = ВТКадрДанные1.Физлицо
	|			И НЕ ВТКадрДанные.Сотрудник = ВТКадрДанные1.Сотрудник
	|ГДЕ
	|	ВТКадрДанные.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	" + ?(ЗначениеЗаполнено(Подразделение), " И ДанныеСотрудников.ПодразделениеОрганизации В ИЕРАРХИИ(&Подразделение)", "") + "
	|	" + ?(ЗначениеЗаполнено(Сотрудник), " И ДанныеСотрудников.Сотрудник = &Сотрудник", "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТКадрДанные.Период,
	|	ВТКадрДанные1.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ВТКадрДанные1.Сотрудник.Наименование";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Сотрудник",     Сотрудник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	#Если Клиент Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
	#КонецЕсли
	
	Пока Выборка.Следующий() Цикл
		
		СрокаСообщенияОбОшибке = "Сотрудник " + Выборка.Сотрудник + " был уволен " + Формат(Выборка.ДатаУвольнения, "ДФ=dd.MM.yyyy") + " и снова принят на работу " + Формат(Выборка.ДатаПриема, "ДФ=dd.MM.yyyy") + ".";
		
		#Если Клиент Тогда
			ОбработкаКомментариев.ДобавитьСообщение(СрокаСообщенияОбОшибке, Перечисления.ВидыСообщений.Информация); 
			Отказ = Истина;
		#Иначе
			ОбщегоНазначения.СообщитьОбОшибке(СрокаСообщенияОбОшибке, Отказ, "", СтатусСообщения.Информация);
		#КонецЕсли
	КонецЦикла;
	
	Если Отказ Тогда
		#Если Клиент Тогда
			ОбработкаКомментариев.ПоказатьСообщения();
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВедомостьУчетаСверхнормативныхЧасов";
	
	МассивЗаголовковРесурсов = Новый Массив;
	
	Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[0].Настройки;
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	НастройкиОтчета = КомпоновщикНастроек.Настройки;
	
	// Параметры
	Параметр = НастройкаПараметра("НачалоПериода");
	Параметр.Использование = Истина;
	Параметр.Значение = НачалоПериода;
	Параметр = НастройкаПараметра("КонецПериода");
	Параметр.Использование = Истина;
	Параметр.Значение = КонецДня(КонецПериода);
	Параметр = НастройкаПараметра("Организация");
	Параметр.Использование = Истина;
	Параметр.Значение = Организация;
	Параметр = НастройкаПараметра("ОсновнойГрафик");
	Параметр.Использование = Истина;
	Параметр.Значение = ОсновнойГрафик;
	Параметр = НастройкаПараметра("ВидыРабочегоВремени");
	Параметр.Использование = Истина;
	Параметр.Значение = ВидыВремени;
	
	// Отбор
	КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
    УстановитьОтбор("ПодразделениеОрганизации", Подразделение, ВидСравненияКомпоновкиДанных.ВИерархии);
	УстановитьОтбор("Сотрудник",                Сотрудник,     ВидСравненияКомпоновкиДанных.Равно);
	
	Для Каждого ЭлементВыбора Из НастройкиОтчета.Выбор.Элементы Цикл

		Если Не ТипЗнч(ЭлементВыбора) = Тип("ВыбранноеПолеКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;

		Если СхемаКомпоновкиданных.ПоляИтога.Найти(ЭлементВыбора.Поле) <> Неопределено Тогда
			Если Не ПустаяСтрока(ЭлементВыбора.Заголовок) Тогда
				МассивЗаголовковРесурсов.Добавить(ЭлементВыбора.Заголовок);
			Иначе
				ПолеНабораДанных = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Поля.найти(ЭлементВыбора.Поле);
				Если ПолеНабораДанных <> Неопределено Тогда
					МассивЗаголовковРесурсов.Добавить(ПолеНабораДанных.Заголовок);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	Для Каждого ТекМакет Из МакетКомпоновки.Макеты Цикл

		Если ТипЗнч(ТекМакет.Макет) <> Тип("МакетОбластиКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;

		Для Каждого СтрокаТаблицыКомпоновки Из ТекМакет.Макет Цикл
			Для Каждого ЯчейкаТаблицыОбластиКомпоновки Из СтрокаТаблицыКомпоновки.Ячейки Цикл
				Для Каждого Элемент Из ЯчейкаТаблицыОбластиКомпоновки.Элементы Цикл
					Если МассивЗаголовковРесурсов.Найти(Элемент.Значение) <> Неопределено Тогда

						Параметр = ЯчейкаТаблицыОбластиКомпоновки.Оформление.Элементы.Найти(Новый ПараметрКомпоновкиДанных("ГоризонтальноеПоложение"));
						Параметр.Значение = ГоризонтальноеПоложение.Центр;
						Параметр.Использование = Истина;

					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;

	КонецЦикла;

	//Создадим и инициализируем процессор компоновки
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	//Создадим и инициализируем процессор вывода результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	//Обозначим начало вывода
	ПроцессорВывода.НачатьВывод();
	ТаблицаЗафиксирована = Ложь;

	ДокументРезультат.ФиксацияСверху = 0;
	//Основной цикл вывода отчета
	Пока Истина Цикл
		//Получим следующий элемент результата компоновки
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();

		Если ЭлементРезультата = Неопределено Тогда
			//Следующий элемент не получен - заканчиваем цикл вывода
			Прервать;
		Иначе
			// Зафиксируем шапку
			Если  Не ТаблицаЗафиксирована 
				  И ЭлементРезультата.ЗначенияПараметров.Количество() > 0 
				  И ТипЗнч(КомпоновщикНастроек.Настройки.Структура[0]) <> Тип("ДиаграммаКомпоновкиДанных") Тогда

				ТаблицаЗафиксирована = Истина;
				ДокументРезультат.ФиксацияСверху = ДокументРезультат.ВысотаТаблицы;

			КонецЕсли;
			//Элемент получен - выведем его при помощи процессора вывода
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
		КонецЕсли;
	КонецЦикла;

	ПроцессорВывода.ЗакончитьВывод();
	
	ВывестиУволенныхИПринятых();
		
КонецПроцедуры
