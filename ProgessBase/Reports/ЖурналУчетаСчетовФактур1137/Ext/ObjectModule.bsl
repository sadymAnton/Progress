
Перем СведенияОбОрганизации;

#Если Клиент Тогда
Процедура ОбновитьОтчет(ТабличныйДокумент) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не указана организация!");
		Возврат;
	КонецЕсли;
	
	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(Период);
	Если ВерсияПостановленияНДС1137 = 3 Тогда
		Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур735");
	Иначе
		Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур1137");
	КонецЕсли; 
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналУчетаСчетовФактур";

	СведенияОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, КонецКвартала(Период));
	НаименованиеОрганизацииДляПечатныхФорм = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОрганизации, "ПолноеНаименование,");
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация",	Организация);
	СтруктураПараметров.Вставить("Период",		Период);
	СтруктураПараметров.Вставить("НаименованиеОрганизацииДляПечатныхФорм",	НаименованиеОрганизацииДляПечатныхФорм);
	
	СтруктураПараметров.Вставить("СформироватьОтчетПоСтандартнойФорме",	СформироватьОтчетПоСтандартнойФорме);
	СтруктураПараметров.Вставить("ГруппироватьПоКонтрагентам",			ГруппироватьПоКонтрагентам);
	СтруктураПараметров.Вставить("ОтбиратьПоКонтрагенту",				ОтбиратьПоКонтрагенту);
	СтруктураПараметров.Вставить("КонтрагентДляОтбора",					КонтрагентДляОтбора);
	
	СтруктураЗаписейЖурнала = УчетНДС.ПолучитьЗаписиЖурналаСчетовФактур(СтруктураПараметров);
	
	Отступ = Макет.ПолучитьОбласть("Отступ");
	
	// ШАПКА
	
	Если СформироватьОтчетПоСтандартнойФорме Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	СведенияОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, КонецКвартала(Период));
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Организация = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОрганизации, "ПолноеНаименование");
	Шапка.Параметры.ИННКПП = "" + Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	Шапка.Параметры.Квартал = Формат(Период, "ДФ = к");
	Шапка.Параметры.Год = Формат(Период, "ДФ = гггг");

	ТабличныйДокумент.Вывести(Шапка);
	
	ТабличныйДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 1
	
	Часть1Заголовок = Макет.ПолучитьОбласть("Часть1Заголовок");
	ТабличныйДокумент.Вывести(Часть1Заголовок);
	
	Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
	
	СтрокиЧасть1 = СтруктураЗаписейЖурнала.ВыставленныеСчетаФактуры;
	
	НомерПП = 1;
	
	Если НЕ СформироватьОтчетПоСтандартнойФорме И ГруппироватьПоКонтрагентам Тогда
		//Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
				ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);
				ГруппировкаПоСчетамФактурам = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ГруппировкаПоСчетамФактурам.Следующий() Цикл
					
					СчетаФактурыЗаписи = ГруппировкаПоСчетамФактурам.Выбрать();
					КоличествоСгруппированных = СчетаФактурыЗаписи.Количество();
					
					НомерСтрокиВГруппировке = 1;
					//Итоговые данные по счету-фактуре
					СуммаПоСчетуФактуреИтоговая 				 = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреИтоговая;
					СуммаНДСИтоговая 							 = ГруппировкаПоСчетамФактурам.СуммаНДСИтоговая;
					СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая;
					СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая;
					СуммаНДСРазницаУменьшениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУменьшениеИтоговая;
					СуммаНДСРазницаУвеличениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУвеличениеИтоговая;
					
					Пока СчетаФактурыЗаписи.Следующий() Цикл
						
						ВыводитьОстатокПоСчетуФактуре = Ложь;
						
						Если ВерсияПостановленияНДС1137 = 3 Тогда
							//пересчитаем остаток по счету-фактуре
							СуммаПоСчетуФактуреИтоговая 				 = СуммаПоСчетуФактуреИтоговая - СчетаФактурыЗаписи.СуммаДокумента;
							СуммаНДСИтоговая 							 = СуммаНДСИтоговая - СчетаФактурыЗаписи.СуммаНДС;
							СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = СуммаПоСчетуФактуреРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУменьшение;
							СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = СуммаПоСчетуФактуреРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУвеличение;
							СуммаНДСРазницаУменьшениеИтоговая 			 = СуммаНДСРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУменьшение;
							СуммаНДСРазницаУвеличениеИтоговая 			 = СуммаНДСРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУвеличение;
						КонецЕсли;

						Если КоличествоСгруппированных > 1 
							И ВерсияПостановленияНДС1137 = 3 Тогда
							
							//переопределим макет
							Если НомерСтрокиВГруппировке = 1 Тогда 
								Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
								Часть1Строка.Параметры.Ном = НомерПП;
								НомерПП = НомерПП + 1;
							Иначе
								Если НомерСтрокиВГруппировке < КоличествоСгруппированных Тогда
									Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");		
								Иначе
									//последняя строка
									Если СуммаПоСчетуФактуреИтоговая <> 0
										ИЛИ СуммаНДСИтоговая <> 0
										ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
										ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
										ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
										ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0 Тогда
										ВыводитьОстатокПоСчетуФактуре = Истина;
										Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");
									Иначе
										Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
							
						Иначе
							
							Если ВерсияПостановленияНДС1137 = 3
								И (СуммаПоСчетуФактуреИтоговая <> 0
								ИЛИ СуммаНДСИтоговая <> 0
								ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
								ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
								ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
								ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
								//Если пока только один СФ от комитента			
								ВыводитьОстатокПоСчетуФактуре = Истина;
								Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
							Иначе
								Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
							КонецЕсли;
							
							Часть1Строка.Параметры.Ном = НомерПП;
							НомерПП = НомерПП + 1;

						КонецЕсли;
						
						УчетНДСКлиент.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(Часть1Строка.Параметры, СчетаФактурыЗаписи, СтруктураПараметров);
						ТабличныйДокумент.Вывести(Часть1Строка, 2);
						
						Если ВыводитьОстатокПоСчетуФактуре Тогда 
							СтрокаОстаток = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
							СтрокаОстаток.Параметры.Валюта = СокрП(СчетаФактурыЗаписи.НаименованиеВалюты) + ", " + СчетаФактурыЗаписи.КодВалюты;	
							СтрокаОстаток.Параметры.СуммаДокумента = ?(СуммаПоСчетуФактуреИтоговая = 0, "", СуммаПоСчетуФактуреИтоговая);
							СтрокаОстаток.Параметры.СуммаНДС = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
							СтрокаОстаток.Параметры.СуммаДокументаРазницаУменьшение = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
							СтрокаОстаток.Параметры.СуммаДокументаРазницаУвеличение = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
							СтрокаОстаток.Параметры.СуммаНДСРазницаУменьшение = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
							СтрокаОстаток.Параметры.СуммаНДСРазницаУвеличение = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
							ТабличныйДокумент.Вывести(СтрокаОстаток, 2);
						КонецЕсли;
						
						НомерСтрокиВГруппировке = НомерСтрокиВГруппировке + 1;
						
					КонецЦикла;
					
				КонецЦикла;
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
	Иначе
		
ГруппировкаПоСчетамФактурам = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);






		
		Пока ГруппировкаПоСчетамФактурам.Следующий() Цикл
			
			СчетаФактурыЗаписи = ГруппировкаПоСчетамФактурам.Выбрать();
			КоличествоСгруппированных = СчетаФактурыЗаписи.Количество();
			
			НомерСтрокиВГруппировке = 1;
			//Итоговые данные по счету-фактуре
			СуммаПоСчетуФактуреИтоговая 				 = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреИтоговая;
			СуммаНДСИтоговая 							 = ГруппировкаПоСчетамФактурам.СуммаНДСИтоговая;
			СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая;
			СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая;
			СуммаНДСРазницаУменьшениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУменьшениеИтоговая;
			СуммаНДСРазницаУвеличениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУвеличениеИтоговая;
			
			Пока СчетаФактурыЗаписи.Следующий() Цикл
				
				ВыводитьОстатокПоСчетуФактуре = Ложь;
				
				Если ВерсияПостановленияНДС1137 = 3 Тогда
					//пересчитаем остаток по счету-фактуре
					СуммаПоСчетуФактуреИтоговая 				 = СуммаПоСчетуФактуреИтоговая - СчетаФактурыЗаписи.СуммаДокумента;
					СуммаНДСИтоговая 							 = СуммаНДСИтоговая - СчетаФактурыЗаписи.СуммаНДС;
					СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = СуммаПоСчетуФактуреРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУменьшение;
					СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = СуммаПоСчетуФактуреРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУвеличение;
					СуммаНДСРазницаУменьшениеИтоговая 			 = СуммаНДСРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУменьшение;
					СуммаНДСРазницаУвеличениеИтоговая 			 = СуммаНДСРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУвеличение;
				КонецЕсли;
					
				Если КоличествоСгруппированных > 1 
					И ВерсияПостановленияНДС1137 = 3 Тогда
					
					//переопределим макет
					Если НомерСтрокиВГруппировке = 1 Тогда 
						Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
						Часть1Строка.Параметры.Ном = НомерПП;
						НомерПП = НомерПП + 1;
					Иначе
						Если НомерСтрокиВГруппировке < КоличествоСгруппированных Тогда
							Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");		
						Иначе
							//последняя строка
							Если СуммаПоСчетуФактуреИтоговая <> 0
								ИЛИ СуммаНДСИтоговая <> 0
								ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
								ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
								ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
								ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0 Тогда
								ВыводитьОстатокПоСчетуФактуре = Истина;
								Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");
							Иначе
								Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				Иначе
					
					Если ВерсияПостановленияНДС1137 = 3
						И (СуммаПоСчетуФактуреИтоговая <> 0
						ИЛИ СуммаНДСИтоговая <> 0
						ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
						ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
						ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
						ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
						//Если пока только один СФ от комитента			
						ВыводитьОстатокПоСчетуФактуре = Истина;
						Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
					Иначе
						Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
					КонецЕсли;
					
					Часть1Строка.Параметры.Ном = НомерПП;
					НомерПП = НомерПП + 1;
				КонецЕсли;
				
				УчетНДСКлиент.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(Часть1Строка.Параметры, СчетаФактурыЗаписи, СтруктураПараметров);
				ТабличныйДокумент.Вывести(Часть1Строка);
				
				Если ВыводитьОстатокПоСчетуФактуре Тогда 
					СтрокаОстаток = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
					СтрокаОстаток.Параметры.Валюта = СокрП(СчетаФактурыЗаписи.НаименованиеВалюты) + ", " + СчетаФактурыЗаписи.КодВалюты;	
					СтрокаОстаток.Параметры.СуммаДокумента = ?(СуммаПоСчетуФактуреИтоговая = 0, "", СуммаПоСчетуФактуреИтоговая);
					СтрокаОстаток.Параметры.СуммаНДС = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
					СтрокаОстаток.Параметры.СуммаДокументаРазницаУменьшение = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
					СтрокаОстаток.Параметры.СуммаДокументаРазницаУвеличение = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
					СтрокаОстаток.Параметры.СуммаНДСРазницаУменьшение = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
					СтрокаОстаток.Параметры.СуммаНДСРазницаУвеличение = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
					ТабличныйДокумент.Вывести(СтрокаОстаток);
				КонецЕсли;
				
				НомерСтрокиВГруппировке = НомерСтрокиВГруппировке + 1;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
		
	ТабличныйДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 2
	
	Часть2Заголовок = Макет.ПолучитьОбласть("Часть2Заголовок");
	ТабличныйДокумент.Вывести(Часть2Заголовок);
	
	Часть2Строка = Макет.ПолучитьОбласть("Часть2Строка");
	
	СтрокиЧасть2 = СтруктураЗаписейЖурнала.ПолученныеСчетаФактуры;
	
	НомерПП = 1;
	
	Если НЕ СформироватьОтчетПоСтандартнойФорме И ГруппироватьПоКонтрагентам Тогда
		//Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
				ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);
				ГруппировкаПоСчетуФактуре = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ГруппировкаПоСчетуФактуре.Следующий() Цикл
					УчетНДСКлиент.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(Часть2Строка.Параметры, ГруппировкаПоСчетуФактуре, СтруктураПараметров);
					ТабличныйДокумент.Вывести(Часть2Строка, 2);
					НомерПП = НомерПП + 1;
				КонецЦикла; 
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
	Иначе
		
		Выборка = СтрокиЧасть2.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			УчетНДСКлиент.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(Часть2Строка.Параметры, Выборка, СтруктураПараметров);
			Часть2Строка.Параметры.Ном = НомерПП;
			ТабличныйДокумент.Вывести(Часть2Строка);
			НомерПП = НомерПП + 1;
		
		КонецЦикла;
		
	КонецЕсли;
		
	ТабличныйДокумент.Вывести(Отступ);
	
	// ПОДВАЛ
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	СписокПоказателей = Новый Массив;
	СписокПоказателей.Добавить("ФИОРук");
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), СписокПоказателей);
	СведенияОЮрФизЛице    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ТекущаяДата());
	СведенияОбОрганизации.Вставить("Свидетельство", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,"));
		
	ЭтоПБОЮЛ = РегламентированнаяОтчетность.ЭтоПБОЮЛ(Организация);
	Подвал.Параметры.ИмяРук = ?(НЕ ЭтоПБОЮЛ, СведенияОбОрганизации.ФИОРук, "");
	Подвал.Параметры.ИмяОрг = ?(ЭтоПБОЮЛ, СведенияОбОрганизации.ФИОРук, "");
	Подвал.Параметры.Свидетельство = СведенияОбОрганизации.Свидетельство;

	ТабличныйДокумент.Вывести(Подвал);
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
	
КонецПроцедуры

#КонецЕсли