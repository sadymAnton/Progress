#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	КонецНалоговогоПериода = ПараметрыОтчета.НалоговыйПериод;
	
	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(КонецНалоговогоПериода);
	Если ВерсияПостановленияНДС1137 = 3 Тогда
		Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур735");
	Иначе
		Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур1137");
	КонецЕсли; 

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналУчетаСчетовФактур";

	СведенияОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ПараметрыОтчета.Организация, КонецНалоговогоПериода);
	НаименованиеОрганизацииДляПечатныхФорм = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОрганизации, "ПолноеНаименование,");
	
	СписокОрганизаций = Новый СписокЗначений;
	
	Если ПараметрыОтчета.ЗаполнениеДекларации Тогда
		СписокОрганизаций = ПараметрыОтчета.СписокОрганизаций;
	ИначеЕсли ПараметрыОтчета.ВключатьОбособленныеПодразделения Тогда
		СписокОрганизаций = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(
			ПараметрыОтчета.Организация);
		СписокОрганизаций.Добавить(ПараметрыОтчета.Организация);
	Иначе
		СписокОрганизаций.Добавить(ПараметрыОтчета.Организация);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("Организация", ПараметрыОтчета.Организация);
	СтруктураПараметров.Вставить("НалоговыйПериод", ПараметрыОтчета.НалоговыйПериод);
	СтруктураПараметров.Вставить("НаименованиеОрганизацииДляПечатныхФорм", НаименованиеОрганизацииДляПечатныхФорм);
	СтруктураПараметров.Вставить("СписокОрганизаций", СписокОрганизаций);
	
	СтруктураПараметров.Вставить("СформироватьОтчетПоСтандартнойФорме", ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме);
	СтруктураПараметров.Вставить("ГруппироватьПоКонтрагентам",          ПараметрыОтчета.ГруппироватьПоКонтрагентам);
	СтруктураПараметров.Вставить("ОтбиратьПоКонтрагенту",               ПараметрыОтчета.ОтбиратьПоКонтрагенту);
	СтруктураПараметров.Вставить("КонтрагентДляОтбора",                 ПараметрыОтчета.КонтрагентДляОтбора);
	СтруктураПараметров.Вставить("ЗаполнениеДекларации",                ПараметрыОтчета.ЗаполнениеДекларации);
	
	ИнициализироватьТаблицыДляДекларацииПоНДС(СтруктураПараметров);
	
	СтруктураЗаписейЖурнала = УчетНДС.ПолучитьЗаписиЖурналаСчетовФактур(СтруктураПараметров);
	
	// ШАПКА
	
	Отступ = Макет.ПолучитьОбласть("Отступ");
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		Секция = Макет.ПолучитьОбласть("ШапкаРаздел10");
		ТабличныйДокумент.Вывести(Секция);
		Секция = Макет.ПолучитьОбласть("ШапкаТаблицыРаздел10");
		ТабличныйДокумент.Вывести(Секция);
		
	Иначе
		
		Если ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме Тогда
			Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
			ТабличныйДокумент.Вывести(Секция);
		КонецЕсли;
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		
		Шапка.Параметры.Организация = НаименованиеОрганизацииДляПечатныхФорм;
		Шапка.Параметры.ИННКПП  = "" + СведенияОрганизации.ИНН 
			+ ?(НЕ ЗначениеЗаполнено(СведенияОрганизации.КПП), "", ("/" + СведенияОрганизации.КПП));
		
		Шапка.Параметры.Квартал = Формат(ПараметрыОтчета.НалоговыйПериод, "ДФ = к");
		Шапка.Параметры.Год     = Формат(ПараметрыОтчета.НалоговыйПериод, "ДФ = гггг");	
			
		ТабличныйДокумент.Вывести(Шапка);
		ТабличныйДокумент.Вывести(Отступ);
		
		Часть1Заголовок = Макет.ПолучитьОбласть("Часть1Заголовок");
		ТабличныйДокумент.Вывести(Часть1Заголовок);
		
	КонецЕсли; 

	Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
	
	СтрокиЧасть1 = СтруктураЗаписейЖурнала.ВыставленныеСчетаФактуры;
	
	НомерПП = 1;
	
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		
		// Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				
				СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
				ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);
				
				ГруппировкаПоСчетамФактурам = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ГруппировкаПоСчетамФактурам.Следующий() Цикл
												
					СчетаФактурыЗаписи = ГруппировкаПоСчетамФактурам.Выбрать();
					КоличествоСгруппированных = СчетаФактурыЗаписи.Количество();
					
					НомерСтрокиВГруппировке = 1;
					// Итоговые данные по счету-фактуре
					СуммаПоСчетуФактуреИтоговая 				 = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреИтоговая;
					СуммаНДСИтоговая 							 = ГруппировкаПоСчетамФактурам.СуммаНДСИтоговая;
					СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая;
					СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая;
					СуммаНДСРазницаУменьшениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУменьшениеИтоговая;
					СуммаНДСРазницаУвеличениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУвеличениеИтоговая;
					
					Пока СчетаФактурыЗаписи.Следующий() Цикл
						
							ВыводитьОстатокПоСчетуФактуре = Ложь;
							
							Если ВерсияПостановленияНДС1137 = 3 Тогда
								// Пересчитаем остаток по счету-фактуре
								СуммаПоСчетуФактуреИтоговая 				 = СуммаПоСчетуФактуреИтоговая - СчетаФактурыЗаписи.СуммаДокумента;
								СуммаНДСИтоговая 							 = СуммаНДСИтоговая - СчетаФактурыЗаписи.СуммаНДС;
								СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = СуммаПоСчетуФактуреРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУменьшение;
								СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = СуммаПоСчетуФактуреРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУвеличение;
								СуммаНДСРазницаУменьшениеИтоговая 			 = СуммаНДСРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУменьшение;
								СуммаНДСРазницаУвеличениеИтоговая 			 = СуммаНДСРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУвеличение;
							КонецЕсли;
							
							Если КоличествоСгруппированных > 1 
								И ВерсияПостановленияНДС1137 = 3
								И НЕ СчетаФактурыЗаписи.СводныйКорректировочный Тогда
								
								// Переопределим макет
								Если НомерСтрокиВГруппировке = 1 Тогда 
									Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
									Часть1Строка.Параметры.Ном = НомерПП;
									НомерПП = НомерПП + 1;
								Иначе
									Если НомерСтрокиВГруппировке < КоличествоСгруппированных Тогда
										Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");		
									Иначе
										// Последняя строка
										Если НЕ СчетаФактурыЗаписи.СводныйКомиссионный 
											И (СуммаПоСчетуФактуреИтоговая <> 0
											ИЛИ СуммаНДСИтоговая <> 0
											ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
											ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
											ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
											ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
											ВыводитьОстатокПоСчетуФактуре = Истина;
											Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");
										Иначе
											Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
								
							Иначе
								
								Если ВерсияПостановленияНДС1137 = 3
									И НЕ СчетаФактурыЗаписи.СводныйКорректировочный
									И НЕ СчетаФактурыЗаписи.СводныйКомиссионный
									И (СуммаПоСчетуФактуреИтоговая <> 0
									ИЛИ СуммаНДСИтоговая <> 0
									ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
									ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
									ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
									ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
									// Если пока только один СФ от комитента			
									ВыводитьОстатокПоСчетуФактуре = Истина;
									Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
								Иначе
									Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
								КонецЕсли;
								
								Часть1Строка.Параметры.Ном = НомерПП;
								НомерПП = НомерПП + 1;
								
							КонецЕсли;
							
							УчетНДС.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(
								Часть1Строка.Параметры, СчетаФактурыЗаписи, СтруктураПараметров, , НомерПП);
							ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть1Строка, 2);
							
							Если ВыводитьОстатокПоСчетуФактуре Тогда 
								СтрокаОстаток = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
								СтрокаОстаток.Параметры.Валюта = СокрП(СчетаФактурыЗаписи.НаименованиеВалюты) + ", " + СчетаФактурыЗаписи.КодВалюты;	
								СтрокаОстаток.Параметры.СуммаДокумента = ?(СуммаПоСчетуФактуреИтоговая = 0, "", СуммаПоСчетуФактуреИтоговая);
								СтрокаОстаток.Параметры.СуммаНДС = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
								СтрокаОстаток.Параметры.СуммаДокументаРазницаУменьшение = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
								СтрокаОстаток.Параметры.СуммаДокументаРазницаУвеличение = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
								СтрокаОстаток.Параметры.СуммаНДСРазницаУменьшение = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
								СтрокаОстаток.Параметры.СуммаНДСРазницаУвеличение = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
								ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтрокаОстаток, 2);
							КонецЕсли;
							
							НомерСтрокиВГруппировке = НомерСтрокиВГруппировке + 1;
							
						КонецЦикла;
				КонецЦикла;
				
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
		
	Иначе
		
		ГруппировкаПоСчетамФактурам = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ГруппировкаПоСчетамФактурам.Следующий() Цикл
						
			СчетаФактурыЗаписи = ГруппировкаПоСчетамФактурам.Выбрать();
			КоличествоСгруппированных = СчетаФактурыЗаписи.Количество();
			
			НомерСтрокиВГруппировке = 1;
			// Итоговые данные по счету-фактуре
			СуммаПоСчетуФактуреИтоговая 				 = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреИтоговая;
			СуммаНДСИтоговая 							 = ГруппировкаПоСчетамФактурам.СуммаНДСИтоговая;
			СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая;
			СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая;
			СуммаНДСРазницаУменьшениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУменьшениеИтоговая;
			СуммаНДСРазницаУвеличениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУвеличениеИтоговая;
			
			Пока СчетаФактурыЗаписи.Следующий() Цикл
				
					
					ВыводитьОстатокПоСчетуФактуре = Ложь;
					
					Если ВерсияПостановленияНДС1137 = 3 Тогда
						// Пересчитаем остаток по счету-фактуре
						СуммаПоСчетуФактуреИтоговая 				 = СуммаПоСчетуФактуреИтоговая - СчетаФактурыЗаписи.СуммаДокумента;
						СуммаНДСИтоговая 							 = СуммаНДСИтоговая - СчетаФактурыЗаписи.СуммаНДС;
						СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = СуммаПоСчетуФактуреРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУменьшение;
						СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = СуммаПоСчетуФактуреРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУвеличение;
						СуммаНДСРазницаУменьшениеИтоговая 			 = СуммаНДСРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУменьшение;
						СуммаНДСРазницаУвеличениеИтоговая 			 = СуммаНДСРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУвеличение;
					КонецЕсли;
					
					Если КоличествоСгруппированных > 1 
						И ВерсияПостановленияНДС1137 = 3
						И НЕ СчетаФактурыЗаписи.СводныйКорректировочный Тогда
						
						// Переопределим макет
						Если НомерСтрокиВГруппировке = 1 Тогда 
							Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
							Часть1Строка.Параметры.Ном = НомерПП;
							Часть1Строка.Область(1, , Часть1Строка.ВысотаТаблицы).Имя = "Строка_" + НомерПП;
							НомерПП = НомерПП + 1;
						Иначе
							Если НомерСтрокиВГруппировке < КоличествоСгруппированных Тогда
								Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");
							Иначе
								// Последняя строка
								Если НЕ СчетаФактурыЗаписи.СводныйКомиссионный
									И (СуммаПоСчетуФактуреИтоговая <> 0
									ИЛИ СуммаНДСИтоговая <> 0
									ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
									ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
									ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
									ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
									ВыводитьОстатокПоСчетуФактуре = Истина;
									Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");
								Иначе
									Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
					Иначе
						
						Если ВерсияПостановленияНДС1137 = 3
							И НЕ СчетаФактурыЗаписи.СводныйКорректировочный
							И НЕ СчетаФактурыЗаписи.СводныйКомиссионный
							И (СуммаПоСчетуФактуреИтоговая <> 0
							ИЛИ СуммаНДСИтоговая <> 0
							ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
							ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
							ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
							ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
							// Если пока только один СФ от комитента
							ВыводитьОстатокПоСчетуФактуре = Истина;
							Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
						Иначе
							Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
						КонецЕсли;
						
						Часть1Строка.Параметры.Ном = НомерПП;
						Часть1Строка.Область(1, , Часть1Строка.ВысотаТаблицы).Имя = "Строка_" + НомерПП;
						НомерПП = НомерПП + 1;
					КонецЕсли;
					
					УчетНДС.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(
						Часть1Строка.Параметры, СчетаФактурыЗаписи, СтруктураПараметров, , НомерПП - 1);
						
					ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть1Строка);
					
					Если ВыводитьОстатокПоСчетуФактуре Тогда 
						
						Если СтруктураПараметров.ЗаполнениеДекларации Тогда

							СтруктураСвПосрДеят = Новый Структура(
								"НомСчФОтПрод,ДатаСчФОтПрод,ОКВ,СтоимТовСчФВс,СумНДССчФ,РазСтКСчФУм,РазСтКСчФУв,РазНДСКСчФУм,РазНДСКСчФУв,СвПрод");
							
							СтруктураСвПосрДеят.ОКВ           = СчетаФактурыЗаписи.КодВалюты;
							
							СтруктураСвПосрДеят.СтоимТовСчФВс = ?(СуммаПоСчетуФактуреИтоговая = 0, "", СуммаПоСчетуФактуреИтоговая);
							СтруктураСвПосрДеят.СумНДССчФ     = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
							
							СтруктураСвПосрДеят.РазСтКСчФУм   = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
							СтруктураСвПосрДеят.РазСтКСчФУв   = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
							СтруктураСвПосрДеят.РазНДСКСчФУм  = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
							СтруктураСвПосрДеят.РазНДСКСчФУв  = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
						
							СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел10[НомерПП - 2];
							МассивСвПосрДеят = СтрокаРаздела.СвПосрДеят;
							МассивСвПосрДеят.Добавить(СтруктураСвПосрДеят);

						КонецЕсли;
						
						СтрокаОстаток = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
						СтрокаОстаток.Параметры.Валюта = СокрП(СчетаФактурыЗаписи.НаименованиеВалюты) + ", " + СчетаФактурыЗаписи.КодВалюты;	
						СтрокаОстаток.Параметры.СуммаДокумента = ?(СуммаПоСчетуФактуреИтоговая = 0, "", СуммаПоСчетуФактуреИтоговая);
						СтрокаОстаток.Параметры.СуммаНДС = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
						СтрокаОстаток.Параметры.СуммаДокументаРазницаУменьшение = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
						СтрокаОстаток.Параметры.СуммаДокументаРазницаУвеличение = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
						СтрокаОстаток.Параметры.СуммаНДСРазницаУменьшение = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
						СтрокаОстаток.Параметры.СуммаНДСРазницаУвеличение = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
						ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтрокаОстаток);
						
					КонецЕсли;
					
					НомерСтрокиВГруппировке = НомерСтрокиВГруппировке + 1;
					
				КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	СтруктураПараметров.ТабличныйДокументРаздел10 = ТабличныйДокумент;

	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		
		Секция = Макет.ПолучитьОбласть("ШапкаРаздел11");
		ТабличныйДокумент.Вывести(Секция);
		Секция = Макет.ПолучитьОбласть("ШапкаТаблицыРаздел11");
		ТабличныйДокумент.Вывести(Секция);

	Иначе
		
		ТабличныйДокумент.Вывести(Отступ);
		
		Часть2Заголовок = Макет.ПолучитьОбласть("Часть2Заголовок");
		ТабличныйДокумент.Вывести(Часть2Заголовок);
		
	КонецЕсли;
	
	Часть2Строка = Макет.ПолучитьОбласть("Часть2Строка");
	
	СтрокиЧасть2 = СтруктураЗаписейЖурнала.ПолученныеСчетаФактуры;
	ДополнительныеСвойства = СтруктураЗаписейЖурнала.ДополнительныеСвойства;
	ДополнительныеСвойства.Индексы.Добавить("СчетФактура");
	
	НомерПП = 1;
	
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		// Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				
				СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
				ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);
				ГруппировкаПоСчетуФактуре = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ГруппировкаПоСчетуФактуре.Следующий() Цикл
					
					УчетНДС.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(
						Часть2Строка.Параметры, ГруппировкаПоСчетуФактуре, СтруктураПараметров, ДополнительныеСвойства, НомерПП);
					ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть2Строка, 2);
		
					НомерПП = НомерПП + 1;
					
				КонецЦикла;
				
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
	Иначе
		
		Выборка = СтрокиЧасть2.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			
			УчетНДС.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(
				Часть2Строка.Параметры, Выборка, СтруктураПараметров, ДополнительныеСвойства, НомерПП);
			Часть2Строка.Параметры.Ном = НомерПП;
			Часть2Строка.Область(1, , Часть2Строка.ВысотаТаблицы).Имя = "Строка_" + НомерПП;
			ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть2Строка);
		
			НомерПП = НомерПП + 1;
		
		КонецЦикла;
		
	КонецЕсли;
	
	СтруктураПараметров.ТабличныйДокументРаздел11 = ТабличныйДокумент;
	
	ТабличныйДокумент.Вывести(Отступ);
	
	Если ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме
		И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда

		// ПОДВАЛ
		
		СписокПоказателей = Новый Массив;
		СписокПоказателей.Добавить("ФИОРук");
		СписокПоказателей.Добавить("ФИО");
		
		СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(
			СтруктураПараметров.Организация, КонецНалоговогоПериода, СписокПоказателей);
		СведенияОЮрФизЛице  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
			СтруктураПараметров.Организация, КонецНалоговогоПериода);
		
		Если РегламентированнаяОтчетность.ЭтоПБОЮЛ(СтруктураПараметров.Организация) Тогда
			ИмяРук = "";
			ИмяОрг = СведенияОбОрганизации.ФИО;
			Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,");
		Иначе
			ИмяРук = СведенияОбОрганизации.ФИОРук;
			ИмяОрг = "";
			Свидетельство = "";
		КонецЕсли;
		
		Подвал = Макет.ПолучитьОбласть("Подвал");
		
		Подвал.Параметры.ИмяРук = ИмяРук;
		Подвал.Параметры.ИмяОрг = ИмяОрг;
		Подвал.Параметры.Свидетельство = Свидетельство;

		ТабличныйДокумент.Вывести(Подвал);
		
	КонецЕсли;
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
	
	Результат = Новый Структура(
		"СформированныйЖурнал,ТаблицаРаздел10,ТаблицаРаздел11,ТабличныйДокументРаздел10,ТабличныйДокументРаздел11", 
		ТабличныйДокумент, СтруктураПараметров.ТаблицаРаздел10, СтруктураПараметров.ТаблицаРаздел11, 
		СтруктураПараметров.ТабличныйДокументРаздел10, СтруктураПараметров.ТабличныйДокументРаздел11);
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

Процедура ИнициализироватьТаблицыДляДекларацииПоНДС(СтруктураПараметров)
	
	Раздел10 = Новый ТаблицаЗначений; // Часть 1: выставленные счета-фактуры
		
	Раздел10.Колонки.Добавить("НомерПор", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0)));
	Раздел10.Колонки.Добавить("ДатаВыст", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел10.Колонки.Добавить("НомСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	Раздел10.Колонки.Добавить("ДатаСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
	Раздел10.Колонки.Добавить("НомИспрСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
	Раздел10.Колонки.Добавить("ДатаИспрСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел10.Колонки.Добавить("НомКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	Раздел10.Колонки.Добавить("ДатаКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел10.Колонки.Добавить("НомИспрКСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
	Раздел10.Колонки.Добавить("ДатаИспрКСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел10.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	
	Раздел10.Колонки.Добавить("СвПокуп");

	Раздел10.Колонки.Добавить("СвПосрДеят"); 

	Раздел11 = Новый ТаблицаЗначений; // Часть 2: полученные счета-фактуры
	
	Раздел11.Колонки.Добавить("НомерПор", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0)));
	Раздел11.Колонки.Добавить("ДатаПолуч", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел11.Колонки.Добавить("НомСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	Раздел11.Колонки.Добавить("ДатаСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел11.Колонки.Добавить("НомИспрСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
	Раздел11.Колонки.Добавить("ДатаИспрСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел11.Колонки.Добавить("НомКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	Раздел11.Колонки.Добавить("ДатаКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел11.Колонки.Добавить("НомИспрКСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
	Раздел11.Колонки.Добавить("ДатаИспрКСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел11.Колонки.Добавить("КодВидСд", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1)));
	Раздел11.Колонки.Добавить("ОКВ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	
	Раздел11.Колонки.Добавить("СтоимТовСчФВс", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел11.Колонки.Добавить("СумНДССчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	
	Раздел11.Колонки.Добавить("РазСтКСчФУм", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел11.Колонки.Добавить("РазСтКСчФУв", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел11.Колонки.Добавить("РазНДСКСчФУм", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел11.Колонки.Добавить("РазНДСКСчФУв", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	
	Раздел11.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	Раздел11.Колонки.Добавить("СвПрод");
	Раздел11.Колонки.Добавить("СвКомис");
		
	СтруктураПараметров.Вставить("ТаблицаРаздел10", Раздел10);
	СтруктураПараметров.Вставить("ТаблицаРаздел11", Раздел11);
	
	СтруктураПараметров.Вставить("ТабличныйДокументРаздел10");
	СтруктураПараметров.Вставить("ТабличныйДокументРаздел11");
	
КонецПроцедуры

#КонецЕсли