
//Возвращает значение пользовательской настройки
//Параметры:
//ИмяПараметра - имя параметра данных
//
Функция НастройкаПараметра(ИмяПараметра)

	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			Возврат ПараметрПользовательскойНастройки;
		Иначе
			Возврат ПараметрДанных;
		КонецЕсли;
	КонецЕсли;
	Возврат Неопределено;

КонецФункции

Функция СформироватьЗапрос()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Сотрудники",    Сотрудники);
	Запрос.УстановитьПараметр("Подразделение", ПодразделениеОрганизации);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &КонецПериода
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &КонецПериода
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТРаботникиОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонецПериода, Организация = &Организация "+?(Сотрудники.Количество()>0, " И Сотрудник В (&Сотрудники)", "")+") КАК РаботникиОрганизацийСрезПоследних
	|" + ?(ЗначениеЗаполнено(ПодразделениеОрганизации), " ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &КонецПериода
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|		КОНЕЦ В ИЕРАРХИИ (&Подразделение) ", "") + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|Сотрудник
	|;
    |
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РабочееВремяРаботниковОрганизацийОбороты.Период,
	|	РабочееВремяРаботниковОрганизацийОбороты.Сотрудник,
	|	РабочееВремяРаботниковОрганизацийОбороты.ВидИспользованияРабочегоВремени,
	|	РабочееВремяРаботниковОрганизацийОбороты.ДнейОборот КАК Дней,
	|	РабочееВремяРаботниковОрганизацийОбороты.ЧасовОборот КАК Часов
	|ПОМЕСТИТЬ ВТТабель
	|ИЗ
	|РегистрНакопления.РабочееВремяРаботниковОрганизаций.Обороты(
	|		&НачалоПериода,
	|		&КонецПериода,
	|		Запись,
	|		Организация = &Организация
	|			И ВидИспользованияРабочегоВремени В (ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы))
	|			И Сотрудник В
	|				(ВЫБРАТЬ
	|					Работники.Сотрудник
	|				ИЗ
	|					ВТРаботникиОрганизации КАК Работники)) КАК РабочееВремяРаботниковОрганизацийОбороты
	|ГДЕ
	|	РабочееВремяРаботниковОрганизацийОбороты.Регистратор ССЫЛКА Документ.ТабельУчетаРабочегоВремениОрганизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Таблица.Сотрудник КАК Сотрудник,
	|	СУММА(Таблица.ОтработаноДней) КАК ОтработаноДней,
	|	СУММА(Таблица.ОтработаноЧасов) КАК ОтработаноЧасов,
	|	СУММА(Таблица.НочныхЧасов) КАК НочныхЧасов,
	|	СУММА(Таблица.ПраздникиДни) КАК ПраздникиДни,
	|	СУММА(Таблица.ПраздникиЧасы) КАК ПраздникиЧасы
	|ПОМЕСТИТЬ ВТОтработаноВремени
	|ИЗ
	|(ВЫБРАТЬ
	|	Табель.Период КАК Период,
	|	Табель.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА Табель.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)
	|			ТОГДА Табель.Дней
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОтработаноДней,
	|	ВЫБОР
	|		КОГДА Табель.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)
	|			ТОГДА Табель.Часов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОтработаноЧасов,
	|	ВЫБОР
	|		КОГДА Табель.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы)
	|			ТОГДА Табель.Часов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НочныхЧасов,
	|	0 КАК ПраздникиДни,
	|	0 КАК ПраздникиЧасы
	|ИЗ
	|	ВТТабель КАК Табель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФактическаяВыработкаРаботниковОрганизацийОбороты.Период,
	|	ФактическаяВыработкаРаботниковОрганизацийОбороты.Сотрудник,
	|	ФактическаяВыработкаРаботниковОрганизацийОбороты.AVT_ОтработаноДнейОборот - ФактическаяВыработкаРаботниковОрганизацийОбороты.AVT_ОтработаноДнейВПраздникиОборот,
	|	ФактическаяВыработкаРаботниковОрганизацийОбороты.AVT_ОтработаноЧасовОборот - ФактическаяВыработкаРаботниковОрганизацийОбороты.AVT_ОтработаноЧасовВПраздникиОборот,
	|	ФактическаяВыработкаРаботниковОрганизацийОбороты.AVT_ОтработаноНочныхЧасовОборот,
	|	ФактическаяВыработкаРаботниковОрганизацийОбороты.AVT_ОтработаноДнейВПраздникиОборот,
	|	ФактическаяВыработкаРаботниковОрганизацийОбороты.AVT_ОтработаноЧасовВПраздникиОборот
	|ИЗ
	|РегистрНакопления.ФактическаяВыработкаРаботниковОрганизаций.Обороты(
	|		&НачалоПериода,
	|		&КонецПериода,
	|		Запись,
	|		Сотрудник В
	|			(ВЫБРАТЬ
	|				Работники.Сотрудник
	|			ИЗ
	|				ВТРаботникиОрганизации КАК Работники)) КАК ФактическаяВыработкаРаботниковОрганизацийОбороты) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботаСверхНормы.Сотрудник КАК Сотрудник,
	|	СУММА(ВЫБОР
	|			КОГДА РаботаСверхНормы.ВидРасчета = ЗНАЧЕНИЕ(ПланвидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПраздничныхИВыходных)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПраздникиДни,
	|	СУММА(ВЫБОР
	|			КОГДА РаботаСверхНормы.ВидРасчета = ЗНАЧЕНИЕ(ПланвидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПраздничныхИВыходных)
	|				ТОГДА РаботаСверхНормы.ЧасовОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПраздникиЧасы,
	|	СУММА(ВЫБОР
	|			КОГДА РаботаСверхНормы.ВидРасчета = ЗНАЧЕНИЕ(ПланвидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаСверхурочных)
	|				ТОГДА ВЫБОР
	|						КОГДА РаботаСверхНормы.ЧасовОборот < 2
	|							ТОГДА РаботаСверхНормы.ЧасовОборот
	|						ИНАЧЕ 2
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сверхурочные15,
	|	СУММА(ВЫБОР
	|			КОГДА РаботаСверхНормы.ВидРасчета = ЗНАЧЕНИЕ(ПланвидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаСверхурочных)
	|				ТОГДА ВЫБОР
	|						КОГДА РаботаСверхНормы.ЧасовОборот < 2
	|							ТОГДА 0
	|						ИНАЧЕ РаботаСверхНормы.ЧасовОборот - 2
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сверхурочные2,
	|	СУММА(ВЫБОР
	|		КОГДА РаботаСверхНормы.ВидРасчета = ЗНАЧЕНИЕ(ПланвидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаСверхурочных)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК ОплаченоДнейСверхурочно
	|ПОМЕСТИТЬ РаботаСверхурочно
	|ИЗ
	|	РегистрНакопления.AVT_РаботаСверхНормы.Обороты(&НачалоПериода,&КонецПериода,ДЕНЬ) КАК РаботаСверхНормы
	|ГДЕ
	|	РаботаСверхНормы.ВидРасчета В (ЗНАЧЕНИЕ(ПланвидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПраздничныхИВыходных),
	|			ЗНАЧЕНИЕ(ПланвидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаСверхурочных))
	|	И РаботаСверхНормы.Сотрудник В
	|			(ВЫБРАТЬ
	|				Работники.Сотрудник
	|			ИЗ
	|				ВТРаботникиОрганизации КАК Работники)
    | 
	|СГРУППИРОВАТЬ ПО
	|	РаботаСверхНормы.Сотрудник
    |
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтработаноВремени.Сотрудник,
	|	РаботникиОрганизации.Должность,
	|	РаботникиОрганизации.ПодразделениеОрганизации,
	|	ОтработаноВремени.ОтработаноДней,
	|	ОтработаноВремени.ОтработаноЧасов,
	|	ОтработаноВремени.НочныхЧасов,
	|	ЕСТЬNULL(РаботаСверхурочно.Сверхурочные15, 0) КАК Сверхурочные15,
	|	ЕСТЬNULL(РаботаСверхурочно.Сверхурочные2, 0) КАК Сверхурочные2,
	|	ОтработаноВремени.ПраздникиДни + ЕСТЬNULL(РаботаСверхурочно.ПраздникиДни,0) КАК ПраздникиДни,
	|	ОтработаноВремени.ПраздникиЧасы + ЕСТЬNULL(РаботаСверхурочно.ПраздникиЧасы, 0) КАК ПраздникиЧасы
	|ИЗ
	|	ВТОтработаноВремени КАК ОтработаноВремени
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРаботникиОрганизации КАК РаботникиОрганизации
	|		ПО ОтработаноВремени.Сотрудник = РаботникиОрганизации.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаботаСверхурочно КАК РаботаСверхурочно
	|		ПО ОтработаноВремени.Сотрудник = РаботаСверхурочно.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|ОтработаноВремени.Сотрудник.Наименование";
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВедомостьУчетаИспользованияРабочегоВремени";
	
	Таблица = СформироватьЗапрос().Выгрузить();
	Подразделения = Таблица.Скопировать(,"ПодразделениеОрганизации");
	Подразделения.Свернуть("ПодразделениеОрганизации");
	Филиал        = Неопределено;
	Подразделение = Неопределено;
	Если Подразделения.Количество() = 1 Тогда
		Подразделение = Подразделения[0].ПодразделениеОрганизации;
		Филиал = AVT_ОбщегоНазначения.ПолучитьФилиалПодразделения(Подразделение);
	КонецЕсли;
	
	Параметр = НастройкаПараметра("НачалоПериода");
	Параметр.Использование = Истина;
	Параметр.Значение = НачалоПериода;
	Параметр = НастройкаПараметра("КонецПериода");
	Параметр.Использование = Истина;
	Параметр.Значение = КонецПериода;
	Параметр = НастройкаПараметра("Организация");
	Параметр.Использование = Истина;
	Параметр.Значение = Организация;
	Параметр = НастройкаПараметра("Подразделение");
	Параметр.Использование = Истина;
	Параметр.Значение = Подразделение;
	Параметр = НастройкаПараметра("Филиал");
	Параметр.Использование = Истина;
	Параметр.Значение = Филиал;
	
	МассивЗаголовковРесурсов = Новый Массив;
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	Для Каждого ЭлементВыбора Из НастройкиОтчета.Выбор.Элементы Цикл

		Если Не ТипЗнч(ЭлементВыбора) = Тип("ВыбранноеПолеКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;

		Если СхемаКомпоновкиданных.ПоляИтога.Найти(ЭлементВыбора.Поле) <> Неопределено Тогда
			Если Не ПустаяСтрока(ЭлементВыбора.Заголовок) Тогда
				МассивЗаголовковРесурсов.Добавить(ЭлементВыбора.Заголовок);
			Иначе
				ПолеНабораДанных = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Поля.найти(ЭлементВыбора.Поле);
				Если ПолеНабораДанных <> Неопределено Тогда
					МассивЗаголовковРесурсов.Добавить(ПолеНабораДанных.Заголовок);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	Для Каждого ТекМакет Из МакетКомпоновки.Макеты Цикл

		Если ТипЗнч(ТекМакет.Макет) <> Тип("МакетОбластиКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;

		Для Каждого СтрокаТаблицыКомпоновки Из ТекМакет.Макет Цикл
			Для Каждого ЯчейкаТаблицыОбластиКомпоновки Из СтрокаТаблицыКомпоновки.Ячейки Цикл
				Для Каждого Элемент Из ЯчейкаТаблицыОбластиКомпоновки.Элементы Цикл
					Если МассивЗаголовковРесурсов.Найти(Элемент.Значение) <> Неопределено Тогда

						Параметр = ЯчейкаТаблицыОбластиКомпоновки.Оформление.Элементы.Найти(Новый ПараметрКомпоновкиДанных("ГоризонтальноеПоложение"));
						Параметр.Значение = ГоризонтальноеПоложение.Центр;
						Параметр.Использование = Истина;

					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;

	КонецЦикла;

	// Создаем набор данных
	ВнешнийНаборДанных = Новый Структура;
	ВнешнийНаборДанных.Вставить("НаборДанных1", Таблица);
	
	//Создадим и инициализируем процессор компоновки
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки, Истина);

	//Создадим и инициализируем процессор вывода результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	//Обозначим начало вывода
	ПроцессорВывода.НачатьВывод();
	ТаблицаЗафиксирована = Ложь;

	ДокументРезультат.ФиксацияСверху = 0;
	//Основной цикл вывода отчета
	Пока Истина Цикл
		//Получим следующий элемент результата компоновки
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();

		Если ЭлементРезультата = Неопределено Тогда
			//Следующий элемент не получен - заканчиваем цикл вывода
			Прервать;
		Иначе
			// Зафиксируем шапку
			Если  Не ТаблицаЗафиксирована 
				  И ЭлементРезультата.ЗначенияПараметров.Количество() > 0 
				  И ТипЗнч(КомпоновщикНастроек.Настройки.Структура[0]) <> Тип("ДиаграммаКомпоновкиДанных") Тогда

				ТаблицаЗафиксирована = Истина;
				ДокументРезультат.ФиксацияСверху = ДокументРезультат.ВысотаТаблицы;

			КонецЕсли;
			//Элемент получен - выведем его при помощи процессора вывода
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
		КонецЕсли;
	КонецЦикла;

	ПроцессорВывода.ЗакончитьВывод();
		
КонецПроцедуры
