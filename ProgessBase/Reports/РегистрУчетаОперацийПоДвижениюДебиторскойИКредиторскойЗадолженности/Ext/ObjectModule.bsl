#Если Клиент Тогда
	
Перем НП Экспорт;
Перем мВалютаРегламентированногоУчета Экспорт;

Функция СчетПринадлежит(СчетВладелец, Счет)
	Если Счет = NULL Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Счет.ПринадлежитЭлементу(СчетВладелец) ИЛИ Счет = СчетВладелец Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции


Функция НаименованиеОперации(Выборка)
	НаименованиОперации = "";
	
	Если Выборка.СуммаОборотДт <> 0 Тогда
		Если СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеКредиты, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеКредитыВал, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеКредиты, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеКредитыВал, Выборка.Счет) Тогда
					
			НаименованиОперации = "Возврат кредита";
			Если СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПрочиеДоходы, Выборка.КорСчет) Тогда
				Если Выборка.КорСубконто1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности Тогда
					НаименованиОперации = "Списание долга по кредиту";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитам, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитамВал, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитам, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитамВал, Выборка.Счет) Тогда
			
			НаименованиОперации = "Уплата процентов по кредиту";
			Если СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПрочиеДоходы, Выборка.КорСчет) Тогда
				Если Выборка.КорСубконто1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности Тогда
					НаименованиОперации = "Списание процентов по кредиту";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймы, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймыВал, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймы, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймыВал, Выборка.Счет) Тогда
			
			НаименованиОперации = "Возврат займа";
			Если СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПрочиеДоходы, Выборка.КорСчет) Тогда
				Если Выборка.КорСубконто1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности Тогда
					НаименованиОперации = "Списание долга по займу";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймам, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймамВал, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймам, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймамВал, Выборка.Счет) Тогда
			
			НаименованиОперации = "Уплата процентов по займу";
			Если СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПрочиеДоходы, Выборка.КорСчет) Тогда
				Если Выборка.КорСубконто1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности Тогда
					НаименованиОперации = "Списание процентов по займу";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.Касса, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.РасчетныеСчета, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ВалютныеСчета, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.СпециальныеСчета, Выборка.КорСчет) Тогда
			
			НаименованиОперации = "Платеж";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеКредиты, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеКредитыВал, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеКредиты, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеКредитыВал, Выборка.КорСчет) Тогда
					
			НаименованиОперации = "Получение кредита";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитам, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитамВал, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитам, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитамВал, Выборка.КорСчет) Тогда
			
			НаименованиОперации = "Начисление процентов по кредиту";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймы, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймыВал, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймы, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймыВал, Выборка.КорСчет) Тогда
			
			НаименованиОперации = "Получение займа";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймам, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймамВал, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймам, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймамВал, Выборка.КорСчет) Тогда
			
			НаименованиОперации = "Начисление процентов по займу";

		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.Продажи, Выборка.КорСчет) Тогда
			Если НЕ ЗначениеЗаполнено(Выборка.КорСубконто1) Тогда
				НаименованиОперации = "Реализация";
			Иначе
				НаименованиОперации = "Реализация (" + Выборка.КорСубконто1 + ")";
			КонецЕсли;
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПрочиеДоходы, Выборка.КорСчет) Тогда
			НаименованиОперации = Выборка.КорСубконто1;
			
		Иначе
			НаименованиОперации = Выборка.Содержание;
			
		КонецЕсли;
	Иначе
		Если СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеКредиты, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеКредитыВал, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеКредиты, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеКредитыВал, Выборка.Счет) Тогда
					
			НаименованиОперации = "Получение кредита";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитам, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитамВал, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитам, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитамВал, Выборка.Счет) Тогда
			
			НаименованиОперации = "Начисление процентов по кредиту";
						
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймы, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймыВал, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймы, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймыВал, Выборка.Счет) Тогда
			
			НаименованиОперации = "Получение займа";
						
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймам, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймамВал, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймам, Выборка.Счет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймамВал, Выборка.Счет) Тогда
			
			НаименованиОперации = "Начисление процентов по займу";
			
		ИначеЕсли Число(СокрЛП(Лев(Выборка.КорСчет.Код, 2))) <= 45 ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов, Выборка.КорСчет) Тогда
			
			НаименованиОперации = "Приобретение";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПрочиеРасходы, Выборка.КорСчет) Тогда
			НаименованиОперации = Выборка.КорСубконто1;
			
        ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.Касса, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.РасчетныеСчета, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.ВалютныеСчета, Выборка.КорСчет) ИЛИ
			СчетПринадлежит(ПланыСчетов.Хозрасчетный.СпециальныеСчета, Выборка.КорСчет) Тогда
			
			НаименованиОперации = "Получение денежных средств";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.Паи, Выборка.КорСчет) Тогда
			НаименованиОперации = "Приобретение долей в УК";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.Акции, Выборка.КорСчет) Тогда
			НаименованиОперации = "Приобретение акций в УК";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ДолговыеЦенныеБумаги, Выборка.КорСчет) Тогда
			НаименованиОперации = "Получение ценных бумаг";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПредоставленныеЗаймы, Выборка.КорСчет) Тогда
			НаименованиОперации = "Предоставлен займ";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ВкладыПоДоговоруПростогоТоварищества, Выборка.КорСчет) Тогда
			НаименованиОперации = "Вклад в простое товарищество";
			
		ИначеЕсли СчетПринадлежит(ПланыСчетов.Хозрасчетный.ПриобретенныеПрава, Выборка.КорСчет) Тогда
			НаименованиОперации = "Приобретение прав";

        Иначе
			
			НаименованиОперации = Выборка.Содержание;
			
		КонецЕсли;
	КонецЕсли;
	
	
	Возврат НаименованиОперации;
КонецФункции

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	НачалоПериода = НачалоДня(ДатаНач);
	КонецПериода = КонецДня(ДатаКон);
	
	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");
	
	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	СчетаЗадолженности = Новый Массив;
	СчетаЗадолженности.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	СчетаЗадолженности.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	СчетаЗадолженности.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам);
	СчетаЗадолженности.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам);
	СчетаЗадолженности.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	
	ИсключитьСчета = Новый Массив;
	ИсключитьСчета.Добавить(ПланыСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам);
	ИсключитьСчета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоНДСотложенномуДляУплатыВБюджет);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	ВидыКорСубконто = Новый Массив;
	ВидыКорСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	ВидыКорСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаКон", КонецПериода);
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("СчетаЗадолженности",  СчетаЗадолженности);
	Запрос.УстановитьПараметр("ВидыСубконто",  ВидыСубконто);
	Запрос.УстановитьПараметр("ИсключитьСчета",  ИсключитьСчета);
	Запрос.УстановитьПараметр("Счет008",  ПланыСчетов.Хозрасчетный.ОбеспеченияОбязательствПолученные);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Регистратор,
	|	Хозрасчетный.Содержание,
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, ДЕНЬ) КАК ДатаОперации,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОбороты.Субконто2 КАК Субконто2,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
	|	СУММА(0) КАК СуммаОстатокДт,
	|	СУММА(0) КАК СуммаОстатокКт,
	|	СУММА(0) КАК Обеспечение
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Запись, Счет В ИЕРАРХИИ (&СчетаЗадолженности), &ВидыСубконто, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО ХозрасчетныйОбороты.Регистратор = Хозрасчетный.Регистратор И ХозрасчетныйОбороты.НомерСтроки = Хозрасчетный.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаКон, Счет = &Счет008, , Организация = &Организация) КАК Остатки008
	|		ПО ХозрасчетныйОбороты.Субконто2 = Остатки008.Субконто2
	|
	|ГДЕ
	|	(НЕ(ХозрасчетныйОбороты.Счет В ИЕРАРХИИ (&ИсключитьСчета)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2,
	|	Хозрасчетный.Регистратор,
	|	Хозрасчетный.Содержание,
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, ДЕНЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	NULL,
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	NULL,
	|	NULL,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт),
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт),
	|	СУММА(0)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаНач, Счет В ИЕРАРХИИ (&СчетаЗадолженности), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	|
	|ГДЕ
	|	(НЕ(ХозрасчетныйОстатки.Счет В ИЕРАРХИИ (&ИсключитьСчета)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	NULL,
	|	NULL,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаКон, Счет = &Счет008, , Организация = &Организация) КАК ХозрасчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОперации
	|
	|ИТОГИ ПО
	|	Субконто2";
	
	ОграниченияПоПостроителюОтчета = БухгалтерскиеОтчеты.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
	
	СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
	Если Не ПустаяСтрока(СтрОтбор) Тогда
		ОбластьОтбор = Макет.ПолучитьОбласть("СтрокаОтбор");                     
		ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
		ДокументРезультат.Вывести(ОбластьОтбор);
	   Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация = &Организация", "Организация = &Организация И " + ОграниченияПоПостроителюОтчета);
		
	КонецЕсли;	
	
	Результат = Запрос.Выполнить();
	
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьОбъектУчета	 = Макет.ПолучитьОбласть("ОбъектУчета");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
    ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	
    //Выборка результатов запроса
	
	ВыборкаДоговоров = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДоговоров.Следующий() Цикл
		СальдоПоДоговору = ВыборкаДоговоров.СуммаОстатокДт - ВыборкаДоговоров.СуммаОстатокКт;
		ОбластьОбъектУчета.Параметры.ОбеспеченностьЗалогом = ВыборкаДоговоров.Обеспечение;
		ОбластьОбъектУчета.Параметры.РеквизитыДоговора = "" + ВыборкаДоговоров.Субконто2.Владелец.НаименованиеПолное + 
		", " + ВыборкаДоговоров.Субконто2;
		ОбластьОбъектУчета.Параметры.ПорядокРасчетов = "Цены в договоре указаны в " + ВыборкаДоговоров.Субконто2.ВалютаВзаиморасчетов + 
		", " + БухгалтерскийУчетРасчетовСКонтрагентами.ОпределениеВидаРасчетовПоПараметрамДоговора(ВыборкаДоговоров.Субконто2, мВалютаРегламентированногоУчета);
		ДокументРезультат.Вывести(ОбластьОбъектУчета);

		ВыборкаЗаписей = ВыборкаДоговоров.Выбрать();
		Пока ВыборкаЗаписей.Следующий() Цикл
			Если ВыборкаЗаписей.Счет = Null Тогда
				Продолжить;
			КонецЕсли;
			Если ВыборкаЗаписей.СуммаОборотДт = 0 И ВыборкаЗаписей.СуммаОборотКт = 0 Тогда
				Продолжить;
			КонецЕсли;
			СальдоПоДоговору = СальдоПоДоговору + ВыборкаЗаписей.СуммаОборотДт - ВыборкаЗаписей.СуммаОборотКт;
			ОбластьСтрока.Параметры.ДатаОперации = ВыборкаЗаписей.ДатаОперации;
			
			ОбластьСтрока.Параметры.ОснованиеОперации = "" + Формат(ВыборкаЗаписей.Регистратор.Дата, "ДФ=dd.MM.yyyy") + ", №"+ ВыборкаЗаписей.Регистратор.Номер;
			ОбластьСтрока.Параметры.Расшифровка = ВыборкаЗаписей.Регистратор;
			ОбластьСтрока.Параметры.ОборотПоДебету = ВыборкаЗаписей.СуммаОборотДт;
			ОбластьСтрока.Параметры.ОборотПоКредиту = ВыборкаЗаписей.СуммаОборотКт;
			
			Если Лев(ВыборкаЗаписей.КорСчет, 2) = "91" Тогда
				Если ВыборкаЗаписей.КорСубконто1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницы 
					Или ВыборкаЗаписей.КорСубконто1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницыПоРасчетамВУЕ Тогда
					НаименованиОперации = "Курсовая разница";
					ОбластьСтрока.Параметры.СуммаКурсовыхРазницПоДебету = ВыборкаЗаписей.СуммаОборотДт;
					ОбластьСтрока.Параметры.СуммаКурсовыхРазницПоКредиту = ВыборкаЗаписей.СуммаОборотКт;
				ИначеЕсли ВыборкаЗаписей.КорСубконто1.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы  Тогда
					НаименованиОперации = "Суммовая разница";
					ОбластьСтрока.Параметры.СуммаКурсовыхРазницПоДебету = ВыборкаЗаписей.СуммаОборотДт;
					ОбластьСтрока.Параметры.СуммаКурсовыхРазницПоКредиту = ВыборкаЗаписей.СуммаОборотКт;
				Иначе
					НаименованиОперации = НаименованиеОперации(ВыборкаЗаписей);
					ОбластьСтрока.Параметры.СуммаКурсовыхРазницПоДебету = "";
					ОбластьСтрока.Параметры.СуммаКурсовыхРазницПоКредиту = "";
				КонецЕсли;
			Иначе
				НаименованиОперации = НаименованиеОперации(ВыборкаЗаписей);
				ОбластьСтрока.Параметры.СуммаКурсовыхРазницПоДебету = "";
				ОбластьСтрока.Параметры.СуммаКурсовыхРазницПоКредиту = "";
			КонецЕсли;
            ОбластьСтрока.Параметры.НаименованиеОперации = НаименованиОперации;
			Если СальдоПоДоговору > 0 Тогда
				ОбластьСтрока.Параметры.СальдоДебетовое = СальдоПоДоговору;
				ОбластьСтрока.Параметры.СальдоКредитовое = 0;
			Иначе
				ОбластьСтрока.Параметры.СальдоДебетовое = 0;
				ОбластьСтрока.Параметры.СальдоКредитовое = - СальдоПоДоговору;
			КонецЕсли;
			ДокументРезультат.Вывести(ОбластьСтрока);
		КонецЦикла;
	КонецЦикла;
		
		
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);
	
КонецПроцедуры // СформироватьОтчет

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
	
	СоотвСубконто = Новый Соответствие;
	
	Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиИОбороты.СуммаОборот КАК СуммаОборот,
	|	ОстаткиИОбороты.Субконто2
	|{ВЫБРАТЬ
	|	Субконто2.*}
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(, , МЕСЯЦ, , Счет В ИЕРАРХИИ (&Счет), , {(Субконто2).*}) КАК ОстаткиИОбороты
	|ИТОГИ
	|	СУММА(СуммаОборот)
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	Субконто2.*}";

Массив = Новый Массив;
Массив.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами);
ПостроительОтчета.Параметры.Вставить("Счет", Массив);
ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
ПостроительОтчета.Текст = Текст;

СоотвСубконто = Новый Соответствие;
СоотвСубконто.Вставить("Субконто2",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);


	Сч = 0;
	Для каждого Элемент Из СоотвСубконто Цикл
		Сч = Сч+1;
		Поле = ПостроительОтчета.ДоступныеПоля.Найти(Элемент.Ключ);
		Поле.ТипЗначения = Элемент.Значение.ТипЗначения;
		Поле.Представление = Элемент.Значение.Наименование;
		
		ПостроительОтчета.Отбор.Добавить(Элемент.Ключ);
	КонецЦикла;


УправлениеОтчетами.УстановитьОтборИзТаблицы(ПостроительОтчета.Отбор, СтарыеНастройки);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП           = Новый НастройкаПериода;
мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");

#КонецЕсли
