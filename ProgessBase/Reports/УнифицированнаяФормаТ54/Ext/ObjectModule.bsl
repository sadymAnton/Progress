
Перем ДанныеОФизЛицах, ТаблицаКадрыОтпускаУдержания, Отпуска, Удержания, РезультатНачислений;
Перем НачалоПериода, КонецПериода, СписокГоловнаяОрганизация;
Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета
Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю
Перем СоответствиеНаборовДанныхИЗапросов;


#Если ТолстыйКлиентОбычноеПриложение Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ВывестиКарточки(ДокументРезультат, СтрокиДеревоДанных, Уровень, Группировки)
	
	//выбрать карточки
	Для каждого СтрокаДерева из СтрокиДеревоДанных Цикл
		ПолеГруппировки = Группировки.Получить(Уровень);
		Если Группировки.Получить(Уровень) <> Неопределено и Группировки.Получить(Уровень).Значение <> "Физлицо" тогда 
			//Нарисовать группировку
			ВывестиГруппировку(ДокументРезультат, СтрокаДерева, Группировки.Получить(Уровень).Значение, Уровень);
			Если Группировки.Количество()-1 >= Уровень+1 И Группировки.Получить(Уровень+1).Значение = "Физлицо" тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ВывестиКарточки(ДокументРезультат, СтрокаДерева.Строки, Уровень+1, Группировки);
		ИначеЕсли Группировки.Получить(Уровень) <> Неопределено и Группировки.Получить(Уровень).Значение = "Физлицо" тогда
			//Нарисовать карточку физлица
			СформироватьМакет(ДокументРезультат, СтрокаДерева.ФизЛицо, Уровень);
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц(); 
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиГруппировку(ДокументРезультат, СтрокаДанных, Поле, Уровень)
	
	МакетГруппировки  = ПолучитьМакет("МакетГруппировки");
	ОбластьГрупировки = МакетГруппировки.ПолучитьОбласть("Группировка");
	
	ДоступноеПоле = ТиповыеОтчеты.ПолучитьДоступноеПоле(Новый ПолеКомпоновкиДанных(Поле), КомпоновщикНастроек.Настройки.ДоступныеПоляГруппировок);
	
	ОбластьГрупировки.Параметры.НазваниеПарметра = ДоступноеПоле.Заголовок;
	ОбластьГрупировки.Параметры.Значение = СтрокаДанных[СтрЗаменить(Поле, ".", "")];
	
	ДокументРезультат.Вывести(ОбластьГрупировки, Уровень+1);
	
КонецПроцедуры 

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьМакет(ДокументРезультат, Работник, Уровень) Экспорт
	
	Макет 		 = ПолучитьМакет("Т54");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	ДанныеОФизЛицах.Сбросить();
	Если ДанныеОФизЛицах.НайтиСледующий(Новый Структура("ФизЛицо", Работник))  Тогда
		
		ОбластьШапка.Параметры.Заполнить(ДанныеОФизЛицах);
		
		ОбластьШапка.Параметры.РасчетныйПериодС	 = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.РасчетныйПериодПо = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.КоличествоДетей	 = ДанныеОФизЛицах.КоличествоДетей;
		
	КонецЕсли;	

	ДокументРезультат.Вывести(ОбластьШапка);
	
	ОбластьШапкаОбщая = Макет.ПолучитьОбласть("ШапкаОбщая");
	ДокументРезультат.Вывести(ОбластьШапкаОбщая);
	
	НомерПП = 1;
	
	// Выводим строки по начислениям и отпуску в таблицу.
	СтрокаФизЛицо = ТаблицаКадрыОтпускаУдержания.Строки.Найти(Работник, "ФизЛицо");
	Если СтрокаФизЛицо <> Неопределено тогда
		ВсегоСтрокДокумента = СтрокаФизЛицо.Строки.Количество();
		Для каждого СтрокаТЗ Из СтрокаФизЛицо.Строки Цикл
			
			ОбластьСтрокаКадровая = Макет.ПолучитьОбласть("СтрокаОбщая");
			
			// массив - для разбиения на страницы
			ВыводимыеОбласти = Новый Массив();
			ВыводимыеОбласти.Добавить(ОбластьСтрокаКадровая);
			
			ОбластьСтрокаКадровая.Параметры.Заполнить(СтрокаТЗ);
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиСледЛист = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			Если Не ВывестиСледЛист и НомерПП = ВсегоСтрокДокумента Тогда
				ВывестиСледЛист = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиСледЛист Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ОбластьШапкаОбщая);
			КонецЕсли;
			
			ДокументРезультат.Вывести(ОбластьСтрокаКадровая);
			НомерПП = НомерПП + 1;
		КонецЦикла; 
		// Вывод пустой строки 
		Если СтрокаФизЛицо.Строки.Количество()=0 Тогда
			
			Для Сч = 1 По 3 Цикл
				ОбластьСтрокаКадроваяПустая = Макет.ПолучитьОбласть("СтрокаОбщаяПустая");
				ДокументРезультат.Вывести(ОбластьСтрокаКадроваяПустая);
			КонецЦикла; 
			
		КонецЕсли; 
	КонецЕсли;
	// Вывод пустой строки 
	Если ТаблицаКадрыОтпускаУдержания.Строки.Количество()=0 Тогда
		Для Сч = 1 По 3 Цикл
			ОбластьСтрокаКадроваяПустая = Макет.ПолучитьОбласть("СтрокаОбщаяПустая");
			ДокументРезультат.Вывести(ОбластьСтрокаКадроваяПустая);
		КонецЦикла; 
	КонецЕсли; 
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоПериодам");
	
	// массив с двумя строками - для разбиения на страницы
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьСтрока);
	
	ОбластьШапкаПоПериодам = Макет.ПолучитьОбласть("ШапкаПоПериодам");
	ОбластьПодвал		   = Макет.ПолучитьОбласть("Подвал");
	
	ВывестиОбласть = ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ОбластьШапкаПоПериодам);
	Если НЕ ВывестиОбласть Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ПустойИнтервал"));
	ДокументРезультат.Вывести(ОбластьШапкаПоПериодам);
	
	ВыборкаПоФизЛицам = РезультатНачислений.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если НЕ ВыборкаПоФизЛицам.НайтиСледующий(Работник, "ФизЛицо") ТОгда
		
		ВыводимыеОбласти.Добавить(ОбластьПодвал);
		
		// Вывод пустой строки 
		Для Сч = 1 По 12 Цикл
			
			ОбластьСтрокаУдержанияПустая = Макет.ПолучитьОбласть("СтрокаПоПериодамПустая");
			Если Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ОбластьСтрокаУдержанияПустая) Тогда
				
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ОбластьШапкаПоПериодам);
			
			КонецЕсли; 
			ДокументРезультат.Вывести(ОбластьСтрокаУдержанияПустая);
			
		КонецЦикла; 
		
	Иначе
		
		ВыборкаПоПериодам = ВыборкаПоФизЛицам.ВЫбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		НомерПП = 1;
		
		Пока ВыборкаПоПериодам.СледующийПоЗначениюПоля("Период") Цикл  // по месяцам регистрации
			
			ОбластьСтрока.Параметры.ПериодРегистрации = ВыборкаПоПериодам.Период;
			
			ОбластьСтрока.Параметры.Повременно	 	= 0;
			ОбластьСтрока.Параметры.Сдельно	    	= 0;
			ОбластьСтрока.Параметры.Другое	     	= 0;
			ОбластьСтрока.Параметры.НДФЛ		   	= 0;
			ОбластьСтрока.Параметры.Займы		   	= 0;
			ОбластьСтрока.Параметры.Аванс		   	= 0;
			ОбластьСтрока.Параметры.ИЛ			   	= 0;
			ОбластьСтрока.Параметры.ВсегоНачислено	= 0;
			ОбластьСтрока.Параметры.ДругоеУдержано	= 0;
			ОбластьСтрока.Параметры.ВсегоУдержано	= 0;
			// для строк больничных
			ОбластьСтрока.Параметры.БЛМесяц1        = "";
			ОбластьСтрока.Параметры.БЛМесяц2        = "";
			ОбластьСтрока.Параметры.БЛМесяц3        = "";
			ОбластьСтрока.Параметры.БЛ1				= 0;
			ОбластьСтрока.Параметры.БЛ2				= 0;
			ОбластьСтрока.Параметры.БЛ3				= 0;
			ОбластьСтрока.Параметры.БЛДни1			= 0;
			ОбластьСтрока.Параметры.БЛДни2			= 0;
			ОбластьСтрока.Параметры.БЛДни3			= 0;
			НомерСтрокиБольничных = 1;
			
			ОбластьСтрока.Параметры.ОтработаноДней 	= 0;
			ОбластьСтрока.Параметры.ОтработаноЧасов = 0;

			Сальдо = 0;
			КВыплате = 0;
			
	        Пока ВыборкаПоПериодам.Следующий() Цикл  // записи внутри месяца
				
				Если ВыборкаПоПериодам.Группа = "Начисления" Тогда
					
					Если ЗначениеЗаполнено(ВыборкаПоПериодам.ОтработаноДней) Тогда
						ОбластьСтрока.Параметры.ОтработаноДней = ОбластьСтрока.Параметры.ОтработаноДней + ВыборкаПоПериодам.ОтработаноДней;
					КонецЕсли;
						
					Если ЗначениеЗаполнено(ВыборкаПоПериодам.ОтработаноЧасов) Тогда
						ОбластьСтрока.Параметры.ОтработаноЧасов = ОбластьСтрока.Параметры.ОтработаноЧасов + ВыборкаПоПериодам.ОтработаноЧасов;
					КонецЕсли;
					
					Если ВыборкаПоПериодам.ВидРасчета = "Повременно" Тогда
						ОбластьСтрока.Параметры.Повременно = ОбластьСтрока.Параметры.Повременно + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "Сдельно" Тогда
						ОбластьСтрока.Параметры.Сдельно =  ОбластьСтрока.Параметры.Сдельно + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "Больничные" Тогда
						
						Если НомерСтрокиБольничных = 1 Тогда
							ОбластьСтрока.Параметры.БЛ1 =  ВыборкаПоПериодам.Результат;
							ОбластьСтрока.Параметры.БЛДни1 =  ВыборкаПоПериодам.НормаДней;
							ОбластьСтрока.Параметры.БЛМесяц1 =  Формат(ВыборкаПоПериодам.ПериодДействия, "ДФ='МММ гг'");
						ИначеЕсли НомерСтрокиБольничных = 2 Тогда
							ОбластьСтрока.Параметры.БЛ2 =  ВыборкаПоПериодам.Результат;
							ОбластьСтрока.Параметры.БЛДни2 =  ВыборкаПоПериодам.НормаДней;
							ОбластьСтрока.Параметры.БЛМесяц2 =  Формат(ВыборкаПоПериодам.ПериодДействия, "ДФ='МММ гг'");
						Иначе
							// в третью строку суммируем все остальное
							ОбластьСтрока.Параметры.БЛ3 =  ОбластьСтрока.Параметры.БЛ3 + ВыборкаПоПериодам.Результат;
							ОбластьСтрока.Параметры.БЛДни3 =  ОбластьСтрока.Параметры.БЛДни3 + ВыборкаПоПериодам.НормаДней;
							Если НомерСтрокиБольничных = 3 Тогда
								ОбластьСтрока.Параметры.БЛМесяц3 =  Формат(ВыборкаПоПериодам.ПериодДействия, "ДФ='МММ гг'");
							Иначе
								// если больничных более трех - в третьей строке месяц не пишем
								ОбластьСтрока.Параметры.БЛМесяц3 = "";
							КонецЕсли;
								
						КонецЕсли;
						НомерСтрокиБольничных = НомерСтрокиБольничных + 1;
							
					Иначе						
						ОбластьСтрока.Параметры.Другое =  ОбластьСтрока.Параметры.Другое + ВыборкаПоПериодам.Результат
					КонецЕсли; 
					
					ОбластьСтрока.Параметры.ВсегоНачислено = ОбластьСтрока.Параметры.ВсегоНачислено + ВыборкаПоПериодам.Результат;
					
				ИначеЕсли ВыборкаПоПериодам.Группа = "Удержания" Тогда
					
					Если ВыборкаПоПериодам.ВидРасчета = "НДФЛ" Тогда
						ОбластьСтрока.Параметры.НДФЛ =  ОбластьСтрока.Параметры.НДФЛ + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "Аванс" Тогда
						ОбластьСтрока.Параметры.Аванс =  ОбластьСтрока.Параметры.Аванс + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "Погашение займов" Тогда
						ОбластьСтрока.Параметры.Займы =  ОбластьСтрока.Параметры.Займы + ВыборкаПоПериодам.Результат
					ИначеЕсли ВыборкаПоПериодам.ВидРасчета = "ИсполнительныеЛисты" Тогда
						ОбластьСтрока.Параметры.ИЛ =  ОбластьСтрока.Параметры.ИЛ + ВыборкаПоПериодам.Результат;
					Иначе
						ОбластьСтрока.Параметры.ДругоеУдержано =  ОбластьСтрока.Параметры.ДругоеУдержано + ВыборкаПоПериодам.Результат;
					КонецЕсли;
					
					ОбластьСтрока.Параметры.ВсегоУдержано = ОбластьСтрока.Параметры.ВсегоУдержано + ВыборкаПоПериодам.Результат;
					
				ИначеЕсли ВыборкаПоПериодам.Группа = "Сальдо" Тогда
					Сальдо = Сальдо + ВыборкаПоПериодам.Результат
				ИначеЕсли ВыборкаПоПериодам.Группа = "КВыплате" Тогда
					КВыплате = КВыплате + ВыборкаПоПериодам.Результат
				КонецЕсли; 
				
			КонецЦикла; 
			
			Если Сальдо > 0 Тогда
				ОбластьСтрока.Параметры.ДолгЗаОрганизацией = Сальдо;
				ОбластьСтрока.Параметры.ДолгЗаРаботником = 0;
			Иначе
				ОбластьСтрока.Параметры.ДолгЗаОрганизацией = 0;
				ОбластьСтрока.Параметры.ДолгЗаРаботником = - Сальдо;
			КонецЕсли; 
			
			ОбластьСтрока.Параметры.КВыплате = КВыплате;
				
			ДокументРезультат.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
	КонецЕсли;  
	
	ДокументРезультат.Вывести(ОбластьПодвал);
	
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
КонецПроцедуры

Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	
	ЗначениеПанелипользователя = ТиповыеОтчеты.ПолучитьЗначенияНастроекПанелиПользователяОбъекта(ЭтотОбъект);
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	
	Группировка                   = ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "ФизЛицо");
	ПолеГруппировки               = Группировка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("Организация");
	ПолеГруппировки.Использование = истина;
	
	ПолеГруппировки               = Группировка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Поле          = Новый ПолеКомпоновкиДанных("ГоловнаяОрганизация");
	ПолеГруппировки.Использование = истина;
	
	НачалоПериода = НачалоМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	КонецПериода  = КонецМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	
	ПараметрНачалоПериода = ТиповыеОтчеты.ПолучитьПараметр(КомпоновщикНастроек, "НачалоПериода");
	Если ПараметрНачалоПериода <> Неопределено тогда
		НачалоПериода = Дата(ПараметрНачалоПериода.Значение);
	КонецЕсли;
	
	ПараметрКонецПериода = ТиповыеОтчеты.ПолучитьПараметр(КомпоновщикНастроек, "КонецПериода");
	Если ПараметрКонецПериода <> Неопределено тогда
		КонецПериода = Дата(ПараметрКонецПериода.Значение);
	КонецЕсли;
	
	Если НачалоПериода = '00010101' тогда
		НачалоПериода = НачалоМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	КонецЕсли;
	
	Если КонецПериода = '00010101' тогда
		КонецПериода  = КонецМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ДеревоДанных =  Новый ДеревоЗначений;
	
	ПроцессорВывода.УстановитьОбъект(ДеревоДанных);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	//Получить список сотрудников
	СписокОрганизаций         = Новый СписокЗначений;
	СписокГоловнаяОрганизация = Новый СписокЗначений;
	СписокФизЛиц              = Новый СписокЗначений;
	
	ПолучитьСпискиФизЛицИСотрудников(ДеревоДанных.Строки, СписокОрганизаций,  СписокГоловнаяОрганизация, СписокФизЛиц);
	
	// Сформировать Запросы по данным физлиц
	РеглВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Дата актуальности установим на последний день года. 
	Запрос.УстановитьПараметр("ДатаАктуальности",	 КонецПериода);
	Запрос.УстановитьПараметр("Физлицо",			 СписокФизЛиц);
	Запрос.УстановитьПараметр("Организация",		 СписокОрганизаций);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", СписокГоловнаяОрганизация);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СотрудникиОрганизаций.Ссылка КАК Ссылка,
	|	СотрудникиОрганизаций.ВидЗанятости
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Физлицо В(&Физлицо)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ФизическиеЛица.Наименование) КАК ФамилияИмяОтчество,
	|	ФизическиеЛица.ДатаРождения,
	|	ФизическиеЛица.МестоРождения,
	|	ФизическиеЛица.Пол,
	|	ФизическиеЛица.ИНН,
	|	ФизическиеЛица.СтраховойНомерПФР,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|			ТОГДА ""Основная""
	|		ИНАЧЕ ""По совместительству""
	|	КОНЕЦ КАК ВидРаботы,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
	|	СемейноеПоложениеФизЛицСрезПоследних.СемейноеПоложение,
	|	ПриемНаРаботу.Период КАК ДатаПриема,
	|	ВЫБОР
	|		КОГДА Увольнение.ПериодЗавершения <= &ДатаАктуальности
	|				И Увольнение.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Увольнение.ПериодЗавершения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Увольнение.Период <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						И Увольнение.Период <= &ДатаАктуальности
	|					ТОГДА ДОБАВИТЬКДАТЕ(Увольнение.Период, ДЕНЬ, -1)
	|				ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК ДатаУвольнения,
	|	НДФЛСтандартныеВычетыНаДетейСрезПоследних.КоличествоДетей,
	|	ФизическиеЛица.Ссылка КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения.НаименованиеПолное
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение.НаименованиеПолное
	|	КОНЕЦ КАК НаименованиеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения.КодПоОКПО
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение.КодПоОКПО
	|	КОНЕЦ КАК КодПоОКПО
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо В (&ФизЛицо)) КАК ФИОФизЛицСрезПоследних
	|		ПО (ФИОФизЛицСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо В (&ФизЛицо)) КАК СемейноеПоложениеФизЛицСрезПоследних
	|		ПО (СемейноеПоложениеФизЛицСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						Сотрудники.Ссылка
	|					ИЗ
	|						ВТСотрудники КАК Сотрудники
	|					ГДЕ
	|						Сотрудники.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))) КАК РаботникиОрганизацииСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПриемНаРаботу
	|			ПО РаботникиОрганизацииСрезПоследних.Сотрудник = ПриемНаРаботу.Сотрудник
	|				И (ПриемНаРаботу.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Увольнение
	|			ПО РаботникиОрганизацииСрезПоследних.Сотрудник = Увольнение.Сотрудник
	|				И (ВЫБОР
	|					КОГДА Увольнение.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							И Увольнение.ПериодЗавершения <= &ДатаАктуальности
	|						ТОГДА Увольнение.ПричинаИзмененияСостоянияЗавершения
	|					ИНАЧЕ Увольнение.ПричинаИзмененияСостояния
	|				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|		ПО (ВЫБОР
	|				КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаАктуальности
	|						И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения
	|				ИНАЧЕ РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение
	|			КОНЕЦ В (&Организация))
	|			И ФизическиеЛица.Ссылка = РаботникиОрганизацииСрезПоследних.Сотрудник.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(ВЫБОР
	|					КОГДА НДФЛСтандартныеВычетыНаДетейСрезПоследних.ПериодЗавершения <= НАЧАЛОПЕРИОДА(&ДатаАктуальности, МЕСЯЦ)
	|							И НДФЛСтандартныеВычетыНаДетейСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА НДФЛСтандартныеВычетыНаДетейСрезПоследних.КоличествоДетейЗавершения
	|					ИНАЧЕ НДФЛСтандартныеВычетыНаДетейСрезПоследних.КоличествоДетей
	|				КОНЕЦ) КАК КоличествоДетей,
	|			НДФЛСтандартныеВычетыНаДетейСрезПоследних.Физлицо КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.НДФЛСтандартныеВычетыНаДетей.СрезПоследних(&ДатаАктуальности, Физлицо В (&Физлицо)) КАК НДФЛСтандартныеВычетыНаДетейСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НДФЛСтандартныеВычетыНаДетейСрезПоследних.Физлицо) КАК НДФЛСтандартныеВычетыНаДетейСрезПоследних
	|		ПО (НДФЛСтандартныеВычетыНаДетейСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка)
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&Физлицо)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизацииСрезПоследних.Период УБЫВ";

	ДанныеОФизЛицах	= Запрос.Выполнить().Выбрать();
	
	Результат.Очистить();
	
	// Общая таблица значений, в которую соберем данные по кадровым документам, отпускам и удержаниям.
	ТаблицаКадрыОтпускаУдержания = Новый ТаблицаЗначений;
	
	// ПРИЕМ И ПЕРЕВОДЫ НА ДРУГУЮ РАБОТУ
	Запрос.УстановитьПараметр("ДатаАктуальностиС",	НачалоПериода);
	Запрос.УстановитьПараметр("ДатаАктуальностиПо",	КонецПериода);
	Запрос.УстановитьПараметр("ДатаКонУвольнений", КонецПериода + 86400);
	Запрос.УстановитьПараметр("ДатаНачУвольнений", НачалоПериода + 86400);
	Запрос.УстановитьПараметр("РеглВалюта",РеглВалюта);
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Справочники.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная);
	СписокЗначений.Добавить(Справочники.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная);
	СписокЗначений.Добавить(Справочники.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая);
	Запрос.УстановитьПараметр("ТарифнаяСтавкаОклад", СписокЗначений);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&ДатаАктуальностиС КАК Период,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.ПервичныйДокумент КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|	КОНЕЦ КАК ПричинаИзмененияСостояния
	|ПОМЕСТИТЬ ВТДвиженияРаботника
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&ДатаАктуальностиС,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					Сотрудники.Ссылка
	|				ИЗ
	|					ВТСотрудники КАК Сотрудники)) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаАктуальностиС
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
	|		КОНЕЦ В (&Организация)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Работники.Период,
	|	Работники.Сотрудник,
	|	Работники.ПервичныйДокумент,
	|	Работники.ПодразделениеОрганизации,
	|	Работники.Должность,
	|	Работники.ПричинаИзмененияСостояния
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК Работники
	|ГДЕ
	|	(Работники.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|				И Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ИЛИ Работники.Период МЕЖДУ &ДатаНачУвольнений И &ДатаКонУвольнений
	|				И Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|	И Работники.Сотрудник В
	|			(ВЫБРАТЬ
	|				Сотрудники.Ссылка
	|			ИЗ
	|				ВТСотрудники КАК Сотрудники)
	|	И Работники.ОбособленноеПодразделение В(&Организация)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Работники.ПериодЗавершения,
	|	Работники.Сотрудник,
	|	Работники.ПервичныйДокумент,
	|	Работники.ПодразделениеОрганизацииЗавершения,
	|	Работники.ДолжностьЗавершения,
	|	Работники.ПричинаИзмененияСостоянияЗавершения
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПериодыПерекрытия
	|		ПО (ПериодыПерекрытия.Период <= Работники.ПериодЗавершения)
	|			И (ПериодыПерекрытия.Период > Работники.Период)
	|			И (ПериодыПерекрытия.Сотрудник = Работники.Сотрудник)
	|			И (ПериодыПерекрытия.ОбособленноеПодразделение В (&Организация))
	|ГДЕ
	|	Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И (Работники.ПериодЗавершения МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|				И Работники.ПричинаИзмененияСостоянияЗавершения <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ИЛИ Работники.ПериодЗавершения МЕЖДУ &ДатаНачУвольнений И &ДатаКонУвольнений
	|				И Работники.ПричинаИзмененияСостоянияЗавершения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|	И Работники.Сотрудник В
	|			(ВЫБРАТЬ
	|				Сотрудники.Ссылка
	|			ИЗ
	|				ВТСотрудники КАК Сотрудники)
	|	И Работники.ОбособленноеПодразделениеЗавершения В(&Организация)
	|	И ПериодыПерекрытия.Период ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Работники.Должность.Наименование КАК Должность,
	|	Работники.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ТОГДА ДОБАВИТЬКДАТЕ(Работники.Период, ДЕНЬ, -1)
	|		ИНАЧЕ Работники.Период
	|	КОНЕЦ КАК ДатаСобытия,
	|	Работники.ПричинаИзмененияСостояния,
	|	Работники.Регистратор.Дата КАК ДатаПриказа,
	|	Работники.Регистратор.Номер КАК НомерПриказа,
	|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
	|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд.Наименование, """") КАК ТарифныйРазряд,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
	|				ТОГДА РазмерыТарифныхРазрядов.Размер
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Размер
	|		КОНЕЦ, 0) КАК Ставка,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
	|				ТОГДА РазмерыТарифныхРазрядов.Валюта.Наименование
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта.Наименование
	|		КОНЕЦ, """") КАК ИмяВалюты,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
	|				ТОГДА РазмерыТарифныхРазрядов.Валюта
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта
	|		КОНЕЦ, &РеглВалюта) КАК Валюта,
	|	Работники.Сотрудник.Физлицо КАК ФизЛицо
	|ИЗ
	|	ВТДвиженияРаботника КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВложенныйЗапрос.ДатаПеревода КАК ДатаПеревода,
	|			ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|			ВЫБОР
	|				КОГДА ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <= ВложенныйЗапрос.ДатаПеревода
	|						И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|				ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ТребуетВводаТарифногоРазряда
	|			КОНЕЦ КАК ТребуетВводаТарифногоРазряда,
	|			ВЫБОР
	|				КОГДА ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <= ВложенныйЗапрос.ДатаПеревода
	|						И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта1Завершения
	|				ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта1
	|			КОНЕЦ КАК Валюта,
	|			ВЫБОР
	|				КОГДА ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <= ВложенныйЗапрос.ДатаПеревода
	|						И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1Завершения
	|				ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1
	|			КОНЕЦ КАК ТарифныйРазряд,
	|			ЕСТЬNULL(ВЫБОР
	|					КОГДА ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <= ВложенныйЗапрос.ДатаПеревода
	|							И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА ВЫБОР
	|								КОГДА ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|									ТОГДА 0
	|								ИНАЧЕ ВЫБОР
	|										КОГДА ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ПроизвольнаяФормулаРасчета
	|											ТОГДА ВЫБОР
	|													КОГДА Показатели.Показатель1 В (&ТарифнаяСтавкаОклад)
	|															ИЛИ Показатели.Показатель1.ТарифнаяСтавка
	|														ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель1Завершения
	|													КОГДА Показатели.Показатель2 В (&ТарифнаяСтавкаОклад)
	|															ИЛИ Показатели.Показатель2.ТарифнаяСтавка
	|														ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель2Завершения
	|													КОГДА Показатели.Показатель3 В (&ТарифнаяСтавкаОклад)
	|															ИЛИ Показатели.Показатель3.ТарифнаяСтавка
	|														ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель3Завершения
	|													КОГДА Показатели.Показатель4 В (&ТарифнаяСтавкаОклад)
	|															ИЛИ Показатели.Показатель4.ТарифнаяСтавка
	|														ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель4Завершения
	|													КОГДА Показатели.Показатель5 В (&ТарифнаяСтавкаОклад)
	|															ИЛИ Показатели.Показатель5.ТарифнаяСтавка
	|														ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель5Завершения
	|													КОГДА Показатели.Показатель6 В (&ТарифнаяСтавкаОклад)
	|															ИЛИ Показатели.Показатель6.ТарифнаяСтавка
	|														ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель6Завершения
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель1Завершения
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ТребуетВводаТарифногоРазряда
	|								ТОГДА 0
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ПроизвольнаяФормулаРасчета
	|										ТОГДА ВЫБОР
	|												КОГДА Показатели.Показатель1 В (&ТарифнаяСтавкаОклад)
	|														ИЛИ Показатели.Показатель1.ТарифнаяСтавка
	|													ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель1
	|												КОГДА Показатели.Показатель2 В (&ТарифнаяСтавкаОклад)
	|														ИЛИ Показатели.Показатель2.ТарифнаяСтавка
	|													ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель2
	|												КОГДА Показатели.Показатель3 В (&ТарифнаяСтавкаОклад)
	|														ИЛИ Показатели.Показатель3.ТарифнаяСтавка
	|													ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель3
	|												КОГДА Показатели.Показатель4 В (&ТарифнаяСтавкаОклад)
	|														ИЛИ Показатели.Показатель4.ТарифнаяСтавка
	|													ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель4
	|												КОГДА Показатели.Показатель5 В (&ТарифнаяСтавкаОклад)
	|														ИЛИ Показатели.Показатель5.ТарифнаяСтавка
	|													ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель5
	|												КОГДА Показатели.Показатель6 В (&ТарифнаяСтавкаОклад)
	|														ИЛИ Показатели.Показатель6.ТарифнаяСтавка
	|													ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель6
	|												ИНАЧЕ 0
	|											КОНЕЦ
	|									ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель1
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОНЕЦ, 0) КАК Размер
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РаботникиОрганизаций.Период КАК ДатаПеревода,
	|				РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|				МАКСИМУМ(ПлановыеНачисленияРаботниковОрганизаций.Период) КАК Период
	|			ИЗ
	|				ВТДвиженияРаботника КАК РаботникиОрганизаций
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|					ПО РаботникиОрганизаций.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|						И РаботникиОрганизаций.Период >= ПлановыеНачисленияРаботниковОрганизаций.Период
	|			ГДЕ
	|				ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизаций.Период,
	|				РаботникиОрганизаций.Сотрудник) КАК ВложенныйЗапрос
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						МАКСИМУМ(ВЫБОР
	|								КОГДА Показатели.НомерСтроки = 1
	|									ТОГДА Показатели.Показатель
	|								ИНАЧЕ NULL
	|							КОНЕЦ) КАК Показатель1,
	|						МАКСИМУМ(ВЫБОР
	|								КОГДА Показатели.НомерСтроки = 2
	|									ТОГДА Показатели.Показатель
	|								ИНАЧЕ NULL
	|							КОНЕЦ) КАК Показатель2,
	|						МАКСИМУМ(ВЫБОР
	|								КОГДА Показатели.НомерСтроки = 3
	|									ТОГДА Показатели.Показатель
	|								ИНАЧЕ NULL
	|							КОНЕЦ) КАК Показатель3,
	|						МАКСИМУМ(ВЫБОР
	|								КОГДА Показатели.НомерСтроки = 4
	|									ТОГДА Показатели.Показатель
	|								ИНАЧЕ NULL
	|							КОНЕЦ) КАК Показатель4,
	|						МАКСИМУМ(ВЫБОР
	|								КОГДА Показатели.НомерСтроки = 5
	|									ТОГДА Показатели.Показатель
	|								ИНАЧЕ NULL
	|							КОНЕЦ) КАК Показатель5,
	|						МАКСИМУМ(ВЫБОР
	|								КОГДА Показатели.НомерСтроки = 6
	|									ТОГДА Показатели.Показатель
	|								ИНАЧЕ NULL
	|							КОНЕЦ) КАК Показатель6,
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Период КАК Период,
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение,
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ДокументОснование КАК ДокументОснование
	|					ИЗ
	|						ВТДвиженияРаботника КАК ВТДвиженияРаботника
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
	|								ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
	|								ПО (ВЫБОР
	|										КОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ПериодЗавершения <= ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Период
	|												И ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|											ТОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаЗавершения
	|										ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета
	|									КОНЕЦ = Показатели.Ссылка)
	|							ПО ВТДвиженияРаботника.Сотрудник = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник
	|								И ВТДвиженияРаботника.Период >= ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Период
	|					ГДЕ
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета.ЗачетОтработанногоВремени
	|						И ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Период,
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ДокументОснование,
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаИзмерение,
	|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник) КАК Показатели
	|					ПО ПлановыеНачисленияРаботниковОрганизаций.Период = Показатели.Период
	|						И ПлановыеНачисленияРаботниковОрганизаций.Сотрудник = Показатели.Сотрудник
	|						И ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = Показатели.ВидРасчетаИзмерение
	|						И ПлановыеНачисленияРаботниковОрганизаций.Организация = Показатели.Организация
	|				ПО ВложенныйЗапрос.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|					И ВложенныйЗапрос.Период = ПлановыеНачисленияРаботниковОрганизаций.Период
	|					И (ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО)) КАК ПлановыеНачисленияРаботниковОрганизаций
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВложенныйЗапрос.ДатаПеревода КАК ДатаПеревода,
	|				РазмерТарифныхСтавок.Валюта КАК Валюта,
	|				РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
	|				РазмерТарифныхСтавок.Размер КАК Размер
	|			ИЗ
	|				(ВЫБРАТЬ
	|					РаботникиОрганизаций.Период КАК ДатаПеревода,
	|					РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
	|					МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК Период
	|				ИЗ
	|					ВТДвиженияРаботника КАК РаботникиОрганизаций
	|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|						ПО РаботникиОрганизаций.Период >= РазмерТарифныхСтавок.Период
	|				
	|				СГРУППИРОВАТЬ ПО
	|					РаботникиОрганизаций.Период,
	|					РазмерТарифныхСтавок.ТарифныйРазряд) КАК ВложенныйЗапрос
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|					ПО ВложенныйЗапрос.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
	|						И ВложенныйЗапрос.Период = РазмерТарифныхСтавок.Период) КАК РазмерыТарифныхРазрядов
	|			ПО ПлановыеНачисленияРаботниковОрганизаций.ДатаПеревода = РазмерыТарифныхРазрядов.ДатаПеревода
	|				И ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд = РазмерыТарифныхРазрядов.ТарифныйРазряд
	|		ПО Работники.Период = ПлановыеНачисленияРаботниковОрганизаций.ДатаПеревода
	|			И Работники.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	ДатаСобытия
	|ИТОГИ ПО
	|	ФизЛицо";
		
	// Выгрузили в общую таблицу данные по кадровым документам.
	ТаблицаКадрыОтпускаУдержания = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ТарифнаяСтавка"); 
	Для каждого СтрокаФизЛицо Из ТаблицаКадрыОтпускаУдержания.Строки Цикл
		Для каждого СтрокаТЗ Из СтрокаФизЛицо.Строки Цикл
			
			ОписаниеТарифнаяСтавка = Формат(СтрокаТЗ.Ставка,"ЧЦ=15; ЧДЦ=2; ЧН=' '");
			Если СтрокаТЗ.Валюта = РеглВалюта Тогда
				Если СтрокаТЗ.ТребуетВводаТарифногоРазряда Тогда
					ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка	+ " (" + СтрокаТЗ.ТарифныйРазряд + ")"
				КонецЕсли;
			Иначе
				ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка + " (" + СтрокаТЗ.ИмяВалюты + 
				?(СтрокаТЗ.ТребуетВводаТарифногоРазряда,", " + СтрокаТЗ.ТарифныйРазряд,"") + ")"
			КонецЕсли;
			СтрокаТЗ.ТарифнаяСтавка = ОписаниеТарифнаяСтавка
		КонецЦикла; 
	КонецЦикла; 
	
	// ОТПУСКА
	СписокОтпусков	=	Новый СписокЗначений;
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебный);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
	СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("СписокОтпусков",	СписокОтпусков);
	Запрос.УстановитьПараметр("ЕжегодныйОтпуск",Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
	Запрос.УстановитьПараметр("Праздник",	Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник);
	Запрос.Текст = ФормированиеПечатныхФормДополнительный.ТекстЗапросаПоОтпускамДляЛицевогоСчета();
	ОтпускаФизЛицо	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Добавим поля в общую таблицу для записи данных по отпуску.
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ВидОтпуска");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДатаПриказаОтпуск");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("НомерПриказаОтпуск");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("РабочийГодС");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("РабочийГодПо");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДнейОтпуска");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДнейОтпускаДоп");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДатаС");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ДатаПо");
	Инд = 0;
	
	// Выгрузим в общую таблицу данные по отпуску.
	
	Пока ОтпускаФизЛицо.Следующий() Цикл
		СтрокаСотрудника = ТаблицаКадрыОтпускаУдержания.Строки.Найти(ОтпускаФизЛицо.ФизЛицо, "ФизЛицо");
		Если СтрокаСотрудника = Неопределено тогда
			СтрокаСотрудника = ТаблицаКадрыОтпускаУдержания.Строки.Добавить();
			СтрокаСотрудника.ФизЛицо = ОтпускаФизЛицо.ФизЛицо;
		КонецЕсли;
		Отпуска = ОтпускаФизЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ИндексКадровыхДок = СтрокаСотрудника.Строки.Количество()-1;
		
		Пока Отпуска.Следующий() Цикл
			Если Инд <= ИндексКадровыхДок Тогда
				СтрокаДанных = СтрокаСотрудника.Строки[Инд];
			Иначе
				СтрокаДанных = СтрокаСотрудника.Строки.Добавить();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(СтрокаДанных,Отпуска);
			Инд = Инд + 1;
		КонецЦикла;
	КонецЦикла;
	
	// УДЕРЖАНИЯ
	Запрос.Текст =	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УдержанияРаботниковОрганизации.Период КАК Период,
	|	УдержанияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|	УдержанияРаботниковОрганизации.Действие,
	|	УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование,
	|	УдержанияРаботниковОрганизации.Показатель1,
	|	УдержанияРаботниковОрганизации.Валюта1,
	|	УдержанияРаботниковОрганизации.ПериодЗавершения,
	|	УдержанияРаботниковОрганизации.Показатель1Завершения,
	|	УдержанияРаботниковОрганизации.Валюта1Завершения,
	|	УдержанияРаботниковОрганизации.ДействиеЗавершения,
	|	УдержанияРаботниковОрганизации.ФизЛицо
	|ПОМЕСТИТЬ ВТДанныеОбУдержаниях
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|ГДЕ
	|	УдержанияРаботниковОрганизации.Период <= &ДатаАктуальностиПо
	|	И УдержанияРаботниковОрганизации.ФизЛицо В(&ФизЛицо)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета,
	|	ДокументОснование,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачалаУдержаний.ПериодУдержанияС КАК ПериодУдержанияС,
	|	ЕСТЬNULL(НачалаУдержаний.ВидРасчета.Наименование, """") КАК ВидУдержания,
	|	НачалаУдержаний.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	НачалаУдержаний.ДокументОснование.Дата КАК ДатаДок,
	|	НачалаУдержаний.ДокументОснование.Номер КАК НомерДок,
	|	НачалаУдержаний.Размер,
	|	НачалаУдержаний.Валюта,
	|	НачалаУдержаний.Валюта.Наименование КАК ИмяВалюты,
	|	ЕСТЬNULL(МИНИМУМ(ОкончанияУдержаний.Период), """") КАК ПериодУдержанияПо,
	|	НачалаУдержаний.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	(ВЫБРАТЬ
	|		&ДатаАктуальностиС КАК ПериодУдержанияС,
	|		УдержанияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|					И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА УдержанияРаботниковОрганизации.ДействиеЗавершения
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Действие
	|		КОНЕЦ КАК Действие,
	|		УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|					И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА УдержанияРаботниковОрганизации.Показатель1Завершения
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Показатель1
	|		КОНЕЦ КАК Размер,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|					И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА УдержанияРаботниковОрганизации.Валюта1Завершения
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Валюта1
	|		КОНЕЦ КАК Валюта,
	|		УдержанияРаботниковОрганизации.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|				&ДатаАктуальностиС,
	|				ФизЛицо В (&Физлицо)
	|					И Организация В (&ГоловнаяОрганизация)) КАК УдержанияРаботниковОрганизации
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиС
	|						И УдержанияРаботниковОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА УдержанияРаботниковОрганизации.ДействиеЗавершения
	|				ИНАЧЕ УдержанияРаботниковОрганизации.Действие
	|			КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.Период,
	|		УдержанияРаботниковОрганизации.ВидРасчета,
	|		УдержанияРаботниковОрганизации.Действие,
	|		УдержанияРаботниковОрганизации.ДокументОснование,
	|		УдержанияРаботниковОрганизации.Показатель1,
	|		УдержанияРаботниковОрганизации.Валюта1,
	|		УдержанияРаботниковОрганизации.ФизЛицо
	|	ИЗ
	|		ВТДанныеОбУдержаниях КАК УдержанияРаботниковОрганизации
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.Период > &ДатаАктуальностиС
	|		И УдержанияРаботниковОрганизации.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.ПериодЗавершения,
	|		УдержанияРаботниковОрганизации.ВидРасчета,
	|		УдержанияРаботниковОрганизации.ДействиеЗавершения,
	|		УдержанияРаботниковОрганизации.ДокументОснование,
	|		УдержанияРаботниковОрганизации.Показатель1Завершения,
	|		УдержанияРаботниковОрганизации.Валюта1Завершения,
	|		УдержанияРаботниковОрганизации.ФизЛицо
	|	ИЗ
	|		ВТДанныеОбУдержаниях КАК УдержанияРаботниковОрганизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбУдержаниях КАК УдержанияРаботниковОрганизацииПроверка
	|			ПО УдержанияРаботниковОрганизации.ВидРасчета = УдержанияРаботниковОрганизацииПроверка.ВидРасчета
	|				И УдержанияРаботниковОрганизации.ДокументОснование = УдержанияРаботниковОрганизацииПроверка.ДокументОснование
	|				И (УдержанияРаботниковОрганизацииПроверка.Период > УдержанияРаботниковОрганизации.Период)
	|				И (УдержанияРаботниковОрганизацииПроверка.Период <= УдержанияРаботниковОрганизации.ПериодЗавершения)
	|				И УдержанияРаботниковОрганизации.ФизЛицо <= УдержанияРаботниковОрганизацииПроверка.ФизЛицо
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.ПериодЗавершения > &ДатаАктуальностиС
	|		И УдержанияРаботниковОрганизации.ПериодЗавершения <= &ДатаАктуальностиПо
	|		И УдержанияРаботниковОрганизации.ДействиеЗавершения <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|		И УдержанияРаботниковОрганизацииПроверка.ВидРасчета ЕСТЬ NULL ) КАК НачалаУдержаний
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДОБАВИТЬКДАТЕ(УдержанияРаботниковОрганизации.Период, ДЕНЬ, -1) КАК Период,
	|			УдержанияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|			УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование
	|		ИЗ
	|			ВТДанныеОбУдержаниях КАК УдержанияРаботниковОрганизации
	|		ГДЕ
	|			УдержанияРаботниковОрганизации.Период > &ДатаАктуальностиС
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДОБАВИТЬКДАТЕ(УдержанияРаботниковОрганизации.ПериодЗавершения, ДЕНЬ, -1),
	|			УдержанияРаботниковОрганизации.ВидРасчета,
	|			УдержанияРаботниковОрганизации.ДокументОснование
	|		ИЗ
	|			ВТДанныеОбУдержаниях КАК УдержанияРаботниковОрганизации
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбУдержаниях КАК УдержанияРаботниковОрганизацииПроверка
	|				ПО УдержанияРаботниковОрганизации.ВидРасчета = УдержанияРаботниковОрганизацииПроверка.ВидРасчета
	|					И УдержанияРаботниковОрганизации.ДокументОснование = УдержанияРаботниковОрганизацииПроверка.ДокументОснование
	|					И (УдержанияРаботниковОрганизацииПроверка.Период > УдержанияРаботниковОрганизации.Период)
	|					И (УдержанияРаботниковОрганизацииПроверка.Период <= УдержанияРаботниковОрганизации.ПериодЗавершения)
	|		ГДЕ
	|			УдержанияРаботниковОрганизации.ПериодЗавершения > &ДатаАктуальностиС
	|			И УдержанияРаботниковОрганизацииПроверка.ВидРасчета ЕСТЬ NULL ) КАК ОкончанияУдержаний
	|		ПО НачалаУдержаний.ВидРасчета = ОкончанияУдержаний.ВидРасчета
	|			И НачалаУдержаний.ДокументОснование = ОкончанияУдержаний.ДокументОснование
	|			И НачалаУдержаний.ПериодУдержанияС <= ОкончанияУдержаний.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	НачалаУдержаний.ПериодУдержанияС,
	|	НачалаУдержаний.ВидРасчета,
	|	НачалаУдержаний.ДокументОснование,
	|	НачалаУдержаний.Размер,
	|	НачалаУдержаний.Валюта,
	|	НачалаУдержаний.ВидРасчета.СпособРасчета,
	|	НачалаУдержаний.ДокументОснование.Дата,
	|	НачалаУдержаний.ДокументОснование.Номер,
	|	НачалаУдержаний.Валюта.Наименование,
	|	НачалаУдержаний.ФизЛицо,
	|	ЕСТЬNULL(НачалаУдержаний.ВидРасчета.Наименование, """")
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения < ПогашениеЗаймовРаботникамиОрганизаций.ДатаДокумента
	|			ТОГДА ПогашениеЗаймовРаботникамиОрганизаций.ДатаДокумента
	|		ИНАЧЕ ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения
	|	КОНЕЦ,
	|	""Погашение займа"",
	|	ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ФиксированнойСуммой),
	|	ПогашениеЗаймовРаботникамиОрганизаций.ДатаДокумента,
	|	ПогашениеЗаймовРаботникамиОрганизаций.НомерДокумента,
	|	ПогашениеЗаймовРаботникамиОрганизаций.СуммаЗайма,
	|	ПогашениеЗаймовРаботникамиОрганизаций.ВалютаДокумента,
	|	ПогашениеЗаймовРаботникамиОрганизаций.ВалютаДокумента.Наименование,
	|	ДОБАВИТЬКДАТЕ(ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения, МЕСЯЦ, ПогашениеЗаймовРаботникамиОрганизаций.СрокПогашения),
	|	ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо
	|ИЗ
	|	РегистрСведений.СведенияОЗаймах КАК ПогашениеЗаймовРаботникамиОрганизаций
	|ГДЕ
	|	ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения <= &ДатаАктуальностиПо
	|	И ДОБАВИТЬКДАТЕ(ПогашениеЗаймовРаботникамиОрганизаций.НачалоПогашения, МЕСЯЦ, ПогашениеЗаймовРаботникамиОрганизаций.СрокПогашения) >= &ДатаАктуальностиС
	|	И ПогашениеЗаймовРаботникамиОрганизаций.ОтражатьВБухгалтерскомУчете
	|	И ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо В(&ФизЛицо)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодУдержанияС,
	|	ВидУдержания,
	|	ДатаДок
	|ИТОГИ ПО
	|	ФизЛицо";
		
	Удержания = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Добавим поля в общую таблицу для  записи данных по удержаниям.
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ВидУдержания");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ПериодУдержанияС");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("ПериодУдержанияПо");
	ТаблицаКадрыОтпускаУдержания.Колонки.Добавить("СуммаУдержания");
	
	Пока Удержания.Следующий() Цикл
		СтрокаСотрудника = ТаблицаКадрыОтпускаУдержания.Строки.Найти(Удержания.ФизЛицо, "ФизЛицо");
		Если СтрокаСотрудника = Неопределено тогда
			СтрокаСотрудника = ТаблицаКадрыОтпускаУдержания.Строки.Добавить();
			СтрокаСотрудника.ФизЛицо = Удержания.ФизЛицо;
		КонецЕсли;
		ВыборкаРезультата = Удержания.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Инд = 0;
		ИндексКадровыхДок = СтрокаСотрудника.Строки.Количество()-1;
		Пока ВыборкаРезультата.Следующий()	Цикл
			
			Если Инд <= ИндексКадровыхДок Тогда
				СтрокаДанных = СтрокаСотрудника.Строки[Инд];
			Иначе
				СтрокаДанных = СтрокаСотрудника.Строки.Добавить();
			КонецЕсли;
			
			СтрокаДанных.ВидУдержания     = ВыборкаРезультата.ВидУдержания + Символы.ПС + "(" + ВыборкаРезультата.НомерДок + " от " + Формат(ВыборкаРезультата.ДатаДок,"ДФ=dd.MM.yyyy") + ")";
			СтрокаДанных.ПериодУдержанияС = ВыборкаРезультата.ПериодУдержанияС;
			СтрокаДанных.ПериодУдержанияПо = ВыборкаРезультата.ПериодУдержанияПо;
			
			Если ВыборкаРезультата.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом Тогда
				СтрокаДанных.СуммаУдержания = "" + ВыборкаРезультата.Размер + "(%)";
			Иначе
				Если ВыборкаРезультата.Валюта = РеглВалюта ИЛИ НЕ ЗначениеЗаполнено(ВыборкаРезультата.ИмяВалюты) Тогда
					СтрокаДанных.СуммаУдержания = "" + ВыборкаРезультата.Размер
				Иначе
					СтрокаДанных.СуммаУдержания = Формат(ВыборкаРезультата.Размер,"ЧЦ=15; ЧДЦ=2; ЧН=' '") + " (" + ВыборкаРезультата.ИмяВалюты + ")"
				КонецЕсли;
			КонецЕсли;
			
			Инд = Инд + 1;
			
		КонецЦикла;
	КонецЦикла;
	
	// НАЧИСЛЕНИЯ И УДЕРЖАНИЯ по периодам.
	
	СписокБольничныхЛистов = Новый Массив;
	СписокБольничныхЛистов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС);
	СписокПособий = Новый Массив;
	СписокПособий.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды);
	СписокПособий.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай);
	СписокПособий.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание);
	СписокПособий.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность);
	СписокПособий.Добавить(Перечисления.ВидыПособийСоциальногоСтрахования.ПустаяСсылка());
	
	СписокПовременныхВР = Новый Массив;
	СписокПовременныхВР.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке);
	СписокПовременныхВР.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке);
	СписокПовременныхВР.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням);
	СписокПовременныхВР.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам);
	
	МассивУдержанийИЛ = Новый Массив;
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентом);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомБезБЛ);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПределаБезБЛ);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой);
	МассивУдержанийИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела);
			
	Запрос.УстановитьПараметр("Приход", 	ВидДвиженияНакопления.Приход);
	Авансы = Новый Массив;
	Авансы.Добавить(Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца);
	Авансы.Добавить(Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс);
	Запрос.УстановитьПараметр("Аванс",		Авансы);
	Запрос.УстановитьПараметр("ВидСтроки",  Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление);
	Запрос.УстановитьПараметр("Больничные", СписокБольничныхЛистов);
	Запрос.УстановитьПараметр("Пособия", СписокПособий);
	Запрос.УстановитьПараметр("ИсполнительныеЛисты", МассивУдержанийИЛ);
	Запрос.УстановитьПараметр("Повременно", СписокПовременныхВР);
	Запрос.УстановитьПараметр("Сдельно",	Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(Данные.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	Данные.ПериодДействия КАК ПериодДействия,
	|	Данные.ВидРасчета,
	|	Данные.Группа,
	|	СУММА(Данные.Результат) КАК Результат,
	|	СУММА(Данные.ОтработаноДней) КАК ОтработаноДней,
	|	СУММА(Данные.ОтработаноЧасов) КАК ОтработаноЧасов,
	|	СУММА(Данные.НормаДней) КАК НормаДней,
	|	СУММА(Данные.НормаЧасов) КАК НормаЧасов,
	|	Данные.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации КАК ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета В (&Больничные) 
	|				И ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ВидПособияСоциальногоСтрахования В (&Пособия) 
	|				ТОГДА ""Больничные""
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета = &Сдельно
	|				ТОГДА ""Сдельно""
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета В (&Повременно)
	|				ТОГДА ""Повременно""
	|			ИНАЧЕ ""ДругиеНачисления""
	|		КОНЕЦ КАК ВидРасчета,
	|		""Начисления"" КАК Группа,
	|		ОсновныеНачисленияРаботниковОрганизации.Результат КАК Результат,
	|		ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней КАК ОтработаноДней,
	|		ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов КАК ОтработаноЧасов,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета В (&Больничные)
	|				ТОГДА ОсновныеНачисленияРаботниковОрганизации.ПериодДействия
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации
	|		КОНЕЦ КАК ПериодДействия,
	|		ОсновныеНачисленияРаботниковОрганизации.НормаДней КАК НормаДней,
	|		ОсновныеНачисленияРаботниковОрганизации.НормаЧасов КАК НормаЧасов,
	|		ОсновныеНачисленияРаботниковОрганизации.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизации
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И (НЕ(ОсновныеНачисленияРаботниковОрганизации.Результат = 0
	|					И ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней = 0
	|					И ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов = 0))
	|		И ОсновныеНачисленияРаботниковОрганизации.Сотрудник В
	|				(ВЫБРАТЬ
	|					Сотрудники.Ссылка
	|				ИЗ
	|					ВТСотрудники КАК Сотрудники)
	|		И (НЕ ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|		И ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение В (&Организация)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации,
	|		""ДругиеНачисления"",
	|		""Начисления"",
	|		ДополнительныеНачисленияРаботниковОрганизации.Результат,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизации
	|	ГДЕ
	|		ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И ДополнительныеНачисленияРаботниковОрганизации.Результат <> 0
	|		И ДополнительныеНачисленияРаботниковОрганизации.Сотрудник В
	|				(ВЫБРАТЬ
	|					Сотрудники.Ссылка
	|				ИЗ
	|					ВТСотрудники КАК Сотрудники)
	|		И (НЕ ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|		И ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение В (&Организация)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета В (&ИсполнительныеЛисты)
	|				ТОГДА ""ИсполнительныеЛисты""
	|			ИНАЧЕ УдержанияРаботниковОрганизации.ВидРасчета
	|		КОНЕЦ,
	|		""Удержания"",
	|		УдержанияРаботниковОрганизации.Результат,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		УдержанияРаботниковОрганизации.ФизЛицо
	|	ИЗ
	|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И УдержанияРаботниковОрганизации.Результат <> 0
	|		И УдержанияРаботниковОрганизации.Организация В (&ГоловнаяОрганизация)
	|		И УдержанияРаботниковОрганизации.ОбособленноеПодразделение В (&Организация)
	|		И УдержанияРаботниковОрганизации.ФизЛицо В (&ФизЛицо)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.Период,
	|		""НДФЛ"",
	|		""Удержания"",
	|		ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
	|					ТОГДА 1
	|				ИНАЧЕ -1
	|			КОНЕЦ * НДФЛРасчетыСБюджетом.Налог,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		НДФЛРасчетыСБюджетом.ФизЛицо
	|	ИЗ
	|		РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И НДФЛРасчетыСБюджетом.ВидСтроки В (ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ЗачетАвансовыхПлатежей))
	|		И НДФЛРасчетыСБюджетом.Организация В (&ГоловнаяОрганизация)
	|		И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
	|		И НДФЛРасчетыСБюджетом.ФизЛицо В (&ФизЛицо)
	|		И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение В (&Организация)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПогашениеЗаймовРаботникамиОрганизаций.Период,
	|		""Погашение займов"",
	|		""Удержания"",
	|		ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг + ПогашениеЗаймовРаботникамиОрганизаций.Проценты,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо
	|	ИЗ
	|		РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций
	|	ГДЕ
	|		ПогашениеЗаймовРаботникамиОрганизаций.ВидДвижения <> &Приход
	|		И ПогашениеЗаймовРаботникамиОрганизаций.Организация В (&Организация)
	|		И ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо В (&ФизЛицо)
	|		И ПогашениеЗаймовРаботникамиОрганизаций.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И ПогашениеЗаймовРаботникамиОрганизаций.УдержаноИзЗарплаты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ),
	|		""Сальдо"",
	|		""Сальдо"",
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаНДФЛКЗачетуКонечныйОстаток,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.ФизЛицо
	|	ИЗ
	|		РегистрНакопления.НДФЛКЗачету.ОстаткиИОбороты(
	|				&ДатаАктуальностиС,
	|				&ДатаАктуальностиПо,
	|				Месяц,
	|				,
	|				Организация В (&Организация)
	|					И Физлицо В (&ФизЛицо)) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ),
	|		""Сальдо"",
	|		""Сальдо"",
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаНДФЛКЗачетуКонечныйОстаток,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.ФизЛицо
	|	ИЗ
	|		РегистрНакопления.НДФЛКЗачету.ОстаткиИОбороты(
	|				&ДатаАктуальностиС,
	|				&ДатаАктуальностиПо,
	|				Месяц,
	|				,
	|				Организация В (&Организация)
	|					И Физлицо В (&ФизЛицо)) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ),
	|		""Сальдо"",
	|		""Сальдо"",
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Физлицо
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.ОстаткиИОбороты(
	|				&ДатаАктуальностиС,
	|				&ДатаАктуальностиПо,
	|				Месяц,
	|				,
	|				Организация В (&Организация)
	|					И Физлицо В (&ФизЛицо)) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ),
	|		""К выплате"",
	|		""КВыплате"",
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Физлицо
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.ОстаткиИОбороты(
	|				&ДатаАктуальностиС,
	|				&ДатаАктуальностиПо,
	|				Месяц,
	|				,
	|				Организация В (&Организация)
	|					И Физлицо В (&ФизЛицо)) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|	ГДЕ
	|		(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.ПериодВзаиморасчетов = НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ)
	|				ИЛИ ВЫБОР
	|					КОГДА ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяССылка)
	|						ТОГДА ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация
	|					ИНАЧЕ ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация.ГоловнаяОрганизация
	|				КОНЕЦ В
	|					(ВЫБРАТЬ
	|						УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
	|					ИЗ
	|						РегистрСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
	|					ГДЕ
	|						(НЕ УчетнаяПолитикаПоПерсоналуОрганизаций.УчетЗадолженностиПоМесяцам)))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаиморасчетыСРаботникамиОрганизаций.ПериодВзаиморасчетов,
	|		""Аванс"",
	|		""Удержания"",
	|		ВзаиморасчетыСРаботникамиОрганизаций.СуммаВзаиморасчетов,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		ВзаиморасчетыСРаботникамиОрганизаций.Физлицо
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботникамиОрганизаций
	|	ГДЕ
	|		ВзаиморасчетыСРаботникамиОрганизаций.Период МЕЖДУ &ДатаАктуальностиС И &ДатаАктуальностиПо
	|		И ВзаиморасчетыСРаботникамиОрганизаций.Организация В (&Организация)
	|		И ВзаиморасчетыСРаботникамиОрганизаций.Физлицо В (&ФизЛицо)
	|		И ВзаиморасчетыСРаботникамиОрганизаций.ХарактерВыплаты В(&Аванс)
	|		И ВзаиморасчетыСРаботникамиОрганизаций.ВидДвижения <> &Приход) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.ВидРасчета,
	|	Данные.Группа,
	|	Данные.ПериодДействия,
	|	Данные.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(Данные.ПериодРегистрации, МЕСЯЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	ФизЛицо";	
	
	РезультатНачислений = Запрос.Выполнить();
	
	
	Группировки = ТиповыеОтчеты.ПолучитьПоляГруппировок(КомпоновщикНастроек);
	ВывестиКарточки(Результат, ДеревоДанных.Строки, 0, Группировки);
	
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	Возврат Результат;
	
КонецФункции

Процедура ПолучитьСпискиФизЛицИСотрудников(СтрокиДеревоДанных, СписокОрганизаций,  СписокГоловнаяОрганизация, СписокФизЛиц)
	
	Для Каждого СтрокаДанных из СтрокиДеревоДанных Цикл
		Если СтрокаДанных.ФизЛицо <> Неопределено тогда
			
			СписокФизЛиц.Добавить(СтрокаДанных.ФизЛицо);
			СписокГоловнаяОрганизация.Добавить(СтрокаДанных.ГоловнаяОрганизация);
			СписокОрганизаций.Добавить(СтрокаДанных.Организация);
			
		ИначеЕсли СтрокаДанных.Строки.Количество() > 0 Тогда
			
			ПолучитьСпискиФизЛицИСотрудников(СтрокаДанных.Строки, СписокОрганизаций,  СписокГоловнаяОрганизация, СписокФизЛиц);
			
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт

	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

Процедура ПрименитьНастройку() Экспорт
	
	Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);

	// Считываение структуры настроек отчета
 	Если Не СохраненнаяНастройка.Пустая() Тогда
		
		СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
		Если Не СтруктураНастроек = Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	КонецЕсли;

КонецПроцедуры

// Настройка отчета при отработки расшифровки
Процедура Настроить(Отбор) Экспорт
	
	// Настройка отбора
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
		Иначе
			ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
		КонецЕсли;
		
		Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
		Иначе
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			Если ЭлементОтбора.Иерархия Тогда
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
				КонецЕсли;
			Иначе
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				КонецЕсли;
			КонецЕсли;
			
			НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
	
КонецПроцедуры


Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
КонецПроцедуры

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	СписокПолейПодстановкиОтборовПоУмолчанию = Новый Соответствие;
	СписокПолейПодстановкиОтборовПоУмолчанию.Вставить("Организация", "ОсновнаяОрганизация");
	
	Возврат Новый Структура("ИспользоватьСобытияПриФормированииОтчета,
	|ПриВыводеЗаголовкаОтчета,
	|ПослеВыводаПанелиПользователя,
	|ПослеВыводаПериода,
	|ПослеВыводаПараметра,
	|ПослеВыводаГруппировки,
	|ПослеВыводаОтбора,
	|ДействияПанелиИзменениеФлажкаДопНастроек,
	|ПриПолучениеНастроекПользователя, 
	|ЗаполнитьОтборыПоУмолчанию, 
	|СписокПолейПодстановкиОтборовПоУмолчанию,
	|СписокДоступныхПредопределенныхНастроек", 
	ложь, ложь, ложь, ложь, ложь, ложь, ложь, ложь, ложь, истина, СписокПолейПодстановкиОтборовПоУмолчанию,);
КонецФункции


Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;


#КонецЕсли

