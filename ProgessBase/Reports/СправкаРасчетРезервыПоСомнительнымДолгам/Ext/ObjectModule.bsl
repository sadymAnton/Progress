#Если Клиент Тогда
	
Перем НП Экспорт;

Функция СформироватьТекстЗапроса()
	
	// Для режима НУ определяется сумма начисленного резерва с начала года и доля, для иллюстрации нормирования по выручке
	Если ВариантОтчета = 2 Тогда
		Текст	= 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(РасчетРезервовПоСомнительнымДолгам.НачисленоНУ),0) КАК НачисленоНУСНачалаГода
		|ИЗ
		|	РегистрСведений.РасчетРезервовПоСомнительнымДолгам КАК РасчетРезервовПоСомнительнымДолгам
		|ГДЕ
		|	РасчетРезервовПоСомнительнымДолгам.Организация = &Организация
		|	И РасчетРезервовПоСомнительнымДолгам.ПериодРасчета >= &ДатаНачГода
		|	И РасчетРезервовПоСомнительнымДолгам.ПериодРасчета <= &ДатаКонцаПрошлогоМесяца
		|	И РасчетРезервовПоСомнительнымДолгам.Активность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК ДоляРезервовПоСомнительнымДолгамНУ
		|;";
	Иначе
		Текст	=
		"ВЫБРАТЬ
		|	0 КАК НачисленоНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК ДоляРезервовПоСомнительнымДолгамНУ
		|;";
		
		
	КонецЕсли;
	
	
	Текст	= Текст +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетРезервовПоСомнительнымДолгам.ПериодРасчета КАК Период,
	|	РасчетРезервовПоСомнительнымДолгам.Контрагент КАК Контрагент,
	|	РасчетРезервовПоСомнительнымДолгам.Контрагент.Наименование КАК КонтрагентНаименование,
	|	РасчетРезервовПоСомнительнымДолгам.ДоговорКонтрагента КАК Договор,
	|	РасчетРезервовПоСомнительнымДолгам.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	|	РасчетРезервовПоСомнительнымДолгам.ДокументРасчетовСКонтрагентом КАК ДокументДолга,
	|	РасчетРезервовПоСомнительнымДолгам.СуммаЗадолженности КАК СуммаДолга,
	|	РасчетРезервовПоСомнительнымДолгам.НачисленоРанееБУ КАК НачисленоРанее,
	|	РасчетРезервовПоСомнительнымДолгам.НачисленоРанееБУ - РасчетРезервовПоСомнительнымДолгам.НачисленоРанееНУ КАК НачисленоРанееПР,
	|	РасчетРезервовПоСомнительнымДолгам.НачисленоБУ КАК Начислено,
	|	РасчетРезервовПоСомнительнымДолгам.НачисленоБУ - РасчетРезервовПоСомнительнымДолгам.НачисленоНУ КАК НачисленоПР,
	|	РасчетРезервовПоСомнительнымДолгам.ВосстановленоБУ КАК Восстановлено,
	|	РасчетРезервовПоСомнительнымДолгам.ВосстановленоБУ - РасчетРезервовПоСомнительнымДолгам.ВосстановленоНУ КАК ВосстановленоПР,
	|	РасчетРезервовПоСомнительнымДолгам.ПрисоединеноБУ КАК Присоединено,
	|	РасчетРезервовПоСомнительнымДолгам.ПрисоединеноБУ КАК ПрисоединеноПР,
	|	РасчетРезервовПоСомнительнымДолгам.НачисленоСНачалаГодаНУ КАК НачисленоСНачалаГодаНУ,
	|	РасчетРезервовПоСомнительнымДолгам.ДатаВозникновенияЗадолженности КАК ДатаВозникновенияЗадолженности,
	|	РасчетРезервовПоСомнительнымДолгам.СрокЗадолженности КАК СрокЗадолженности,
	|	РасчетРезервовПоСомнительнымДолгам.НачисленоРанееБУ + РасчетРезервовПоСомнительнымДолгам.НачисленоБУ - РасчетРезервовПоСомнительнымДолгам.ВосстановленоБУ КАК Остаток,
	|	РасчетРезервовПоСомнительнымДолгам.НачисленоРанееБУ + РасчетРезервовПоСомнительнымДолгам.НачисленоБУ - РасчетРезервовПоСомнительнымДолгам.ВосстановленоБУ - (РасчетРезервовПоСомнительнымДолгам.НачисленоРанееНУ + РасчетРезервовПоСомнительнымДолгам.НачисленоНУ - РасчетРезервовПоСомнительнымДолгам.ВосстановленоНУ) КАК ОстатокПР,
	|	РасчетРезервовПоСомнительнымДолгам.СуммаЗадолженности - РасчетРезервовПоСомнительнымДолгам.НачисленоРанееБУ - РасчетРезервовПоСомнительнымДолгам.НачисленоБУ + РасчетРезервовПоСомнительнымДолгам.ВосстановленоБУ КАК Остаток2,
	|	РасчетРезервовПоСомнительнымДолгам.СуммаЗадолженности - РасчетРезервовПоСомнительнымДолгам.НачисленоРанееБУ - РасчетРезервовПоСомнительнымДолгам.НачисленоБУ + РасчетРезервовПоСомнительнымДолгам.ВосстановленоБУ - (РасчетРезервовПоСомнительнымДолгам.СуммаЗадолженности - РасчетРезервовПоСомнительнымДолгам.НачисленоРанееНУ - РасчетРезервовПоСомнительнымДолгам.НачисленоНУ + РасчетРезервовПоСомнительнымДолгам.ВосстановленоНУ) КАК Остаток2ПР,
	|	ВЫБОР
	|		КОГДА РасчетРезервовПоСомнительнымДолгам.НачисленоРанееБУ = 0
	|			ТОГДА 0
	|		ИНАЧЕ РасчетРезервовПоСомнительнымДолгам.ВосстановленоБУ / РасчетРезервовПоСомнительнымДолгам.НачисленоРанееБУ
	|	КОНЕЦ КАК ДоляОплаты
	|ИЗ
	|	РегистрСведений.РасчетРезервовПоСомнительнымДолгам КАК РасчетРезервовПоСомнительнымДолгам
	|ГДЕ
	|	РасчетРезервовПоСомнительнымДолгам.Организация = &Организация
	|	И РасчетРезервовПоСомнительнымДолгам.ПериодРасчета >= &ДатаНач
	|	И РасчетРезервовПоСомнительнымДолгам.ПериодРасчета <= &ДатаКон
	|	И РасчетРезервовПоСомнительнымДолгам.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	КонтрагентНаименование,
	|	ДоговорНаименование,
	|	ДокументДолга
	|ИТОГИ
	|	СУММА(СуммаДолга),
	|	СУММА(НачисленоРанее),
	|	СУММА(НачисленоРанееПР),
	|	СУММА(Начислено),
	|	СУММА(НачисленоПР),
	|	СУММА(Восстановлено),
	|	СУММА(ВосстановленоПР),
	|	СУММА(Присоединено),
	|	СУММА(ПрисоединеноПР),
	|	СУММА(НачисленоСНачалаГодаНУ),
	|	МИНИМУМ(ДатаВозникновенияЗадолженности),
	|	МИНИМУМ(СрокЗадолженности),
	|	СУММА(Остаток),
	|	СУММА(ОстатокПР),
	|	СУММА(Остаток2),
	|	СУММА(Остаток2ПР),
	|	МИНИМУМ(ДоляОплаты)
	|ПО
	|	Период,
	|	Контрагент,
	|	Договор,
	|	ДокументДолга";
	
	Если ВариантОтчета = 2 Тогда
		Текст = СтрЗаменить(Текст, ".НачисленоРанееБУ",  ".НачисленоРанееНУ");
		Текст = СтрЗаменить(Текст, ".НачисленоБУ",  ".НачисленоНУ");
		Текст = СтрЗаменить(Текст, ".ВосстановленоБУ",  ".ВосстановленоНУ");
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
	
	ПериодРегистрации = ?(ПериодРегистрации = '00010101000000', ТекущаяДата(), ПериодРегистрации);
	
	ДатаНач = НачалоМесяца(ПериодРегистрации);
	ДатаКон  = КонецМесяца(ПериодРегистрации);
	ДатаКонцаПрошлогоМесяца = КонецМесяца(НачалоМесяца(ПериодРегистрации) -1);
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты окончания периода");
		Возврат;
	КонецЕсли;
	НачалоПериода = НачалоДня(ДатаНач);
	КонецПериода  = КонецДня(ДатаКон);
	ДоляРезервовПоСомнительнымДолгамНУ 	= 0;
	СуммаВыручки 						= 0;
	
	ДокументРезультат.Очистить();
	
	Макет      = ПолучитьМакет("Отчет");
	МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
	
	ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
	
	
	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, Ложь, Организация, "регл");
	
	Если Не УчетнаяПолитика = Неопределено И УчетнаяПолитика.Количество() > 0 Тогда
		ФормироватьБУ = УчетнаяПолитика.ФормироватьРезервыПоСомнительнымДолгамБУ;
		ФормироватьНУ = УчетнаяПолитика.ФормироватьРезервыПоСомнительнымДолгамНУ;
		ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18;
		
		Если Не ФормироватьБУ И Не ФормироватьНУ Тогда
			Возврат;
		ИначеЕсли Не ФормироватьБУ И ВариантОтчета = 1  Тогда
			Возврат;
		ИначеЕсли Не ФормироватьНУ И ВариантОтчета = 2  Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("ДатаНачГода", НачалоГода(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКонцаПрошлогоМесяца",  ДатаКонцаПрошлогоМесяца);
	Запрос.УстановитьПараметр("Организация",         Организация);
	
	ОграниченияПоПостроителюОтчета = БухгалтерскиеОтчеты.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
	
	Если Не ПустаяСтрока(ОграниченияПоПостроителюОтчета) Тогда
		
		ОграниченияПоПостроителюОтчета = " И " + ОграниченияПоПостроителюОтчета;
		ОграниченияПоПостроителюОтчета = СтрЗаменить(ОграниченияПоПостроителюОтчета, "Субконто1", "Контрагент");
	КонецЕсли;
	
	Запрос.Текст = СформироватьТекстЗапроса();
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Организация", "&Организация" + ОграниченияПоПостроителюОтчета);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если ВариантОтчета = 2 Тогда
		
		СтруктураПараметров = Новый Структура;		
		СтруктураПараметров.Вставить("Организация",       Организация);
		СтруктураПараметров.Вставить("Дата",              ДатаКон);
		СуммаВыручки = НалоговыйУчет.ОпределитьНормуРасходовПоВыручке(СтруктураПараметров, 10);
		
	КонецЕсли;
	
	ОбластьШапка    = Макет.ПолучитьОбласть("Шапка" + ?(ВариантОтчета = 2, "НУ", ""));
	ОбластьСтрока1  = Макет.ПолучитьОбласть("Строка1" + ?(ВариантОтчета = 2, "НУ", ""));
	ОбластьСтрока2  = Макет.ПолучитьОбласть("Строка2" + ?(ВариантОтчета = 2, "НУ", ""));
	ОбластьСтрока3  = Макет.ПолучитьОбласть("Строка3" + ?(ВариантОтчета = 2, "НУ", ""));
	ОбластьСтрокаПР = Макет.ПолучитьОбласть("СтрокаПР");
	
	ОбластьИтого            = Макет.ПолучитьОбласть("Итого" + ?(ВариантОтчета = 2, "НУ", ""));
	ОбластьИтогоПР          = Макет.ПолучитьОбласть("ИтогоПР");
	ОбластьОкончаниеТаблицы = Макет.ПолучитьОбласть("ОкончаниеТаблицы" + ?(ВариантОтчета = 2, "НУ", ""));
	ОбластьПодвал           = МакетОбщий.ПолучитьОбласть("Подвал");
	
	Если ВариантОтчета = 2 Тогда
		ВыборкаНачисленоСНачалаГода = Результат[0].Выбрать();
		ВыборкаНачисленоСНачалаГода.Следующий();
		НачисленоСНачалаГода = ОКР(ВыборкаНачисленоСНачалаГода.НачисленоНУСНачалаГода,0);

		// Рассчитаем долю принимаемых расходов в НУ.
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", Организация);
		СтруктураПараметров.Вставить("Дата", ДатаКон);
		СтруктураПараметров.Вставить("УчетнаяПолитика", УчетнаяПолитика);
		
		ДоляРезервовПоСомнительнымДолгамНУ = Окр(УправлениеВзаиморасчетами.ПровестиРасчетРезервовПоСомнительнымДолгам(СтруктураПараметров, Ложь, СуммаВыручки, Ложь), 8);
	КонецЕсли;	
	
	ВыборкаПериод = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПериод.Следующий() Цикл
		
		ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоМесяца(ВыборкаПериод.Период), КонецМесяца(ВыборкаПериод.Период), "ФП = Истина");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаКон);
		НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
		ЗаголовокОтчета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ВыборкаПериод.Период);
		ЗаголовокОтчета.Параметры.НазваниеОтчета      = "Резервы по сомнительным долгам (" +?(ВариантОтчета = 2, "налоговый учет", "бухгалтерский учет") + ")";
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		
		СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
		Если Не ПустаяСтрока(СтрОтбор) Тогда
			ОбластьОтбор = МакетОбщий.ПолучитьОбласть("СтрокаОтбор");
			ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
			ДокументРезультат.Вывести(ОбластьОтбор);
		КонецЕсли;
		Если ВариантОтчета = 2 Тогда
			ОбластьШапка.Параметры.ТекстШапки = "* " + ДоляРезервовПоСомнительнымДолгамНУ;
		КонецЕсли;
		ОбластьШапка.Параметры.ДатаКон = Формат(ДатаКон, "ДЛФ=D");
		ДокументРезультат.Вывести(ОбластьШапка);
		
		// Параметр для показа заголовка
		ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
		
		ВыборкаКонтрагент = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			ОбластьСтрока1.Параметры.Заполнить(ВыборкаКонтрагент);
			ДокументРезультат.Вывести(ОбластьСтрока1);
			
			ВыборкаДоговор = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаДоговор.Следующий() Цикл
				
				ОбластьСтрока2.Параметры.Заполнить(ВыборкаДоговор);
				ДокументРезультат.Вывести(ОбластьСтрока2);
				Выборка = ВыборкаДоговор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока Выборка.Следующий() Цикл
					
					ОбластьСтрока3.Параметры.Заполнить(Выборка);
					ДокументРезультат.Вывести(ОбластьСтрока3);
					
					Если ВариантОтчета = 3 Тогда
						Если ПоддержкаПБУ18 Тогда
							ОбластьСтрокаПР.Параметры.Заполнить(Выборка);
						КонецЕсли;
						ДокументРезультат.Вывести(ОбластьСтрокаПР);
					КонецЕсли;
					
				КонецЦикла; // документ	
			КонецЦикла;  // ДОговор
		КонецЦикла;  // Контрагент
		
		ОбластьИтого.Параметры.Заполнить(ВыборкаПериод);
		
		ДокументРезультат.Вывести(ОбластьИтого);
		Если ВариантОтчета = 3 Тогда
			Если ПоддержкаПБУ18 Тогда
				ОбластьИтогоПР.Параметры.Заполнить(ВыборкаПериод);
			КонецЕсли;
			ДокументРезультат.Вывести(ОбластьИтогоПР);
		КонецЕсли;
		
		
		ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
		
		Если ВариантОтчета = 3 Тогда
			ОбластьПодвал.Параметры.ТекстПримечания = "ПР: Постоянные разницы в оценке стоимости резервов по сомнительным долгам.";
		ИначеЕсли ВариантОтчета = 2 Тогда
			
			ОбластьПодвал.Параметры.ТекстПримечания = "Итоговая сумма графы (9) не может превышать 10% от суммы выручки: " + Окр(СуммаВыручки, 0);		
			
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбластьПодвал);
		
		ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
		
		ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
		
	КонецЦикла;    // Период	
		
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "Резервы по сомнительным долгам";
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
	
КонецПроцедуры // СформироватьОтчет

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
	
	СоотвСубконто = Новый Соответствие;
	
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт
	|{ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1}
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Месяц, Счет В ИЕРАРХИИ (&Счет), , {(Субконто1).*}, , ) КАК ХозрасчетныйОбороты
	|ИТОГИ
	|	СУММА(СуммаОборотКт)
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	ХозрасчетныйОбороты.Субконто1.*}";
	
	
	ПостроительОтчета.Параметры.Вставить("Счет", ПланыСчетов.Хозрасчетный.РезервыПоСомнительнымДолгам);
	ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
	ПостроительОтчета.Текст = Текст;
	
	СоотвСубконто = Новый Соответствие;
	СоотвСубконто.Вставить("Субконто1",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	
	Сч = 0;
	Для каждого Элемент Из СоотвСубконто Цикл
		Сч = Сч+1;
		Поле = ПостроительОтчета.ДоступныеПоля.Найти(Элемент.Ключ);
		Поле.ТипЗначения = Элемент.Значение.ТипЗначения;
		Поле.Представление = Элемент.Значение.Наименование;
		
		ПостроительОтчета.Отбор.Добавить(Элемент.Ключ);
	КонецЦикла;
	
	УправлениеОтчетами.УстановитьОтборИзТаблицы(ПостроительОтчета.Отбор, СтарыеНастройки);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;
	
#КонецЕсли