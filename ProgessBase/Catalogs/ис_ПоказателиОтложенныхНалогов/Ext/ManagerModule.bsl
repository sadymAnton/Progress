
Функция ВычислитьПоказатель(Показатель, НачалоПериода, ОкончаниеПериода, БалансоваяСтоимость=Истина) Экспорт 
	лРезультат = 0;
	
	Если ЗначениеЗаполнено(Показатель) Тогда 
		Если Показатель.РасчетПоФормуле Тогда 
			лРезультат = ВычислитьПоказательПоФормуле(Показатель, НачалоПериода, ОкончаниеПериода, БалансоваяСтоимость);
		Иначе
			лРезультат = ВычислитьПоказательПоЗапросу(Показатель, НачалоПериода, ОкончаниеПериода, БалансоваяСтоимость);
		КонецЕсли;
	КонецЕсли;
	
	Возврат лРезультат;
КонецФункции

Функция ВычислитьПоказательПоФормуле(Показатель, НачалоПериода, ОкончаниеПериода, БалансоваяСтоимость) 
	лРезультат = 0;

	лОтказ = Ложь;
	Если БалансоваяСтоимость Тогда 
		лФормулаОстаток = Показатель.ФормулаРасчетаБалансовойСтоимости;
	Иначе
		лФормулаОстаток = Показатель.ФормулаРасчетаНалоговойБазы;
	КонецЕсли;
	лФормула = "";
	Пока лФормулаОстаток <> "" Цикл 
		лПозицияОткр = Найти(лФормулаОстаток, "[");
		Если лПозицияОткр > 0 Тогда 
			лФормула = лФормула + Сред(лФормулаОстаток, 1, лПозицияОткр-1);
			лФормулаОстаток = Сред(лФормулаОстаток, лПозицияОткр+1);
			лПозицияЗакр = Найти(лФормулаОстаток, "]");
			Если лПозицияЗакр > 0 Тогда 
				лНаименованиеПоказателя = Сред(лФормулаОстаток, 1, лПозицияЗакр-1);
				лФормулаОстаток = Сред(лФормулаОстаток, лПозицияЗакр+1);
				лПоказатель = Справочники.ис_ПоказателиОтложенныхНалогов.НайтиПоНаименованию(лНаименованиеПоказателя);
				Если ЗначениеЗаполнено(лПоказатель) Тогда 
					лФормула = лФормула + СтрЗаменить("("+Формат(ВычислитьПоказатель(лПоказатель, НачалоПериода, ОкончаниеПериода, БалансоваяСтоимость),"ЧН=0; ЧГ=0")+")", ",", ".");
				Иначе
					лОтказ = Истина;
					Сообщить("Не найден показатель с наименованием <"+лНаименованиеПоказателя+"> при вычислении показателя <"+Показатель+">", СтатусСообщения.Внимание);
				КонецЕсли;
			Иначе
				лОтказ = Истина;
				Сообщить("Для символа ""["" в позиции "+лПозицияОткр+" не найден подходящий ""]"" при вычислении показателя <"+Показатель+">", СтатусСообщения.Внимание);
			КонецЕсли;
		Иначе
			лФормула = лФормула + лФормулаОстаток;
			лФормулаОстаток = "";
		КонецЕсли;
	КонецЦикла;
	
	Если Не лОтказ Тогда 
		Попытка
			лРезультат = Вычислить(лФормула);
		Исключение
			лОшибка = ОписаниеОшибки();
			Если Найти(лОшибка, "Деление на 0") > 0 Тогда 
				Сообщить("Деление на 0 при вычислении показателя <"+Показатель+">", СтатусСообщения.Внимание);
			Иначе
				Сообщить("Неизвестная ошибка в формуле при вычислении показателя <"+Показатель+">: "+лОшибка, СтатусСообщения.Внимание);
			КонецЕсли;
		КонецПопытки;
	КонецЕсли;
	
	Возврат лРезультат;
КонецФункции

Функция ВычислитьПоказательПоЗапросу(Показатель, НачалоПериода, ОкончаниеПериода, БалансоваяСтоимость) 
	лРезультат = 0;

	лЗапрос = Новый Запрос;
	лЗапрос.Текст = Показатель.ТекстЗапроса;
	Для Каждого лКлючЗначение Из Показатель.ПараметрыЗапроса.Получить() Цикл 
		лЗапрос.УстановитьПараметр(лКлючЗначение.Ключ, лКлючЗначение.Значение);
	КонецЦикла;
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	лЗапрос.УстановитьПараметр("Период", ?(Показатель.НачальноеСальдо, НачалоПериода, Новый Граница(ОкончаниеПериода, ВидГраницы.Включая)));
	
	Попытка
		лВыборка = лЗапрос.Выполнить().Выбрать();
		Если лВыборка.Следующий() Тогда 
			лРезультат = лВыборка.Показатель;
		КонецЕсли;
	Исключение
		Сообщить("Ошибка при выполнении запроса показателя <"+Показатель+">: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
	
	Возврат лРезультат;
КонецФункции

Функция ПроверитьКорректностьФормулы(Формула) Экспорт 
	лОшибки = Новый Массив;
	
	лФормулаОстаток = Формула;
	лФормула = "";
	Пока лФормулаОстаток <> "" Цикл 
		лПозицияОткр = Найти(лФормулаОстаток, "[");
		Если лПозицияОткр > 0 Тогда 
			лФормула = лФормула + Сред(лФормулаОстаток, 1, лПозицияОткр-1);
			лФормулаОстаток = Сред(лФормулаОстаток, лПозицияОткр+1);
			лПозицияЗакр = Найти(лФормулаОстаток, "]");
			Если лПозицияЗакр > 0 Тогда 
				лНаименованиеПоказателя = Сред(лФормулаОстаток, 1, лПозицияЗакр-1);
				лФормула = лФормула + "0";
				лФормулаОстаток = Сред(лФормулаОстаток, лПозицияЗакр+1);
				лПоказатель = Справочники.ис_ПоказателиОтложенныхНалогов.НайтиПоНаименованию(лНаименованиеПоказателя);
				Если Не ЗначениеЗаполнено(лПоказатель) Тогда 
					лОшибки.Добавить("Не найден показатель с наименованием <"+лНаименованиеПоказателя+">");
				КонецЕсли;
			Иначе
				лОшибки.Добавить("Для символа ""["" в позиции "+лПозицияОткр+" не найден подходящий ""]""");
			КонецЕсли;
		Иначе
			лФормула = лФормула + лФормулаОстаток;
			лФормулаОстаток = "";
		КонецЕсли;
	КонецЦикла;
	
	Если лОшибки.Количество() = 0 Тогда 
		Попытка
			лЗначение = Вычислить(лФормула);
		Исключение
			лОшибка = ОписаниеОшибки();
			Если Найти(лОшибка, "Деление на 0") = 0 Тогда 
				лОшибки.Добавить("Неизвестная ошибка в формуле");
			КонецЕсли;
		КонецПопытки;
	КонецЕсли;
	
	Возврат лОшибки;
КонецФункции

Функция СформироватьЗапрос(Показатель) Экспорт 
	лЗапрос = Новый Запрос;
	
	лПозиция = Найти(Показатель.Регистр, ".");
	лВидРегистра = Сред(Показатель.Регистр, 1, лПозиция-1);
	
	//
	// Текст запрос
	// 
	
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ISNULL(СУММА(Регистр."+Показатель.Ресурс+"),0) КАК Показатель
	|ИЗ
	|	"+Показатель.Регистр;
	
	Если Показатель.Обороты Тогда 
		
		лЗапрос.Текст = лЗапрос.Текст + 
		".Обороты(&НачалоПериода, &ОкончаниеПериода, Период,";
		// Счет и субконто
		лТекстУсловия = "";
		Если лВидРегистра = "РегистрБухгалтерии" Тогда 
			// Счет
			лСтрокаСчета = Показатель.Условия.Найти("Счет", "ТипПараметра");
			Если лСтрокаСчета <> Неопределено 
			 И лСтрокаСчета.Использование Тогда 
			 	лЗапрос.Текст = лЗапрос.Текст + " " + ПолучитьУсловиеПоСтроке(лСтрокаСчета);
			КонецЕсли;
			лЗапрос.Текст = лЗапрос.Текст + ",,";
			// Субконто
			Для Каждого лСтрокаУсловия Из Показатель.Условия Цикл 
				Если лСтрокаУсловия.ТипПараметра = "Субконто" 
				 И лСтрокаУсловия.Использование
				 И лСтрокаСчета <> Неопределено 
				 И лСтрокаСчета.Использование Тогда 
				 	лТекстУсловия = лТекстУсловия + ?(ЗначениеЗаполнено(лТекстУсловия), " И ", " ") + ПолучитьУсловиеПоСтроке(лСтрокаУсловия);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		// Измерения
		Для Каждого лСтрокаУсловия Из Показатель.Условия Цикл 
			Если (лСтрокаУсловия.ТипПараметра = "Измерение" 
			 	  Или лСтрокаУсловия.ТипПараметра = "КорИзмерение")
			 И лСтрокаУсловия.Использование Тогда 
			 	лТекстУсловия = лТекстУсловия + ?(ЗначениеЗаполнено(лТекстУсловия), " И ", " ") + ПолучитьУсловиеПоСтроке(лСтрокаУсловия);
			КонецЕсли;
		КонецЦикла;
		лЗапрос.Текст = лЗапрос.Текст + лТекстУсловия;
		// КорСчет и КорСубконто
		Если лВидРегистра = "РегистрБухгалтерии" Тогда 
			лЗапрос.Текст = лЗапрос.Текст + ",";
			// КорСчет
			лСтрокаКорСчета = Показатель.Условия.Найти("КорСчет", "ТипПараметра");
			Если лСтрокаКорСчета <> Неопределено 
			 И лСтрокаКорСчета.Использование Тогда 
			 	лЗапрос.Текст = лЗапрос.Текст + " "+ПолучитьУсловиеПоСтроке(лСтрокаКорСчета);
			КонецЕсли;
			лЗапрос.Текст = лЗапрос.Текст + ",";
			// КорСубконто
			лТекстУсловия = "";
			Для Каждого лСтрокаУсловия Из Показатель.Условия Цикл 
				Если лСтрокаУсловия.ТипПараметра = "КорСубконто" 
				 И лСтрокаУсловия.Использование
				 И лСтрокаСчета <> Неопределено 
				 И лСтрокаСчета.Использование Тогда 
				 	лТекстУсловия = лТекстУсловия + ?(ЗначениеЗаполнено(лТекстУсловия), " И ", " ") + ПолучитьУсловиеПоСтроке(лСтрокаУсловия);
				КонецЕсли;
			КонецЦикла;
			лЗапрос.Текст = лЗапрос.Текст + лТекстУсловия;
		КонецЕсли;
		
	Иначе
		
		лЗапрос.Текст = лЗапрос.Текст + 
		".Остатки(&Период, ";
		// Счет и субконто
		лТекстУсловия = "";
		Если лВидРегистра = "РегистрБухгалтерии" Тогда 
			// Счет
			лСтрокаСчета = Показатель.Условия.Найти("Счет", "ТипПараметра");
			Если лСтрокаСчета <> Неопределено 
			 И лСтрокаСчета.Использование Тогда 
			 	лЗапрос.Текст = лЗапрос.Текст + " " + ПолучитьУсловиеПоСтроке(лСтрокаСчета);
			КонецЕсли;
			лЗапрос.Текст = лЗапрос.Текст + ",,";
			// Субконто
			Для Каждого лСтрокаУсловия Из Показатель.Условия Цикл 
				Если лСтрокаУсловия.ТипПараметра = "Субконто" 
				 И лСтрокаУсловия.Использование
				 И лСтрокаСчета <> Неопределено 
				 И лСтрокаСчета.Использование Тогда 
					лТекстУсловия = лТекстУсловия + ?(ЗначениеЗаполнено(лТекстУсловия), " И ", " ") + ПолучитьУсловиеПоСтроке(лСтрокаУсловия);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		// Измерения
		Для Каждого лСтрокаУсловия Из Показатель.Условия Цикл 
			Если лСтрокаУсловия.ТипПараметра = "Измерение"
			 И лСтрокаУсловия.Использование Тогда 
			 	лТекстУсловия = лТекстУсловия + ?(ЗначениеЗаполнено(лТекстУсловия), " И ", " ") + ПолучитьУсловиеПоСтроке(лСтрокаУсловия);
			КонецЕсли;
		КонецЦикла;
		лЗапрос.Текст = лЗапрос.Текст + лТекстУсловия;
		
	КонецЕсли;
	
	лЗапрос.Текст = лЗапрос.Текст + 
	") КАК Регистр";
	
	//
	// Параметры запроса
	//
	
	Для Каждого лСтрокаУсловия Из Показатель.Условия Цикл 
		Если лСтрокаУсловия.Использование Тогда 
			лЗапрос.УстановитьПараметр("Параметр"+лСтрокаУсловия.НомерСтроки, лСтрокаУсловия.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат лЗапрос;
КонецФункции

Функция ПолучитьУсловиеПоСтроке(СтрокаУсловия)
	
 	Если СтрокаУсловия.ВИерархии Тогда 
		лУсловие = СтрокаУсловия.Параметр+" В ИЕРАРХИИ (&Параметр"+СтрокаУсловия.НомерСтроки+")";
	Иначе
		лУсловие = СтрокаУсловия.Параметр+" = &Параметр"+СтрокаУсловия.НомерСтроки;
	КонецЕсли;
	
	Возврат лУсловие
КонецФункции
