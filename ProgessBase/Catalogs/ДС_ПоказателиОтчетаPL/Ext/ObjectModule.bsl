// Процедура генерирует код перемещаемого элемента (группы) справочника,
// а также код расположенного рядом элемента при интерактивном перемещении
// элемента в форме списка справочника.
// Записывает переставляемые элементы с измененными кодами.
// В случае сдвига группы элементов также изменяет коды вложенных в группу
// элементов.
//
// Параметры
//  Направление  – число – направление сдвига элемента,
//                 принимает значения:
//                      1 - при сдвиге вниз;
//                     -1 - при сдвиге вверх.
//
Процедура ИзменитьКод(Направление) Экспорт
	
	#Если Клиент Тогда
		
		ТекущийКод    = Код;
		
		СписокКодов   = Новый СписокЗначений;
		
		СтатьиЗатрат  = Справочники.ДС_ПоказателиОтчетаPL;
		ВыборкаСтроки = СтатьиЗатрат.Выбрать(Родитель, Владелец, , "Код Убыв");
		
		Пока ВыборкаСтроки.Следующий() Цикл
			СписокКодов.Добавить(ВыборкаСтроки.Код);
		КонецЦикла;
		
		Если СписокКодов.Количество() < 2  Тогда
			// На данном уровне имеется только один элемент или группа справочника.
			// Игнорируем действие пользователя.
			
			Возврат;
		КонецЕсли; 
		
		ПорядковыйНомер = СписокКодов.Индекс(СписокКодов.НайтиПоЗначению(ТекущийКод));
		
		Если (ПорядковыйНомер = 0) И (Направление < 0) Тогда
			
			// Попытка перемещения первого по порядку элемента вверх.
			ИндексЭлементаЗамены = СписокКодов.Количество() - 1;
			
		ИначеЕсли (ПорядковыйНомер = СписокКодов.Количество() - 1) И (Направление > 0) Тогда
			
			// Попытка перемещения последнего по порядку элемента вниз.
			ИндексЭлементаЗамены = 0;
			
		Иначе
			
			// в иных случаях
			ИндексЭлементаЗамены = ПорядковыйНомер + Направление;
			
		КонецЕсли;
		
		КодЭлементаЗамены     = СписокКодов.Получить(ИндексЭлементаЗамены).Значение;
		
		ЭлементЗаменыСсылка   = СтатьиЗатрат.НайтиПоКоду(КодЭлементаЗамены,,Родитель, Владелец);
		Если ЭлементЗаменыСсылка <> СтатьиЗатрат.ПустаяСсылка() Тогда
			
			Попытка
				
				// Открываем транзакцию
				НачатьТранзакцию();
				
				// Промежуточная запись текущего элемента с уникальным кодом
				ЭтотОбъект.Код="&&$##";
				ЭтотОбъект.Записать();
				
				// записываем соседний элемент с кодом текущего
				ЭлементЗамены= ЭлементЗаменыСсылка.ПолучитьОбъект();
				ПредыдущийКод=ЭлементЗамены.Код;
				ЭлементЗамены.Код = ТекущийКод;
				ЭлементЗамены.Записать();
				
				// записываем текущий элемент с кодом соседнего
				ЭтотОбъект.Код = ПредыдущийКод;
				ЭтотОбъект.Записать();
				
				// Завершаем транзакцию
				ЗафиксироватьТранзакцию();
				
			Исключение
				Предупреждение("Не удалось записать элемент справочника:
				|" + ОписаниеОшибки());
				
				Возврат;
			КонецПопытки;
			
		КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры // ИзменитьКод()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если не ЭтоГруппа Тогда
		
		Если Не РасчетПоФормуле И Не ЗначениеЗаполнено(Регистр) Тогда
			Отказ = Истина;
			Сообщить("Не задан регистр, по которому будут собираться данные для показателя");
		КонецЕсли;	
		
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	// is ЯннуровВФ нач 20150615 
	КодPL = СокрЛП(КодPL);
	Если Не Справочники.ДС_ПоказателиОтчетаPL.ПроверитьФорматКодаPL(КодPL, ЭтоГруппа Или РасчетПоФормуле) Тогда 
		Отказ = Истина;
	КонецЕсли;
	// is ЯннуровВФ кон 20150615 

КонецПроцедуры


Процедура СформироватьЗапрос() Экспорт 
	
	// is ЯннуровВФ нач 20140820
	Формула = "";
	// is ЯннуровВФ кон 20140820
	
	Запрос = Новый Запрос;
	
	// is ЯннуровВФ нач 20140722
	Если ис_ГотовыйЗапрос Тогда 
		
		Запрос.Текст = ЗапросТекст;
		Для Каждого лСтрокаПараметра Из ис_ПараметрыЗапроса Цикл 
			Если лСтрокаПараметра.ВСписке Тогда 
				Запрос.УстановитьПараметр(лСтрокаПараметра.Параметр, лСтрокаПараметра.ЗначенияСписка.Получить());
			Иначе
				Запрос.УстановитьПараметр(лСтрокаПараметра.Параметр, лСтрокаПараметра.Значение);
			КонецЕсли;
		КонецЦикла;
		
	Иначе
	// is ЯннуровВФ кон 20140722
		//Условия формирования запросов по регистрам
		Если Регистр = "РегистрБухгалтерии.Международный" Тогда   		
			
			УсловиеСчета 	= "";
			УсловиеКорСчета = "";
			Условие			= "";
			
			// is ЯннуровВФ нач 20140720
			//Для Каждого Строка Из Условия Цикл
			//	Если Строка.Использовать И Строка.Параметр = "Счет" Тогда
			//		УсловиеСчета = "Счет = &Счет" + СокрЛП(Ссылка.Код);
			//	ИначеЕсли Строка.Использовать И Строка.Параметр = "КорСчет" Тогда
			//		УсловиеКорСчета = "КорСчет = &КорСчет" + СокрЛП(Ссылка.Код);
			//	ИначеЕсли Строка.Использовать Тогда
			//		Условие = Условие + Строка.Параметр + " = &" + СтрЗаменить(Строка.Параметр,".","") + СокрЛП(Ссылка.Код) + " И ";
			//	КонецЕсли;
			//	Если Строка.Использовать Тогда
			//		Запрос.УстановитьПараметр(СтрЗаменить(Строка.Параметр,".","") + СокрЛП(Ссылка.Код), Строка.Значение);
			//	КонецЕсли;	
			//КонецЦикла;	
			Для Каждого лСтрокаУсловия Из Условия Цикл 
				Если Не лСтрокаУсловия.Использовать Тогда 
					Продолжить;
				КонецЕсли;
				лИмяПараметра = лСтрокаУсловия.Параметр;
				лИмяЗначения = СтрЗаменить(лСтрокаУсловия.Параметр,".","") + СокрЛП(Код);
				Если лСтрокаУсловия.ис_ВидСравнения = "Не равно" Тогда 
					лУсловие = лИмяПараметра+" <> &"+лИмяЗначения;
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.Значение);
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "В иерархии" Тогда 
					лУсловие = лИмяПараметра+" В ИЕРАРХИИ (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.Значение);
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "Не в иерархии" Тогда 
					лУсловие = "НЕ "+лИмяПараметра+" В ИЕРАРХИИ (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.Значение);
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "В списке" Тогда 
					лУсловие = лИмяПараметра+" В (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.ис_ЗначенияСписка.Получить());
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "Не в списке" Тогда 
					лУсловие = "НЕ "+лИмяПараметра+" В (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.ис_ЗначенияСписка.Получить());
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "В списке в иерархии" Тогда 
					лУсловие = лИмяПараметра+" В ИЕРАРХИИ (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.ис_ЗначенияСписка.Получить());
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "Не в списке в иерархии" Тогда 
					лУсловие = "НЕ "+лИмяПараметра+" В ИЕРАРХИИ (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.ис_ЗначенияСписка.Получить());
				Иначе // По умолчанию операция "="
					лУсловие = лИмяПараметра+" = &"+лИмяЗначения;
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.Значение);
				КонецЕсли;
				Если лСтрокаУсловия.Параметр = "Счет" Тогда 
					УсловиеСчета = лУсловие;
				ИначеЕсли лСтрокаУсловия.Параметр = "КорСчет" Тогда 
					УсловиеКорСчета = лУсловие;
				Иначе
					Условие = Условие + лУсловие + " И ";
				КонецЕсли;
			КонецЦикла;
			// is ЯннуровВФ нач 20140720
			
			Запрос.УстановитьПараметр("Показатель" + СокрЛП(Код), Ссылка);
			
			Условие = Лев(Условие, СтрДлина(Условие) - 3); 		
			
			Запрос.Текст = 
			"ВЫБРАТЬ 
			|	&Показатель" + СокрЛП(Код) + " Как Показатель,
			// is ЯннуровВФ нач 20140822
			//|	ВЫБОР
			//|		КОГДА МеждународныйОбороты.Субконто1 ССЫЛКА Справочник.ПодразделенияОрганизаций
			//|			ТОГДА МеждународныйОбороты.Субконто1
			//|		КОГДА МеждународныйОбороты.Субконто2 ССЫЛКА Справочник.ПодразделенияОрганизаций
			//|			ТОГДА МеждународныйОбороты.Субконто2
			//|		КОГДА МеждународныйОбороты.Субконто3 ССЫЛКА Справочник.ПодразделенияОрганизаций
			//|			ТОГДА МеждународныйОбороты.Субконто3
			//|	КОНЕЦ КАК Подразделение,
			//|	ПодразделенияОрганизаций.ПРГДивизион КАК Дивизион,
			//|	ПодразделенияОрганизаций.ПРГДопОфис КАК ДопОфис,
			//|	ПодразделенияОрганизаций.ПРГЦФО КАК ЦФО,
			//|	ПодразделенияОрганизаций.ПРГ_ЦентрУчетаЗатрат2014 КАК УкрупКод,  
			|	ISNULL(ПодразделенияОрганизаций.Ссылка, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
			|	ISNULL(ПодразделенияОрганизаций.ПРГДивизион, ЗНАЧЕНИЕ(Справочник.ПРГДивизионы.ПустаяСсылка)) КАК Дивизион,
			|	ISNULL(ПодразделенияОрганизаций.ПРГДопОфис, ЗНАЧЕНИЕ(Справочник.ПРГДопОфисы.ПустаяСсылка)) КАК ДопОфис,
			|	ISNULL(ПодразделенияОрганизаций.ПРГЦФО, ЗНАЧЕНИЕ(Справочник.ПРГЦФО.ПустаяСсылка)) КАК ЦФО,
			|	ISNULL(ПодразделенияОрганизаций.ПРГ_ЦентрУчетаЗатрат2014, ЗНАЧЕНИЕ(Справочник.ПРГ_ЦентрыУчетаЗатрат2014.ПустаяСсылка)) КАК УкрупКод,
			// is ЯннуровВФ кон 20140822
			// is ЯнннуровВФ нач 20140722
			//|	МеждународныйОбороты.СуммаОборот КАК Сумма
			|	"+?(ис_Минус,"-","")+"МеждународныйОбороты."+ис_Ресурс+" КАК Сумма
			// is ЯнннуровВФ нач 20140722
			|ИЗ
			|	РегистрБухгалтерии.Международный.Обороты(
			|			&НачалоПериода,
			|			&КонецПериода,
			|			,
			|			" + УсловиеСчета + ",
			|			,
			|			" + Условие + ",
			|			" + УсловиеКорСчета + ",
			|			) КАК МеждународныйОбороты
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			|		ПО МеждународныйОбороты.Субконто1 = ПодразделенияОрганизаций.Ссылка
			|			Или МеждународныйОбороты.Субконто2 = ПодразделенияОрганизаций.Ссылка
			|			Или МеждународныйОбороты.Субконто3 = ПодразделенияОрганизаций.Ссылка";
			// is ЯннуровВФ нач 20140822
			//|ГДЕ
			//|	Не ПодразделенияОрганизаций.Ссылка Есть Null";
			// is ЯннуровВФ кон 20140822
			
		ИначеЕсли Регистр = "РегистрНакопления.ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчет"
		// is ЯннуровВФ нач 20140723
		 Или Регистр = "РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет" 
		// is ЯннуровВФ кон 20140723
		// is ЯннуровВФ нач 20140814
		 Или Регистр = "РегистрНакопления.ВыпускПродукцииМеждународныйУчет"
		 Или Регистр = "РегистрНакопления.Продажи"
		// is ЯннуровВФ кон 20140814
		 Или Регистр = "РегистрСведений.ис_ПрибыльностьРеализации" Тогда
			
			Условие	= "";
			// is ЯннуровВФ нач 20140723
			УсловиеПоказателяАнализа	= "";
			// is ЯннуровВФ кон 20140723
			
			// is ЯннуровВФ нач 20140720
			//Для Каждого Строка Из Условия Цикл
			//	Если Строка.Использовать Тогда
			//		Условие = Условие + Строка.Параметр + " = &" + Строка.Параметр + СокрЛП(Ссылка.Код) + " И ";
			//		Запрос.УстановитьПараметр(Строка.Параметр + СокрЛП(Ссылка.Код), Строка.Значение);
			//	КонецЕсли;	
			//КонецЦикла;	
			Для Каждого лСтрокаУсловия Из Условия Цикл 
				Если Не лСтрокаУсловия.Использовать Тогда 
					Продолжить;
				КонецЕсли;
				лИмяПараметра = лСтрокаУсловия.Параметр;
				лИмяЗначения = СтрЗаменить(лСтрокаУсловия.Параметр,".","") + СокрЛП(Код);
				Если лСтрокаУсловия.ис_ВидСравнения = "Не равно" Тогда 
					лУсловие = лИмяПараметра+" <> &"+лИмяЗначения;
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.Значение);
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "В иерархии" Тогда 
					лУсловие = лИмяПараметра+" В ИЕРАРХИИ (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.Значение);
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "Не в иерархии" Тогда 
					лУсловие = "НЕ "+лИмяПараметра+" В ИЕРАРХИИ (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.Значение);
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "В списке" Тогда 
					лУсловие = лИмяПараметра+" В (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.ис_ЗначенияСписка.Получить());
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "Не в списке" Тогда 
					лУсловие = "НЕ "+лИмяПараметра+" В (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.ис_ЗначенияСписка.Получить());
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "В списке в иерархии" Тогда 
					лУсловие = лИмяПараметра+" В ИЕРАРХИИ (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.ис_ЗначенияСписка.Получить());
				ИначеЕсли лСтрокаУсловия.ис_ВидСравнения = "Не в списке в иерархии" Тогда 
					лУсловие = "НЕ "+лИмяПараметра+" В ИЕРАРХИИ (&"+лИмяЗначения+")";
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.ис_ЗначенияСписка.Получить());
				Иначе // По умолчанию операция "="
					лУсловие = лИмяПараметра+" = &"+лИмяЗначения;
					Запрос.УстановитьПараметр(лИмяЗначения, лСтрокаУсловия.Значение);
				КонецЕсли;
				Если Регистр = "РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет"
				 И лИмяПараметра = "ПоказательАнализа" Тогда 
					Условие = Условие + "СтатьяЗатрат В (ВЫБРАТЬ СтатьяЗатрат ИЗ Справочник.УЗ_ПоказателиАнализаСебестоимости.СтатьиЗатрат КАК УЗ_ПоказателиАнализаСебестоимостиСтатьиЗатрат ГДЕ "+СтрЗаменить(лУсловие,лИмяПараметра+" ","Ссылка ")+")" + " И ";
				Иначе
					Условие = Условие + лУсловие + " И ";
				КонецЕсли;
			КонецЦикла;
			// is ЯннуровВФ кон 20140720
			
			Запрос.УстановитьПараметр("Показатель" + СокрЛП(Код), Ссылка);
			
			Условие = Лев(Условие, СтрДлина(Условие) - 3); 
			
			// is ЯннуровВФ нач 20140723
			Если Регистр = "РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет" Тогда 
				Запрос.Текст = 
				"ВЫБРАТЬ 
				|	&Показатель"+СокрЛП(Код)+" Как Показатель,
				|	ISNULL(ВыпускПродукцииПодразделением.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
				|	ISNULL(ВыпускПродукцииПодразделением.Подразделение.ПРГДивизион, ЗНАЧЕНИЕ(Справочник.ПРГДивизионы.ПустаяСсылка)) КАК Дивизион,
				|	ISNULL(ВыпускПродукцииПодразделением.Подразделение.ПРГДопОфис, ЗНАЧЕНИЕ(Справочник.ПРГДопОфисы.ПустаяСсылка)) КАК ДопОфис,
				|	ISNULL(ВыпускПродукцииПодразделением.Подразделение.ПРГЦФО, ЗНАЧЕНИЕ(Справочник.ПРГЦФО.ПустаяСсылка)) КАК ЦФО,
				|	ISNULL(ВыпускПродукцииПодразделением.Подразделение.ПРГ_ЦентрУчетаЗатрат2014, ЗНАЧЕНИЕ(Справочник.ПРГ_ЦентрыУчетаЗатрат2014.ПустаяСсылка)) КАК УкрупКод,
				|	"+?(ис_Минус,"-","")+"ВЫБОР 
				|		КОГДА ISNULL(ВыпускПродукции.Количество,0) <> 0 
				|			ТОГДА ISNULL(ВыпускПродукцииПодразделением.Количество,0) / ISNULL(ВыпускПродукции.Количество,0)
				|		ИНАЧЕ 1
				|	КОНЕЦ * ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты."+ис_Ресурс+" Как Сумма
				|ИЗ
				|	РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Обороты(&НачалоПериода, &КонецПериода, , " + Условие + ") КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|				ВыпускПродукцииМеждународныйУчетОбороты.Организация,
				|				ВыпускПродукцииМеждународныйУчетОбороты.Продукция,
				|				ВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции,
				|				СУММА(ВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот) КАК Количество
				|			ИЗ
				|				РегистрНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(&НачалоПериода, &КонецПериода, , ) КАК ВыпускПродукцииМеждународныйУчетОбороты
				|			СГРУППИРОВАТЬ ПО
				|				ВыпускПродукцииМеждународныйУчетОбороты.Организация,
				|				ВыпускПродукцииМеждународныйУчетОбороты.Продукция,
				|				ВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции) КАК ВыпускПродукции
				|			ПО ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация = ВыпускПродукции.Организация
				|				И ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура = ВыпускПродукции.Продукция
				|				И ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.ХарактеристикаНоменклатуры = ВыпускПродукции.ХарактеристикаПродукции
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|				ВыпускПродукцииМеждународныйУчетОбороты.Организация,
				|				ВыпускПродукцииМеждународныйУчетОбороты.Продукция,
				|				ВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции,
				|				ВыпускПродукцииМеждународныйУчетОбороты.Подразделение,
				|				СУММА(ВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот) КАК Количество
				|			ИЗ
				|				РегистрНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(&НачалоПериода, &КонецПериода, , ) КАК ВыпускПродукцииМеждународныйУчетОбороты
				|			СГРУППИРОВАТЬ ПО
				|				ВыпускПродукцииМеждународныйУчетОбороты.Организация,
				|				ВыпускПродукцииМеждународныйУчетОбороты.Продукция,
				|				ВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции,
				|				ВыпускПродукцииМеждународныйУчетОбороты.Подразделение) КАК ВыпускПродукцииПодразделением
				|			ПО ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация = ВыпускПродукцииПодразделением.Организация
				|				И ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура = ВыпускПродукцииПодразделением.Продукция
				|				И ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.ХарактеристикаНоменклатуры = ВыпускПродукцииПодразделением.ХарактеристикаПродукции
				|ГДЕ
				|	&ВидПоказателя = ""ис_ПоПроизводству""
				|
				|ОБЪЕДИНИТЬ ВСЕ 
				|
				|ВЫБРАТЬ 
				|	&Показатель"+СокрЛП(Код)+" Как Показатель,
				|	ISNULL(ПродажиПодразделением.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
				|	ISNULL(ПродажиПодразделением.ПРГАдресПоставки.Дивизион, ЗНАЧЕНИЕ(Справочник.ПРГДивизионы.ПустаяСсылка)) КАК Дивизион,
				|	ISNULL(ПродажиПодразделением.ПРГАдресПоставки.ДопОфис, ЗНАЧЕНИЕ(Справочник.ПРГДопОфисы.ПустаяСсылка)) КАК ДопОфис,
				|	ISNULL(ПродажиПодразделением.Подразделение.ПРГЦФО, ЗНАЧЕНИЕ(Справочник.ПРГЦФО.ПустаяСсылка)) КАК ЦФО,
				|	ISNULL(ПродажиПодразделением.Подразделение.ПРГ_ЦентрУчетаЗатрат2014, ЗНАЧЕНИЕ(Справочник.ПРГ_ЦентрыУчетаЗатрат2014.ПустаяСсылка)) КАК УкрупКод,
				|	"+?(ис_Минус,"-","")+"ВЫБОР 
				|		КОГДА ISNULL(Продажи.Количество,0) <> 0 
				|			ТОГДА ISNULL(ПродажиПодразделением.Количество,0) / ISNULL(Продажи.Количество,0)
				|		ИНАЧЕ 1
				|	КОНЕЦ * ВЫБОР
				|		КОГДА ЕСТЬNULL(ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОборотыПолная.СуммаРасход, 0) <> 0
				|			ТОГДА ЕСТЬNULL(МеждународныйОборотыДт90Кт43.СуммаОборот, 0) / ЕСТЬNULL(ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОборотыПолная.СуммаРасход, 0)
				|		ИНАЧЕ 1
				|	КОНЕЦ * ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты."+ис_Ресурс+" Как Сумма
				|ИЗ
				|	(ВЫБРАТЬ
				|		ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация КАК Организация,
				|		ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура КАК Номенклатура,
				|		СУММА(ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СуммаРасход) КАК СуммаРасход
				|	ИЗ
				|		РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Обороты(&НачалоПериода, &КонецПериода, , " + Условие + ") КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты
				|	СГРУППИРОВАТЬ ПО
				|		ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация,
				|		ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура) КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация КАК Организация,
				|			ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура КАК Номенклатура,
				|			СУММА(ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СуммаРасход) КАК СуммаРасход
				|		ИЗ
				|			РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Обороты(&НачалоПериода, &КонецПериода, , ) КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты
				|		
				|		СГРУППИРОВАТЬ ПО
				|			ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация,
				|			ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура) КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОборотыПолная
				|		ПО ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация = ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОборотыПолная.Организация
				|			И ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура = ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОборотыПолная.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			МеждународныйОборотыДтКт.Организация КАК Организация,
				|			МеждународныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
				|			СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК СуммаОборот
				|		ИЗ
				|			РегистрБухгалтерии.Международный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Период, СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Международный.СебестоимостьПродаж)), , СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Международный._ПокупныеИзделия), ЗНАЧЕНИЕ(ПланСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки)), , ) КАК МеждународныйОборотыДтКт
				|		
				|		СГРУППИРОВАТЬ ПО
				|			МеждународныйОборотыДтКт.Организация,
				|			МеждународныйОборотыДтКт.СубконтоКт1) КАК МеждународныйОборотыДт90Кт43
				|		ПО ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация = МеждународныйОборотыДт90Кт43.Организация
				|			И ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура = МеждународныйОборотыДт90Кт43.СубконтоКт1
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|				Продажи.Организация,
				|				Продажи.Номенклатура,
				|				СУММА(Продажи.Количество) КАК Количество
				|			ИЗ
				|				РегистрНакопления.Продажи КАК Продажи
				|			ГДЕ
				|				Продажи.Активность = ИСТИНА
				|				И Продажи.Период МЕЖДУ &НачалоПериода И &КонецПериода
				|				И ""ФильтрПоПродажам"" = ""ФильтрПоПродажам""
				|			СГРУППИРОВАТЬ ПО
				|				Продажи.Организация,
				|				Продажи.Номенклатура) КАК Продажи
				|			ПО ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация = Продажи.Организация
				|				И ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура = Продажи.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|				Продажи.Организация,
				|				Продажи.Номенклатура,
				|				ISNULL(СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
				|				Продажи.ПРГАдресПоставки,
				|				СУММА(Продажи.Количество) КАК Количество
				|			ИЗ
				|				РегистрНакопления.Продажи КАК Продажи
				|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
				|					ПО Продажи.Организация = СоответствиеПодразделенийИПодразделенийОрганизаций.Организация
				|						И Продажи.Подразделение = СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение
				|			ГДЕ
				|				Продажи.Активность = ИСТИНА
				|				И Продажи.Период МЕЖДУ &НачалоПериода И &КонецПериода
				|				И ""ФильтрПоПродажам"" = ""ФильтрПоПродажам""
				|			СГРУППИРОВАТЬ ПО
				|				Продажи.Организация,
				|				Продажи.Номенклатура,
				|				ISNULL(СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)),
				|				Продажи.ПРГАдресПоставки) КАК ПродажиПодразделением
				|			ПО ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Организация = ПродажиПодразделением.Организация
				|				И ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура = ПродажиПодразделением.Номенклатура
				|ГДЕ
				|	&ВидПоказателя = ""ис_ПоРеализации""";
			// is ЯннуровВФ нач 20140814
			ИначеЕсли Регистр = "РегистрСведений.ис_ПрибыльностьРеализации" Тогда 
				Запрос.Текст = 
				"ВЫБРАТЬ 
				|	&Показатель"+СокрЛП(Код)+" Как Показатель,
				|	ис_ПрибыльностьРеализации.Подразделение КАК Подразделение,
				|	ис_ПрибыльностьРеализации.Дивизион КАК Дивизион,
				|	ис_ПрибыльностьРеализации.ДопОфис КАК ДопОфис,
				|	ис_ПрибыльностьРеализации.ЦФО КАК ЦФО,
				|	ис_ПрибыльностьРеализации.ЦентрУчетаЗатрат КАК УкрупКод,
				|	"+?(ис_Минус,"-","")+"ис_ПрибыльностьРеализации."+ис_Ресурс+" Как Сумма
				|ИЗ
				|	РегистрСведений.ис_ПрибыльностьРеализации КАК ис_ПрибыльностьРеализации
				|ГДЕ
				|	&ВидПоказателя = ""ис_ПоРеализации""
				|	И ис_ПрибыльностьРеализации.МесяцРеализации МЕЖДУ &НачалоПериода И &КонецПериода
				|	"+?(ЗначениеЗаполнено(лУсловие), "И ("+лУсловие+")", "");
		 	ИначеЕсли Регистр = "РегистрНакопления.ВыпускПродукцииМеждународныйУчет" Тогда 
				Запрос.Текст = 
				"ВЫБРАТЬ 
				|	&Показатель" + СокрЛП(Код) + " Как Показатель,
				|	ISNULL(ВыпускПродукцииМеждународныйУчетОбороты.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
				|	ISNULL(ВыпускПродукцииМеждународныйУчетОбороты.Подразделение.ПРГДивизион, ЗНАЧЕНИЕ(Справочник.ПРГДивизионы.ПустаяСсылка)) КАК Дивизион,
				|	ISNULL(ВыпускПродукцииМеждународныйУчетОбороты.Подразделение.ПРГДопОфис, ЗНАЧЕНИЕ(Справочник.ПРГДопОфисы.ПустаяСсылка)) КАК ДопОфис,
				|	ISNULL(ВыпускПродукцииМеждународныйУчетОбороты.Подразделение.ПРГЦФО, ЗНАЧЕНИЕ(Справочник.ПРГЦФО.ПустаяСсылка)) КАК ЦФО,
				|	ISNULL(ВыпускПродукцииМеждународныйУчетОбороты.Подразделение.ПРГ_ЦентрУчетаЗатрат2014, ЗНАЧЕНИЕ(Справочник.ПРГ_ЦентрыУчетаЗатрат2014.ПустаяСсылка)) КАК УкрупКод,
				|	"+?(ис_Минус,"-","")+"ВыпускПродукцииМеждународныйУчетОбороты."+ПолучитьДополненныйРесурс("ВыпускПродукцииМеждународныйУчетОбороты.Продукция")+" Как Сумма
				|ИЗ
				|	РегистрНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(&НачалоПериода, &КонецПериода, , " + Условие + ") КАК ВыпускПродукцииМеждународныйУчетОбороты";
		 	ИначеЕсли Регистр = "РегистрНакопления.Продажи" Тогда
				Запрос.Текст = 
				"ВЫБРАТЬ 
				|	&Показатель" + СокрЛП(Код) + " Как Показатель,
				|	ISNULL(СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
				|	ISNULL(ПродажиОбороты.ПРГАдресПоставки.Дивизион, ЗНАЧЕНИЕ(Справочник.ПРГДивизионы.ПустаяСсылка)) КАК Дивизион,
				|	ISNULL(ПродажиОбороты.ПРГАдресПоставки.ДопОфис, ЗНАЧЕНИЕ(Справочник.ПРГДопОфисы.ПустаяСсылка)) КАК ДопОфис,
				|	ISNULL(СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации.ПРГЦФО, ЗНАЧЕНИЕ(Справочник.ПРГЦФО.ПустаяСсылка)) КАК ЦФО,
				|	ISNULL(СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации.ПРГ_ЦентрУчетаЗатрат2014, ЗНАЧЕНИЕ(Справочник.ПРГ_ЦентрыУчетаЗатрат2014.ПустаяСсылка)) КАК УкрупКод,
				|	"+?(ис_Минус,"-","")+"ПродажиОбороты."+ПолучитьДополненныйРесурс("ПродажиОбороты.Номенклатура")+" Как Сумма
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, , " + Условие + ") КАК ПродажиОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
				|		ПО ПродажиОбороты.Организация = СоответствиеПодразделенийИПодразделенийОрганизаций.Организация
				|			И ПродажиОбороты.Подразделение = СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение
				|ГДЕ
				|	""ФильтрПоПродажам"" = ""ФильтрПоПродажам""";
				
				//>>120116 Степанов 47715
				Запрос.Текст = Запрос.Текст +
				"
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ 
				|	&Показатель" + СокрЛП(Код) + ",
				|	ISNULL(СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)),
				|	ISNULL(ис_ПродажиКорректировкиПродукцииМеждународныйУчетОбороты.ПРГАдресПоставки.Дивизион, ЗНАЧЕНИЕ(Справочник.ПРГДивизионы.ПустаяСсылка)),
				|	ISNULL(ис_ПродажиКорректировкиПродукцииМеждународныйУчетОбороты.ПРГАдресПоставки.ДопОфис, ЗНАЧЕНИЕ(Справочник.ПРГДопОфисы.ПустаяСсылка)),
				|	ISNULL(СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации.ПРГЦФО, ЗНАЧЕНИЕ(Справочник.ПРГЦФО.ПустаяСсылка)),
				|	ISNULL(СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации.ПРГ_ЦентрУчетаЗатрат2014, ЗНАЧЕНИЕ(Справочник.ПРГ_ЦентрыУчетаЗатрат2014.ПустаяСсылка)),
				|	"+?(ис_Минус,"-","")+"ис_ПродажиКорректировкиПродукцииМеждународныйУчетОбороты."+ПолучитьДополненныйРесурс("ис_ПродажиКорректировкиПродукцииМеждународныйУчетОбороты.Номенклатура")+"
				|ИЗ
				|	РегистрНакопления.ис_ПродажиКорректировкиПродукцииМеждународныйУчет.Обороты(&НачалоПериода, &КонецПериода, , " + Условие + ") КАК ис_ПродажиКорректировкиПродукцииМеждународныйУчетОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
				|		ПО ис_ПродажиКорректировкиПродукцииМеждународныйУчетОбороты.Организация = СоответствиеПодразделенийИПодразделенийОрганизаций.Организация
				|			И ис_ПродажиКорректировкиПродукцииМеждународныйУчетОбороты.Подразделение = СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение
				|ГДЕ
				|	""ФильтрПоПродажам"" = ""ФильтрПоПродажам""";
				//<<120116
				
			// is ЯннуровВФ кон 20140814
			Иначе
			// is ЯннуровВФ кон 20140723
				Запрос.Текст = 
				"ВЫБРАТЬ 
				|	&Показатель" + СокрЛП(Код) + " Как Показатель,
				// is ЯннуровВФ нач 20140822
				//|	ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение Как Подразделение,
				//|	ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение.ПРГДивизион Как Дивизион,
				//|	ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение.ПРГДопОфис Как ДопОфис,
				//|	ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение.ПРГЦФО Как ЦФО,
				//|	ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение.ПРГ_ЦентрУчетаЗатрат2014 Как УкрупКод,
				|	ISNULL(ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
				|	ISNULL(ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение.ПРГДивизион, ЗНАЧЕНИЕ(Справочник.ПРГДивизионы.ПустаяСсылка)) КАК Дивизион,
				|	ISNULL(ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение.ПРГДопОфис, ЗНАЧЕНИЕ(Справочник.ПРГДопОфисы.ПустаяСсылка)) КАК ДопОфис,
				|	ISNULL(ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение.ПРГЦФО, ЗНАЧЕНИЕ(Справочник.ПРГЦФО.ПустаяСсылка)) КАК ЦФО,
				|	ISNULL(ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Подразделение.ПРГ_ЦентрУчетаЗатрат2014, ЗНАЧЕНИЕ(Справочник.ПРГ_ЦентрыУчетаЗатрат2014.ПустаяСсылка)) КАК УкрупКод,
				// is ЯннуровВФ кон 20140822
				// is ЯнннуровВФ нач 20140722
				//|	ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.СуммаОборот Как Сумма
				|	"+?(ис_Минус,"-","")+"ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты."+ПолучитьДополненныйРесурс("ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты.Продукция")+" Как Сумма
				// is ЯнннуровВФ кон 20140722
				|ИЗ
				|	РегистрНакопления.ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчет.Обороты(&НачалоПериода, &КонецПериода, , " + Условие + ") КАК ДС_ЗатратыНаРеализациюПродукцииМеждународныйУчетОбороты";
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	ЗапросПараметры = Новый ХранилищеЗначения(Запрос.Параметры);
	ЗапросТекст		= Запрос.Текст;
	
КонецПроцедуры         

Функция ПолучитьДополненныйРесурс(ПутьКНоменклатуре)
	лРесурс = ис_Ресурс;
	
	Если Найти(ис_Ресурс, "Количество") = 1 Тогда 
		Если Прав(ис_Ресурс,2) = "Шт" Тогда 
			лРесурс = Лев(ис_Ресурс,СтрДлина(ис_Ресурс)-2)
				+ " * ISNULL("+ПутьКНоменклатуре+".ЕдиницаХраненияОстатков.Коэффициент, 0)"
		ИначеЕсли Прав(ис_Ресурс,1) = "Л" Тогда 
			лРесурс = Лев(ис_Ресурс,СтрДлина(ис_Ресурс)-1) 
				+ " * ISNULL("+ПутьКНоменклатуре+".ЕдиницаХраненияОстатков.Объем, 0)"
		ИначеЕсли Прав(ис_Ресурс,4) = "ТнНт" Тогда 
			лРесурс = Лев(ис_Ресурс,СтрДлина(ис_Ресурс)-4) 
				+ " * ISNULL("+ПутьКНоменклатуре+".ЕдиницаХраненияОстатков.ПРГ_Нетто, 0) / 1000";
		ИначеЕсли Прав(ис_Ресурс,4) = "ТнБр" Тогда 
			лРесурс = Лев(ис_Ресурс,СтрДлина(ис_Ресурс)-4)
				+ " * ISNULL("+ПутьКНоменклатуре+".ЕдиницаХраненияОстатков.Вес, 0) / 1000";
		КонецЕсли;
	КонецЕсли;
	
	Возврат лРесурс;
КонецФункции
