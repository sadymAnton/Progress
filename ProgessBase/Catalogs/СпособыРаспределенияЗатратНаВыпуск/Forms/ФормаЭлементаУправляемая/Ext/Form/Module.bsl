
///////////////////////////////////////////////////////////////////
//  ОБРАБОТЧИКИ СОБЫТИЙ

// НА СЕРВЕРЕ

// Процедура - обработчик события "ПриСозданииНаСервере" формы справочника
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьГибкуюНастройкуСпособовРаспределенияЗатрат = УчетЗатрат.ИспользоватьГибкуюНастройкуСпособовРаспределенияЗатрат();
	
	ЭтоТабличныйСпособ 		  = (Объект.ТипБазыРаспределения = Перечисления.ТипыБазРаспределения.Табличный);
	ЭтоСКДСпособ 	   		  = (Объект.ТипБазыРаспределения = Перечисления.ТипыБазРаспределения.СКД);
	ЭтоПредопределенныйСпособ = (Объект.ТипБазыРаспределения = Перечисления.ТипыБазРаспределения.Предопределенный);
			
	Элементы.СтраницыБазыРаспределения.ТекущаяСтраница 	= Элементы.СтраницаПрочие;
	Элементы.СтраницыБазыРаспределения.Видимость 		= ЭтоТабличныйСпособ ИЛИ ЭтоСКДСпособ;
	
	Если ЭтоТабличныйСпособ Тогда // тип базы Табличный
		
		Элементы.СтраницыБазыРаспределения.ТекущаяСтраница = Элементы.СтраницаТабличная;
		Элементы.СтраницаСКД.Видимость 					   = Ложь;
		
		// Настроим видимость колонок формы в зависимости от детализации учета
		СтруктураИзмеренийУпр  = Новый Структура("НоменклатурнаяГруппа, ХарактеристикаПродукции, СерияПродукции");
		СтруктураИзмеренийРегл = Новый Структура("НоменклатурнаяГруппа, ХарактеристикаПродукции, СерияПродукции");
		
		РасширеннаяАналитикаУчета.ПолучитьИспользуемыеИзмерения(СтруктураИзмеренийУпр,  Истина);
		РасширеннаяАналитикаУчета.ПолучитьИспользуемыеИзмерения(СтруктураИзмеренийРегл, Ложь);
		
		Элементы.БазаРаспределенияНаВыпускНоменклатурнаяГруппа.Видимость 	=
			СтруктураИзмеренийУпр.НоменклатурнаяГруппа ИЛИ СтруктураИзмеренийРегл.НоменклатурнаяГруппа;
		Элементы.БазаРаспределенияНаЗатратыНоменклатурнаяГруппа.Видимость 	=
			СтруктураИзмеренийУпр.НоменклатурнаяГруппа ИЛИ СтруктураИзмеренийРегл.НоменклатурнаяГруппа;
		Элементы.БазаРаспределенияНаВыпускХарактеристикаПродукции.Видимость =
			СтруктураИзмеренийУпр.ХарактеристикаПродукции ИЛИ СтруктураИзмеренийРегл.ХарактеристикаПродукции;
		Элементы.БазаРаспределенияНаВыпускСерияПродукции.Видимость 			=
			СтруктураИзмеренийУпр.СерияПродукции ИЛИ СтруктураИзмеренийРегл.СерияПродукции;
		
		// Заполним соответствие направления распределения и страниц формы для табличной базы
		СоответствиеНаправленийРаспределенияИСтраниц.Добавить(Перечисления.НаправленияРаспределенияЗатрат.Выпуск, 	 	  "СтраницаБазаРаспределенияНаВыпуск");
		СоответствиеНаправленийРаспределенияИСтраниц.Добавить(Перечисления.НаправленияРаспределенияЗатрат.Затраты, 	 	  "СтраницаБазаРаспределенияНаЗатраты");
		СоответствиеНаправленийРаспределенияИСтраниц.Добавить(Перечисления.НаправленияРаспределенияЗатрат.Результат, 	  "СтраницаБазаРаспределенияНаРезультат");
		СоответствиеНаправленийРаспределенияИСтраниц.Добавить(Перечисления.НаправленияРаспределенияЗатрат.ПустаяСсылка(), "СтраницаБазаРаспределенияПустая");
		
	ИначеЕсли ЭтоСКДСпособ Тогда // тип базы СКД
		
		Элементы.СтраницыБазыРаспределения.ТекущаяСтраница = Элементы.СтраницаСКД;
		Элементы.СтраницаТабличная.Видимость 			   = Ложь;
		
		// Получим схему компоновки данных базы
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда // если новый способ
			Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда // если создан копированием
				СхемаКомпоновкиДанных = Параметры.ЗначениеКопирования.СхемаКомпоновкиДанных; // возьмем из копируемого способа
			КонецЕсли;
		Иначе
			СхемаКомпоновкиДанных = Объект.Ссылка.СхемаКомпоновкиДанных; // возьмем из ИБ (из ссылки на текущий способ)
		КонецЕсли;
			
	ИначеЕсли ЭтоПредопределенныйСпособ Тогда // тип базы Предопределенный
		
		ЭтаФорма.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписьюНаСервере" формы справочника
//
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Поместим схему компоновки в записываемый объект
	Если Объект.ТипБазыРаспределения = Перечисления.ТипыБазРаспределения.СКД
	 И ЗначениеЗаполнено(СхемаКомпоновкиДанных) Тогда
		ТекущийОбъект.СхемаКомпоновкиДанных = СхемаКомпоновкиДанных;
	КонецЕсли;
	
КонецПроцедуры

// НА КЛИЕНТЕ

// Процедура - обработчик события "ПриОткрытии" формы справочника
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ИспользоватьГибкуюНастройкуСпособовРаспределенияЗатрат
		 И ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение
		 И НЕ Объект.ИспользоватьПростоеРаспределение Тогда
		 
		// Необходимо открыть обычную (не управляемую) форму
		Отказ = Истина;
		ФормаЭлемента = Объект.Ссылка.ПолучитьФорму("ФормаЭлемента", ВладелецФормы, КлючУникальности);
		ФормаЭлемента.Открыть();
		
		Возврат;
		
	КонецЕсли;
	
	Если Элементы.СтраницыБазыРаспределения.ТекущаяСтраница = Элементы.СтраницаСКД Тогда
		#Если ВебКлиент ИЛИ ТонкийКлиент Тогда
			// В тонком и веб клиенте редактировать СКД нельзя
			Элементы.СтраницыСКД.ТекущаяСтраница 		= Элементы.СтраницаТонкийВебКлиент;
			Элементы.СтраницаТолстыйКлиент.Видимость 	= Ложь;
		#Иначе
			// Редактирование СКД доступно только в толстом клиенте
			Элементы.СтраницыСКД.ТекущаяСтраница 		= Элементы.СтраницаТолстыйКлиент;
			Элементы.СтраницаТонкийВебКлиент.Видимость 	= Ложь;
		#КонецЕсли
	КонецЕсли;
		
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" формы справочника
//
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	#Если ТолстыйКлиентОбычноеПриложение Или ТолстыйКлиентУправляемоеПриложение Тогда
	// Редактирование СКД доступно только в толстом клиенте
	Если Тип(ВыбранноеЗначение) = Тип("СхемаКомпоновкиДанных") Тогда
		СхемаКомпоновкиДанных = Новый ХранилищеЗначения(ВыбранноеЗначение);
	КонецЕсли;
	#КонецЕсли

КонецПроцедуры // ОбработкаВыбора()

// Процедура - обработчик события "ПриИзменении" поля НаправлениеРаспределения
//
&НаКлиенте
Процедура НаправлениеРаспределенияПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////
//  ОБРАБОТЧИКИ КОМАНД (НА КЛИЕНТЕ)

// Процедура - обработчик команды "ПроверитьБазуРаспределения"
//
&НаКлиенте
Процедура ПроверитьБазуРаспределения(Команда)
	
	БазаЗаданаКорректно = ПроверитьБазуРаспределенияСервер();
	
	// Сообщим результат проверки
	Если БазаЗаданаКорректно Тогда
		Предупреждение("Ошибок в базе распределения затрат не обнаружено");
	Иначе
		Предупреждение("Настройка базы распределения затрат выполнена некорректно");
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик команды "РедактироватьСхемуКомпоновкиДанных"
//
&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанных(Команда)
	
	#Если ВебКлиент ИЛИ ТонкийКлиент Тогда
		Предупреждение(НСтр("ru = 'Настройка схемы компоновки данных может быть осуществлена только в режиме толстого клиента.'"));
	#Иначе
		
		// Если СКД не задана, то заполним ее по "шаблону"
		СКД = ?(ЗначениеЗаполнено(СхемаКомпоновкиДанных), СхемаКомпоновкиДанных.Получить(), Неопределено);
		Если СКД = Неопределено Тогда
			СКД = ПолучитьШаблонСхемыКомпоновкиДанных();
		КонецЕсли;
		
		// Вызовем конструктор для интерактивного изменения СКД
		КонструкторСКД = Новый КонструкторСхемыКомпоновкиДанных(СКД);
		КонструкторСКД.Редактировать(ЭтаФорма);
		
	#КонецЕсли
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////
//  ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// НА СЕРВЕРЕ

// Выполняет проверку заполнения базы распределения с типом Табличный
//
&НаСервере
Функция ПроверитьБазуРаспределенияСервер()
	
	// Вызовем алгоритм проверки
	БазаЗаданаКорректно = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПроверитьЗаполнениеБазыРаспределения(
		РеквизитФормыВЗначение("Объект"));
		
	Возврат БазаЗаданаКорректно;
	
КонецФункции

// Подготавливает "шаблон" схемы компоновки для способа с типом базы СКД
//
// Возвращаемое значение:
// 	СхемаКомпоновкиДанных
//
&НаСервере
Функция ПолучитьШаблонСхемыКомпоновкиДанных()
	
	Если Объект.НаправлениеРаспределения = Перечисления.НаправленияРаспределенияЗатрат.Выпуск Тогда
		СхемаКомпоновки = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПолучитьМакет("ШаблонБазыНаВыпуск");
	ИначеЕсли Объект.НаправлениеРаспределения = Перечисления.НаправленияРаспределенияЗатрат.Затраты Тогда
		СхемаКомпоновки = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПолучитьМакет("ШаблонБазыНаЗатраты");
	ИначеЕсли Объект.НаправлениеРаспределения = Перечисления.НаправленияРаспределенияЗатрат.Результат Тогда
		СхемаКомпоновки = Справочники.СпособыРаспределенияЗатратНаВыпуск.ПолучитьМакет("ШаблонБазыНаРезультат");
	Иначе
		СхемаКомпоновки = Новый СхемаКомпоновкиДанных;
	КонецЕсли;
	
	Возврат СхемаКомпоновки;
	
КонецФункции // ПолучитьШаблонСхемыКомпоновкиДанных()

// НА КЛИЕНТЕ

// Управляет внешним видом формы справочника
//
&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	
	Если Элементы.СтраницыБазыРаспределения.ТекущаяСтраница = Элементы.СтраницаТабличная Тогда
		
		// Для базы распределения с типом Табличный установим текущую страницу формы (покажем нужную табличную часть)
		// в зависимости от выбранного направления распределения
		ИмяСтраницы = СоответствиеНаправленийРаспределенияИСтраниц.НайтиПоЗначению(Объект.НаправлениеРаспределения);
		
		Элементы.СтраницыТабличная.ТекущаяСтраница = Элементы[ИмяСтраницы.Представление];
		
	КонецЕсли;
		
КонецПроцедуры
