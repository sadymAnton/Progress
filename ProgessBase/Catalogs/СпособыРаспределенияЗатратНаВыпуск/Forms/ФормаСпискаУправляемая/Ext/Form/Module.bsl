
///////////////////////////////////////////////////////////////////
//  ОБРАБОТЧИКИ СОБЫТИЙ

// НА СЕРВЕРЕ

// Процедура - обработчик события "ПриСозданииНаСервере" формы списка справочника
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установим значение реквизитов формы
	мИспользоватьГибкуюНастройкуСпособовРаспределенияЗатрат = УчетЗатрат.ИспользоватьГибкуюНастройкуСпособовРаспределенияЗатрат();
	мСКДСпособ 		 										= Перечисления.ТипыБазРаспределения.СКД;
	мТабличныйСпособ 										= Перечисления.ТипыБазРаспределения.Табличный;
	
	// Установим видимость кнопок "Создать"
	НевидимыйЭлемент = Элементы.Найти(
		?(мИспользоватьГибкуюНастройкуСпособовРаспределенияЗатрат,
			"ГруппаСоздать",
			"КнопкаСоздать"));
	// Если у пользователя нет права на добавление, то элемент формы будет "спрятан" самой платформой
	Если НевидимыйЭлемент <> Неопределено Тогда
		НевидимыйЭлемент.Видимость = Ложь;
	КонецЕсли;
	
	// Установим режим выбора формы
	Элементы.Список.РежимВыбора 	 = Параметры.РежимВыбора;
	Элементы.КнопкаВыбрать.Видимость = Параметры.РежимВыбора;
	
	// Установим отбор в списке
	Если Параметры.Свойство("ОтборКомпоновкиДанных") Тогда
		ОбщегоНазначенияКлиентСервер.СкопироватьЭлементы(Список.Отбор, Параметры.ОтборКомпоновкиДанных);
	КонецЕсли;
	
КонецПроцедуры

// НА КЛИЕНТЕ

// Процедура - обработчик события "ПередНачаломДобавления" таблицы Список
//
&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если мИспользоватьГибкуюНастройкуСпособовРаспределенияЗатрат Тогда
		ОткрытьФормуНовогоСпособаРаспределения(мПустойСпособ, Копирование, Отказ);
	Иначе
		ОткрытьФормуНовогоСпособаРаспределения(мТабличныйСпособ, Копирование, Отказ);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПередНачаломИзменения" таблицы Список
//
&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если мИспользоватьГибкуюНастройкуСпособовРаспределенияЗатрат
	 И ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
			
			ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
			
			Если НЕ ТекущаяСтрока.ИспользоватьПростоеРаспределение Тогда
				
				// открываем обычную (не управляемую) форму существующего способа распределения
				Отказ = Истина;
				
				ФормаЭлемента = ТекущаяСтрока.ПолучитьФорму("ФормаЭлемента", Элементы.Список);
				ФормаЭлемента.Открыть();
				
				Возврат;
				
			КонецЕсли;
			
	КонецЕсли;
	
	// по умолчанию откроется управляемая форма существующего способа распределения
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////
//  ОБРАБОТЧИКИ КОМАНД (НА КЛИЕНТЕ)

// Процедура - обработчик команды "СоздатьСпособСКД"
//
&НаКлиенте
Процедура СоздатьСпособСКД(Команда)
	
	ОткрытьФормуНовогоСпособаРаспределения(мСКДСпособ);
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////
//  ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// НА СЕРВЕРЕ

// Создает и заполняет новый способ распределения, не использующий гибкий алгоритм распределения расходов
//
&НаСервере
Функция СоздатьСпособРаспределенияСервер(СтруктураПараметры, Копирование)
	
	Если Копирование Тогда // копирование существующего способа
		НовыйСпособ = СтруктураПараметры.ЗначениеКопирования.Скопировать();
	Иначе // добавление нового способа
		НовыйСпособ = Справочники.СпособыРаспределенияЗатратНаВыпуск.СоздатьЭлемент();
		НовыйСпособ.Заполнить(СтруктураПараметры.ЗначенияЗаполнения);
	КонецЕсли;
	
	НовыйСпособ.ТипБазыРаспределения = мПустойСпособ; // для "старых" способов тип базы всегда пустой
	
	Возврат НовыйСпособ;
	
КонецФункции

// НА КЛИЕНТЕ

// Открывает форму (обычную или управляемую) для нового способа распределения
//
&НаКлиенте
Процедура ОткрытьФормуНовогоСпособаРаспределения(ТипБазыРаспределения, Копирование = Ложь, Отказ = Ложь)
	
	Отказ = Истина; // переопределим типовое поведение формы
	
	ТекущаяСтрока 		 = Элементы.Список.ТекущаяСтрока;
	// Определим, является ли текущая строка строкой группировки или строкой способа распределения
	ЭтоСтрокаГруппировки = (ТипЗнч(ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка"));
	ЭтоСтрокаСпособаРаспределения = (ТипЗнч(ТекущаяСтрока) = Тип("СправочникСсылка.СпособыРаспределенияЗатратНаВыпуск"));
	
	// Создадим и заполним структуру параметров для открытия формы нового способа распределения
	СтруктураПараметры = Новый Структура("ЗначенияЗаполнения", Новый Структура);
	СтруктураПараметры.ЗначенияЗаполнения.Вставить("ТипБазыРаспределения", ТипБазыРаспределения);
		
	Если ЭтоСтрокаСпособаРаспределения Или (ЭтоСтрокаГруппировки И ТекущаяСтрока.ИмяГруппировки = "НаправлениеРаспределения") Тогда
		// Если текущая строка это строка способа распределения или строка группировки по направлению распределения,
		// то вставим в параметр заполнения значение направления распределения
		СтруктураПараметры.ЗначенияЗаполнения.Вставить(
			"НаправлениеРаспределения", ?(ЭтоСтрокаГруппировки, ТекущаяСтрока.Ключ, Элементы.Список.ТекущиеДанные.НаправлениеРаспределения));
	КонецЕсли;
	
	Если Копирование Тогда
		СтруктураПараметры.Вставить("ЗначениеКопирования", ТекущаяСтрока);
	КонецЕсли;
	
	Если мИспользоватьГибкуюНастройкуСпособовРаспределенияЗатрат
	 И ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		
		// открываем обычную (не управляемую) форму нового способа распределения
		НовыйСпособ = СоздатьСпособРаспределенияСервер(СтруктураПараметры, Копирование);
		НовыйСпособ.ПолучитьФорму("ФормаЭлемента", Элементы.Список).Открыть();
		
		Возврат;
		
	КонецЕсли;
	
	// открываем управляемую форму нового способа распределения
	ОткрытьФорму("Справочник.СпособыРаспределенияЗатратНаВыпуск.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
	
КонецПроцедуры
