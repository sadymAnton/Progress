
//m.ionov@a-prof.ru 22.10.2014
Процедура ПередЗаписью(Отказ)
	
	//{01.06.2015 Островерхий заявка №б/н 
	Если ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;  
	//01.06.2015 Островерхий} 
	
	Если Не Владелец = Неопределено Тогда
		ЮрФизЛицо = Владелец.ЮрФизЛицо;
	КонецЕсли;
	
	//{09.02.2015 Островерхий заявка №б/н 
	Если КодАдреса = "" Тогда
		КодАдреса = СформироватьНовыйКодАдреса();	
	КонецЕсли;  
	//09.02.2015 Островерхий} 
	
	//{05.05.2017 Островерхий заявка №63784 
	Если УСЗ_ОбобщенныйКлиент.Пустая()
		И ТипЗнч(Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		УСЗ_ОбобщенныйКлиент = Владелец.УСЗ_ОбобщенныйКлиент;	
	КонецЕсли;  
	//05.05.2017 Островерхий}
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	//начало изменений Ожиганов 14.07.2015 создание базы МСФО
	Если ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;  
	//конец изменений 
	Если Не Отказ Тогда
		ЗаписатьИзменениеОтсрочки(Отказ);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаписатьИзменениеОтсрочки(Отказ)
	
	Если Не ПравоДоступа("Изменение",Метаданные.РегистрыСведений.ПКК_ИсторияИзмененияКредитногоЛимитаИОтсрочкиПлатежа) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПоРегистру = РегистрыСведений.ПКК_ИсторияИзмененияКредитногоЛимитаИОтсрочкиПлатежа.СрезПоследних(ТекущаяДата(), Новый Структура("Объект", Ссылка));
	
	Если ДанныеПоРегистру.Количество() = 0 Тогда
		СформируемЗаписьПоРегиструОтсрочка(Отказ);
	ИначеЕсли НЕ ДанныеПоРегистру[0].ДопустимоеЧислоДнейЗадолженности = ПКК_ДопустимоеЧислоДнейЗадолженности Тогда
	    СформируемЗаписьПоРегиструОтсрочка(Отказ);
	КонецЕсли;
КонецПроцедуры

Процедура СформируемЗаписьПоРегиструОтсрочка(Отказ)
			
	мДатаЗаписи = ТекущаяДата();
	
	НаборЗаписей = РегистрыСведений.ПКК_ИсторияИзмененияКредитногоЛимитаИОтсрочкиПлатежа.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Ссылка);
	НаборЗаписей.Отбор.Период.Установить(мДатаЗаписи);
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		НоваяСтрока = НаборЗаписей.Добавить();
	Иначе
		НоваяСтрока = НаборЗаписей.Получить(0);
	КонецЕсли;
	НоваяСтрока.Период = мДатаЗаписи;
	НоваяСтрока.Объект = Ссылка;
	НоваяСтрока.ДопустимоеЧислоДнейЗадолженности = ПКК_ДопустимоеЧислоДнейЗадолженности;
	НоваяСтрока.Пользователь = глЗначениеПеременной("глТекущийПользователь");
	
	Попытка		
		НаборЗаписей.Записать();		
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(), Отказ);
	КонецПопытки;

КонецПроцедуры
//----m.ionov@a-prof.ru---

//{09.02.2015 Островерхий заявка №б/н 
Функция СформироватьНовыйКодАдреса() Экспорт 

    тКодАдреса = "АП1";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПОДСТРОКА(АдресаПоставки.КодАдреса, 3, 10) КАК Строка,
		|	АдресаПоставки.Ссылка КАК НомерСтроки
		|ПОМЕСТИТЬ Дано
		|ИЗ
		|	Справочник.АдресаПоставки КАК АдресаПоставки
		|ГДЕ
		|	АдресаПоставки.Владелец = &Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК С,
		|	1 КАК П
		|ПОМЕСТИТЬ Р16
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	1,
		|	10
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	2,
		|	100
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	3,
		|	1000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	4,
		|	10000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	5,
		|	100000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	6,
		|	1000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	7,
		|	10000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	8,
		|	100000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	9,
		|	1000000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	10,
		|	10000000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	11,
		|	100000000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	12,
		|	1000000000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	13,
		|	10000000000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	14,
		|	100000000000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	15,
		|	1000000000000000
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	16,
		|	10000000000000000
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(А.П * Б.С * ВЫБОР
		|			КОГДА ПОДСТРОКА(Дано.Строка, 1, 17 - А.С) ПОДОБНО ""%.%""
		|				ТОГДА 10
		|			ИНАЧЕ 1
		|		КОНЕЦ) / МИНИМУМ(ВЫБОР
		|			КОГДА НЕ ПОДСТРОКА(Дано.Строка, 1, 17 - А.С) ПОДОБНО ""%.%""
		|				ТОГДА А.П
		|			ИНАЧЕ 100000000000000000
		|		КОНЕЦ) КАК Ответ
		|ПОМЕСТИТЬ втКодАПЧислом
		|ИЗ
		|	Дано КАК Дано,
		|	Р16 КАК А,
		|	Р16 КАК Б
		|ГДЕ
		|	Б.С < 10
		|	И ПОДСТРОКА(Дано.Строка, 17 - А.С, 1) = ПОДСТРОКА(""0123456789"", Б.С + 1, 1)
		|
		|СГРУППИРОВАТЬ ПО
		|	Дано.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ЕСТЬNULL(втКодАПЧислом.Ответ, 0)) КАК КодАдреса
		|ИЗ
		|	втКодАПЧислом КАК втКодАПЧислом";

	Запрос.УстановитьПараметр("Владелец",Владелец);	
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Попытка
			
			//ЭтоРЦ = Найти(ВыборкаДетальныеЗаписи.КодАдреса,"РЦ") > 0;
			//тКодАдреса = Число(СтрЗаменить(СтрЗаменить(ВыборкаДетальныеЗаписи.КодАдреса,"АП",""),"РЦ",""))+1;	
			//тКодАдреса = ?(ЭтоРЦ,"РЦ","АП")+СтрЗаменить(Строка(тКодАдреса),Символы.НПП,"");
			ЗапросКодАдреса = ?(ВыборкаДетальныеЗаписи.КодАдреса = Null,0,ВыборкаДетальныеЗаписи.КодАдреса);
			тКодАдреса = "АП"+СтрЗаменить(Строка(ЗапросКодАдреса+1),Символы.НПП,"");
			
		Исключение
			
			Сообщить("При формировании нового кода АП произошла ошибка!",СтатусСообщения.ОченьВажное);
			Сообщить(ОписаниеОшибки());
			
		КонецПопытки; 
	
	КонецЕсли; 
	
	Возврат тКодАдреса;

КонецФункции // СформироватьНовыйКодАдреса()

Процедура ПриКопировании(ОбъектКопирования)
	
	КодАдреса = "";
	
КонецПроцедуры
//09.02.2015 Островерхий} 

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//>>170715 Степанов закомментировано: не у всех есть доступ к этим реквизитам
	////{01.06.2015 Островерхий заявка №40234 
	//Если ТипЗнч(Владелец) = тип("СправочникСсылка.Контрагенты") Тогда
	//
	//	ПроверяемыеРеквизиты.Добавить("Дивизион");	
	//	ПроверяемыеРеквизиты.Добавить("НСИ_КатегорияКлиента");
	//	ПроверяемыеРеквизиты.Добавить("ДопОфис");	
	//
	//КонецЕсли;  
	////01.06.2015 Островерхий} 
	
КонецПроцедуры
 
