////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем КонтролироватьПорядок Экспорт;

Перем ПрошлыйИзмененныйРодительОбъектаДоступа;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура, обработчик события "ПередЗаписью" объекта
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПрошлыйИзмененныйРодительОбъектаДоступа = ?(Не ЭтоНовый() и Не Ссылка.Родитель = Родитель, Ссылка.Родитель, Неопределено);
	НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, Родитель);
	
	Если НЕ Отказ Тогда
		ОбщегоНазначенияЗК.ПередЗаписьюОбъектаПорядка(Отказ, ЭтотОбъект, КонтролироватьПорядок);
	КонецЕсли;
	
	//начало изменений БП 07 
	ПРГЭтоБухЗатраты = ОпределитьЧтоЗаПодразделение();
	//конец изменений БП 07	 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка, ПрошлыйИзмененныйРодительОбъектаДоступа, Отказ);
	
	//начало изменений БП 07 
	Если ПРГЭтоБухЗатраты Тогда
		 РегСоотв = РегистрыСведений.ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.СоздатьНаборЗаписей();
		 РегСоотв.Отбор.ПодразделениеКадровогоУчета.Значение 	 = Ссылка;
		 РегСоотв.Отбор.ПодразделениеКадровогоУчета.Использование = Истина;
		 РегСоотв.Прочитать();
		 Если РегСоотв.Количество() > 0 Тогда
			 РегСоотв.Очистить();
			 РегСоотв.Записать();
		 КонецЕсли;	 
	 КонецЕсли;		
	//конец изменений БП 07	 
	
КонецПроцедуры

//начало изменений БП 07 
Функция ОпределитьЧтоЗаПодразделение() Экспорт 
	Результат = ПРГЭтоБухЗатраты; 
	Если Уровень() > 0 Тогда // определим что это за подразделение
	    ТекРод = Родитель;
		Пока ТекРод.Уровень() > 0 Цикл
			ТекРод = ТекРод.Родитель;
		КонецЦикла;
		Результат  = ТекРод.ПРГЭтоБухЗатраты;
	КонецЕсли;	
    возврат Результат;
КонецФункции	
//конец изменений БП 07	 


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ


КонтролироватьПорядок = Истина;
