
Перем мНовыйНомер;
Перем мПрефикс;

//Blik 191113
Процедура Печать(текстмакета,СсылкаНаОбъект) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент; 	
	ТабДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	Макет = ПолучитьМакет("Обложка");
	ОбластьМакета = Макет.ПолучитьОбласть("Обложка"); 
	
	Запрос = Новый Запрос;
	
   Запрос.Текст =
	"ВЫБРАТЬ
	|	ПРГ_ДокументыАрхива.Код КАК НомерТома,
	|	ПРГ_ДокументыАрхива.НачДата,
	|	ПРГ_ДокументыАрхива.КонДата,
	|	ПРГ_ДокументыАрхива.КоличествоЛистов,
	|	ПРГ_ДокументыАрхива.Родитель.Наименование КАК НаименованиеДела,
	|	ПРГ_ДокументыАрхива.Родитель.КодДела КАК КодДела,
	|	ПРГ_ДокументыАрхива.Родитель.Код КАК Номердела,
	|	ПРГ_ДокументыАрхива.Родитель.СрокХранения КАК СрокХранения,
	|	РаботникиОрганизацийСрезПоследних.Должность КАК ДолжностьСоставителя,
	|	ФИОФизЛицСрезПоследних.Фамилия + "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + ""."" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + ""."" КАК Составитель
	|ИЗ
	|	Справочник.ПРГ_ДокументыАрхива КАК ПРГ_ДокументыАрхива
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаДок, ) КАК РаботникиОрганизацийСрезПоследних
	|		ПО ПРГ_ДокументыАрхива.Ответственный.ФизЛицо = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДок, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ПРГ_ДокументыАрхива.Ответственный.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ПРГ_ДокументыАрхива.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ДатаДок", ТекущаяДата());


	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаДанных.Следующий() Тогда
		ОбластьМакета.Параметры.Заполнить(ВыборкаДанных); 
		ПредставлениеДатыН = Формат(ВыборкаДанных.НачДата, "ДЛФ=D");
		ОбластьМакета.Параметры.Начдата=СокрЛП(ПредставлениеДатыН);
		ПредставлениеДатыК = Формат(ВыборкаДанных.КонДата, "ДЛФ=D");
		ОбластьМакета.Параметры.Кондата=СокрЛП(ПредставлениеДатыК);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	ТабДокумент.Автомасштаб = Истина;
	//ТабДокумент.Напечатать();   
	ТабДокумент.Показать("Обложка дела");
	//УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, 0, Ложь, "Обложка дела");
	    
    //Возврат ТабДокумент;
	
КонецПроцедуры


Функция ПолучитьТекущееМестоположение(ДатаОтбора,Докархива)   Экспорт
	
	  Запрос = Новый Запрос;
	  Запрос.Текст =
	  
	  "ВЫБРАТЬ
	  |	ПРГ_ДокументыАрхиваМестоположениеСрезПоследних.МестоположениеДокументаАрхива КАК Местоположение
	  |ИЗ
	  |	РегистрСведений.ПРГ_ДокументыАрхиваМестоположение.СрезПоследних(&Дата, ) КАК ПРГ_ДокументыАрхиваМестоположениеСрезПоследних
	  |ГДЕ
	  |	ПРГ_ДокументыАрхиваМестоположениеСрезПоследних.ДокументАрхива = &ДокументАрхива";
	  
	  Запрос.УстановитьПараметр("ДокументАрхива", Докархива);
	  Запрос.УстановитьПараметр("Дата", ДатаОтбора);

	  результат = Запрос.Выполнить().Выбрать();
	  
	  Если результат.Следующий() Тогда
		  Возврат результат.Местоположение;
	  Иначе
		   Возврат Справочники.ПРГ_МестоположениеДокументовАрхива.ПустаяСсылка();
	  КонецЕсли;
	  
КонецФункции


/// Кунов О.В., 05.08.2014 - 30330
Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	
	Если ТекущаяДата() > Справочники.ПРГ_ДокументыАрхива.ПолучитьДатуНачалаАвтонумерацииДокументов() Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ЭтоГруппа Тогда
			
			УстановитьПодразделениеОрганизации();
			
			ПодразделениеПользователя = ПодразделениеОрганизации;
			
			Если ЗначениеЗаполнено(ПодразделениеПользователя) Тогда
			
				Пока Истина Цикл
					
					Префикс = ПолучитьПрефиксАрхиваДляПодразделения(ПодразделениеПользователя);
					
					Если ПодразделениеПользователя.Уровень() = 0 Тогда
						Прервать;
					КонецЕсли; 
					
					Если Префикс = Неопределено Тогда
						ПодразделениеПользователя = ПодразделениеПользователя.Родитель;
						Продолжить;
					КонецЕсли;
					
					Прервать;
					
				КонецЦикла;
				
			Иначе
				
				Префикс = "";
				Пока Не ЗначениеЗаполнено(Префикс) Цикл
					ВвестиСтроку(Префикс, "Введите префикс номера");
				КонецЦикла;
			
			КонецЕсли; 
			
			мПрефикс = Префикс;
			мНовыйНомер = Справочники.ПРГ_ДокументыАрхива.ПолучитьНовыйНомер(мПрефикс);
			
			Код = мПрефикс + "-" + мНовыйНомер;
			
		Иначе
			
			МаксимальнаяДлинаКода = Метаданные().ДлинаКода;
			
			КодРодителя = СокрЛП(Родитель.Код);
			Если СтрДлина(КодРодителя) > МаксимальнаяДлинаКода - 4 Тогда
				КодРодителя = Сред(КодРодителя, СтрДлина(КодРодителя) - МаксимальнаяДлинаКода + 5);
			КонецЕсли;
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПРГ_ДокументыАрхива.Код КАК Код
			|ИЗ
			|	Справочник.ПРГ_ДокументыАрхива КАК ПРГ_ДокументыАрхива
			|ГДЕ
			|	ПРГ_ДокументыАрхива.Родитель = &Группа
			|	И НЕ ПРГ_ДокументыАрхива.ЭтоГруппа
			|	И ПРГ_ДокументыАрхива.Код ПОДОБНО &ШаблонКода
			|
			|УПОРЯДОЧИТЬ ПО
			|	Код УБЫВ");
			
			Запрос.УстановитьПараметр("Группа", Родитель);
			Запрос.УстановитьПараметр("ШаблонКода", КодРодителя + "%");
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Попытка
					Номер = Формат(Число(Прав(Выборка.Код, 3)) + 1, "ЧЦ=3; ЧВН=");
				Исключение
					#Если Клиент Тогда
						//Сообщить("Невозможно присвоить номер документу! Обратитесь к разработчикам");
					#КонецЕсли
					Номер = "000";
				КонецПопытки; 
			Иначе
				Номер = "001";
			КонецЕсли;
			Код = КодРодителя + "/" + Номер;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьПрефиксАрхиваДляПодразделения(Подразделение)

	Результат = Неопределено;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &Подразделение
	|	И ЗначенияСвойствОбъектов.Свойство = &Свойство");
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Префикс документов архива"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		Результат = Выборка.Значение;
	
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции // ПолучитьПрефиксАрхиваДляПодразделения()
 

Функция ПолучитьПодразделениеПользователя()

	Результат = Неопределено;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НастройкиПользователей.Значение
	|ИЗ
	|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	|ГДЕ
	|	НастройкиПользователей.Пользователь = &Пользователь
	|	И НастройкиПользователей.Настройка = &Настройка");
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.НастройкиПользователей.ОсновноеПодразделениеОрганизации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.Значение) Тогда
		
		Результат = Выборка.Значение;
		
	Иначе
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеЗатрат КАК Подразделение
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета КАК ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета
		|				ПО СотрудникиОрганизаций.ТекущееПодразделениеОрганизации = ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеКадровогоУчета
		|			ПО ФизическиеЛица.Ссылка = СотрудникиОрганизаций.Физлицо
		|		ПО Пользователи.ФизЛицо = ФизическиеЛица.Ссылка
		|ГДЕ
		|	Пользователи.Ссылка = &Пользователь");
		
		Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
		
			Результат = Выборка.Подразделение;
		
		КонецЕсли; 
		
	КонецЕсли;

	Возврат Результат;
	
КонецФункции // ПолучитьПодразделениеПользователя()


Процедура УстановитьПодразделениеОрганизации()

	Если Уровень() > 0 Тогда
		ПодразделениеОрганизации = Родитель.ПодразделениеОрганизации;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		ПодразделениеОрганизации = ПолучитьПодразделениеПользователя();
	КонецЕсли;	

КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УстановитьПодразделениеОрганизации();
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	//начало изменений Ожиганов 14.07.2015 создание базы МСФО
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	//конец изменений 
	
	Справочники.ПРГ_ДокументыАрхива.ЗаписатьНовыйНомер(мПрефикс, мНовыйНомер);
	
КонецПроцедуры
/// 30330
