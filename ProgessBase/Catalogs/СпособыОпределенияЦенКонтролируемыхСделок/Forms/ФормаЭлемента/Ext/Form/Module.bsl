////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	Если Форма.Объект.ЦенаЯвляетсяРегулируемой Тогда 
		Форма.Элементы.ГруппаКодов.Доступность = Истина;
		Форма.Элементы.ГруппаИсточникиИнформации.Доступность = Истина;
	Иначе
		Форма.Элементы.ГруппаКодов.Доступность = Ложь;
		Форма.Элементы.ГруппаИсточникиИнформации.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

&НаКлиенте
Процедура ЦенаЯвляетсяРегулируемойПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	

	СписокКодов = КонтролируемыеСделкиПовтИсп.ПолучитьКодыОпределенияЦеныСделки();
	Элементы.КодОпределенияЦеныСделки.СписокВыбора.Очистить();
	Для Каждого Код Из СписокКодов Цикл
		НовыйКод = Элементы.КодОпределенияЦеныСделки.СписокВыбора.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйКод, Код);
	КонецЦикла;

	СписокКодов = КонтролируемыеСделкиПовтИсп.ПолучитьКодыМетодовЦенообразования();
	Элементы.КодМетодаЦенообразования.СписокВыбора.Очистить();
	Для Каждого Код Из СписокКодов Цикл
		НовыйКод = Элементы.КодМетодаЦенообразования.СписокВыбора.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйКод, Код);
	КонецЦикла;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры
