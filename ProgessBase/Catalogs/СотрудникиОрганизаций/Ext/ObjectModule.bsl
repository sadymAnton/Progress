////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ПолучитьКадровыеДанныеФизлица Экспорт;

///////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Формирует запрос по документу
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечатиТрудовогоДоговора() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("СправочникСсылка", Ссылка);
	Запрос.УстановитьПараметр("Физлицо", Физлицо);
	Запрос.УстановитьПараметр("Организация", ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("ДатаДокумента",	 ДатаДоговора);
	
	// Выберем (если есть доступ) ответственное физлицо
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо КАК Физлицо,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование КАК НаименованиеФизлица,
	|	ФизическиеЛица.Комментарий
	|ПОМЕСТИТЬ ВТОтветственноеЛицо
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|			&ДатаДокумента,
	|			ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|				И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФизическиеЛица.Ссылка";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтветственноеЛицоОрганизации.Должность КАК ДолжностьРуководителя,
	|	ТрудовойДоговор.НомерДоговора КАК НомерДок,
	|	ТрудовойДоговор.ДатаДоговора КАК ДатаДок,
	|	ТрудовойДоговор.Организация.НаименованиеПолное КАК ПолноеНазваниеОрганизации,
	|	ЕСТЬNULL(ФИООтветственныхЛиц.Фамилия + "" "" + ФИООтветственныхЛиц.Имя + "" "" + ФИООтветственныхЛиц.Отчество, ОтветственноеЛицоОрганизации.НаименованиеФизлица) КАК ФИОРуководителя,
	|	ЕСТЬNULL(ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество, ТрудовойДоговор.Физлицо.Наименование) КАК ФИОРаботника,
	|	ТрудовойДоговор.ДатаОкончания КАК ДатаУвольнения,
	|	ТрудовойДоговор.ДатаНачала КАК ДатаПриема,
	|	ТрудовойДоговор.Должность.Наименование КАК Должность,
	|	ТрудовойДоговор.ЗанимаемыхСтавок,
	|	ТрудовойДоговор.ИспытательныйСрок,
	|	ТрудовойДоговор.ПодразделениеОрганизации.Наименование КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТрудовойДоговор.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|			ТОГДА ""основной работе""
	|		ИНАЧЕ ""совместительству""
	|	КОНЕЦ КАК ВидЗанятости,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи,
	|	ВЫРАЗИТЬ(ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан КАК СТРОКА(300)) КАК ДокументКемВыдан,
	|	АдресРегистрации.Представление КАК АдресРегистрации,
	|	ТелефонДомашний.Представление КАК Телефоны,
	|	КонтактнаяИнформация.Представление КАК АдресОрганизации,
	|	ТелефонОрганизации.Представление КАК ТелефоныОрганизации,
	|	ТрудовойДоговор.Организация.Наименование КАК НазваниеОрганизации,
	|	ТрудовойДоговор.Организация.ИНН + ""/"" + ТрудовойДоговор.Организация.КПП КАК ИНН,
	|	ТрудовойДоговор.ГрафикРаботы.ВидГрафика КАК ВидГрафика,
	|	ТрудовойДоговор.ГрафикРаботы.ДлительностьРабочейНедели КАК ДлительностьРабочейНедели,
	|	ТрудовойДоговор.ВидРасчета,
	|	ТрудовойДоговор.ТарифнаяСтавка,
	|	ТрудовойДоговор.ВалютаТарифнойСтавки.Наименование КАК ВалютаТарифнойСтавки,
	//|	ТрудовойДоговор.ПерсональныеНадбавки.(
	//|		Ссылка,
	//|		НомерСтроки,
	//|		Надбавка КАК Надбавка,
	//|		Показатель1
	//|	)
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК ТрудовойДоговор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтветственноеЛицо КАК ОтветственноеЛицоОрганизации
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&ДатаДокумента,
	|				Физлицо В
	|					(ВЫБРАТЬ
	|						Ответственные.Физлицо
	|					ИЗ
	|						ВТОтветственноеЛицо КАК Ответственные)) КАК ФИООтветственныхЛиц
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, Физлицо = &Физлицо) КАК ФИОФизЛиц
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаДокумента, Физлицо = &Физлицо) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресРегистрации
	|		ПО ТрудовойДоговор.Физлицо = АдресРегистрации.Объект
	|			И (АдресРегистрации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТелефонДомашний
	|		ПО ТрудовойДоговор.Физлицо = ТелефонДомашний.Объект
	|			И (ТелефонДомашний.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО ТрудовойДоговор.Организация = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ТелефонОрганизации
	|		ПО ТрудовойДоговор.Организация = ТелефонОрганизации.Объект
	|			И (ТелефонОрганизации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации))
	|ГДЕ
	|	ТрудовойДоговор.Ссылка = &СправочникСсылка
	///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
	// Измайлова Полина 24.08.2011 10:34 
	|;
	|
	|ВЫБРАТЬ
	|	AVT_ПерсональныеНадбавкиСотрудниковСрезПоследних.Период,
	|	AVT_ПерсональныеНадбавкиСотрудниковСрезПоследних.Надбавка,
	|	AVT_ПерсональныеНадбавкиСотрудниковСрезПоследних.Показатель1
	|ИЗ
	|	РегистрСведений.AVT_ПерсональныеНадбавкиСотрудников.СрезПоследних(
	|			,
	|			Сотрудник = &СправочникСсылка
	|				И Период В
	|					(ВЫБРАТЬ
	|						МАКСИМУМ(AVT_ПерсональныеНадбавкиСотрудниковСрезПоследних.Период) КАК Период
	|					ИЗ
	|						РегистрСведений.AVT_ПерсональныеНадбавкиСотрудников.СрезПоследних(, Сотрудник = &СправочникСсылка) КАК AVT_ПерсональныеНадбавкиСотрудниковСрезПоследних)) КАК AVT_ПерсональныеНадбавкиСотрудниковСрезПоследних";
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}                                          
	
	// ИЗМЕНЕНИЕ: Измайлова Полина 24.08.2011 10:38  
	//	Возврат Запрос.Выполнить();
	Возврат Запрос.ВыполнитьПакет();
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросДляПечати()

// Функция формирует уникальный номер трудового договора
// уникальность в пределах года
// 
Функция ПолучитьНомерТрудовогоДоговора() Экспорт
	
	Если Организация.Пустая() Тогда
		Возврат Справочники.СотрудникиОрганизаций.ПолучитьНомерТрудовогоДоговора(Организация, ВидДоговора, ДатаДоговора, НомерДоговора);
	КонецЕсли;
	
	ВидыДоговоров	= Новый Массив;
	ВидыДоговоров.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);

	СотрудникиОрганизацийПереопределяемый.ДополнитьВидыДоговоровДляПолученияНомера(ВидыДоговоров);

	Если ВидыДоговоров.Найти(ВидДоговора) = Неопределено Тогда
		Возврат НомерДоговора;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	ДатаДоговораДляЗапроса = ?(ЗначениеЗаполнено(ДатаДоговора), ДатаДоговора, ОбщегоНазначения.ПолучитьРабочуюДату());
	
	Запрос.УстановитьПараметр("парамОрганизация",Организация);
	Запрос.УстановитьПараметр("парамНачалоГода" ,НачалоГода(НачалоДня(ДатаДоговораДляЗапроса)));
	Запрос.УстановитьПараметр("парамКонецГода"  ,КонецГода(КонецДня(ДатаДоговораДляЗапроса)));
	Запрос.УстановитьПараметр("парамВидДоговора" ,ВидДоговора);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СотрудникиОрганизаций.НомерДоговора) КАК НомерДок
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Организация = &парамОрганизация
	|	И СотрудникиОрганизаций.ВидДоговора = &парамВидДоговора
	|	И СотрудникиОрганизаций.ДатаДоговора МЕЖДУ &парамНачалоГода И &парамКонецГода";
	
	Запрос.Текст = ТекстЗапроса;
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Организация.Префикс + "0000001";
	Иначе
		
		СтрокаРезультата = Запрос.Выполнить().Выгрузить()[0];
		Если НЕ ЗначениеЗаполнено(СтрокаРезультата.НомерДок) Тогда
			Возврат Организация.Префикс + "0000001";
		Иначе
			Возврат ПроцедурыУправленияПерсоналом.ПолучитьСледующийНомер(СокрП(СтрокаРезультата.НомерДок));
		КонецЕсли;
		
	КонецЕсли;

	
КонецФункции // ПолучитьНомерТрудовогоДоговора()

Процедура ПроверитьНомерТрудовогоДоговора(НачальнаяДатаДокумента) Экспорт
	
	Справочники.СотрудникиОрганизаций.ПроверитьНомерТрудовогоДоговора(Организация, ВидДоговора, НачальнаяДатаДокумента, ДатаДоговора, НомерДоговора);
	
КонецПроцедуры // ПроверитьНомерТрудовогоДоговора() 

// Функция формирует очередной табельный номер сотрудника
// уникальность в пределах организации и вида договора
// Возвращаемое значение:
//   Строка   – табельный номер
//
Функция ПолучитьОчереднойТабельныйНомер() Экспорт
	
	Если Не ЗначениеЗаполнено(ВидДоговора) Тогда
		Возврат "";
	КонецЕсли;
	
	Префикс = "";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("парамОрганизация",Организация);
	парамВидДоговора = Новый Массив;
	
	СотрудникиОрганизацийПереопределяемый.ЗаполнитьПараметрыВидовДоговоров(парамВидДоговора, ВидДоговора, Префикс);
	
	Запрос.УстановитьПараметр("парамВидДоговора",парамВидДоговора);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(СотрудникиОрганизаций.Код) КАК Код
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Организация = &парамОрганизация
	|	И СотрудникиОрганизаций.ВидДоговора В(&парамВидДоговора)
	|	И СотрудникиОрганизаций.Ссылка <> &Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатаЗапроса = Запрос.Выполнить();
	Если РезультатаЗапроса.Пустой() Тогда
		Возврат ?(ЗначениеЗаполнено(Префикс), Префикс + "000000001", "0000000001");
	Иначе
		СтрокаРезультата = РезультатаЗапроса.Выгрузить()[0];
		Если НЕ ЗначениеЗаполнено(СтрокаРезультата.Код) Тогда
			Возврат ?(ЗначениеЗаполнено(Префикс), Префикс + "000000001", "0000000001");
		Иначе
			Возврат ПроцедурыУправленияПерсоналом.ПолучитьСледующийНомер(СокрП(СтрокаРезультата.Код));
		КонецЕсли;
	КонецЕсли;
	
КонецФункции // ПолучитьОчереднойТабельныйНомер()

#Если ТолстыйКлиентОбычноеПриложение Тогда

Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если ИмяМакета = "ТрудовойДоговор" Или ИмяМакета = "ТрудовойДоговорДистанционный" Тогда
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТрудовойДоговор_Печать";
		
		// получаем данные для печати
		Выборка = СформироватьЗапросДляПечатиТрудовогоДоговора().Выбрать();
		
		// получаем макет
		Макет = ПолучитьМакет(?(ИмяМакета = "ТрудовойДоговор","ТрудовойДоговор","ТрудовойДоговорПриДистанционнойРаботе"));
		
		// выводим данные 
		Если Выборка.Следующий() Тогда
			Макет.Параметры.Заполнить(Выборка);
			Макет.Параметры.ИспытательныйСрокСтрокой = ?(НЕ ЗначениеЗаполнено(Выборка.ИспытательныйСрок),"             месяцев", "" + Выборка.ИспытательныйСрок + " месяца(ев)" );
			Если ИмяМакета = "ТрудовойДоговор" Тогда
				Макет.Параметры.РежимРаботы = "" + Выборка.ВидГрафика + "; " + Выборка.ДлительностьРабочейНедели + " - часовая рабочая неделя";
			КонецЕсли;
			Макет.Параметры.ФормаОплаты = "Форма оплаты: " + Выборка.ВидРасчета + "; Оклад (тариф) = " + Выборка.ТарифнаяСтавка + " ("+Выборка.ВалютаТарифнойСтавки+")";  
			Макет.Параметры.ПолноеНазваниеОрганизации = СокрЛП(Макет.Параметры.ПолноеНазваниеОрганизации);
			Макет.Параметры.ДокументКемВыдан = СокрЛП(Макет.Параметры.ДокументКемВыдан);
			
			ВыборкаПерсональныхНадбавок = Выборка.ПерсональныеНадбавки.Выбрать();
			Если ВыборкаПерсональныхНадбавок.Количество()>0 Тогда
				СтрокаНадбавки = "Персональные надбавки: ";
				Пока ВыборкаПерсональныхНадбавок.Следующий() Цикл
					СтрокаНадбавки = СтрокаНадбавки + ВыборкаПерсональныхНадбавок.Надбавка + "- " + ВыборкаПерсональныхНадбавок.Показатель1 + "; ";
				КонецЦикла;
				Макет.Параметры.Надбавки = СтрокаНадбавки;
			КонецЕсли;
		КонецЕсли;
		
		// выводим готовый документ
		ТабДокумент.Вывести(Макет);
		
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ?(ИмяМакета = "ТрудовойДоговор","Трудовой договор","Трудовой договор при дистанционной работе"));
		
	КонецЕсли;
	
	Возврат СотрудникиОрганизацийПереопределяемый.Печать(ИмяМакета, КоличествоЭкземпляров, НаПринтер, ЭтотОбъект);
	
КонецФункции

#КонецЕсли

// Возвращает доступные варианты печати 
//
// Вовращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = СотрудникиОрганизацийПереопределяемый.ПолучитьСтруктуруПечатныхФорм(ЭтотОбъект);
	
	Возврат СтруктураПечатныхФорм;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "Копирование" объекта
Процедура ПриКопировании(ОбъектКопирования)
	
	Если Не ЭтоГруппа Тогда
		Физлицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		Наименование = "";
		Если ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
			НомерДоговора = ПолучитьНомерТрудовогоДоговора();	
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

// Процедура - обработчик события "Заполнение" объекта
Процедура ОбработкаЗаполнения(Основание)
	
	ТипОснования = ТипЗнч(Основание);
	
	Если ТипОснования = Тип("СправочникСсылка.ФизическиеЛица") 
		И НЕ Основание.ЭтоГруппа Тогда
		Физлицо = Основание;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписью" объекта
//
//Процедура ПередЗаписью(Отказ)
//	
Процедура ПередЗаписью(Отказ)
	
	Если ПолучитьКадровыеДанныеФизлица Тогда
		СотрудникиОрганизацийПереопределяемый.МодульОбъектаПередЗаписьюДополнительно(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоГруппа И Физлицо.Пустая() Тогда
		ОбщегоНазначенияЗК.СообщитьОбОшибке("Для сотрудника не задано физическое лицо!", Отказ);
	КонецЕсли;
	
	Если Не ЭтоГруппа И ОбособленноеПодразделение.Пустая() Тогда
		ОбособленноеПодразделение = Организация
	КонецЕсли;
	
	Если Не ЭтоГруппа И НЕ ЗначениеЗаполнено(ДатаПриемаНаРаботу) и ТекущееОбособленноеПодразделение <> ОбособленноеПодразделение Тогда
		ТекущееОбособленноеПодразделение = ОбособленноеПодразделение;
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(Физлицо) И Константы.ПРГ_ПроверятьВозрастПриЗаписиСотрудника.Получить() Тогда
	//	
	//	// Физлицо.ДатаРождения
	//	Запрос = Новый Запрос;
	//	Запрос.Текст =
	//	"ВЫБРАТЬ
	//	|	РАЗНОСТЬДАТ(СотрудникиОрганизаций.Физлицо.ДатаРождения, &ТекДата, ГОД) КАК Возраст
	//	|ИЗ
	//	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	//	|ГДЕ
	//	|	СотрудникиОрганизаций.Ссылка = &Ссылка";
	//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	//	РезТЗ = Запрос.Выполнить().Выгрузить();
	//	Если РезТЗ.Количество() = 1 Тогда
	//		Если РезТЗ[0].Возраст < 18 Тогда
	//			Режим = РежимДиалогаВопрос.ОК;
	//			Вопрос("Сотруднику менее 18 лет", Режим, 0);       
	//			Отказ = Истина;
	//		Конецесли;			
	//	КонецЕсли;
	//КонецЕсли;    //Blik 250915 закком ошибка при записи док - уточнить нужно ли тут
	
КонецПроцедуры // ПередЗаписью()

Функция ПолучитьСписокФизлиц(НаименованиеФизлица, ФизлицоОбъект) Экспорт
	
	НаименованиеФизлица = СтрЗаменить(НаименованиеФизлица, "~", "~~");
	НаименованиеФизлица = СтрЗаменить(НаименованиеФизлица, "%", "~%");
	НаименованиеФизлица = СтрЗаменить(НаименованиеФизлица, "_", "~_");
	НаименованиеФизлица = СтрЗаменить(НаименованиеФизлица, "[", "~[");
	НаименованиеФизлица = СтрЗаменить(НаименованиеФизлица, "-", "~-");
	НаименованиеФизлица = НаименованиеФизлица+"%";

	
	НетДатыРождения = Не ЗначениеЗаполнено(ФизлицоОбъект.ДатаРождения);
	НетИНН = Не (ЗначениеЗаполнено(ФизлицоОбъект.ИНН) или РегламентированнаяОтчетность.ИННСоответствуетТребованиям(ФизлицоОбъект.ИНН, Перечисления.ЮрФизЛицо.ФизЛицо));
	НетСтраховогоНомераПФР = Не (ЗначениеЗаполнено(СтрЗаменить(Лев(ФизлицоОбъект.СтраховойНомерПФР,11),"-","")) или РегламентированнаяОтчетность.СтраховойНомерПФРСоответствуетТребованиям(ФизлицоОбъект.СтраховойНомерПФР));
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФизическиеЛица.Ссылка
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	(НЕ ФизическиеЛица.ЭтоГруппа)
	|	И (&парамНетДатыРождения
	|			ИЛИ &парамДатаРождения = ФизическиеЛица.ДатаРождения)
	|	И (&парамНетИНН
	|			ИЛИ &парамИНН = ФизическиеЛица.ИНН)
	|	И (&парамНетСтраховогоНомераПФР
	|			ИЛИ &парамСтраховойНомерПФР = ФизическиеЛица.СтраховойНомерПФР)
	|	И ФизическиеЛица.Наименование ПОДОБНО &парамНаименование СПЕЦСИМВОЛ ""~""";
	
	Запрос.УстановитьПараметр("парамНаименование", НаименованиеФизлица);
	Запрос.УстановитьПараметр("парамНетДатыРождения", НетДатыРождения);
	Запрос.УстановитьПараметр("парамДатаРождения", ФизлицоОбъект.ДатаРождения);
	Запрос.УстановитьПараметр("парамНетИНН", НетИНН);
	Запрос.УстановитьПараметр("парамИНН", ФизлицоОбъект.ИНН);
	Запрос.УстановитьПараметр("парамНетСтраховогоНомераПФР", НетСтраховогоНомераПФР);
	Запрос.УстановитьПараметр("парамСтраховойНомерПФР", ФизлицоОбъект.СтраховойНомерПФР);
	
	МассивФизлиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	СписокФизлиц = Новый СписокЗначений;
	СписокФизлиц.ЗагрузитьЗначения(МассивФизлиц);
	Возврат СписокФизлиц;

КонецФункции // ПолучитьСписокФизлиц()


// Функция возвращаект сведения о надбавках позиции штатного расписания на выбранную дату
// для измерений Подразделение и Должность
//
///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
// Измайлова Полина 25.10.2011 14:12 
// AVT_ШтатноеРасписание [СправочникСсылка.AVT_ШтатноеРасписание] - ссылка на штатную единицу.
////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}                                          
Функция СведенияОНадбавкахПозицииШтатногоРасписания(Период, Подразделение, Должность, AVT_ШтатноеРасписание) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаАктуальности",	Период);
	///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ИЗМЕНЕНИЕ
	// Измайлова Полина 25.10.2011 14:15 
	//Запрос.УстановитьПараметр("Подразделение",		Подразделение);
	//Запрос.УстановитьПараметр("Должность",			Должность);
	Запрос.УстановитьПараметр("ШтатноеРасписание",	AVT_ШтатноеРасписание);
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ИЗМЕНЕНИЕ}                                          
	
	///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
	// Измайлова Полина 14.09.2011 11:42 
	// ОПИСАНИЕ: исправлены параметры виртуальной таблицы 
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}                                          
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.ВидНадбавки КАК Надбавка,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Показатель1,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Показатель2,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Показатель3,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Показатель4,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Показатель5,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Показатель6,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Валюта1,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Валюта2,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Валюта3,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Валюта4,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Валюта5,
	|	НадбавкиПоШтатномуРасписаниюСрезПоследних.Валюта6
	|ИЗ
	|	РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(
	|			&ДатаАктуальности,
	|			AVTШтатноеРасписание = &ШтатноеРасписание) КАК НадбавкиПоШтатномуРасписаниюСрезПоследних";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // СведенияОНадбавкахПозицииШтатногоРасписания()


Функция ПолучитьНаименованиеФизлица(Фамилия, Имя, Отчество) Экспорт

	Возврат СОКРЛП(?(ПустаяСтрока(Фамилия),"",СОКРЛП(Фамилия))
				+ ?(ПустаяСтрока(Имя),""," " + СОКРЛП(Имя))
				+ ?(ПустаяСтрока(Отчество),""," " + СОКРЛП(Отчество)));

КонецФункции // ПолучитьНаименованиеФизлица()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ПолучитьКадровыеДанныеФизлица = Истина;
