//m.ionov@a-prof.ru 30.09.2014
//Для "Проект" сделали использование для групп и элементов
//----m.ionov@a-prof.ru---
//++ Spl_Апроф 13.02.2015 (k.russkih@a-prof.ru) Добавил поле "Вес первичной упаковки" для увеличения веса нетто при печати, вынес на вкладку "Описание"

Перем мСписокВозможныхРеквизитов Экспорт;
Перем мРеквизитыКонтрольУникальности Экспорт;
Перем ПрошлыйИзмененныйРодительОбъектаДоступа;

Перем мЭтоНеНовый Экспорт;

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если мЭтоНеНовый = Неопределено Тогда
		мЭтоНеНовый = Не ЭтоНовый();
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		//Для элемента требуется проверять заполнение реквизита ВидНоменклатуры
		ПроверяемыеРеквизиты.Добавить("ВидНоменклатуры");
		
		// <- Шевченков 20170718 #68282
		Если ЗначениеЗаполнено(ВидНоменклатуры) И ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоКоду("000000003") Тогда // 43 Продукция
			ПроверяемыеРеквизиты.Добавить("СтавкаНДС"); // Шевченков 20170706 #67525
		КонецЕсли;		
		// ->
		
	КонецЕсли;
	
	Если (ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга) Тогда
		
		// Базовая единица может быть не заполнена
		НомерУдаляемогоЭлемента = ПроверяемыеРеквизиты.Найти("БазоваяЕдиницаИзмерения");
		Если НомерУдаляемогоЭлемента <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(НомерУдаляемогоЭлемента);
		КонецЕсли;
		
	КонецЕсли;

	// Надо проверить владельца единицы хранения остатков.
	Если ЗначениеЗаполнено(ЕдиницаХраненияОстатков)
		И ЕдиницаХраненияОстатков.Владелец <> Ссылка Тогда
		ТекстСообщения = НСтр("ru = 'Неверно указан владелец единицы хранения остатков!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаХраненияОстатков",, Отказ);
	КонецЕсли;
	
	// Надо проверить владельца единицы для отчетов.
	Если ЗначениеЗаполнено(ЕдиницаДляОтчетов)
		И ЕдиницаДляОтчетов.Владелец <> Ссылка Тогда
		ТекстСообщения = НСтр("ru = 'Неверно указан владелец единицы для отчетов!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаДляОтчетов",, Отказ);
	КонецЕсли;

	Если мЭтоНеНовый И НЕ ЭтоГруппа Тогда
		СуществуютСсылки = Неопределено;

		Если (ВидНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга)
			И Ссылка.ЕдиницаХраненияОстатков <> ЕдиницаХраненияОстатков 
			И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
			
			ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
                             |Изменить единицу хранения остатков уже нельзя!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаХраненияОстатков",, Отказ);
		КонецЕсли;

		Если ВидНоменклатуры.ТипНоменклатуры <> Ссылка.ВидНоменклатуры.ТипНоменклатуры
			И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
			
			ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
                             |Тип номенклатуры не может быть изменен'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВидНоменклатуры",, Отказ);
		КонецЕсли;
		
		Если Не ВестиУчетПоСериям И Ссылка.ВестиУчетПоСериям И ПолныеПрава.Номенклатура_СуществуютСсылкиНаСерииВРегистрахНакопления(Ссылка) Тогда
			ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
                             |Признак ""Вести учет по сериям"" не может быть изменен!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВестиУчетПоСериям",, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

// Обработчик события элемента ПриКопировании.
//
Процедура ПриКопировании(ОбъектКопирования)

	Если Не ЭтоГруппа Тогда
		ЕдиницаХраненияОстатков = Неопределено;
		ЕдиницаДляОтчетов       = Неопределено;
		ЕдиницаИзмеренияМест    = Неопределено;
		ОсновноеИзображение     = Неопределено;
		НазначениеИспользования = Неопределено;
		//{23.03.2015 Островерхий заявка №б/н 
		НСИ_ЕдиницаИзмеренияПаллет = Неопределено; 
		//23.03.2015 Островерхий} 
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	//начало изменений Ожиганов 30.10.2015 убираем запись с пробелами
	Если Не ПустаяСтрока(Код) и Не РольДоступна("ПолныеПрава")  Тогда
		Если Сред(Код,1,1) = " "  Тогда
			Сообщить("В коде справочника не допускаются пробелы!!!");
			Отказ = Истина;
			возврат;
		КонецЕслИ;	
	КонецЕсли;
	//конец изменений 
	
	Если ЭтоГруппа Тогда
		ПрошлыйИзмененныйРодительОбъектаДоступа = ?(Не ЭтоНовый() и Не Ссылка.Родитель = Родитель, Ссылка.Родитель, Неопределено);
		НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, Родитель);
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(ЕдиницаДляОтчетов) Тогда
			ЕдиницаДляОтчетов = ЕдиницаХраненияОстатков;
		КонецЕсли;
		
		Услуга   = (ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга);
		Набор    = (ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор);
		Комплект = (ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Комплект);

		Если Услуга ИЛИ Набор Тогда
			ВестиУчетПоХарактеристикам = Ложь;
		КонецЕсли;

		Если ВидНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Товар Тогда
			
			ВестиУчетПоСериям 				 = Ложь;
			ВестиПартионныйУчетПоСериям 	 = Ложь;
			Весовой 						 = Ложь;
			ВестиОперативныйУчетОстатковНЗП  = Ложь;
			ВестиУчетПоСериямВНЗП 			 = Ложь;
			ВестиСерийныеНомера 			 = Ложь;

			НомерГТД                         = Неопределено;
			СтранаПроисхождения              = Неопределено;
			НазначениеИспользования          = Неопределено;
			ПорядокПрисвоенияСерийногоНомера = Неопределено;
			НаправлениеВыпуска               = Неопределено;
			
		КонецЕсли;
		
		//m.ionov@a-prof.ru 30.09.2014
		Если Не ЗначениеЗаполнено(Проект) Или ЗначениеЗаполнено(Родитель.Проект) Тогда
			Проект = Родитель.Проект;			
		КонецЕсли;
		
		//{16.12.2014 Евгений заявка №б/н 
		Если НЕ ЗначениеЗаполнено(НСИ_ТоварнаяКатегория) Тогда
			НСИ_ТоварнаяКатегория = Родитель.НСИ_ТоварнаяКатегория;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НСИ_Брендообъем) Тогда
			НСИ_Брендообъем       = Родитель.НСИ_Брендообъем;	
		КонецЕсли; 
		//16.12.2014 Евгений} 
		
//начало изменений Ожиганов А. 28.04.2017 исправление ошибки, не закрываются нормируемые расходы сверх нормы 
		Если Не ЕстьДоступНаИзменениеНоменклатуры() Тогда
	        Отказ = Истина;
			возврат;
	    КонецЕсли;
//конец изменений 
		
		//----m.ionov@a-prof.ru---
		
		//m_ionov@mail.ru 31.08.2016
		Если Не Отказ 
			И Не ЭтоНовый() 
			И Ссылка.ВидНоменклатуры.НСИ_ОбменСПролайт
			И НЕ ВидНоменклатуры.НСИ_ОбменСПролайт Тогда
			//Выполнили снятие признака обмена с Пролайт, 
			//проверим нет ли объектов с данным видом номенклатуры выгруженных в Пролайт
			Если Не МЗ_ОбменПролайт.ПроверкаВозможностиИзмененияПризнакаОбменасПролайт(Ссылка) Тогда
				//Не даем записать элемент
				ОбщегоНазначения.СообщитьОбОшибке("Не верно измено значение реквизита вид номенклатуры", Отказ);
			КонецЕсли;	
		КонецЕсли;
		//------- m_ionov@mail.ru -------

	КонецЕсли;
	
//Бирюков добавлена регистрация изменений для Навижн
	Если (ВидНоменклатуры.Наименование = "43 Продукция") 
	ИЛИ (ВидНоменклатуры.Наименование  = "41.04 Покупные товары") 
	ИЛИ (ВидНоменклатуры.Наименование  = "002  возвратная  тара") 
	ИЛИ (ВидНоменклатуры.Наименование  = "10.04 Тара и тарные материалы")
	Тогда
		Узел = ПланыОбмена.ПРГ_Навижн.НайтиПоКоду("002");
		Если ЗначениеЗаполнено(Узел) Тогда
			ОбменДанными.Получатели.Добавить(Узел);
		КонецЕсли;	
	КонецЕсли;	
//Добавил заполнение Вида номенклатуры из Родителя
	//Если НЕ ВидНоменклатуры = Родитель.ВидНоменклатуры Тогда 
	//	Если Вопрос("Вид номенклатуры не соответствует значению по умолчанию! Исправить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда 
	//		ВидНоменклатуры = Родитель.ВидНоменклатуры;
	//	КонецЕсли;
	//КонецЕсли;
//%%%%%%%%%%%%%%%%%%%%%%%%%
 
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	//начало изменений Ожиганов 14.07.2015 создание базы по МСФО
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	//конец изменений 
	Если НЕ ОбменДанными.Загрузка Тогда
		НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка,ПрошлыйИзмененныйРодительОбъектаДоступа, Отказ);
	КонецЕсли;
	
	//начало изменений Ожиганов 06.08.2015
	//заполним  старый код у номенклатуры текущим
	// в случае если это готовая продукция старый должен быть равен новому
	//некрасиво но старый код важнее
	Если ЗначениеЗаполнено(МКЮ) Тогда
		мКод  = СокрЛП(Код);
		Если СокрЛП(СтарыйКод) <> мКод  Тогда
			СтарыйКод = мКод;
		КонецЕсли;	
	Иначе
	КонецЕсли;	
	//конец изменений 
	
	
// <- Шевченков 20131224
	#Если ТолстыйКлиентОбычноеПриложение Тогда 
 
		Если НЕ РольДоступна("ПолныеПрава") Тогда
			
			ПроверитьЕстьЛиШаблон();
			
		КонецЕсли;		
		
		/// Кунов О.В., 12.05.2015 - 38108
		Если Не ОбменДанными.Загрузка Тогда

			ДобавитьSKU_ВДокументыСертификации();
			
		КонецЕсли;
		///
		
	#КонецЕсли
	
	
КонецПроцедуры          

Процедура ДобавитьSKU_ВДокументыСертификации()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СертификатНоменклатурыМКЮ.Ссылка
	|ИЗ
	|	Документ.ПРГ_СертификатНоменклатуры.MKU КАК СертификатНоменклатурыМКЮ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПРГ_СертификатНоменклатуры.Товары КАК СертификатНоменклатурыТовары
	|		ПО СертификатНоменклатурыМКЮ.Ссылка = СертификатНоменклатурыТовары.Ссылка
	|			И СертификатНоменклатурыМКЮ.Номенклатура = СертификатНоменклатурыТовары.Номенклатура.Родитель
	|			И (СертификатНоменклатурыТовары.Номенклатура = &Номенклатура)
	|ГДЕ
	|	СертификатНоменклатурыМКЮ.Номенклатура = &НоменклатураРодитель
	|	И ЕСТЬNULL(СертификатНоменклатурыТовары.Номенклатура, 0) = 0");
	
	Запрос.УстановитьПараметр("Номенклатура", Ссылка);
	Запрос.УстановитьПараметр("НоменклатураРодитель", Родитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		СписокДокументовМассив = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
		СписокДокументов = Новый СписокЗначений;
		СписокДокументов.ЗагрузитьЗначения(СписокДокументовМассив);
		
		Форма = Документы.ПРГ_СертификатНоменклатуры.ПолучитьФормуВыбора();
		Форма.МножественныйВыбор = Истина;
		
		ОтборПоДокументу = Форма.ДокументСписок.Отбор.Ссылка;
		ОтборПоДокументу.ВидСравнения = ВидСравнения.ВСписке;
		ОтборПоДокументу.Значение = СписокДокументов;
		ОтборПоДокументу.Использование = Истина;
		
		Форма.ОткрытьМодально();
		
		ВыделенныеСтроки = Форма.ВыделенныеСтроки;
		Если ВыделенныеСтроки.Количество() > 0 Тогда
			
			Для Каждого КлючЗначение Из ВыделенныеСтроки Цикл
				ДокументОбъект = КлючЗначение.Ключ.ПолучитьОбъект();
				СтрокаТовары = ДокументОбъект.Товары.Добавить();
				СтрокаТовары.Номенклатура = Ссылка;
				ДокументОбъект.Записать(? (ДокументОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись) );
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры


 Процедура ПроверитьЕстьЛиШаблон() Экспорт
	// Проверим возможность автозаполнения по предопределенному шаблону
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПРГ_ШаблоныЗаполненияЗначенияРеквизитов.Ссылка,
	|	ПРГ_ШаблоныЗаполненияЗначенияРеквизитов.Ссылка.ВидОбъекта,
	|	ПРГ_ШаблоныЗаполненияЗначенияРеквизитов.Ссылка.НазваниеРеквизита,
	|	ПРГ_ШаблоныЗаполненияЗначенияРеквизитов.Ссылка.ЗначениеРеквизита
	|ИЗ
	|	Справочник.ПРГ_ШаблоныЗаполнения.ЗначенияРеквизитов КАК ПРГ_ШаблоныЗаполненияЗначенияРеквизитов
	|ГДЕ
	|	ПРГ_ШаблоныЗаполненияЗначенияРеквизитов.Ссылка.НазваниеРеквизита = &НазваниеРеквизита
	|	И ПРГ_ШаблоныЗаполненияЗначенияРеквизитов.Ссылка.ВидОбъекта = &ВидОбъекта
	|	И НЕ ПРГ_ШаблоныЗаполненияЗначенияРеквизитов.Ссылка.ПометкаУдаления";
	Запрос.УстановитьПараметр("НазваниеРеквизита", "ВидНоменклатуры");
	Запрос.УстановитьПараметр("ВидОбъекта", "Спр.Номенклатура");
	ТаблицаРеквизитов = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРеквизитов.Количество() = 1 Тогда
				
		Сообщить("Карточка заполнена по шаблону " + ТаблицаРеквизитов[0].Ссылка);
		ПРГ_ДопФункцииКлиентСервер.ЗаполнитьПоШаблонуОбъект(ЭтотОбъект, ТаблицаРеквизитов[0].Ссылка);
				
	//ИначеЕсли ТаблицаРеквизитов.Количество() > 1 Тогда
	//	
	//	//Рез = ТаблицаРеквизитов.ВыбратьСтроку();
	//	//ПРГ_ДопФункцииКлиентСервер.ЗаполнитьПоШаблонуОбъект(ЭтотОбъект, Рез.Ссылка);
	//	Сообщить("Карточка заполнена по шаблону " + ТаблицаРеквизитов[0].Ссылка);
	//	ПРГ_ДопФункцииКлиентСервер.ЗаполнитьПоШаблонуОбъект(ЭтотОбъект, ТаблицаРеквизитов[0].Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры
// ->

//начало изменений Ожиганов А. 28.04.2017 64961 ограничение на редактирование и создание элементов определенных группы номенклатуры 
Функция ЕстьДоступНаИзменениеНоменклатуры() 
	//определим есть ли по пользователям ограничения
	Если РольДоступна("ПолныеПрава") Тогда
		возврат истина;
	КонецЕслИ;	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПРГ_СлужебныйТаблицаПараметров.ЗначениеПараметра
	                      |ИЗ
	                      |	Справочник.ПРГ_Служебный.ТаблицаПараметров КАК ПРГ_СлужебныйТаблицаПараметров
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	                      |		ПО ПРГ_СлужебныйТаблицаПараметров.ЗначениеПараметра = Номенклатура.Ссылка
	                      |ГДЕ
	                      |	ПРГ_СлужебныйТаблицаПараметров.Параметр = &Пользователь
	                      |	И ПРГ_СлужебныйТаблицаПараметров.Ссылка.Наименование = ""Ограничение_на_редактирование_номенклатуры""");
	
	Запрос.УстановитьПараметр("Пользователь",ПараметрыСеанса.ТекущийПользователь);
	Выборка = Запрос.Выполнить().Выбрать();
	МассивПапок = Новый Массив;
	Пока Выборка.Следующий() Цикл
		МассивПапок.Добавить(Выборка.ЗначениеПараметра);
	КонецЦикла;	
	
	Если  МассивПапок.Количество() = 0 Тогда // ограничений нет
		возврат истина;
	КонецЕсли;	
	
	Если ЭтоГруппа Тогда
		Сообщить("У Вас нет прав на изменение групп справочника!!!");
		возврат ложь;
	КонецЕсли;	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.Ссылка = &Родитель
	               |	И Номенклатура.Ссылка В ИЕРАРХИИ(&Группы)";
				   
	Запрос.УстановитьПараметр("Группы",МассивПапок);
	Запрос.УстановитьПараметр("Родитель",Родитель);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		возврат Истина;
	Иначе
		Сообщить("У Вас нет прав на изменение элемента справочника в группе "+Родитель+"!!!");
		возврат Ложь;
	КонецЕсли;	
КонецФункции
//конец изменений 