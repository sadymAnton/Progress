//++ Spl_Апроф 09.09.2014 (k.russkih@a-prof.ru) Добавил ТЧ "АП_ДополнительныеДокументы" добавил на форму элемента, вкладка "печатные формы"
Перем мОснование;

// Обработчик события ПриКопировании
//
Процедура ПриКопировании(ОбъектКопирования)

	Если НЕ ЭтотОбъект.ЭтоГруппа Тогда
		ЭтотОбъект.ОсновнойДоговорКонтрагента = Неопределено;
		ЭтотОбъект.ОсновнойБанковскийСчет     = Неопределено;
		Если ОбъектКопирования.ГоловнойКонтрагент = ОбъектКопирования.Ссылка Тогда
			ЭтотОбъект.ГоловнойКонтрагент     = Неопределено;
		КонецЕсли;
		
		//m_ionov@mail.ru 07.09.2016
		НСИ_ОбменСПролайт = Ложь;			
		//------- m_ionov@mail.ru -------
		
		//{01.02.2015 Островерхий заявка №б/н 
		ИД_Обмена = Неопределено; 
		//01.02.2015 Островерхий} 
	КонецЕсли; 	
	
КонецПроцедуры

// Функция возвращает результат запроса по справочнику контрагентов с заданным головным контрагентом
//
// Параметры:
//  ГоловнойКонтрагент - заданный головной контрагент
//
// Возвращаемое значение:
//  Результат - результат работы запроса
// 
Функция ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту(ГоловнойКонтрагент) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГоловнойКонтрагент", ГоловнойКонтрагент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.ОбособленноеПодразделение КАК ОбособленноеПодразделение
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ГоловнойКонтрагент = &ГоловнойКонтрагент
	|	И Контрагенты.ГоловнойКонтрагент <> Контрагенты.Ссылка
	|	И НЕ Контрагенты.ПометкаУдаления
	|	И НЕ Контрагенты.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции // ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту()

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание)

	Если ТипЗнч(Основание) = Тип("СправочникСсылка.Организации") Тогда
		
		Наименование           = Основание.Наименование;
		ЮрФизЛицо              = Основание.ЮрФизЛицо;
		НаименованиеПолное     = Основание.НаименованиеПолное;
		ОсновнойБанковскийСчет = Основание.ОсновнойБанковскийСчет;
		ИНН                    = Основание.ИНН;
		КПП                    = Основание.КПП;
		КодПоОКПО              = Основание.КодПоОКПО;
		мОснование             = Основание;
		Если НЕ Основание.ГоловнаяОрганизация.Пустая() Тогда
			ОбособленноеПодразделение = Истина;	
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	// Проверим основной вид деятельности контрагента
	Если ЗначениеЗаполнено(ОсновнойВидДеятельности) И ВидыДеятельности.Найти(ОсновнойВидДеятельности, "ВидДеятельности") = Неопределено Тогда
		ОсновнойВидДеятельности = Справочники.ВидыДеятельностиКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
	// установим головного контрагента если он не заполнен
	Если НЕ ЭтоГруппа И НЕ ЗначениеЗаполнено(ГоловнойКонтрагент) И НЕ ОбособленноеПодразделение Тогда
		ГоловнойКонтрагент = Ссылка;
	КонецЕсли;
	
	//{17.11.2015 Островерхий заявка №45582 
	Если ЗначениеЗаполнено(ОсновнойМенеджерПокупателя) И МенеджерыПокупателя.Количество() = 0 Тогда
		ОсновнойМенеджерПокупателя = Справочники.НСИ_ТорговыеПредставители.ПустаяСсылка();	
	КонецЕсли;  
	//17.11.2015 Островерхий} 
	
	//m_ionov@mail.ru 31.08.2016
	Если Не Отказ 
		И НЕ ЭтоГруппа
		И Не ЭтоНовый() 
		И Ссылка.НСИ_ОбменСПролайт
		И НЕ НСИ_ОбменСПролайт Тогда
		//Выполнили снятие признака обмена с Пролайт, 
		//проверим нет ли объектов с данным видом номенклатуры выгруженных в Пролайт
		Если Не МЗ_ОбменПролайт.ПроверкаВозможностиИзмененияПризнакаОбменасПролайт(Ссылка) Тогда
			//Возвращаем обмен с Пролайт
			НСИ_ОбменСПролайт = Истина;
		КонецЕсли;	
	КонецЕсли;
	//------- m_ionov@mail.ru -------
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ГоловнойКонтрагент) И ГоловнойКонтрагент <> Ссылка Тогда
		
		Если ЗначениеЗаполнено(ГоловнойКонтрагент.ГоловнойКонтрагент) И ГоловнойКонтрагент.ГоловнойКонтрагент <> ГоловнойКонтрагент Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Контрагент "+СокрЛП(ГоловнойКонтрагент)+" не может быть выбран головным, 
							|так как для него уже был назначен головной контрагент "+СокрЛП(ГоловнойКонтрагент.ГоловнойКонтрагент)+"!");
			Отказ = Истина;
			Возврат;
		Иначе
			
			// надо проверить, что если указываем головного контрагента, то этот элемент уже не был установлен
			// в качестве головного у другого контрагента.
			ВыборкаПоГоловномуКонтрагенту = ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту(Ссылка).Выбрать();
			Если ВыборкаПоГоловномуКонтрагенту.Количество() <> 0 Тогда
				
				СообщениеОНевозможностиЗаписи = "Контрагент "+СокрЛП(ЭтотОбъект)+" не может иметь головного контрагента!
												|Этот контрагент уже установлен головным для: ";
				Пока ВыборкаПоГоловномуКонтрагенту.Следующий() Цикл
					СообщениеОНевозможностиЗаписи = СообщениеОНевозможностиЗаписи + Символы.ПС + СокрЛП(ВыборкаПоГоловномуКонтрагенту.Контрагент);
				КонецЦикла;
				
				ОбщегоНазначения.СообщитьОбОшибке(СообщениеОНевозможностиЗаписи);
				Отказ = Истина;
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// проверим, что контрагент - физ. лицо уже не был установлен головным контрагентом для обособленных подразделений
	Если НЕ ЭтоНовый() И ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		
		ЕстьОбособленныеПодразделения = Ложь;
		СообщениеОНевозможностиЗаписи = "Контрагент " + СокрЛП(ЭтотОбъект) + " не может быть физическим лицом!
			|Этот контрагент уже установлен головным для: ";
			
		ВыборкаПоГоловномуКонтрагенту = ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту(Ссылка).Выбрать();			
		Если ВыборкаПоГоловномуКонтрагенту.Количество() <> 0 Тогда
			Пока ВыборкаПоГоловномуКонтрагенту.Следующий() Цикл
				Если ВыборкаПоГоловномуКонтрагенту.ОбособленноеПодразделение Тогда
					ЕстьОбособленныеПодразделения = Истина;
					СообщениеОНевозможностиЗаписи = СообщениеОНевозможностиЗаписи + Символы.ПС + СокрЛП(ВыборкаПоГоловномуКонтрагенту.Контрагент);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		
		Если ЕстьОбособленныеПодразделения Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СообщениеОНевозможностиЗаписи, Отказ);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(мОснование) Тогда
		НаборЗаписей = РегистрыСведений.СобственныеКонтрагенты.СоздатьНаборЗаписей();
		ЗаписьРегистра = НаборЗаписей.Добавить();
		ЗаписьРегистра.Контрагент = Ссылка;
		ЗаписьРегистра.ВидСвязи   = Перечисления.ВидыСобственныхКонтрагентов.Организация;
		ЗаписьРегистра.Объект     = мОснование;
		НаборЗаписей.Записать(Ложь);
		мОснование = "";
	КонецЕсли;
	
	// при изменении ИНН перепишем ИНН у обособленных подразделений контрагента
	Если НЕ ЭтоНовый() И НЕ ОбособленноеПодразделение И ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		
		ВыборкаПоГоловномуКонтрагенту = ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту(Ссылка).Выбрать();
		Если ВыборкаПоГоловномуКонтрагенту.Количество() <> 0 Тогда
			
			Пока ВыборкаПоГоловномуКонтрагенту.Следующий() Цикл
				
				Если ИНН = ВыборкаПоГоловномуКонтрагенту.Контрагент.ИНН
					ИЛИ НЕ ВыборкаПоГоловномуКонтрагенту.ОбособленноеПодразделение Тогда
					Продолжить;
				КонецЕсли;
				
				КонтрагентДляИзменения = ВыборкаПоГоловномуКонтрагенту.Контрагент.ПолучитьОбъект();
				КонтрагентДляИзменения.ИНН = ИНН;
				Попытка
					КонтрагентДляИзменения.Записать();
				Исключение
					ОписаниеОшибки = "Ошибка при записи обособленных подразделений контрагента.
					|Не удалось изменить ИНН у обособленного подразделения " + КонтрагентДляИзменения.Наименование;
					ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки);
				КонецПопытки;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
//Бирюков добавлена регистрация изменений для Навижн
	Если Покупатель И (ИД_Обмена = "") Тогда
		ИД_Обмена = СокрЛП(Код);
	КонецЕсли;

	Если НЕ ИД_Обмена = "" Тогда
		Узел = ПланыОбмена.ПРГ_Навижн.НайтиПоКоду("003");
		Если ЗначениеЗаполнено(Узел) Тогда
			ОбменДанными.Получатели.Добавить(Узел);
		КонецЕсли;
	КонецЕсли;
//%%%%%%%%%%%%%%%%%%%%%%%%%

	////m.ionov@a-prof.ru 20.11.2014
	//Перенесли в форму документа
	//Если Не ЭтоГруппа И Не Отказ Тогда
	//	ЗаписатьИзменениеОтсрочки(Отказ);
	//КонецЕсли;
	////----m.ionov@a-prof.ru---
	
КонецПроцедуры

/// Кунов О.В., 12.03.2015 - 37605
Функция ПолучитьКлассКонтрагента() Экспорт
	
	//{12.10.2015 Островерхий заявка №б/н 
	//СтрокаКласса = "Класс не указан";
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ПРГКлассификацияКонтрагентовСрезПоследних.Период,
	//|	ПРГКлассификацияКонтрагентовСрезПоследних.Контрагент,
	//|	ПРГКлассификацияКонтрагентовСрезПоследних.ПРГКлассКонтрагента
	//|ИЗ
	//|	РегистрСведений.ПРГКлассификацияКонтрагентов.СрезПоследних(, Контрагент = &Ссылка) КАК ПРГКлассификацияКонтрагентовСрезПоследних";
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Если Выборка.Следующий() Тогда
	//	Если ЗначениеЗаполнено(Выборка.ПРГКлассКонтрагента) Тогда
	//		СтрокаКласса = Выборка.ПРГКлассКонтрагента;
	//	КонецЕсли;
	//КонецЕсли; 
	//
	//Возврат СтрокаКласса 
	
	Возврат Справочники.Контрагенты.ПолучитьКлассКонтрагентаПоСсылке(Ссылка);
	//12.10.2015 Островерхий} 
	
КонецФункции
///

/// Кунов О.В., 25.07.2016 - 54809
Процедура УведомитьОСозданииПокупателя() Экспорт
	
	ШапкаХТМЛ =
	"<!DOCTYPE html>
	|<html>
	|<head>
	|<style type='text/css'>
	|body { font-size: 16; }
	|.header { font-weight: bold; }
	|.grayinfo { font-size: 13; color: gray; }
	|</style>
	|</head>
	|<body>
	|";

	ТекстПисьма =
	"%ИмяОтчество%!
	|В справочнике контрагентов создан новый покупатель.
	|<p><span class='header'>Наименование:</span> %Наименование%</p>
	|<p><span class='header'>Создан:</span> %Создан%</p>
	|<p><span class='header'>Пользователь:</span> %Пользователь%</p>
	|";
	
	ТекстПисьма = СтрЗаменить(ТекстПисьма, "%Наименование%", 	Наименование);
	ТекстПисьма = СтрЗаменить(ТекстПисьма, "%Создан%", 			ТекущаяДата());
	ТекстПисьма = СтрЗаменить(ТекстПисьма, "%Пользователь%", 	ПараметрыСеанса.ТекущийПользователь.Наименование);
	
	ПодвалПисьма =
	"<p></p>
	|<span class='grayinfo'>Уведомление сгенерировано автоматически, отвечать на это письмо не нужно.</span>
	|</body>
	|</html>";
	
	ТекстПисьма = ШапкаХТМЛ + ТекстПисьма + ПодвалПисьма;
	
	СписокФизлиц = Справочники.ПРГ_Служебный.ПолучателиСообщенийОСозданииПокупателя.ТаблицаПараметров.ВыгрузитьКолонку("Параметр");
	
	Для Каждого Физлицо Из СписокФизлиц Цикл
		Если Не ЗначениеЗаполнено(Физлицо) Тогда
			Продолжить;
		КонецЕсли;
		АдресПолучателя = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Физлицо);
		Если Не ЗначениеЗаполнено(АдресПолучателя) Тогда
			Продолжить;
		КонецЕсли;
		ФИО = ФормированиеПечатныхФорм.ФамилияИмяОтчество(Физлицо, ТекущаяДата());
		ТекстПисьмаСОбращением = СтрЗаменить(ТекстПисьма, "%ИмяОтчество%", ФИО.Имя + " " + ФИО.Отчество);
		ПРГ_Регламентый.ОправитьФайл("Создан новый покупатель", АдресПолучателя, ТекстПисьмаСОбращением, , , , Истина);
	КонецЦикла;	
	
КонецПроцедуры
///