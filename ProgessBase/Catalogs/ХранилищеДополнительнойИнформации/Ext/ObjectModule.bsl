//начало изменений внешние файлы 
Перем СтароеИмя;
Перем ПРГ_ВремИмяФайла Экспорт;
//конец изменений внешние файлы 


Процедура ПриЗаписи(Отказ)
	// Вставить содержимое обработчика.
	//начало изменений внешние файлы
	//начало изменений Ожиганов 14.07.2015 создание базы МСФО
	Если ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;  
	//конец изменений 	
	Если ПараметрыСеанса.ПРГ_КаталогХраненияФайлов <> ""  Тогда
		Если Не ПустаяСтрока(ПРГ_ВремИмяФайла) Тогда
			Попытка
				ПРГКаталогМета = ПРГ_ДопФункцииКлиентСервер.ПРГ_ВнФайлы_ПолучитьКаталогХранения(Ссылка,Истина);	
			    ДвочДанные = Новый ДвоичныеДанные(ПРГ_ВремИмяФайла);
				ДвочДанные.Записать(ПРГКаталогМета+СокрЛП(ИмяФайла));
				ДвочДанные = Неопределено;
				ПРГ_Файл = Новый Файл(ПРГ_ВремИмяФайла);
				ПРГ_ДопФункцииКлиентСервер.ПРГ_ВнФайлы_УдалитьФайлыВКаталоге(ПРГ_Файл.Путь,Истина);
				ПРГ_ВремИмяФайла = "";
			Исключение
				Сообщить(ОписаниеОшибки());
			    Отказ = Истина;
			КонецПопытки;
		Иначе
			ПРГ_ИмяФайла = ПРГ_ДопФункцииКлиентСервер.ПРГ_ВнФайлы_ПолучитьИмяФайла(Ссылка);
			Если ПРГ_ИмяФайла <> "" Тогда
				НашФайл = Новый Файл(ПРГ_ИмяФайла);
				Если НРег(СокрЛП(НашФайл.Имя)) <> Нрег(СокрЛп(ИмяФайла)) Тогда
					Попытка
						ПереместитьФайл(НашФайл.ПолноеИмя,НашФайл.Путь+ИмяФайла);
				  	Исключение
					  	Сообщить(ОписаниеОшибки());
			    		Отказ = Истина;
					КонецПопытки; 
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	
	//конец изменений внешние файлы 
	///Сообщить(ЗначениеВСтрокуВнутр(Ссылка));
	СтароеИмя = ИмяФайла;
КонецПроцедуры

СтароеИмя = ИмяФайла;
ПРГ_ВремИмяФайла = "";               