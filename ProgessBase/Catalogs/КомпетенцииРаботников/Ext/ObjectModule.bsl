
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Процедура печати компетенции
//
// Параметры
//  нет
//
Функция Печать() Экспорт 
	
	Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Компетенции";
	Макет = ПолучитьМакет("Макет");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка_Заголовок");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьТабДокумента = ТабДокумент.Область(ТабДокумент.ВысотаТаблицы,,ТабДокумент.ВысотаТаблицы,);
	ОбластьТабДокумента.ЦветФона		= ЦветаСтиля.ФонГруппировкиВерхнегоУровня;
	ОбластьТабДокумента.ГраницаСверху	= Линия;
	ОбластьТабДокумента.ГраницаСнизу	= Линия;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка_Компетенция");
	ОбластьМакета.Параметры.Компетенция		= Наименование;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если Не ПустаяСтрока(ОписаниеКомпетенции) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка_ОписаниеКомпетенции");
		ОбластьМакета.Параметры.Описание	= ОписаниеКомпетенции;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Если Не ШкалаОценок.Пустая() Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка_Шкала");
		ОбластьМакета.Параметры.Шкала		= ШкалаОценок.Наименование;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Оценка_Заголовок");
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьТабДокумента = ТабДокумент.Область(ТабДокумент.ВысотаТаблицы,,ТабДокумент.ВысотаТаблицы,);
		ОбластьТабДокумента.ЦветФона		= ЦветаСтиля.ФонГруппировкиВерхнегоУровня;
		ОбластьТабДокумента.ГраницаСверху	= Линия;
		ОбластьТабДокумента.ГраницаСнизу	= Линия;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Оценка_Данные");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	КомпетенцииРаботниковОписаниеОценок.Оценка.Наименование КАК Оценка,
		|	КомпетенцииРаботниковОписаниеОценок.ОписаниеОценки КАК Описание
		|ИЗ
		|	Справочник.КомпетенцииРаботников.ОписаниеОценок КАК КомпетенцииРаботниковОписаниеОценок
		|
		|ГДЕ
		|	КомпетенцииРаботниковОписаниеОценок.Ссылка = &Ссылка И
		|	КомпетенцииРаботниковОписаниеОценок.Оценка <> &ПустаяОценка
		|
		|УПОРЯДОЧИТЬ ПО
		|	КомпетенцииРаботниковОписаниеОценок.НомерСтроки");
		
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Запрос.УстановитьПараметр("ПустаяОценка",Справочники.СоставОценочныхШкалКомпетенций.ПустаяСсылка());
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент,,, "Данные по: " + Наименование);

КонецФункции // Печать()

#КонецЕсли

// Процедура создает список оценок для ввода к ним описаний.
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ЗаполнитьОценки() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СоставОценочныхШкалКомпетенций.Ссылка,
	|	СоставОценочныхШкалКомпетенций.ПриоритетОценки КАК ПриоритетОценки
	|ИЗ
	|	Справочник.СоставОценочныхШкалКомпетенций КАК СоставОценочныхШкалКомпетенций
	|
	|ГДЕ
	|	СоставОценочныхШкалКомпетенций.Владелец = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетОценки УБЫВ");
	
	Запрос.УстановитьПараметр("Владелец",ШкалаОценок);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда 
		ТекстСообщения = "В шкале оценок: """+ ШкалаОценок.Наименование +""" не введен список наименований оценок"; 
		Сообщить (ТекстСообщения);
	    Возврат;
	КонецЕсли;
	
	Если ОписаниеОценок.Количество() > 0 Тогда 
		
		// Перестройка шкалы оценок. 
		// Найдем и удалим все строки таблицы, где не заполнено описание.
		МассивСтрок = ОписаниеОценок.НайтиСтроки(Новый Структура("ОписаниеОценки",""));
		Для каждого СтрокаДляУдаления Из МассивСтрок Цикл
			ОписаниеОценок.Удалить(СтрокаДляУдаления);
		КонецЦикла;
		
		// "Обнулим" оставшиеся строки.
		ТЗ = ОписаниеОценок.Выгрузить();
		ТЗ.ЗаполнитьЗначения(0,"ПриоритетОценки");
		ТЗ.ЗаполнитьЗначения(Справочники.ШкалыОценокКомпетенций.ПустаяСсылка(),"Оценка");
		ОписаниеОценок.Загрузить(ТЗ);
	КонецЕсли;
	
	// Добавляем оценки в список.
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = ОписаниеОценок.Добавить();
		СтрокаТЧ.Оценка 		 = Выборка.Ссылка;
		СтрокаТЧ.ПриоритетОценки = Выборка.ПриоритетОценки;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьОценки
