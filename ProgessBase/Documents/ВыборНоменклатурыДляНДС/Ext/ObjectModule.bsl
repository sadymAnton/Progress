Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Процедура ПроверкаДублейСтрок(Отказ, Заголовок)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВыборНоменклатурыДляНДСНоменклатура.Номенклатура КАК Номенклатура,
	|	ВыборНоменклатурыДляНДСНоменклатура.НомерСтроки КАК НомерСтроки,
	|	1 КАК КолДублей
	|ИЗ
	|	Документ.ВыборНоменклатурыДляНДС.Номенклатура КАК ВыборНоменклатурыДляНДСНоменклатура
	|ГДЕ
	|	ВыборНоменклатурыДляНДСНоменклатура.Ссылка = &ТекДок
	|
	|УПОРЯДОЧИТЬ ПО
	|	КолДублей УБЫВ,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(КолДублей)
	|ПО
	|	Номенклатура
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТекДок", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Обход = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Обход.Следующий() Цикл
		Если Обход.КолДублей <= 1 Тогда
			Прервать;
		КонецЕсли;
		ТекстНомераСтрок = "";
		ОбходПоСтрокам = Обход.Выбрать();
		Пока ОбходПоСтрокам.Следующий() Цикл
			ТекстНомераСтрок = ТекстНомераСтрок + ?(ПустаяСтрока(ТекстНомераСтрок), "", ", ") + ОбходПоСтрокам.НомерСтроки;
		КонецЦикла;
		ОбщегоНазначения.СообщитьОбОшибке( "Номенклатура: " + Обход.Номенклатура + " повторяется в строках " + ТекстНомераСтрок, Отказ, Заголовок);
	КонецЦикла;

КонецПроцедуры // ПроверкаДублейСтрок()

// Процедура проверяет правильность заполнения реквизитов документа
//
Процедура ПроверкаРеквизитовТЧ(Отказ, Заголовок)
	
	// Здесь услуг быть не должно.
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("НоменклатурнаяГруппа", "Номенклатура.НоменклатурнаяГруппа");
	СтруктураПолей.Вставить("Номенклатура", 		"Номенклатура");
	
	ТаблицаНоменклатурныхГрупп = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Номенклатура", СтруктураПолей).Выгрузить();
	
	Для Каждого Строка Из ТаблицаНоменклатурныхГрупп Цикл
		Если НЕ ЗначениеЗаполнено(Строка.НоменклатурнаяГруппа) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не задана номенклатурная группа у номенклатуры: " + Строка.Номенклатура + " (строка № " + Строка.НомерСтроки + ")", , Заголовок);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ПроверкаРеквизитов()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ, Заголовок);
	КонецЕсли;
	ПроверкаДублейСтрок(Отказ, Заголовок);
	ПроверкаРеквизитовТЧ(Отказ, Заголовок);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	ТЧ = Номенклатура.Выгрузить();
	ТЧ.Колонки.Добавить("НоменклатурнаяГруппа");
	Для Каждого ТекСтрока Из ТЧ Цикл
		// регистр НоменклатураДляРеализацииБезНДСиНДС0 
		Движение = Движения.НоменклатураДляРеализацииБезНДСиНДС0.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Номенклатура = ТекСтрока.Номенклатура;
		Движение.СложныйУчетНДС = ТекСтрока.ВестиСложныйУчетНДС;
		ТекСтрока.НоменклатурнаяГруппа = ТекСтрока.Номенклатура.НоменклатурнаяГруппа; 
	КонецЦикла;
	ТЧ.Свернуть("НоменклатурнаяГруппа", "ВестиСложныйУчетНДС");
	Для Каждого ТекСтрока Из ТЧ Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.НоменклатурнаяГруппа) Тогда
			Продолжить;
		КонецЕсли;
		Движение = Движения.НоменклатурныеГруппыДляРеализацииБезНДСиНДС0.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.НоменклатурнаяГруппа = ТекСтрока.НоменклатурнаяГруппа;
        Движение.СложныйУчетНДС = ТекСтрока.ВестиСложныйУчетНДС;
    КонецЦикла;
	// записываем движения регистров
	Движения.НоменклатураДляРеализацииБезНДСиНДС0.Записать();
	Движения.НоменклатурныеГруппыДляРеализацииБезНДСиНДС0.Записать();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью()






