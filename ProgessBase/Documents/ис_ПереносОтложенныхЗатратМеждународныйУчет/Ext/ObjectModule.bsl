
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого лСтрокаПроводки Из Проводки Цикл 
		
		лОтбор = Новый Структура("СчетКт, СубконтоКт1, СубконтоКт2, СубконтоКт3");
		ЗаполнитьЗначенияСвойств(лОтбор, лСтрокаПроводки);
		лНЗППроводки = НЗП.НайтиСтроки(лОтбор);
		
		лСтоимостьНЗП = 0;
		Для Каждого лСтрокаНЗП Из лНЗППроводки Цикл 
			лСтоимостьНЗП = лСтоимостьНЗП + лСтрокаНЗП.Стоимость;
		КонецЦикла;
		
		Если лНЗППроводки.Количество() > 0 Тогда 
			Если лСтрокаПроводки.Сумма <> лСтоимостьНЗП Тогда 
				//Отказ = Истина;
				Сообщить("В строке №"+лСтрокаПроводки.НомерСтроки+" отличаются сумма строки и НЗП", СтатусСообщения.Внимание);
			КонецЕсли;
		КонецЕсли;
		
		// Проводка
		лПроводка = Движения.Международный.Добавить();
		лПроводка.Период = лСтрокаПроводки.Период;
		лПроводка.Организация = Организация;
		лПроводка.Сумма = лСтрокаПроводки.Сумма;
		лПроводка.Содержание = лСтрокаПроводки.Содержание;
		лПроводка.НомерЖурнала = лСтрокаПроводки.НомерЖурнала;
		лПроводка.ПервичныйДокумент = лСтрокаПроводки.ПервичныйДокумент;
		лПроводка.ис_ПервичныйНомерСтроки = лСтрокаПроводки.ПервичныйНомерСтроки;
		// Дт
		лПроводка.СчетДт = лСтрокаПроводки.СчетДт;
		Для лНомерСубконто=1 По лПроводка.СчетДт.ВидыСубконто.Количество() Цикл 
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лНомерСубконто, лСтрокаПроводки["СубконтоДт"+лНомерСубконто]);
		КонецЦикла;
		// Кт
		лПроводка.СчетКт = лСтрокаПроводки.СчетКт;
		Для лНомерСубконто=1 По лПроводка.СчетКт.ВидыСубконто.Количество() Цикл 
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лНомерСубконто, лСтрокаПроводки["СубконтоКт"+лНомерСубконто]);
		КонецЦикла;
		
		// Определение значений 
		лРасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.ПустаяСсылка();
		Для лНомерСубконто=1 По лСтрокаПроводки.СчетДт.ВидыСубконто.Количество() Цикл 
			лЗначениеСубконто = лСтрокаПроводки["СубконтоДт"+лНомерСубконто];
			Если ТипЗнч(лЗначениеСубконто) = Тип("СправочникСсылка.РасходыБудущихПериодов") Тогда 
				лРасходыБудущихПериодов = лЗначениеСубконто;
			КонецЕсли;
		КонецЦикла;
		лПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		лНоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
		лСтатьяЗатрат = Справочники.СтатьиЗатрат.ПустаяСсылка();
		Для лНомерСубконто=1 По лСтрокаПроводки.СчетКт.ВидыСубконто.Количество() Цикл 
			лЗначениеСубконто = лСтрокаПроводки["СубконтоКт"+лНомерСубконто];
			Если ТипЗнч(лЗначениеСубконто) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда 
				лПодразделение = лЗначениеСубконто;
			ИначеЕсли ТипЗнч(лЗначениеСубконто) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда 
				лНоменклатурнаяГруппа = лЗначениеСубконто;
			ИначеЕсли ТипЗнч(лЗначениеСубконто) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда 
				лСтатьяЗатрат = лЗначениеСубконто;
			КонецЕсли;
		КонецЦикла;
		
		// Движения по РБП
		Если ЗначениеЗаполнено(лРасходыБудущихПериодов) Тогда 
			лРасходыБудущихПериодов = ис_Международный.ПолучитьЭлементРБП(Организация, лПодразделение, лНоменклатурнаяГруппа, лСтатьяЗатрат, Истина, лРасходыБудущихПериодов);
			лДвижение = Движения.ис_РасходыБудущихПериодовМеждународныйУчет.Добавить();
			лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
			лДвижение.Период = лСтрокаПроводки.Период;
			лДвижение.Организация = Организация;
			лДвижение.Подразделение = лПодразделение;
			лДвижение.НоменклатурнаяГруппа = лНоменклатурнаяГруппа;
			лДвижение.СтатьяЗатрат = лСтатьяЗатрат;
			лДвижение.Сумма = лСтрокаПроводки.Сумма;
		КонецЕсли;
		
		// Движение по регистру накопления
		лИмяРегистра = ис_Международный.ПолучитьРегистрПоСчетуЗатрат(лСтрокаПроводки.СчетКт);
		Если лИмяРегистра = "НезавершенноеПроизводствоМеждународныйУчет" Тогда 
			
			Если лНЗППроводки.Количество() > 0 Тогда 
				Для Каждого лСтрокаНЗП Из лНЗППроводки Цикл 
					лДвижение = Движения.НезавершенноеПроизводствоМеждународныйУчет.Добавить();
					лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
					лДвижение.Период = лСтрокаПроводки.Период;
					лДвижение.Организация = Организация;
					лДвижение.Подразделение = лПодразделение;
					лДвижение.НоменклатурнаяГруппа = лНоменклатурнаяГруппа;
					лДвижение.СтатьяЗатрат = лСтатьяЗатрат;
					лДвижение.СчетУчета = лСтрокаПроводки.СчетКт;
					лДвижение.Затрата = лСтрокаНЗП.Затрата;
					лДвижение.Количество = лСтрокаНЗП.Количество;
					лДвижение.Стоимость = лСтрокаНЗП.Стоимость;
				КонецЦикла;
			Иначе
				лДвижение = Движения.НезавершенноеПроизводствоМеждународныйУчет.Добавить();
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
				лДвижение.Период = лСтрокаПроводки.Период;
				лДвижение.Организация = Организация;
				лДвижение.Подразделение = лПодразделение;
				лДвижение.НоменклатурнаяГруппа = лНоменклатурнаяГруппа;
				лДвижение.СтатьяЗатрат = лСтатьяЗатрат;
				лДвижение.СчетУчета = лСтрокаПроводки.СчетКт;
				лДвижение.Стоимость = лСтрокаПроводки.Сумма;
			КонецЕсли;
			
		ИначеЕсли лИмяРегистра = "ЗатратыМеждународныйУчет" Тогда 
			
			лДвижение = Движения.ЗатратыМеждународныйУчет.Добавить();
			лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
			лДвижение.Период = лСтрокаПроводки.Период;
			лДвижение.Организация = Организация;
			лДвижение.Подразделение = лПодразделение;
			лДвижение.НоменклатурнаяГруппа = лНоменклатурнаяГруппа;
			лДвижение.СтатьяЗатрат = лСтатьяЗатрат;
			лДвижение.СчетУчета = лСтрокаПроводки.СчетКт;
			лДвижение.Сумма = лСтрокаПроводки.Сумма;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры
