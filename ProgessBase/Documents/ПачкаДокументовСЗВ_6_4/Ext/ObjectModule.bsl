
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

//Процедура вывода сведений на печать
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, ОчищатьСообщения = Истина, ПечатьДляРСВ1 = Ложь, ПроверятьДокументы = Истина) Экспорт
	
	Если ИмяМакета = "ФормаСЗВ_6_4" Или ИмяМакета = "ФормаСЗВ_6_2" Тогда
			
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		Если ОчищатьСообщения Тогда
			ОбработкаКомментариев.УдалитьСообщения();
		КонецЕсли;
		
		ДокументДляРСВ1 = Новый ТабличныйДокумент;
		ДокументДляРСВ1.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаДокументовСЗВ_6_4";
		ДокументДляРСВ1.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ДокументДляРСВ1.ПолеСверху = 0;
		ДокументДляРСВ1.ПолеСнизу = 0;
		
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
		
		Заголовок = "Печать документа " + СокрЛП(ЭтотОбъект);
		
		Если ПроверятьДокументы Тогда
			// проверим данные руководителя
			Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Руководитель) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан руководитель!", , Заголовок);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.РуководительДолжность) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана должность руководителя!", , Заголовок);
			КонецЕсли;
		КонецЕсли;
		
		ЕстьОшибки = Ложь;
		Если Проведен Или Не ПечатьДляРСВ1 тогда
			ТекстФайла = РегламентированнаяОтчетность.ПолучитьТекстФайла(ЭтотОбъект, ЕстьОшибки);
		Иначе
			ТекстФайла = СформироватьВыходнойФайл(ЕстьОшибки, ПроверятьДокументы, ВыборкаПоШапкеДокумента);
		КонецЕсли;
		
		Если ПроверятьДокументы Тогда
			
			Если ЕстьОшибки Или Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Руководитель) Или Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.РуководительДолжность) Тогда
				ОбработкаКомментариев.ПоказатьСообщения();
			КонецЕсли;
			
			Если ЕстьОшибки Тогда
				
				Если ПечатьДляРСВ1 Тогда
					Возврат ДокументДляРСВ1
				Иначе	
					Возврат Неопределено;
				КонецЕсли;
				
			КонецЕсли;	 

		КонецЕсли;
		
		ТекстФайла = СтрЗаменить(СтрЗаменить(ТекстФайла, "СуммаВыплатПоДопТарифу27-1", "СуммаВыплатПоДопТарифу27_1"), "СуммаВыплатПоДопТарифу27-2-18", "СуммаВыплатПоДопТарифу27_2_18");
		ДеревоПФР = ПроцедурыПерсонифицированногоУчета.ПреобразоватьВДеревоXML(ТекстФайла);
		
		Если ДеревоПФР = Неопределено Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не удалось разобрать файл с данными!", , Заголовок);
			ОбработкаКомментариев.ПоказатьСообщения();
			Возврат Неопределено 
		КонецЕсли;
		ДеревоПФР = ДеревоПФР.Строки.Найти("ФайлПФР","Имя");
		Если ДеревоПФР = Неопределено Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не удалось разобрать файл с данными!",, Заголовок);
			ОбработкаКомментариев.ПоказатьСообщения();
			Возврат Неопределено 
		КонецЕсли;
		
		Макет = ПолучитьМакет("ФормаСЗВ_6_4");
		// Рабочие области макета
		ОбластьШапка 	= Макет.ПолучитьОбласть("Шапка");
		ОбластьДокумент = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал 	= Макет.ПолучитьОбласть("Подвал");
		ОбластьСтаж		= Макет.ПолучитьОбласть("СтажДаты");
		ОбластьСтажДопСведения	= Макет.ПолучитьОбласть("СтажДопСведения");
		
		// Формы СЗВ-6-4
		ДокументРезультат = Новый ТабличныйДокумент;
		ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СведенияОТрудовомСтажеИЗаработке" + ИмяМакета;
		ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ДокументРезультат.ПолеСверху = 0;
		ДокументРезультат.ПолеСнизу = 0;
		
		ДокументСписокЗастрахованныхЛиц = Новый ТабличныйДокумент;
		ДокументСписокЗастрахованныхЛиц.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СведенияОТрудовомСтажеИЗаработкеСЗВ6_Список";
		
		Макет = ПолучитьМакет("СписокЗастрахованныхЛиц");
		ОбластьШапкаСписка = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрокаСписка = Макет.ПолучитьОбласть("СтрокаРаботника");
		ОбластьПодвалСписка = Макет.ПолучитьОбласть("Подвал");
		ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
		
		ДокументОписи = Новый ТабличныйДокумент;
		ДокументОписи.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СведенияОТрудовомСтажеИЗаработкеСЗВ6_АДВ_6_5";
		ДокументОписи.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		СекцияОпись = ПолучитьМакет("ФормаАДВ_6_5").ПолучитьОбласть("Опись");
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьСтрокаСписка);
		
		СтрокаДереваПачкаВходящихДокументов = ДеревоПФР.Строки.Найти("ПачкаВходящихДокументов","Имя");
		Если СтрокаДереваПачкаВходящихДокументов <> Неопределено Тогда
			
			СтрокаДереваВходящаяОпись = СтрокаДереваПачкаВходящихДокументов.Строки.Найти("ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ", "Имя");
			Если СтрокаДереваВходящаяОпись <> Неопределено Тогда
				
				ИнформацияОПачке = ПроцедурыПерсонифицированногоУчета.ДанныеОписиАДВ_6_3(СтрокаДереваВходящаяОпись, ВыборкаПоШапкеДокумента);
				НомерПачкиРаботодателя = ИнформацияОПачке.НомерПачкиРаботодателя;
				ТипДоговораПачки = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВходящаяОпись,"ТипДоговора");
				
				// Опись АДВ-6-5
				ЗаполнитьЗначенияСвойств(СекцияОпись.Параметры,ИнформацияОПачке);
				СекцияОпись.Параметры.ЭтоТрудовойДоговор = ТипДоговораПачки = "ТРУДОВОЙ";
				СекцияОпись.Параметры.ЭтоДоговорГПХ = Не СекцияОпись.Параметры.ЭтоТрудовойДоговор;
				
				СтрокиДоходов = СтрокаДереваВходящаяОпись.Строки.НайтиСтроки(Новый Структура("Имя","СуммаВыплатИвознагражденийВпользуЗЛ"),);
				Для каждого СтрокаДерева Из СтрокиДоходов Цикл
					Если ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "ТипСтроки") = "ИТОГ" Тогда
					     СекцияОпись.Параметры.ВсегоЗаработка = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатВсего");
					     СекцияОпись.Параметры.ВсегоОблагаетсяВзносамиДоПредельнойВеличины = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатНачисленыСтраховыеВзносыНеПревышающие");
					     СекцияОпись.Параметры.ВсегоОблагаетсяВзносамиСвышеПредельнойВеличины = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатНачисленыСтраховыеВзносыПревышающие");
					КонецЕсли;
				КонецЦикла;
				ДокументОписи.Вывести(СекцияОпись);
				Если ПечатьДляРСВ1 Тогда
					ДокументДляРСВ1.Вывести(ДокументОписи);
					ДокументДляРСВ1.ВывестиГоризонтальныйРазделительСтраниц();
				Иначе
					УниверсальныеМеханизмы.НапечататьДокумент(ДокументОписи, КоличествоЭкземпляров, НаПринтер, "Опись документов (АДВ-6-5); пачка №" + НомерПачкиРаботодателя,,ДокументОписи);
				КонецЕсли;
				
				// копируем данные описи в остальные документы
				ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры,СекцияОпись.Параметры);
				ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры,ИнформацияОПачке);
				
				// Список застрахованных лиц
				ЗаполнитьЗначенияСвойств(ОбластьШапкаСписка.Параметры,ИнформацияОПачке,"РасчетныйПериод,НомерПачкиРаботодателя, РегНомерПФР,НаименованиеОрганизации");
				ЗаполнитьЗначенияСвойств(ОбластьПодвалСписка.Параметры,ИнформацияОПачке,"РуководительДолжность, Руководитель, ДатаСоставленияОписи");
				
				ДокументСписокЗастрахованныхЛиц.Вывести(ОбластьШапкаСписка);
				НомерСтрокиСписка = 0;
				
				ВычитаемыйМесяц = ?(ИнформацияОПачке.ЭтоИсходныйДокумент,?(ИнформацияОПачке.ЭтоКварталОтчетногоГода,0,?(ИнформацияОПачке.ЭтоПолугодиеОтчетногоГода,3,?(ИнформацияОПачке.Это9МесяцевОтчетногоГода,6,9))),?(ИнформацияОПачке.ЭтоКварталКорректируемогоГода,0,?(ИнформацияОПачке.ЭтоПолугодиеКорректируемогоГода,3,?(ИнформацияОПачке.Это9МесяцевКорректируемогоГода,6,9))));
				
				//Цикл по документам файла
				НомерДокумента = 0;
				Для Каждого СтрокаДереваСЗВ6 Из СтрокаДереваПачкаВходящихДокументов.Строки Цикл
					
					//Читаем запись документа
					Если СтрокаДереваСЗВ6.Имя <> "СВЕДЕНИЯ_О_СУММЕ_ВЫПЛАТ_О_СТРАХОВЫХ_ВЗНОСАХ_И_СТРАХОВОМ_СТАЖЕ_ЗЛ" Тогда
						Продолжить;
					КонецЕсли;
					
					Если НомерДокумента > 0 Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					Если Не ИнформацияОПачке.ЭтоИсходныйДокумент Тогда
						ОбластьШапка.Параметры.РегистрационныйНомерПФРвКорректируемыйПериод = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваСЗВ6,"РегистрационныйНомерКорректируемогоПериода");
					КонецЕсли;
					ДокументРезультат.Вывести(ОбластьШапка);
					
					Для СчПараметр = 0 По ОбластьДокумент.Параметры.Количество() - 1 Цикл
						ОбластьДокумент.Параметры[СчПараметр] = ""
					КонецЦикла;
					Для СчПараметр = 0 По ОбластьСтаж.Параметры.Количество() - 1 Цикл
						ОбластьСтаж.Параметры[СчПараметр] = ""
					КонецЦикла;
					Для СчПараметр = 0 По ОбластьСтажДопСведения.Параметры.Количество() - 1 Цикл
						ОбластьСтажДопСведения.Параметры[СчПараметр] = ""
					КонецЦикла;
					
					// Данные по физлицу
					ОбластьДокумент.Параметры.СтраховойНомерПФР = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваСЗВ6, "СтраховойНомер");
					СтрокаДереваФИО = СтрокаДереваСЗВ6.Строки.Найти("ФИО");
					Если СтрокаДереваФИО <> Неопределено Тогда
						ОбластьДокумент.Параметры.Фамилия = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваФИО, "Фамилия");
						ОбластьДокумент.Параметры.Имя = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваФИО, "Имя");
						ОбластьДокумент.Параметры.Отчество = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваФИО, "Отчество");
					Иначе
						ОбластьДокумент.Параметры.Фамилия = "";
						ОбластьДокумент.Параметры.Имя = "";
						ОбластьДокумент.Параметры.Отчество = "";
					КонецЕсли;
					
					СтрокиДоходов = СтрокаДереваСЗВ6.Строки.НайтиСтроки(Новый Структура("Имя","СуммаВыплатИвознагражденийВпользуЗЛ"),);
					Для каждого СтрокаДерева Из СтрокиДоходов Цикл
						Если ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "ТипСтроки") = "ИТОГ" Тогда
							ОбластьДокумент.Параметры.Заработок0 = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатВсего");
							ОбластьДокумент.Параметры.ОблагаетсяВзносамиДоПредельнойВеличины0 = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатНачисленыСтраховыеВзносыНеПревышающие");
							ОбластьДокумент.Параметры.ОблагаетсяВзносамиСвышеПредельнойВеличины0 = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатНачисленыСтраховыеВзносыПревышающие");
						Иначе
							НомерМесяца = Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "Месяц")) - ВычитаемыйМесяц;
							ОбластьДокумент.Параметры["Заработок" + НомерМесяца] = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатВсего");
							ОбластьДокумент.Параметры["ОблагаетсяВзносамиДоПредельнойВеличины" + НомерМесяца] = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатНачисленыСтраховыеВзносыНеПревышающие");
							ОбластьДокумент.Параметры["ОблагаетсяВзносамиСвышеПредельнойВеличины" + НомерМесяца] = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатНачисленыСтраховыеВзносыПревышающие");
						КонецЕсли;
					КонецЦикла;
					
					СтрокиДоходов = СтрокаДереваСЗВ6.Строки.НайтиСтроки(Новый Структура("Имя","СуммаВыплатИвознагражденийПоДопТарифу"),);
					Для каждого СтрокаДерева Из СтрокиДоходов Цикл
						Если ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "ТипСтроки") = "ИТОГ" Тогда
							ОбластьДокумент.Параметры.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах0 = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатПоДопТарифу27_1");
							ОбластьДокумент.Параметры.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах0 = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатПоДопТарифу27_2_18");
						Иначе
							НомерМесяца = Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "Месяц")) - ВычитаемыйМесяц;
							ОбластьДокумент.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + НомерМесяца] = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатПоДопТарифу27_1");
							ОбластьДокумент.Параметры["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + НомерМесяца] = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "СуммаВыплатПоДопТарифу27_2_18");
						КонецЕсли;
					КонецЦикла;
					
					СтрокаДереваВзносы = СтрокаДереваСЗВ6.Строки.Найти("СуммаВзносовНаСтраховую");
					Если СтрокаДереваВзносы <> Неопределено Тогда
						ОбластьДокумент.Параметры.НачисленоСтраховая = Формат(Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВзносы, "Начислено")), "ЧДЦ=2");
						ОбластьДокумент.Параметры.УплаченоСтраховая = Формат(Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВзносы, "Уплачено")), "ЧДЦ=2");
					Иначе
						ОбластьДокумент.Параметры.НачисленоСтраховая = "";
						ОбластьДокумент.Параметры.УплаченоСтраховая = "";
					КонецЕсли;
					
					СтрокаДереваВзносы = СтрокаДереваСЗВ6.Строки.Найти("СуммаВзносовНаНакопительную");
					Если СтрокаДереваВзносы <> Неопределено Тогда
						ОбластьДокумент.Параметры.НачисленоНакопительная = Формат(Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВзносы, "Начислено")), "ЧДЦ=2");
						ОбластьДокумент.Параметры.УплаченоНакопительная = Формат(Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВзносы, "Уплачено")), "ЧДЦ=2");
					Иначе
						ОбластьДокумент.Параметры.НачисленоНакопительная = "";
						ОбластьДокумент.Параметры.УплаченоНакопительная = "";
					КонецЕсли;
					
					ДокументРезультат.Вывести(ОбластьДокумент);
					
					//Цикл по основным записям о стаже
					СтрокиДереваСтажевыйПериод = СтрокаДереваСЗВ6.Строки.НайтиСтроки(Новый Структура("Имя","СтажевыйПериод"));
					Если СтрокиДереваСтажевыйПериод.Количество() > 0 Тогда
						НомерСтрокиСтажа = 1;
						Для Каждого СтрокаДереваПериодРаботы Из СтрокиДереваСтажевыйПериод Цикл
						
							Для СчПараметр = 0 По ОбластьСтаж.Параметры.Количество() - 1 Цикл
								ОбластьСтаж.Параметры[СчПараметр] = ""
							КонецЦикла;
							Для СчПараметр = 0 По ОбластьСтажДопСведения.Параметры.Количество() - 1 Цикл
								ОбластьСтажДопСведения.Параметры[СчПараметр] = ""
							КонецЦикла;
							
							ОбластьСтаж.Параметры.НомерСтроки = НомерСтрокиСтажа;
							ОбластьСтаж.Параметры.ДатаНачалаПериода 	= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваПериодРаботы, "ДатаНачалаПериода");
							ОбластьСтаж.Параметры.ДатаОкончанияПериода 	= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваПериодРаботы, "ДатаКонцаПериода");
							СтрокиДереваОсобенностиУчета = СтрокаДереваПериодРаботы.Строки.НайтиСтроки(Новый Структура("Имя","ЛьготныйСтаж"));
							Если СтрокиДереваОсобенностиУчета.Количество() > 0 Тогда
								Для Каждого СтрокаДереваОсобенностиУчета Из СтрокиДереваОсобенностиУчета Цикл
									
									Если ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваОсобенностиУчета, "НомерСтроки") > "1" Тогда
										ОбластьСтаж.Параметры.НомерСтроки 			= "";
										ОбластьСтаж.Параметры.ДатаНачалаПериода 	= "";
										ОбластьСтаж.Параметры.ДатаОкончанияПериода 	= "";
									КонецЕсли;
									
									СтрокаДереваОсобенностиУчета = СтрокаДереваОсобенностиУчета.Строки.Найти("ОсобенностиУчета");
									
									ЗаписьТУ = Новый Структура("Коэффициент,ПервыйПараметрИсчисляемогоСтажа,ВторойПараметрИсчисляемогоСтажа",0,0,0);
									                                        
									СтрокаДереваТерриториальныеУсловия = СтрокаДереваОсобенностиУчета.Строки.Найти("ТерриториальныеУсловия");
									Если СтрокаДереваТерриториальныеУсловия <> Неопределено Тогда
										ОбластьСтаж.Параметры.ТерриториальныеУсловияКод = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваТерриториальныеУсловия, "ОснованиеТУ");
										ЗаписьТУ.Вставить("Коэффициент", ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваТерриториальныеУсловия, "Коэффициент"));
									Иначе
										ОбластьСтаж.Параметры.ТерриториальныеУсловияКод = "";
										ЗаписьТУ.Вставить("Коэффициент", 0);
									КонецЕсли;
									
									СтрокаДереваОсобыеУсловияТруда = СтрокаДереваОсобенностиУчета.Строки.Найти("ОсобыеУсловияТруда");
									Если СтрокаДереваОсобыеУсловияТруда <> Неопределено Тогда
										ОбластьСтаж.Параметры.ОсобыеУсловияТрудаКод 	= ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваОсобыеУсловияТруда, "ОснованиеОУТ");
										ОбластьСтажДопСведения.Параметры.КодПозицииСписка = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваОсобыеУсловияТруда, "ПозицияСписка");
									Иначе
										ОбластьСтаж.Параметры.ОсобыеУсловияТрудаКод = "";
										ОбластьСтажДопСведения.Параметры.КодПозицииСписка = "";
									КонецЕсли;
									
									ЗаписьЛгот = Новый Структура("ОснованиеИсчисляемогоСтажаКод,ПервыйПараметрИсчисляемогоСтажа,ВторойПараметрИсчисляемогоСтажа,ТретийПараметрИсчисляемогоСтажа","",0,0,"");
									
									СтрокаДереваДекретДети = СтрокаДереваОсобенностиУчета.Строки.Найти("ДекретДети");
									Если СтрокаДереваДекретДети <> Неопределено Тогда
										ЗаписьЛгот.Вставить("ТретийПараметрИсчисляемогоСтажа", СтрокаДереваДекретДети.Значение);
									КонецЕсли;
									
									СтрокаДереваИсчисляемыйСтаж = СтрокаДереваОсобенностиУчета.Строки.Найти("ИсчисляемыйСтаж");
									Если СтрокаДереваИсчисляемыйСтаж <> Неопределено Тогда
										
										// Представление параметров ИТС
										ОбластьСтаж.Параметры.ОснованиеИТС = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваИсчисляемыйСтаж, "ОснованиеИС");
										
										СтрокаДереваВыработкаВЧасах = СтрокаДереваИсчисляемыйСтаж.Строки.Найти("ВыработкаВчасах");
										СтрокаДереваВыработкаКалендарная = СтрокаДереваИсчисляемыйСтаж.Строки.Найти("ВыработкаКалендарная");
										ПервыйПараметрИсчисляемогоСтажа = 0;
										ВторойПараметрИсчисляемогоСтажа = 0;
										Если СтрокаДереваВыработкаВЧасах <> Неопределено Тогда
											ПервыйПараметрИсчисляемогоСтажа = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыработкаВЧасах, "Часы");
											ВторойПараметрИсчисляемогоСтажа = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыработкаВЧасах, "Минуты");
										ИначеЕсли СтрокаДереваВыработкаКалендарная <> Неопределено Тогда
											ПервыйПараметрИсчисляемогоСтажа = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыработкаКалендарная, "ВсеМесяцы");
											ВторойПараметрИсчисляемогоСтажа = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыработкаКалендарная, "ВсеДни");
										КонецЕсли;
										
										ЗаписьЛгот.Вставить("ОснованиеИсчисляемогоСтажаКод", ОбластьСтаж.Параметры.ОснованиеИТС);
										
										Если ЗначениеЗаполнено(ОбластьСтаж.Параметры.ОсобыеУсловияТрудаКод) Или ЗначениеЗаполнено(ОбластьСтаж.Параметры.ОснованиеИТС) Тогда
											ЗаписьЛгот.Вставить("ПервыйПараметрИсчисляемогоСтажа", Число(ПервыйПараметрИсчисляемогоСтажа));
											ЗаписьЛгот.Вставить("ВторойПараметрИсчисляемогоСтажа", Число(ВторойПараметрИсчисляемогоСтажа));
										Иначе
											ЗаписьТУ.Вставить("ПервыйПараметрИсчисляемогоСтажа", Число(ПервыйПараметрИсчисляемогоСтажа));
											ЗаписьТУ.Вставить("ВторойПараметрИсчисляемогоСтажа", Число(ВторойПараметрИсчисляемогоСтажа));
										КонецЕсли;
										
									КонецЕсли;
									
									ОбластьСтаж.Параметры.ДопИТС = ПроцедурыПерсонифицированногоУчета.ПредставлениеПараметровИсчисляемогоТрудовогоСтажа(ЗаписьЛГОТ);
									ОбластьСтажДопСведения.Параметры.ДопТУ = ПроцедурыПерсонифицированногоУчета.ПредставлениеПараметровТерриториальныхУсловий(ЗаписьТУ);
									
									СтрокаДереваВыслугаЛет = СтрокаДереваОсобенностиУчета.Строки.Найти("ВыслугаЛет");
									Если СтрокаДереваВыслугаЛет <> Неопределено Тогда
										
										// Представление параметров выслуги лет
										ОбластьСтаж.Параметры.ОснованиеВыслуги = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыслугаЛет, "ОснованиеВЛ");
										
										СтрокаДереваВыработкаВЧасах = СтрокаДереваВыслугаЛет.Строки.Найти("ВыработкаВчасах");
										СтрокаДереваВыработкаКалендарная = СтрокаДереваВыслугаЛет.Строки.Найти("ВыработкаКалендарная");
										
										Если СтрокаДереваВыработкаВЧасах <> Неопределено Тогда
											ПервыйПараметрВыслугиЛет = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыработкаВЧасах, "Часы");
											ВторойПараметрВыслугиЛет = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыработкаВЧасах, "Минуты");
										ИначеЕсли СтрокаДереваВыработкаКалендарная <> Неопределено Тогда
											ПервыйПараметрВыслугиЛет = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыработкаКалендарная, "ВсеМесяцы");
											ВторойПараметрВыслугиЛет = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыработкаКалендарная, "ВсеДни");
										Иначе
											ПервыйПараметрВыслугиЛет = 0;
											ВторойПараметрВыслугиЛет = 0;
										КонецЕсли;
										ТретийПараметрВыслугиЛет = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДереваВыслугаЛет, "ДоляСтавки");
										ЗаписьЛгот = Новый Структура;
										ЗаписьЛгот.Вставить("ОснованиеВыслугиЛетКод",ОбластьСтаж.Параметры.ОснованиеВыслуги);
										ЗаписьЛгот.Вставить("ПервыйПараметрВыслугиЛет",Число(ПервыйПараметрВыслугиЛет));
										ЗаписьЛгот.Вставить("ВторойПараметрВыслугиЛет",Число(ВторойПараметрВыслугиЛет));
										ЗаписьЛгот.Вставить("ТретийПараметрВыслугиЛет",Число(ТретийПараметрВыслугиЛет));
										
										ПроцедурыПерсонифицированногоУчета.ПредставлениеПараметровПенсииЗаВыслугуЛет(ЗаписьЛГОТ, ОбластьСтаж.Параметры.ДопВЛ, ОбластьСтаж.Параметры.ДопВЛСтавка);
										
									КонецЕсли;
									
									ДокументРезультат.Вывести(ОбластьСтаж);
									Если ЗначениеЗаполнено(ОбластьСтажДопСведения.Параметры.ДопТУ) Или ЗначениеЗаполнено(ОбластьСтажДопСведения.Параметры.КодПозицииСписка) Тогда
										ДокументРезультат.Вывести(ОбластьСтажДопСведения);
									КонецЕсли;
									
								КонецЦикла;
							Иначе
								ДокументРезультат.Вывести(ОбластьСтаж);
							КонецЕсли;
								
							НомерСтрокиСтажа = НомерСтрокиСтажа + 1;
							
						КонецЦикла;
					Иначе
						ОбластьСтаж.Параметры.НомерСтроки = "";
						ДокументРезультат.Вывести(ОбластьСтаж);
						ДокументРезультат.Вывести(ОбластьСтажДопСведения);
					КонецЕсли; // Записи о стаже
					
					НомерДокумента = НомерДокумента + 1;
					ДокументРезультат.Вывести(ОбластьПодвал);
					
					// Список застрахованных лиц
					ЗаполнитьЗначенияСвойств(ОбластьСтрокаСписка.Параметры,ОбластьДокумент.Параметры);
					НомерСтрокиСписка = НомерСтрокиСписка + 1;
					ОбластьСтрокаСписка.Параметры.НомерСтроки = НомерСтрокиСписка;
					
					// Проверим, уместится ли строка на странице или надо открывать новую страницу
					ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументСписокЗастрахованныхЛиц, ВыводимыеОбласти);
					Если Не ВывестиПодвалЛиста и НомерДокумента = ИнформацияОПачке.ДокументовВПачке Тогда
						ВыводимыеОбласти.Добавить(ОбластьПодвалСписка);
						ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументСписокЗастрахованныхЛиц, ВыводимыеОбласти);
					КонецЕсли;
					Если ВывестиПодвалЛиста Тогда
						ДокументСписокЗастрахованныхЛиц.ВывестиГоризонтальныйРазделительСтраниц();
						ДокументСписокЗастрахованныхЛиц.Вывести(ПовторятьПриПечатиСтроки);
					КонецЕсли;
					
					ДокументСписокЗастрахованныхЛиц.Вывести(ОбластьСтрокаСписка);
					
				КонецЦикла; // по документам
				
				ДокументСписокЗастрахованныхЛиц.Вывести(ОбластьПодвалСписка);
				
				// показываем результаты
				Если ПечатьДляРСВ1 Тогда
					ДокументДляРСВ1.Вывести(ДокументРезультат);
					Возврат ДокументДляРСВ1
				Иначе
					УниверсальныеМеханизмы.НапечататьДокумент(ДокументСписокЗастрахованныхЛиц,КоличествоЭкземпляров, НаПринтер,"Список застрахованных лиц; пачка №" + НомерПачкиРаботодателя);
					Возврат УниверсальныеМеханизмы.НапечататьДокумент(ДокументРезультат, КоличествоЭкземпляров, НаПринтер, "Индивидуальные сведения (" + ТипФормДокументов + "); пачка №" + НомерПачкиРаботодателя,,ДокументРезультат);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПечатьДляРСВ1 Тогда
		Возврат ДокументДляРСВ1
	КонецЕсли;
	
КонецФункции // Печать()

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	Если НастройкаПравДоступаПереопределяемый.ДоступнаРольРасчетчикаРегл() Тогда
		СтруктураМакетов.Вставить("ФормаСЗВ_6_4", "СЗВ-6-4");
	КонецЕсли;
	
	Возврат СтруктураМакетов;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(Отказ, ПроверятьДанные = Истина, ВыборкаПоШапкеДокумента = Неопределено, РезультатЗапросаПоЗаписямСтажа = Неопределено) Экспорт
	
	Если ЗаполненПринятымиСведениями Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АрхивДанныхРегламентированнойОтчетности.Данные
		|ИЗ
		|	РегистрСведений.АрхивДанныхРегламентированнойОтчетности КАК АрхивДанныхРегламентированнойОтчетности
		|ГДЕ
		|	АрхивДанныхРегламентированнойОтчетности.Объект = &ДокументСсылка";
		
		ВыборкаДанных = Запрос.Выполнить().Выбрать();
		Если ВыборкаДанных.Следующий() тогда
			Возврат ВыборкаДанных.Данные;
		Иначе	
			Возврат "";
		КонецЕсли;	 
		
	КонецЕсли;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);	
	
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	
	//Проверка корректности заполнения документа
	Если ПроверятьДанные Тогда
		ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа);
	Иначе
		ПроцедурыПерсонифицированногоУчета.СЗВ6_ПроверитьНаборЗаписейОСтаже(Ссылка, СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента).Выгрузить(), РезультатЗапросаПоЗаписямСтажа, Ложь)
	КонецЕсли;
	
	Если Отказ тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат "";
	КонецЕсли;	 
	
	ВыводитьВзносыЗаРаботыСДосрочнойПенсией = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуютсяРаботыСДосрочнойПенсией");
	
	////////////////////////////////////////////////////////////////////////////////////////////
	// ФОРМИРУЕМ ФАЙЛ СВЕДЕНИЙ
	
	// Загружаем формат файла сведений
	МакетФормата = ПолучитьОбщийМакет("ФорматПФР70_2010");
	ФорматСЗВ6 = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, "СЗВ_6_4");
	ДанныеВходящейОписи = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, "ОПИСЬ_ВЫПЛАТ_ВЗНОСОВ");
	НаборЗаписейСуммаВыплатИвознаграждений = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСЗВ6.СуммаВыплатИвознагражденийВпользуЗЛ.Значение);
	ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийВпользуЗЛ");
	ДанныеВходящейОписи.Удалить("СуммаВыплатИвознагражденийВпользуЗЛ");
	НаборЗаписейСуммаВыплатПоДопТарифу = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСЗВ6.СуммаВыплатИвознагражденийПоДопТарифу.Значение);
	ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийПоДопТарифу");
	ФорматДатаЗаполнения = Новый Структура("ДатаЗаполнения",ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСЗВ6.ДатаЗаполнения));
	ФорматСЗВ6.Удалить("ДатаЗаполнения");
	
	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		ФорматСЗВ6.Удалить("СуммаВзносовНаСтраховую");
		ФорматСЗВ6.Удалить("СуммаВзносовНаНакопительную");
		ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийПоДопТарифу");
		ФорматСЗВ6.Удалить("СуммаВыплатИвознагражденийВпользуЗЛ");
		ФорматСЗВ6.Удалить("СтажевыйПериод");
	Иначе
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ФорматСЗВ6.Удалить("КорректируемыйОтчетныйПериод");
			ФорматСЗВ6.Удалить("РегистрационныйНомерКорректируемогоПериода");
		КонецЕсли;
		ФорматСуммаВзносов = Новый Структура("СуммаВзносовНаСтраховую", ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСЗВ6.СуммаВзносовНаСтраховую));
		ФорматСуммаВзносов.Вставить("СуммаВзносовНаНакопительную", ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСЗВ6.СуммаВзносовНаНакопительную));
		ФорматСЗВ6.Удалить("СуммаВзносовНаСтраховую");
		ФорматСЗВ6.Удалить("СуммаВзносовНаНакопительную");
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ОрганизацияЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		ФорматСЗВ6.Удалить("КПП");
		ТаблицаПолей = ФорматСЗВ6.НалоговыйНомер.Поля;
		ТаблицаПолей.Индексы.Добавить("ИмяПоля");
		СтрокаКПП = ТаблицаПолей.Найти("КПП", "ИмяПоля");
		Если СтрокаКПП <> Неопределено Тогда
			ТаблицаПолей.Удалить(СтрокаКПП);
		КонецЕсли;
	КонецЕсли;
	
	ТипДокументовПачки = "СВЕДЕНИЯ_О_СУММЕ_ВЫПЛАТ_О_СТРАХОВЫХ_ВЗНОСАХ_И_СТРАХОВОМ_СТАЖЕ_ЗЛ";
	
	// Создаем начальное дерево
	ДеревоВыгрузки = ПроцедурыПерсонифицированногоУчета.СоздатьДеревоXML();
	Атрибуты = Новый Соответствие;
	Атрибуты.Вставить("xmlns", "http://schema.pfr.ru");
	УзелПФР = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ФайлПФР", "", Атрибуты);
	ПроцедурыПерсонифицированногоУчета.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, МакетФормата, ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(ВыборкаПоШапкеДокумента.Ссылка, ВыборкаПоШапкеДокумента.Год, ВыборкаПоШапкеДокумента));
	
	// Добавляем ветки ПачкаВходящихДокументов и ВходящаяОпись
	ДанныеВходящейОписи.НомерВПачке.Значение = 1;
	// Устанавливаем значение Номер пачки
	ДанныеВходящейОписи.НомерПачки.Значение.Основной = СокрЛП(ВыборкаПоШапкеДокумента.НомерПачки); 
	// Составитель пачки
	ПроцедурыПерсонифицированногоУчета.ЗаполнитьСоставительПачки(ДанныеВходящейОписи.СоставительПачки.Значение, ВыборкаПоШапкеДокумента); // ОрганизацияЮрФизЛицо, ОрганизацияИНН, ОрганизацияКПП, ОрганизацияОГРН, ОрганизацияНаименованиеОКОПФ, ОрганизацияНаименованиеПолное, ОрганизацияНаименованиеСокращенное
	// Блок СоставДокументов
	ПроцедурыПерсонифицированногоУчета.ЗаполнитьСоставДокументов(ДанныеВходящейОписи, ТипДокументовПачки, ВыборкаПоШапкеДокумента.Количество);
	
	ДанныеВходящейОписи.ДатаСоставления.Значение = ВыборкаПоШапкеДокумента.Дата;
	
	ДанныеВходящейОписи.ТипСведений.Значение = Строка(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ);
	ДанныеВходящейОписи.ТипДоговора.Значение = ВыборкаПоШапкеДокумента.ТипДоговора;
	ДанныеВходящейОписи.КодКатегории.Значение = ОбщегоНазначенияЗК.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
	
	НаборЗаписейОтчетныйПериод = ДанныеВходящейОписи.ОтчетныйПериод.Значение;
	ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,ПроцедурыПерсонифицированногоУчета.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.ОтчетныйПериод));
	
	Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ДанныеВходящейОписи.Удалить("КорректируемыйОтчетныйПериод");
	Иначе
		НаборЗаписейОтчетныйПериод = ДанныеВходящейОписи.КорректируемыйОтчетныйПериод.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,ПроцедурыПерсонифицированногоУчета.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.КорректируемыйПериод));
	КонецЕсли;
	
	ДанныеОСуммахВзносовОписи = Новый Структура("СуммаВзносовНаСтраховую", ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ДанныеВходящейОписи.СуммаВзносовНаСтраховую));
	ДанныеОСуммахВзносовОписи.Вставить("СуммаВзносовНаНакопительную", ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ДанныеВходящейОписи.СуммаВзносовНаНакопительную));
	ДанныеВходящейОписи.Удалить("СуммаВзносовНаСтраховую");
	ДанныеВходящейОписи.Удалить("СуммаВзносовНаНакопительную");
	
	УзелПачкаВходящихДокументов = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелПФР, "ПачкаВходящихДокументов", "", );
	УзелВходящейОписи = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ_И_ПО_СТРАХОВЫМ_ВЗНОСАМ","");
	ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелВходящейОписи, ДанныеВходящейОписи);
	
	ДанныеОДоходахДляОписи = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(НаборЗаписейСуммаВыплатИвознаграждений);
	ДанныеОДоходахДляОписи.Удалить("Месяц");
	ДанныеОДоходахДляОписи.ТипСтроки.Значение = "ИТОГ";
	ДанныеОДоходахДляОписи.СуммаВыплатВсего.Значение = СведенияОЗаработке.Итог("Заработок");
	ДанныеОДоходахДляОписи.СуммаВыплатНачисленыСтраховыеВзносыНеПревышающие.Значение = СведенияОЗаработке.Итог("ОблагаетсяВзносамиДоПредельнойВеличины");
	ДанныеОДоходахДляОписи.СуммаВыплатНачисленыСтраховыеВзносыПревышающие.Значение = СведенияОЗаработке.Итог("ОблагаетсяВзносамиСвышеПредельнойВеличины");
	ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелВходящейОписи, "СуммаВыплатИвознагражденийВпользуЗЛ",""),ДанныеОДоходахДляОписи);
	
	ПроцедурыПерсонифицированногоУчета.ВписатьВзносыВНаборДанных(ДанныеОСуммахВзносовОписи, ВыборкаПоШапкеДокумента.НачисленоСтраховая, ВыборкаПоШапкеДокумента.УплаченоСтраховая, ВыборкаПоШапкеДокумента.НачисленоНакопительная, ВыборкаПоШапкеДокумента.УплаченоНакопительная);
	ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелВходящейОписи, ДанныеОСуммахВзносовОписи);
	
	ФорматДатаЗаполнения.ДатаЗаполнения.Значение = ВыборкаПоШапкеДокумента.Дата;
	
	Заработки = СведенияОЗаработке.Выгрузить();
	Заработки.Сортировать("ФизЛицо,Месяц");
	НомерДокументаВПачке = 1;
	ВыборкаПоРаботникиОрганизации = РезультатЗапросаПоЗаписямСтажа.Выбрать();
	Заработки.Индексы.Добавить("ФизЛицо,Месяц");
	Заработки.Сортировать("ФизЛицо,Месяц");
	Пока ВыборкаПоРаботникиОрганизации.СледующийПоЗначениюПоля("НомерСтроки") Цикл
		
		НаборЗаписейСЗВ6 = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСЗВ6);
		
		// Общие данные пачки - берем их из описи
		НаборЗаписейСЗВ6.ТипСведений.Значение = ДанныеВходящейОписи.ТипСведений.Значение;
		НаборЗаписейСЗВ6.РегистрационныйНомер.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.РегистрационныйНомер.Значение;
		НаборЗаписейСЗВ6.НаименованиеКраткое.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.НаименованиеКраткое.Значение;
		НаборЗаписейСЗВ6.НалоговыйНомер.Значение = ДанныеВходящейОписи.СоставительПачки.Значение.НалоговыйНомер.Значение;
		НаборЗаписейСЗВ6.КодКатегории.Значение = ДанныеВходящейОписи.КодКатегории.Значение;
		НаборЗаписейСЗВ6.ТипДоговора.Значение = ДанныеВходящейОписи.ТипДоговора.Значение;
		ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.ОтчетныйПериод.Значение,ДанныеВходящейОписи.ОтчетныйПериод.Значение);
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			ЗаполнитьЗначенияСвойств(НаборЗаписейСЗВ6.КорректируемыйОтчетныйПериод.Значение,ДанныеВходящейОписи.КорректируемыйОтчетныйПериод.Значение);
			Если ЗначениеЗаполнено(СтрЗаменить(ВыборкаПоШапкеДокумента.РегистрационныйНомерПФРвКорректируемыйПериод,"-","")) Тогда
				НаборЗаписейСЗВ6.РегистрационныйНомерКорректируемогоПериода.Значение = ВыборкаПоШапкеДокумента.РегистрационныйНомерПФРвКорректируемыйПериод;
			Иначе
				НаборЗаписейСЗВ6.Удалить("РегистрационныйНомерКорректируемогоПериода");
			КонецЕсли;
		КонецЕсли;
		
		// Данные физлица
		НомерДокументаВПачке = НомерДокументаВПачке + 1;
		
		Фамилия = СокрЛП(ВыборкаПоРаботникиОрганизации.Фамилия);
		Имя = СокрЛП(ВыборкаПоРаботникиОрганизации.Имя);
		Отчество = СокрЛП(ВыборкаПоРаботникиОрганизации.Отчество);
		
		НаборЗаписейСЗВ6.НомерВПачке.Значение = НомерДокументаВПачке;
		НаборЗаписейСЗВ6.СтраховойНомер.Значение = ВыборкаПоРаботникиОрганизации.СтраховойНомерПФР;
		НаборЗаписейФИО = НаборЗаписейСЗВ6.ФИО.Значение;
		НаборЗаписейФИО.Фамилия = ВРег(Фамилия);
		НаборЗаписейФИО.Имя = ВРег(Имя);
		НаборЗаписейФИО.Отчество = ВРег(Отчество);
		
		Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда // заполнение отменяющей формы завершено
			
			УзелСЗВ64 = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
			
			ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСЗВ64, НаборЗаписейСЗВ6);
			
			// Выводим ДатаЗаполнения
			ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСЗВ64, ФорматДатаЗаполнения);
			
			Продолжить;
			
		КонецЕсли;
		
		ФорматСтажевыйПериод = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(НаборЗаписейСЗВ6.СтажевыйПериод.Значение);
		НаборЗаписейСЗВ6.Удалить("СтажевыйПериод");
		
		УзелСЗВ64 = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
		ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСЗВ64, НаборЗаписейСЗВ6);
		
		// Выводим заработок
		
		СтрокиЗаработка = Заработки.Скопировать(Заработки.НайтиСтроки(Новый Структура("ФизЛицо", ВыборкаПоРаботникиОрганизации.ФизЛицо)));
		ВыводитьИтоги = Ложь;
		Для каждого СтрокаТЗ Из СтрокиЗаработка Цикл
			ВыводитьИтоги = Истина;
			ДанныеОДоходах = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(НаборЗаписейСуммаВыплатИвознаграждений);
			ДанныеОДоходах.ТипСтроки.Значение = "МЕСЦ";
			ДанныеОДоходах.Месяц.Значение = СтрокаТЗ.Месяц;
			ДанныеОДоходах.СуммаВыплатВсего.Значение = СтрокаТЗ.Заработок;
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыНеПревышающие.Значение = СтрокаТЗ.ОблагаетсяВзносамиДоПредельнойВеличины;
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыПревышающие.Значение = СтрокаТЗ.ОблагаетсяВзносамиСвышеПредельнойВеличины;
			ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийВпользуЗЛ",""),ДанныеОДоходах);
		КонецЦикла;	
		Если ВыводитьИтоги Тогда
			ДанныеОДоходах = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(НаборЗаписейСуммаВыплатИвознаграждений);
			ДанныеОДоходах.Удалить("Месяц");
			ДанныеОДоходах.ТипСтроки.Значение = "ИТОГ";
			ДанныеОДоходах.СуммаВыплатВсего.Значение = СтрокиЗаработка.Итог("Заработок");
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыНеПревышающие.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиДоПредельнойВеличины");
			ДанныеОДоходах.СуммаВыплатНачисленыСтраховыеВзносыПревышающие.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиСвышеПредельнойВеличины");
			ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийВпользуЗЛ",""),ДанныеОДоходах);
		КонецЕсли;
		Если ВыводитьВзносыЗаРаботыСДосрочнойПенсией Тогда
			ВыводитьИтоги = Ложь;
			Для каждого СтрокаТЗ Из СтрокиЗаработка Цикл
				Если СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Или СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
					ВыводитьИтоги = Истина;
					ДанныеОДоходах = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(НаборЗаписейСуммаВыплатПоДопТарифу);
					ДанныеОДоходах.ТипСтроки.Значение = "МЕСЦ";
					ДанныеОДоходах.Месяц.Значение = СтрокаТЗ.Месяц;
					ДанныеОДоходах.СуммаВыплатПоДопТарифу27_1.Значение = СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
					ДанныеОДоходах.СуммаВыплатПоДопТарифу27_2_18.Значение = СтрокаТЗ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
					ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийПоДопТарифу",""),ДанныеОДоходах);
				КонецЕсли;
			КонецЦикла;	
			Если ВыводитьИтоги Тогда
				ДанныеОДоходах = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(НаборЗаписейСуммаВыплатПоДопТарифу);
				ДанныеОДоходах.Удалить("Месяц");
				ДанныеОДоходах.ТипСтроки.Значение = "ИТОГ";
				ДанныеОДоходах.СуммаВыплатПоДопТарифу27_1.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах");
				ДанныеОДоходах.СуммаВыплатПоДопТарифу27_2_18.Значение = СтрокиЗаработка.Итог("ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах");
				ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелСЗВ64, "СуммаВыплатИвознагражденийПоДопТарифу",""),ДанныеОДоходах);
			КонецЕсли;
		КонецЕсли;
		
		// Выводим взносы
		
		ДанныеОСуммахВзносов = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСуммаВзносов);
		ПроцедурыПерсонифицированногоУчета.ВписатьВзносыВНаборДанных(ДанныеОСуммахВзносов, ВыборкаПоРаботникиОрганизации.НачисленоСтраховая, ВыборкаПоРаботникиОрганизации.УплаченоСтраховая, ВыборкаПоРаботникиОрганизации.НачисленоНакопительная, ВыборкаПоРаботникиОрганизации.УплаченоНакопительная);
		ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСЗВ64, ДанныеОСуммахВзносов);
		
		// Выводим стаж
		
		ПроцедурыПерсонифицированногоУчета.ВывестиСведенияОСтаже(ВыборкаПоРаботникиОрганизации, УзелСЗВ64, ФорматСтажевыйПериод);
		
		// Выводим ДатаЗаполнения
		
		ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСЗВ64, ФорматДатаЗаполнения);
		
	КонецЦикла;
	
	Если Отказ тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат "";
	КонецЕсли;	 
	
	// Преобразуем дерево в строковое описание XML
	ТекстФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
	Возврат СтрЗаменить(СтрЗаменить(ТекстФайла, "СуммаВыплатПоДопТарифу27_1", "СуммаВыплатПоДопТарифу27-1"), "СуммаВыплатПоДопТарифу27_2_18", "СуммаВыплатПоДопТарифу27-2-18")
	
КонецФункции 

// Проверяет правильность заполнения документа
//
Процедура ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки, СообщатьОбУспехе = Истина, ВыборкаПоШапкеДокумента = Неопределено, РезультатЗапросаПоЗаписямСтажа = Неопределено) Экспорт
	
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок =  "Проверка документа " + ВыборкаПоШапкеДокумента.ТипФормДокументов + ", пачка № " + ВыборкаПоШапкеДокумента.НомерПачки + " от " + ВыборкаПоШапкеДокумента.Дата;
	
	Обработка = глЗначениеПеременной("глОбработкаСообщений");
	СообщенияРазделПроверки = Обработка.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Информация);

	Отказ = Ложь;
	
	МассивКатегорийИностранцев = ПроцедурыПерсонифицированногоУчета.МассивКатегорийЗЛИностранцев();
	
	ПериодДействия = ?(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ВыборкаПоШапкеДокумента.ОтчетныйПериод, ВыборкаПоШапкеДокумента.КорректируемыйПериод);
	ТарифыПФР = ПроцедурыПерсонифицированногоУчета.ТарифыПоКатегориям(ПериодДействия).Получить(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
	КатегорияДляТарифа = ПроцедурыПерсонифицированногоУчета.СоответствиеКатегорийИностранцевКатегориямРоссиян()[ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц];
	Если КатегорияДляТарифа = Перечисления.КатегорииЗастрахованныхЛицПФР.ЧЭС Тогда
		КатегорияДляТарифа = Перечисления.КатегорииЗастрахованныхЛицПФР.НР
	КонецЕсли;
	ТарифыДляРасчета = ПроцедурыПерсонифицированногоУчета.ТарифыПоКатегориям(ПериодДействия).Получить(КатегорияДляТарифа);
	ПредельнаяВеличина = РегистрыСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.ПолучитьПоследнее(ПериодДействия).РазмерПФР;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок,,, СообщенияРазделПроверки);
	Иначе
		Если СтрДлина(СокрЛП(ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР)) <> 14 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Предупреждение: Регистрационный номер организации в ПФР скорее всего неправильный",,Заголовок,,, СообщенияРазделПроверки);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОрганизацияНаименованиеОКОПФ) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Предупреждение: Не указано наименование ОКОПФ организации",,Заголовок,,, СообщенияРазделПроверки);
		ИначеЕсли СтрДлина(ВыборкаПоШапкеДокумента.ОрганизацияНаименованиеОКОПФ) > 40 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Предупреждение: Наименование ОКОПФ организации обрезано до 40 символов.",,Заголовок,,, СообщенияРазделПроверки);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОтчетныйПериод) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан отчетный период!", Отказ,,,, СообщенияРазделПроверки);
	ИначеЕсли ОтчетныйПериод < ПроведениеРасчетов.ДатаВводаДополнительногоТарифаЗаРаботыСДосрочнойПенсией() Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Формы СЗВ-6-4 представляются начиная с 1 квартала 2013 года! Для формирования сведений за 2010-2012 годы используйте документ ""Сведения о страховых взносах и стаже застрахованных лиц (СЗВ-4, СЗВ-6)"".", Отказ,,,, СообщенияРазделПроверки);
	ИначеЕсли ОтчетныйПериод >= РасчетСтраховыхВзносов.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() И ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("С 1 января 2014 года представляются только корректирующие (отменяющие) формы СЗВ-6-4 (за отчетные периоды 2013 года).", Отказ,,,, СообщенияРазделПроверки);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан тип сведений!", Отказ,,,, СообщенияРазделПроверки);
	ИначеЕсли ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КорректируемыйПериод) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан корректируемый отчетный период!", Отказ,,,, СообщенияРазделПроверки);
		ИначеЕсли ВыборкаПоШапкеДокумента.ОтчетныйПериод <= ВыборкаПоШапкеДокумента.КорректируемыйПериод Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Корректируемый период должен предшествовать отчетному!", Отказ,,,, СообщенияРазделПроверки);
		ИначеЕсли Год(ВыборкаПоШапкеДокумента.КорректируемыйПериод) <> 2013 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Корректирующие (отменяющие) формы СЗВ-6-4 представляются только за отчетные периоды 2013 года.", Отказ,,,, СообщенияРазделПроверки);
		КонецЕсли; 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана категория застрахованных лиц!", Отказ,,,, СообщенияРазделПроверки);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ТипДоговора) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан тип договора!", Отказ,,,, СообщенияРазделПроверки);
	КонецЕсли;
	
	КоличествоДокументов = ВыборкаПоШапкеДокумента.Количество;
	Если КоличествоДокументов = 0 тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Список сотрудников пуст!", Отказ, Заголовок,,, СообщенияРазделПроверки);
	КонецЕсли;
	
	Если КоличествоДокументов > 200 тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("В документе должно быть не более 200 форм (сотрудников)!", Отказ, Заголовок,,, СообщенияРазделПроверки);
	КонецЕсли;
	
	РезультатЗапросаПоТЧ = СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента);
	ВыборкаПоСтрокамДокумента = РезультатЗапросаПоТЧ.Выбрать();
	Заработки = СведенияОЗаработке.Выгрузить();
	Заработки.Индексы.Добавить("ФизЛицо,Месяц");
	Заработки.Сортировать("ФизЛицо,Месяц");
	МесяцС = Месяц(ПериодДействия);
	МесяцПо = Месяц(ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ПериодДействия));
	Пока ВыборкаПоСтрокамДокумента.Следующий() цикл

		СтрокаНачалаСообщенияОбОшибке = "В строке № "+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) + ": ";
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не выбран сотрудник!", Отказ, Заголовок,,, СообщенияРазделПроверки);
		Иначе
			СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + "По сотруднику " + ВыборкаПоСтрокамДокумента.ФизЛицоНаименование + " ";
			
			Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НомерПовторяющейсяСтроки) тогда //Контроль дубля строк
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Строка №" + ВыборкаПоСтрокамДокумента.НомерПовторяющейсяСтроки + ": Сотрудник "+ВыборкаПоСтрокамДокумента.ФИО + " указан в документе дважды!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
			
			Если НЕ ВыборкаПоСтрокамДокумента.ФизЛицоРаботаетВОрганизации тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- не зарегистрирован(а) как сотрудник организации " + ВыборкаПоШапкеДокумента.ОрганизацияНаименование, Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
			
			СтраховойНомерПФР = ВыборкаПоСтрокамДокумента.СтраховойНомерПФР;
			Если НЕ ЗначениеЗаполнено(СтраховойНомерПФР) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задан страховой номер!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			Иначе
				Если НЕ РегламентированнаяОтчетность.СтраховойНомерПФРСоответствуетТребованиям(ВыборкаПоСтрокамДокумента.СтраховойНомерПФР) тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Задан неверный страховой номер!", Отказ, Заголовок,,, СообщенияРазделПроверки);
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Фамилия) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана фамилия!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Имя) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задано имя!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
			
			Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда 
				
				СтрокиЗаработка = Заработки.Скопировать(Новый Структура("ФизЛицо", ВыборкаПоСтрокамДокумента.ФизЛицо));
				
				Если СтрокиЗаработка.Количество() = 0 И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.УплаченоНакопительная) И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НачисленоНакопительная) И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.УплаченоСтраховая) И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НачисленоСтраховая) И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КоличествоЗаписейОСтаже) Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- У сотрудника отсутствуют данные о стаже, заработке и суммы взносов!", Отказ, Заголовок,,, СообщенияРазделПроверки);
				КонецЕсли;
				
				МесяцыДохода = Новый Соответствие;
				МесяцыДохода.Вставить(МесяцС,0);
				МесяцыДохода.Вставить(МесяцС + 1,0);
				МесяцыДохода.Вставить(МесяцПо,0);
				Для каждого СтрокаЗаработка Из СтрокиЗаработка Цикл
				    Если ЗначениеЗаполнено(ПериодДействия) Тогда
						Если СтрокаЗаработка.Месяц < МесяцС Или СтрокаЗаработка.Месяц > МесяцПо Тогда
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- В строках заработка указан месяц (" + СтрокаЗаработка.Месяц + "), не принадлежащий отчетному периоду!", Отказ, Заголовок,,, СообщенияРазделПроверки);
						Иначе 	
							МесяцыДохода.Вставить(СтрокаЗаработка.Месяц, МесяцыДохода[СтрокаЗаработка.Месяц] + 1);
						КонецЕсли;	
					КонецЕсли;
					Если СтрокаЗаработка.Заработок = 0 И СтрокаЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины = 0 И СтрокаЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины = 0 И СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = 0 И СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = 0 Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- За " + СтрокаЗаработка.Месяц + "-й месяц указаны нулевые данные!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					Если СтрокаЗаработка.Заработок < 0 Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- За " + СтрокаЗаработка.Месяц + " месяц указан отрицательный заработок!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					Если СтрокаЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины < 0 Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- За " + СтрокаЗаработка.Месяц + " месяц указана отрицательная база, не превышающая предельную величину!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					Если СтрокаЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины < 0 Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- За " + СтрокаЗаработка.Месяц + " месяц указана отрицательная база, превышающая предельную величину!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					Если СтрокаЗаработка.Заработок < СтрокаЗаработка.ОблагаетсяВзносамиДоПредельнойВеличины + СтрокаЗаработка.ОблагаетсяВзносамиСвышеПредельнойВеличины Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- За " + СтрокаЗаработка.Месяц + " месяц сумма, облагаемая взносами, превышает сумму начисленного заработка!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					Если СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах < 0 Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- За " + СтрокаЗаработка.Месяц + " месяц указана отрицательная база взносов за занятых на подземных и вредных работах!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					Если СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах < 0 Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- За " + СтрокаЗаработка.Месяц + " месяц указана отрицательная база взносов за занятых на тяжелых работах!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
				КонецЦикла;
				Для каждого КлючИЗначение Из МесяцыДохода Цикл
				    Если КлючИЗначение.Значение > 1 Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- В строках заработка месяц № " + КлючИЗначение.Ключ + " указан более одного раза!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
				КонецЦикла;
				
				// П. 6 Должны отсутствовать  значения в графах «Начислено» и «Уплачено» графы «Сумма страховых взносов на накопительную часть трудовой пенсии» 
				//формы СЗВ-6-4 с кодом категории застрахованного лица ВЖИЖ, ВЖНР, ВЖСХ, ВЖЕН, ВЖМН, ВЖОИ, ВЖХО,  ВЖТЗ, ВЖИТ, ВЖСИ, ВЖЭД, ВЖЦС, ВЖСБ, 
				//ВЖЭС, ВПИЖ, ВПНР, ВПСХ, ВПЕН, ВПМН, ВПОИ, ВПХО,  ВПТЗ, ВПИТ, ВПСИ, ВПЭД, ВПЦС, ВПСБ, ВПЭС
				Если МассивКатегорийИностранцев.Найти(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц) <> Неопределено 
					И (ВыборкаПоСтрокамДокумента.НачисленоНакопительная <> 0 Или ВыборкаПоСтрокамДокумента.УплаченоНакопительная <> 0) Тогда
					
					КодКатегории = ОбщегоНазначенияЗК.ПолучитьИмяЭлементаПеречисленияПоЗначению(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц);
					
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Для категории " + КодКатегории + ", данные о начисленных и уплаченных суммах на накопительную часть пенсии должны отсутствовать!", Отказ, Заголовок,,, СообщенияРазделПроверки);	
				КонецЕсли;	
				
				// Для граждан РФ проверим, что накопительная часть пенсии рассчитана правильно
				Если ТарифыПФР <> Неопределено Тогда
					
					Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаРождения) И ВыборкаПоСтрокамДокумента.ДатаРождения >= '19670101' И 
						ТарифыПФР.ПФРНакопительная <> 0  И ВыборкаПоСтрокамДокумента.НачисленоСтраховая <> 0 И ВыборкаПоСтрокамДокумента.НачисленоНакопительная = 0 Тогда
						
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + " - не заполнена сумма страховых взносов на накопительную часть трудовой пенсии!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					ИначеЕсли ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаРождения) И ВыборкаПоСтрокамДокумента.ДатаРождения >= '19670101' И ТарифыПФР.ПФРНакопительная <> 0 И ТарифыПФР.ПФРСтраховая <> 0 Тогда	
						
						
						//П 7.1 Значение, рассчитанное для каждой строки формы отдельно по каждому застрахованному лицу по формуле: 
						//страховые взносы на страховую часть трудовой пенсии умноженные на тариф страховых взносов на накопительную часть пенсии и деленные на  
						//тариф страховых взносов  на страховую часть  должно равняться сумме страховых взносов на накопительную 
						//часть трудовой пенсии  (допустимое расхождение до 10 копеек).	
						ТекстСообщения = " - страховые взносы на страховую часть трудовой пенсии умноженные на тариф страховых взносов на накопительную часть пенсии 
						|и деленные на  тариф страховых взносов  на страховую часть  должно равняться сумме страховых взносов на накопительную часть трудовой пенсии  
						|(допустимое расхождение до 10 копеек)!";
						РассчитанныйПФРНакопительная = ВыборкаПоСтрокамДокумента.НачисленоСтраховая * ТарифыПФР.ПФРНакопительная / ТарифыПФР.ПФРСтраховая;
						Разность = Макс(РассчитанныйПФРНакопительная -  ВыборкаПоСтрокамДокумента.НачисленоНакопительная, ВыборкаПоСтрокамДокумента.НачисленоНакопительная - РассчитанныйПФРНакопительная);
						Если Разность >= 0.10 Тогда
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, Отказ, Заголовок,,, СообщенияРазделПроверки);	
						КонецЕсли;		
					КонецЕсли;
					
				КонецЕсли;
				
				// Проверим правильность расчета взносов
				Если ТарифыДляРасчета <> Неопределено Тогда
				
					// П 10.1.1 Для форм СЗВ-6-4 по всем категориям застрахованных лиц сумма подграф «Начислено» граф «Сумма страховых взносов на страховую часть трудовой пенсии» 
					// и  «Сумма страховых взносов на накопительную часть трудовой пенсии» таблицы  «Сведения о начисленных и уплаченных страховых взносах на обязательное 
					// пенсионное страхование за последние три месяца отчетного периода 
					// не должна отличаться более чем на 3 копейки от значения графы «в том числе на которые начислены страховые взносы на обязательное пенсионное страхование» 
					// «входящих в базу для начисления страховых взносов, не превышающую предельную» строки «Всего за последние три месяца отчетного периода, в т.ч.» 
					// таблицы «Сведения о сумме выплат и иных вознаграждений, начисленных в пользу физического лица», умноженного на соответствующий коэффициент
					ТекстСообщения = " - сумма страховых взносов на страховую часть трудовой пенсии и страховых взносов на накопительную часть пенсии 
					|должна равняться сумме выплат, на которые начислены страховые взносы, не превышающую предельную величину базы, умноженной на 
					|суммарный тариф взносов (допустимое расхождение до 3 копеек)!";
					РассчитанныйПФР = СтрокиЗаработка.Итог("ОблагаетсяВзносамиДоПредельнойВеличины") * (ТарифыДляРасчета.ПФРСтраховая + ТарифыДляРасчета.ПФРНакопительная) / 100;
					Разность = Макс(РассчитанныйПФР - ВыборкаПоСтрокамДокумента.НачисленоСтраховая -  ВыборкаПоСтрокамДокумента.НачисленоНакопительная, ВыборкаПоСтрокамДокумента.НачисленоСтраховая + ВыборкаПоСтрокамДокумента.НачисленоНакопительная - РассчитанныйПФР);
					Если Разность > 0.03 Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, Отказ, Заголовок,,, СообщенияРазделПроверки);	
					КонецЕсли;		
					
				КонецЕсли;
				
				// П 10.1.2 Для отчетного периода - 1 квартал Если таблица «Период работы за последние три месяца отчетного периода» содержит хотя бы одну запись, кроме записи 
				// с кодом «АДМИНИСТР», «ДЕТИ», «НЕОПЛ», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД», «ДЕКРЕТ», «ЧАЭС»,  графа «Начислено» графы «Страховые взносы на страховую часть 
				// трудовой пенсии» таблицы «Сведения о начисленных и уплаченных страховых взносах на обязательное пенсионное страхование за последние три месяца отчетного периода» должны содержать ненулевое значение
				Если НачалоКвартала(ПериодДействия) = НачалоГода(ПериодДействия) И ВыборкаПоСтрокамДокумента.НачисленоСтраховая = 0 И ВыборкаПоСтрокамДокумента.КоличествоОплачиваемыхСтрок > 0 Тогда
					ТекстСообщения = "Для отчетного периода - 1 квартал: если таблица «Период работы за последние три месяца отчетного периода» содержит хотя бы одну запись, кроме записи
					| с кодом «АДМИНИСТР», «ДЕТИ», «НЕОПЛ», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД», «ДЕКРЕТ», «ЧАЭС»,  графа «Начислено» графы «Страховые взносы на страховую часть
					| трудовой пенсии» таблицы «Сведения о начисленных и уплаченных страховых взносах на обязательное пенсионное страхование за последние три месяца отчетного периода» должны содержать ненулевое значение";
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок, Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
				КонецЕсли;
				
				// П 10.2 Сверка данных о сумме выплат и иных вознаграждений, начисленных в пользу застрахованного лица, занятого на соответствующих видах работ, на которые начислены страховые взносы по дополнительному тарифу. 
				// В случае, если в строке таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 одновременно с  одним из кодов особых условий труда или условий для досрочного назначения трудовой 
				// пенсии, указан код «ВРНЕТРУД», «ДЕКРЕТ», «ДЛОТПУСК» или сочетание кодов «27-1» и «27-11» или «27-14» проверка не производится.

				ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0;
				ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0;
				Для каждого СтрокаЗаработка Из СтрокиЗаработка Цикл
					Если СтрокаЗаработка.Месяц = МесяцС Тогда
						ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
						ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
					КонецЕсли;
					Если СтрокаЗаработка.Месяц = МесяцС + 1 Тогда
						ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
						ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
					КонецЕсли;
					Если СтрокаЗаработка.Месяц = МесяцС + 2 Тогда
						ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
						ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
					КонецЕсли;
				КонецЦикла;                                          
				
				//П 10.2.5 По всем формам СЗВ-6-4 при наличии значений в строках «1 месяц», «2 месяц», «3 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, 
				//указанных в подпункте 1 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)» таблицы «Период работы 
				//за последние три месяца отчетного периода» формы СЗВ-6-4 кода особых условий труда 27-1 (ВОДОЛАЗ) в строке периода работы за соответствующий месяц.
				
				//П 10.2.7 По всем формам СЗВ-6-4 при наличии кода 27-1 и ВОДОЛАЗ особых условий труда в строке периода работы за месяц, два месяца, три месяца отчетного периода обязательно наличие значений 
				//в графах «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27 Федерального закона «О трудовых 
				//пенсиях в Российской Федерации» за соответствующие месяцы
				
				Если ВыборкаПоСтрокамДокумента.Ст27_1ВПервомМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0 Тогда
						ТекстСообщения = "При наличии кода 27-1 особых условий труда в строке периода работы за первый месяц отчетного периода обязательно наличие значений 
						| в графах «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27  
						| Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли; 
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьСт27_1ВПервомМесяце Тогда // коды есть, но проверять не надо	
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце <> 0 Тогда	
					ТекстСообщения = "При наличии значений в строке «1 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, 
					| указанных в подпункте 1 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)»  
					| таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 кода особых условий труда 27-1 в строке периода работы за этот месяц";
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
				КонецЕсли;
				Если ВыборкаПоСтрокамДокумента.Ст27_1ВоВторомМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0 Тогда
						ТекстСообщения = "При наличии кода 27-1 особых условий труда в строке периода работы за второй месяц отчетного периода обязательно наличие значений 
						| в графах «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27  
						| Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьСт27_1ВоВторомМесяце Тогда // коды есть, но проверять не надо
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце <> 0 Тогда	
					ТекстСообщения = "При наличии значений в строке «2 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, 
					| указанных в подпункте 1 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)»  
					| таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 кода особых условий труда 27-1 в строке периода работы за этот месяц";
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
				КонецЕсли;
				Если ВыборкаПоСтрокамДокумента.Ст27_1ВТретьемМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0 Тогда
						ТекстСообщения = "При наличии кода 27-1 особых условий труда в строке периода работы за третий месяц отчетного периода обязательно наличие значений 
						| в графах «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 1 пункта 1 статьи 27  
						| Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьСт27_1ВТретьемМесяце Тогда // коды есть, но проверять не надо
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце <> 0 Тогда	
					ТекстСообщения = "При наличии значений в строке «3 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, 
					| указанных в подпункте 1 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)»  
					| таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 кода особых условий труда 27-1 в строке периода работы за этот месяц";
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
				КонецЕсли;
				
				//П 10.2.6 По всем формам СЗВ-6-4 при наличии значений в строках «1 месяц», «2 месяц», «3 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, 
				//указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)» таблицы «Период работы 
				//за последние три месяца отчетного периода» формы СЗВ-6-4  одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) 
				//или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, 
				//САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы за соответствующий месяц.
				
				//П 10.2.8 По всем формам СЗВ-6-4 при наличии в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов особых условий труда, 
				//кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы 
				//«Период работы за последние три месяца отчетного периода»  одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 
				//27-14, 27-15 в строке периода работы за месяц, два месяца, три месяца отчетного периода обязательно наличие значений в графе «Сумма выплат и иных вознаграждений, начисленных застрахованному 
				//лицу, занятому на видах работ, указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» за соответствующие месяцы
					
				Если ВыборкаПоСтрокамДокумента.ОстальныеКодыВПервомМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0 Тогда
						ТекстСообщения = "При наличии в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ»
						| (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три
						| месяца отчетного периода»  одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы
						| за первый месяц отчетного периода обязательно наличие значений в графе «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18
						| пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьОстальныеКодыВПервомМесяце Тогда // коды есть, но проверять не надо
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце <> 0 Тогда
						ТекстСообщения = "При наличии значений в строке «1 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ,
						| указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)»
						| таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5,
						| 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три
						| месяца отчетного периода» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15
						| в строке периода работы за этот месяц";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
				КонецЕсли;
				Если ВыборкаПоСтрокамДокумента.ОстальныеКодыВоВторомМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0 Тогда
						ТекстСообщения = "При наличии в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ»
						| (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три
						| месяца отчетного периода»  одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы
						| за второй месяц отчетного периода обязательно наличие значений в графе «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18
						| пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли; 
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьОстальныеКодыВоВторомМесяце Тогда // коды есть, но проверять не надо
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце <> 0 Тогда	
					ТекстСообщения = "При наличии значений в строке «2 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ,
					| указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)»
					| таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5,
					| 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три
					| месяца отчетного периода» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15
					| в строке периода работы за этот месяц";
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
				КонецЕсли;
				Если ВыборкаПоСтрокамДокумента.ОстальныеКодыВТретьемМесяце Тогда
					Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0 Тогда
						ТекстСообщения = "При наличии в графе «Особые условия труда (код)» таблицы «Период работы за последние три месяца отчетного периода» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ»
						| (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три
						| месяца отчетного периода»  одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 в строке периода работы
						| за третий месяц отчетного периода обязательно наличие значений в графе «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ, указанных в подпункте 2-18
						| пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» за этот месяц";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли; 
				ИначеЕсли ВыборкаПоСтрокамДокумента.НеПроверятьОстальныеКодыВТретьемМесяце Тогда // коды есть, но проверять не надо	
				ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце <> 0 Тогда	
					ТекстСообщения = "При наличии значений в строке «3 месяц» графы «Сумма выплат и иных вознаграждений, начисленных застрахованному лицу, занятому на видах работ,
					| указанных в подпункте 2-18 пункта 1 статьи 27 Федерального закона «О трудовых пенсиях в Российской Федерации» обязательно наличие в графе «Особые условия труда (код)»
					| таблицы «Период работы за последние три месяца отчетного периода» формы СЗВ-6-4 одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5,
					| 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» таблицы «Период работы за последние три
					| месяца отчетного периода» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15
					| в строке периода работы за этот месяц";
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
				КонецЕсли;
				
				// П 10.3 Значение элемента Начислено блока Сумма страховых взносов на страховую часть трудовой пенсии должно быть не больше предельной величины базы для начисления страховых взносов умноженный на тариф.
				Если ?(Не ЗначениеЗаполнено(ПредельнаяВеличина), 0, ПредельнаяВеличина) * (ТарифыДляРасчета.ПФРСтраховая + ТарифыДляРасчета.ПФРНакопительная) / 100 < ВыборкаПоСтрокамДокумента.НачисленоСтраховая Тогда
					ТекстСообщения = "Значение элемента Начислено блока Сумма страховых взносов на страховую часть трудовой пенсии должно быть не больше предельной величины базы для начисления страховых взносов умноженный на тариф.";
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, Отказ, Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
				КонецЕсли;
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
 	
	//Выполним проверку записей стажа 
	
	ТаблицаФизлиц = РезультатЗапросаПоТЧ.Выгрузить();
	Отказ = Отказ Или Не ПроцедурыПерсонифицированногоУчета.СЗВ6_ПроверитьНаборЗаписейОСтаже(Ссылка, ТаблицаФизлиц, РезультатЗапросаПоЗаписямСтажа, Истина, СообщенияРазделПроверки);
	
	Если Отказ тогда
		ЕстьОшибки = Истина;
	КонецЕсли;	 
	
	Если СообщатьОбУспехе И Не ЕстьОшибки Тогда
		Обработка.ДобавитьСообщение("Ошибок не обнаружено.", Перечисления.ВидыСообщений.Информация, , СообщенияРазделПроверки);		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьПравильностьЗаполненияДокумента()

Процедура РассчитатьВзносы(ВыводитьПолныйКомментарий = Ложь, Физлицо = Неопределено, ИзменятьДанные = Истина) Экспорт

	Если Физлицо = Неопределено Тогда
		МассивФизлиц = РаботникиОрганизации.ВыгрузитьКолонку("Физлицо");
	Иначе
		МассивФизлиц = Новый Массив;
		МассивФизлиц.Добавить(Физлицо);
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	Если ВыводитьПолныйКомментарий Тогда
		ОбработкаКомментариев.УдалитьСообщения();
		ВыводитьОбщуюИнформацию = Истина;
	Иначе
		ВыводитьОбщуюИнформацию = ОбработкаКомментариев.Сообщения.Строки.Количество() = 0
	КонецЕсли;
	
	ПериодРасчетаВзносов = ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ОтчетныйПериод, КорректируемыйПериод);
	
	Если Физлицо = Неопределено Тогда
		СтрокиКОбработке = РаботникиОрганизации
	Иначе
		СтрокиКОбработке = РаботникиОрганизации.НайтиСтроки(Новый Структура("Физлицо",Физлицо));
	КонецЕсли;
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		Если ИзменятьДанные Тогда
			Для каждого СтрокаДокумента Из СтрокиКОбработке Цикл
				СтрокаДокумента.НачисленоСтраховая = 0;
				СтрокаДокумента.УплаченоСтраховая = 0;
				СтрокаДокумента.НачисленоНакопительная = 0;
				СтрокаДокумента.УплаченоНакопительная = 0;
				СтрокаДокумента.ДоначисленоСтраховая = 0;
				СтрокаДокумента.ДоначисленоНакопительная = 0;
				СтрокаДокумента.ДоУплаченоСтраховая = 0;
				СтрокаДокумента.ДоУплаченоНакопительная = 0;
			КонецЦикла;
		КонецЕсли;
	Иначе	
		
		ДанныеКомментирования = Неопределено;
		ВзносыФизлиц = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОВзносахПоКатегориям(Дата, ПериодРасчетаВзносов, ПериодРасчетаВзносов, Организация, МассивФизлиц, ВыводитьОбщуюИнформацию Или ВыводитьПолныйКомментарий, ДанныеКомментирования);
		ВзносыФизлиц.Индексы.Добавить("Физлицо, КатегорияЗастрахованныхЛиц, ТипДоговора");
		
		Если ВыводитьОбщуюИнформацию Тогда
			
			РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Расчет коэффициентов уплаты", Перечисления.ВидыСообщений.Информация);
			
			ОбработкаКомментариев.ДобавитьСообщение("Распределение уплаченных взносов проведено с учетом переданных ранее в ПФР сведений", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
			
			Переплаты = ДанныеКомментирования.Переплаты;
			Если Переплаты.Количество() > 0 Тогда
				РазделТаблицы = ОбработкаКомментариев.ДобавитьСообщение("В переданных в ПФР сведениях выявлены превышения сумм уплаченных взносов над начисленными! Данные по таким сотрудникам исключены из расчета уплаченных сумм за прошлые периоды.", Перечисления.ВидыСообщений.Ошибка, , РазделДокумента, Ложь);
				ОбработкаКомментариев.ДобавитьСообщение(Переплаты, Перечисления.ВидыСообщений.Таблица, , РазделТаблицы, Ложь);
			КонецЕсли;
			
			Итоги = ДанныеКомментирования.Итоги[0];
			Если Итоги.Страховая > 0 Или Итоги.Накопительная > 0 Тогда
				РазделТаблицы = ОбработкаКомментариев.ДобавитьСообщение("В переданных в ПФР сведениях задолженность по прошлым периодам составила: по страховой части " + Формат(Итоги.Страховая,"ЧЦ=14; ЧДЦ=2; ЧН=-") + ", по накопительной части " + Формат(Итоги.Накопительная,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
				ОбработкаКомментариев.ДобавитьСообщение(ДанныеКомментирования.ПрошлыеПериоды, Перечисления.ВидыСообщений.Таблица, , РазделТаблицы, Ложь);
			Иначе	
				ОбработкаКомментариев.ДобавитьСообщение("В переданных в ПФР сведениях суммы уплаченных взносов совпадают с начисленными суммами взносов", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
			КонецЕсли;
			
			ОбработкаКомментариев.ДобавитьСообщение("Учтено уплаты: по страховой части " + Формат(Итоги.ВсегоУплаченоСтраховая,"ЧЦ=14; ЧДЦ=2; ЧН=-") + ?(ЗначениеЗаполнено(Итоги.ЗачтенаПереплатаСтраховая)," (в т.ч. переплаты по итогам прошлых периодов " + Формат(Итоги.ЗачтенаПереплатаСтраховая,"ЧЦ=14; ЧДЦ=2; ЧН=-") + ")","") + ", по накопительной части " + Формат(Итоги.ВсегоУплаченоНакопительная,"ЧЦ=14; ЧДЦ=2; ЧН=-") + ?(ЗначениеЗаполнено(Итоги.ЗачтенаПереплатаНакопительная)," (в т.ч. переплаты по итогам прошлых периодов " + Формат(Итоги.ЗачтенаПереплатаНакопительная,"ЧЦ=14; ЧДЦ=2; ЧН=-") + ")",""), Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
			
			Если Итоги.ВсегоУплаченоСтраховая > 0 Тогда
				РазделКоэффициентовУплаты = ОбработкаКомментариев.ДобавитьСообщение("Расчет коэффициентов уплаты по страховой части", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
				ИтогиСтраховая = Итоги.Страховая;
				Если ИтогиСтраховая > 0 Тогда
					ОбработкаКомментариев.ДобавитьСообщение("Коэффициент уплаты по прошлым периодам составил: " + Формат(Итоги.КоэффициентПрошлыхПериодовСтраховая / 100000,"ЧДЦ=10; ЧН=-") + ?(Итоги.ВсегоУплаченоСтраховая >= ИтогиСтраховая," (уплаты текущего периода достаточно для покрытия задолженности по прошлым периодам)", " (= " + Формат(Итоги.ВсегоУплаченоСтраховая,"ЧЦ=14; ЧДЦ=2") + " / " + Формат(ИтогиСтраховая,"ЧЦ=14; ЧДЦ=2; ЧН=-") + ")"), Перечисления.ВидыСообщений.Информация, , РазделКоэффициентовУплаты, Ложь);
				Иначе
					ИтогиСтраховая = 0
				КонецЕсли;
				ОбработкаКомментариев.ДобавитьСообщение("Начислено за текущий период: " + Формат(Итоги.ПФРСтраховаяПриход,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделКоэффициентовУплаты, Ложь);
				ОбработкаКомментариев.ДобавитьСообщение("Учтено уплаты по текущему периоду: " + Формат(Макс(Итоги.ВсегоУплаченоСтраховая - ИтогиСтраховая, 0),"ЧЦ=14; ЧДЦ=2; ЧН=-") + ?(Итоги.ВсегоУплаченоСтраховая > ИтогиСтраховая," (= " + Формат(Итоги.ВсегоУплаченоСтраховая,"ЧЦ=14; ЧДЦ=2") + " - " + Формат(ИтогиСтраховая,"ЧЦ=14; ЧДЦ=2") + ")", "(уплата текущего периода учтена в счет покрытия задолженности по прошлым периодам)"), Перечисления.ВидыСообщений.Информация, , РазделКоэффициентовУплаты, Ложь);
				ОбработкаКомментариев.ДобавитьСообщение("Коэффициент уплаты по текущему периоду составил: " + Формат(Итоги.КоэффициентТекущегоПериодаСтраховая / 100000,"ЧДЦ=10; ЧН=-") + ?(Итоги.ВсегоУплаченоСтраховая > ИтогиСтраховая," (= " + Формат(Итоги.ВсегоУплаченоСтраховая - ИтогиСтраховая,"ЧЦ=14; ЧДЦ=2") + " / " + Формат(Итоги.ПФРСтраховаяПриход,"ЧЦ=14; ЧДЦ=2") + ")",""), Перечисления.ВидыСообщений.Информация, , РазделКоэффициентовУплаты, Ложь);
			КонецЕсли;
			
			Если Итоги.ВсегоУплаченоНакопительная > 0 Тогда
				РазделКоэффициентовУплаты = ОбработкаКомментариев.ДобавитьСообщение("Расчет коэффициентов уплаты по накопительной части", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
				ИтогиНакопительная = Итоги.Накопительная;
				Если ИтогиНакопительная > 0 Тогда
					ОбработкаКомментариев.ДобавитьСообщение("Коэффициент уплаты по прошлым периодам составил: " + Формат(Итоги.КоэффициентПрошлыхПериодовНакопительная / 100000,"ЧДЦ=10; ЧН=-") + ?(Итоги.ВсегоУплаченоНакопительная >= ИтогиНакопительная," (уплаты текущего периода достаточно для покрытия задолженности по прошлым периодам)", " (= " + Формат(Итоги.ВсегоУплаченоНакопительная,"ЧЦ=14; ЧДЦ=2") + " / " + Формат(ИтогиНакопительная,"ЧЦ=14; ЧДЦ=2; ЧН=-") + ")"), Перечисления.ВидыСообщений.Информация, , РазделКоэффициентовУплаты, Ложь);
				Иначе
					ИтогиНакопительная = 0
				КонецЕсли;
				ОбработкаКомментариев.ДобавитьСообщение("Начислено за текущий период: " + Формат(Итоги.ПФРНакопительнаяПриход,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделКоэффициентовУплаты, Ложь);
				ОбработкаКомментариев.ДобавитьСообщение("Учтено уплаты по текущему периоду: " + Формат(Макс(Итоги.ВсегоУплаченоНакопительная - ИтогиНакопительная, 0),"ЧЦ=14; ЧДЦ=2; ЧН=-") + ?(Итоги.ВсегоУплаченоНакопительная > ИтогиНакопительная," (= " + Формат(Итоги.ВсегоУплаченоНакопительная,"ЧЦ=14; ЧДЦ=2") + " - " + Формат(ИтогиНакопительная,"ЧЦ=14; ЧДЦ=2") + ")", "(уплата текущего периода учтена в счет покрытия задолженности по прошлым периодам)"), Перечисления.ВидыСообщений.Информация, , РазделКоэффициентовУплаты, Ложь);
				ОбработкаКомментариев.ДобавитьСообщение("Коэффициент уплаты по текущему периоду составил: " + Формат(Итоги.КоэффициентТекущегоПериодаНакопительная / 100000,"ЧДЦ=10; ЧН=-") + ?(Итоги.ВсегоУплаченоНакопительная > ИтогиНакопительная," (= " + Формат(Итоги.ВсегоУплаченоНакопительная - ИтогиНакопительная,"ЧЦ=14; ЧДЦ=2") + " / " + Формат(Итоги.ПФРНакопительнаяПриход,"ЧЦ=14; ЧДЦ=2") + ")",""), Перечисления.ВидыСообщений.Информация, , РазделКоэффициентовУплаты, Ложь);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВыводитьПолныйКомментарий Тогда
			
			РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Расчет взносов по пачке форм СЗВ-6-4 № " + НомерПачки, Перечисления.ВидыСообщений.Информация);
			Если КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицПФР.ЧЭС
				Или КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицПФР.ВПЭС
				Или КатегорияЗастрахованныхЛиц = Перечисления.КатегорииЗастрахованныхЛицПФР.ВЖЭС Тогда
				ОбработкаКомментариев.ДобавитьСообщение("По категории " + КатегорияЗастрахованныхЛиц + " уплаты текущего периода не предусмотрено", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
			КонецЕсли;
			СтруктураПоискаКомментария = Новый Структура("Физлицо");
			ТЗРасчетСотрудников = ДанныеКомментирования.РасчетСотрудников.Скопировать(Новый Структура("КатегорияЗастрахованныхЛиц, ТипДоговора",КатегорияЗастрахованныхЛиц, ТипДоговора),"Период, ФизЛицо, НачисленоСтраховая, КоэффициентУплатыСтраховая, УплаченоСтраховая, НачисленоНакопительная, КоэффициентУплатыНакопительная, УплаченоНакопительная");
			
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Физлицо, КатегорияЗастрахованныхЛиц, ТипДоговора",, КатегорияЗастрахованныхЛиц, ТипДоговора);
		Для каждого СтрокаДокумента Из СтрокиКОбработке Цикл
			СтруктураПоиска.Физлицо = СтрокаДокумента.Физлицо;
			СтрокиФизлица = ВзносыФизлиц.НайтиСтроки(СтруктураПоиска);
			Если ИзменятьДанные Тогда
				Если СтрокиФизлица.Количество() > 0 Тогда
					ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокиФизлица[0], , "Физлицо");
				Иначе
					СтрокаДокумента.НачисленоСтраховая = 0;
					СтрокаДокумента.УплаченоСтраховая = 0;
					СтрокаДокумента.НачисленоНакопительная = 0;
					СтрокаДокумента.УплаченоНакопительная = 0;
				КонецЕсли;
			КонецЕсли;
			Если ВыводитьПолныйКомментарий Тогда
				СтруктураПоискаКомментария.Физлицо = СтрокаДокумента.Физлицо;
				
				ТЗСотрудника = ТЗРасчетСотрудников.Скопировать(СтруктураПоискаКомментария,"Период, НачисленоСтраховая, КоэффициентУплатыСтраховая, УплаченоСтраховая, НачисленоНакопительная, КоэффициентУплатыНакопительная, УплаченоНакопительная");
				Если ТЗСотрудника.Количество() > 0 Тогда
					РазделСотрудника = ОбработкаКомментариев.ДобавитьСообщение(СтрокаДокумента.Фамилия + " " + СтрокаДокумента.Имя + " " + СтрокаДокумента.Отчество, Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
					РазделРасчета = ОбработкаКомментариев.ДобавитьСообщение("Расчет уплаты по страховой части пенсии: ", Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
					ОбработкаКомментариев.ДобавитьСообщение(ТЗСотрудника.Скопировать(,"Период, НачисленоСтраховая, КоэффициентУплатыСтраховая, УплаченоСтраховая"), Перечисления.ВидыСообщений.Таблица, , РазделРасчета, Ложь);
					РазделРасчета = ОбработкаКомментариев.ДобавитьСообщение("Расчет уплаты по накопительной части пенсии: ", Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
					ОбработкаКомментариев.ДобавитьСообщение(ТЗСотрудника.Скопировать(,"Период, НачисленоНакопительная, КоэффициентУплатыНакопительная, УплаченоНакопительная"), Перечисления.ВидыСообщений.Таблица, , РазделРасчета, Ложь);
				Иначе
					РазделСотрудника = ОбработкаКомментариев.ДобавитьСообщение("По сотруднику " + СтрокаДокумента.Фамилия + " " + СтрокаДокумента.Имя + " " + СтрокаДокумента.Отчество + " данных по уплаченным взносам не обнаружено!", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
				КонецЕсли;
				
				Если СтрокиФизлица.Количество() > 0 Тогда
					ОбработкаКомментариев.ДобавитьСообщение("Страховая часть. Начислено: " + Формат(СтрокиФизлица[0].НачисленоСтраховая,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
					ОбработкаКомментариев.ДобавитьСообщение("Страховая часть. Уплачено:  " + Формат(СтрокиФизлица[0].УплаченоСтраховая,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
					ОбработкаКомментариев.ДобавитьСообщение("Накопительная часть. Начислено: " + Формат(СтрокиФизлица[0].НачисленоНакопительная,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
					ОбработкаКомментариев.ДобавитьСообщение("Накопительная часть. Уплачено:  " + Формат(СтрокиФизлица[0].УплаченоНакопительная,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Или ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		ДоначисленныеВзносы = ПроцедурыПерсонифицированногоУчета.ДоначисленныеВзносыДляКорректирующегоДокумента(Организация, Дата, КорректируемыйПериод, КатегорияЗастрахованныхЛиц, 
			РаботникиОрганизации.Выгрузить(?(Физлицо = Неопределено, Неопределено, СтрокиКОбработке),"НомерСтроки,ФизЛицо,НачисленоНакопительная,НачисленоСтраховая,УплаченоНакопительная,УплаченоСтраховая"), 
			ТипДоговора, ОтчетныйПериод, ?(ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ, ВзносыФизлиц, Неопределено));
		Если ВыводитьПолныйКомментарий Тогда
			РазделРасчетаДоначисленного = ОбработкаКомментариев.ДобавитьСообщение("Расчет доначисленных взносов", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Ложь);
		КонецЕсли;
		Выборка = ДоначисленныеВзносы.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаТЧ = РаботникиОрганизации.Найти(Выборка.НомерСтроки,"НомерСтроки");
			Если СтрокаТЧ <> Неопределено Тогда
				Если ИзменятьДанные Тогда
					ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка, "ДоначисленоСтраховая, ДоначисленоНакопительная, ДоУплаченоСтраховая, ДоУплаченоНакопительная");
				КонецЕсли;
				Если ВыводитьПолныйКомментарий Тогда
					РазделСотрудника = ОбработкаКомментариев.ДобавитьСообщение(СтрокаТЧ.Фамилия + " " + СтрокаТЧ.Имя + " " + СтрокаТЧ.Отчество, Перечисления.ВидыСообщений.Информация, , РазделРасчетаДоначисленного, Ложь);
					ОбработкаКомментариев.ДобавитьСообщение("Страховая часть. Доначислено: " + Формат(Выборка.ДоначисленоСтраховая,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
					ОбработкаКомментариев.ДобавитьСообщение("Страховая часть. Доуплачено:  " + Формат(Выборка.ДоУплаченоСтраховая,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
					ОбработкаКомментариев.ДобавитьСообщение("Накопительная часть. Доначислено: " + Формат(Выборка.ДоначисленоНакопительная,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
					ОбработкаКомментариев.ДобавитьСообщение("Накопительная часть. Доуплачено:  " + Формат(Выборка.ДоУплаченоНакопительная,"ЧЦ=14; ЧДЦ=2; ЧН=-"), Перечисления.ВидыСообщений.Информация, , РазделСотрудника, Ложь);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ИзменятьДанные И ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		
		РезультатЗапроса = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОДоходахЗаОтчетныеПериоды(ПериодРасчетаВзносов, ПериодРасчетаВзносов, Организация, Дата, МассивФизлиц, КатегорияЗастрахованныхЛиц, ТипДоговора);
		
		Если Физлицо <> Неопределено Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(СведенияОЗаработке.Добавить(),Выборка);
			КонецЦикла;
		Иначе
			СведенияОЗаработке.Загрузить(РезультатЗапроса.Выгрузить())
		КонецЕсли;
	
	КонецЕсли;
	
	Если ВыводитьОбщуюИнформацию Или ВыводитьПолныйКомментарий Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке() Экспорт 

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	Руководитель);
	Запрос.УстановитьПараметр("ДатаФИО",		Дата);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ПачкаДокументовСЗВ_6_4РаботникиОрганизации.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(ПачкаДокументовСЗВ_6_4РаботникиОрганизации.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(ПачкаДокументовСЗВ_6_4РаботникиОрганизации.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(ПачкаДокументовСЗВ_6_4РаботникиОрганизации.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(ПачкаДокументовСЗВ_6_4РаботникиОрганизации.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.РаботникиОрганизации КАК ПачкаДокументовСЗВ_6_4РаботникиОрганизации
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ФИОФизЛицСрезПоследних.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ФизическиеЛица.Наименование
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
	|	КОНЕЦ КАК ФИОРуководителя
	|ПОМЕСТИТЬ ВТФИОРуководителя
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаФИО, ФизЛицо = &Руководитель) КАК ФИОФизЛицСрезПоследних
	|		ПО ФизическиеЛица.Ссылка = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Руководитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4.Ссылка,
	|	ПачкаДокументовСЗВ_6_4.Номер,
	|	ПачкаДокументовСЗВ_6_4.Дата,
	|	ПачкаДокументовСЗВ_6_4.Проведен,
	|	ПачкаДокументовСЗВ_6_4.Организация,
	|	ПачкаДокументовСЗВ_6_4.ТипФормДокументов,
	|	ПачкаДокументовСЗВ_6_4.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4.ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ПачкаДокументовСЗВ_6_4.КорректируемыйПериод
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.НомерПачки,
	|	ПачкаДокументовСЗВ_6_4.ПринятоВПФР,
	|	ПачкаДокументовСЗВ_6_4.Ответственный,
	|	ПачкаДокументовСЗВ_6_4.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	ПачкаДокументовСЗВ_6_4.ФорматФайла,
	|	ПачкаДокументовСЗВ_6_4.Организация.Наименование,
	|	ПачкаДокументовСЗВ_6_4.Организация.ЮрФизЛицо,
	|	ПачкаДокументовСЗВ_6_4.Организация.ОГРН,
	|	ПачкаДокументовСЗВ_6_4.Организация.НаименованиеОКОПФ,
	|	ПачкаДокументовСЗВ_6_4.Организация.НаименованиеПолное,
	|	ПачкаДокументовСЗВ_6_4.Организация.НаименованиеСокращенное,
	|	ПачкаДокументовСЗВ_6_4.Организация.РегистрационныйНомерПФР,
	|	ПачкаДокументовСЗВ_6_4.Организация.РайонныйКоэффициентРФ,
	|	ПачкаДокументовСЗВ_6_4.Организация.ИНН,
	|	ПачкаДокументовСЗВ_6_4.Организация.КПП,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПачкаДокументовСЗВ_6_4.Организация
	|		ИНАЧЕ ПачкаДокументовСЗВ_6_4.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ЕСТЬNULL(ФИОФизЛиц.ФИОРуководителя, """") КАК Руководитель,
	|	ГОД(ПачкаДокументовСЗВ_6_4.ОтчетныйПериод) КАК Год,
	|	ПачкаДокументовСЗВ_6_4.Организация.КодПоОКПО КАК ОКПО,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоСтраховая, 0) КАК УплаченоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоНакопительная, 0) КАК НачисленоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.УплаченоНакопительная, 0) КАК УплаченоНакопительная,
	|	ЕСТЬNULL(ИтогиПоВзносам.Количество, 0) КАК Количество,
	|	ПачкаДокументовСЗВ_6_4.РегистрационныйНомерПФРвКорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4.ТипДоговора
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4 КАК ПачкаДокументовСЗВ_6_4
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОРуководителя КАК ФИОФизЛиц
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПачкаДокументовСЗВ_6_4.Организация.ГоловнаяОрганизация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ИтогиПоВзносам
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

Функция СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;

	ДопустимыеЗначенияТретьегоПараметра = Новый Массив;
	Для каждого Значение Из ПроцедурыПерсонифицированногоУчета.СЗВ6_ДопустимыеЗначенияТретьегоПараметра() Цикл
		ДопустимыеЗначенияТретьегоПараметра.Добавить(Значение.Ключ);
	КонецЦикла;
	ИсключительныеОснованияВыслугиЛет = Новый Массив;
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ВП);
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ГР);
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_14);
	ПрочиеПроверяемыеКоды = Новый Массив;
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_2);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_3);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_4);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_5);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_6);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_7);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_8);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_9);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_10);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст28_ОС);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст28_ПЖ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ВП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ГР);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_12);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст28_СП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.САМОЛЕТ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.СПЕЦАВ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.СПАСАВ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.УЧЛЕТ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.ВЫСШПИЛ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.НОРМАПР);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.НОРМСП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.РЕАКТИВН);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.ЛЕТРАБ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_14);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_15);
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Ст27_1", Справочники.ОсобыеУсловияТруда.Ст27_1);
	Запрос.УстановитьПараметр("Ст27_2", Справочники.ОсобыеУсловияТруда.Ст27_2);
	Запрос.УстановитьПараметр("КодПозицииСпискаСт27_2", Справочники.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.НайтиПоКоду("23307000-17541"));
	Запрос.УстановитьПараметр("ДопустимыеЗначенияТретьегоПараметра", ДопустимыеЗначенияТретьегоПараметра);
	Запрос.УстановитьПараметр("ИсключительныеОснованияВыслугиЛет", ИсключительныеОснованияВыслугиЛет);
	Запрос.УстановитьПараметр("ПрочиеПроверяемыеКоды", ПрочиеПроверяемыеКоды);
	ПериодДействия = ?(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ВыборкаПоШапкеДокумента.ОтчетныйПериод, ВыборкаПоШапкеДокумента.КорректируемыйПериод);
	ПервыйМесяц = Месяц(НачалоКвартала(ПериодДействия));
	Запрос.УстановитьПараметр("Месяц1", ПервыйМесяц);
	Запрос.УстановитьПараметр("Месяц2", ПервыйМесяц + 1);
	Запрос.УстановитьПараметр("Месяц3", ПервыйМесяц + 2);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.НомерСтроки,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ФизЛицо КАК ФизЛицо,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.СтраховойНомерПФР,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Фамилия,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Имя,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Отчество,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.НачисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.УплаченоСтраховая,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.НачисленоНакопительная,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.УплаченоНакопительная,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.Организация,
	|	ВЫБОР
	|		КОГДА ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.ТипСведенийСЗВ В (ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ), ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ))
	|			ТОГДА ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.КорректируемыйПериод
	|		ИНАЧЕ ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.ОтчетныйПериод
	|	КОНЕЦ КАК ОтчетныйПериод,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.ТипДоговора,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ФизЛицо.ДатаРождения КАК ДатаРождения
	|ПОМЕСТИТЬ ВТЗастрахованныеЛица
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.РаботникиОрганизации КАК ПачкаДокументовСЗВ_6_4РаботникиОрганизации
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрг.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТЗарегистрированныеСотрудниками
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ТЧРаботникиОрг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ПО ТЧРаботникиОрг.ФизЛицо = СотрудникиОрганизаций.Физлицо
	|			И (СотрудникиОрганизаций.Организация = &ГоловнаяОрганизация)
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка ЕСТЬ НЕ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрг.НомерСтроки
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ТЧРаботникиОрг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации
	|		ПО ТЧРаботникиОрг.ФизЛицо = СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо
	|			И (СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.ЗаполненПринятымиСведениями)
	|			И (ВЫБОР
	|				КОГДА СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Организация
	|				ИНАЧЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.Организация.ГоловнаяОрганизация
	|			КОНЕЦ = &ГоловнаяОрганизация)
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка ЕСТЬ НЕ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрг.НомерСтроки
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ТЧРаботникиОрг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаДокументовСЗВ_6_4.РаботникиОрганизации КАК ПачкаДокументовСЗВ_6_4РаботникиОрганизации
	|		ПО ТЧРаботникиОрг.ФизЛицо = ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ФизЛицо
	|			И (ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.ЗаполненПринятымиСведениями)
	|			И (ВЫБОР
	|				КОГДА ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.Организация
	|				ИНАЧЕ ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.Организация.ГоловнаяОрганизация
	|			КОНЕЦ = &ГоловнаяОрганизация)
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеЛица.ФизЛицо КАК ФизЛицо,
	|	КОЛИЧЕСТВО(ЗаписиОСтажеДляСЗВ4.НомерОсновнойЗаписи) КАК КоличествоЗаписей,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа ЕСТЬ NULL 
	|				ТОГДА 0
	|			КОГДА ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоОплачиваемыхСтрок,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = &Месяц1
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = &Месяц1
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = &Месяц1
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = &Месяц1
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= &Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= &Месяц2
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= &Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= &Месяц2
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= &Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= &Месяц2
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= &Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= &Месяц2
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = &Месяц3
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = &Месяц3
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = &Месяц3
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = &Месяц3
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ДопустимыеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВТретьемМесяце
	|ПОМЕСТИТЬ ВТДанныеОСтаже
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ЗастрахованныеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ЗаписиОСтажеДляСЗВ4
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ОсновныеЗаписиОстаже
	|			ПО ЗаписиОСтажеДляСЗВ4.ФизЛицо = ОсновныеЗаписиОстаже.ФизЛицо
	|				И ЗаписиОСтажеДляСЗВ4.ОтчетныйПериод = ОсновныеЗаписиОстаже.ОтчетныйПериод
	|				И ЗаписиОСтажеДляСЗВ4.ОбособленноеПодразделение = ОсновныеЗаписиОстаже.ОбособленноеПодразделение
	|				И ЗаписиОСтажеДляСЗВ4.КатегорияЗастрахованныхЛиц = ОсновныеЗаписиОстаже.КатегорияЗастрахованныхЛиц
	|				И ЗаписиОСтажеДляСЗВ4.ТипДоговора = ОсновныеЗаписиОстаже.ТипДоговора
	|				И ЗаписиОСтажеДляСЗВ4.НомерОсновнойЗаписи = ОсновныеЗаписиОстаже.НомерОсновнойЗаписи
	|				И (ОсновныеЗаписиОстаже.НомерДополнительнойЗаписи = 0)
	|		ПО ЗастрахованныеЛица.ФизЛицо = ЗаписиОСтажеДляСЗВ4.ФизЛицо
	|			И (ВЫБОР
	|				КОГДА ЗастрахованныеЛица.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|					ТОГДА ЗастрахованныеЛица.Ссылка.ОтчетныйПериод
	|				ИНАЧЕ ЗастрахованныеЛица.Ссылка.КорректируемыйПериод
	|			КОНЕЦ = ЗаписиОСтажеДляСЗВ4.ОтчетныйПериод)
	|			И ЗастрахованныеЛица.Ссылка.Организация = ЗаписиОСтажеДляСЗВ4.ОбособленноеПодразделение
	|			И ЗастрахованныеЛица.Ссылка.КатегорияЗастрахованныхЛиц = ЗаписиОСтажеДляСЗВ4.КатегорияЗастрахованныхЛиц
	|			И ЗастрахованныеЛица.Ссылка.ТипДоговора = ЗаписиОСтажеДляСЗВ4.ТипДоговора
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗастрахованныеЛица.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПерваяТаблица.ФизЛицо КАК ФизЛицо,
	|	ПерваяТаблица.НомерСтроки КАК НомерСтроки,
	|	МИНИМУМ(ВтораяТаблица.НомерСтроки) КАК НомерПовторяющейсяСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФизЛицоРаботаетВОрганизации,
	|	ПерваяТаблица.Фамилия + "" "" + ПерваяТаблица.Имя + "" "" + ПерваяТаблица.Отчество КАК ФИО,
	|	ПерваяТаблица.НачисленоСтраховая,
	|	ПерваяТаблица.УплаченоСтраховая,
	|	ПерваяТаблица.НачисленоНакопительная,
	|	ПерваяТаблица.УплаченоНакопительная,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаСоставления,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ЕСТЬNULL(ДанныеОСтаже.КоличествоЗаписей, 0) КАК КоличествоЗаписейОСтаже,
	|	ЕСТЬNULL(ДанныеОСтаже.КоличествоОплачиваемыхСтрок, 0) КАК КоличествоОплачиваемыхСтрок,
	|	ПерваяТаблица.ДатаРождения,
	|	ПерваяТаблица.ТипДоговора,
	|	ЕСТЬNULL(ДанныеОСтаже.Ст27_1ВПервомМесяце, ЛОЖЬ) КАК Ст27_1ВПервомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.Ст27_1ВоВторомМесяце, ЛОЖЬ) КАК Ст27_1ВоВторомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.Ст27_1ВТретьемМесяце, ЛОЖЬ) КАК Ст27_1ВТретьемМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьСт27_1ВПервомМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВПервомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьСт27_1ВоВторомМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВоВторомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьСт27_1ВТретьемМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВТретьемМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.ОстальныеКодыВПервомМесяце, ЛОЖЬ) КАК ОстальныеКодыВПервомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьОстальныеКодыВПервомМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВПервомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.ОстальныеКодыВоВторомМесяце, ЛОЖЬ) КАК ОстальныеКодыВоВторомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьОстальныеКодыВоВторомМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВоВторомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.ОстальныеКодыВТретьемМесяце, ЛОЖЬ) КАК ОстальныеКодыВТретьемМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьОстальныеКодыВТретьемМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВТретьемМесяце,
	|	"""" КАК АдресДляИнформирования
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ПерваяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗарегистрированныеСотрудниками КАК ЗарегистрированныеСотрудниками
	|		ПО ПерваяТаблица.НомерСтроки = ЗарегистрированныеСотрудниками.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗастрахованныеЛица КАК ВтораяТаблица
	|		ПО ПерваяТаблица.ФизЛицо = ВтораяТаблица.ФизЛицо
	|			И ПерваяТаблица.НомерСтроки < ВтораяТаблица.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОСтаже КАК ДанныеОСтаже
	|		ПО ПерваяТаблица.ФизЛицо = ДанныеОСтаже.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ПерваяТаблица.ФизЛицо,
	|	ПерваяТаблица.НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.НачисленоСтраховая,
	|	ПерваяТаблица.УплаченоСтраховая,
	|	ПерваяТаблица.НачисленоНакопительная,
	|	ПерваяТаблица.УплаченоНакопительная,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ДанныеОСтаже.КоличествоЗаписей,
	|	ПерваяТаблица.ДатаРождения,
	|	ПерваяТаблица.ТипДоговора,
	|	ДанныеОСтаже.КоличествоОплачиваемыхСтрок,
	|	ДанныеОСтаже.Ст27_1ВПервомМесяце,
	|	ДанныеОСтаже.Ст27_1ВоВторомМесяце,
	|	ДанныеОСтаже.Ст27_1ВТретьемМесяце,
	|	ДанныеОСтаже.НеПроверятьСт27_1ВПервомМесяце,
	|	ДанныеОСтаже.НеПроверятьСт27_1ВоВторомМесяце,
	|	ДанныеОСтаже.НеПроверятьСт27_1ВТретьемМесяце,
	|	ДанныеОСтаже.ОстальныеКодыВПервомМесяце,
	|	ДанныеОСтаже.НеПроверятьОстальныеКодыВПервомМесяце,
	|	ДанныеОСтаже.ОстальныеКодыВоВторомМесяце,
	|	ДанныеОСтаже.НеПроверятьОстальныеКодыВоВторомМесяце,
	|	ДанныеОСтаже.ОстальныеКодыВТретьемМесяце,
	|	ДанныеОСтаже.НеПроверятьОстальныеКодыВТретьемМесяце,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКопировании(ОбъектКопирования)
	ЗаполненПринятымиСведениями = Ложь;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Если ЗаполненПринятымиСведениями Тогда
		Возврат
	КонецЕсли;
	
	Если Проведен И ПринятоВПФР Тогда
		Возврат
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
	КонецЦикла;
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	РезультатЗапросаПоЗаписямСтажа = Неопределено;
	ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа);
	
	Если Отказ тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	//При проведении файл формируем заново 
	ТекстФайла = СформироватьВыходнойФайл(Отказ, Ложь, ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа);

	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения.АрхивДанныхРегламентированнойОтчетности.Добавить();
	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Файл-пачка форм СЗВ-6-4";
	Запись.Данные = ТекстФайла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаполненПринятымиСведениями Тогда
		Возврат
	КонецЕсли;
	
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ЭтотОбъект);
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		СведенияОЗаработке.Очистить();
		Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
			СтрокаТЧ.НачисленоНакопительная = 0;
			СтрокаТЧ.НачисленоСтраховая = 0;
			СтрокаТЧ.УплаченоНакопительная = 0;
			СтрокаТЧ.УплаченоСтраховая = 0;
		КонецЦикла;
	КонецЕсли;
	
	Соответствие = Новый Соответствие;
	Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
        Соответствие.Вставить(СтрокаТЧ.ФизЛицо, Истина)
	КонецЦикла;
	ВсегоСтрок = СведенияОЗаработке.Количество();
	Для Сч = 1 По ВсегоСтрок Цикл
		СтрокаТЧ = СведенияОЗаработке[ВсегоСтрок - Сч];
		Если Соответствие[СтрокаТЧ.ФизЛицо] = Неопределено Тогда
			СведенияОЗаработке.Удалить(СтрокаТЧ)
		КонецЕсли;
	КонецЦикла; 
	ВыводитьВзносыЗаРаботыСДосрочнойПенсией = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуютсяРаботыСДосрочнойПенсией");
	Если Не ВыводитьВзносыЗаРаботыСДосрочнойПенсией Тогда
		Для каждого СтрокаТЧ Из СведенияОЗаработке Цикл
			СтрокаТЧ.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах = 0;
			СтрокаТЧ.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах = 0;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если ЗаполненПринятымиСведениями Тогда
		Возврат
	КонецЕсли;
	
	Отказ = ПринятоВПФР;
	Если Не Отказ Тогда
		Для Каждого Набор Из Движения Цикл
			Набор.Очистить();
			Набор.Записать();
		КонецЦикла
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()


