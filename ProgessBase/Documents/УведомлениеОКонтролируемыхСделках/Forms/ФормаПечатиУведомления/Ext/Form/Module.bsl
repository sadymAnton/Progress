&НаСервере
Процедура СформироватьДерево()
	СписокЛистов.Очистить();
	
	Титульный = СписокЛистов.Добавить();
	Титульный.НазваниеГруппировки = "Титульный лист";
	Титульный.НачальныйНомерЛиста = 1;
	Титульный.КонечныйНомерЛиста = 1;
	
	Если СведенияОбУведомлении.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		ТитульныйФЛ = СписокЛистов.Добавить();
		Титульный.НазваниеГруппировки = "Сведения о физлице";
		Титульный.НачальныйНомерЛиста = 2;
		Титульный.КонечныйНомерЛиста = 2;
		
		НомерПервогоЛиста1А = 3;
	Иначе
		НомерПервогоЛиста1А = 2;
	КонецЕсли;
	
	Если ВсегоЛистов < 150 Тогда 
		КоличествоВГруппировке = 10;
	ИначеЕсли ВсегоЛистов < 250 Тогда 
		КоличествоВГруппировке = 20;
	ИначеЕсли ВсегоЛистов < 500 Тогда 
		КоличествоВГруппировке = 50;
	ИначеЕсли ВсегоЛистов < 1000 Тогда 
		КоличествоВГруппировке = 100;
	ИначеЕсли ВсегоЛистов < 5000 Тогда
		КоличествоВГруппировке = 200;
	Иначе
		КоличествоВГруппировке = 500;
	КонецЕсли;
	ВставленоВДерево = НомерПервогоЛиста1А - 1;
	
	Пока ВставленоВДерево < ВсегоЛистов Цикл 
		
		Строка = СписокЛистов.Добавить();
		Строка.НачальныйНомерЛиста = ВставленоВДерево + 1;
		
		Если ВставленоВДерево + КоличествоВГруппировке > ВсегоЛистов Тогда 
			Строка.КонечныйНомерЛиста = ВсегоЛистов;
		ИначеЕсли ВставленоВДерево < КоличествоВГруппировке Тогда 
			Строка.КонечныйНомерЛиста = КоличествоВГруппировке;
		Иначе 
			Строка.КонечныйНомерЛиста = ВставленоВДерево + КоличествоВГруппировке;
		КонецЕсли;
		ВставленоВДерево = Строка.КонечныйНомерЛиста;
		Строка.НазваниеГруппировки = "Листы №" + Строка.НачальныйНомерЛиста
											+ "-" + Строка.КонечныйНомерЛиста;

		
	КонецЦикла;
	
КонецПроцедуры

//формирует листы уведомления, нумерует их, выводит дерево
&НаСервере
Процедура СформироватьЛистыУведомления()
	
	Реквизиты = Новый Структура("Организация, ИНН, КПП, ОтчетныйГод, ЮридическоеФизическоеЛицо, КодНалоговогоОргана, КодМестаПредставления",
								"Организация", "Организация.ИНН", "Организация.КПП", "ОтчетныйГод", "Организация.ЮридическоеФизическоеЛицо", "Организация.КодНалоговогоОргана", "КодМестаПредставления");

	
	Реквизиты = Новый Структура("Организация, ИНН, КПП, ОтчетныйГод, ЮрФизЛицо, КодНалоговогоОргана, КодМестаПредставления",
								"Организация", "Организация.ИНН", "Организация.КПП", "ОтчетныйГод", "Организация.ЮрФизЛицо", "Организация.КодИМНС", "КодМестаПредставления");
	СведенияОбУведомлении = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Уведомление, Реквизиты);
	
	ДатаАктуальностиСведений = КонецГода(СведенияОбУведомлении.ОтчетныйГод);
	
	ЛистыУведомления = КонтролируемыеСделки.ПолучитьЛистыУведомления(Уведомление);
	
	Листы1А = ЛистыУведомления.ЛистыРаздела1А;
	Листы1Б = ЛистыУведомления.ЛистыРаздела1Б;
	ЛистыРаздела2 = ЛистыУведомления.ЛистыРаздела2;
	ЛистыРаздела3 = ЛистыУведомления.ЛистыРаздела3;
	ДанныеРаздела2 = ЛистыУведомления.ДанныеРаздела2;
	ДанныеРаздела3 = ЛистыУведомления.ДанныеРаздела3;
	
	ВсегоЛистов = ?(СведенияОбУведомлении.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо, 2, 1);
	ВсегоЛистов = ВсегоЛистов + Листы1А.Количество() + Листы1Б.Количество() + ЛистыРаздела2.Количество() + ЛистыРаздела3.Количество();
	
	СформироватьДерево();
	
КонецПроцедуры

//формирует макет титульного листа
&НаСервере
Процедура СформироватьТитульныйЛист(Номер = 1, ТабДок)
	
	Макет = КонтролируемыеСделки.ВернутьЗаполненныйМакетДляЛиста1(Уведомление, Номер, СведенияОбУведомлении, ВсегоЛистов);
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	ТабДок.Вывести(Макет);
	НомерСтрокиОкончание = ТабДок.ВысотаТаблицы;
	ТабДок.Область(НомерСтрокиНачало, , НомерСтрокиОкончание, ).Имя = "Лист_"+Номер;
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
КонецПроцедуры

//формирует макет титульного листа-сведений о физлице
&НаСервере
Процедура СформироватьСведенияОФизлице(Номер = 2, ТабДок)
	
	Макет = КонтролируемыеСделки.ВернутьЗаполненныйМакетДляЛиста2(Уведомление, Номер, СведенияОбУведомлении);
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	ТабДок.Вывести(Макет);
	НомерСтрокиОкончание = ТабДок.ВысотаТаблицы;
	ТабДок.Область(НомерСтрокиНачало, , НомерСтрокиОкончание, ).Имя = "Лист_"+Номер;
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
КонецПроцедуры

//формирует макет листов с номерами
&НаСервере
Процедура СформироватьЛисты(НомерНачало, НомерКонец, ТабДок)
	
	Если НомерНачало <= 1 Тогда 
		СформироватьТитульныйЛист(1, ТабДок);
		НомерНачало = 2;
	КонецЕсли;
	
	Если НомерНачало <= 2 И СведенияОбУведомлении.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда 
		СформироватьСведенияОФизлице(2, ТабДок);
		НомерНачало = 3;
	КонецЕсли;
	
	КоличествоЛистов1А = Листы1А.Количество();
	Если КоличествоЛистов1А > 0 Тогда
		ПервыйЛист1А = Листы1А[0].НомерЛиста;
		ПоследнийЛист1А = ПервыйЛист1А + КоличествоЛистов1А - 1;
	Иначе
		//Нет ни одного листа 1А
		Возврат;
	КонецЕсли;
	
	Если НЕ (ПоследнийЛист1А < НомерНачало ИЛИ ПервыйЛист1А > НомерКонец) 
		И (ПервыйЛист1А <= ПоследнийЛист1А) Тогда
		Для Каждого Строка из Листы1А Цикл 
			Если Строка.НомерЛиста > НомерКонец Тогда 
				Возврат;
			ИначеЕсли Строка.НомерЛиста < НомерНачало Тогда 
				Продолжить;
			Иначе
				Номер1А = Строка.НомерЛиста1А;
				НомерЛиста = Строка.НомерЛиста;
				Макет = КонтролируемыеСделки.ВернутьЗаполненныйМакетДляЛиста1А(Строка, 
						Номер1А, НомерЛиста, СведенияОбУведомлении, Строка.Количество1Б);
				
				ТабДок.Вывести(Макет);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПервыйЛист1Б = ПоследнийЛист1А + 1;
	ПоследнийЛист1Б = ПервыйЛист1Б + Листы1Б.Количество() - 1;
	Если НЕ (ПоследнийЛист1Б < НомерНачало ИЛИ ПервыйЛист1Б > НомерКонец)
		И (ПервыйЛист1Б <= ПоследнийЛист1Б) Тогда
		Для Каждого Строка из Листы1Б Цикл 
			Если Строка.НомерЛиста > НомерКонец Тогда 
				Возврат;
			ИначеЕсли Строка.НомерЛиста < НомерНачало Тогда 
				Продолжить;
			Иначе
				Номер1А = Строка.НомерЛиста1А;
				НомерЛиста = Строка.НомерЛиста;
				Макет = КонтролируемыеСделки.ВернутьЗаполненныйМакетДляЛиста1Б(Строка,
						Номер1А, НомерЛиста, СведенияОбУведомлении);
						
				ТабДок.Вывести(Макет);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПервыйЛист2 = ПоследнийЛист1Б + 1;
	ПоследнийЛист2 = ПервыйЛист2 + ЛистыРаздела2.Количество() - 1;
	
	Если НЕ (ПоследнийЛист2 < НомерНачало ИЛИ ПервыйЛист2 > НомерКонец)
		И (ПервыйЛист2 <= ПоследнийЛист2)Тогда
		Для Каждого Строка из ЛистыРаздела2 Цикл 
			Если Строка.НомерЛиста > НомерКонец Тогда 
				Возврат;
			ИначеЕсли Строка.НомерЛиста < НомерНачало Тогда 
				Продолжить;
			Иначе
				Номер1А = Строка.НомерЛиста1А;
				НомерЛиста = Строка.НомерЛиста;
				Макет = КонтролируемыеСделки.ВернутьЗаполненныйМакетДляРаздела2(Строка, ДанныеРаздела2,
						Номер1А, НомерЛиста, СведенияОбУведомлении);
			
				ТабДок.Вывести(Макет);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПервыйЛист3 = ПоследнийЛист2 + 1;
	ПоследнийЛист3 = ПервыйЛист3 + ЛистыРаздела3.Количество() - 1;
	
	Если НЕ (ПоследнийЛист3 < НомерНачало ИЛИ ПервыйЛист3 > НомерКонец)
		И (ПервыйЛист3 <= ПоследнийЛист3) Тогда
		ДатаКонца = КонецГода(СведенияОбУведомлении.ОтчетныйГод);
		Для Каждого Строка из ЛистыРаздела3 Цикл 
			Если Строка.НомерЛиста > НомерКонец Тогда 
				Прервать;
			ИначеЕсли Строка.НомерЛиста < НомерНачало Тогда 
				Продолжить;
			Иначе
				Номер1А = Строка.НомерЛиста1А;
				НомерЛиста = Строка.НомерЛиста;
				Макет = КонтролируемыеСделки.ВернутьЗаполненныйМакетДляРаздела3(Строка, ДанныеРаздела3,
						Номер1А, НомерЛиста, СведенияОбУведомлении, ДатаКонца);
						
				ТабДок.Вывести(Макет);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//формирует макет по параметрам первая-последняя страница
&НаСервере
Процедура СформироватьМакет(Строка)
	
	ОтображениеЛистов.Очистить();
	ОтображениеЛистов.ОбластьПечати = Неопределено;
	
	Если Строка.Имя = "Титульный лист" Тогда
		СформироватьТитульныйЛист(1, ОтображениеЛистов);
	ИначеЕсли Строка.Имя = "Сведения о физлице" Тогда
		СформироватьСведенияОФизлице(2, ОтображениеЛистов);
	Иначе
		Если Строка.Свойство("Начало") Тогда 
			СформироватьЛисты(Строка.Начало, Строка.Конец, ОтображениеЛистов);
		КонецЕсли;
	КонецЕсли;
	
	ОтображениеЛистов.ОбластьПечати = ОтображениеЛистов.Область();
	ОтображениеЛистов.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ОтображениеЛистов.АвтоМасштаб = Истина;

КонецПроцедуры

//выполняет непосредственную печать на принетр уведомления
&НаСервере
Процедура СформироватьИНапечататьЛисты()
	
	ЛистДляПечати = ?(Переключатель=1, 1, ПервыйЛистДляПечати);
	ПоследнийЛист = ?(Переключатель=1, ВсегоЛистов, ПоследнийЛистДляПечати);
	КоличествоВКомплекте = 50;
	Пока ЛистДляПечати <= ПоследнийЛист Цикл 
		
		ОтображениеДляНепосредственнойПечати.Очистить();
		ОтображениеДляНепосредственнойПечати.ОбластьПечати = Неопределено;
		
		Если ЛистДляПечати = 1 Тогда 
			СтраницаКонец = 1;
		ИначеЕсли ЛистДляПечати = 2 Тогда 
			СтраницаКонец = 2;
		Иначе 
			СтраницаКонец = ?(ЛистДляПечати + КоличествоВКомплекте - 1 > ПоследнийЛист,
					ПоследнийЛист,
					ЛистДляПечати + КоличествоВКомплекте-1);
		КонецЕсли;
		СформироватьЛисты(ЛистДляПечати, СтраницаКонец, ОтображениеДляНепосредственнойПечати);
		ЛистДляПечати = СтраницаКонец + 1;
		
		ОтображениеДляНепосредственнойПечати.ОбластьПечати = ОтображениеДляНепосредственнойПечати.Область();
		ОтображениеДляНепосредственнойПечати.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ОтображениеДляНепосредственнойПечати.АвтоМасштаб = Истина;
		ОтображениеДляНепосредственнойПечати.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		
	КонецЦикла;
	
КонецПроцедуры

//ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Уведомление = Параметры.Уведомление.Ссылка;
	Если Не ЗначениеЗаполнено(Уведомление) Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НомераКонтролируемыхСделокКорректны = КонтролируемыеСделки.НомераКонтролируемыхСделокУведомленияКоректны(Уведомление);
	
	ПервыйЛистДляПечати = 1;
	ПоследнийЛистДляПечати = 1;

	Переключатель = 1;
	Элементы.ПервыйЛистДляПечати.Доступность = Ложь;
	Элементы.ПоследнийЛистДляПечати.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечатьНепосредственно(Команда)
	
	Если ПервыйЛистДляПечати > ПоследнийЛистДляПечати И 
		Переключатель = 2 Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	КоличествоЛистов = ?(Переключатель = 2, ПоследнийЛистДляПечати - ПервыйЛистДляПечати + 1, ВсегоЛистов);
	Вопрос = "Распечатать уведомление о контролируемых сделках в объеме " + КоличествоЛистов + " страниц?";
	
	Если Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда 
		СформироватьИНапечататьЛисты();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключательПриИзменении(Элемент)
	Элементы.ПервыйЛистДляПечати.Доступность = (Переключатель = 2);
	Элементы.ПоследнийЛистДляПечати.Доступность = (Переключатель = 2);
КонецПроцедуры

&НаКлиенте
Процедура СписокЛистовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено
	 ИЛИ Элемент.ТекущаяСтрока = ТекущаяСтрокаРазделовОтчета Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
	
	Строка = Новый Структура("Имя,Начало,Конец", Элемент.ТекущиеДанные.НазваниеГруппировки,
					Элемент.ТекущиеДанные.НачальныйНомерЛиста, Элемент.ТекущиеДанные.КонечныйНомерЛиста);
	СформироватьМакет(Строка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ НомераКонтролируемыхСделокКорректны Тогда
		ТекстВопроса = Нстр("ru = 'Нумерация листов 1А не корректна.#РазделительСтрок#Перенумеровать листы 1А?#РазделительСтрок#(операция может занять продолжительное время)'");
		Перенумеровать = Вопрос(СтрЗаменить(ТекстВопроса, "#РазделительСтрок#", Символы.ПС), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да;
		Если Перенумеровать Тогда
			ПеренумероватьЛисты1А(Уведомление);
		КонецЕсли;
	КонецЕсли;
	
	СформироватьЛистыУведомления();
	СформироватьМакет(Новый Структура("Имя", "Титульный лист"));
	ПоследнийЛистДляПечати = ВсегоЛистов;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПеренумероватьЛисты1А(Уведомление)
	
	КонтролируемыеСделки.ПеренумерацияКонтролируемыхСделокУведомления(Уведомление);
	
КонецПроцедуры

