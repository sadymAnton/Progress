
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ОтчетныйГод = Год(Объект.ОтчетныйГод);
	ТипУведомления = ?(Объект.НомерКорректировки = 0, 0, 1);	
	
	УстановитьСведенияОСделке();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСведенияОСделке()
	
	СделкиСуществуют = Документы.УведомлениеОКонтролируемыхСделках.ДанныеАвтоматическогоЗаполненияПодготовлены(Объект.Ссылка);
	ПредставлениеСделок = ПредставлениеСделок(СделкиСуществуют, Объект.ДатаФормированияСпискаСделок);
	УведомлениеЗаполнено = Документы.УведомлениеОКонтролируемыхСделках.УведомлениеЗаполнено(Объект.Ссылка);
	ДатаФормированияСпискаСделок = Объект.ДатаФормированияСпискаСделок;
	ДатаЗаполненияУведомления = Объект.ДатаЗаполненияУведомления;
	ПредставлениеУведомления = ПредставлениеУведомления(УведомлениеЗаполнено, ДатаЗаполненияУведомления);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДанныеАвтоматическогоЗаполненияНаСервере()
	
	Документы.УведомлениеОКонтролируемыхСделках.ПодготовитьДанныеАвтоматическогоЗаполнения(Объект.Ссылка);
	УстановитьСведенияОСделке();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУведомлениеНаСервере()
	
	Документы.УведомлениеОКонтролируемыхСделках.СформироватьКонтролируемыеСделкиУведомления(Объект.Ссылка);
	УстановитьСведенияОСделке();
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.НомерКорректировки.Доступность = Форма.ТипУведомления <> 0;	
	Форма.Элементы.ПредставлениеСделок.Гиперссылка = Форма.СделкиСуществуют;
	Форма.Элементы.ПредставлениеУведомления.Гиперссылка = Форма.УведомлениеЗаполнено;
	ДокументЗаписан = Форма.Объект.Ссылка <> ПредопределенноеЗначение("Документ.УведомлениеОКонтролируемыхСделках.ПустаяСсылка");
	Форма.Элементы.КомандаСформироватьСписокСделок.Доступность = ДокументЗаписан;
	Форма.Элементы.КомандаЗаполнитьУведомление.Доступность = ДокументЗаписан;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеСделок(СделкиСуществуют, ДатаФормированияСпискаСделок)
	
	СделкиЗаполнены = ?(СделкиСуществуют, НСтр("ru = 'Контролируемые сделки (%ДатаФормированияСпискаСделок%)'"),НСтр("ru = 'Список контролируемых сделок пуст'"));
	СделкиЗаполнены = СтрЗаменить(СделкиЗаполнены, "%ДатаФормированияСпискаСделок%", ДатаФормированияСпискаСделок);
	
	Возврат СделкиЗаполнены;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеУведомления(УведомлениеЗаполнено, ДатаЗаполненияУведомления);
	
	Представление = ?(УведомлениеЗаполнено, НСтр("ru = 'Уведомление о контролируемых сделках (%ДатаЗаполненияУведомления%)'"),НСтр("ru = 'Уведомление о контролируемых сделках не заполнено'"));
	Представление = СтрЗаменить(Представление, "%ДатаЗаполненияУведомления%", ДатаЗаполненияУведомления);
	
	Возврат Представление;

КонецФункции

&НаКлиенте
Функция ПолучитьПутьВыгрузки(ПутьДляВыгрузки = Неопределено) Экспорт

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПутьДляВыгрузки", ПутьДляВыгрузки);
	
	ФормаПараметровСохранения = ПолучитьФорму("Документ.УведомлениеОКонтролируемыхСделках.Форма.НастройкаПараметровСохраненияРегламентированногоОтчета", ПараметрыФормы);
	
	РезВыбора = ФормаПараметровСохранения.ОткрытьМодально();
	Если РезВыбора = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	Если НЕ РезВыбора Тогда
		Возврат Ложь;
	Иначе
		Возврат ФормаПараметровСохранения.ПутьДляВыгрузки;
	КонецЕсли;

КонецФункции

&НаСервере
Функция ВыгрузитьНаСервере(УникальныйИдентификатор)
	
	ОбъектДокумента = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектДокумента.ВыгрузитьДокумент(УникальныйИдентификатор);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ 

&НаКлиенте
Процедура ОтчетныйГодПриИзменении(Элемент)
	
	Объект.ОтчетныйГод = Дата(ОтчетныйГод, 1, 1);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипУведомленияПриИзменении(Элемент)
	
	Если ТипУведомления = 0 Тогда
		Объект.НомерКорректировки = 0;
	Иначе
		Объект.НомерКорректировки = ?(Объект.НомерКорректировки = 0, 1, Объект.НомерКорректировки);
	КонецЕсли;
	Модифицированность = Истина;
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечать(Команда)

	ПараметрыПечати = Новый Структура("Уведомление", Объект);
	ОткрытьФорму("Документ.УведомлениеОКонтролируемыхСделках.Форма.ФормаПечатиУведомления", ПараметрыПечати, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыгрузитьУведомлениеВXML(Команда)
	
	ВыгружаемыеДанные = ВыгрузитьНаСервере(УникальныйИдентификатор);
	
	#Если НЕ ВебКлиент Тогда
		ПутьВыгрузки = ПолучитьПутьВыгрузки();
		Если ПутьВыгрузки = Ложь Тогда
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	Для Каждого ФайлВыгрузки Из ВыгружаемыеДанные Цикл
		
		#Если ВебКлиент Тогда
			Попытка
				ПолучитьФайл(ФайлВыгрузки.АдресФайлаВыгрузки, ФайлВыгрузки.ИмяФайлаВыгрузки);
			Исключение
				Сообщение = Новый СообщениеПользователю;
				ТекстСообщения = "Не удалось записать файл """ + ФайлВыгрузки.ИмяФайлаВыгрузки 
							   + """! Возможно, недостаточно места на диске, диск защищен от записи"
							   + " или не подключено расширение для работы с файлами.";
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), ТекстСообщения);
				Сообщение.Сообщить();
			КонецПопытки;
		#Иначе
			ДвоичныйФайл = ПолучитьИзВременногоХранилища(ФайлВыгрузки.АдресФайлаВыгрузки);
			Попытка
				ДвоичныйФайл.Записать(ПутьВыгрузки + ФайлВыгрузки.ИмяФайлаВыгрузки);
				ТекстСообщения = "Файл выгрузки регламентированного отчета """ + ФайлВыгрузки.ИмяФайлаВыгрузки + """ сохранен в каталог """ + ПутьВыгрузки + """.";
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), ТекстСообщения);
				Сообщение.Сообщить();
			Исключение
				Сообщение = Новый СообщениеПользователю;
				ТекстСообщения = "Не удалось записать файл """ + ФайлВыгрузки.ИмяФайлаВыгрузки + """! Возможно, недостаточно места на диске или диск защищен от записи.";
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), ТекстСообщения);
				Сообщение.Сообщить();
			КонецПопытки;
		#КонецЕсли
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеСделокНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	ЗначениеПараметраУведомление = ПользовательскиеНастройки.Элементы.Добавить(Тип("ЗначениеПараметраНастроекКомпоновкиДанных"));
	ЗначениеПараметраУведомление.ИдентификаторПользовательскойНастройки = "Уведомление";
	ЗначениеПараметраУведомление.Параметр = Новый ПараметрКомпоновкиДанных("Уведомление");
	ЗначениеПараметраУведомление.Значение = Объект.Ссылка;
	ЗначениеПараметраУведомление.Использование = Истина;
	
	ПараметрыОткрытия = Новый Структура("КлючВарианта, Уведомление, СформироватьПриОткрытии, ПользовательскиеНастройки", "КонтролируемыеСделки", Объект.Ссылка, Истина, ПользовательскиеНастройки);
	ОткрытьФорму("Отчет.СписокКонтролируемыхСделок.Форма.ФормаОтчетаКонтролируемыеСделки", ПараметрыОткрытия, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы=Новый Структура; 
	ПараметрыФормы.Вставить("Отбор", Новый Структура("УведомлениеОКонтролируемойСделке", Объект.Ссылка));
	ПараметрыФормы.Вставить("УведомлениеОКонтролируемыхСделках", Объект.Ссылка);
	ОткрытьФорму("Документ.КонтролируемаяСделка.ФормаСписка", ПараметрыФормы, , Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьСписокСделок(Команда)
	
	Если Объект.Ссылка <> ПредопределенноеЗначение("Документ.УведомлениеОКонтролируемыхСделках.ПустаяСсылка") Тогда
		ТекстВопроса = НСтр("ru = 'Заполнение списка сделок может занять длительное время%ОчисткаСпискаСделок%
			|Продолжить?'");
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ОчисткаСпискаСделок%",
			?(СделкиСуществуют, НСтр("ru = ',
			|существующие данные о сделках при заполнении будут очищены.'"), НСтр("ru = '.'")));
		
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Если Модифицированность Тогда
				Записать();
			КонецЕсли;
			ПодготовитьДанныеАвтоматическогоЗаполненияНаСервере();
			УправлениеФормой(ЭтаФорма);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьУведомление(Команда)
	
	Если Объект.Ссылка <> ПредопределенноеЗначение("Документ.УведомлениеОКонтролируемыхСделках.ПустаяСсылка") Тогда
		ТекстВопроса = НСтр("ru = 'Заполнение уведомления может занять значительное время%ОчисткаУведомления%
			|Продолжить?'");
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ОчисткаУведомления%",
			?(УведомлениеЗаполнено, НСтр("ru = ',
			|существующие листы 1А при заполнении будут помечены на удаление.'"), НСтр("ru = '.'")));

		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Если Модифицированность Тогда
				Записать();
			КонецЕсли;
			ЗаполнитьУведомлениеНаСервере();
			ЭтаФорма.Прочитать();
			УправлениеФормой(ЭтаФорма);
		КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастройкиЗаполненияУведомленияНажатие(Элемент)
	
	ПараметрыОткрытияФормы = Новый Структура("ГруппироватьСделкиСОдинаковойЦеной, КодМестаПредставления");
	ЗаполнитьЗначенияСвойств(ПараметрыОткрытияФормы, Объект);
	ОткрытьФорму("Документ.УведомлениеОКонтролируемыхСделках.Форма.НастройкиЗаполнения", ПараметрыОткрытияФормы, ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСписокПрочихКонтролируемыхСделокНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы=Новый Структура; 
	ПараметрыФормы.Вставить("Отбор", Новый Структура("УведомлениеОКонтролируемойСделке", Объект.Ссылка));
	ПараметрыФормы.Вставить("УведомлениеОКонтролируемыхСделках", Объект.Ссылка);
	ОткрытьФорму("Документ.ПрочиеКонтролируемыеСделки.ФормаСписка", ПараметрыФормы, , Объект.Ссылка);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Объект.ОтчетныйГод = НачалоГода(ТекущаяДата());
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РегламентированнаяОтчетность.ОбновитьПанельСостоянияОтправкиВУведомленииОКонтролируемыхСделках(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Отправка в ФНС

&НаКлиенте
Процедура ОбновитьСостояниеОтправки(Команда)
	
	РегламентированнаяОтчетность.ОбновитьПанельСостоянияОтправкиВУведомленииОКонтролируемыхСделках(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетность.ПриНажатииНаКнопкуОтправкиВУведомленииОКонтролируемыхСделках(ЭтаФорма);
	
	РегламентированнаяОтчетность.ОбновитьПанельСостоянияОтправкиВУведомленииОКонтролируемыхСделках(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПротоколОтправки(Команда)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		КонтекстЭДО.ОткрытьПротоколОтправкиУведомленияОКонтролируемыхСделках(ЭтаФорма);	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
	ОбъектСсылка = Объект.Ссылка;
	Если ИмяСобытия = "Опрос форм" И Параметр.Ключ = ОбъектСсылка Тогда
		Параметр.Форма = ЭтаФорма;
	ИначеЕсли ИмяСобытия = "Изменение сообщения" И ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Предмет") И КонтекстЭДО.ОтчетЯвляетсяПредметом(Параметр.Предмет, ОбъектСсылка) Тогда
		РегламентированнаяОтчетность.ОбновитьПанельСостоянияОтправкиВУведомленииОКонтролируемыхСделках(ЭтаФорма);
	КонецЕсли;
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма") 
		И ИсточникВыбора.ИмяФормы = "Документ.УведомлениеОКонтролируемыхСделках.Форма.НастройкиФормирования" Тогда
		Для Каждого Реквизит Из ВыбранноеЗначение Цикл
			Если Объект[Реквизит.Ключ] <> Реквизит.Значение Тогда
				Модифицированность = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ЗаполнитьЗначенияСвойств(Объект, ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры








