Перем мУдалятьДвижения Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Процедура проверяет правильность заполнения реквизитов документа
//
Процедура ПроверкаРеквизитов(Отказ, Заголовок) Экспорт
	
	РеквизитыШапки = "Организация";
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, Новый Структура(РеквизитыШапки), Отказ, Заголовок);
	
КонецПроцедуры // ПроверкаРеквизитов()

// Процедура перепроводит документы "Подтверждение нулевой ставки НДС".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет НДС по продукции"
//
Процедура ПровестиПодтверждениеНулевойСтавкиНДС(
	СтруктураШапкиДокумента
	)
	
	ДокументВыборка = Документы.ПодтверждениеНулевойСтавкиНДС.Выбрать(
		СтруктураШапкиДокумента.НачДата,
		СтруктураШапкиДокумента.КонДата,
		Новый Структура("Организация", СтруктураШапкиДокумента.Организация)
	);
	
	Пока ДокументВыборка.Следующий() Цикл
		Если Не ДокументВыборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ДокументВыборка.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры // ПровестиПодтверждениеНулевойСтавкиНДС()

// Процедура формирует структуру шапки документа и дополнительных полей.
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет НДС по продукции"
//	Отказ - Булево - Признак отказа от проведения документа
//	Заголовок - Строка - Текст представления документа 
//
//
Процедура ПодготовитьСтруктуруШапкиДокумента(
	СтруктураШапкиДокумента, 
	Отказ, 
	Заголовок
	)
	
	// Период построения запросов
	НачГраница = Новый Граница(НачалоМесяца(ПериодРегистрации), ВидГраницы.Включая);
	КонГраница = Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая);
	НачДата    = НачалоМесяца(ПериодРегистрации);
	КонДата    = КонецМесяца(ПериодРегистрации);

	СтруктураШапкиДокумента.Вставить("Дата", КонецМесяца(ПериодРегистрации));
	СтруктураШапкиДокумента.Вставить("Период", КонецМесяца(ПериодРегистрации));
	
	СтруктураШапкиДокумента.Вставить("НачГраница", НачГраница);
	СтруктураШапкиДокумента.Вставить("КонГраница", КонГраница);
	СтруктураШапкиДокумента.Вставить("НачДата", НачДата);
	СтруктураШапкиДокумента.Вставить("КонДата", КонДата);
	
	УчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(КонецМесяца(ПериодРегистрации), Организация, Истина);
	Если ЗначениеЗаполнено(УчетнаяПолитикаРегл) Тогда
		ПартионныйУчетНДСвРазрезеСерийИХарактеристик = УчетнаяПолитикаРегл.ПартионныйУчетНДСвРазрезеСерийИХарактеристик;
	Иначе
		ПартионныйУчетНДСвРазрезеСерийИХарактеристик = Истина;
	КонецЕсли;
	СтруктураШапкиДокумента.Вставить("ПартионныйУчетНДСвРазрезеСерийИХарактеристик", ПартионныйУчетНДСвРазрезеСерийИХарактеристик);
		

КонецПроцедуры // ПодготовитьСтруктуруШапкиДокумента()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, Режим) Экспорт
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ОбщегоНазначения.ПроверитьПринадлежностьКВидамУчета(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	СтруктПарам = Новый Структура("Организация", Организация);
	
	ПроверкаРеквизитов(Отказ, Заголовок);
	Если УправлениеПроизводством.ДокументыВПериоде(Ссылка, "Месяц", СтруктПарам).Количество() > 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("За указанный период уже существует документ """ + Ссылка.Метаданные().Представление() + """", Отказ, Заголовок);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат; // Прервать расчет
	КонецЕсли;
	
	// Добавим дополнительные поля в структуру шапки документа.
	ПодготовитьСтруктуруШапкиДокумента(
		СтруктураШапкиДокумента,
		Отказ, 
		Заголовок
		);
		
	Если Не Отказ Тогда
		УчетНДСПоПродукции.РасчетЗатратНаВыпускПродукцииНДС(СтруктураШапкиДокумента);
		ПровестиПодтверждениеНулевойСтавкиНДС(СтруктураШапкиДокумента);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события "ОбработкаУдаленияПроведения".
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Добавим дополнительные поля в структуру шапки документа.
	ПодготовитьСтруктуруШапкиДокумента(
		СтруктураШапкиДокумента,
		Отказ, 
		Заголовок
		);
		
	Если Не Отказ Тогда
		
		УчетНДСПоПродукции.КорректировкаДвиженийНДСПартииТоваров(СтруктураШапкиДокумента, 0);
		ПровестиПодтверждениеНулевойСтавкиНДС(СтруктураШапкиДокумента);
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью()



