
////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьПравильностьЗаполненияДокументов(Ссылки, ЕстьОшибки, СообщатьОбУспехе = Истина, ВыборкаПоШапкеДокумента = Неопределено, ВыборкаПоРаботникам = Неопределено, ВыборкаПоДоходам = Неопределено, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах = Неопределено, ВыборкаПоКорректирующимСведениям = Неопределено) Экспорт
	
	Обработка = глЗначениеПеременной("глОбработкаСообщений");

	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокументов(Ссылки).Выбрать();
	КонецЕсли;
	Если ВыборкаПоРаботникам = Неопределено Тогда
		ВыборкаПоРаботникам = СформироватьЗапросПоРаботникам(Ссылки).Выбрать();
	КонецЕсли;
	Если ВыборкаПоДоходам = Неопределено Тогда
		ВыборкаПоДоходам = СформироватьЗапросПоДоходам(Ссылки).Выбрать();
	КонецЕсли;
	Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах = Неопределено Тогда
		ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах = СформироватьЗапросПоДоходамЗанятыхНаВредныхИТяжелыхРаботах(Ссылки).Выбрать();
	КонецЕсли;
	Если ВыборкаПоКорректирующимСведениям = Неопределено Тогда
		ВыборкаПоКорректирующимСведениям = СформироватьЗапросПоКорректирующимСведениям(Ссылки).Выбрать();
	КонецЕсли;
	
	СтруктураПоискаРаботника = Новый Структура("ФизЛицо, Ссылка");
	
	МесяцыДохода = Новый ТаблицаЗначений;
	МесяцыДохода.Колонки.Добавить("КатегорияЗастрахованныхЛиц", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииЗастрахованныхЛицПФР"));
	МесяцыДохода.Колонки.Добавить("КлассУсловийТруда", Новый ОписаниеТипов("ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки"));
	МесяцыДохода.Колонки.Добавить("КоличествоСтрок", Новый ОписаниеТипов("Число"));
	МесяцыДохода.Колонки.Добавить("Месяц", Новый ОписаниеТипов("Число"));
	
	СтруктураПоискаМесяца = Новый Структура("КатегорияЗастрахованныхЛиц,Месяц");
	СтруктураПоискаМесяцаЗаВредников = Новый Структура("КлассУсловийТруда,Месяц");
	
	СтрокиЗаработка = Документы.ПачкаРазделов6РасчетаРСВ_1.ПустаяСсылка().СведенияОЗаработке.ВыгрузитьКолонки();
	СтрокиЗаработкаЗаВредников = Документы.ПачкаРазделов6РасчетаРСВ_1.ПустаяСсылка().СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ВыгрузитьКолонки();
	
	СоответствиеТарифов = Новый Соответствие;
	
	Отказ = Ложь;
	Пока ВыборкаПоШапкеДокумента.Следующий() Цикл
		
		ТекущийДокумент = ВыборкаПоШапкеДокумента.Ссылка;
		
		// Заголовок для сообщений об ошибках проведения.
		Заголовок =  "Проверка документа " + СокрЛП(ВыборкаПоШапкеДокумента.Ссылка);
		СообщенияРазделПроверки = Обработка.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Информация);
		
		КоличествоДокументов = ВыборкаПоШапкеДокумента.Количество;
		Если КоличествоДокументов = 0 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Список застрахованных лиц пуст!", Отказ, Заголовок,,, СообщенияРазделПроверки);
		КонецЕсли;
		Если КоличествоДокументов > 200 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("В документе должно быть не более 200 форм!", Отказ, Заголовок,,, СообщенияРазделПроверки);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок,,, СообщенияРазделПроверки);
		ИначеЕсли СтрДлина(СокрЛП(ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР)) <> 14 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Предупреждение: Регистрационный номер организации в ПФР скорее всего неправильный",,Заголовок,,, СообщенияРазделПроверки);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОтчетныйПериод) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан отчетный период!", Отказ, Заголовок,,, СообщенияРазделПроверки);
		ИначеЕсли ВыборкаПоШапкеДокумента.ОтчетныйПериод < РасчетСтраховыхВзносов.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Разделы 6 Расчета РСВ-1 представляются начиная с 1 квартала 2014 года! Для формирования сведений за 2010-2012 годы используйте документ ""Сведения о страховых взносах и стаже застрахованных лиц (СЗВ-4, СЗВ-6)"", за 2013 год используйте документ ""Пачка документов СЗВ-6-4"".", Отказ,,,, СообщенияРазделПроверки);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан тип сведений!", Отказ,,,, СообщенияРазделПроверки);
		ИначеЕсли ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
			Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КорректируемыйПериод) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан корректируемый отчетный период!", Отказ,,,, СообщенияРазделПроверки);
			ИначеЕсли ВыборкаПоШапкеДокумента.ОтчетныйПериод <= ВыборкаПоШапкеДокумента.КорректируемыйПериод Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Корректируемый период должен предшествовать отчетному!", Отказ,,,, СообщенияРазделПроверки);
			ИначеЕсли ВыборкаПоШапкеДокумента.КорректируемыйПериод < РасчетСтраховыхВзносов.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Корректирующие (отменяющие) Разделы 6 Расчета РСВ-1 представляются только за отчетные периоды c 1 квартала 2014 года.", Отказ,,,, СообщенияРазделПроверки);
			КонецЕсли; 
		КонецЕсли;
		
		ПроверятьМесяцыДоходов = Ложь;
		МесяцС = 0;
		МесяцПо = 0;
		Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодДействия) Тогда
			ПроверятьМесяцыДоходов = Истина;
			МесяцС = Месяц(ВыборкаПоШапкеДокумента.ПериодДействия);
			МесяцПо = Месяц(ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ВыборкаПоШапкеДокумента.ПериодДействия));
			ТарифыДляРасчета = СоответствиеТарифов[ВыборкаПоШапкеДокумента.ПериодДействия];
			Если ТарифыДляРасчета = Неопределено Тогда
				ТарифыДляРасчета = ПроцедурыПерсонифицированногоУчета.ТарифыПоКатегориям(ВыборкаПоШапкеДокумента.ПериодДействия);
				СоответствиеТарифов.Вставить(ВыборкаПоШапкеДокумента.ПериодДействия,ТарифыДляРасчета);
			КонецЕсли;
		Иначе	
			ТарифыДляРасчета = Неопределено;
		КонецЕсли;
	
		ВыборкаПоРаботникам.Сбросить();
		Если ВыборкаПоРаботникам.НайтиСледующий(ВыборкаПоШапкеДокумента.Ссылка, "Ссылка") Тогда
			
			Пока ВыборкаПоРаботникам.СледующийПоЗначениюПоля("НомерСтроки") цикл
				
				Если ВыборкаПоРаботникам.Ссылка <> ТекущийДокумент Тогда
					Прервать;
				КонецЕсли;
				
				СтрокаНачалаСообщенияОбОшибке = "В строке № "+ СокрЛП(ВыборкаПоРаботникам.НомерСтроки);
				
				Если Не ЗначениеЗаполнено(ВыборкаПоРаботникам.ФизЛицо) Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ": Не выбран сотрудник!", Отказ, Заголовок,,, СообщенияРазделПроверки);
				Иначе
					
					СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + " по сотруднику " + ВыборкаПоРаботникам.ФизЛицоНаименование + ": ";
					
					ЗаполнитьЗначенияСвойств(СтруктураПоискаРаботника, ВыборкаПоРаботникам);
					
					Если Не ВыборкаПоРаботникам.ФизЛицоРаботаетВОрганизации тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- не зарегистрирован(а) как сотрудник организации " + ВыборкаПоШапкеДокумента.ОрганизацияНаименование, Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					
					СтраховойНомерПФР = ВыборкаПоРаботникам.СтраховойНомерПФР;
					Если Не ЗначениеЗаполнено(СтраховойНомерПФР) Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задан страховой номер!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					ИначеЕсли Не РегламентированнаяОтчетность.СтраховойНомерПФРСоответствуетТребованиям(СтраховойНомерПФР) тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Задан неверный страховой номер!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(ВыборкаПоРаботникам.Фамилия) Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана фамилия!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					Если Не ЗначениеЗаполнено(ВыборкаПоРаботникам.Имя) Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задано имя!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
					
					//Контроль дубля строк
					Если ЗначениеЗаполнено(ВыборкаПоРаботникам.НомерПовторяющейсяСтроки) Тогда
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Строка №" + ВыборкаПоРаботникам.НомерПовторяющейсяСтроки + ": Сотрудник " + ВыборкаПоРаботникам.ФизЛицоНаименование + " указан в документе дважды!", Отказ, Заголовок,,, СообщенияРазделПроверки);
					КонецЕсли;
				
					Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда 
						ВыборкаПоДоходам.Сбросить();
						Если ВыборкаПоДоходам.НайтиСледующий(СтруктураПоискаРаботника) Тогда
							УточнениеНачалаСообщенияОбОшибке = " подраздел 6.4 (Сведения о выплатах) ";
							Пока ВыборкаПоДоходам.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл
								МесяцыДохода.Очистить();
								Пока ВыборкаПоДоходам.Следующий() Цикл
									Если ВыборкаПоДоходам.Ссылка <> СтруктураПоискаРаботника.Ссылка Или ВыборкаПоДоходам.ФизЛицо <> СтруктураПоискаРаботника.ФизЛицо Тогда
										Прервать;
									КонецЕсли;
									ОписаниеМесяца = ?(ВыборкаПоДоходам.Месяц = 0, "- В показателе ""С начала года""", "- За " + ВыборкаПоДоходам.Месяц + "-й месяц");
									Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц) Тогда
										ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеМесяца + " не указана категория застрахованных лиц!", Отказ,,,, СообщенияРазделПроверки);
									КонецЕсли;
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
						Продолжить;	
					КонецЕсли;
					
					// остальные проверки касаются только Исходных и Корректирующих форм
					СтрокиЗаработка.Очистить();
					СтрокиЗаработкаЗаВредников.Очистить();

					ВыборкаПоДоходам.Сбросить();
					Если ВыборкаПоДоходам.НайтиСледующий(СтруктураПоискаРаботника) Тогда
						УточнениеНачалаСообщенияОбОшибке = " подраздел 6.4 (Сведения о выплатах) ";
						Пока ВыборкаПоДоходам.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл
							МесяцыДохода.Очистить();
							Пока ВыборкаПоДоходам.Следующий() Цикл
								Если ВыборкаПоДоходам.Ссылка <> СтруктураПоискаРаботника.Ссылка Или ВыборкаПоДоходам.ФизЛицо <> СтруктураПоискаРаботника.ФизЛицо Тогда
									Прервать;
								КонецЕсли;
								Если ПроверятьМесяцыДоходов Тогда
									Если ЗначениеЗаполнено(ВыборкаПоДоходам.Месяц) И (ВыборкаПоДоходам.Месяц < МесяцС Или ВыборкаПоДоходам.Месяц > МесяцПо) Тогда
										ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- В строках заработка указан месяц (" + ВыборкаПоДоходам.Месяц + "), не принадлежащий отчетному периоду!", Отказ, Заголовок,,, СообщенияРазделПроверки);
									Иначе 	
										ЗаполнитьЗначенияСвойств(СтруктураПоискаМесяца, ВыборкаПоДоходам);
										СтрокиТаблицыМесяцев = МесяцыДохода.НайтиСтроки(СтруктураПоискаМесяца);
										Если СтрокиТаблицыМесяцев.Количество() = 0 Тогда
											СтрокаТаблицыМесяцев = МесяцыДохода.Добавить();
											ЗаполнитьЗначенияСвойств(СтрокаТаблицыМесяцев,ВыборкаПоДоходам);
										Иначе
											СтрокаТаблицыМесяцев = СтрокиТаблицыМесяцев[0];
										КонецЕсли;
										СтрокаТаблицыМесяцев.КоличествоСтрок = СтрокаТаблицыМесяцев.КоличествоСтрок + 1;
									КонецЕсли;	
								КонецЕсли;
								ОписаниеМесяца = ?(ВыборкаПоДоходам.Месяц = 0, "- В показателе ""С начала года""", "- За " + ВыборкаПоДоходам.Месяц + "-й месяц");
								Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц) Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеМесяца + " не указана категория застрахованных лиц!", Отказ,,,, СообщенияРазделПроверки);
								КонецЕсли;
								Если ВыборкаПоДоходам.Месяц > 0 И ВыборкаПоДоходам.Заработок = 0 И ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины = 0 И ВыборкаПоДоходам.ОблагаетсяВзносамиСвышеПредельнойВеличины = 0  Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеМесяца + " по категории """ + ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц + """ указаны нулевые данные!", Отказ, Заголовок,,, СообщенияРазделПроверки);
								КонецЕсли;
								Если ВыборкаПоДоходам.Заработок < 0 Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеМесяца + " по категории """ + ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц + """ указан отрицательный заработок!", Отказ, Заголовок,,, СообщенияРазделПроверки);
								КонецЕсли;
								Если ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины < 0 Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеМесяца + " по категории """ + ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц + """ указана отрицательная база, не превышающая предельную величину!", Отказ, Заголовок,,, СообщенияРазделПроверки);
								КонецЕсли;
								Если ВыборкаПоДоходам.ПоДоговорамГПХДоПредельнойВеличины < 0 Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеМесяца + " по категории """ + ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц + """ указана отрицательная база по договорам ГПХ, не превышающая предельную величину!", Отказ, Заголовок,,, СообщенияРазделПроверки);
								КонецЕсли;
								Если ВыборкаПоДоходам.ОблагаетсяВзносамиСвышеПредельнойВеличины < 0 Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеМесяца + " по категории """ + ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц + """ указана отрицательная база, превышающая предельную величину!", Отказ, Заголовок,,, СообщенияРазделПроверки);
								КонецЕсли;
								Если ВыборкаПоДоходам.Заработок < ВыборкаПоДоходам.ОблагаетсяВзносамиДоПредельнойВеличины + ВыборкаПоДоходам.ОблагаетсяВзносамиСвышеПредельнойВеличины Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеМесяца + " по категории """ + ВыборкаПоДоходам.КатегорияЗастрахованныхЛиц + """ сумма, облагаемая взносами, превышает сумму начисленного заработка!", Отказ, Заголовок,,, СообщенияРазделПроверки);
								КонецЕсли;
								Если ВыборкаПоДоходам.Месяц <= МесяцПо И ВыборкаПоДоходам.Месяц >= МесяцС Тогда
									ЗаполнитьЗначенияСвойств(СтрокиЗаработка.Добавить(), ВыборкаПоДоходам);
								КонецЕсли;
							КонецЦикла;
							Если ПроверятьМесяцыДоходов Тогда
								Для каждого СтрокаТЗ Из МесяцыДохода Цикл
									Если СтрокаТЗ.КоличествоСтрок > 1 Тогда
										ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + "- В строках заработка по категории """ + СтрокаТЗ.КатегорияЗастрахованныхЛиц + """ месяц № " + СтрокаТЗ.Месяц + " указан более одного раза!", Отказ, Заголовок,,, СообщенияРазделПроверки);
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
						ВыборкаПоКорректирующимСведениям.Сбросить();
						Если ВыборкаПоКорректирующимСведениям.НайтиСледующий(СтруктураПоискаРаботника) Тогда
							УточнениеНачалаСообщенияОбОшибке = ", подраздел 6.6 (Информация о корректирующих сведениях) ";
							НомерСтроки = 1;
							Пока ВыборкаПоКорректирующимСведениям.СледующийПоЗначениюПоля("КорректируемыйПериод") Цикл
								Если ВыборкаПоКорректирующимСведениям.Ссылка <> СтруктураПоискаРаботника.Ссылка Или ВыборкаПоКорректирующимСведениям.ФизЛицо <> СтруктураПоискаРаботника.ФизЛицо Тогда
									Прервать;
								КонецЕсли;
								Если Не ЗначениеЗаполнено(ВыборкаПоКорректирующимСведениям.КорректируемыйПериод) Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + " - в строке " + НомерСтроки + " не указан корректируемый период!", Отказ,,,, СообщенияРазделПроверки);
								Иначе	
									Если ВыборкаПоКорректирующимСведениям.КорректируемыйПериод >= ВыборкаПоШапкеДокумента.КорректируемыйПериод Тогда
										ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + " - в строке " + НомерСтроки + " корректируемый период сведений должен предшествовать корректируемому периоду Раздела 6!", Отказ, Заголовок,,, СообщенияРазделПроверки);
									КонецЕсли;
									ОписаниеПериода = " - в строке " + НомерСтроки + " с корр.периодом " + ПроцедурыПерсонифицированногоУчета.ОписаниеОтчетногоПериодаДляПоказа(ВыборкаПоКорректирующимСведениям.КорректируемыйПериод);
									Если ВыборкаПоКорректирующимСведениям.КорректируемыйПериод < РасчетСтраховыхВзносов.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() Тогда
										Если ВыборкаПоКорректирующимСведениям.ДоначисленоНаОПС <> 0 Тогда
											ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеПериода + " сумма доначисленных взносов на ОПС за этот период недопустима!", Отказ, Заголовок,,, СообщенияРазделПроверки);
										КонецЕсли;
									Иначе
										Если ВыборкаПоКорректирующимСведениям.ДоначисленоСтраховая <> 0 Тогда
											ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеПериода + " сумма доначисленных взносов на страховую часть пенсии за этот период недопустима!", Отказ, Заголовок,,, СообщенияРазделПроверки);
										КонецЕсли;
										Если ВыборкаПоКорректирующимСведениям.ДоначисленоНакопительная <> 0 Тогда
											ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + ОписаниеПериода + " сумма доначисленных взносов на накопительную часть пенсии за этот период недопустима!", Отказ, Заголовок,,, СообщенияРазделПроверки);
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
								НомерСтроки = НомерСтроки + 1;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
					
					ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Сбросить();
					Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.НайтиСледующий(СтруктураПоискаРаботника) Тогда
						УточнениеНачалаСообщенияОбОшибке = ", подраздел 6.7 (Сведения о выплатах занятых на работах дающих право на досрочную пенсию) ";
						Пока ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.СледующийПоЗначениюПоля("КлассУсловийТруда") Цикл
							МесяцыДохода.Очистить();
							Пока ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Следующий() Цикл
								Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Ссылка <> СтруктураПоискаРаботника.Ссылка Или ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ФизЛицо <> СтруктураПоискаРаботника.ФизЛицо Тогда
									Прервать;
								КонецЕсли;
								Если ПроверятьМесяцыДоходов Тогда
									Если ЗначениеЗаполнено(ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц) И (ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц < МесяцС Или ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц > МесяцПо) Тогда
										ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- В строках заработка указан месяц (" + ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц + "), не принадлежащий отчетному периоду!", Отказ, Заголовок,,, СообщенияРазделПроверки);
									Иначе 	
										ЗаполнитьЗначенияСвойств(СтруктураПоискаМесяцаЗаВредников, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах);
										СтрокиТаблицыМесяцев = МесяцыДохода.НайтиСтроки(СтруктураПоискаМесяцаЗаВредников);
										Если СтрокиТаблицыМесяцев.Количество() = 0 Тогда
											СтрокаТаблицыМесяцев = МесяцыДохода.Добавить();
											ЗаполнитьЗначенияСвойств(СтрокаТаблицыМесяцев,ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах);
										Иначе
											СтрокаТаблицыМесяцев = СтрокиТаблицыМесяцев[0];
										КонецЕсли;
										СтрокаТаблицыМесяцев.КоличествоСтрок = СтрокаТаблицыМесяцев.КоличествоСтрок + 1;
									КонецЕсли;	
								КонецЕсли;
								ОписаниеМесяца = ?(ВыборкаПоДоходам.Месяц = 0, "- В показателе С начала года", "- За " + ВыборкаПоДоходам.Месяц + "-й месяц");
								ОписаниеКласса = ?(ЗначениеЗаполнено(ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.КлассУсловийТруда), "классу условий " + ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.КлассУсловийТруда, " неаттестованным рабочим местам");
								Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах < 0 Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ОписаниеМесяца + " по " + ОписаниеКласса + " указана отрицательная база взносов за занятых на подземных и вредных работах!", Отказ, Заголовок,,, СообщенияРазделПроверки);
								КонецЕсли;
								Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах < 0 Тогда
									ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ОписаниеМесяца + " по " + ОписаниеКласса + " указана отрицательная база взносов за занятых на тяжелых работах!", Отказ, Заголовок,,, СообщенияРазделПроверки);
								КонецЕсли;
								Если ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц <= МесяцПо И ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Месяц >= МесяцС Тогда
									ЗаполнитьЗначенияСвойств(СтрокиЗаработкаЗаВредников.Добавить(), ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах);
								КонецЕсли;
							КонецЦикла;
							Если ПроверятьМесяцыДоходов Тогда
								Для каждого СтрокаТЗ Из МесяцыДохода Цикл
									Если СтрокаТЗ.КоличествоСтрок > 1 Тогда
										ОписаниеКласса = ?(ЗначениеЗаполнено(СтрокаТЗ.КлассУсловийТруда), "классу условий " + СтрокаТЗ.КлассУсловийТруда, " неаттестованным рабочим местам ");
										ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + УточнениеНачалаСообщенияОбОшибке + "- В строках заработка по " + ОписаниеКласса + " месяц № " + СтрокаТЗ.Месяц + " указан более одного раза!", Отказ, Заголовок,,, СообщенияРазделПроверки);
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					 //Проверим правильность расчета взносов
					Если ТарифыДляРасчета <> Неопределено Тогда
					
						// П. 7.5.4. По всем разделам 6 значение, указанное в подразделе 6.5 должно быть равно сумме значений, 
						// указанных в графе 5 строк 401,402 и 403  (411, 412, 413 и т.д. (зависит от количества тарифов 
						// страховых взносов), умноженных на соответствующий текущему периоду тариф страховых взносов.
						
						РассчитанныйПФР = 0;
						СтрокиЗаработка.Свернуть("КатегорияЗастрахованныхЛиц","ОблагаетсяВзносамиДоПредельнойВеличины,Заработок");
						Для каждого СтрокаТЗ Из СтрокиЗаработка Цикл
							ТарифДляРасчета = ТарифыДляРасчета.Получить(ПроцедурыПерсонифицированногоУчета.СоответствиеКатегорийИностранцевКатегориямРоссиян()[СтрокаТЗ.КатегорияЗастрахованныхЛиц]);
							Если ЗначениеЗаполнено(ТарифДляРасчета) Тогда
								РассчитанныйПФР = РассчитанныйПФР + Окр(СтрокаТЗ.ОблагаетсяВзносамиДоПредельнойВеличины * (ТарифДляРасчета.ПФРСтраховая + ТарифДляРасчета.ПФРНакопительная) / 100, 2);
							КонецЕсли;
						КонецЦикла;
						
						ТекстСообщения = " - значение, указанное в подразделе 6.5 должно быть равно сумме значений, указанных в графе 5 
						|строк 401,402 и 403  (411, 412, 413 и т.д., зависит от количества тарифов страховых взносов), 
						|умноженных на соответствующий текущему периоду тариф страховых взносов.";
						Разность = Макс(РассчитанныйПФР - ВыборкаПоРаботникам.НачисленоСтраховая, ВыборкаПоРаботникам.НачисленоСтраховая - РассчитанныйПФР);
						Если Разность > 0.03 Тогда
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок, Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
						КонецЕсли;		
						
					КонецЕсли;
					
					// П. 7.4.16. Если в подразделе 6.8 содержится запись в графах 2 и 3, которая не сопровождается записью с кодом «АДМИНИСТР», «ДЕТИ», «УЧОТПУСК», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД», 
					// «ДЕКРЕТ», «ЧАЭС», «НЕОПЛ», «НЕОПЛДОГ» и «НЕОПЛАВТ»  обязательно наличие значения в графе 4 строки 401-403  подраздела 6.4
					Если СтрокиЗаработка.Итог("Заработок") = 0 И ВыборкаПоРаботникам.КоличествоОплачиваемыхСтрок > 0 Тогда
						Если ВыборкаПоШапкеДокумента.ОтчетныйПериод < ПроцедурыПерсонифицированногоУчета.ДатаВводаФормыРСВ_1за2015год() Тогда
							ТекстСообщения = "Если в подразделе 6.8 содержится запись в графах 2 и 3, которая не сопровождается записью 
							|с кодом «АДМИНИСТР», «ДЕТИ», «УЧОТПУСК», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД», «ДЕКРЕТ», «ЧАЭС», 
							|«НЕОПЛ», «НЕОПЛДОГ» и «НЕОПЛАВТ»  обязательно наличие значения в графе 4 строки 401-403  подраздела 6.4";
						Иначе
							ТекстСообщения = "Если в подразделе 6.8 содержится запись в графах 2 и 3, которая не сопровождается записью 
							|с кодом «ДЕТИ», «УЧОТПУСК», «ДЛДЕТИ», «ДЛОТПУСК», «ВРНЕТРУД», «ДЕКРЕТ», «ЧАЭС», «НЕОПЛ», 
							|«НЕОПЛДОГ» и «НЕОПЛАВТ»  обязательно наличие значения в графе 4 строки 401-403  подраздела 6.4";
						КонецЕсли;
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок, Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
					
					// П 7.8 Период работы за последние три месяца отчетного периода (подраздел 6.8 Расчета)
					// В случае если в строке подраздела 6.8 графы 5 или графы 8 одновременно указан код «ВРНЕТРУД», «ДЕКРЕТ», «ДЛОТПУСК», «ВАХТА», или сочетание кодов «27-1» и «27-11» или «27-14», «27-2» в сочетании с позицией списка 23307000-17541 проверка не производится.

					ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0;
					ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0;
					ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0;
					ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0;
					ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0;
					ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0;
					Для каждого СтрокаЗаработка Из СтрокиЗаработкаЗаВредников Цикл
						Если СтрокаЗаработка.Месяц = МесяцС Тогда
							ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
							ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
						КонецЕсли;
						Если СтрокаЗаработка.Месяц = МесяцС + 1 Тогда
							ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
							ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
						КонецЕсли;
						Если СтрокаЗаработка.Месяц = МесяцС + 2 Тогда
							ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах;
							ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = СтрокаЗаработка.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах;
						КонецЕсли;
					КонецЦикла;                                          
					
					//П 7.8.2 По всем разделам 6 при наличии ненулевых значений в строках 701,702,703,711,712,713  графы 4 подраздела 6.7  
					//обязательно наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 для соответствующих периодов, 
					//указанных в графах 2 и 3 подраздела 6.8
					
					//П 7.8.4 По всем разделам 6 при наличии в графе «Особые условия труда (код)» подраздела 6.8  кода особых условий 
					//труда 27-1 и отсутствии кода «ДЕКРЕТ», «ВРНЕТРУД», «ВАХТА», «ДЛОТПУСК», то для соответствующих месяцев обязательно 
					//наличие ненулевых значений в графе 4 подраздела 6.7  за соответствующие месяцы (строки 701, 702, 703, 711, 712, 713). 
					
					Если ВыборкаПоРаботникам.Ст27_1ВПервомМесяце Тогда
						Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце = 0 Тогда
							ТекстСообщения = "При наличии кода 27-1 особых условий труда в строках подраздела 6.8 за первый месяц 
							| отчетного периода обязательно наличие значений в графе 4 подраздела 6.7 в строках 701,711 ...";
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
						КонецЕсли; 
					ИначеЕсли ВыборкаПоРаботникам.НеПроверятьСт27_1ВПервомМесяце Тогда // коды есть, но проверять не надо	
					ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВПервомМесяце <> 0 Тогда	
						ТекстСообщения = "При наличии ненулевых значений в строках 701,711 ... графы 4 подраздела 6.7  
						| обязательно наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 
						| в строках подраздела 6.8 за первый месяц отчетного периода";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
					Если ВыборкаПоРаботникам.Ст27_1ВоВторомМесяце Тогда
						Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце = 0 Тогда
							ТекстСообщения = "При наличии кода 27-1 особых условий труда в строках подраздела 6.8 за второй месяц 
							| отчетного периода обязательно наличие значений в графе 4 подраздела 6.7 в строках 702,712 ...";
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
						КонецЕсли;
					ИначеЕсли ВыборкаПоРаботникам.НеПроверятьСт27_1ВоВторомМесяце Тогда // коды есть, но проверять не надо
					ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВоВторомМесяце <> 0 Тогда	
						ТекстСообщения = "При наличии ненулевых значений в строках 702,712 ... графы 4 подраздела 6.7  
						| обязательно наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 
						| в строках подраздела 6.8 за второй месяц отчетного периода";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
					Если ВыборкаПоРаботникам.Ст27_1ВТретьемМесяце Тогда
						Если ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце = 0 Тогда
							ТекстСообщения = "При наличии кода 27-1 особых условий труда в строках подраздела 6.8 за третий месяц 
							| отчетного периода обязательно наличие значений в графе 4 подраздела 6.7 в строках 703,713 ...";
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
						КонецЕсли;
					ИначеЕсли ВыборкаПоРаботникам.НеПроверятьСт27_1ВТретьемМесяце Тогда // коды есть, но проверять не надо
					ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботахВТретьемМесяце <> 0 Тогда	
						ТекстСообщения = "При наличии ненулевых значений в строках 703,713 ... графы 4 подраздела 6.7  
						| обязательно наличие в графе «Особые условия труда (код)» кода особых условий труда 27-1 
						| в строках подраздела 6.8 за третий месяц отчетного периода";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
					
					//П 7.8.3 По всем разделам 6 при наличии ненулевых значений в строках 701,702,703,711,712,713  графы 5 подраздела 6.7  
					//обязательно наличие  для соответствующих периодов, указанных в графах 2 и 3 подраздела 6.8  в графе «Особые условия 
					//труда (код)» одного из кодов особых условий труда, (кроме «27-1» ,«28-СЕВ», «27-2» в сочетании со значением 23307000-17541 
					//элемента Код позиции списка) то есть указаны 27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ,  
					//или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» подраздела 6.8  в строке периода работы 
					//за соответствующий месяц должно быть указано одно из значений: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, 
					//УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15..
					
					//П 7.8.5 По всем разделам 6 при наличии в графе «Особые условия труда (код)» подраздела 6.8 одного из кодов особых условий 
					//труда, кроме «27-1», «28-СЕВ», «27-2» в сочетании со значением 23307000-17541 элемента Код позиции списка  (то есть указаны 
					//27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения 
					//трудовой пенсии. Основание (код)» указано одно из значений: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, 
					//УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15 и отсутствии   кода «ДЕКРЕТ», «ВРНЕТРУД», «ВАХТА», 
					//«ДЛОТПУСК», то для соответствующих месяцев обязательно наличие ненулевых  значений в графе 5 подраздела 6.7  за 
					//соответствующие месяцы (строки 701, 702, 703, 711, 712, 713). 
						
					Если ВыборкаПоРаботникам.ОстальныеКодыВПервомМесяце Тогда
						Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце = 0 Тогда
							ТекстСообщения = "При наличии в строках подраздела 6.8 за первый месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ»
							| (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов:
							| 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15
							| обязательно наличие значений в графе 5 подраздела 6.7 в строках 701,711 ...";
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
						КонецЕсли;
					ИначеЕсли ВыборкаПоРаботникам.НеПроверятьОстальныеКодыВПервомМесяце Тогда // коды есть, но проверять не надо
					ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВПервомМесяце <> 0 Тогда
						ТекстСообщения = "При наличии ненулевых значений в строках 701,711 ... графы 5 подраздела 6.7 обязательно наличие в строках подраздела 6.8 за первый месяц отчетного периода
						| в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) 
						| или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, 
						| ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
					Если ВыборкаПоРаботникам.ОстальныеКодыВоВторомМесяце Тогда
						Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце = 0 Тогда
							ТекстСообщения = "При наличии в строках подраздела 6.8 за второй месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ»
							| (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов:
							| 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15
							| обязательно наличие значений в графе 5 подраздела 6.7 в строках 702,712 ...";
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
						КонецЕсли; 
					ИначеЕсли ВыборкаПоРаботникам.НеПроверятьОстальныеКодыВоВторомМесяце Тогда // коды есть, но проверять не надо
					ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВоВторомМесяце <> 0 Тогда	
						ТекстСообщения = "При наличии ненулевых значений в строках 702,712 ... графы 5 подраздела 6.7 обязательно наличие в строках подраздела 6.8 за второй месяц отчетного периода
						| в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) 
						| или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, 
						| ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
					Если ВыборкаПоРаботникам.ОстальныеКодыВТретьемМесяце Тогда
						Если ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце = 0 Тогда
							ТекстСообщения = "При наличии в строках подраздела 6.8 за третий месяц отчетного периода в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ»
							| (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ)  или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов:
							| 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15
							| обязательно наличие значений в графе 5 подраздела 6.7 в строках 701,711 ...";
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
						КонецЕсли; 
					ИначеЕсли ВыборкаПоРаботникам.НеПроверятьОстальныеКодыВТретьемМесяце Тогда // коды есть, но проверять не надо	
					ИначеЕсли ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботахВТретьемМесяце <> 0 Тогда	
						ТекстСообщения = "При наличии ненулевых значений в строках 701,711 ... графы 5 подраздела 6.7 обязательно наличие в строках подраздела 6.8 за третий месяц отчетного периода
						| в графе «Особые условия труда (код)» одного из кодов особых условий труда, кроме «27-1» и «28-СЕВ» (27-2, 27-3, 27-4, 27-5, 27-6, 27-7, 27-8, 27-9, 27-10, 27-ОС, 27-ПЖ) 
						| или в графе «Условия для досрочного назначения трудовой пенсии. Основание (код)» одного из кодов: 27-11-ГР, 27-11-ВП, 27-12, 27-СП, САМОЛЕТ, СПЕЦАВ, СПАСАВ, УЧЛЕТ, 
						| ВЫСШПИЛ, НОРМАПР, НОРМСП, РЕАКТИВН, ЛЕТРАБ, 27-14, 27-15";
						ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, , Заголовок,Перечисления.ВидыСообщений.Информация,, СообщенияРазделПроверки);	
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла; // по документам
	
	Отказ = Отказ Или Не ПроцедурыПерсонифицированногоУчета.НаборЗаписейОСтажеСоответствуетТребованиям(Ссылки, Истина, СообщенияРазделПроверки);
	
	Если Отказ Тогда
		ЕстьОшибки = Истина;
	КонецЕсли;	 
	
	Если СообщатьОбУспехе И Не ЕстьОшибки Тогда
		Обработка.ДобавитьСообщение("Ошибок не обнаружено.", Перечисления.ВидыСообщений.Информация, , СообщенияРазделПроверки);		
	КонецЕсли;
	
КонецПроцедуры 
	
////////////////////////////////////////////////////////////////////////////////

Процедура Печать(ТаблицаПачек, Результаты, ДатаПодписи, РазбиватьНаСтраницы = Истина, НумероватьСтраницы = Истина, НомерПервойСтраницы = 1, НомерПоследнейСтраницы = 0, ПроверятьДокументы = Истина, ОчищатьСообщения = Истина) Экспорт
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	Если ОчищатьСообщения Тогда
		ОбработкаКомментариев.УдалитьСообщения();
	КонецЕсли;
	
	Ссылки = ТаблицаПачек.ВыгрузитьКолонку("ДокументПачка");
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокументов(Ссылки).Выбрать();
	
	ВыборкаПоРаботникам = СформироватьЗапросПоРаботникам(Ссылки).Выбрать();
	ВыборкаПоДоходам = СформироватьЗапросПоДоходам(Ссылки).Выбрать();
	ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах = СформироватьЗапросПоДоходамЗанятыхНаВредныхИТяжелыхРаботах(Ссылки).Выбрать();
	ВсеЗаписиОСтаже	= СформироватьЗапросПоЗаписямОСтаже(Ссылки).Выбрать();
	ВыборкаПоКорректирующимСведениям = СформироватьЗапросПоКорректирующимСведениям(Ссылки).Выбрать();
	
	Результаты = Новый ТаблицаЗначений;
	Результаты.Колонки.Добавить("Представление");
	Результаты.Колонки.Добавить("Описание", Новый ОписаниеТипов("Строка"));
	
	Отказ = Ложь;
	
	Если ПроверятьДокументы Тогда
		//Проверка корректности заполнения документа
		ПроверитьПравильностьЗаполненияДокументов(Ссылки, Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоРаботникам, ВыборкаПоДоходам, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, ВыборкаПоКорректирующимСведениям);
	КонецЕсли;
	
	Если Отказ тогда
		Возврат 
	КонецЕсли;	 
	
	ТаблицаПоДоходам = Документы.ПачкаРазделов6РасчетаРСВ_1.ПустаяСсылка().СведенияОЗаработке.ВыгрузитьКолонки();
	ТаблицаПоДоходам.Колонки.Добавить("КодКатегории", Новый ОписаниеТипов("Строка"));
	ТаблицаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах = Документы.ПачкаРазделов6РасчетаРСВ_1.ПустаяСсылка().СведенияОЗаработкеНаВредныхИТяжелыхРаботах.ВыгрузитьКолонки();
	ТаблицаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах.Колонки.Добавить("КодКлассаУсловийТруда", Новый ОписаниеТипов("Строка"));
	
	ТекущийНомерСтраницы = НомерПервойСтраницы;
	
	СтруктураПоиска = Новый Структура("ФизЛицо, Ссылка");
	СтруктураПоискаПачки = Новый Структура("Ссылка");
	
	ВременныйДокументРезультат = Новый ТабличныйДокумент;
	ВременныйДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаРазделов6РасчетаРСВ_1";
	ВременныйДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Для каждого СтрокаТЗ Из ТаблицаПачек Цикл
		
		СтруктураПоискаПачки.Ссылка = СтрокаТЗ.ДокументПачка;
		
		ВыборкаПоШапкеДокумента.Сбросить();
		Если ВыборкаПоШапкеДокумента.НайтиСледующий(СтруктураПоискаПачки) Тогда
			
			Если ВыборкаПоШапкеДокумента.ОтчетныйПериод >= ПроцедурыПерсонифицированногоУчета.ДатаВводаФормыРСВ_1за2015год() Тогда
				Макет = ПолучитьМакет("ФормаРаздел6_2015");
			Иначе
				Макет = ПолучитьМакет("ФормаРаздел6");
			КонецЕсли;
			
			// Рабочие области макета
			ОбластьВерхнийКолонтитул	= Макет.ПолучитьОбласть("ВерхнийКолонтитул");
			ОбластьНижнийКолонтитул		= Макет.ПолучитьОбласть("НижнийКолонтитул");
			ОбластьШапка 				= Макет.ПолучитьОбласть("Шапка");
			ОбластьСведенияОЗаработкеСтрока	= Макет.ПолучитьОбласть("СведенияОЗаработкеСтрока");
			ОбластьПустойРазделДоходов	= Макет.ПолучитьОбласть("ПустойРазделДоходов");
			ОбластьВтораяЧастьПустогоРазделаДоходов	= Макет.ПолучитьОбласть("ВтораяЧастьПустогоРазделаДоходов");
			ОбластьВзносов				= Макет.ПолучитьОбласть("Взносы");
			ОбластьКорректирующиеСведенияСтрока	= Макет.ПолучитьОбласть("КорректирующиеСведенияСтрока");
			ОбластьКорректирующиеСведенияИтого	= Макет.ПолучитьОбласть("КорректирующиеСведенияИтого");
			ОбластьПустойРазделКорректировок	= Макет.ПолучитьОбласть("ПустойРазделКорректировок");
			ОбластьСведенияОЗаработкеНаВредныхИТяжелыхРаботахЗаголовок	= Макет.ПолучитьОбласть("СведенияОЗаработкеНаВредныхИТяжелыхРаботахЗаголовок");
			ОбластьСведенияОЗаработкеНаВредныхИТяжелыхРаботахСтрока	= Макет.ПолучитьОбласть("СведенияОЗаработкеНаВредныхИТяжелыхРаботахСтрока");
			ОбластьПустойРазделДоходовНаВредныхИТяжелыхРаботах	= Макет.ПолучитьОбласть("ПустойРазделДоходовНаВредныхИТяжелыхРаботах");
			ОбластьВтораяЧастьПустогоРазделаДоходовНаВредныхИТяжелыхРаботах	= Макет.ПолучитьОбласть("ВтораяЧастьПустогоРазделаДоходовНаВредныхИТяжелыхРаботах");
			ОбластьПустаяСтрока	= Макет.ПолучитьОбласть("ПустаяСтрока");
			ОбластьСтажНачало			= Макет.ПолучитьОбласть("СтажНачало");
			ОбластьСтаж					= Макет.ПолучитьОбласть("Стаж");
			
			ОбластиПустыхМест = Новый Массив;
			Для Сч = 0 По 12 Цикл
			   ОбластиПустыхМест.Добавить(Макет.ПолучитьОбласть("ПустоеМестоДляСтрокСтажа" + Сч))
			КонецЦикла;
			
			ВыводимыеОбласти = Новый Массив();
			ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
			ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
			
			ИнформацияОПачке = Новый Структура;
			ИнформацияОПачке.Вставить("КодОтчетногоПериода", ПроцедурыПерсонифицированногоУчета.КодПериодаДляРасчетаРСВ1(ВыборкаПоШапкеДокумента.ОтчетныйПериод));
			ИнформацияОПачке.Вставить("ЭтоИсходныйДокумент", ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ);
			ИнформацияОПачке.Вставить("ЭтоКорректирующийДокумент", ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ);
			ИнформацияОПачке.Вставить("ЭтоОтменяющийДокумент", ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ);
			Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
				ИнформацияОПачке.Вставить("КодКорректируемогоПериода", ПроцедурыПерсонифицированногоУчета.КодПериодаДляРасчетаРСВ1(ВыборкаПоШапкеДокумента.КорректируемыйПериод));
			КонецЕсли;
			ОтчетныйПериодПачки = ?(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ВыборкаПоШапкеДокумента.ОтчетныйПериод, ВыборкаПоШапкеДокумента.КорректируемыйПериод);
			
			РегистрационныйНомерПФР = СтрЗаменить(ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР," ","");
			РегистрационныйНомерПФР = СтрЗаменить(РегистрационныйНомерПФР,"-","");
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(РегистрационныйНомерПФР, ОбластьВерхнийКолонтитул, "НомРег", 12);
			
			ОбластьШапка.Параметры.Заполнить(ИнформацияОПачке);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(Год(ВыборкаПоШапкеДокумента.ОтчетныйПериод),"ЧГ=0"), ОбластьШапка, "ОтчетныйГод", 4);
			Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
				РегистрационныйНомерПФР = СтрЗаменить(ВыборкаПоШапкеДокумента.РегистрационныйНомерПФРвКорректируемыйПериод," ","");
				РегистрационныйНомерПФР = СтрЗаменить(РегистрационныйНомерПФР,"-","");
				ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(РегистрационныйНомерПФР, ОбластьШапка, "РегистрационныйНомерПФРвКорректируемыйПериод", 12);
				ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(Год(ВыборкаПоШапкеДокумента.КорректируемыйПериод),"ЧГ=0"), ОбластьШапка, "КорректируемыйГод", 4);
			КонецЕсли;
			
			ОбластьНижнийКолонтитул.Параметры.ДатаПодписиПолная = Формат(ДатаПодписи, "ДФ=dd.MM.yyyy; ДП=' '");
			
			ВыборкаПоРаботникам.Сбросить();
			Если ВыборкаПоРаботникам.НайтиСледующий(СтруктураПоискаПачки) Тогда
			
				ТекущийДокумент = ВыборкаПоШапкеДокумента.Ссылка;
				
				ДокументРезультат = Новый ТабличныйДокумент;
				
				ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаРазделов6РасчетаРСВ_1";
				ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
				
				СтрокаРезультатов = Результаты.Добавить();
				СтрокаРезультатов.Представление = ДокументРезультат;
				СтрокаРезультатов.Описание = "Раздел 6. Пачка №" + ВыборкаПоШапкеДокумента.НомерПачки;
				
				ВыводилиДанные = Ложь;
				Пока ВыборкаПоРаботникам.СледующийПоЗначениюПоля("НомерСтроки") цикл
					
					Если ВыборкаПоРаботникам.Ссылка <> ТекущийДокумент Тогда
						Прервать;
					КонецЕсли;
					
					ВременныйДокументРезультат.Очистить();
					
					ВременныйДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПачкаРазделов6РасчетаРСВ_1";
					ВременныйДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
					
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаПоРаботникам);
					
					Для СчПараметр = 0 По ОбластьСтаж.Параметры.Количество() - 1 Цикл
						ОбластьСтаж.Параметры[СчПараметр] = ""
					КонецЦикла;
					Для СчПараметр = 0 По ОбластьСведенияОЗаработкеСтрока.Параметры.Количество() - 1 Цикл
						ОбластьСведенияОЗаработкеСтрока.Параметры[СчПараметр] = ""
					КонецЦикла;
					Для СчПараметр = 0 По ОбластьСведенияОЗаработкеНаВредныхИТяжелыхРаботахСтрока.Параметры.Количество() - 1 Цикл
						ОбластьСведенияОЗаработкеНаВредныхИТяжелыхРаботахСтрока.Параметры[СчПараметр] = ""
					КонецЦикла;
					Для СчПараметр = 0 По ОбластьКорректирующиеСведенияСтрока.Параметры.Количество() - 1 Цикл
						ОбластьКорректирующиеСведенияСтрока.Параметры[СчПараметр] = ""
					КонецЦикла;
					Для СчПараметр = 0 По ОбластьКорректирующиеСведенияИтого.Параметры.Количество() - 1 Цикл
						ОбластьКорректирующиеСведенияИтого.Параметры[СчПараметр] = ""
					КонецЦикла;
					
					Если Не ВыводилиДанные Тогда
						ВыводилиДанные = Истина;
					Иначе 
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, ТекущийНомерСтраницы, ОбластьВерхнийКолонтитул);
					ВременныйДокументРезультат.Вывести(ОбластьВерхнийКолонтитул);
					ТекущийНомерСтраницы = ТекущийНомерСтраницы + 1;
					
					// Данные по физлицу
					ОбластьШапка.Параметры.Заполнить(ВыборкаПоРаботникам);
					ВременныйДокументРезультат.Вывести(ОбластьШапка);
					
					ВывестиДоходыНаПечать(ВременныйДокументРезультат, ОбластьСведенияОЗаработкеСтрока, ОтчетныйПериодПачки, ВыборкаПоДоходам, СтруктураПоиска, "КатегорияЗастрахованныхЛиц", ОбластьПустойРазделДоходов, ОбластьВтораяЧастьПустогоРазделаДоходов);
					
					ОбластьВзносов.Параметры.НачисленоСтраховаяРубли = Цел(ВыборкаПоРаботникам.НачисленоСтраховая);
					ДробнаяЧасть = ВыборкаПоРаботникам.НачисленоСтраховая - Цел(ВыборкаПоРаботникам.НачисленоСтраховая);
					ОбластьВзносов.Параметры.НачисленоСтраховаяКопейки = ДробнаяЧасть * 100; 
					ВременныйДокументРезультат.Вывести(ОбластьВзносов);
					
					Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Или ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ Тогда
						ВыборкаПоКорректирующимСведениям.Сбросить();
						Если ВыборкаПоКорректирующимСведениям.НайтиСледующий(СтруктураПоиска) Тогда
							ДоначисленоНаОПС = 0;
							ДоначисленоСтраховая = 0;
							ДоначисленоНакопительная = 0;
							Пока ВыборкаПоКорректирующимСведениям.Ссылка = СтруктураПоиска.Ссылка И ВыборкаПоКорректирующимСведениям.ФизЛицо = СтруктураПоиска.ФизЛицо Цикл
								ДоначисленоНаОПС = ДоначисленоНаОПС + ВыборкаПоКорректирующимСведениям.ДоначисленоНаОПС;
								ДоначисленоСтраховая = ДоначисленоСтраховая + ВыборкаПоКорректирующимСведениям.ДоначисленоСтраховая;
								ДоначисленоНакопительная = ДоначисленоНакопительная + ВыборкаПоКорректирующимСведениям.ДоначисленоНакопительная;
								ОбластьКорректирующиеСведенияСтрока.Параметры.Заполнить(ВыборкаПоКорректирующимСведениям);
								ОбластьКорректирующиеСведенияСтрока.Параметры.КодКорректируемогоПериода = ПроцедурыПерсонифицированногоУчета.КодПериодаДляРасчетаРСВ1(ВыборкаПоКорректирующимСведениям.КорректируемыйПериод);
								ВременныйДокументРезультат.Вывести(ОбластьКорректирующиеСведенияСтрока);
								Если Не ВыборкаПоКорректирующимСведениям.Следующий() Тогда
									Прервать;
								КонецЕсли;
							КонецЦикла;
							ОбластьКорректирующиеСведенияИтого.Параметры.ДоначисленоНаОПС = ДоначисленоНаОПС;
							ОбластьКорректирующиеСведенияИтого.Параметры.ДоначисленоСтраховая = ДоначисленоСтраховая;
							ОбластьКорректирующиеСведенияИтого.Параметры.ДоначисленоНакопительная = ДоначисленоНакопительная;
							ВременныйДокументРезультат.Вывести(ОбластьКорректирующиеСведенияИтого);
						Иначе
							ВременныйДокументРезультат.Вывести(ОбластьПустойРазделКорректировок);
						КонецЕсли;
					Иначе
						ВременныйДокументРезультат.Вывести(ОбластьПустойРазделКорректировок);
					КонецЕсли;
					                           
					Если РазбиватьНаСтраницы И ВременныйДокументРезультат.ВысотаТаблицы > 45 Тогда
						Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ВременныйДокументРезультат, ВыводимыеОбласти, Ложь) Цикл
							ВременныйДокументРезультат.Вывести(ОбластьПустаяСтрока);
						КонецЦикла;
					КонецЕсли;
					ВременныйДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
					ВременныйДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					
					ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, ТекущийНомерСтраницы, ОбластьВерхнийКолонтитул);
					ВременныйДокументРезультат.Вывести(ОбластьВерхнийКолонтитул);
					ТекущийНомерСтраницы = ТекущийНомерСтраницы + 1;
					
					ВременныйДокументРезультат.Вывести(ОбластьСведенияОЗаработкеНаВредныхИТяжелыхРаботахЗаголовок);
					
					ВысотаПервойСтраницы = ВременныйДокументРезультат.ВысотаТаблицы;
					
					ВывестиДоходыНаПечать(ВременныйДокументРезультат, ОбластьСведенияОЗаработкеНаВредныхИТяжелыхРаботахСтрока, ОтчетныйПериодПачки, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, СтруктураПоиска, "КлассУсловийТруда", ОбластьПустойРазделДоходовНаВредныхИТяжелыхРаботах, ОбластьВтораяЧастьПустогоРазделаДоходовНаВредныхИТяжелыхРаботах);
					
					СтрокСтажа = Окр((ВременныйДокументРезультат.ВысотаТаблицы - ВысотаПервойСтраницы - 8) / 4 * 7);
					
					ВременныйДокументРезультат.Вывести(ОбластьСтажНачало);
					ВсеЗаписиОСтаже.Сбросить();
					Если ВсеЗаписиОСтаже.НайтиСледующий(СтруктураПоиска) Тогда
						Пока ВсеЗаписиОСтаже.СледующийПоЗначениюПоля("НомерОсновнойЗаписи") цикл
							
							Если ВсеЗаписиОСтаже.Ссылка <> СтруктураПоиска.Ссылка Или ВсеЗаписиОСтаже.ФизЛицо <> СтруктураПоиска.ФизЛицо Тогда
								Прервать;
							КонецЕсли;
							
							Пока ВсеЗаписиОСтаже.Следующий() цикл
								
								Если ВсеЗаписиОСтаже.Ссылка <> СтруктураПоиска.Ссылка Или ВсеЗаписиОСтаже.ФизЛицо <> СтруктураПоиска.ФизЛицо Тогда
									Прервать;
								КонецЕсли;
								
								Для СчПараметр = 0 По ОбластьСтаж.Параметры.Количество() - 1 Цикл
									ОбластьСтаж.Параметры[СчПараметр] = ""
								КонецЦикла;
								
								ОбластьСтаж.Параметры.НомерСтроки = ВсеЗаписиОСтаже.НомерОсновнойЗаписи;
								ОбластьСтаж.Параметры.Заполнить(ВсеЗаписиОСтаже);
								
								Если ВсеЗаписиОСтаже.НомерДополнительнойЗаписи > 0 Тогда
									ОбластьСтаж.Параметры.НомерСтроки 			= "";
									ОбластьСтаж.Параметры.ДатаНачалаПериода 	= "";
									ОбластьСтаж.Параметры.ДатаОкончанияПериода 	= "";
								КонецЕсли;
								
								ЗаписьТУ = Новый Структура("ПервыйПараметрИсчисляемогоСтажа,ВторойПараметрИсчисляемогоСтажа");
								ЗаполнитьЗначенияСвойств(ЗаписьТУ, ВсеЗаписиОСтаже);
								ЗаписьТУ.Вставить("Коэффициент", ВсеЗаписиОСтаже.ТерриториальныеУсловияСтавка);
								ОбластьСтаж.Параметры.ДопИТС = ПроцедурыПерсонифицированногоУчета.ПредставлениеПараметровИсчисляемогоТрудовогоСтажа(ВсеЗаписиОСтаже);
								ОбластьСтаж.Параметры.ДопТУ = ПроцедурыПерсонифицированногоУчета.ПредставлениеПараметровТерриториальныхУсловий(ЗаписьТУ);
								ПроцедурыПерсонифицированногоУчета.ПредставлениеПараметровПенсииЗаВыслугуЛет(ВсеЗаписиОСтаже, ОбластьСтаж.Параметры.ДопВЛ, ОбластьСтаж.Параметры.ДопВЛСтавка);
								
								ВременныйДокументРезультат.Вывести(ОбластьСтаж);
								СтрокСтажа = СтрокСтажа + 2;
								
							КонецЦикла;
						КонецЦикла;
					Иначе
						ВременныйДокументРезультат.Вывести(ОбластьСтаж);
						СтрокСтажа = СтрокСтажа + 2;
					КонецЕсли; // Записи о стаже
					
					Если РазбиватьНаСтраницы Тогда
						Если СтрокСтажа > 26 Тогда
							Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ВременныйДокументРезультат, ВыводимыеОбласти, Ложь) Цикл
								ВременныйДокументРезультат.Вывести(ОбластьПустаяСтрока);
							КонецЦикла;
						Иначе
							СтрокСтажа = Макс(1, Окр(СтрокСтажа / 2));
							ВременныйДокументРезультат.Вывести(ОбластиПустыхМест[СтрокСтажа - 1])
						КонецЕсли;
					КонецЕсли;
					
					ВременныйДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
					
					ДокументРезультат.Вывести(ВременныйДокументРезультат);
					
				КонецЦикла; // по сотрудникам
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
	НомерПоследнейСтраницы = ТекущийНомерСтраницы - 1;
	
	Возврат 
	
КонецПроцедуры 

Процедура ФормированиеФайлов(ТаблицаПачек, Результаты, СообщенияОбОшибках, ДатаПодписи, ПроверятьДокументы = Истина, ОчищатьСообщения = Истина) Экспорт
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	Если ОчищатьСообщения Тогда
		ОбработкаКомментариев.УдалитьСообщения();
	КонецЕсли;
	
	Ссылки = ТаблицаПачек.ВыгрузитьКолонку("ДокументПачка");
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокументов(Ссылки).Выбрать();
	
	ВыборкаПоРаботникам = СформироватьЗапросПоРаботникам(Ссылки).Выбрать();
	ВыборкаПоДоходам = СформироватьЗапросПоДоходам(Ссылки).Выбрать();
	ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах = СформироватьЗапросПоДоходамЗанятыхНаВредныхИТяжелыхРаботах(Ссылки).Выбрать();
	ВыборкаПоКорректирующимСведениям = СформироватьЗапросПоКорректирующимСведениям(Ссылки).Выбрать();
	
	Результаты = Новый ТаблицаЗначений;
	Результаты.Колонки.Добавить("ТекстФайла", Новый ОписаниеТипов("Строка"));
	Результаты.Колонки.Добавить("ИмяФайла", Новый ОписаниеТипов("Строка"));
	Результаты.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.ПачкаРазделов6РасчетаРСВ_1"));
	
	Отказ = Ложь;
	
	Если ПроверятьДокументы Тогда
		ПроверитьПравильностьЗаполненияДокументов(Ссылки, Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоРаботникам, ВыборкаПоДоходам, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, ВыборкаПоКорректирующимСведениям);
	КонецЕсли;
	
	Если Отказ тогда
		Возврат 
	КонецЕсли;	 
	
	// Загружаем формат файла сведений
	МакетФормата = ПолучитьОбщийМакет("ФорматПФР70_2010");
	ТипДокументовПачки = "СВЕДЕНИЯ_О_СУММЕ_ВЫПЛАТ_И_СТРАХОВОМ_СТАЖЕ_ЗЛ";
	
	ФорматВходящейОписи = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, "Опись_Разделов_6");
	ФорматВходящейОписи.НомерВПачке.Значение = 1;
	ФорматРаздела6 = ПроцедурыПерсонифицированногоУчета.ЗагрузитьФорматНабораЗаписейдляПФР(МакетФормата, "Раздел_6");
	ФорматЗаписейСуммаВыплат = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматРаздела6.СведенияОсуммеВыплатИвознагражденийВпользуЗЛ.Значение);
	ФорматРаздела6.Удалить("СведенияОсуммеВыплатИвознагражденийВпользуЗЛ");
	ФорматСуммаВзносовНаОПС = Новый Структура("СуммаВзносовНаОПС",ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматРаздела6.СуммаВзносовНаОПС));
	ФорматРаздела6.Удалить("СуммаВзносовНаОПС");
	ФорматЗаписейОкорректировках = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматРаздела6.СведенияОкорректировках.Значение);
	ФорматРаздела6.Удалить("СведенияОкорректировках");
	ФорматЗаписейВыплатПоДопТарифу = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматРаздела6.СведенияОсуммеВыплатИвознагражденийПоДопТарифу.Значение);
	ФорматРаздела6.Удалить("СведенияОсуммеВыплатИвознагражденийПоДопТарифу");
	ФорматСтажевыйПериод = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматРаздела6.СтажевыйПериод.Значение);
	ФорматРаздела6.Удалить("СтажевыйПериод");
	ФорматДатаЗаполнения = Новый Структура("ДатаЗаполнения",ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматРаздела6.ДатаЗаполнения));
	ФорматРаздела6.Удалить("ДатаЗаполнения");
	
	ФорматДатаЗаполнения.ДатаЗаполнения.Значение = ДатаПодписи;
	ФорматЗаписейСуммаВыплатДляОтмФорм = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматЗаписейСуммаВыплат);
	ФорматЗаписейСуммаВыплатДляОтмФорм.Удалить("СуммаВыплатИныхВознаграждений");
	ФорматЗаписейСуммаВыплатДляОтмФорм.Удалить("НеПревышающиеВсего");
	ФорматЗаписейСуммаВыплатДляОтмФорм.Удалить("НеПревышающиеПоДоговорам");
	ФорматЗаписейСуммаВыплатДляОтмФорм.Удалить("ПревышающиеПредельную");
	
	ВсеЗаписиОСтаже	= СформироватьЗапросПоЗаписямОСтаже(Ссылки).Выбрать();

	СтруктураПоискаПачки = Новый Структура("Ссылка");
	СтруктураПоиска = Новый Структура("ФизЛицо, Ссылка");
	ИменаПолейДоходов = Новый Массив();
	ИменаПолейДоходов.Добавить("ТипСтроки");
	ИменаПолейДоходов.Добавить("Месяц");
	ИменаПолейДоходов.Добавить("КодКатегории");
	ИменаПолейДоходов.Добавить("СуммаВыплатИныхВознаграждений");
	ИменаПолейДоходов.Добавить("НеПревышающиеВсего");
	ИменаПолейДоходов.Добавить("НеПревышающиеПоДоговорам");
	ИменаПолейДоходов.Добавить("ПревышающиеПредельную");
	ИменаПолейДоходовОтмФормы = Новый Массив();
	ИменаПолейДоходовОтмФормы.Добавить("ТипСтроки");
	ИменаПолейДоходовОтмФормы.Добавить("Месяц");
	ИменаПолейДоходовОтмФормы.Добавить("КодКатегории");
	ИменаПолейДоходовПоДопТарифу = Новый Массив();
	ИменаПолейДоходовПоДопТарифу.Добавить("ТипСтроки");
	ИменаПолейДоходовПоДопТарифу.Добавить("Месяц");
	ИменаПолейДоходовПоДопТарифу.Добавить("КодСпециальнойОценкиУсловийТруда");
	ИменаПолейДоходовПоДопТарифу.Добавить("СуммаВыплатПоДопТарифу27_1");
	ИменаПолейДоходовПоДопТарифу.Добавить("СуммаВыплатПоДопТарифу27_2_18");
	
	Для каждого СтрокаТЗ Из ТаблицаПачек Цикл
	
		СтруктураПоискаПачки.Ссылка = СтрокаТЗ.ДокументПачка;
		
		ВыборкаПоШапкеДокумента.Сбросить();
		Если ВыборкаПоШапкеДокумента.НайтиСледующий(СтруктураПоискаПачки) Тогда
			
			ВыборкаПоРаботникам.Сбросить();
			Если ВыборкаПоРаботникам.НайтиСледующий(СтруктураПоискаПачки) Тогда
				
				ТекущийДокумент = ВыборкаПоШапкеДокумента.Ссылка;
				
				// Создаем начальное дерево
				ДеревоВыгрузки = ПроцедурыПерсонифицированногоУчета.СоздатьДеревоXML();
				Атрибуты = Новый Соответствие;
				Атрибуты.Вставить("xmlns", "http://schema.pfr.ru");
				УзелПФР = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "ФайлПФР", "", Атрибуты);
				ИмяФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ("", ВыборкаПоШапкеДокумента.Год, ВыборкаПоШапкеДокумента);
				ПроцедурыПерсонифицированногоУчета.ЗаполнитьИмяИЗаголовокФайла(УзелПФР, МакетФормата, ИмяФайла);
				УзелПачкаВходящихДокументов = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелПФР, "ПачкаВходящихДокументов", "", );
				
				НаборЗаписейВходящаяОпись = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматВходящейОписи);
				НаборЗаписейВходящаяОпись.НомерПачки.Значение.Основной = СокрЛП(ВыборкаПоШапкеДокумента.НомерПачки); 
				НаборЗаписейВходящаяОпись.ДатаСоставления.Значение = ДатаПодписи;
				ПроцедурыПерсонифицированногоУчета.ЗаполнитьСоставительПачки(НаборЗаписейВходящаяОпись.СоставительПачки.Значение, ВыборкаПоШапкеДокумента); // ОрганизацияЮрФизЛицо, ОрганизацияИНН, ОрганизацияКПП, ОрганизацияОГРН, ОрганизацияНаименованиеОКОПФ, ОрганизацияНаименованиеПолное, ОрганизацияНаименованиеСокращенное
				НаборЗаписейВходящаяОпись.СоставительПачки.Значение.Удалить("Форма");
				Если ВыборкаПоШапкеДокумента.ОрганизацияЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
					НаборЗаписейВходящаяОпись.СоставительПачки.Значение.Удалить("КодЕГРИП");
				Иначе
					НаборЗаписейВходящаяОпись.СоставительПачки.Значение.Удалить("КодЕГРЮЛ");
				КонецЕсли;
				ПроцедурыПерсонифицированногоУчета.ЗаполнитьСоставДокументов(НаборЗаписейВходящаяОпись, ТипДокументовПачки, ВыборкаПоШапкеДокумента.Количество);
				НаборЗаписейВходящаяОпись.ТипСведений.Значение = Строка(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ);
				НаборЗаписейОтчетныйПериод = НаборЗаписейВходящаяОпись.ОтчетныйПериод.Значение;
				ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,ПроцедурыПерсонифицированногоУчета.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.ОтчетныйПериод));
				Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
					НаборЗаписейВходящаяОпись.Удалить("КорректируемыйОтчетныйПериод");
				Иначе
					НаборЗаписейОтчетныйПериод = НаборЗаписейВходящаяОпись.КорректируемыйОтчетныйПериод.Значение;
					ЗаполнитьЗначенияСвойств(НаборЗаписейОтчетныйПериод,ПроцедурыПерсонифицированногоУчета.ОписаниеОтчетногоПериодаДляФайла(ВыборкаПоШапкеДокумента.КорректируемыйПериод));
				КонецЕсли;
				НаборЗаписейВходящаяОпись.БазаДляНачисленияСтраховыхВзносовНеПревышающаяПредельную.Значение = ВыборкаПоШапкеДокумента.БазаНеПревышающаяПредельную;
				НаборЗаписейВходящаяОпись.СтраховыхВзносовОПС.Значение = ВыборкаПоШапкеДокумента.НачисленоСтраховая;
				
				ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, "СВЕДЕНИЯ_ПО_ПАЧКЕ_ДОКУМЕНТОВ_РАЗДЕЛА_6",""), НаборЗаписейВходящаяОпись);
				
				НаборЗаписейПачки = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматРаздела6);
				Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
					НаборЗаписейПачки.Удалить("СуммаВзносовНаОПС");
					НаборЗаписейПачки.Удалить("СведенияОкорректировках");
					НаборЗаписейПачки.Удалить("СведенияОсуммеВыплатИвознагражденийПоДопТарифу");
					НаборЗаписейПачки.Удалить("СтажевыйПериод");
				ИначеЕсли ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
					НаборЗаписейПачки.Удалить("КорректируемыйОтчетныйПериод");
					НаборЗаписейПачки.Удалить("РегистрационныйНомерКорректируемогоПериода");
				КонецЕсли;
				
				ОтчетныйПериодПачки = ?(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, ВыборкаПоШапкеДокумента.ОтчетныйПериод, ВыборкаПоШапкеДокумента.КорректируемыйПериод);
				
				НомерДокументаВПачке = 1;
				
				Пока ВыборкаПоРаботникам.СледующийПоЗначениюПоля("НомерСтроки") цикл
					
					Если ВыборкаПоРаботникам.Ссылка <> ТекущийДокумент Тогда
						Прервать;
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаПоРаботникам);
					
					НаборЗаписейРаздела6 = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(НаборЗаписейПачки);
					
					Если ВыборкаПоШапкеДокумента.ОтчетныйПериод < ПроцедурыПерсонифицированногоУчета.ДатаВводаФормыРСВ_1за2015год() Или Не ВыборкаПоРаботникам.СотрудникУволен Тогда
						НаборЗаписейРаздела6.Удалить("СведенияОбУвольнении")
					КонецЕсли;
					
					// Общие данные пачки - берем их из описи
					НаборЗаписейРаздела6.ТипСведений.Значение = НаборЗаписейВходящаяОпись.ТипСведений.Значение;
					НаборЗаписейРаздела6.РегистрационныйНомер.Значение = НаборЗаписейВходящаяОпись.СоставительПачки.Значение.РегистрационныйНомер.Значение;
					ЗаполнитьЗначенияСвойств(НаборЗаписейРаздела6.ОтчетныйПериод.Значение,НаборЗаписейВходящаяОпись.ОтчетныйПериод.Значение);
					Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ <> Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
						ЗаполнитьЗначенияСвойств(НаборЗаписейРаздела6.КорректируемыйОтчетныйПериод.Значение,НаборЗаписейВходящаяОпись.КорректируемыйОтчетныйПериод.Значение);
						Если ЗначениеЗаполнено(СтрЗаменить(ВыборкаПоШапкеДокумента.РегистрационныйНомерПФРвКорректируемыйПериод,"-","")) Тогда
							НаборЗаписейРаздела6.РегистрационныйНомерКорректируемогоПериода.Значение = ВыборкаПоШапкеДокумента.РегистрационныйНомерПФРвКорректируемыйПериод;
						Иначе
							НаборЗаписейРаздела6.Удалить("РегистрационныйНомерКорректируемогоПериода");
						КонецЕсли;
					КонецЕсли;
					
					// Данные по физлицу
					НомерДокументаВПачке = НомерДокументаВПачке + 1;
					
					Фамилия = СокрЛП(ВыборкаПоРаботникам.Фамилия);
					Имя = СокрЛП(ВыборкаПоРаботникам.Имя);
					Отчество = СокрЛП(ВыборкаПоРаботникам.Отчество);
					
					НаборЗаписейРаздела6.НомерВПачке.Значение = НомерДокументаВПачке;
					НаборЗаписейРаздела6.СтраховойНомер.Значение = ВыборкаПоРаботникам.СтраховойНомерПФР;
					НаборЗаписейФИО = НаборЗаписейРаздела6.ФИО.Значение;
					НаборЗаписейФИО.Фамилия = ВРег(Фамилия);
					НаборЗаписейФИО.Имя = ВРег(Имя);
					НаборЗаписейФИО.Отчество = ВРег(Отчество);
					
					УзелСотрудника = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелПачкаВходящихДокументов, ТипДокументовПачки,"");
					ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСотрудника, НаборЗаписейРаздела6);
					
					//СведенияОЗаработке
					ФорматЗаписейСуммаВыплатТекущейПачки = ?(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ, ФорматЗаписейСуммаВыплатДляОтмФорм, ФорматЗаписейСуммаВыплат);
					ВывестиДоходыВФайл(УзелСотрудника, ФорматЗаписейСуммаВыплатТекущейПачки,  "СведенияОсуммеВыплатИвознагражденийВпользуЗЛ", ОтчетныйПериодПачки, ВыборкаПоДоходам, СтруктураПоиска, "КатегорияЗастрахованныхЛиц", "4", ?(ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ, ИменаПолейДоходовОтмФормы, ИменаПолейДоходов));
					
					Если ВыборкаПоШапкеДокумента.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда // заполнение отменяющей формы завершено
						
						// Выводим ДатаЗаполнения
						ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСотрудника, ФорматДатаЗаполнения);
						Продолжить;
						
					КонецЕсли;
					
					// Выводим взносы
					Если ЗначениеЗаполнено(ВыборкаПоРаботникам.НачисленоСтраховая) Тогда
						ФорматСуммаВзносовНаОПС.СуммаВзносовНаОПС.Значение = ВыборкаПоРаботникам.НачисленоСтраховая;
						ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСотрудника, ФорматСуммаВзносовНаОПС);
					КонецЕсли;
					
					//Корр.сведения
					ВыборкаПоКорректирующимСведениям.Сбросить();
					Если ВыборкаПоКорректирующимСведениям.НайтиСледующий(СтруктураПоиска) Тогда
						
						ДоначисленоНаОПС = 0;
						ДоначисленоСтраховая = 0;
						ДоначисленоНакопительная = 0;
						НомерСтроки = 1;
						
						Пока ВыборкаПоКорректирующимСведениям.Ссылка = СтруктураПоиска.Ссылка И ВыборкаПоКорректирующимСведениям.ФизЛицо = СтруктураПоиска.ФизЛицо Цикл
							
							ДанныеДляФайла = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматЗаписейОкорректировках);
							Если ВыборкаПоКорректирующимСведениям.КорректируемыйПериод < РасчетСтраховыхВзносов.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() Тогда
								ДанныеДляФайла.Удалить("СуммаДоначисленныхВзносовОПС");
								ДанныеДляФайла.СуммаДоначисленныхВзносовНаСтраховую.Значение = ВыборкаПоКорректирующимСведениям.ДоначисленоСтраховая;
								ДанныеДляФайла.СуммаДоначисленныхВзносовНаНакопительную.Значение = ВыборкаПоКорректирующимСведениям.ДоначисленоНакопительная;
							Иначе
								ДанныеДляФайла.Удалить("СуммаДоначисленныхВзносовНаСтраховую");
								ДанныеДляФайла.Удалить("СуммаДоначисленныхВзносовНаНакопительную");
								ДанныеДляФайла.СуммаДоначисленныхВзносовОПС.Значение = ВыборкаПоКорректирующимСведениям.ДоначисленоНаОПС;
							КонецЕсли;
							
							ДанныеДляФайла.Год.Значение = ВыборкаПоКорректирующимСведениям.КорректируемыйГод;
							ДанныеДляФайла.Квартал.Значение = ПроцедурыПерсонифицированногоУчета.КодПериодаДляРасчетаРСВ1(ВыборкаПоКорректирующимСведениям.КорректируемыйПериод);
							ДанныеДляФайла.ТипСтроки.Значение = "МЕСЦ";
							ДанныеДляФайла.НомерСтроки.Значение = НомерСтроки;
							
							ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелСотрудника, "СведенияОкорректировках",""), ДанныеДляФайла);
							НомерСтроки = НомерСтроки + 1;
							
							ДоначисленоНаОПС = ДоначисленоНаОПС + ВыборкаПоКорректирующимСведениям.ДоначисленоНаОПС;
							ДоначисленоСтраховая = ДоначисленоСтраховая + ВыборкаПоКорректирующимСведениям.ДоначисленоСтраховая;
							ДоначисленоНакопительная = ДоначисленоНакопительная + ВыборкаПоКорректирующимСведениям.ДоначисленоНакопительная;
							
							Если Не ВыборкаПоКорректирующимСведениям.Следующий() Тогда
								Прервать;
							КонецЕсли;
							
						КонецЦикла;
						
						ДанныеДляФайла = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматЗаписейОкорректировках);
						ДанныеДляФайла.Удалить("Квартал");
						ДанныеДляФайла.Удалить("Год");
						ДанныеДляФайла.ТипСтроки.Значение = "ИТОГ";
						ДанныеДляФайла.НомерСтроки.Значение = НомерСтроки;
						ДанныеДляФайла.СуммаДоначисленныхВзносовОПС.Значение = ДоначисленоНаОПС;
						ДанныеДляФайла.СуммаДоначисленныхВзносовНаСтраховую.Значение = ДоначисленоСтраховая;
						ДанныеДляФайла.СуммаДоначисленныхВзносовНаНакопительную.Значение = ДоначисленоНакопительная;
						ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелСотрудника, "СведенияОкорректировках",""), ДанныеДляФайла);
						
					КонецЕсли;
					
					//СведенияОЗаработкеНаВредныхИТяжелыхРаботах
					ВывестиДоходыВФайл(УзелСотрудника, ФорматЗаписейВыплатПоДопТарифу, "СведенияОсуммеВыплатИвознагражденийПоДопТарифу", ОтчетныйПериодПачки, ВыборкаПоДоходамЗанятыхНаВредныхИТяжелыхРаботах, СтруктураПоиска, "КлассУсловийТруда", "7", ИменаПолейДоходовПоДопТарифу);
					
					// Выводим стаж
					ВсеЗаписиОСтаже.Сбросить();
					Если ВсеЗаписиОСтаже.НайтиСледующий(СтруктураПоиска) Тогда
						ПроцедурыПерсонифицированногоУчета.ВывестиСведенияОСтаже2014(ВсеЗаписиОСтаже, УзелСотрудника, ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ФорматСтажевыйПериод));
					КонецЕсли; // Записи о стаже
					
					// Выводим ДатаЗаполнения
					ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(УзелСотрудника, ФорматДатаЗаполнения);
					
				КонецЦикла; // по сотрудникам
			
				ТекстФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьТекстФайлаИзДереваЗначений(ДеревоВыгрузки);
				СтрокаРезультатов = Результаты.Добавить();
				СтрокаРезультатов.ТекстФайла = СтрЗаменить(СтрЗаменить(ТекстФайла, "СуммаВыплатПоДопТарифу27_1", "СуммаВыплатПоДопТарифу27-1"), "СуммаВыплатПоДопТарифу27_2_18", "СуммаВыплатПоДопТарифу27-2-18");
				СтрокаРезультатов.ИмяФайла = ИмяФайла;
				СтрокаРезультатов.Ссылка = ТекущийДокумент;
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////

Функция СформироватьЗапросПоШапкеДокументов(Ссылки) Экспорт 

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылки);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	КОЛИЧЕСТВО(ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.НомерСтроки) КАК Количество,
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка В(&ДокументСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка,
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В(&ДокументСсылка)
	|	И ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1.Ссылка,
	|	ПачкаРазделов6РасчетаРСВ_1.Номер,
	|	ПачкаРазделов6РасчетаРСВ_1.Дата,
	|	ПачкаРазделов6РасчетаРСВ_1.Проведен,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация,
	|	ПачкаРазделов6РасчетаРСВ_1.ОтчетныйПериод,
	|	ПачкаРазделов6РасчетаРСВ_1.ТипСведенийСЗВ,
	|	ВЫБОР
	|		КОГДА ПачкаРазделов6РасчетаРСВ_1.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ПачкаРазделов6РасчетаРСВ_1.КорректируемыйПериод
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА ПачкаРазделов6РасчетаРСВ_1.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|			ТОГДА ПачкаРазделов6РасчетаРСВ_1.ОтчетныйПериод
	|		ИНАЧЕ ПачкаРазделов6РасчетаРСВ_1.КорректируемыйПериод
	|	КОНЕЦ КАК ПериодДействия,
	|	ПачкаРазделов6РасчетаРСВ_1.НомерПачки,
	|	ПачкаРазделов6РасчетаРСВ_1.ПринятоВПФР,
	|	ПачкаРазделов6РасчетаРСВ_1.Ответственный,
	|	ЗНАЧЕНИЕ(Перечисление.ФорматФайлаПФР.Версия07) КАК ФорматФайла,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.Наименование,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.ЮрФизЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.ОГРН,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.НаименованиеОКОПФ,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.НаименованиеПолное,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.НаименованиеСокращенное,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.РегистрационныйНомерПФР,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.РайонныйКоэффициентРФ,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.ИНН,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.КПП,
	|	ВЫБОР
	|		КОГДА ПачкаРазделов6РасчетаРСВ_1.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПачкаРазделов6РасчетаРСВ_1.Организация
	|		ИНАЧЕ ПачкаРазделов6РасчетаРСВ_1.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ГОД(ПачкаРазделов6РасчетаРСВ_1.ОтчетныйПериод) КАК Год,
	|	ПачкаРазделов6РасчетаРСВ_1.Организация.КодПоОКПО КАК ОКПО,
	|	ЕСТЬNULL(ИтогиПоВзносам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ИтогиПоВзносам.Количество, 0) КАК Количество,
	|	ПачкаРазделов6РасчетаРСВ_1.РегистрационныйНомерПФРвКорректируемыйПериод,
	|	ЕСТЬNULL(Доходы.ОблагаетсяВзносамиДоПредельнойВеличины, 0) КАК БазаНеПревышающаяПредельную
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК ИтогиПоВзносам
	|		ПО ПачкаРазделов6РасчетаРСВ_1.Ссылка = ИтогиПоВзносам.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходы КАК Доходы
	|		ПО ПачкаРазделов6РасчетаРСВ_1.Ссылка = Доходы.Ссылка
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1.Ссылка В(&ДокументСсылка)";
	
	Возврат Запрос.Выполнить();

КонецФункции 

Функция СформироватьЗапросПоРаботникам(Ссылки) Экспорт

	НеоплачиваемыеЗначенияТретьегоПараметра = Новый Массив;
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.АДМИНИСТР);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ДЕТИ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.УЧОТПУСК);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ДЛДЕТИ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ДЕТИПРЛ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ДЛОТПУСК);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ВРНЕТРУД);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ДЕКРЕТ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ЧАЭС);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.НЕОПЛ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.НЕОПЛДОГ);
    НеоплачиваемыеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.НЕОПЛАВТ);
	
	ИсключительныеОснованияВыслугиЛет = Новый Массив;
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ВП);
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ГР);
	ИсключительныеОснованияВыслугиЛет.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_14);
	ИсключительныеЗначенияТретьегоПараметра = Новый Массив;
	ИсключительныеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ВРНЕТРУД);
	ИсключительныеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ДЕКРЕТ);
	ИсключительныеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ДЛОТПУСК);
	ИсключительныеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.ВАХТА);
	ИсключительныеЗначенияТретьегоПараметра.Добавить(Справочники.ПараметрыИсчисляемогоСтраховогоСтажа2014.МЕДНЕТРУД);
	
	ПрочиеПроверяемыеКоды = Новый Массив;
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_2);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_3);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_4);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_5);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_6);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_7);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_8);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_9);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст27_10);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст28_ОС);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОсобыеУсловияТруда.Ст28_ПЖ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ВП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_11ГР);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_12);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст28_СП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.САМОЛЕТ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.СПЕЦАВ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.СПАСАВ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.УЧЛЕТ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.ВЫСШПИЛ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.НОРМАПР);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.НОРМСП);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.РЕАКТИВН);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.ЛЕТРАБ);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_14);
	ПрочиеПроверяемыеКоды.Добавить(Справочники.ОснованияВыслугиЛет.Ст27_15);
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	 Ссылки);
 	Запрос.УстановитьПараметр("Ст27_1", Справочники.ОсобыеУсловияТруда.Ст27_1);
	Запрос.УстановитьПараметр("Ст27_2", Справочники.ОсобыеУсловияТруда.Ст27_2);
	Запрос.УстановитьПараметр("КодПозицииСпискаСт27_2", Справочники.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения.НайтиПоКоду("23307000-17541"));
	Запрос.УстановитьПараметр("НеоплачиваемыеЗначенияТретьегоПараметра", НеоплачиваемыеЗначенияТретьегоПараметра);
	Запрос.УстановитьПараметр("ИсключительныеЗначенияТретьегоПараметра", ИсключительныеЗначенияТретьегоПараметра);
	Запрос.УстановитьПараметр("ИсключительныеОснованияВыслугиЛет", ИсключительныеОснованияВыслугиЛет);
	Запрос.УстановитьПараметр("ПрочиеПроверяемыеКоды", ПрочиеПроверяемыеКоды);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗастрахованныеЛица.Ссылка КАК Ссылка,
	|	ЗастрахованныеЛица.ФизЛицо КАК ФизЛицо,
	|	ЗастрахованныеЛица.НомерСтроки КАК НомерСтроки,
	|	ЗастрахованныеЛица.СтраховойНомерПФР,
	|	ЗастрахованныеЛица.Фамилия,
	|	ЗастрахованныеЛица.Имя,
	|	ЗастрахованныеЛица.Отчество,
	|	ЗастрахованныеЛица.СотрудникУволен,
	|	ВЫБОР
	|		КОГДА ЗастрахованныеЛица.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ЗастрахованныеЛица.Ссылка.Организация
	|		ИНАЧЕ ЗастрахованныеЛица.Ссылка.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ЗастрахованныеЛица.НачисленоСтраховая,
	|	ЗастрахованныеЛица.ДоначисленоСтраховая,
	|	МЕСЯЦ(НАЧАЛОПЕРИОДА(ВЫБОР
	|				КОГДА ЗастрахованныеЛица.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|					ТОГДА ЗастрахованныеЛица.Ссылка.ОтчетныйПериод
	|				ИНАЧЕ ЗастрахованныеЛица.Ссылка.КорректируемыйПериод
	|			КОНЕЦ, КВАРТАЛ)) КАК Месяц1,
	|	МЕСЯЦ(НАЧАЛОПЕРИОДА(ВЫБОР
	|				КОГДА ЗастрахованныеЛица.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|					ТОГДА ЗастрахованныеЛица.Ссылка.ОтчетныйПериод
	|				ИНАЧЕ ЗастрахованныеЛица.Ссылка.КорректируемыйПериод
	|			КОНЕЦ, КВАРТАЛ)) + 1 КАК Месяц2,
	|	МЕСЯЦ(НАЧАЛОПЕРИОДА(ВЫБОР
	|				КОГДА ЗастрахованныеЛица.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|					ТОГДА ЗастрахованныеЛица.Ссылка.ОтчетныйПериод
	|				ИНАЧЕ ЗастрахованныеЛица.Ссылка.КорректируемыйПериод
	|			КОНЕЦ, КВАРТАЛ)) + 2 КАК Месяц3
	|ПОМЕСТИТЬ ВТЗастрахованныеЛица
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК ЗастрахованныеЛица
	|ГДЕ
	|	ЗастрахованныеЛица.Ссылка В(&ДокументСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрг.НомерСтроки КАК НомерСтроки,
	|	ТЧРаботникиОрг.Ссылка
	|ПОМЕСТИТЬ ВТЗарегистрированныеСотрудниками
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ТЧРаботникиОрг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ПО ТЧРаботникиОрг.ФизЛицо = СотрудникиОрганизаций.Физлицо
	|			И ТЧРаботникиОрг.ГоловнаяОрганизация = СотрудникиОрганизаций.Организация
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка ЕСТЬ НЕ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Ссылка КАК Ссылка,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.НомерСтроки,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ФизЛицо КАК ФизЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ДатаНачалаПериода,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ДатаОкончанияПериода,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ОсобыеУсловияТруда,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.КодПозицииСписка,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ОснованиеИсчисляемогоСтажа,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ОснованиеВыслугиЛет,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ПервыйПараметрВыслугиЛет,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ВторойПараметрВыслугиЛет,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТретийПараметрВыслугиЛет,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ТерриториальныеУсловия,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.ПараметрТерриториальныхУсловий,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.НомерОсновнойЗаписи,
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.НомерДополнительнойЗаписи
	|ПОМЕСТИТЬ ВТЗаписиОСтаже
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.ЗаписиОСтаже КАК ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1ЗаписиОСтаже.Ссылка В(&ДокументСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеЛица.ФизЛицо КАК ФизЛицо,
	|	ЗастрахованныеЛица.Ссылка,
	|	КОЛИЧЕСТВО(ЗаписиОСтажеДляСЗВ4.НомерОсновнойЗаписи) КАК КоличествоЗаписей,
	|	СУММА(ВЫБОР
	|			КОГДА ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа ЕСТЬ NULL 
	|				ТОГДА 0
	|			КОГДА ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&НеоплачиваемыеЗначенияТретьегоПараметра)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоОплачиваемыхСтрок,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = ЗастрахованныеЛица.Месяц1
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = ЗастрахованныеЛица.Месяц1
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = ЗастрахованныеЛица.Месяц1
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) = ЗастрахованныеЛица.Месяц1
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВПервомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= ЗастрахованныеЛица.Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= ЗастрахованныеЛица.Месяц2
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= ЗастрахованныеЛица.Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= ЗастрахованныеЛица.Месяц2
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= ЗастрахованныеЛица.Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= ЗастрахованныеЛица.Месяц2
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаНачалаПериода) <= ЗастрахованныеЛица.Месяц2
	|					И МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) >= ЗастрахованныеЛица.Месяц2
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВоВторомМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = ЗастрахованныеЛица.Месяц3
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Ст27_1ВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = ЗастрахованныеЛица.Месяц3
	|					И ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ИсключительныеОснованияВыслугиЛет)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьСт27_1ВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = ЗастрахованныеЛица.Месяц3
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И НЕ(ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И НЕ ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ОстальныеКодыВТретьемМесяце,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА МЕСЯЦ(ОсновныеЗаписиОстаже.ДатаОкончанияПериода) = ЗастрахованныеЛица.Месяц3
	|					И ОсновныеЗаписиОстаже.ОсобыеУсловияТруда <> &Ст27_1
	|					И (ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда В (&ПрочиеПроверяемыеКоды)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет В (&ПрочиеПроверяемыеКоды))
	|					И (ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа В (&ИсключительныеЗначенияТретьегоПараметра)
	|						ИЛИ ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда = &Ст27_2
	|							И ЗаписиОСтажеДляСЗВ4.КодПозицииСписка = &КодПозицииСпискаСт27_2)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеПроверятьОстальныеКодыВТретьемМесяце
	|ПОМЕСТИТЬ ВТДанныеОСтаже
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ЗастрахованныеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаписиОСтаже КАК ЗаписиОСтажеДляСЗВ4
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаписиОСтаже КАК ОсновныеЗаписиОстаже
	|			ПО ЗаписиОСтажеДляСЗВ4.ФизЛицо = ОсновныеЗаписиОстаже.ФизЛицо
	|				И ЗаписиОСтажеДляСЗВ4.Ссылка = ОсновныеЗаписиОстаже.Ссылка
	|				И ЗаписиОСтажеДляСЗВ4.НомерОсновнойЗаписи = ОсновныеЗаписиОстаже.НомерОсновнойЗаписи
	|				И (ОсновныеЗаписиОстаже.НомерДополнительнойЗаписи = 0)
	|		ПО ЗастрахованныеЛица.ФизЛицо = ЗаписиОСтажеДляСЗВ4.ФизЛицо
	|			И ЗастрахованныеЛица.Ссылка = ЗаписиОСтажеДляСЗВ4.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗастрахованныеЛица.ФизЛицо,
	|	ЗастрахованныеЛица.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВтораяТаблица.НомерСтроки) КАК НомерПовторяющейсяСтроки,
	|	ПерваяТаблица.Ссылка КАК Ссылка,
	|	ПерваяТаблица.ФизЛицо,
	|	ПерваяТаблица.НомерСтроки КАК НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.СотрудникУволен,
	|	ПерваяТаблица.НачисленоСтраховая,
	|	ПерваяТаблица.ДоначисленоСтраховая,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФизЛицоРаботаетВОрганизации,
	|	ЕСТЬNULL(ДанныеОСтаже.Ст27_1ВПервомМесяце, ЛОЖЬ) КАК Ст27_1ВПервомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.Ст27_1ВоВторомМесяце, ЛОЖЬ) КАК Ст27_1ВоВторомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.Ст27_1ВТретьемМесяце, ЛОЖЬ) КАК Ст27_1ВТретьемМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьСт27_1ВПервомМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВПервомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьСт27_1ВоВторомМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВоВторомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьСт27_1ВТретьемМесяце, ЛОЖЬ) КАК НеПроверятьСт27_1ВТретьемМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.ОстальныеКодыВПервомМесяце, ЛОЖЬ) КАК ОстальныеКодыВПервомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьОстальныеКодыВПервомМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВПервомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.ОстальныеКодыВоВторомМесяце, ЛОЖЬ) КАК ОстальныеКодыВоВторомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьОстальныеКодыВоВторомМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВоВторомМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.ОстальныеКодыВТретьемМесяце, ЛОЖЬ) КАК ОстальныеКодыВТретьемМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.НеПроверятьОстальныеКодыВТретьемМесяце, ЛОЖЬ) КАК НеПроверятьОстальныеКодыВТретьемМесяце,
	|	ЕСТЬNULL(ДанныеОСтаже.КоличествоОплачиваемыхСтрок, 0) КАК КоличествоОплачиваемыхСтрок,
	|	ЕСТЬNULL(ДанныеОСтаже.КоличествоЗаписей, 0) КАК КоличествоЗаписейОСтаже
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ПерваяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗарегистрированныеСотрудниками КАК ЗарегистрированныеСотрудниками
	|		ПО ПерваяТаблица.НомерСтроки = ЗарегистрированныеСотрудниками.НомерСтроки
	|			И ПерваяТаблица.Ссылка = ЗарегистрированныеСотрудниками.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗастрахованныеЛица КАК ВтораяТаблица
	|		ПО ПерваяТаблица.ФизЛицо = ВтораяТаблица.ФизЛицо
	|			И ПерваяТаблица.НомерСтроки < ВтораяТаблица.НомерСтроки
	|			И ПерваяТаблица.Ссылка = ВтораяТаблица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОСтаже КАК ДанныеОСтаже
	|		ПО ПерваяТаблица.ФизЛицо = ДанныеОСтаже.ФизЛицо
	|			И ПерваяТаблица.Ссылка = ДанныеОСтаже.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПерваяТаблица.Ссылка,
	|	ПерваяТаблица.ФизЛицо,
	|	ПерваяТаблица.НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ПерваяТаблица.НачисленоСтраховая,
	|	ПерваяТаблица.ДоначисленоСтраховая,
	|	ДанныеОСтаже.КоличествоЗаписей,
	|	ДанныеОСтаже.КоличествоОплачиваемыхСтрок,
	|	ДанныеОСтаже.Ст27_1ВПервомМесяце,
	|	ДанныеОСтаже.Ст27_1ВоВторомМесяце,
	|	ДанныеОСтаже.Ст27_1ВТретьемМесяце,
	|	ДанныеОСтаже.НеПроверятьСт27_1ВПервомМесяце,
	|	ДанныеОСтаже.НеПроверятьСт27_1ВоВторомМесяце,
	|	ДанныеОСтаже.НеПроверятьСт27_1ВТретьемМесяце,
	|	ДанныеОСтаже.ОстальныеКодыВПервомМесяце,
	|	ДанныеОСтаже.НеПроверятьОстальныеКодыВПервомМесяце,
	|	ДанныеОСтаже.ОстальныеКодыВоВторомМесяце,
	|	ДанныеОСтаже.НеПроверятьОстальныеКодыВоВторомМесяце,
	|	ДанныеОСтаже.ОстальныеКодыВТретьемМесяце,
	|	ДанныеОСтаже.НеПроверятьОстальныеКодыВТретьемМесяце,
	|	ПерваяТаблица.СотрудникУволен,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРаботникам()

Функция СформироватьЗапросПоДоходам(Ссылки) Экспорт

	ТаблицаКодовКатегорий = Новый ТаблицаЗначений;
	ТаблицаКодовКатегорий.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"));
	ТаблицаКодовКатегорий.Колонки.Добавить("Категория", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииЗастрахованныхЛицПФР"));
	Для каждого Элемент Из Перечисления.КатегорииЗастрахованныхЛицПФР Цикл
		НоваяСтрока = ТаблицаКодовКатегорий.Добавить();
		НоваяСтрока.Код = ОбщегоНазначенияЗК.ПолучитьИмяЭлементаПеречисленияПоЗначению(Элемент);
		НоваяСтрока.Категория = Элемент;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",	Ссылки);
	Запрос.УстановитьПараметр("ТаблицаКодовКатегорий",	ТаблицаКодовКатегорий);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаКодовКатегорий.Код КАК КодКатегории,
	|	ТаблицаКодовКатегорий.Категория
	|ПОМЕСТИТЬ ВТКодыКатегорий
	|ИЗ
	|	&ТаблицаКодовКатегорий КАК ТаблицаКодовКатегорий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеСведенияОЗаработке.Ссылка КАК Ссылка,
	|	ВсеСведенияОЗаработке.НомерСтроки,
	|	ВсеСведенияОЗаработке.ФизЛицо КАК ФизЛицо,
	|	ВсеСведенияОЗаработке.Месяц КАК Месяц,
	|	ВсеСведенияОЗаработке.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
	|	ВсеСведенияОЗаработке.Заработок,
	|	ВсеСведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ВсеСведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины,
	|	ВсеСведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	КодыКатегорий.КодКатегории,
	|	ВЫБОР
	|		КОГДА ВсеСведенияОЗаработке.Месяц = 0
	|			ТОГДА ""ИТОГ""
	|		ИНАЧЕ ""МЕСЦ""
	|	КОНЕЦ КАК ТипСтроки,
	|	ВсеСведенияОЗаработке.Заработок КАК СуммаВыплатИныхВознаграждений,
	|	ВсеСведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины КАК НеПревышающиеВсего,
	|	ВсеСведенияОЗаработке.ПоДоговорамГПХДоПредельнойВеличины КАК НеПревышающиеПоДоговорам,
	|	ВсеСведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины КАК ПревышающиеПредельную
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ВсеСведенияОЗаработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКодыКатегорий КАК КодыКатегорий
	|		ПО ВсеСведенияОЗаработке.КатегорияЗастрахованныхЛиц = КодыКатегорий.Категория
	|ГДЕ
	|	ВсеСведенияОЗаработке.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ФизЛицо,
	|	КатегорияЗастрахованныхЛиц,
	|	Месяц";
	
	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросПоДоходамЗанятыхНаВредныхИТяжелыхРаботах(Ссылки) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",	Ссылки);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Ссылка КАК Ссылка,
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.НомерСтроки,
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ФизЛицо КАК ФизЛицо,
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц КАК Месяц,
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда КАК КлассУсловийТруда,
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	ВЫБОР
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный)
	|			ТОГДА ""О4""
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4)
	|			ТОГДА ""В3.4""
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3)
	|			ТОГДА ""В3.3""
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2)
	|			ТОГДА ""В3.2""
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1)
	|			ТОГДА ""В3.1""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодКлассаУсловийТруда,
	|	ВЫБОР
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = 0
	|			ТОГДА ""ИТОГ""
	|		ИНАЧЕ ""МЕСЦ""
	|	КОНЕЦ КАК ТипСтроки,
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах КАК СуммаВыплатПоДопТарифу27_1,
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах КАК СуммаВыплатПоДопТарифу27_2_18,
	|	ВЫБОР
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный)
	|			ТОГДА ""О4""
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4)
	|			ТОГДА ""В3.4""
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3)
	|			ТОГДА ""В3.3""
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2)
	|			ТОГДА ""В3.2""
	|		КОГДА ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1)
	|			ТОГДА ""В3.1""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодСпециальнойОценкиУсловийТруда
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработкеНаВредныхИТяжелыхРаботах КАК ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|ГДЕ
	|	ВсеСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ФизЛицо,
	|	КлассУсловийТруда,
	|	Месяц";
	
	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросПоЗаписямОСтаже(Ссылки) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",	Ссылки);
	Запрос.УстановитьПараметр("НеИспользоватьКоды2015Года", Истина);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеЗаписиОСтаже.Ссылка КАК Ссылка,
	|	ВсеЗаписиОСтаже.ФизЛицо КАК ФизЛицо,
	|	ВсеЗаписиОСтаже.НомерОсновнойЗаписи КАК НомерОсновнойЗаписи,
	|	ВсеЗаписиОСтаже.НомерДополнительнойЗаписи КАК НомерДополнительнойЗаписи,
	|	ВсеЗаписиОСтаже.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ВсеЗаписиОСтаже.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|	ВсеЗаписиОСтаже.ТерриториальныеУсловия КАК ТерриториальныеУсловия,
	|	ВсеЗаписиОСтаже.ТерриториальныеУсловия.Код КАК ТерриториальныеУсловияКод,
	|	ВсеЗаписиОСтаже.ПараметрТерриториальныхУсловий КАК ТерриториальныеУсловияСтавка,
	|	ВсеЗаписиОСтаже.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда,
	|	ВЫБОР
	|		КОГДА ВсеЗаписиОСтаже.Ссылка.ОтчетныйПериод < ДАТАВРЕМЯ(2015, 4, 1)
	|				ИЛИ &НеИспользоватьКоды2015Года
	|			ТОГДА ВсеЗаписиОСтаже.ОсобыеУсловияТруда.КодДляОтчетности2010
	|		ИНАЧЕ ВсеЗаписиОСтаже.ОсобыеУсловияТруда.КодДляОтчетности2015
	|	КОНЕЦ КАК ОсобыеУсловияТрудаКод,
	|	ВсеЗаписиОСтаже.КодПозицииСписка КАК КодПозицииСписка,
	|	ВсеЗаписиОСтаже.КодПозицииСписка.Код КАК КодПозицииСпискаКод,
	|	ВсеЗаписиОСтаже.ОснованиеИсчисляемогоСтажа КАК ОснованиеИсчисляемогоСтажа,
	|	ВсеЗаписиОСтаже.ОснованиеИсчисляемогоСтажа.Код КАК ОснованиеИсчисляемогоСтажаКод,
	|	ВсеЗаписиОСтаже.ПервыйПараметрИсчисляемогоСтажа КАК ПервыйПараметрИсчисляемогоСтажа,
	|	ВсеЗаписиОСтаже.ВторойПараметрИсчисляемогоСтажа КАК ВторойПараметрИсчисляемогоСтажа,
	|	ВсеЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа КАК ТретийПараметрИсчисляемогоСтажа,
	|	ВсеЗаписиОСтаже.ТретийПараметрИсчисляемогоСтажа.Код КАК ТретийПараметрИсчисляемогоСтажаКод,
	|	ВсеЗаписиОСтаже.ОснованиеВыслугиЛет КАК ОснованиеВыслугиЛет,
	|	ВЫБОР
	|		КОГДА ВсеЗаписиОСтаже.Ссылка.ОтчетныйПериод < ДАТАВРЕМЯ(2015, 4, 1)
	|				ИЛИ &НеИспользоватьКоды2015Года
	|			ТОГДА ВсеЗаписиОСтаже.ОснованиеВыслугиЛет.КодДляОтчетности2010
	|		ИНАЧЕ ВсеЗаписиОСтаже.ОснованиеВыслугиЛет.КодДляОтчетности2015
	|	КОНЕЦ КАК ОснованиеВыслугиЛетКод,
	|	ВсеЗаписиОСтаже.ПервыйПараметрВыслугиЛет КАК ПервыйПараметрВыслугиЛет,
	|	ВсеЗаписиОСтаже.ВторойПараметрВыслугиЛет КАК ВторойПараметрВыслугиЛет,
	|	ВсеЗаписиОСтаже.ТретийПараметрВыслугиЛет КАК ТретийПараметрВыслугиЛет
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.ЗаписиОСтаже КАК ВсеЗаписиОСтаже
	|ГДЕ
	|	ВсеЗаписиОСтаже.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ФизЛицо,
	|	НомерОсновнойЗаписи,
	|	НомерДополнительнойЗаписи";
	
	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросПоКорректирующимСведениям(Ссылки)  Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка,
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаИсходныхФорм
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка В(&Ссылки)
	|	И ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ФизЛицо,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.КорректируемыйПериод,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоСтраховая,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоНакопительная,
	|	0 КАК ДоначисленоНаОПС
	|ПОМЕСТИТЬ ВТДанныеКорректирующихФорм
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.РаботникиОрганизации КАК ПачкаДокументовСЗВ_6_4РаботникиОрганизации
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоСтраховая * ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоСтраховая + ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоНакопительная * ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоНакопительная > 0
	|	И ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка В(&Ссылки)
	|	И ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ФизЛицо В
	|			(ВЫБРАТЬ
	|				ФизлицаИсходныхФорм.ФизЛицо
	|			ИЗ
	|				ВТФизлицаИсходныхФорм КАК ФизлицаИсходныхФорм)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.КорректируемыйПериод,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоСтраховая,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоНакопительная,
	|	0
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоСтраховая * СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоСтраховая + СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоНакопительная * СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоНакопительная > 0
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка В(&Ссылки)
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо В
	|			(ВЫБРАТЬ
	|				ФизлицаИсходныхФорм.ФизЛицо
	|			ИЗ
	|				ВТФизлицаИсходныхФорм КАК ФизлицаИсходныхФорм)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ФизЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка.КорректируемыйПериод,
	|	0,
	|	0,
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ДоначисленоСтраховая
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ДоначисленоСтраховая * ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ДоначисленоСтраховая > 0
	|	И ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка В(&Ссылки)
	|	И ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ФизЛицо В
	|			(ВЫБРАТЬ
	|				ФизлицаИсходныхФорм.ФизЛицо
	|			ИЗ
	|				ВТФизлицаИсходныхФорм КАК ФизлицаИсходныхФорм)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизлицаИсходныхФорм.Ссылка КАК Ссылка,
	|	ФизлицаИсходныхФорм.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ДанныеКорректирующихФорм.КорректируемыйПериод, КВАРТАЛ) КАК КорректируемыйПериод,
	|	ГОД(ДанныеКорректирующихФорм.КорректируемыйПериод) КАК КорректируемыйГод,
	|	СУММА(ДанныеКорректирующихФорм.ДоначисленоСтраховая) КАК ДоначисленоСтраховая,
	|	СУММА(ДанныеКорректирующихФорм.ДоначисленоНакопительная) КАК ДоначисленоНакопительная,
	|	СУММА(ДанныеКорректирующихФорм.ДоначисленоНаОПС) КАК ДоначисленоНаОПС
	|ИЗ
	|	ВТФизлицаИсходныхФорм КАК ФизлицаИсходныхФорм
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеКорректирующихФорм КАК ДанныеКорректирующихФорм
	|		ПО ФизлицаИсходныхФорм.ФизЛицо = ДанныеКорректирующихФорм.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ФизлицаИсходныхФорм.Ссылка,
	|	ФизлицаИсходныхФорм.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ДанныеКорректирующихФорм.КорректируемыйПериод, КВАРТАЛ),
	|	ГОД(ДанныеКорректирующихФорм.КорректируемыйПериод)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.Ссылка,
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.ФизЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.КорректируемыйПериод,
	|	ГОД(ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.КорректируемыйПериод),
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.ДоначисленоСтраховая,
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.ДоначисленоНакопительная,
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.ДоначисленоНаОПС
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.КорректирующиеСведения КАК ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1КорректирующиеСведения.Ссылка В(&Ссылки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ФизЛицо,
	|	КорректируемыйПериод";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////

Процедура ВывестиДоходыВФайл(УзелСотрудника, НаборЗаписейВыплат, Тэг, ОтчетныйПериод, Данные, СтруктураПоискаДанных, ИмяПоляГруппировки, ПерваяЦифраКодаСтроки, ИменаПолей)
	
	Данные.Сбросить();
	Если Данные.НайтиСледующий(СтруктураПоискаДанных) Тогда
		ВтораяЦифраКода = 0;
		НомерСтроки = 1;
		Пока Данные.СледующийПоЗначениюПоля(ИмяПоляГруппировки) Цикл
			
			Пока Данные.Следующий() Цикл
				Если Данные.Ссылка <> СтруктураПоискаДанных.Ссылка Или Данные.ФизЛицо <> СтруктураПоискаДанных.ФизЛицо Тогда
					Прервать;
				КонецЕсли;
				ДанныеДляФайла = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(НаборЗаписейВыплат);
				Для каждого ИмяПоля Из ИменаПолей Цикл
					ДанныеДляФайла[ИмяПоля].Значение = Данные[ИмяПоля]
				КонецЦикла;
				Если Данные.Месяц = 0 Тогда
					ДанныеДляФайла.Удалить("Месяц");
					МесяцПериода = 0
				Иначе
					МесяцПериода = Данные.Месяц - Месяц(ОтчетныйПериод) + 1;
				КонецЕсли;
				ДанныеДляФайла.КодСтроки.Значение = ПерваяЦифраКодаСтроки + ВтораяЦифраКода + "" + МесяцПериода;
				ДанныеДляФайла.НомерСтроки.Значение = НомерСтроки;
				ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(УзелСотрудника, Тэг,""), ДанныеДляФайла);
				НомерСтроки = НомерСтроки + 1;
			КонецЦикла;
			
			ВтораяЦифраКода = ВтораяЦифраКода + 1;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиДоходыНаПечать(ТабличныйДокумент, ОбластьСтрокиДоходов, ОтчетныйПериод, Данные, СтруктураПоискаДанных, ИмяПоляГруппировки, ОбластьПустогоРаздела, ОбластьВторойЧастиПустогоРаздела)
	
	ВыведеноСтрок = ТабличныйДокумент.ВысотаТаблицы;
	
	Данные.Сбросить();
	Если Данные.НайтиСледующий(СтруктураПоискаДанных) Тогда
		ВтораяЦифраКода = 0;
		Пока Данные.СледующийПоЗначениюПоля(ИмяПоляГруппировки) Цикл
			
			ПредыдущийМесяц = 0;
			ВыводитьОставшиесяМесяцы = Ложь;
			Пока Данные.Следующий() Цикл
				
				Если Данные.Ссылка <> СтруктураПоискаДанных.Ссылка Или Данные.ФизЛицо <> СтруктураПоискаДанных.ФизЛицо Тогда
					Если ВыводитьОставшиесяМесяцы Тогда
						Для СчПараметр = 0 По ОбластьСтрокиДоходов.Параметры.Количество() - 1 Цикл
							ОбластьСтрокиДоходов.Параметры[СчПараметр] = ""
						КонецЦикла;
						Для СчМесяцев = ПредыдущийМесяц + 1 По 3 Цикл
							ОбластьСтрокиДоходов.Параметры.НазваниеСтроки = "" + СчМесяцев + " месяц";
							ОбластьСтрокиДоходов.Параметры.КодСтроки = "" + ВтораяЦифраКода + "" + СчМесяцев;
							ТабличныйДокумент.Вывести(ОбластьСтрокиДоходов);
						КонецЦикла;
					КонецЕсли;
					ВыводитьОставшиесяМесяцы = Ложь;
					Прервать;
				КонецЕсли;
				
				Для СчПараметр = 0 По ОбластьСтрокиДоходов.Параметры.Количество() - 1 Цикл
					ОбластьСтрокиДоходов.Параметры[СчПараметр] = ""
				КонецЦикла;
				
				Если Данные.Месяц = 0 Тогда
					МесяцПериода = 0
				Иначе
					МесяцПериода = Данные.Месяц - Месяц(ОтчетныйПериод) + 1;
				КонецЕсли;
				Если МесяцПериода > ПредыдущийМесяц + 1 Тогда
					Для СчПараметр = 0 По ОбластьСтрокиДоходов.Параметры.Количество() - 1 Цикл
						ОбластьСтрокиДоходов.Параметры[СчПараметр] = ""
					КонецЦикла;
					Для СчМесяцев = ПредыдущийМесяц + 1 По МесяцПериода - 1 Цикл
						ОбластьСтрокиДоходов.Параметры.НазваниеСтроки = "" + СчМесяцев + " месяц";
						ОбластьСтрокиДоходов.Параметры.КодСтроки = "" + ВтораяЦифраКода + "" + СчМесяцев;
						ТабличныйДокумент.Вывести(ОбластьСтрокиДоходов);
					КонецЦикла;
				КонецЕсли;
				ОбластьСтрокиДоходов.Параметры.Заполнить(Данные);
				Если МесяцПериода = 0 Тогда
					ОбластьСтрокиДоходов.Параметры.НазваниеСтроки = "Всего с начала расчетного периода, в том числе за последние три месяца отчетного периода:";
				Иначе
					ОбластьСтрокиДоходов.Параметры.НазваниеСтроки = "" + МесяцПериода + " месяц";
				КонецЕсли;
				ОбластьСтрокиДоходов.Параметры.КодСтроки = "" + ВтораяЦифраКода + "" + МесяцПериода;
				ТабличныйДокумент.Вывести(ОбластьСтрокиДоходов);
				ПредыдущийМесяц = МесяцПериода;
				ВыводитьОставшиесяМесяцы = ПредыдущийМесяц < 3;
			КонецЦикла;
			
			Если ВыводитьОставшиесяМесяцы Тогда
				Для СчПараметр = 0 По ОбластьСтрокиДоходов.Параметры.Количество() - 1 Цикл
					ОбластьСтрокиДоходов.Параметры[СчПараметр] = ""
				КонецЦикла;
				Для СчМесяцев = ПредыдущийМесяц + 1 По 3 Цикл
					ОбластьСтрокиДоходов.Параметры.НазваниеСтроки = "" + СчМесяцев + " месяц";
					ОбластьСтрокиДоходов.Параметры.КодСтроки = "" + ВтораяЦифраКода + "" + СчМесяцев;
					ТабличныйДокумент.Вывести(ОбластьСтрокиДоходов);
				КонецЦикла;
			КонецЕсли;
			
			ВтораяЦифраКода = ВтораяЦифраКода + 1;
			
		КонецЦикла;
	Иначе
		ТабличныйДокумент.Вывести(ОбластьПустогоРаздела);
	КонецЕсли;
	
	Если ТабличныйДокумент.ВысотаТаблицы - ВыведеноСтрок < 8 Тогда
		ТабличныйДокумент.Вывести(ОбластьВторойЧастиПустогоРаздела);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, НомерСтраницы, ОбластьКолонтитула)

	Если НумероватьСтраницы Тогда
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(НомерСтраницы,"ЧГ=0"), 6, "0", "Слева"), ОбластьКолонтитула, "НомСтр", 6);
	КонецЕсли;

КонецПроцедуры
