Перем мУдалятьДвижения;

// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт;		// (Регл)
Перем мСтрокаРеквизитыУпрУчета Экспорт; // (Упр)
Перем мСтрокаРеквизитыНалУчета Экспорт;		// (Регл)
Перем мВалютаРегламентированногоУчета;
Перем ПоддержкаПБУ18;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для определенного вида учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета() Экспорт
	
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр();
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл();
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета()

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для управленческого учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр()
	
	мСтрокаРеквизитыУпрУчета = "";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр()

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для регламентированного учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл()
	
	мСтрокаРеквизитыБухУчета = "СчетСписанияБУ, СубконтоБУ, НадписьСчетСписанияБУ, НадписьСубконтоБУ";
	мСтрокаРеквизитыНалУчета = "СчетСписанияНУ, СубконтоНУ, НадписьСчетСписанияНУ, НадписьСубконтоНУ";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл()

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Документ должен принадлежать хотя бы к одному виду учета (управленческий, бухгалтерский, налоговый)
	ОбщегоНазначения.ПроверитьПринадлежностьКВидамУчета(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация, НематериальныйАктив");

	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
		СтруктураОбязательныхПолей.Вставить("СчетСписанияБУ");
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		СтруктураОбязательныхПолей.Вставить("СчетСписанияНУ");
	КонецЕсли;
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	ДвиженияПоРегистрамРегл(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	//При распределении амортизации производилась промежуточная запись проводок.
	//Необходимо записать проводки с сохранением предыдущих движений.
	  
	
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете и не Отказ Тогда
		Движения.Хозрасчетный.Записать(Ложь);
	КонецЕсли; 
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете и не Отказ тогда
		Движения.Налоговый.Записать(Ложь);
	КонецЕсли; 
КонецПроцедуры

Процедура ДвиженияПоРегистрамРегл(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Если (НЕ СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете) И (НЕ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете) Тогда
		Возврат;
	КонецЕсли;
	
	СписыватьВНУ = (НематериальныйАктив.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	               ИЛИ НЕ (СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный
	                   И НЕ (НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа
			                 ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа
			                 ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа
							 ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа));

	ТекОрганизация = СтруктураШапкиДокумента.Организация;
	ДатаДока       = СтруктураШапкиДокумента.Дата;
	НомерЖурнала   = "НА";
	
	// Отражение выбытия объекта
	СостояниеНМА              = Движения.СостоянияНМАОрганизаций;
	АмортизацияБУ          = Движения.СтоимостьНМАБухгалтерскийУчет;
	АмортизацияНУ          = Движения.СтоимостьНМАНалоговыйУчет;
	ПроводкиБУ             = Движения.Хозрасчетный;
	ПроводкиНУ             = Движения.Налоговый;
	
    //Получение информации о текущем состоянии НМА
	Период = Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка);
	ТаблицаТекущегоСостояния = УправлениеВнеоборотнымиАктивами.ОпределитьСтоимостьПоСпискуНМА(СтруктураШапкиДокумента.Организация,СтруктураШапкиДокумента.НематериальныйАктив,Период);

	//Определение суммы амортизации за месяц, распределение в соответствии со способом отражения БУ
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете тогда
		ТаблицаАмортизацииБУ = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНМА_НИОКР_БухРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация, СтруктураШапкиДокумента.НематериальныйАктив,Истина);

		ТаблицаАмортизацииБУ.Колонки.НМА.Имя = "ОбъектУчета";
		ТаблицаАмортизацииБУ.Колонки.Бух.Имя = "Сумма";
		ТаблицаАмортизацииБУ.Колонки.СчетАмортизацииБУ.Имя = "СчетАмортизации";
		ТаблицаАмортизацииБУ.Колонки.Добавить("СчетАмортизацииНУ");
    	ПроводкиБУ   = Движения.Хозрасчетный;
		ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТаблицаАмортизацииБУ, СтруктураШапкиДокумента, "Бух", "НА");
		ПроводкиБУ.Записать(Ложь);

	КонецЕсли;
	
	//Определение суммы амортизации за месяц, распределение в соответствии со способом отражения НУ
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете И СписыватьВНУ Тогда

		ТаблицаАмортизацииНУ = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНМА_НИОКР_НалогРегл(ЭтотОбъект,СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация, СтруктураШапкиДокумента.НематериальныйАктив,Истина);
		ТаблицаАмортизацииНУ.Колонки.НМА.Имя   = "ОбъектУчета";
		ТаблицаАмортизацииНУ.Колонки.Налог.Имя = "Сумма";
		ТаблицаАмортизацииНУ.Колонки.Добавить("СчетАмортизации");
		
		Если ПоддержкаПБУ18 Тогда
			НалоговыйУчет.РасчетРазницПоАмортизации(СтруктураШапкиДокумента, "НМА", СтруктураШапкиДокумента.НематериальныйАктив, ТаблицаАмортизацииНУ, ТабЗатрат, ТаблицаАмортизацииБУ);
		КонецЕсли;
		ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТаблицаАмортизацииНУ, СтруктураШапкиДокумента, "Нал", "НА");
		
	КонецЕсли;

	ТекНМА = СтруктураШапкиДокумента.НематериальныйАктив;
	
	//Движения по регистру СостояниеНМА
	Движение = СостояниеНМА.Добавить();
	Движение.Период              = ДатаДока;
	Движение.НематериальныйАктив = ТекНМА;
	Движение.Организация         = ТекОрганизация;
	Движение.Состояние           = Перечисления.ВидыСостоянийНМА.Списан;
	
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда

		СтрокаАмортизации = ТаблицаАмортизацииБУ.Найти(ТекНМА,"ОбъектУчета");
		СтрокаТТС         = ТаблицаТекущегоСостояния.Найти(ТекНМА,"НМА_БУ");

		Если СтрокаАмортизации = Неопределено тогда
			АмортизацияЗаМесяц = 0;
		Иначе
			АмортизацияЗаМесяц = СтрокаАмортизации.Сумма;
		КонецЕсли;
		АмортизацияВсего = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.АмортизацияБУ) + АмортизацияЗаМесяц;
		СтоимостьНМА 	 = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.СтоимостьБУ);
		
		//Отражение начисления амортизации за месяц в регистре СтоимостьНМАБухгалтерскийУчет
		Если АмортизацияЗаМесяц > 0 Тогда
			Движение = АмортизацияБУ.Добавить();
			Движение.Период					 = ДатаДока;
			Движение.НематериальныйАктив     = ТекНМА;
			Движение.Организация             = ТекОрганизация;
			Движение.Амортизация             = АмортизацияЗаМесяц;
			Движение.Стоимость               = 0;
			Движение.ВидДвижения			 = ВидДвиженияНакопления.Приход;
		КонецЕсли;
		
		//Списание остатков регистра СтоимостьНМАБухгалтерскийУчет
		Если не (АмортизацияВсего = 0 и СтоимостьНМА = 0) Тогда
			Движение = АмортизацияБУ.Добавить();
			Движение.Период					 = ДатаДока;
			Движение.НематериальныйАктив     = ТекНМА;
			Движение.Организация             = ТекОрганизация;
			Движение.Амортизация             = АмортизацияВсего;
			Движение.Стоимость               = СтоимостьНМА;
			Движение.ВидДвижения			 = ВидДвиженияНакопления.Расход;
		КонецЕсли; 
		
		//Формирование проводок по списанию амортизации и остаточной стоимости БУ
		Если СтрокаТТС <> Неопределено Тогда

			СчетУчетаСтоимости   = СтрокаТТС.СчетУчетаБУ;
			СчетУчетаАмортизации = СтрокаТТС.СчетАмортизацииБУ;

			// Списание амортизации Д (Счет амортизации) К (счет учета) если амортизация учитывается на отдельном счете
			Если АмортизацияВсего<>0 и не (СчетУчетаСтоимости = СчетУчетаАмортизации) Тогда
				Проводка = ПроводкиБУ.Добавить();

				Проводка.НомерЖурнала = НомерЖурнала;
				Проводка.Период       = ДатаДока;
				Проводка.Организация  = ТекОрганизация;
				Проводка.Содержание   = "Списание НМА";
				Проводка.Сумма        = АмортизацияВсего;

				Проводка.СчетДт       = СчетУчетаАмортизации;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);

				Проводка.СчетКт       = СчетУчетаСтоимости;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			КонецЕсли;

			// списание остаточной стоимости Д 91.02 К 09.01
			ОстаточнаяСтоимость = СтоимостьНМА - АмортизацияВсего;

			Если ОстаточнаяСтоимость <> 0 Тогда

				Проводка = ПроводкиБУ.Добавить();

				Проводка.НомерЖурнала = НомерЖурнала;
				Проводка.Период       = ДатаДока;
				Проводка.Организация  = ТекОрганизация;
				Проводка.Содержание   = "Списание НМА";
				Проводка.Сумма        = ОстаточнаяСтоимость;

				Проводка.СчетДт       = СтруктураШапкиДокумента.СчетСписанияБУ;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтруктураШапкиДокумента.СубконтоБУ);
                /////Вадим 11.11.2013 15:08:59  бп 8
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПодразделениеОрганизации"      , ПодразделениеОрганизации);		 
				////ВадимКонец
				
				Проводка.СчетКт      = СчетУчетаСтоимости;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);

			КонецЕсли;

		КонецЕсли;
    КонецЕсли;

	//Отражение списания НМА(НИОКР) в НУ
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете И СписыватьВНУ Тогда 

		СтрокаАмортизации = ТаблицаАмортизацииНУ.Найти(ТекНМА,"ОбъектУчета");
		СтрокаТТС         = ТаблицаТекущегоСостояния.Найти(ТекНМА,"НМА_НУ");

		Если СтрокаАмортизации = Неопределено тогда
			АмортизацияЗаМесяц = 0;
		Иначе
			АмортизацияЗаМесяц = СтрокаАмортизации.Сумма;
		КонецЕсли;
		АмортизацияВсего = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.АмортизацияНУ) + АмортизацияЗаМесяц;
		СтоимостьНМА 	 = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.СтоимостьНУ);
			
		//Отражение начисления амортизации за месяц в регистре СтоимостьНМАНалоговыйУчет
		Если АмортизацияЗаМесяц > 0 Тогда
			Движение = АмортизацияНУ.Добавить();
			Движение.Период					 = ДатаДока;
			Движение.НематериальныйАктив     = ТекНМА;
			Движение.Организация             = ТекОрганизация;
			Движение.Амортизация             = АмортизацияЗаМесяц;
			Движение.Стоимость               = 0;
			Движение.ВидДвижения			 = ВидДвиженияНакопления.Приход;
		КонецЕсли;
		
		//Списание остатков регистра СтоимостьНМАНалоговыйУчет
		Если не (АмортизацияВсего = 0 и СтоимостьНМА = 0) Тогда
			Движение = АмортизацияНУ.Добавить();
			Движение.Период					 = ДатаДока;
			Движение.НематериальныйАктив     = ТекНМА;
			Движение.Организация             = ТекОрганизация;
			Движение.Амортизация             = АмортизацияВсего;
			Движение.Стоимость               = СтоимостьНМА;
			Движение.ВидДвижения			 = ВидДвиженияНакопления.Расход;
		КонецЕсли; 
		
		//Формирование проводок по списанию амортизации и остаточной стоимости НУ
		Если СтрокаТТС <> Неопределено Тогда

			СчетУчетаСтоимости   = СтрокаТТС.СчетУчетаНУ;
			СчетУчетаАмортизации = СтрокаТТС.СчетАмортизацииНУ;
			Если АмортизацияВсего<>0 и не (СчетУчетаСтоимости = СчетУчетаАмортизации) Тогда

				Проводка = ПроводкиНУ.Добавить();

				Проводка.НомерЖурнала = НомерЖурнала;
				Проводка.Период       = ДатаДока;
				Проводка.Организация  = ТекОрганизация;
				Проводка.Содержание   = "Списание НМА";
				Проводка.Сумма        = АмортизацияВсего;

				Проводка.СчетДт      = СчетУчетаАмортизации;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);

				Проводка.СчетКт      = СчетУчетаСтоимости;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);

			КонецЕсли;

			// списание остаточной стоимости Д 91.02 К 09.01
			ОстаточнаяСтоимость = СтоимостьНМА - АмортизацияВсего;

			Если ОстаточнаяСтоимость <> 0 Тогда

				Проводка = ПроводкиНУ.Добавить();

				Проводка.НомерЖурнала = НомерЖурнала;
				Проводка.Период       = ДатаДока;
				Проводка.Организация  = ТекОрганизация;
				Проводка.Содержание   = "Списание НМА";
				Проводка.Сумма        = ОстаточнаяСтоимость;

				Проводка.СчетДт       = СтруктураШапкиДокумента.СчетСписанияНУ;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СубконтоНУ);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);
                /////Вадим 11.11.2013 15:08:59  бп 8
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПодразделениеОрганизации"      , ПодразделениеОрганизации);		 
				////ВадимКонец
						 
				
				Проводка.СчетКт       = СчетУчетаСтоимости;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);

			КонецЕсли;

		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		// Для документа, у которого есть своя валюта, переведем в валюту документа.
		Для каждого Амортизация из ТаблицаАмортизацииБУ Цикл
			Амортизация.Сумма = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(Амортизация.Сумма,
														   мВалютаРегламентированногоУчета,
														   СтруктураШапкиДокумента.ВалютаУправленческогоУчета,
														   1,
														   СтруктураШапкиДокумента.КурсВалютыУправленческогоУчета,
														   1,
														   СтруктураШапкиДокумента.КратностьВалютыУправленческогоУчета);
        КонецЦикла;
		
		УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямУпр(ЭтотОбъект, Отказ, Заголовок, ТаблицаАмортизацииБУ, СтруктураШапкиДокумента);
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ)

	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
    /////Вадим 11.11.2013 13:55:29  бп 8
	если (СчетСписанияБУ.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы) и ОтражатьВБухгалтерскомУчете)
		или (СчетСписанияНУ.ПринадлежитЭлементу(ПланыСчетов.Налоговый.ПрочиеДоходыИРасходы) и ОтражатьВНалоговомУчете) тогда
		Если не ЗначениеЗаполнено(ПодразделениеОрганизации) тогда
			Отказ=Истина;
			Предупреждение("Для 91 счета необходимо указать подразделение организации");
			возврат;
		Конецесли;	
	Конецесли;	
	////ВадимКонец
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	СтруктураПолейУчетнойПолитикиНУ = Новый Структура("МетодНачисленияАмортизацииНУ");
	ОбщегоНазначения.ДополнитьПоложениямиУчетнойПолитики(СтруктураШапкиДокумента, СтруктураШапкиДокумента.Дата, Отказ, СтруктураШапкиДокумента.Организация, "Нал", СтруктураПолейУчетнойПолитикиНУ);
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	ДеревоПолейЗапросаПоШапке = УправлениеЗапасами.СформироватьДеревоПолейЗапросаПоШапке();
	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "ВалютаУправленческогоУчета", "ВалютаУправленческогоУчета");
	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "КурсВалютыУправленческогоУчета", "КурсВалютыУправленческогоУчета");
	СтруктураШапкиДокумента = УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета);

	Если Не Отказ Тогда
		ПараметрыУчетнойПолитикиРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Дата, Организация, Ложь);
		Если ЗначениеЗаполнено(ПараметрыУчетнойПолитикиРегл) Тогда
			ПоддержкаПБУ18 = ПараметрыУчетнойПолитикиРегл.ПоддержкаПБУ18;
		Иначе
			ПоддержкаПБУ18 = Ложь;
		КонецЕсли;
		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок);
		ДвиженияПоРазницам(СтруктураШапкиДокумента);
	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью

Процедура ДвиженияПоРазницам(СтруктураШапкиДокумента)

	Если Не СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда 
		Возврат;
	КонецЕсли;	
	
	Если НЕ ПоддержкаПБУ18 Тогда
		Возврат;
	КонецЕсли;
	
	СписыватьВНУ = (НематериальныйАктив.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	               ИЛИ НЕ (СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный
	                   И НЕ (НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа
			                 ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа
			                 ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа
							 ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа));
	
	Если НЕ СписыватьВНУ Тогда 
		Возврат;
	КонецЕсли;
	
	
	Период = Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка);
    ТаблицаТекущегоСостояния = УправлениеВнеоборотнымиАктивами.ОпределитьСтоимостьПоСпискуНМА(СтруктураШапкиДокумента.Организация,СтруктураШапкиДокумента.НематериальныйАктив,Период);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НалоговыйОстатки.Субконто1 Как Субконто1,
	|	НалоговыйОстатки.СуммаОстатокКт КАК Сумма02ПР,
	|	0 КАК Сумма02ВР,
	|	0 КАК Сумма01ПР,
	|	0 КАК Сумма01ВР,
	|	0 КАК Сумма01
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(&КонДата, Счет В ИЕРАРХИИ (&НалоговыйАмортизацияНМА_01), , ВидУчета = &ВидУчетаПР И Организация = &Организация И Субконто1 = (&СписокНМА)) КАК НалоговыйОстатки
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОстатки.Субконто1,
	|	0,
	|	НалоговыйОстатки.СуммаОстатокКт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(&КонДата, Счет В ИЕРАРХИИ (&НалоговыйАмортизацияНМА_01), , ВидУчета = &ВидУчетаВР И Организация = &Организация И Субконто1 = (&СписокНМА)) КАК НалоговыйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОстатки.Субконто1,
	|	0,
	|	0,
	|	НалоговыйОстатки.СуммаОстатокДт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(&КонДата, Счет В ИЕРАРХИИ (&НалоговыйНМАвОрганизации), , ВидУчета = &ВидУчетаПР И Организация = &Организация И Субконто1 = (&СписокНМА)) КАК НалоговыйОстатки
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОстатки.Субконто1,
	|	0,
	|	0,
	|	0,
	|	НалоговыйОстатки.СуммаОстатокДт,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(&КонДата, Счет В ИЕРАРХИИ (&НалоговыйНМАвОрганизации), , ВидУчета = &ВидУчетаВР И Организация = &Организация И Субконто1 = (&СписокНМА)) КАК НалоговыйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОстатки.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	НалоговыйОстатки.СуммаОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонДата, Счет В ИЕРАРХИИ (&ХозрасчетныйНМАвОрганизации), ,Организация = &Организация И Субконто1 = (&СписокНМА)) КАК НалоговыйОстатки
	|
	|ИТОГИ СУММА(Сумма02ПР), СУММА(Сумма02ВР), СУММА(Сумма01ПР), СУММА(Сумма01ВР), СУММА(Сумма01) ПО
	|Субконто1 ";
	
    Запрос.УстановитьПараметр("НачДата",  Новый Граница(НачалоМесяца(Дата),ВидГраницы.Включая));
    Запрос.УстановитьПараметр("КонДата",  Новый Граница(КонецМесяца(Дата),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВидУчетаВР",Перечисления.ВидыУчетаПоПБУ18.ВР);
	Запрос.УстановитьПараметр("ВидУчетаПР",Перечисления.ВидыУчетаПоПБУ18.ПР);
	Запрос.УстановитьПараметр("ХозрасчетныйНМАвОрганизации", ПланыСчетов.Хозрасчетный.НематериальныеАктивы);
	Запрос.УстановитьПараметр("НалоговыйАмортизацияНМА_01", ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("НалоговыйНМАвОрганизации", ПланыСчетов.Налоговый.НематериальныеАктивы);
	Запрос.УстановитьПараметр("СписокНМА",       НематериальныйАктив);

	ПроводкиНУ              = Движения.Налоговый;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Субконто1");
	Пока Выборка.Следующий() Цикл
		ТекНМА = Выборка.Субконто1;
		
		СтрокаТТС         = ТаблицаТекущегоСостояния.Найти(ТекНМА,"НМА_НУ");

			Если СтрокаТТС = Неопределено Тогда
               Продолжить;
		   КОнецЕсли;
		   
		СчетУчетаСтоимости   = СтрокаТТС.СчетУчетаНУ;
		СчетУчетаАмортизации = СтрокаТТС.СчетАмортизацииНУ;
		
		Если Выборка.Сумма01Вр - Выборка.Сумма02Вр <> 0 Тогда
			Проводка              = ПроводкиНУ.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			
			Проводка.СчетДт       = СчетСписанияНУ;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СубконтоНУ);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;  
			Проводка.Сумма        = Выборка.Сумма01Вр - Выборка.Сумма02Вр;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = СчетУчетаСтоимости;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР; 
			Проводка.НомерЖурнала = "ВР";
		КонецЕсли;
		
		Если Выборка.Сумма02Вр <> 0 И СчетУчетаСтоимости <> СчетУчетаАмортизации Тогда
			Проводка              = ПроводкиНУ.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			
			Проводка.СчетДт       = СчетУчетаАмортизации;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
			
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;  
			Проводка.Сумма        = Выборка.Сумма02Вр;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = СчетУчетаСтоимости;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР; 
			Проводка.НомерЖурнала = "ВР";
		КонецЕсли;
			
		Если Выборка.Сумма01Пр - Выборка.Сумма02Пр <> 0 Тогда
			Проводка              = ПроводкиНУ.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			
			Проводка.СчетДт       = СчетСписанияНУ;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СубконтоНУ);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ПР;  
			Проводка.Сумма        = Выборка.Сумма01Пр - Выборка.Сумма02Пр;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = СчетУчетаСтоимости;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ПР; 
			Проводка.НомерЖурнала = "ПР";
		КонецЕсли;
		
		Если Выборка.Сумма02Пр <> 0 И СчетУчетаСтоимости <> СчетУчетаАмортизации Тогда
			Проводка              = ПроводкиНУ.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			
			Проводка.СчетДт       = СчетУчетаАмортизации;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
			
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ПР;  
			Проводка.Сумма        = Выборка.Сумма02Пр;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = СчетУчетаСтоимости;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ПР; 
			Проводка.НомерЖурнала = "ПР";
		КонецЕсли;
		
	КонецЦикла;
		
	ПроводкиНУ.Записать(Ложь);	
КонецПроцедуры

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");

