Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПРОВЕРКИ

Процедура ПроверитьДублиДокумента(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Дата
	|ИЗ
	|	Документ.ОценкаНезавершенногоПроизводства КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	|	И (НЕ ДанныеДокумента.ПометкаУдаления)
	|	И ДанныеДокумента.Ссылка <> &Ссылка
	|	И ДанныеДокумента.Организация = &Организация
	|	И ДанныеДокумента.Подразделение = &Подразделение";
	
	Запрос.УстановитьПараметр("Дата", 		 	Дата);
	Запрос.УстановитьПараметр("Ссылка", 	 	Ссылка);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("Подразделение", 	Подразделение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Оценка незавершенного производства за %1 по подразделению ""%2"" уже введена – см. документ №%3 от %4'"),
			Формат(Дата, "ДФ='ММММ гггг'") + " г.",
			Подразделение,
			Выборка.Номер,
			Формат(Выборка.Дата, "ДЛФ=D"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ЭтотОбъект,
			"Дата",
			, // ПутьКДанным
			Отказ);
		
	КонецЕсли;

КонецПроцедуры // ПроверитьДублиДокумента()

Процедура ПроверитьДублиНоменклатурныхГрупп(Отказ)
	
	ТаблицаСостав = Состав.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Состав.НомерСтроки,
	|	Состав.НоменклатурнаяГруппа
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	&Состав КАК Состав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	КОЛИЧЕСТВО(Состав.НомерСтроки) КАК КоличествоСтрок
	|ИЗ
	|	Состав КАК Состав
	|
	|СГРУППИРОВАТЬ ПО
	|	Состав.НоменклатурнаяГруппа
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(Состав.НомерСтроки) > 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатурнаяГруппа";
	
	Запрос.УстановитьПараметр("Состав", ТаблицаСостав);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	НазванияНоменклатурныхГрупп = "";
	
	Пока Выборка.Следующий() Цикл
		НазванияНоменклатурныхГрупп = НазванияНоменклатурныхГрупп 
			+ ?(НазванияНоменклатурныхГрупп = "", "", ", ") 
			+ """" + Выборка.НоменклатурнаяГруппа + """";
	КонецЦикла;
	
	ТекстСообщения = НСтр("ru = 'В списке ""Состав"" номенклатурные группы не должны повторяться. Повторяются номенклатурные группы: " + ТекстСообщения + "'");
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'В списке ""Состав"" номенклатурные группы не должны повторяться. Повторяются номенклатурные группы: %1'"),
		НазванияНоменклатурныхГрупп);
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстСообщения,
		ЭтотОбъект,
		"Состав",
		, // ПутьКДанным
		Отказ);
	
КонецПроцедуры // ПроверитьДублиНоменклатурныхГрупп()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения"
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	
	// Заполнение по настройке
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.НастройкиЗаполненияФорм") Тогда
		ХранилищаНастроек.ДанныеФорм.ЗаполнитьОбъектПоНастройке(ЭтотОбъект, ДанныеЗаполнения, Документы.ОценкаНезавершенногоПроизводства.СтруктураДополнительныхДанныхФормы());
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриКопировании"
//
Процедура ПриКопировании(ОбъектКопирования)
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,, ОбъектКопирования.Ссылка);
	
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры

// Процедура - обработчик проверки заполнения реквизитов
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ПометкаУдаления Тогда
		ПроверитьДублиДокумента(Отказ);
		ПроверитьДублиНоменклатурныхГрупп(Отказ);
	КонецЕсли;
	
КонецПроцедуры
