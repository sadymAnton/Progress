////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет расчет налога для указанного списка физлиц 
Процедура Рассчитать() Экспорт

	ФизЛица = РаботникиОрганизации.ВыгрузитьКолонку("ФизЛицо");
	
	Если Организация.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		НФДЛКВозврату = ПолучитьНДФЛКВозвратуЮрЛицо(ФизЛица);
		ПоляСтруктурыПоиска = "ДополнительноеПоле, ФизЛицо, МесяцНалоговогоПериода, КодПоОКАТО, КодПоОКТМО, КПП";
	Иначе
		НФДЛКВозврату = ПолучитьНДФЛКВозвратуФизЛицо(ФизЛица);
		ПоляСтруктурыПоиска = "ДополнительноеПоле, ФизЛицо, МесяцНалоговогоПериода, КодПоОКАТО, КодПоОКТМО";
	КонецЕсли;
	
	ПоляСтруктурыПоиска = СтрЗаменить(ПоляСтруктурыПоиска, "ДополнительноеПоле,", НДФЛВозвратНалогаПереопределяемый.ПолучитьДополнительноеПолеОписанияСтроки());
	СтруктураПоиска = Новый Структура(ПоляСтруктурыПоиска);
	
	Для Каждого СтрокаТЧ Из РаботникиОрганизации Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЧ); 
		СтрокиВозврата = НФДЛКВозврату.НайтиСтроки(СтруктураПоиска);
		Если СтрокиВозврата.Количество() > 0 Тогда
			СтрокаТЧ.СуммаВозвратаПоСтавке13 = СтрокиВозврата[0].СуммаВозвратаПоСтавке13;
			СтрокаТЧ.СуммаВозвратаПоСтавке09 = СтрокиВозврата[0].СуммаВозвратаПоСтавке09;
			СтрокаТЧ.СуммаВозвратаПоСтавке35 = СтрокиВозврата[0].СуммаВозвратаПоСтавке35;
		Иначе
			СтрокаТЧ.СуммаВозвратаПоСтавке13 = 0;
			СтрокаТЧ.СуммаВозвратаПоСтавке09 = 0;
			СтрокаТЧ.СуммаВозвратаПоСтавке35 = 0;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

// Заполняет табличную часть документа отпусками по графику отпусков
//
// Параметры
//  ДатаНачала, ДатаОкончания – даты начала и окончания 
//								просмотра графика отпусков	
//
Процедура Автозаполнение(ФизЛица = Неопределено) Экспорт
	
	Если Организация.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		НФДЛКВозврату = ПолучитьНДФЛКВозвратуЮрЛицо(ФизЛица);
	Иначе
		НФДЛКВозврату = ПолучитьНДФЛКВозвратуФизЛицо(ФизЛица);                                                           
	КонецЕсли;
	Если ФизЛица = Неопределено Тогда
		РаботникиОрганизации.Загрузить(НФДЛКВозврату);
	Иначе
		Для каждого СтрокаРезультата Из НФДЛКВозврату Цикл
			ЗаполнитьЗначенияСвойств(РаботникиОрганизации.Добавить(),СтрокаРезультата);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // Автозаполнение()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ЗАПОЛНЕНИЯ И РАСЧЕТА ДОКУМЕНТА

// Выбор сальдо на дату документа с учетом всех "МесяцевНалоговогоПериода" < МесяцНалоговогоПериода
// Интересует только отрицательное сальдо по налогу, т.е. когда удержано больше чем начислено
Функция ПолучитьНДФЛКВозвратуЮрЛицо(ФизЛица = Неопределено)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаДокумента", КонецДня(Дата));
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода", КонецМесяца(МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода", НачалоГода(МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("Ставка13", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	Запрос.УстановитьПараметр("Ставка09", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	Запрос.УстановитьПараметр("Ставка35", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35);

	Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
	Запрос.УстановитьПараметр("ПустойКПП","");
	
	Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
	Запрос.УстановитьПараметр("Физлица", Физлица);	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НДФЛРасчетыСБюджетом.НомерСтроки,
	|	НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Ставка13
	|			ТОГДА ВЫБОР
	|					КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА НДФЛРасчетыСБюджетом.Налог
	|					ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СальдоПоСтавке13,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Ставка09
	|			ТОГДА ВЫБОР
	|					КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА НДФЛРасчетыСБюджетом.Налог
	|					ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СальдоПоСтавке09,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Ставка35
	|			ТОГДА ВЫБОР
	|					КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА НДФЛРасчетыСБюджетом.Налог
	|					ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СальдоПоСтавке35,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
	|			ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
	|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
	|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
	|	КОНЕЦ КАК КодПоОКАТО,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.КодПоОКТМО <> &ПустойКодПоОКАТО
	|			ТОГДА НДФЛРасчетыСБюджетом.КодПоОКТМО
	|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКТМО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКТМО
	|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКТМО, &ПустойКодПоОКАТО)
	|	КОНЕЦ КАК КодПоОКТМО,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
	|			ТОГДА НДФЛРасчетыСБюджетом.КПП
	|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
	|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
	|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
	|	КОНЕЦ КАК КПП
	|ПОМЕСТИТЬ ВТСтрокиРегистра
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода <= &МесяцНалоговогоПериода
	|	И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
	|	И НДФЛРасчетыСБюджетом.Период <= &ДатаДокумента
	|	И (&ПоВсемФизлицам
	|			ИЛИ НДФЛРасчетыСБюджетом.ФизЛицо В (&Физлица))
	|	И НДФЛРасчетыСБюджетом.Регистратор <> &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	НДФЛРасчетыСБюджетом.КодПоОКАТО КАК КодПоОКАТО,
	|	НДФЛРасчетыСБюджетом.КодПоОКТМО КАК КодПоОКТМО,
	|	НДФЛРасчетыСБюджетом.КПП КАК КПП,
	|	СУММА(НДФЛРасчетыСБюджетом.СальдоПоСтавке13) КАК СальдоПоСтавке13,
	|	СУММА(НДФЛРасчетыСБюджетом.СальдоПоСтавке09) КАК СальдоПоСтавке09,
	|	СУММА(НДФЛРасчетыСБюджетом.СальдоПоСтавке35) КАК СальдоПоСтавке35,
	|	ГОД(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода) КАК НалоговыйПериод
	|ПОМЕСТИТЬ ВТФизЛицаСПереплатамиВЦеломЗаГод
	|ИЗ
	|	ВТСтрокиРегистра КАК НДФЛРасчетыСБюджетом
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛРасчетыСБюджетом.ФизЛицо,
	|	НДФЛРасчетыСБюджетом.КПП,
	|	НДФЛРасчетыСБюджетом.КодПоОКАТО,
	|	НДФЛРасчетыСБюджетом.КодПоОКТМО,
	|	ГОД(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода)
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НДФЛРасчетыСБюджетом.СальдоПоСтавке13) < 0
	|		ИЛИ СУММА(НДФЛРасчетыСБюджетом.СальдоПоСтавке09) < 0
	|		ИЛИ СУММА(НДФЛРасчетыСБюджетом.СальдоПоСтавке35) < 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиРегистра.ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаПолучившиеСтатусРезидента
	|ИЗ
	|	ВТСтрокиРегистра КАК СтрокиРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
	|				&НачалоНалоговогоПериода,
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						СтрокиРегистра.ФизЛицо
	|					ИЗ
	|						ВТФизЛицаСПереплатамиВЦеломЗаГод КАК СтрокиРегистра)) КАК СтатусНаНачалоГода
	|		ПО СтрокиРегистра.ФизЛицо = СтатусНаНачалоГода.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
	|				&ДатаДокумента,
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						СтрокиРегистра.ФизЛицо
	|					ИЗ
	|						ВТФизЛицаСПереплатамиВЦеломЗаГод КАК СтрокиРегистра)) КАК СтатусНаКонецПериода
	|		ПО СтрокиРегистра.ФизЛицо = СтатусНаКонецПериода.ФизЛицо
	|ГДЕ
	|	ЕСТЬNULL(СтатусНаНачалоГода.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|	И ЕСТЬNULL(СтатусНаКонецПериода.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СальдоПоСтавкам.ДополнительноеПоле,
	|	СальдоПоСтавкам.ФизЛицо КАК ФизЛицо,
	|	СальдоПоСтавкам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СальдоПоСтавкам.КодПоОКАТО КАК КодПоОКАТО,
	|	СальдоПоСтавкам.КодПоОКТМО КАК КодПоОКТМО,
	|	СальдоПоСтавкам.КПП КАК КПП,
	|	ВЫБОР
	|		КОГДА ФизЛицаСПереплатами.СальдоПоСтавке13 < 0
	|				И СальдоПоСтавкам.СальдоПоСтавке13 < 0
	|			ТОГДА -ВЫБОР
	|					КОГДА ФизЛицаСПереплатами.СальдоПоСтавке13 <= СальдоПоСтавкам.СальдоПоСтавке13
	|						ТОГДА СальдоПоСтавкам.СальдоПоСтавке13
	|					ИНАЧЕ ФизЛицаСПереплатами.СальдоПоСтавке13
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВозвратаПоСтавке13,
	|	ВЫБОР
	|		КОГДА ФизЛицаСПереплатами.СальдоПоСтавке09 < 0
	|				И СальдоПоСтавкам.СальдоПоСтавке09 < 0
	|			ТОГДА -ВЫБОР
	|					КОГДА ФизЛицаСПереплатами.СальдоПоСтавке09 <= СальдоПоСтавкам.СальдоПоСтавке09
	|						ТОГДА СальдоПоСтавкам.СальдоПоСтавке09
	|					ИНАЧЕ ФизЛицаСПереплатами.СальдоПоСтавке09
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВозвратаПоСтавке09,
	|	ВЫБОР
	|		КОГДА ФизЛицаСПереплатами.СальдоПоСтавке35 < 0
	|				И СальдоПоСтавкам.СальдоПоСтавке35 < 0
	|			ТОГДА -ВЫБОР
	|					КОГДА ФизЛицаСПереплатами.СальдоПоСтавке35 <= СальдоПоСтавкам.СальдоПоСтавке35
	|						ТОГДА СальдоПоСтавкам.СальдоПоСтавке35
	|					ИНАЧЕ ФизЛицаСПереплатами.СальдоПоСтавке35
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВозвратаПоСтавке35,
	|	СальдоПоСтавкам.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	ГОД(СальдоПоСтавкам.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	|	-ФизЛицаСПереплатами.СальдоПоСтавке13 КАК СальдоПоСтавке13,
	|	-ФизЛицаСПереплатами.СальдоПоСтавке09 КАК СальдоПоСтавке09,
	|	-ФизЛицаСПереплатами.СальдоПоСтавке35 КАК СальдоПоСтавке35
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.НомерСтроки КАК ДополнительноеПоле,
	|		НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|		НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		СУММА(НДФЛРасчетыСБюджетом.СальдоПоСтавке13) КАК СальдоПоСтавке13,
	|		СУММА(НДФЛРасчетыСБюджетом.СальдоПоСтавке09) КАК СальдоПоСтавке09,
	|		СУММА(НДФЛРасчетыСБюджетом.СальдоПоСтавке35) КАК СальдоПоСтавке35,
	|		НДФЛРасчетыСБюджетом.КодПоОКАТО КАК КодПоОКАТО,
	|		НДФЛРасчетыСБюджетом.КодПоОКТМО КАК КодПоОКТМО,
	|		НДФЛРасчетыСБюджетом.КПП КАК КПП
	|	ИЗ
	|		ВТСтрокиРегистра КАК НДФЛРасчетыСБюджетом
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛРасчетыСБюджетом.НомерСтроки,
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|		НДФЛРасчетыСБюджетом.КПП,
	|		НДФЛРасчетыСБюджетом.КодПоОКАТО,
	|		НДФЛРасчетыСБюджетом.КодПоОКТМО,
	|		НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода) КАК СальдоПоСтавкам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизЛицаСПереплатамиВЦеломЗаГод КАК ФизЛицаСПереплатами
	|		ПО СальдоПоСтавкам.ФизЛицо = ФизЛицаСПереплатами.ФизЛицо
	|			И СальдоПоСтавкам.КодПоОКАТО = ФизЛицаСПереплатами.КодПоОКАТО
	|			И СальдоПоСтавкам.КодПоОКТМО = ФизЛицаСПереплатами.КодПоОКТМО
	|			И СальдоПоСтавкам.КПП = ФизЛицаСПереплатами.КПП
	|			И (ГОД(СальдоПоСтавкам.МесяцНалоговогоПериода) = ФизЛицаСПереплатами.НалоговыйПериод)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаПолучившиеСтатусРезидента КАК ФизлицаПолучившиеСтатусРезидента
	|		ПО СальдоПоСтавкам.ФизЛицо = ФизлицаПолучившиеСтатусРезидента.ФизЛицо
	|ГДЕ
	|	ФизЛицаСПереплатами.ФизЛицо ЕСТЬ НЕ NULL 
	|	И ФизлицаПолучившиеСтатусРезидента.ФизЛицо ЕСТЬ NULL 
	|	И (СальдоПоСтавкам.СальдоПоСтавке13 < 0
	|			ИЛИ СальдоПоСтавкам.СальдоПоСтавке09 < 0
	|			ИЛИ СальдоПоСтавкам.СальдоПоСтавке35 < 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицоНаименование,
	|	ФизЛицо,
	|	НалоговыйПериод,
	|	КПП,
	|	КодПоОКТМО,
	|	КодПоОКАТО,
	|	МесяцНалоговогоПериода УБЫВ";
	
	ДополнительноеПоле = НДФЛВозвратНалогаПереопределяемый.ПолучитьДополнительноеПолеОписанияСтроки();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СальдоПоСтавкам.ДополнительноеПоле,", ДополнительноеПоле);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НДФЛРасчетыСБюджетом.НомерСтроки КАК ДополнительноеПоле,", ДополнительноеПоле);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НДФЛРасчетыСБюджетом.НомерСтроки,", ДополнительноеПоле);
	
	ТаблицаПереплат = РаботникиОрганизации.ВыгрузитьКолонки();
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ФизЛицоНаименование") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("ФизЛицо") Цикл
			Пока Выборка.СледующийПоЗначениюПоля("НалоговыйПериод") Цикл
				Пока Выборка.СледующийПоЗначениюПоля("КПП") Цикл
					Пока Выборка.СледующийПоЗначениюПоля("КодПоОКТМО") Цикл
						Пока Выборка.СледующийПоЗначениюПоля("КодПоОКАТО") Цикл
							
							ВсегоВозвратаПоСтавке13 = Выборка.СальдоПоСтавке13;
							ВсегоВозвратаПоСтавке09 = Выборка.СальдоПоСтавке09;
							ВсегоВозвратаПоСтавке35 = Выборка.СальдоПоСтавке35;
							
							Пока Выборка.Следующий() Цикл	
								Если ВсегоВозвратаПоСтавке13 = 0 И ВсегоВозвратаПоСтавке09 = 0 И ВсегоВозвратаПоСтавке35 = 0 Тогда
									Продолжить;
								КонецЕсли;
								Если ВсегоВозвратаПоСтавке13 > 0 И Выборка.СуммаВозвратаПоСтавке13 > 0 Тогда
									СтрокаТЗ = ТаблицаПереплат.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаТЗ, Выборка, , "СуммаВозвратаПоСтавке09,СуммаВозвратаПоСтавке35");
									СтрокаТЗ.СуммаВозвратаПоСтавке13 = Мин(СтрокаТЗ.СуммаВозвратаПоСтавке13,ВсегоВозвратаПоСтавке13);
									ВсегоВозвратаПоСтавке13 = ВсегоВозвратаПоСтавке13 - СтрокаТЗ.СуммаВозвратаПоСтавке13;
								КонецЕсли;
								Если ВсегоВозвратаПоСтавке09 > 0 И Выборка.СуммаВозвратаПоСтавке09 > 0 Тогда
									СтрокаТЗ = ТаблицаПереплат.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаТЗ, Выборка, , "СуммаВозвратаПоСтавке13,СуммаВозвратаПоСтавке35");
									СтрокаТЗ.СуммаВозвратаПоСтавке09 = Мин(СтрокаТЗ.СуммаВозвратаПоСтавке09,ВсегоВозвратаПоСтавке09);
									ВсегоВозвратаПоСтавке09 = ВсегоВозвратаПоСтавке09 - СтрокаТЗ.СуммаВозвратаПоСтавке09;
								КонецЕсли;
								Если ВсегоВозвратаПоСтавке35 > 0 И Выборка.СуммаВозвратаПоСтавке35 > 0 Тогда
									СтрокаТЗ = ТаблицаПереплат.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаТЗ, Выборка, , "СуммаВозвратаПоСтавке09,СуммаВозвратаПоСтавке13");
									СтрокаТЗ.СуммаВозвратаПоСтавке35 = Мин(СтрокаТЗ.СуммаВозвратаПоСтавке35,ВсегоВозвратаПоСтавке35);
									ВсегоВозвратаПоСтавке35 = ВсегоВозвратаПоСтавке35 - СтрокаТЗ.СуммаВозвратаПоСтавке35;
								КонецЕсли;
							КонецЦикла;
							
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаПереплат.Свернуть(ДополнительноеПоле + "ФизЛицо, МесяцНалоговогоПериода, КодПоОКАТО, КПП, КодПоОКТМО", "СуммаВозвратаПоСтавке13,СуммаВозвратаПоСтавке09,СуммаВозвратаПоСтавке35");
	
	Возврат ТаблицаПереплат
	
КонецФункции

// Выбор сальдо на дату документа с учетом всех "МесяцевНалоговогоПериода" < МесяцНалоговогоПериода
// Интересует только отрицательное сальдо по налогу, т.е. когда удержано больше чем начислено
Функция ПолучитьНДФЛКВозвратуФизЛицо(ФизЛица = Неопределено)
	
	ДополнительноеПоле = НДФЛВозвратНалогаПереопределяемый.ПолучитьДополнительноеПолеОписанияСтроки();
	ТаблицаПереплат = ПолучитьНДФЛКВозвратуЮрЛицо(ФизЛица); 
    ТаблицаПереплат.Свернуть(ДополнительноеПоле + "ФизЛицо,КодПоОКАТО,КодПоОКТМО,МесяцНалоговогоПериода","СуммаВозвратаПоСтавке13,СуммаВозвратаПоСтавке09,СуммаВозвратаПоСтавке35");
	
	Возврат ТаблицаПереплат
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛВозвратНалога.Дата,
	|	НДФЛВозвратНалога.Дата КАК Период,
	|	НДФЛВозвратНалога.Ссылка,
	|	НДФЛВозвратНалога.МесяцНалоговогоПериода,
	|	НДФЛВозвратНалога.Организация,
	|	ВЫБОР
	|		КОГДА НДФЛВозвратНалога.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НДФЛВозвратНалога.Организация
	|		ИНАЧЕ НДФЛВозвратНалога.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация
	|ИЗ
	|	Документ.НДФЛВозвратНалога КАК НДФЛВозвратНалога
	|ГДЕ
	|	НДФЛВозвратНалога.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по табличной части документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРаботникиОрганизации(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НДФЛВозвратНалогаРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	|	НДФЛВозвратНалогаРаботникиОрганизации.ФизЛицо,
	|	НДФЛВозвратНалогаРаботникиОрганизации.МесяцНалоговогоПериода,
	|	НДФЛВозвратНалогаРаботникиОрганизации.СуммаВозвратаПоСтавке13,
	|	НДФЛВозвратНалогаРаботникиОрганизации.СуммаВозвратаПоСтавке09,
	|	НДФЛВозвратНалогаРаботникиОрганизации.СуммаВозвратаПоСтавке35,
	|	НЕОПРЕДЕЛЕНО КАК ДополнительноеПоле,
	|	НДФЛВозвратНалогаРаботникиОрганизации.КодПоОКАТО,
	|	НДФЛВозвратНалогаРаботникиОрганизации.КодПоОКТМО,
	|	НДФЛВозвратНалогаРаботникиОрганизации.КПП
	|ИЗ
	|	Документ.НДФЛВозвратНалога.РаботникиОрганизации КАК НДФЛВозвратНалогаРаботникиОрганизации
	|ГДЕ
	|	НДФЛВозвратНалогаРаботникиОрганизации.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "НЕОПРЕДЕЛЕНО КАК ДополнительноеПоле,", НДФЛВозвратНалогаПереопределяемый.ПолучитьДополнительноеПолеОписанияСтроки());
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 		 - флаг отказа в проведении,
//	Заголовок	 - Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.МесяцНалоговогоПериода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан период, за который возвращается налог!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строки документа.
Процедура ПроверитьЗаполнениеСтрокиРаботникиОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок)

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоРаботникиОрганизации.НомерСтроки) +
								""" табл. части ""Сотрудники организации"": ";
								
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ФизЛицо) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.МесяцНалоговогоПериода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указана дата получения дохода, по которому возращается налог!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.СуммаВозвратаПоСтавке13 + ВыборкаПоРаботникиОрганизации.СуммаВозвратаПоСтавке09 + ВыборкаПоРаботникиОрганизации.СуммаВозвратаПоСтавке35) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указаны суммы возврата налога!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникиОрганизации()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ)
	
	// Проведем возврат как отрицательный расход (отрицательное удержание налога) отдельно для каждой ставки
	
	Если ВыборкаПоТЧ.СуммаВозвратаПоСтавке13 <> 0 Тогда	
		ДобавитьСтрокуДвиженийПоСтавке(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, ВыборкаПоТЧ.СуммаВозвратаПоСтавке13)
	КонецЕсли;
	
	Если ВыборкаПоТЧ.СуммаВозвратаПоСтавке09 <> 0 Тогда
		ДобавитьСтрокуДвиженийПоСтавке(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09, ВыборкаПоТЧ.СуммаВозвратаПоСтавке09)
	КонецЕсли;
	
	Если ВыборкаПоТЧ.СуммаВозвратаПоСтавке35 <> 0 Тогда
		ДобавитьСтрокуДвиженийПоСтавке(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35, ВыборкаПоТЧ.СуммаВозвратаПоСтавке35)
	КонецЕсли;
	
	НДФЛВозвратНалогаПереопределяемый.ДобавитьСтрокуВДвиженияПоРегистрамНакопленияДополнительно(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ);
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления

Процедура ДобавитьСтрокуДвиженийПоСтавке(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, СтавкаНалогообложения, СуммаВозврата)
	
	Движение = Движения.НДФЛКЗачету.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Период, Организация");
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоТЧ);
	
	// Свойства
	Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
	// Измерения
	Движение.СтавкаНалогообложенияРезидента = СтавкаНалогообложения;
	// Ресурсы
	Движение.СуммаНДФЛКЗачету 				= СуммаВозврата;
	
	
	Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Период");
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоТЧ);
	// Свойства
	Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
	// Измерения
	Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.СтавкаНалогообложенияРезидента	= СтавкаНалогообложения;
	// Ресурсы
	Движение.Налог							= - СуммаВозврата; 
	// Реквизиты
	Движение.ОбособленноеПодразделение		= ВыборкаПоШапкеДокумента.Организация;
	Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.ВозвратНалога;
	
	Если СтавкаНалогообложения = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09 Тогда
		Движение.КодДохода					= Справочники.ДоходыНДФЛ.Код1010;
	КонецЕсли;			

	
	Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Период, Организация");
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоТЧ);
	// Свойства
	Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
	// Измерения
	Движение.ПериодВзаиморасчетов		= ВыборкаПоШапкеДокумента.МесяцНалоговогоПериода;
	// Ресурсы
	Движение.СуммаВзаиморасчетов			= СуммаВозврата; 
	
	НДФЛВозвратНалогаПереопределяемый.ДобавитьСтрокуДвиженийПоСтавкеДополнительно(Движения, ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, СтавкаНалогообложения, СуммаВозврата);
	
КонецПроцедуры // ДобавитьСтрокуДвиженийПоСтавке

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			// получим реквизиты табличной части
			ВыборкаПоРаботникиОрганизации = СформироватьЗапросПоРаботникиОрганизации(Режим).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботникиОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);
				
				// Заполним записи в наборах записей регистров
				ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);

			КонецЦикла;
		КонецЕсли;

	КонецЕсли;

	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");
	
	Если МесяцНалоговогоПериода < ДобавитьМесяц(ПроведениеРасчетов.ДатаПереходаНаКодыОКТМО(), -12) Тогда
		Для Каждого СтрокаТЧ Из РаботникиОрганизации Цикл
			СтрокаТЧ.КодПоОКТМО = "";
		КонецЦикла
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение  Тогда
		
		ЭтоНеЮрЛицо = Не Организация.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо;
		
		Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
			Если ЭтоНеЮрЛицо Тогда
				СтрокаТЧ.КПП = "";
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

