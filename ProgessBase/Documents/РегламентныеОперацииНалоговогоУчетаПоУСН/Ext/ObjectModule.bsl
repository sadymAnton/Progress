Перем мУдалятьДвижения;


Перем ТаблицаДвижений;
Перем ПроводкиНУ;
Перем мНачДата;
Перем мКонДата;
Перем мНачГода;
Перем мУчетнаяПолитикаНУ;
Перем мДатаПереходаНаУСН;
Перем мКУДиР;
Перем мКУДиР_ОС;
Перем мКУДиР_НМА;

//Признание расходов на приобретение основных средств и нематериальных активов

Процедура ВключитьВРасходыОС(СтруктураШапкиДокумента, ОС, Строка, СуммаОплаты, ДатаВводаВэксплуатацию, Параметры = Неопределено)
	
	ОбщПервоначальнаяСтоимостьУСН = Строка.ПервоначальнаяСтоимостьУСН;
	ОбщСуммаНачисленнойАмортизации = Строка.СуммаНачисленнойАмортизации;
	
	ПервоначальнаяСтоимостьУСН = Строка.СуммаОплатыОборот;
	СуммаНачисленнойАмортизации = ?(НЕ ОбщПервоначальнаяСтоимостьУСН = 0, ОбщСуммаНачисленнойАмортизации * ПервоначальнаяСтоимостьУСН / ОбщПервоначальнаяСтоимостьУСН, 0);
	ОстаточнаяСтоимость = Макс(0, ПервоначальнаяСтоимостьУСН - СуммаНачисленнойАмортизации);
		
	СтрокаКниги = мКУДиР_ОС.Добавить();
	СтрокаКниги.ОсновноеСредство = ОС;
	СтрокаКниги.Период = мКонДата;
	СтрокаКниги.Организация = СтруктураШапкиДокумента.Организация;
	СтрокаКниги.ДатаОплаты = Строка.ДатаОплаты;
	СтрокаКниги.Графа3_ДатаВводаВЭксплуатацию = ДатаВводаВэксплуатацию;
	СтрокаКниги.Графа5_ПервоначальнаяСтоимость = Строка.СуммаОплатыОборот;
	
	Если ЗначениеЗаполнено(Строка.ДокументМодернизации) Тогда
		СтрокаКниги.ДокументМодернизации = Строка.ДокументМодернизации
	КонецЕсли;
	
	Если НЕ (Параметры = Неопределено) Тогда
		
		Если Параметры.ПереходныйПериод Тогда
			СтрокаКниги.Графа6_ОстаточнаяСтоимость = ОстаточнаяСтоимость;
			СтрокаКниги.Графа7_СрокПолезногоИспользования = Цел(Строка.СрокПолезногоИспользования/12) + ?(Строка.СрокПолезногоИспользования%12 <> 0, 1, 0);
			СтрокаКниги.Графа8_КолКварталовВОтчетномПериоде = Параметры.КоличествоКварталовВОтчетномПериоде;
			СтрокаКниги.Графа14_РасходыПрошлыхПериодов = Строка.СуммаРасходовВсего - (Строка.СуммаРасходовЗаГод);
			СтрокаКниги.Графа15_ОстатокРасходов = ОстаточнаяСтоимость - (Строка.СуммаРасходовВсего + СуммаОплаты);
		КонецЕсли;
		
		СтрокаКниги.Графа9_КолКварталовВНалПериоде  = Параметры.КоличествоКварталовВНалоговомПериоде;
		СтрокаКниги.Графа10_ДоляРасходовЗаНалПериод  = Параметры.ПроцентПринятияРасходов;
		СтрокаКниги.Графа11_ДоляРасходовЗаКвартал   = Параметры.ПроцентПринятияРасходовОтч;
	Иначе
		СтрокаКниги.Графа7_СрокПолезногоИспользования = Цел(Строка.СрокПолезногоИспользования/12) + ?(Строка.СрокПолезногоИспользования%12 <> 0, 1, 0);
		СтрокаКниги.Графа14_РасходыПрошлыхПериодов = Строка.СуммаРасходовВсего - (Строка.СуммаРасходовЗаГод + СуммаОплаты);
		
	КонецЕсли;
	
	СтрокаКниги.Графа12_СуммаРасходовЗаОтчетнПериод = Строка.СуммаРасходовЗаГод + СуммаОплаты;
	СтрокаКниги.Графа13_СуммаРасходовЗаКвартал = Строка.СуммаРасходовЗаКвартал + СуммаОплаты;
	СтрокаКниги.Графа15_ОстатокРасходов = ОстаточнаяСтоимость - (Строка.СуммаРасходовВсего + СуммаОплаты);
		
	Если СуммаОплаты > 0 Тогда

		СтрокаКниги  = мКУДиР.Добавить();
		Если ЗначениеЗаполнено(Строка.ДокументМодернизации) Тогда
			СтрокаСодержания = "Признание расходов: основное средство """+Строка(ОС)+""", " + Строка.ДокументМодернизации.СобытиеРегл.ВидСобытияОС + " от " + Формат(Строка.ДокументМодернизации.Дата,"ДФ=дд.ММ.гггг") + " (дата оплаты: "+Формат(Строка.ДатаОплаты, "ДФ=дд.ММ.гггг")+").";
		Иначе
			СтрокаСодержания = "Признание расходов на приобретение основного средства """+Строка(ОС)+""" (дата оплаты: "+Формат(Строка.ДатаОплаты, "ДФ=дд.ММ.гггг")+").";
		КонецЕсли;
		
		СтрокаКниги.Организация     = СтруктураШапкиДокумента.Организация;
		СтрокаКниги.Период          = мКонДата;
		СтрокаКниги.Содержание      = СтрокаСодержания;
		СтрокаКниги.Графа7          = СуммаОплаты;
		СтрокаКниги.РеквизитыПервичногоДокумента = НалоговыйУчетУСН.РеквизитыПервичногоДокумента(Ссылка);

	КонецЕсли;
	
КонецПроцедуры

Процедура ВключитьВРасходыНМА(СтруктураШапкиДокумента, НМА, Строка, СуммаОплаты, ДатаПринятияКУчету, Параметры = Неопределено)
	
	ОбщПервоначальнаяСтоимостьУСН = Строка.ПервоначальнаяСтоимостьУСН;
	ОбщСуммаНачисленнойАмортизации = Строка.СуммаНачисленнойАмортизации;
	
	ПервоначальнаяСтоимостьУСН = Строка.СуммаОплатыОборот;
	СуммаНачисленнойАмортизации = ?(НЕ ОбщПервоначальнаяСтоимостьУСН = 0, ОбщСуммаНачисленнойАмортизации * ПервоначальнаяСтоимостьУСН / ОбщПервоначальнаяСтоимостьУСН, 0);
	ОстаточнаяСтоимость = Макс(0, ПервоначальнаяСтоимостьУСН - СуммаНачисленнойАмортизации);
		
	СтрокаКниги = мКУДиР_НМА.Добавить();
	СтрокаКниги.НематериальныйАктив = НМА;
	СтрокаКниги.Период = мКонДата;
	СтрокаКниги.Организация = СтруктураШапкиДокумента.Организация;
	СтрокаКниги.ДатаОплаты = Строка.ДатаОплаты;
	СтрокаКниги.Графа3_ДатаПринятияКУчету = ДатаПринятияКУчету;
	СтрокаКниги.Графа5_ПервоначальнаяСтоимость = Строка.СуммаОплатыОборот;
	
	Если НЕ (Параметры = Неопределено) Тогда
		
		Если Параметры.ПереходныйПериод Тогда
			СтрокаКниги.Графа6_ОстаточнаяСтоимость = ОстаточнаяСтоимость;
			СтрокаКниги.Графа7_СрокПолезногоИспользования = Цел(Строка.СрокПолезногоИспользования/12) + ?(Строка.СрокПолезногоИспользования%12 <> 0, 1, 0);
			СтрокаКниги.Графа8_КолКварталовВОтчетномПериоде = Параметры.КоличествоКварталовВОтчетномПериоде;
			СтрокаКниги.Графа14_РасходыПрошлыхПериодов = Строка.СуммаРасходовВсего - (Строка.СуммаРасходовЗаГод);
			СтрокаКниги.Графа15_ОстатокРасходов = ОстаточнаяСтоимость - (Строка.СуммаРасходовВсего + СуммаОплаты);
		КонецЕсли;
		
		СтрокаКниги.Графа9_КолКварталовВНалПериоде  = Параметры.КоличествоКварталовВНалоговомПериоде;
		СтрокаКниги.Графа10_ДоляРасходовЗаНалПериод  = Параметры.ПроцентПринятияРасходов;
		СтрокаКниги.Графа11_ДоляРасходовЗаКвартал   = Параметры.ПроцентПринятияРасходовОтч;
	Иначе
		СтрокаКниги.Графа7_СрокПолезногоИспользования = Цел(Строка.СрокПолезногоИспользования/12) + ?(Строка.СрокПолезногоИспользования%12 <> 0, 1, 0);
		СтрокаКниги.Графа14_РасходыПрошлыхПериодов = Строка.СуммаРасходовВсего - (Строка.СуммаРасходовЗаГод + СуммаОплаты);
		
	КонецЕсли;
	
	СтрокаКниги.Графа12_СуммаРасходовЗаОтчетнПериод = Строка.СуммаРасходовЗаГод + СуммаОплаты;
	СтрокаКниги.Графа13_СуммаРасходовЗаКвартал = Строка.СуммаРасходовЗаКвартал + СуммаОплаты;
	СтрокаКниги.Графа15_ОстатокРасходов = ОстаточнаяСтоимость - (Строка.СуммаРасходовВсего + СуммаОплаты);
	
	Если СуммаОплаты > 0 Тогда

		СтрокаКниги  = мКУДиР.Добавить();

		СтрокаКниги.Организация     = СтруктураШапкиДокумента.Организация;
		СтрокаКниги.Период          = мКонДата;
		СтрокаКниги.Содержание      = "Признание расходов на приобретение нематериального актива """+Строка(НМА)+""" (дата оплаты: "+Формат(Строка.ДатаОплаты, "ДФ=дд.ММ.гггг")+").";
		СтрокаКниги.Графа7          = СуммаОплаты;
		СтрокаКниги.РеквизитыПервичногоДокумента = НалоговыйУчетУСН.РеквизитыПервичногоДокумента(Ссылка);

	КонецЕсли;
	
КонецПроцедуры

Процедура ВключитьВРасходыПрочее(СтруктураШапкиДокумента, Объект, Строка, СуммаОплаты, Параметры = Неопределено)
	
	Если СуммаОплаты > 0 Тогда

		СтрокаКниги  = мКУДиР.Добавить();

		СтрокаКниги.Организация     = СтруктураШапкиДокумента.Организация;
		СтрокаКниги.Период          = мКонДата;
		СтрокаКниги.Содержание      = "Признание расходов на """+Строка(Объект)+""" (дата оплаты: "+Формат(Строка.ДатаОплаты, "ДФ=дд.ММ.гггг")+").";
		СтрокаКниги.Графа7          = СуммаОплаты;
		СтрокаКниги.РеквизитыПервичногоДокумента = НалоговыйУчетУСН.РеквизитыПервичногоДокумента(Ссылка);

	КонецЕсли;
	
КонецПроцедуры

Функция ПроцентПринятыхРасходов(СрокПолезногоИспользования)
	
	ПроцентСписания = 0;
	                                                                                    
	Если СрокПолезногоИспользования <= 3*12 Тогда
		                      
		Если Год(Дата) = Год(мДатаПереходаНаУСН) Тогда
			ПроцентСписания = 100;
		КонецЕсли;
	
	ИначеЕсли СрокПолезногоИспользования <= 15*12 Тогда
		Если Год(Дата) = Год(мДатаПереходаНаУСН) Тогда
			ПроцентСписания = 50;
			
		ИначеЕсли (Год(Дата) - 1) = Год(мДатаПереходаНаУСН) Тогда
			ПроцентСписания = 30;
			
		ИначеЕсли (Год(Дата) - 2) = Год(мДатаПереходаНаУСН) Тогда
			ПроцентСписания = 20;
		КонецЕсли;
		
	Иначе
		ПроцентСписания = 10;
	КонецЕсли;
	
	Возврат ПроцентСписания;
	
КонецФункции // ПроцентПринятыхРасходов()

Функция РассчитатьКоличествоМесяцевЭксплуатации(КоличествоКварталовВОтчетномПериоде, 
	                                            КоличествоКварталовВНалоговомПериоде,
												ДатаВключенияСтоимостиВРасходы);
	
	НомерКвартала = Месяц(КонецКвартала(Дата)) / 3;
	Если Год(ДатаВключенияСтоимостиВРасходы) < Год(Дата) Тогда
		КоличествоКварталовВОтчетномПериоде  = НомерКвартала;
		КоличествоКварталовВНалоговомПериоде = 4;
		
	ИначеЕсли ДатаВключенияСтоимостиВРасходы <= Дата Тогда
		НомерКварталаНачалаРасчета = Месяц(КонецКвартала(ДатаВключенияСтоимостиВРасходы)) / 3;
		КоличествоКварталовВОтчетномПериоде  = НомерКвартала - НомерКварталаНачалаРасчета;
		КоличествоКварталовВНалоговомПериоде = 5 - НомерКварталаНачалаРасчета;
		
		Если (Месяц(ДатаВключенияСтоимостиВРасходы) <> Месяц(КонецКвартала(ДатаВключенияСтоимостиВРасходы))) или (ДатаВключенияСтоимостиВРасходы >= Дата("20060101")) Тогда
		    КоличествоКварталовВОтчетномПериоде = КоличествоКварталовВОтчетномПериоде + 1;
		Иначе
			КоличествоКварталовВНалоговомПериоде = КоличествоКварталовВНалоговомПериоде - 1;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции // РассчитатьКоличествоМесяцевЭксплуатации()

Функция РапределитьОплатуПоКварталам(СуммаОплаты, ДатаОплаты, ДатаВводаВэксплуатацию, Параметры)
	
	КоличествоКварталовВОтчетномПериоде  = 0;
	КоличествоКварталовВНалоговомПериоде = 0;
	ДатаВключенияСтоимостиВРасходы       = 0;
	
	РассчитатьКоличествоМесяцевЭксплуатации(КоличествоКварталовВОтчетномПериоде, 
	                                        КоличествоКварталовВНалоговомПериоде,
											Макс(ДатаОплаты, ДатаВводаВэксплуатацию));
	СуммаРасходов = 0;
	Если КоличествоКварталовВНалоговомПериоде <> 0 Тогда
		СуммаРасходов = СуммаОплаты/КоличествоКварталовВНалоговомПериоде;    
	КонецЕсли;
	
	ПроцентПринятияРасходовОтч = ?(КоличествоКварталовВНалоговомПериоде = 0, 0, Окр(100/КоличествоКварталовВНалоговомПериоде, 2));
	Параметры = Новый Структура("КоличествоКварталовВОтчетномПериоде, КоличествоКварталовВНалоговомПериоде, ПроцентПринятияРасходовОтч, ПроцентПринятияРасходов", 0, КоличествоКварталовВНалоговомПериоде, ПроцентПринятияРасходовОтч, 100);
	
	Возврат СуммаРасходов;
	
КонецФункции

Процедура ФормированиеРасходов(СтруктураШапкиДокумента, ОС, ОстаточнаяСтоимость, Строка, ДатаВводаВэксплуатацию)
	
	Если ОстаточнаяСтоимость <= 0 Тогда
	    Возврат;
	КонецЕсли;
	
	КоличествоКварталовВОтчетномПериоде  = 0;
	КоличествоКварталовВНалоговомПериоде = 0;
	ДатаВключенияСтоимостиВРасходы       = 0;
	
	ПроцентПринятияРасходов = ПроцентПринятыхРасходов(Строка.СрокПолезногоИспользования);
	РассчитатьКоличествоМесяцевЭксплуатации(КоличествоКварталовВОтчетномПериоде, 
	                                        КоличествоКварталовВНалоговомПериоде,
											Макс(Строка.ДатаОплаты, ДатаВводаВэксплуатацию));
	СуммаРасходов = 0;
	Если КоличествоКварталовВНалоговомПериоде <> 0 Тогда
		СуммаРасходов = ОстаточнаяСтоимость*КоличествоКварталовВОтчетномПериоде*(ПроцентПринятияРасходов/КоличествоКварталовВНалоговомПериоде)/100;    
	КонецЕсли;
	
	РасходыТекущегоКварталаСумма = 0;
	ОтнесеноНаРасходы = 0;
	ОтнесеноНаРасходы = Строка.СуммаРасходовЗаГод;
	
	СуммаРасходов = Макс(0, СуммаРасходов - ОтнесеноНаРасходы);
	
	ПроцентПринятияРасходовОтч = 0;
	Если КоличествоКварталовВНалоговомПериоде <> 0 Тогда
		ПроцентПринятияРасходовОтч = (ПроцентПринятияРасходов/КоличествоКварталовВНалоговомПериоде);    
	КонецЕсли;
	
	Параметры = Новый Структура("КоличествоКварталовВОтчетномПериоде, КоличествоКварталовВНалоговомПериоде, ПроцентПринятияРасходовОтч, ПроцентПринятияРасходов", КоличествоКварталовВОтчетномПериоде, КоличествоКварталовВНалоговомПериоде, ПроцентПринятияРасходовОтч, ПроцентПринятияРасходов);
	Параметры.Вставить("ПереходныйПериод", Истина);
	
	Если НЕ СуммаРасходов = 0 Тогда
		ВключитьВРасходыОС(СтруктураШапкиДокумента, ОС, Строка, СуммаРасходов, ДатаВводаВэксплуатацию, Параметры);
	КонецЕсли;
	
КонецПроцедуры // ФормированиеРасходов()

Процедура ФормированиеРасходовНМА(СтруктураШапкиДокумента, НМА, ОстаточнаяСтоимость, Строка, ДатаПринятияКУчету)
	
	Если ОстаточнаяСтоимость <= 0 Тогда
	    Возврат;
	КонецЕсли;
	
	КоличествоКварталовВОтчетномПериоде  = 0;
	КоличествоКварталовВНалоговомПериоде = 0;
	ДатаВключенияСтоимостиВРасходы       = 0;
	
	ПроцентПринятияРасходов = ПроцентПринятыхРасходов(Строка.СрокПолезногоИспользования);
	РассчитатьКоличествоМесяцевЭксплуатации(КоличествоКварталовВОтчетномПериоде, 
	                                        КоличествоКварталовВНалоговомПериоде,
											Макс(Строка.ДатаОплаты, ДатаПринятияКУчету));
	СуммаРасходов = 0;
	Если КоличествоКварталовВНалоговомПериоде <> 0 Тогда
		СуммаРасходов = ОстаточнаяСтоимость*КоличествоКварталовВОтчетномПериоде*(ПроцентПринятияРасходов/КоличествоКварталовВНалоговомПериоде)/100;    
	КонецЕсли;
	
	РасходыТекущегоКварталаСумма = 0;
	ОтнесеноНаРасходы = 0;
	ОтнесеноНаРасходы = Строка.СуммаРасходовЗаГод;
	
	СуммаРасходов = Макс(0, СуммаРасходов - ОтнесеноНаРасходы);
	
	ПроцентПринятияРасходовОтч = 0;
	Если КоличествоКварталовВНалоговомПериоде <> 0 Тогда
		ПроцентПринятияРасходовОтч = (ПроцентПринятияРасходов/КоличествоКварталовВНалоговомПериоде);    
	КонецЕсли;
	
	Параметры = Новый Структура("КоличествоКварталовВОтчетномПериоде, КоличествоКварталовВНалоговомПериоде, ПроцентПринятияРасходовОтч, ПроцентПринятияРасходов", КоличествоКварталовВОтчетномПериоде, КоличествоКварталовВНалоговомПериоде, ПроцентПринятияРасходовОтч, ПроцентПринятияРасходов);
	Параметры.Вставить("ПереходныйПериод", Истина);

	Если НЕ СуммаРасходов = 0 Тогда
		ВключитьВРасходыНМА(СтруктураШапкиДокумента, НМА, Строка, СуммаРасходов, ДатаПринятияКУчету, Параметры);
	КонецЕсли;
	
КонецПроцедуры // ФормированиеРасходов()

Процедура ПризнаниеРасходовНаПриобретениеОСУСН(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Если НЕ СтруктураШапкиДокумента.ПризнаниеРасходовНаПриобретениеОСУСН Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",       СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ДатаПереходаНаУСН", мДатаПереходаНаУСН);
	Запрос.УстановитьПараметр("НачПериода",        мНачГода);
	Запрос.УстановитьПараметр("НачКвартала",       НачалоКвартала(Дата));
	Запрос.УстановитьПараметр("КонДата",           мКонДата);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ОплатыОСДляУСНОбороты.ДокументМодернизации,
	|	ОплатыОСДляУСНОбороты.ДатаОплаты КАК ДатаОплаты,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПервоначальнаяСтоимостьУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СуммаНачисленнойАмортизации,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СрокПолезногоИспользования,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ДатаПриобретения,
	|	СУММА(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовОСОбороты.Графа13_СуммаРасходовЗаКварталОборот ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ КнигаУчетаДоходовИРасходовОСОбороты.Графа13_СуммаРасходовЗаКварталОборот
	|		КОНЕЦ) КАК СуммаРасходовВсего,
	|	СУММА(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовОСОборотыГод.Графа13_СуммаРасходовЗаКварталОборот ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ КнигаУчетаДоходовИРасходовОСОборотыГод.Графа13_СуммаРасходовЗаКварталОборот
	|		КОНЕЦ) КАК СуммаРасходовЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовОСОборотыКв.Графа13_СуммаРасходовЗаКварталОборот ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ КнигаУчетаДоходовИРасходовОСОборотыКв.Графа13_СуммаРасходовЗаКварталОборот
	|		КОНЕЦ) КАК СуммаРасходовЗаКвартал,
	|	СУММА(ВЫБОР
	|			КОГДА ОплатыОСДляУСНОбороты.СуммаОплатыОборот ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ОплатыОСДляУСНОбороты.СуммаОплатыОборот
	|		КОНЕЦ) КАК СуммаОплатыОборот,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходовУСН
	|ИЗ
	|	РегистрНакопления.ОплатыОСДляУСН.Обороты(, &КонДата, , Организация = &Организация) КАК ОплатыОСДляУСНОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчетУСН.СрезПоследних(&КонДата, Организация = &Организация) КАК ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних
	|		ПО ОплатыОСДляУСНОбороты.ОсновноеСредство = ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходовОС.Обороты(&ДатаПереходаНаУСН, &КонДата, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОСОбороты
	|		ПО КнигаУчетаДоходовИРасходовОСОбороты.ОсновноеСредство = ОплатыОСДляУСНОбороты.ОсновноеСредство
	|			И КнигаУчетаДоходовИРасходовОСОбороты.ДатаОплаты = ОплатыОСДляУСНОбороты.ДатаОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходовОС.Обороты(&НачПериода, &КонДата, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОСОборотыГод
	|		ПО КнигаУчетаДоходовИРасходовОСОборотыГод.ОсновноеСредство = ОплатыОСДляУСНОбороты.ОсновноеСредство
	|			И КнигаУчетаДоходовИРасходовОСОборотыГод.ДатаОплаты = ОплатыОСДляУСНОбороты.ДатаОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходовОС.Обороты(&НачКвартала, &КонДата, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОСОборотыКв
	|		ПО КнигаУчетаДоходовИРасходовОСОборотыКв.ОсновноеСредство = ОплатыОСДляУСНОбороты.ОсновноеСредство
	|			И КнигаУчетаДоходовИРасходовОСОборотыКв.ДатаОплаты = ОплатыОСДляУСНОбороты.ДатаОплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ОсновноеСредство,
	|	ОплатыОСДляУСНОбороты.ДокументМодернизации,
	|	ОплатыОСДляУСНОбороты.ДатаОплаты,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПервоначальнаяСтоимостьУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СуммаНачисленнойАмортизации,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СрокПолезногоИспользования,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ДатаПриобретения,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходовУСН
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство,
	|	ДатаОплаты";
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	ТекОС = "";
	ТекМодернизацияОС = "";
	Для Каждого СтрокаРезультата ИЗ ТаблицаРезультата Цикл
		Если (СтрокаРезультата.ОсновноеСредство = ТекОС) И (СтрокаРезультата.ДокументМодернизации = ТекМодернизацияОС) Тогда
			//
		Иначе
			ТекОС = СтрокаРезультата.ОсновноеСредство;
			ТекМодернизацияОС = СтрокаРезультата.ДокументМодернизации;
			Если ЗначениеЗаполнено(СтрокаРезультата.ДокументМодернизации) Тогда //Модернизация
				
				ПервоначальнаяСтоимостьУСН = 0;
				СуммаНачисленнойАмортизации = 0;
				СрокПолезногоИспользования = 12;
				ДатаПриобретения = СтрокаРезультата.ДокументМодернизации.Дата;
				ДатаВвода = ДатаПриобретения;
				ДатаВыбытия = "";

				Если (СтрокаРезультата.ДатаОплаты < Дата("20070101")) ИЛИ (ДатаВвода < Дата("20070101")) Тогда
					ТекОС = "";
					Продолжить;
				КонецЕсли;
				
				Если Макс(СтрокаРезультата.ДатаОплаты, ДатаВвода) < Дата("20080101") Тогда
					ТекОС = "";
					Продолжить;
				КонецЕсли;
				
				Если ДатаПриобретения < мДатаПереходаНаУСН Тогда
                    ТекОС = "";
					Продолжить;
				КонецЕсли;
				
				Запрос = Новый Запрос();
				Запрос.УстановитьПараметр("Ссылка", 		СтрокаРезультата.ДокументМодернизации);
				Запрос.УстановитьПараметр("ОС", 			СтрокаРезультата.ОсновноеСредство);
				Запрос.УстановитьПараметр("Организация", 	СтруктураШапкиДокумента.Организация);
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	СУММА(СобытияОСОрганизаций.СуммаЗатратБУ) КАК СуммаЗатратБУ,
				|	СУММА(СобытияОСОрганизаций.СуммаЗатратНУ) КАК СуммаЗатратНУ,
				|	СУММА(СобытияОСОрганизаций.СуммаЗатратУСН) КАК СуммаЗатратУСН,
				|	СобытияОСОрганизаций.Событие
				|ИЗ
				|	РегистрСведений.СобытияОСОрганизаций КАК СобытияОСОрганизаций
				|ГДЕ
				|	СобытияОСОрганизаций.Регистратор = &Ссылка
				|	И СобытияОСОрганизаций.ОсновноеСредство = &ОС
				|	И СобытияОСОрганизаций.Организация = &Организация
				|
				|СГРУППИРОВАТЬ ПО
				|	СобытияОСОрганизаций.Событие";
				
				Результат = Запрос.Выполнить().Выбрать();
				Если Результат.Следующий() Тогда
					ПервоначальнаяСтоимостьУСН = Результат.СуммаЗатратУСН;
				КонецЕсли;
				
			Иначе //ОС
				
				ПервоначальнаяСтоимостьУСН = СтрокаРезультата.ПервоначальнаяСтоимостьУСН;
				СуммаНачисленнойАмортизации = СтрокаРезультата.СуммаНачисленнойАмортизации;
				СрокПолезногоИспользования = СтрокаРезультата.СрокПолезногоИспользования;
				ДатаПриобретения = СтрокаРезультата.ДатаПриобретения;
				
				ДокРегистратор   = Неопределено;
				ДатаВвода		 = Неопределено;
				УправлениеВнеоборотнымиАктивами.ПолучитьДокументБухСостоянияОС(ТекОС, СтруктураШапкиДокумента.Организация, Перечисления.СостоянияОС.ВведеноВЭксплуатацию, ДокРегистратор, ДатаВвода);
				
				ДокументСнятоСУчетаБУ = Неопределено;
				ДатаВыбытия			  = Неопределено;
				УправлениеВнеоборотнымиАктивами.ПолучитьДокументБухСостоянияОС(ТекОС, СтруктураШапкиДокумента.Организация, Перечисления.СостоянияОС.СнятоСУчета,  ДокументСнятоСУчетаБУ, ДатаВыбытия);
				ДатаВыбытия = ?(ДатаВыбытия > КонецДня(СтруктураШапкиДокумента.Дата), "", ДатаВыбытия);
				
			КонецЕсли;
				
			Если НЕ ЗначениеЗаполнено(ДатаВвода) Тогда
				ТекОС = "";
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПервоначальнаяСтоимостьУСН) Тогда
				ТекОС = "";
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(ДатаВыбытия) И (НЕ Год(ДатаВыбытия) = Год(СтруктураШапкиДокумента.Дата)) Тогда
				//Основное средство выбыло в предыдущие годы
				ТекОС = "";
				Продолжить;
			КонецЕсли;
			
			ОстаточнаяСтоимость = Макс(0, ПервоначальнаяСтоимостьУСН - СуммаНачисленнойАмортизации);
			ОплаченнаяСтоимость = 0;
			ОплаченнаяОстаточнаяСтоимость = 0;
		КонецЕсли;
		
		Если СтруктураШапкиДокумента.Дата >= Дата("20060101") И (НЕ ЗначениеЗаполнено(СтрокаРезультата.ДокументМодернизации)) Тогда  
			
			Если СтрокаРезультата.ПорядокВключенияСтоимостиВСоставРасходовУСН = Перечисления.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ВключитьВСоставРасходов Тогда
				
				Если ДатаВвода >= НачалоКвартала(Дата) Тогда
					СуммаОплаты = СтрокаРезультата.СуммаОплатыОборот;
					ОплаченнаяСтоимость = ОплаченнаяСтоимость + СуммаОплаты;
					Если ОплаченнаяСтоимость > ПервоначальнаяСтоимостьУСН Тогда
						Превышение = ОплаченнаяСтоимость - ПервоначальнаяСтоимостьУСН;
						СуммаОплаты = СуммаОплаты - Превышение;
						ТекстСообщения = "По "+ Строка(ТекОС) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты ОС !";
						ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
					КонецЕсли;
					Если СуммаОплаты > 0 Тогда
						ВключитьВРасходыПрочее(СтруктураШапкиДокумента, ТекОС, СтрокаРезультата, СуммаОплаты);
					КонецЕсли;
				Иначе
					СуммаОплаты = СтрокаРезультата.СуммаОплатыОборот;
					ОплаченнаяСтоимость = ОплаченнаяСтоимость + СуммаОплаты;
					Если СтрокаРезультата.ДатаОплаты < НачалоКвартала(Дата) Тогда
						Продолжить;
					КонецЕсли;
					Если ОплаченнаяСтоимость > ПервоначальнаяСтоимостьУСН Тогда
						Превышение = ОплаченнаяСтоимость - ПервоначальнаяСтоимостьУСН;
						СуммаОплаты = СуммаОплаты - Превышение;
						ТекстСообщения = "По "+ Строка(ТекОС) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты ОС !";
						ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
					КонецЕсли;
					Если СуммаОплаты > 0 Тогда
						ВключитьВРасходыПрочее(СтруктураШапкиДокумента, ТекОС, СтрокаРезультата, СуммаОплаты);
					КонецЕсли;
				КонецЕсли;
				
				Продолжить;
				
			ИначеЕсли СтрокаРезультата.ПорядокВключенияСтоимостиВСоставРасходовУСН = Перечисления.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.НеВключатьВСоставРасходов Тогда
				
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если ДатаПриобретения >= мДатаПереходаНаУСН Тогда
			
			Если Дата >= Дата("20060101") Тогда
				НачДатаОплат = НачалоГода(Дата);
			Иначе
				НачДатаОплат = НачалоКвартала(Дата);
			КонецЕсли;
			
			Если ДатаВвода >= НачДатаОплат Тогда
				СуммаОплаты = СтрокаРезультата.СуммаОплатыОборот;
				ОплаченнаяСтоимость = ОплаченнаяСтоимость + СуммаОплаты;
				Если ОплаченнаяСтоимость > ПервоначальнаяСтоимостьУСН Тогда
					Превышение = ОплаченнаяСтоимость - ПервоначальнаяСтоимостьУСН;
					СуммаОплаты = СуммаОплаты - Превышение;
					ТекстСообщения = "По "+ Строка(ТекОС) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты ОС !";
					ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
				КонецЕсли;
				Параметры = Неопределено;
				Если Дата >= Дата("20060101") Тогда
					СуммаОплаты = РапределитьОплатуПоКварталам(СуммаОплаты, СтрокаРезультата.ДатаОплаты, ДатаВвода, Параметры);
					Параметры.Вставить("ПереходныйПериод", Ложь);
				КонецЕсли;
				Если СуммаОплаты > 0 Тогда
					ВключитьВРасходыОС(СтруктураШапкиДокумента, ТекОС, СтрокаРезультата, СуммаОплаты, ДатаВвода, Параметры);
				КонецЕсли;
			Иначе
				СуммаОплаты = СтрокаРезультата.СуммаОплатыОборот;
				ОплаченнаяСтоимость = ОплаченнаяСтоимость + СуммаОплаты;
				Если СтрокаРезультата.ДатаОплаты < НачДатаОплат Тогда
					Продолжить;
				КонецЕсли;
				Если ОплаченнаяСтоимость > ПервоначальнаяСтоимостьУСН Тогда
					Превышение = ОплаченнаяСтоимость - ПервоначальнаяСтоимостьУСН;
					СуммаОплаты = СуммаОплаты - Превышение;
					ТекстСообщения = "По "+ Строка(ТекОС) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты ОС !";
					ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
				КонецЕсли;
				Параметры = Неопределено;
				Если Дата >= Дата("20060101") Тогда
					СуммаОплаты = РапределитьОплатуПоКварталам(СуммаОплаты, СтрокаРезультата.ДатаОплаты, ДатаВвода, Параметры);
					Параметры.Вставить("ПереходныйПериод", Ложь);
				КонецЕсли;
				Если СуммаОплаты > 0 Тогда
					ВключитьВРасходыОС(СтруктураШапкиДокумента, ТекОС, СтрокаРезультата, СуммаОплаты, ДатаВвода, Параметры);
				КонецЕсли;
			КонецЕсли;
		Иначе
			
			ОплаченнаяСтоимость = ОплаченнаяСтоимость + СтрокаРезультата.СуммаОплатыОборот;
			ЧастьОстаточнойСтоимости = ОстаточнаяСтоимость*(ОплаченнаяСтоимость/ПервоначальнаяСтоимостьУСН) - ОплаченнаяОстаточнаяСтоимость;
			ОплаченнаяОстаточнаяСтоимость = ОплаченнаяОстаточнаяСтоимость + ЧастьОстаточнойСтоимости;
			
			Если ОплаченнаяОстаточнаяСтоимость > ОстаточнаяСтоимость Тогда
				Превышение = ОплаченнаяОстаточнаяСтоимость - ОстаточнаяСтоимость;
				ОплаченнаяОстаточнаяСтоимость=ОплаченнаяОстаточнаяСтоимость - превышение;
				ЧастьОстаточнойСтоимости=ЧастьОстаточнойСтоимости - Превышение;
				ТекстСообщения = "По "+ Строка(ТекОС) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты ОС !";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
			КонецЕсли;
			
			Если ЧастьОстаточнойСтоимости > 0 Тогда
				ФормированиеРасходов(СтруктураШапкиДокумента, ТекОС, ЧастьОстаточнойСтоимости, СтрокаРезультата, ДатаВвода);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
				
КонецПроцедуры

Процедура ПризнаниеРасходовНаПриобретениеНМАУСН(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Если НЕ СтруктураШапкиДокумента.ПризнаниеРасходовНаПриобретениеНМАУСН Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",       СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ДатаПереходаНаУСН", мДатаПереходаНаУСН);
	Запрос.УстановитьПараметр("НачПериода",        мНачГода);
	Запрос.УстановитьПараметр("НачКвартала",       НачалоКвартала(Дата));
	Запрос.УстановитьПараметр("КонДата",           мКонДата);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.НематериальныйАктив КАК НематериальныйАктив,
	|	ОплатыНМАДляУСНОбороты.ДатаОплаты КАК ДатаОплаты,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.ПервоначальнаяСтоимостьУСН,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.СуммаНачисленнойАмортизации,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.СрокПолезногоИспользования,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.ДатаПриобретения,
	|	СУММА(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовНМАОбороты.Графа13_СуммаРасходовЗаКварталОборот ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ КнигаУчетаДоходовИРасходовНМАОбороты.Графа13_СуммаРасходовЗаКварталОборот
	|		КОНЕЦ) КАК СуммаРасходовВсего,
	|	СУММА(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовНМАОборотыГод.Графа13_СуммаРасходовЗаКварталОборот ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ КнигаУчетаДоходовИРасходовНМАОборотыГод.Графа13_СуммаРасходовЗаКварталОборот
	|		КОНЕЦ) КАК СуммаРасходовЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовНМАОборотыКв.Графа13_СуммаРасходовЗаКварталОборот ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ КнигаУчетаДоходовИРасходовНМАОборотыКв.Графа13_СуммаРасходовЗаКварталОборот
	|		КОНЕЦ) КАК СуммаРасходовЗаКвартал,
	|	СУММА(ВЫБОР
	|			КОГДА ОплатыНМАДляУСНОбороты.СуммаОплатыОборот ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ОплатыНМАДляУСНОбороты.СуммаОплатыОборот
	|		КОНЕЦ) КАК СуммаОплатыОборот,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходовУСН
	|ИЗ
	|	РегистрНакопления.ОплатыНМАДляУСН.Обороты(, &КонДата, , Организация = &Организация) КАК ОплатыНМАДляУСНОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчетУСН.СрезПоследних(&КонДата, Организация = &Организация) КАК ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних
	|		ПО ОплатыНМАДляУСНОбороты.НематериальныйАктив = ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходовНМА.Обороты(&ДатаПереходаНаУСН, &КонДата, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовНМАОбороты
	|		ПО КнигаУчетаДоходовИРасходовНМАОбороты.НематериальныйАктив = ОплатыНМАДляУСНОбороты.НематериальныйАктив
	|			И КнигаУчетаДоходовИРасходовНМАОбороты.ДатаОплаты = ОплатыНМАДляУСНОбороты.ДатаОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходовНМА.Обороты(&НачПериода, &КонДата, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовНМАОборотыГод
	|		ПО КнигаУчетаДоходовИРасходовНМАОборотыГод.НематериальныйАктив = ОплатыНМАДляУСНОбороты.НематериальныйАктив
	|			И КнигаУчетаДоходовИРасходовНМАОборотыГод.ДатаОплаты = ОплатыНМАДляУСНОбороты.ДатаОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходовНМА.Обороты(&НачКвартала, &КонДата, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовНМАОборотыКв
	|		ПО КнигаУчетаДоходовИРасходовНМАОборотыКв.НематериальныйАктив = ОплатыНМАДляУСНОбороты.НематериальныйАктив
	|			И КнигаУчетаДоходовИРасходовНМАОборотыКв.ДатаОплаты = ОплатыНМАДляУСНОбороты.ДатаОплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.НематериальныйАктив,
	|	ОплатыНМАДляУСНОбороты.ДатаОплаты,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.ПервоначальнаяСтоимостьУСН,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.СуммаНачисленнойАмортизации,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.СрокПолезногоИспользования,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.ДатаПриобретения,
	|	ПервоначальныеСведенияНМАНалоговыйУчетУСНСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходовУСН
	|
	|УПОРЯДОЧИТЬ ПО
	|	НематериальныйАктив,
	|	ДатаОплаты";
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	ТекНМА = "";
	Для Каждого СтрокаРезультата ИЗ ТаблицаРезультата Цикл
		Если СтрокаРезультата.НематериальныйАктив = ТекНМА Тогда
			//
		Иначе
			ТекНМА = СтрокаРезультата.НематериальныйАктив;
			ПервоначальнаяСтоимостьУСН = СтрокаРезультата.ПервоначальнаяСтоимостьУСН;
			СуммаНачисленнойАмортизации = СтрокаРезультата.СуммаНачисленнойАмортизации;
			СрокПолезногоИспользования = СтрокаРезультата.СрокПолезногоИспользования;
			ДатаПриобретения = СтрокаРезультата.ДатаПриобретения;
			
			ДокРегистратор   = Неопределено;
			ДатаВвода		 = Неопределено;
			УправлениеВнеоборотнымиАктивами.ПолучитьДокументБухСостоянияНМА(ТекНМА, СтруктураШапкиДокумента.Организация,
			                            Перечисления.ВидыСостоянийНМА.ПринятКУчету, 
			                            ДокРегистратор, ДатаВвода);
			Если НЕ ЗначениеЗаполнено(ДатаВвода) Тогда
                ТекНМА = "";
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ПервоначальнаяСтоимостьУСН) Тогда
                ТекНМА = "";
				Продолжить;
			КонецЕсли;
			
			ОстаточнаяСтоимость = Макс(0, ПервоначальнаяСтоимостьУСН - СуммаНачисленнойАмортизации);
			ОплаченнаяСтоимость = 0;
			ОплаченнаяОстаточнаяСтоимость = 0;
		КонецЕсли;
		
		Если СтруктураШапкиДокумента.Дата >= Дата("20060101") Тогда  
			
			Если СтрокаРезультата.ПорядокВключенияСтоимостиВСоставРасходовУСН = Перечисления.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.ВключитьВСоставРасходов Тогда
				
				Если ДатаВвода >= НачалоКвартала(Дата) Тогда
					СуммаОплаты = СтрокаРезультата.СуммаОплатыОборот;
					ОплаченнаяСтоимость = ОплаченнаяСтоимость + СуммаОплаты;
					Если ОплаченнаяСтоимость > ПервоначальнаяСтоимостьУСН Тогда
						Превышение = ОплаченнаяСтоимость - ПервоначальнаяСтоимостьУСН;
						СуммаОплаты = СуммаОплаты - Превышение;
						ТекстСообщения = "По "+ Строка(ТекНМА) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты НМА !";
						ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
					КонецЕсли;
					Если СуммаОплаты > 0 Тогда
						ВключитьВРасходыПрочее(СтруктураШапкиДокумента, ТекНМА, СтрокаРезультата, СуммаОплаты);
					КонецЕсли;
				Иначе
					СуммаОплаты = СтрокаРезультата.СуммаОплатыОборот;
					ОплаченнаяСтоимость = ОплаченнаяСтоимость + СуммаОплаты;
					Если СтрокаРезультата.ДатаОплаты < НачалоКвартала(Дата) Тогда
						Продолжить;
					КонецЕсли;
					Если ОплаченнаяСтоимость > ПервоначальнаяСтоимостьУСН Тогда
						Превышение = ОплаченнаяСтоимость - ПервоначальнаяСтоимостьУСН;
						СуммаОплаты = СуммаОплаты - Превышение;
						ТекстСообщения = "По "+ Строка(ТекНМА) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты НМА !";
						ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
					КонецЕсли;
					Если СуммаОплаты > 0 Тогда
						ВключитьВРасходыПрочее(СтруктураШапкиДокумента, ТекНМА, СтрокаРезультата, СуммаОплаты);
					КонецЕсли;
				КонецЕсли;
				
				Продолжить;
				
			ИначеЕсли СтрокаРезультата.ПорядокВключенияСтоимостиВСоставРасходовУСН = Перечисления.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН.НеВключатьВСоставРасходов Тогда
				
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если ДатаПриобретения >= мДатаПереходаНаУСН Тогда
			
			Если Дата >= Дата("20060101") Тогда
				НачДатаОплат = НачалоГода(Дата);
			Иначе
				НачДатаОплат = НачалоКвартала(Дата);
			КонецЕсли;
			
			Если ДатаВвода >= НачДатаОплат Тогда
				СуммаОплаты = СтрокаРезультата.СуммаОплатыОборот;
				ОплаченнаяСтоимость = ОплаченнаяСтоимость + СуммаОплаты;
				Если ОплаченнаяСтоимость > ПервоначальнаяСтоимостьУСН Тогда
					Превышение = ОплаченнаяСтоимость - ПервоначальнаяСтоимостьУСН;
					СуммаОплаты = СуммаОплаты - Превышение;
					ТекстСообщения = "По "+ Строка(ТекНМА) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты НМА !";
					ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
				КонецЕсли;
				Параметры = Неопределено;
				Если Дата >= Дата("20060101") Тогда
					СуммаОплаты = РапределитьОплатуПоКварталам(СуммаОплаты, СтрокаРезультата.ДатаОплаты, ДатаВвода, Параметры);
					Параметры.Вставить("ПереходныйПериод", Ложь);
				КонецЕсли;
				Если СуммаОплаты > 0 Тогда
					ВключитьВРасходыНМА(СтруктураШапкиДокумента, ТекНМА, СтрокаРезультата, СуммаОплаты, ДатаВвода, Параметры);
				КонецЕсли;
			Иначе
				СуммаОплаты = СтрокаРезультата.СуммаОплатыОборот;
				ОплаченнаяСтоимость = ОплаченнаяСтоимость + СуммаОплаты;
				Если СтрокаРезультата.ДатаОплаты < НачДатаОплат Тогда
					Продолжить;
				КонецЕсли;
				Если ОплаченнаяСтоимость > ПервоначальнаяСтоимостьУСН Тогда
					Превышение = ОплаченнаяСтоимость - ПервоначальнаяСтоимостьУСН;
					СуммаОплаты = СуммаОплаты - Превышение;
					ТекстСообщения = "По "+ Строка(ТекНМА) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты НМА !";
					ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
				КонецЕсли;
				Параметры = Неопределено;
				Если Дата >= Дата("20060101") Тогда
					СуммаОплаты = РапределитьОплатуПоКварталам(СуммаОплаты, СтрокаРезультата.ДатаОплаты, ДатаВвода, Параметры);
					Параметры.Вставить("ПереходныйПериод", Ложь);
				КонецЕсли;
				Если СуммаОплаты > 0 Тогда
					ВключитьВРасходыНМА(СтруктураШапкиДокумента, ТекНМА, СтрокаРезультата, СуммаОплаты, ДатаВвода, Параметры);
				КонецЕсли;
			КонецЕсли;
		Иначе
			
			ОплаченнаяСтоимость = ОплаченнаяСтоимость + СтрокаРезультата.СуммаОплатыОборот;
			ЧастьОстаточнойСтоимости = ОстаточнаяСтоимость*(ОплаченнаяСтоимость/ПервоначальнаяСтоимостьУСН) - ОплаченнаяОстаточнаяСтоимость;
			ОплаченнаяОстаточнаяСтоимость = ОплаченнаяОстаточнаяСтоимость + ЧастьОстаточнойСтоимости;
			
			Если ОплаченнаяОстаточнаяСтоимость > ОстаточнаяСтоимость Тогда
				Превышение = ОплаченнаяОстаточнаяСтоимость - ОстаточнаяСтоимость;
				ОплаченнаяОстаточнаяСтоимость=ОплаченнаяОстаточнаяСтоимость - превышение;
				ЧастьОстаточнойСтоимости=ЧастьОстаточнойСтоимости - Превышение;
				ТекстСообщения = "По "+ Строка(ТекНМА) + " "+СтрокаРезультата.ДатаОплаты+" Оплата превысила первоначальную стоимость! Проверьте документы оплаты НМА !";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, , ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект));
			КонецЕсли;
			
			Если ЧастьОстаточнойСтоимости > 0 Тогда
				ФормированиеРасходовНМА(СтруктураШапкиДокумента, ТекНМА, ЧастьОстаточнойСтоимости, СтрокаРезультата, ДатаВвода);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
				
КонецПроцедуры

//Распределение расходов по видам деятельности

Процедура РаспределениеРасходовПоВидамДеятельности(СтруктураШапкиДокумента, Отказ, Заголовок)

	Если НЕ СтруктураШапкиДокумента.РаспределениеРасходовПоВидамДеятельности Тогда
		Возврат;
	КонецЕсли;
	
	// Процедура выполняется в том случае, если организация является плательщиком ЕНВД.
	Если НЕ мУчетнаяПолитикаНУ.ОрганизацияЯвляетсяПлательщикомЕНВД Тогда 
		Возврат;
	КонецЕсли;

	мКУДиР.Записать();

	ЭтапПроведения  = 2;
	НалоговыйУчетУСН.ОтразитьВУСН(Ссылка, "РаспределениеЕНВД",,ЭтапПроведения);

КонецПроцедуры

Процедура СписаниеДопРасходовУСН(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Если НЕ СтруктураШапкиДокумента.СписаниеДопРасходовУСН Тогда
		Возврат;
	КонецЕсли;
	
	мКУДиР.Записать();
	
	НалоговыйУчетУСН.ОтразитьВУСН(Ссылка, "СписаниеТЗР",,1);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация, ПериодРегистрации");

	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Выполняет движения по регистрам 
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок)

	мНачДата      = НачалоКвартала(ПериодРегистрации);
	мКонДата      = КонецКвартала(ПериодРегистрации);
	мНачГода      = НачалоГода(ПериодРегистрации);
	мУчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(мКонДата, СтруктураШапкиДокумента.Организация, "Нал");
    Если НЕ ЗначениеЗаполнено(мУчетнаяПолитикаНУ) Тогда
		Отказ = Истина;
	КонецЕсли; 
	мДатаПереходаНаУСН = мУчетнаяПолитикаНУ.ДатаПереходаНаУСН;
	мКУДиР             = Движения.КнигаУчетаДоходовИРасходов;
	мКУДиР_ОС          = Движения.КнигаУчетаДоходовИРасходовОС;
	мКУДиР_НМА         = Движения.КнигаУчетаДоходовИРасходовНМА;

	ПризнаниеРасходовНаПриобретениеОСУСН(СтруктураШапкиДокумента, Отказ, Заголовок);

	ПризнаниеРасходовНаПриобретениеНМАУСН(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	СписаниеДопРасходовУСН(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	РаспределениеРасходовПоВидамДеятельности(СтруктураШапкиДокумента, Отказ, Заголовок);

	ЗаписьРегистрации = ПринадлежностьПоследовательностям.НалоговыйУчетУСН.Добавить();
	ЗаписьРегистрации.Организация = Организация;
	ЗаписьРегистрации.Период      = ПериодРегистрации;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ)

	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	Заголовок = "";
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);

	Если Не Отказ Тогда
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью



