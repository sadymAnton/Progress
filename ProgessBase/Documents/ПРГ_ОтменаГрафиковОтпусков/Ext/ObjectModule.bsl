
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	// регистр ПРГ_ОтмененыеГрафикиОтпусков
	Движения.ПРГ_ОтмененыеГрафикиОтпусков.Записывать = Истина;
	Движения.ПРГ_ОтмененыеГрафикиОтпусков.Очистить();
	Движения.ГрафикОтпусковОрганизаций.Записывать = Истина;
	Движения.ГрафикОтпусковОрганизаций.Очистить();

	Для Каждого ТекСтрокаРаботникиОрганизации Из РаботникиОрганизации Цикл
		Движение = Движения.ПРГ_ОтмененыеГрафикиОтпусков.Добавить();
		Движение.Период = ТекСтрокаРаботникиОрганизации.ДатаНачала;
		Движение.Сотрудник = ТекСтрокаРаботникиОрганизации.Сотрудник;
		Движение.ДатаОкончания = ТекСтрокаРаботникиОрганизации.ДатаОкончания;
		Если ЗначениеЗаполнено(ТекСтрокаРаботникиОрганизации.ДатаНачалаНового) и ЗначениеЗаполнено(ТекСтрокаРаботникиОрганизации.ДатаОкончанияНового) тогда
			// отразим начало
			Движение = Движения.ГрафикОтпусковОрганизаций.Добавить();
			
			// Свойства
			Движение.Период			= ТекСтрокаРаботникиОрганизации.ДатаНачалаНового;
			
			// Измерения
			Движение.Сотрудник		= ТекСтрокаРаботникиОрганизации.Сотрудник;
			Движение.Организация	= Организация;
			
			// Ресурсы
			Движение.Состояние		= Перечисления.ТипыПериодическихЗадачРаботника.ОтпускЕжегодный;
			
			// Реквизиты
			Движение.ДатаОкончания	= КонецДня(ТекСтрокаРаботникиОрганизации.ДатаОкончанияНового);
			
			
			// и окончание отпуска
			Движение = Движения.ГрафикОтпусковОрганизаций.Добавить();
			
			// Свойства
			Движение.Период			= ТекСтрокаРаботникиОрганизации.ДатаОкончанияНового + 86400 - 1;
			
			// Измерения
			Движение.Сотрудник		= ТекСтрокаРаботникиОрганизации.Сотрудник;
			Движение.Организация	= Организация;
			
			// Ресурсы
			Движение.Состояние		= Перечисления.ТипыПериодическихЗадачРаботника.Свободен;
			
			
			
		Конецесли;	
		
	КонецЦикла;
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
