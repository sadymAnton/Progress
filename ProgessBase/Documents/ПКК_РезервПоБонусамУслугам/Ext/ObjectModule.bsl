 Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение, не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация");

	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Процедура формирует структуру шапки документа и дополнительных полей.
//
Процедура ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, РежимПроведения = Неопределено) Экспорт
	
	Если РежимПроведения = Неопределено Тогда
		РежимПроведения = РежимПроведенияДокумента.Неоперативный;
	КонецЕсли;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = "Проведение документа """ + СокрЛП(Ссылка) + """: ";

	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	СтруктураШапкиДокумента.Вставить("РежимПроведения", РежимПроведения);
	
КонецПроцедуры // ПодготовитьСтруктуруШапкиДокумента()

// Процедура формирует таблицы документа.
//
Процедура ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, Таблица) Экспорт
	
	// Получим необходимые данные для проведения и проверки заполнения данные по табличной части.
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("НачПериод"				, "НачПериод");
	СтруктураПолей.Вставить("КонПериод"        		, "КонПериод");
	СтруктураПолей.Вставить("Контрагент"			, "Контрагент");
    СтруктураПолей.Вставить("Договор" 				, "Договор");
	СтруктураПолей.Вставить("График"				, "График");
	СтруктураПолей.Вставить("Дата"					, "Дата");
	СтруктураПолей.Вставить("ТипБонуса"        		, "ТипБонуса");
	СтруктураПолей.Вставить("Бонус"					, "Бонус");
	СтруктураПолей.Вставить("РезервБезНДС"			, "РезервБезНДС");
    СтруктураПолей.Вставить("СтавкаНДС" 			, "СтавкаНДС");
	СтруктураПолей.Вставить("РезервСНДС"			, "РезервСНДС");
	СтруктураПолей.Вставить("Дивизион" 			    , "Дивизион");
	СтруктураПолей.Вставить("Вывеска"			    , "Вывеска");
    //{18.07.2016 Островерхий заявка №54238 
	СтруктураПолей.Вставить("РасшифровкаБюджетаРетробонусов"			    , "РасшифровкаБюджетаРетробонусов"); 
	//18.07.2016 Островерхий} 
	//{04.07.2017 Островерхий заявка №64688 
	СтруктураПолей.Вставить("Проект"			    , "Проект");
	СтруктураПолей.Вставить("КатегорияКлиента"		, "КатегорияКлиента");
	//04.07.2017 Островерхий} 
	РезультатЗапроса = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ТабличнаяЧасть", СтруктураПолей);
	
	// Подготовим таблицу заданий для проведения.
	Таблица = РезультатЗапроса.Выгрузить();
	
КонецПроцедуры // СформироватьТаблицыДокумента()

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок, СтруктураШапкиДокумента, Таблица;
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, РежимПроведения);
		
	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, Таблица);
		
	// Движения по документу
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, Таблица, Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры

// По результату запроса по шапке документа формируем движения по регистрам.
//
// Параметры: 
//  РежимПроведения           - режим проведения документа (оперативный или неоперативный),
//  СтруктураШапкиДокумента   - выборка из результата запроса по шапке документа,
//  ТаблицаНакладные          - таблица значений, содержащая данные для проведения и проверки ТЧ Накладные
//  ТаблицаПоручений          - таблица значений, содержащая данные для проведения и проверки ТЧ ДополнительныеПоручения,
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, Таблица, Отказ, Заголовок)

	НаборДвижений = Движения.ПКК_РезервПоБонусамУслугам;
	ТаблицаДвижений	= НаборДвижений.ВыгрузитьКолонки();
	ТаблицаДвижений.Очистить();
	
	Для каждого Строка Из Таблица Цикл
		Движение = ТаблицаДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, СтруктураШапкиДокумента);
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		Движение.Регистратор = ЭтотОбъект.Ссылка;
	КонецЦикла;
	  	
	НаборДвижений.мТаблицаДвижений  = ТаблицаДвижений;
	НаборДвижений.мПериод			= КонецМесяца(ПериодМес);
	
	Движения.ПКК_РезервПоБонусамУслугам.ВыполнитьДвижения();
	НаборДвижений.Записать();
		
КонецПроцедуры // ДвиженияПоРегистрам()

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
				 		
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры

Процедура ЗагрузитьТаблицуРетробонусов(ТЗ) Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.Вывеска,
		|	Таблица.Комментарий,
		|	Таблица.Контрагент,
		|	Таблица.Показатель,
		|	Таблица.РасшифровкаБюджетаРетробонусов,
		|	Таблица.Брендообъем,
		|	Таблица.СтатьяДвиженияДенежныхСредств,
		|	Таблица.Дивизион,
		|	Таблица.Бонус,
		|	Таблица.Период,
		|	Таблица.Проект,
		|	Таблица.КатегорияКлиента
		|ПОМЕСТИТЬ втТаблица
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблица.Дивизион,
		|	ПРГДивизионы.Ссылка КАК ДивизионСсылка,
		|	втТаблица.Вывеска,
		|	НСИ_Вывески.Ссылка КАК ВывескаСсылка,
		|	втТаблица.Контрагент,
		|	Контрагенты.Ссылка КАК КонтрагентСсылка,
		|	втТаблица.РасшифровкаБюджетаРетробонусов КАК РасшифровкаБюджетаРетробонусов,
		|	ПРГРасшифровкаБюджетаРетробонусов.Ссылка КАК РасшифровкаБюджетаРетробонусовСсылка,
		|	втТаблица.Брендообъем,
		|	НСИ_Брендообъемы.Ссылка КАК БрендообъемСсылка,
		|	втТаблица.Бонус,
		|	ПКК_Бонусы.Ссылка КАК БонусСсылка,
		|	СтатьиДвиженияДенежныхСредств.Ссылка КАК СтатьяДвиженияДенежныхСредствСсылка,
		|	втТаблица.СтатьяДвиженияДенежныхСредств,
		|	втТаблица.Комментарий,
		|	втТаблица.Показатель КАК Показатель,
		|	втТаблица.Период,
		|	ПРГ_ПроектыГП.Ссылка КАК Проект,
		|	ЕСТЬNULL(НСИ_КаналыПродаж.Ссылка, Контрагенты.НСИ_КаналПродаж) КАК КатегорияКлиента
		|ИЗ
		|	втТаблица КАК втТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НСИ_Вывески КАК НСИ_Вывески
		|		ПО втТаблица.Вывеска = НСИ_Вывески.Наименование
		|			И (НЕ НСИ_Вывески.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО втТаблица.Контрагент = Контрагенты.Код
		|			И (НЕ Контрагенты.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПРГРасшифровкаБюджетаРетробонусов КАК ПРГРасшифровкаБюджетаРетробонусов
		|		ПО втТаблица.РасшифровкаБюджетаРетробонусов = ПРГРасшифровкаБюджетаРетробонусов.Наименование
		|			И (НЕ ПРГРасшифровкаБюджетаРетробонусов.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НСИ_Брендообъемы КАК НСИ_Брендообъемы
		|		ПО втТаблица.Брендообъем = НСИ_Брендообъемы.Наименование
		|			И (НЕ НСИ_Брендообъемы.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
		|		ПО втТаблица.СтатьяДвиженияДенежныхСредств = СтатьиДвиженияДенежныхСредств.ФинКод
		|			И (НЕ СтатьиДвиженияДенежныхСредств.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПРГДивизионы КАК ПРГДивизионы
		|		ПО втТаблица.Дивизион = ПРГДивизионы.Код
		|			И (НЕ ПРГДивизионы.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПКК_Бонусы КАК ПКК_Бонусы
		|		ПО втТаблица.Бонус = ПКК_Бонусы.Наименование
		|			И (НЕ ПКК_Бонусы.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПРГ_ПроектыГП КАК ПРГ_ПроектыГП
		|		ПО втТаблица.Проект = ПРГ_ПроектыГП.Код
		|			И (НЕ ПРГ_ПроектыГП.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НСИ_КаналыПродаж КАК НСИ_КаналыПродаж
		|		ПО втТаблица.КатегорияКлиента = НСИ_КаналыПродаж.Код
		|			И (НЕ НСИ_КаналыПродаж.ПометкаУдаления)
		|ИТОГИ
		|	СУММА(Показатель)
		|ПО
		|	КонтрагентСсылка,
		|	РасшифровкаБюджетаРетробонусов,
		|	РасшифровкаБюджетаРетробонусовСсылка";

	Запрос.УстановитьПараметр("Таблица",ТЗ);

	Результат = Запрос.Выполнить();
	
	ВыборкаКонтрагент = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
	
		ВыборкаРасшифровкаБюджетаРетробонусов = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаРасшифровкаБюджетаРетробонусов.Следующий() Цикл
			
			тНоваяСтрокаДДС = ТабличнаяЧасть.Добавить();
			
			ВыборкаРасшифровкаБюджетаРетробонусовСсылка = ВыборкаРасшифровкаБюджетаРетробонусов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаРасшифровкаБюджетаРетробонусовСсылка.Следующий() Цикл
				
				ВыборкаДетальныеЗаписи = ВыборкаРасшифровкаБюджетаРетробонусовСсылка.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					тНоваяСтрокаДДС.Вывеска = ВыборкаДетальныеЗаписи.ВывескаСсылка;
					тНоваяСтрокаДДС.Контрагент = ВыборкаДетальныеЗаписи.КонтрагентСсылка;
					//тНоваяСтрокаДДС.СтатьяДвиженияДенежныхСредств = ВыборкаДетальныеЗаписи.СтатьяДвиженияДенежныхСредствСсылка;
					//тНоваяСтрокаДДС.Комментарий = ВыборкаДетальныеЗаписи.Брендообъем;
					тНоваяСтрокаДДС.Дивизион = ВыборкаДетальныеЗаписи.ДивизионСсылка;
					тНоваяСтрокаДДС.Бонус = ВыборкаДетальныеЗаписи.БонусСсылка;
					тНоваяСтрокаДДС.ТипБонуса = тНоваяСтрокаДДС.Бонус.ТипБонуса;
					тНоваяСтрокаДДС.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
					//{10.08.2016 Островерхий заявка №55174 
					//тНоваяСтрокаДДС.НачПериод = НачалоМесяца(ПериодМес);
					//тНоваяСтрокаДДС.КонПериод = КонецМесяца(ПериодМес);
					тЧислоМесяцев = Число(ВыборкаДетальныеЗаписи.Период);
					тЧислоМесяцев = ?(тЧислоМесяцев > 1,тЧислоМесяцев-1,тЧислоМесяцев);
					тНоваяСтрокаДДС.НачПериод = ДобавитьМесяц(НачалоГода(ТекущаяДата()), тЧислоМесяцев);
					тНоваяСтрокаДДС.КонПериод = КонецМесяца(тНоваяСтрокаДДС.НачПериод);
					//10.08.2016 Островерхий} 
					//{05.07.2017 Островерхий заявка №64688 
					тНоваяСтрокаДДС.Проект = ВыборкаДетальныеЗаписи.Проект;
					тНоваяСтрокаДДС.КатегорияКлиента = ВыборкаДетальныеЗаписи.КатегорияКлиента;
					//05.07.2017 Островерхий} 
					
					тНоваяСтрокаДДС.РасшифровкаБюджетаРетробонусов = ВыборкаДетальныеЗаписи.РасшифровкаБюджетаРетробонусовСсылка;
					
				КонецЦикла;
				
			КонецЦикла; 
			
			тНоваяСтрокаДДС.РезервСНДС = ВыборкаРасшифровкаБюджетаРетробонусов.Показатель;
			тНоваяСтрокаДДС.РезервБезНДС = ВыборкаРасшифровкаБюджетаРетробонусов.Показатель - ВыборкаРасшифровкаБюджетаРетробонусов.Показатель/118*18;
			
		КонецЦикла;	
	
	КонецЦикла; 

КонецПроцедуры


