
/////////////////////////////////////
// XML TREE
/////////////////////////////////////

// ИМПОРТ / ЭКСПОРТ ДЕРЕВА

//Возвращает формат записи файла сведений в виде таблицы с именами и типами полей
//
Функция ПолучитьФорматЗаписи2НДФЛ(Знач МакетФормата, Знач ИмяЗаписи) 

	ТаблицаФормаЗаписи = Новый ТаблицаЗначений;
	ТаблицаФормаЗаписи.Колонки.Добавить("ИмяПоля",ОбщегоНазначенияЗК.ПолучитьОписаниеТиповСтроки(100));
	ТаблицаФормаЗаписи.Колонки.Добавить("ТипДанных",ОбщегоНазначенияЗК.ПолучитьОписаниеТиповСтроки(10));
	ТаблицаФормаЗаписи.Колонки.Добавить("Размер",ОбщегоНазначенияЗК.ПолучитьОписаниеТиповЧисла(5));
	ТаблицаФормаЗаписи.Колонки.Добавить("РазрядностьДробнойЧасти",ОбщегоНазначенияЗК.ПолучитьОписаниеТиповЧисла(5));
	ТаблицаФормаЗаписи.Колонки.Добавить("ЭлементНеОбязателен");

	ОбластьФорматЗаписи = МакетФормата.ПолучитьОбласть(ИмяЗаписи);

	Для НСтр = 1 По ОбластьФорматЗаписи.ВысотаТаблицы Цикл
		
		//имя поля хранится в 4-ой колонке
		ИмяПоля = СокрЛП(ОбластьФорматЗаписи.Область(НСтр, 4).Текст);
		Если ИмяПоля <> "" тогда

			НовоеПоле = ТаблицаФормаЗаписи.Добавить();
			НовоеПоле.ИмяПоля = СокрЛП(ИмяПоля);
			//тип данных хранится во 2-ой колонке	
			НовоеПоле.ТипДанных = ВРЕГ(СокрЛП(ОбластьФорматЗаписи.Область(НСтр, 2).Текст));
			//размер поля хранится в 3-ей колонке	
			СтрРазмерПоля = СокрЛП(ОбластьФорматЗаписи.Область(НСтр, 3).Текст);
			//Если указан размер поля, сохраним его
			Если СтрРазмерПоля<>"" тогда
				ПозицияТочки = Найти(СтрРазмерПоля,".");
				Если ПозицияТочки<>0 тогда
					НовоеПоле.Размер = Число(Лев(СтрРазмерПоля,ПозицияТочки-1));
					НовоеПоле.РазрядностьДробнойЧасти = Число(Сред(СтрРазмерПоля,ПозицияТочки+1));
				Иначе	
					НовоеПоле.Размер = Число(СтрРазмерПоля);
					НовоеПоле.РазрядностьДробнойЧасти = 0;
				КонецЕсли;	 
			КонецЕсли;	 
			//Признак обязательности элемента хранится в 5-й колонке	
			НовоеПоле.ЭлементНеОбязателен = СокрЛП(ОбластьФорматЗаписи.Область(НСтр, 5).Текст) = "Не обязательно";
			
		КонецЕсли;	 

	КонецЦикла;

	Возврат ТаблицаФормаЗаписи;
КонецФункции	 

// Загружает формат набора записей файла сведений о доходах физлиц из заданного табличного документа
//
Функция ЗагрузитьФорматНабораЗаписей(Знач МакетФормата, Знач ИмяНабораЗаписей, ЭтоФизЛицо = Ложь)

	ФорматНабора = Новый Структура();
	
	ОбластьНабораЗаписей = МакетФормата.ПолучитьОбласть(ИмяНабораЗаписей);
	
	Для НСтр = 1 По ОбластьНабораЗаписей.ВысотаТаблицы Цикл
		
		ФорматЗаписи = Новый Структура("ТипДанных, Размер, РазрядностьДробнойЧасти, Поля, Значение");
		
		// имя записи хранится в 4 колонке
		ИмяЗаписи =  СокрЛП(ОбластьНабораЗаписей.Область(НСтр, 4).Текст);
		
		// тип данных хранится во 2 колонке
		ТипДанных = Врег(СокрЛП(ОбластьНабораЗаписей.Область(НСтр, 2).Текст));
		
		Если ТипДанных = "" Тогда// Если тип данных не задан, то встретили строку - группировку
			Продолжить;
		КонецЕсли; 
		
		ПозицияРазделителя = Найти(ТипДанных,"/");
		Если ПозицияРазделителя <> 0 Тогда
			Если ЭтоФизЛицо Тогда
				ТипДанных = Сред(ТипДанных, ПозицияРазделителя + 1)
			Иначе
				ТипДанных = Лев(ТипДанных, ПозицияРазделителя - 1)
			КонецЕсли;	
		КонецЕсли;
		
		ФорматЗаписи.ТипДанных =  ТипДанных;
		
		// размер хранится в 3 колонке
		СтрРазмерПоля =  СокрЛП(ОбластьНабораЗаписей.Область(НСтр, 3).Текст);
		
		Если ФорматЗаписи.ТипДанных = "КОНСТАНТА" тогда
			
			// в колонке "размер" должно указываться значение константы
			ФорматЗаписи.Значение = СтрРазмерПоля;
			
		ИначеЕсли ФорматЗаписи.ТипДанных = "ЧИСЛО" тогда
			
			ПозицияТочки = Найти(СтрРазмерПоля,".");
			Если ПозицияТочки<>0 тогда
				ФорматЗаписи.Размер = Число(Лев(СтрРазмерПоля,ПозицияТочки-1));
				ФорматЗаписи.РазрядностьДробнойЧасти = Число(Сред(СтрРазмерПоля,ПозицияТочки+1));
			Иначе	
				ФорматЗаписи.Размер = Число(СтрРазмерПоля);
				ФорматЗаписи.РазрядностьДробнойЧасти = 0;
			КонецЕсли;	 
			
			ФорматЗаписи.Значение = 0;

		ИначеЕсли ФорматЗаписи.ТипДанных = "СТРОКА" тогда
			
			ФорматЗаписи.Размер = Число(СтрРазмерПоля);
			
			ФорматЗаписи.Значение = "";
			
		ИначеЕсли ФорматЗаписи.ТипДанных = "ДАТА" тогда
			
			ФорматЗаписи.Значение = Дата('00010101');
			
		ИначеЕсли ФорматЗаписи.ТипДанных = "ТАБЛИЦА" тогда	
			
			// имя области-описания формата полей таблицы или структуры хранится в колонке размер
			ФорматЗаписи.Поля = ПолучитьФорматЗаписи2НДФЛ(МакетФормата, СтрРазмерПоля);
			ФорматЗаписи.Значение = Новый ТаблицаЗначений;
			
			Для каждого Поле Из ФорматЗаписи.Поля Цикл
				
				Если Поле.ТипДанных = "ЧИСЛО" Тогда
					ОписаниеТиповПоля = ОбщегоНазначенияЗК.ПолучитьОписаниеТиповЧисла(Поле.Размер, Поле.РазрядностьДробнойЧасти);
				ИначеЕсли Поле.ТипДанных = "СТРОКА" Тогда
					ОписаниеТиповПоля = ОбщегоНазначенияЗК.ПолучитьОписаниеТиповСтроки(Поле.Размер);
				ИначеЕсли Поле.ТипДанных = "ДАТА" Тогда
					ОписаниеТиповПоля = ОбщегоНазначенияЗК.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата);
				КонецЕсли; 
				ФорматЗаписи.Значение.Колонки.Добавить(Поле.ИмяПоля, ОписаниеТиповПоля );
			
			КонецЦикла; 
			
			
		ИначеЕсли ФорматЗаписи.ТипДанных = "СТРУКТУРА" тогда	
			
			ПозицияРазделителя = Найти(ИмяЗаписи,"/");
			Если ПозицияРазделителя <> 0 Тогда
				Если ЭтоФизЛицо Тогда
					ИмяЗаписи = Сред(ИмяЗаписи, ПозицияРазделителя + 1)
				Иначе
					ИмяЗаписи = Лев(ИмяЗаписи, ПозицияРазделителя - 1)
				КонецЕсли;	
			КонецЕсли;
			ПозицияРазделителя = Найти(СтрРазмерПоля,"/");
			Если ПозицияРазделителя <> 0 Тогда
				Если ЭтоФизЛицо Тогда
					СтрРазмерПоля = Сред(СтрРазмерПоля, ПозицияРазделителя + 1)
				Иначе
					СтрРазмерПоля = Лев(СтрРазмерПоля, ПозицияРазделителя - 1)
				КонецЕсли;	
			КонецЕсли;
			
			// имя области-описания формата полей таблицы или структуры хранится в колонке размер
			ФорматЗаписи.Поля = ПолучитьФорматЗаписи2НДФЛ(МакетФормата, СтрРазмерПоля);
			ФорматЗаписи.Значение = Новый Структура;
			Для каждого Поле Из ФорматЗаписи.Поля Цикл
				
				ПустоеЗначениеПоля = Неопределено;
				Если Поле.ТипДанных = "ЧИСЛО" Тогда
					ПустоеЗначениеПоля = 0;
				ИначеЕсли Поле.ТипДанных = "ДАТА" Тогда
					ПустоеЗначениеПоля = Дата('00010101');
                Иначе
					ПустоеЗначениеПоля = "";
				КонецЕсли; 
				
				ФорматЗаписи.Значение.Вставить(Поле.ИмяПоля, ПустоеЗначениеПоля);
				
			КонецЦикла; 
			
		ИначеЕсли ФорматЗаписи.ТипДанных = "НАБОРЗАПИСЕЙ" Тогда
			
			// Имя набора записей хранится в третьей колонке
			ИмяНабора = СокрЛП(ОбластьНабораЗаписей.Область(НСтр, 3).Текст);
			ПозицияРазделителя = Найти(ИмяНабора,"/");
			Если ПозицияРазделителя <> 0 Тогда
				Если ЭтоФизЛицо Тогда
					ИмяНабора = Сред(ИмяНабора, ПозицияРазделителя + 1)
				Иначе
					ИмяНабора = Лев(ИмяНабора, ПозицияРазделителя - 1)
				КонецЕсли;	
			КонецЕсли;
			ПозицияРазделителя = Найти(ИмяЗаписи,"/");
			Если ПозицияРазделителя <> 0 Тогда
				Если ЭтоФизЛицо Тогда
					ИмяЗаписи = Сред(ИмяЗаписи, ПозицияРазделителя + 1)
				Иначе
					ИмяЗаписи = Лев(ИмяЗаписи, ПозицияРазделителя - 1)
				КонецЕсли;	
			КонецЕсли;
			ФорматЗаписи.Значение = ЗагрузитьФорматНабораЗаписей(МакетФормата, ИмяНабора, ЭтоФизЛицо);
			
		КонецЕсли;	
		
		ФорматНабора.Вставить(ИмяЗаписи, ФорматЗаписи);
		
	КонецЦикла;	
	
	Возврат ФорматНабора;
	
КонецФункции // ()

// Создает структуру данных справки для переданного ФЛ и заполняет 
//  в этой справке Раздел 2: "Данные о физическом лице - получателе доходов"
//
// Параметры
//  СоответствиеФизЛиц - соответствие, в котором каждому физлицу соответствует его справка
//  ФизЛицо - СправочникСсылка.ФизическиеЛица - физлицо, для которого заполняется справка
//  СтруктураДанныхСправки - дерево значений, описывающее формат справки
//  ДанныеФизЛица - строка выборки из запроса, либо иная структура, содержащая требуемые справкой данные о физлице
//  СтрОшибки - строка, содержит накопленные сообщения об ошибках
//
// Возвращаемое значение:
//   дерево значений - частично заполненная справка
//
Функция ПолучитьПустуюСправкуФизлица(СоответствиеФизЛиц, ФизЛицо, СтруктураДанныхСправки, ДанныеФизЛица, СтрОшибки)
	
	ДанныеОФизлицеДляСправки = СоответствиеФизЛиц[ФизЛицо];
	
	// если ранее справку для этого ФЛ уже заполняли - повторяться не будем
	Если ДанныеОФизлицеДляСправки <> Неопределено Тогда
		Возврат ДанныеОФизлицеДляСправки	
	КонецЕсли;
	
	ДанныеОФизлицеДляСправки = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(СтруктураДанныхСправки);
	
	// Данные о физическом лице - получателе дохода
	НаборЗаписейФизЛицо = ДанныеОФизлицеДляСправки.ПолучДох.Значение;
	
	//  Фамилия, Имя, Отчество
	Фамилия 	= ДанныеФизЛица.Фамилия;
	Имя 		= ДанныеФизЛица.Имя;
	Отчество 	= ДанныеФизЛица.Отчество;
	Если НЕ ЗначениеЗаполнено(Фамилия) И ЗначениеЗаполнено(ДанныеФизЛица.ФизЛицоНаименование) Тогда
		ОбщегоНазначенияЗК.ФамилияИнициалыФизЛица(ДанныеФизЛица.ФизЛицоНаименование,Фамилия,Имя,Отчество);
	КонецЕсли;
	НаборЗаписейФизЛицо.ФИО.Значение.Фамилия = Фамилия;                     
	НаборЗаписейФизЛицо.ФИО.Значение.Имя = Имя;                     
	НаборЗаписейФизЛицо.ФИО.Значение.Отчество = Отчество;
	Если ПустаяСтрока(ДанныеФизЛица.ИНН) Тогда
		НаборЗаписейФизЛицо.Удалить("ИННФЛ");
	Иначе
		НаборЗаписейФизЛицо.ИННФЛ.Значение = ДанныеФизЛица.ИНН;
	КонецЕсли;
	НаборЗаписейФизЛицо.Статус.Значение = ДанныеФизЛица.Статус;
	НаборЗаписейФизЛицо.ДатаРожд.Значение = ДанныеФизЛица.ДатаРождения;
	НаборЗаписейФизЛицо.Гражданство.Значение = ДанныеФизЛица.КодСтраныГражданства;
	
	// Удостоверение личности
	ЗаполнитьЗначенияСвойств(НаборЗаписейФизЛицо.УдЛичн.Значение,ДанныеФизЛица);//  КодУдЛичн, СерНомДок 
	
	// Адреса
	Если ДанныеФизЛица.Статус = 1 И Не ДанныеФизЛица.ЭтоИностранец Тогда 
		ЗаполнитьЗначенияСвойств(НаборЗаписейФизЛицо.АдрМЖРФ.Значение,ДанныеФизЛица); //  Индекс, КодРегион, Район, Город, НасПункт, Улица, Дом, Корп, Кварт
		НаборЗаписейФизЛицо.Удалить("АдрИНО");
	Иначе 
		ЗаполнитьЗначенияСвойств(НаборЗаписейФизЛицо.АдрИНО.Значение,ДанныеФизЛица); // КодСтр, АдрТекст
		НаборЗаписейФизЛицо.Удалить("АдрМЖРФ");
	КонецЕсли;
	
	// проверим персональные данные	физического лица, получившего доходы		
	// ИНН 
	Если Не ПустаяСтрока(ДанныеФизЛица.ИНН) И НЕ РегламентированнаяОтчетность.ИННСоответствуетТребованиям(ДанныеФизЛица.ИНН, Перечисления.ЮрФизЛицо.ФизЛицо) Тогда
		СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- указан неверный ИНН!";	
	КонецЕсли;
	// ФИО
	Если СокрЛП(Фамилия) = "" ИЛИ СокрЛП(Имя) = "" Тогда
		СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- должны быть указаны, как минимум, фамилия и имя физического лица!";
	КонецЕсли; 
	Если ДанныеФизЛица.Статус = 2 Тогда
		Если НЕ СправкиПоНДФЛ.СтрокаНаписанаРусскимиИлиЛатинскими(СтрЗаменить(Фамилия+Имя+Отчество, " ", "")) Тогда
			СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- ФИО физического лица нерезидента должно быть введено только русскими или только латинскими буквами!";
		КонецЕсли; 
	Иначе
		Если НЕ РегламентированнаяОтчетность.СтрокаНаписанаПоРусски(Фамилия+Имя+Отчество) Тогда
			СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- ФИО физического лица должно быть введено русскими буквами!";
		КонецЕсли; 
	КонецЕсли;
	// Удостоверение личности
	КодДокумента = СокрЛП(ДанныеФизЛица.КодУдЛичн);
	Если ДанныеФизЛица.ВидДокументаСсылка.Пустая() Тогда
		СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- не указан документ, удостоверяющий личность!";
	Иначе
		Если НЕ ЗначениеЗаполнено(КодДокумента) Тогда
			СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- указан неверный код документа, удостоверяющего личность!";
		Иначе
			Если Число(КодДокумента) < 1 или Число(КодДокумента)>99 Тогда
				СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- указан неверный код документа, удостоверяющего личность!";
			ИначеЕсли	ДанныеФизЛица.ВидДокументаСсылка <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС05
				И	ДанныеФизЛица.ВидДокументаСсылка <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС10
				И	ДанныеФизЛица.ВидДокументаСсылка <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС11
				И	ДанныеФизЛица.ВидДокументаСсылка <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС12
				И	ДанныеФизЛица.ВидДокументаСсылка <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС13
				И	ДанныеФизЛица.ВидДокументаСсылка <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС14
				И	ДанныеФизЛица.ВидДокументаСсылка <> Справочники.ДокументыУдостоверяющиеЛичность.ИМНС91 Тогда
				// Справа от последнего пробела расположен номер документа, слева - серия
				СерияДок = ДанныеФизЛица.СерияДокументаУдЛичн;
				НомерДок = ДанныеФизЛица.НомерДокументаУдЛичн;
				
				СтрОшибкиПроверки = "";
				Если НЕ ПроцедурыПерсонифицированногоУчета.ПроверитьСериюУдостоверенияЛичности(ДанныеФизЛица.ВидДокументаСсылка, СерияДок, СтрОшибкиПроверки) Тогда
					СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- Ошибка в серии удостоверения личности: " + НРег(СтрОшибкиПроверки);
				КонецЕсли; 
				Если НЕ ПроцедурыПерсонифицированногоУчета.ПроверитьНомерУдостоверенияЛичности(ДанныеФизЛица.ВидДокументаСсылка, НомерДок, СтрОшибкиПроверки) Тогда
					СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- Ошибка в номере удостоверения личности: " + НРег(СтрОшибкиПроверки);
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
	// Дата рождения
	Если Не ЗначениеЗаполнено(ДанныеФизЛица.ДатаРождения) Тогда 
		СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- не указана дата рождения!";
	ИначеЕсли ДанныеФизЛица.ДатаРождения > Дата тогда	
		СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- неверно указана дата рождения!";
	КонецЕсли;	
	// Адреса
	Если ДанныеФизЛица.Статус = 1 И Не ДанныеФизЛица.ЭтоИностранец Тогда 			
		
		СтруктураАдресаДляПроверки = Новый Структура("
			|Страна,
			|Индекс,
			|Регион,
			|Район,
			|Город,
			|НаселенныйПункт,
			|Улица,
			|Дом,
			|Корпус,
			|Квартира","","","","","","","","","","");
		
		// Адрес регистрации
		АдресУказан = Ложь;
		ЗаполнитьЗначенияСвойств(СтруктураАдресаДляПроверки,ДанныеФизЛица);	//  Индекс, Регион, Район, Город, НаселенныйПункт, Улица, Дом, Корпус 
		СтруктураАдресаДляПроверки.Квартира = ДанныеФизЛица.Кварт;
		Для каждого Элемент Из СтруктураАдресаДляПроверки Цикл
			Если СокрЛП(Элемент.Значение) <> "" Тогда
				АдресУказан = Истина;
				Прервать;
			КонецЕсли; 	
		КонецЦикла;
		
		Если Не АдресУказан Тогда
			СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + "- не указан адрес регистрации!";
		Иначе
			Если ПустаяСтрока(СтруктураАдресаДляПроверки.Индекс) тогда
				СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + " - в адресе регистрации не указан индекс!";
				СтруктураАдресаДляПроверки.Индекс = "000000";
			КонецЕсли;
			Если НЕ РегламентированнаяОтчетность.АдресСоответствуетТребованиям(СтруктураАдресаДляПроверки) Тогда
				СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + " - указанный адрес регистрации не соответствует требованиям ФНС! Возможно, в адресе присутствуют латинские или недопустимые символы";
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ДанныеФизЛица.Статус = 2 Тогда // Адрес нерезидента
		Если ПустаяСтрока(ДанныеФизЛица.АдрТекст) Тогда
			СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + " - Для физического лица нерезидента или иностранца должен быть заполнен ""Адрес физ. лица за пределами РФ""!";
		ИначеЕсли Не ОбщегоНазначенияЗК.ТолькоЦифрыВСтроке(ДанныеФизЛица.КодСтр) Тогда
			СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + " - неверно указана страна проживания нерезидента (возможно, не заполнен справочник ""Классификатор стран мира"")!";
		КонецЕсли;
	КонецЕсли;	
	
	// запомним справку для повторного исользования
	СоответствиеФизЛиц.Вставить(ФизЛицо,ДанныеОФизлицеДляСправки);

	Возврат ДанныеОФизлицеДляСправки	
	
КонецФункции // Получить()

Функция ИзвлечьФИО(СтрокаДерева,Имя, Режим = "Полное") Экспорт
	СтрокаДанных = СтрокаДерева.Строки.Найти(Имя,"Имя",Истина);
	Если СтрокаДанных = Неопределено Тогда
		Возврат "";
	Иначе
		Если Режим = "Полное" Тогда
			Возврат ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"Фамилия") + " " + ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"Имя") + " " + ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"Отчество");
		Иначе
			Возврат ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"Фамилия") + " " + Лев(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"Имя"),1) + ". " + Лев(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДанных,"Отчество"),1) + ".";
		КонецЕсли;
	КонецЕсли;
КонецФункции

Процедура ВыделитьОдинарныеДанные(СтрокаДерева,Справка) Экспорт

	Если СтрокаДерева.Строки.Количество() = 0 Тогда
		Справка.Параметры[СтрокаДерева.Имя] = ?(СтрокаДерева.Значение = "0.00" Или СтрокаДерева.Значение = "0", "",СтрокаДерева.Значение)
	Иначе
		Для каждого ВложеннаяСтрока Из СтрокаДерева.Строки Цикл
			ВыделитьОдинарныеДанные(ВложеннаяСтрока,Справка)
		КонецЦикла;
	КонецЕсли;	

КонецПроцедуры

/////////////////////////////////////

Процедура ВывестиСообщениеОбУстареванииДокумента(Отказ = Неопределено, Заголовок = Неопределено)

	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	Если Заголовок = Неопределено Тогда
		Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	КонецЕсли;
	СутьРасшифровки = Новый Массив;
	Расшифровка = Новый Массив;
	Если НазначениеСправки = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ДляПередачиВИФНС Тогда
		Расшифровка.Добавить(Новый Структура("Представление,Расшифровка", "Создать реестр справок", Документы.СправкаПоНДФЛВНалоговыйОрган.СоздатьДокумент()));
	Иначе
		Расшифровка.Добавить(Новый Структура("Представление,Расшифровка", "Создать справку", Документы.СправкаПоНДФЛСотруднику.СоздатьДокумент()));
	КонецЕсли;
	ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Начиная с 2010 года справки формируются документом " + ?(НазначениеСправки = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ДляПередачиВИФНС,"Справка 2-НДФЛ для передачи в ИФНС","Справка о доходах (2-НДФЛ) для сотрудников") + "!", Отказ, Заголовок, , Расшифровка);

КонецПроцедуры

// Возвращает форматированное значение числа-суммы для представления в печатных формах
//
Функция СуммаВОтчет(Число) Экспорт
	Возврат Формат(Число, "ЧЦ=11; ЧДЦ=2; ЧРД=.; ЧН=' '; ЧГ=");
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если ТолстыйКлиентОбычноеПриложение Тогда

Процедура ВывестиТабличныеДанные(МассивСтрок, ДокументРезультат, ОбластиМакета, Знач МинимумСтрок, КоличествоКолонок = 2) Экспорт

	ВсегоСтрок = МассивСтрок.Количество();
	
	Для СчКолонок = 1 По КоличествоКолонок Цикл
		ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластиМакета.Получить(СчКолонок - 1));
	КонецЦикла; 
	ЛеваяЧастьМакета = ОбластиМакета.Получить(0);
	
	// Вычислим высоту таблицы
	ВысотаТаблицы = ?(ВсегоСтрок < МинимумСтрок, ВсегоСтрок,?(ВсегоСтрок > МинимумСтрок * КоличествоКолонок, ОбщегоНазначенияЗК.ЦелМаксимальное(ВсегоСтрок / КоличествоКолонок), МинимумСтрок));
	Для Сч = 1 По ВысотаТаблицы Цикл
		ЛеваяСтрока = МассивСтрок.Получить(Сч - 1);
		ВыделитьОдинарныеДанные(ЛеваяСтрока,ЛеваяЧастьМакета);
		
		Если ВсегоСтрок > МинимумСтрок Тогда  // правая часть
			Для СчКолонок = 2 По КоличествоКолонок Цикл
				Если ВысотаТаблицы*(СчКолонок-1) + Сч <= ВсегоСтрок Тогда
					ПраваяСтрока = МассивСтрок.Получить(ВысотаТаблицы*(СчКолонок-1) + Сч - 1);
					ВыделитьОдинарныеДанные(ПраваяСтрока,ОбластиМакета.Получить(СчКолонок - 1));
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		ДокументРезультат.Вывести(ЛеваяЧастьМакета);	
		Для СчКолонок = 2 По КоличествоКолонок Цикл
			ДокументРезультат.Присоединить(ОбластиМакета.Получить(СчКолонок - 1));	
		КонецЦикла; 
		Для СчКолонок = 1 По КоличествоКолонок Цикл
			ФормированиеПечатныхФормЗК.ОчиститьПараметрыОбластиТабличногоДокумента(ОбластиМакета.Получить(СчКолонок - 1));
		КонецЦикла; 
	КонецЦикла;
	
	// довыведем пустые строки раздела
	Если ВысотаТаблицы < МинимумСтрок Тогда
		Для Сч = ВысотаТаблицы + 1 По МинимумСтрок Цикл
			ДокументРезультат.Вывести(ЛеваяЧастьМакета);	
			Для СчКолонок = 2 По КоличествоКолонок Цикл
				ДокументРезультат.Присоединить(ОбластиМакета.Получить(СчКолонок - 1));	
			КонецЦикла; 
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ВывестиТабличныеДанные()

// Формирует имя файла данных о доходах
//
// Параметры
//  Дерево2НДФЛ - дерево значений, соответствующее данным файла
//  ВерсияФормата - строка, версия формата файла
//  ДатаСоставления - дата, дата составления файла
//
// Возвращаемое значение:
//   строка - предписанное нормативным актом имя файла
//
Функция ПолучитьИмяФайла2НДФЛ(Дерево2НДФЛ = Неопределено, ВерсияФормата = Неопределено, Знач ДатаСоставления = Неопределено) Экспорт

	Если Дерево2НДФЛ = Неопределено И ВерсияФормата = Неопределено И ДатаСоставления = Неопределено Тогда
		Возврат "ДОХОД_2НДФЛ_версия_формата_не_поддерживается.xml";
	КонецЕсли;
	
	Если ВерсияФормата = Неопределено Тогда
		ВерсияФормата = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(Дерево2НДФЛ,"ВерсФорм");
	КонецЕсли;
	
	Если ДатаСоставления = Неопределено Тогда
		Если ВерсияФормата = "4.00" Тогда
			ДатаСоставления = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(Дерево2НДФЛ,"Дата");
		ИначеЕсли ВерсияФормата = "4.00001" Тогда
			ДатаСоставления = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(Дерево2НДФЛ,"Дата");
		КонецЕсли;
	КонецЕсли;
		

	Если ВерсияФормата = "4.00" Тогда
		
		Если ОбщегоНазначенияЗКПереопределяемый.ЭтоЮрЛицо(Организация) Тогда
			МММММ = Организация.ИНН + Организация.КПП;// для налогового агента - ЮЛ 
		Иначе	
			МММММ = Организация.ИНН;// для налогового агента - ФЛ
		КонецЕсли; 
		
		// Структура имени файла сведенйи о доходах для ИФНС: ДОХОД_2НДФЛ_P_О_ddmmgggg_N.xml
		Возврат "ДОХОД_2НДФЛ_" + Организация.КодИМНС + "_" + МММММ + "_" + СтрЗаменить(ДатаСоставления,".","") + "_" + ИдентификаторФайла + ".xml";
		
	ИначеЕсли ВерсияФормата = "4.00001" Тогда
		
		Если ОбщегоНазначенияЗКПереопределяемый.ЭтоЮрЛицо(Организация) Тогда
			МММММ = Организация.ИНН + Организация.КПП;// для налогового агента - ЮЛ 
		Иначе	
			МММММ = Организация.ИНН;// для налогового агента - ФЛ
		КонецЕсли; 
		
		ДатаСоставления = СтрЗаменить(Дата,".","");
		// Структура имени файла сведенйи о доходах для ИФНС: ДОХОД_2НДФЛ_P_О_ggggmmdd_N.xml
		Возврат "ДОХОД_2НДФЛ_" + Организация.КодИМНС + "_" + МММММ + "_" + Сред(ДатаСоставления,5,4) + Сред(ДатаСоставления,3,2) + Сред(ДатаСоставления,1,2) + "_" + ИдентификаторФайла + ".xml";
		
	Иначе
		Возврат "ДОХОД_2НДФЛ_версия_формата_не_поддерживается.xml";
	КонецЕсли;

КонецФункции // РаботаСФайлами.ПолучитьИмяФайла()

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(Отказ, Режим = "") Экспорт

	// здесь поддерживаем формирование сведений только в "новом" формате - в соответствии с Приказом ФНС РФ от 13.10.2006 № САЭ-3-04/706@
	
	// Загружаем формат файла сведений
	МакетФормата = ПолучитьМакет("ФорматНДФЛ2006");
	
	ФормироватьСводныеСправки = НазначениеСправки = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуСводно;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ДокументСсылка",Ссылка);
	Запрос.УстановитьПараметр("ИндивидуальныйПредприниматель",Организация.ИндивидуальныйПредприниматель);
	ДатаНачалаНП = НачалоГода(Дата(НалоговыйПериод,1,1));
	ДатаКонцаНП = КонецГода(Дата(НалоговыйПериод,1,1));
	Запрос.УстановитьПараметр("НалоговыйПериод", НалоговыйПериод);
	Запрос.УстановитьПараметр("Это2007год", НалоговыйПериод < 2008);
	Запрос.УстановитьПараметр("Это2008год", НалоговыйПериод = 2008);
	Запрос.УстановитьПараметр("НачалоНП", ДатаНачалаНП);
	Запрос.УстановитьПараметр("КонецНП", ДатаКонцаНП);// последний месяц налогового периода, за который подаём сведения
	Запрос.УстановитьПараметр("НачалоСледующегоНП", ДатаКонцаНП + 1);// начало следующего налогового периода
	Запрос.УстановитьПараметр("ДатаПоДанныхУчета", ?(НазначениеСправки = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ДляПередачиВИФНС,НачалоМесяца(Дата)-1,КонецМесяца(Дата)));
	Запрос.УстановитьПараметр("ДатаКадровыхСведений", КонецДня(Дата));
	Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
	Запрос.УстановитьПараметр("ПустойКПП","");
	
	// Сформируем текст запроса с датами месяцев налогового периода
	// первый месяц
	КонецМесяца = КонецМесяца(ДатаНачалаНП);
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период   ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По 12 Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
    	ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	//-----------------------------------------------------------------------------
	// СВЕДЕНИЯ О НАЛОГОВОМ АГЕНТЕ
	
	ДанныеОНалоговомАгентеТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	Организации.КодИМНС КАК КодИФНСОрганизации,
	|	ВЫБОР
	|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Организации.ИНН
	|		ИНАЧЕ Организации.ГоловнаяОрганизация.ИНН
	|	КОНЕЦ КАК ИНН,
	|	Организации.КПП,
	|	ВЫБОР
	|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Организации.Ссылка
	|		ИНАЧЕ Организации.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Организации.ИНН
	|		ИНАЧЕ Организации.ГоловнаяОрганизация.ИНН
	|	КОНЕЦ КАК ИННЮЛ,
	|	ВЫБОР
	|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Организации.ИНН
	|		ИНАЧЕ Организации.ГоловнаяОрганизация.ИНН
	|	КОНЕЦ КАК ИННФЛ,
	|	Организации.ЮрФизЛицо,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, "" "") КАК Фамилия,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Имя, "" "") КАК Имя,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Отчество, "" "") КАК Отчество,
	|	Организации.КодПоОКАТО КАК КодПоОКАТО
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаКадровыхСведений, ФизЛицо = &ИндивидуальныйПредприниматель) КАК ФИОФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Организации.Ссылка = &Организация";
	
	Запрос.Текст = ДанныеОНалоговомАгентеТекст; 	
	ВыборкаСведенийОбНА = Запрос.Выполнить().Выбрать();
	Если НЕ ВыборкаСведенийОбНА.Следующий() Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не удалось получения сведения о налоговом агенте!", Отказ);
		Возврат "";
	КонецЕсли; 
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ВыборкаСведенийОбНА.ГоловнаяОрганизация);
	ОрганизацияЭтоФизЛицо = Не ОбщегоНазначенияЗКПереопределяемый.ЭтоЮрЛицо(Организация);
	Запрос.УстановитьПараметр("ПоВсемКодамПоОКАТО", ФормироватьСводныеСправки Или ОрганизацияЭтоФизЛицо);
	
	Если ФормироватьСводныеСправки Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|	ТЧРаботникиОрганизации.ПереданоНаВзыскание,
		|	ТЧРаботникиОрганизации.НомерСправки
		|ПОМЕСТИТЬ ВТСправкиОДоходах
		|ИЗ
		|	Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|ГДЕ
		|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	НомерСтроки";
		Запрос.Выполнить();
		
		//-----------------------------------------------------------------------------
		// СВЕДЕНИЯ О ФИЗЛИЦАХ и данные итогового раздела
		
		// ПодтвержденияИмущВычета
		//	Поля:
		//		НомерСтроки
		//		НомерВходящегоДокумента
		//		ДатаУведомления
		//		КодНалоговогоОргана
		//
		//	Описание:
		// для физлиц из документа выбираются данные из введенных подтверждений имущественного вычета
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДатыПодтверждения.ФизЛицо КАК ФизЛицо,
		|	ДатыПодтверждения.НомерСтроки КАК НомерСтроки,
		|	Подтверждение.НомерВходящегоДокумента,
		|	Подтверждение.ДатаУведомления,
		|	Подтверждение.КодНалоговогоОргана
		|ПОМЕСТИТЬ ВТПодтвержденияИмущВычета
		|ИЗ
		|	(ВЫБРАТЬ
		|		СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|		СправкиОДоходах.ФизЛицо КАК ФизЛицо,
		|		МИНИМУМ(Подтверждение.ДатаСобытия) КАК Период
		|	ИЗ
		|		ВТСправкиОДоходах КАК СправкиОДоходах
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НДФЛПодтверждениеПраваНаИмущественныйВычет.РаботникиОрганизации КАК Подтверждение
		|			ПО СправкиОДоходах.ФизЛицо = Подтверждение.ФизЛицо
		|	ГДЕ
		|		Подтверждение.Ссылка.НалоговыйПериод = &НалоговыйПериод
		|		И ВЫБОР
		|				КОГДА Подтверждение.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|					ТОГДА Подтверждение.Ссылка.Организация
		|				ИНАЧЕ Подтверждение.Ссылка.Организация.ГоловнаяОрганизация
		|			КОНЕЦ = &ГоловнаяОрганизация
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СправкиОДоходах.НомерСтроки,
		|		СправкиОДоходах.ФизЛицо) КАК ДатыПодтверждения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НДФЛПодтверждениеПраваНаИмущественныйВычет.РаботникиОрганизации КАК Подтверждение
		|		ПО ДатыПодтверждения.ФизЛицо = Подтверждение.ФизЛицо
		|			И ДатыПодтверждения.Период = Подтверждение.ДатаСобытия
		|			И (ВЫБОР
		|				КОГДА Подтверждение.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|					ТОГДА Подтверждение.Ссылка.Организация
		|				ИНАЧЕ Подтверждение.Ссылка.Организация.ГоловнаяОрганизация
		|			КОНЕЦ = &ГоловнаяОрганизация)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	НомерСтроки";
		Запрос.Выполнить();
		
		// Предоставленные имущественные вычеты
		// СумИмуВыч - суммы предоставленного вычета (т.е. зарегистрированного как предоставленный)
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДФЛИмущественныеВычетыФизлиц.РазмерРасход КАК СумИмуВыч,
		|	НДФЛИмущественныеВычетыФизлиц.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТПредоставленныеИмущественныеВычетыЗаГод
		|ИЗ
		|	РегистрНакопления.НДФЛИмущественныеВычетыФизлиц.Обороты(
		|			&НачалоНП,
		|			&ДатаПоДанныхУчета,
		|			,
		|			Организация = &ГоловнаяОрганизация
		|				И Год = &НалоговыйПериод
		|				И ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТСправкиОДоходах КАК СправкиОДоходах)) КАК НДФЛИмущественныеВычетыФизлиц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
		Запрос.Выполнить();
		
		// Предоставленные стандартные вычеты
		// СумСтНалВыч - суммы предоставленного вычета (т.е. зарегистрированного как предоставленный)
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(НДФЛРасчетыСБюджетом.ПримененныйВычет) КАК СумСтНалВыч,
		|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|	СправкиОДоходах.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТПредоставленныеCтандартныеВычетыЗаГод
		|ИЗ
		|	ВТСправкиОДоходах КАК СправкиОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц КАК НДФЛРасчетыСБюджетом
		|		ПО СправкиОДоходах.ФизЛицо = НДФЛРасчетыСБюджетом.ФизЛицо
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.Период <= &ДатаПоДанныхУчета
		|	И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
		|	И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиОДоходах.НомерСтроки,
		|	СправкиОДоходах.ФизЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(НДФЛРасчетыСБюджетом.ПримененныйВычет) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	НомерСтроки";
		Запрос.Выполнить();
		
		// НачисленныйУдержанныйНалогЗаГодПоСтавкам 
		//
		//	Поля:
		// НачисленоЗаТекущийГод - Начисленный налог за месяцы текущего налогового периода
		// НачисленоЗаВсеГоды - Начисленный налог за всю историю по текущий НП (для расчета сальдо)
		// УдержаноЗаТекущийГод - Удержанный налог за месяцы текущего налогового периода
		// УдержаноЗаВсеГоды - Удержанный налог за всю историю по текущий НП (для расчета сальдо)
		// ВозвращеноЗаТекущийГод - Возврат налога за месяцы текущего налогового периода
		// ВозвращеноЗаВсеГоды - Возврат налога за всю историю по текущий НП (для расчета сальдо)
		// ВозвращеноВТекущемГодуЗаПрошлыеГоды - Возврат налога за прошлые налоговые периоды, зарегистрированный в текущем налоговом периоде
		// ПереданоНаВзысканиеВТекущемГодуЗаТекущий - Передано на взыскание за текущий налоговый период в текущем налоговом периоде
		// ПереданоНаВзысканиеВТекущемГодуЗаВсеГоды - Передано на взыскание за все налоговые периоды периоды в текущем налоговом периоде
		// ПереданоНаВзысканиеЗаВсеГоды - Передано на взыскание за всю историю по текущий НП (для расчета сальдо) !!! условие по "Период"
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|	СправкиОДоходах.ФизЛицо КАК ФизЛицо,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
		|					И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачисленоЗаТекущийГод,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
		|					И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < &НачалоСледующегоНП
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачисленоЗаВсеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Удержание)
		|					И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК УдержаноЗаТекущийГод,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Удержание)
		|					И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < &НачалоСледующегоНП
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК УдержаноЗаВсеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ВозвратНалога)
		|					И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА -НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВозвращеноЗаТекущийГод,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ВозвратНалога)
		|					И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < &НачалоСледующегоНП
		|				ТОГДА -НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВозвращеноЗаВсеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ВозвратНалога)
		|					И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < &НачалоНП
		|					И (НДФЛРасчетыСБюджетом.Период МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА -НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВозвращеноВТекущемГодуЗаПрошлыеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание)
		|					И (НДФЛРасчетыСБюджетом.Период МЕЖДУ &НачалоНП И &КонецНП)
		|					И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПереданоНаВзысканиеВТекущемГодуЗаТекущий,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание)
		|					И (НДФЛРасчетыСБюджетом.Период МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПереданоНаВзысканиеВТекущемГодуЗаВсеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание)
		|					И НДФЛРасчетыСБюджетом.Период < &НачалоСледующегоНП
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПереданоНаВзысканиеЗаВсеГоды
		|ПОМЕСТИТЬ ВТНачисленныйУдержанныйНалогЗаГодПоСтавкам
		|ИЗ
		|	ВТСправкиОДоходах КАК СправкиОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
		|		ПО (НДФЛРасчетыСБюджетом.ФизЛицо = СправкиОДоходах.ФизЛицо)
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.Период <= &ДатаПоДанныхУчета
		|	И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиОДоходах.НомерСтроки,
		|	СправкиОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	НомерСтроки";
		Запрос.Выполнить();
		
		СведенияОФизЛицахТекст = 
		"ВЫБРАТЬ
		|	РаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|	РаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|	РаботникиОрганизации.НомерСправки КАК НомерСправки,
		|	0 КАК ВзыскИФНС,
		|	РаботникиОрганизации.ФизЛицо.ИНН КАК ИНН,
		|	РаботникиОрганизации.ФизЛицо.ДатаРождения КАК ДатаРождения,
		|	РаботникиОрганизации.ФизЛицо.Наименование КАК ФизЛицоНаименование,
		|	ЕСТЬNULL(ФИОФизЛиц.Фамилия, """") КАК Фамилия,
		|	ЕСТЬNULL(ФИОФизЛиц.Имя, """") КАК Имя,
		|	ЕСТЬNULL(ФИОФизЛиц.Отчество, """") КАК Отчество,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументСерия, """") КАК СерияДокументаУдЛичн,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументНомер, """") КАК НомерДокументаУдЛичн,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументВид, ЗНАЧЕНИЕ(Справочник.ДокументыУдостоверяющиеЛичность.ПустаяСсылка)) КАК ВидДокументаСсылка,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументВид.КодИМНС, """") КАК КодДокументаУдЛичн,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументВид.КодИМНС, """") КАК КодУдЛичн,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументСерия, """") + "" "" + ЕСТЬNULL(ПаспортныеДанные.ДокументНомер, """") КАК СерНомДок,
		|	ВЫБОР
		|		КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Статус,
		|	ЕСТЬNULL(Гражданство.Страна.Код, ""643"") КАК КодСтраныГражданства,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Гражданство.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)) = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоИностранец,
		|	Страны.Код КАК КодСтр,
		|	АдресаИностранцев.Представление КАК АдрТекст,
		|	АдресаРегистрации.Поле1 КАК Индекс,
		|	ВЫБОР
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 1
		|			ТОГДА ""01""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 2
		|			ТОГДА ""02""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 3
		|			ТОГДА ""03""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 4
		|			ТОГДА ""04""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 5
		|			ТОГДА ""05""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 6
		|			ТОГДА ""06""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 7
		|			ТОГДА ""07""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 8
		|			ТОГДА ""08""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 9
		|			ТОГДА ""09""
		|		ИНАЧЕ РегионыПоРегистрации.КодРегионаВКоде
		|	КОНЕЦ КАК КодРегион,
		|	АдресаРегистрации.Поле3 КАК Район,
		|	АдресаРегистрации.Поле4 КАК Город,
		|	АдресаРегистрации.Поле5 КАК НасПункт,
		|	АдресаРегистрации.Поле6 КАК Улица,
		|	АдресаРегистрации.Поле7 КАК Дом,
		|	АдресаРегистрации.Поле8 КАК Корп,
		|	АдресаРегистрации.Поле9 КАК Кварт,
		|	АдресаРегистрации.Поле2 КАК Регион,
		|	АдресаРегистрации.Поле5 КАК НаселенныйПункт,
		|	АдресаРегистрации.Поле8 КАК Корпус,
		|	АдресаРегистрации.ТипДома КАК ТипДома,
		|	АдресаРегистрации.ТипКорпуса КАК ТипКорпуса,
		|	АдресаРегистрации.ТипКвартиры КАК ТипКвартиры,
		|	ЕСТЬNULL(ПредоставленныеCтандартныеВычеты.СумСтНалВыч, 0) КАК СумСтНалВыч,
		|	ЕСТЬNULL(ПредоставленныеИмущественныеВычеты.СумИмуВыч, 0) КАК СумИмуВыч,
		|	ЕСТЬNULL(ПодтвержденияИмущВычета.НомерВходящегоДокумента, """") КАК НомерУведомления,
		|	ЕСТЬNULL(ПодтвержденияИмущВычета.ДатаУведомления, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаУведомления,
		|	ЕСТЬNULL(ПодтвержденияИмущВычета.КодНалоговогоОргана, ""0000"") КАК ИФНСУведомления,
		|	ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаТекущийГод, 0) КАК НИОблСумм,
		|	ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноВТекущемГодуЗаПрошлыеГоды, 0) КАК ВозврСуммПЛ,
		|	ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаТекущийГод, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаТекущийГод, 0) КАК НУОблСумм,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ПереданоНаВзысканиеЗаВсеГоды, 0) > 0
		|			ТОГДА ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ПереданоНаВзысканиеЗаВсеГоды, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДолгНП,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ПереданоНаВзысканиеЗаВсеГоды, 0) < 0
		|			ТОГДА -ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ПереданоНаВзысканиеЗаВсеГоды, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДолгНА
		|ИЗ
		|	ВТСправкиОДоходах КАК РаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(
		|				&ДатаКадровыхСведений,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТСправкиОДоходах КАК СправкиОДоходах)) КАК ПаспортныеДанные
		|		ПО РаботникиОрганизации.ФизЛицо = ПаспортныеДанные.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|				&КонецНП,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТСправкиОДоходах КАК СправкиОДоходах)) КАК Гражданство
		|		ПО РаботникиОрганизации.ФизЛицо = Гражданство.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
		|				&КонецНП,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТСправкиОДоходах КАК СправкиОДоходах)) КАК Статусы
		|		ПО РаботникиОрганизации.ФизЛицо = Статусы.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|				&ДатаКадровыхСведений,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТСправкиОДоходах КАК СправкиОДоходах)) КАК ФИОФизЛиц
		|		ПО РаботникиОрганизации.ФизЛицо = ФИОФизЛиц.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаРегистрации
		|		ПО РаботникиОрганизации.ФизЛицо = АдресаРегистрации.Объект
		|			И (АдресаРегистрации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресныйКлассификатор КАК РегионыПоРегистрации
		|		ПО (РегионыПоРегистрации.ТипАдресногоЭлемента = 1)
		|			И (РегионыПоРегистрации.Наименование + "" "" + РегионыПоРегистрации.Сокращение = АдресаРегистрации.Поле2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаИностранцев
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК Страны
		|			ПО АдресаИностранцев.Поле1 = Страны.Наименование
		|		ПО РаботникиОрганизации.ФизЛицо = АдресаИностранцев.Объект
		|			И (АдресаИностранцев.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ИнострАдресФизЛица))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленныеCтандартныеВычетыЗаГод КАК ПредоставленныеCтандартныеВычеты
		|		ПО РаботникиОрганизации.НомерСтроки = ПредоставленныеCтандартныеВычеты.НомерСтроки
		|			И РаботникиОрганизации.ФизЛицо = ПредоставленныеCтандартныеВычеты.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленныеИмущественныеВычетыЗаГод КАК ПредоставленныеИмущественныеВычеты
		|		ПО РаботникиОрганизации.ФизЛицо = ПредоставленныеИмущественныеВычеты.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПодтвержденияИмущВычета КАК ПодтвержденияИмущВычета
		|		ПО РаботникиОрганизации.НомерСтроки = ПодтвержденияИмущВычета.НомерСтроки
		|			И РаботникиОрганизации.ФизЛицо = ПодтвержденияИмущВычета.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленныйУдержанныйНалогЗаГодПоСтавкам КАК НачисленныйУдержанныйНалогЗаГод
		|		ПО РаботникиОрганизации.НомерСтроки = НачисленныйУдержанныйНалогЗаГод.НомерСтроки
		|			И РаботникиОрганизации.ФизЛицо = НачисленныйУдержанныйНалогЗаГод.ФизЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки" ;
		
		//-----------------------------------------------------------------------------
		// ВЫБОРКА ДОХОДОВ ПО ВИДАМ ЗА ГОД ДЛЯ ВСЕХ РАЗДЕЛОВ СПРАВКИ
		
		ДоходыПоВидамЗаГод =
		"ВЫБРАТЬ
		|	СправкиОДоходах.ФизЛицо КАК ФизЛицо,
		|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|	ИСТИНА КАК ВыводитьВычеты,
		|	МЕСЯЦ(НДФЛСведенияОДоходах.Период) КАК НомМес,
		|	ЕСТЬNULL(НДФЛСведенияОДоходах.КодДоходаКодДляОтчетности, ""    "") КАК КодДоход,
		|	НДФЛСведенияОДоходах.КодДоходаСтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.СуммаВычета = 0
		|			ТОГДА ""   ""
		|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.КодВычета, ""   "")
		|	КОНЕЦ КАК КодВычет,
		|	НДФЛСведенияОДоходах.СуммаДохода КАК СумДоход,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.НеОблагаетсяУНалоговогоАгента
		|			ТОГДА НДФЛСведенияОДоходах.СуммаДохода
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НеОблагаетсяУНА,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.НеОблагаетсяУНалоговогоАгента
		|			ТОГДА 0
		|		ИНАЧЕ НДФЛСведенияОДоходах.СуммаВычета
		|	КОНЕЦ КАК СумВычет
		|ИЗ
		|	ВТСправкиОДоходах КАК СправкиОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|			НДФЛСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|			НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента КАК КодДоходаСтавкаНалогообложенияРезидента,
		|			НДФЛСведенияОДоходах.КодДохода.КодДляОтчетности КАК КодДоходаКодДляОтчетности,
		|			ВЫБОР
		|				КОГДА &Это2007год
		|					ТОГДА НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2007
		|				КОГДА &Это2008год
		|					ТОГДА НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2008
		|				ИНАЧЕ НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2009
		|			КОНЕЦ КАК КодВычета,
		|			СУММА(НДФЛСведенияОДоходах.СуммаДохода) КАК СуммаДохода,
		|			СУММА(НДФЛСведенияОДоходах.СуммаВычета) КАК СуммаВычета,
		|			НДФЛСведенияОДоходах.КодДохода КАК КодДохода
		|		ИЗ
		|			РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
		|		ГДЕ
		|			НДФЛСведенияОДоходах.ПериодРегистрации <= &ДатаПоДанныхУчета
		|			И НДФЛСведенияОДоходах.ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТСправкиОДоходах КАК СправкиОДоходах)
		|			И НДФЛСведенияОДоходах.Период МЕЖДУ &НачалоНП И &КонецНП
		|			И НДФЛСведенияОДоходах.Организация = &ГоловнаяОрганизация
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НДФЛСведенияОДоходах.ФизЛицо,
		|			НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ),
		|			ВЫБОР
		|				КОГДА &Это2007год
		|					ТОГДА НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2007
		|				КОГДА &Это2008год
		|					ТОГДА НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2008
		|				ИНАЧЕ НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2009
		|			КОНЕЦ,
		|			НДФЛСведенияОДоходах.КодДохода,
		|			НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента,
		|			НДФЛСведенияОДоходах.КодДохода.КодДляОтчетности) КАК НДФЛСведенияОДоходах
		|		ПО СправкиОДоходах.ФизЛицо = НДФЛСведенияОДоходах.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
		|				&КонецНП,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТСправкиОДоходах КАК СправкиОДоходах)) КАК Статусы
		|		ПО СправкиОДоходах.ФизЛицо = Статусы.ФизЛицо
		|ГДЕ
		|	НДФЛСведенияОДоходах.СуммаДохода <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	НомМес,
		|	КодДоход";
		
		//-----------------------------------------------------------------------------
		// ПРАВА НА Стандартные ВЫЧЕТЫ
		
		// ПрименениеВычетовВОрганизации
		//	Поля:
		//		Физлицо,
		//		Период
		//
		// Описание:
		//	Выбирает список физлиц + периодов (т.е. месяцев), в которые применяются стандартные вычеты по 
		//	заданной организации
		
		// ДоходыЗаГод
		//	Поля:
		//		ФизЛицо
		//		Период
		//		СуммаДоходаОборот
		//
		//	Описание:
		// Выбирает облагаемые налогом доходы за весь год по физлицам из ВТСправкиОДоходах
		
		// используется вложенный запрос ДоходыЗаГод 
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоходЗаГод
		//
		//	Описание:
		//	Выбирает по всем периодам с начала года сумму дохода нарастающим итогом за год
		
		ПраваНаСтандартныеВычетыТекст = 
		"ВЫБРАТЬ
		|	НДФЛПрименениеВычетовСрезПоследних.Физлицо КАК Физлицо,
		|	НДФЛПрименениеВычетовСрезПоследних.Период КАК Период
		|ПОМЕСТИТЬ ВТПрименениеВычетовВОрганизации
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(НДФЛПрименениеВычетов.Период) КАК ПериодСреза,
		|		РаботникиОрганизаций.Физлицо КАК Физлицо,
		|		Периоды.Период КАК Период
		|	ИЗ
		|		ВТСправкиОДоходах КАК РаботникиОрганизаций
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
		|			ПО (ИСТИНА)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
		|			ПО (Периоды.Период >= НДФЛПрименениеВычетов.Период)
		|				И РаботникиОрганизаций.Физлицо = НДФЛПрименениеВычетов.Физлицо
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РаботникиОрганизаций.Физлицо,
		|		Периоды.Период) КАК НДФЛПрименениеВычетовСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
		|		ПО НДФЛПрименениеВычетовСрезПоследних.ПериодСреза = НДФЛПрименениеВычетов.Период
		|			И НДФЛПрименениеВычетовСрезПоследних.Физлицо = НДФЛПрименениеВычетов.Физлицо
		|ГДЕ
		|	НДФЛПрименениеВычетов.Организация = &ГоловнаяОрганизация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВычетыФизлиц.Физлицо КАК Физлицо,
		|	ВычетыФизлиц.НомерСтроки,
		|	ВычетыФизлиц.Период КАК Период,
		|	ВычетыФизлиц.КодВычета КАК КодВычета,
		|	НДФЛРазмерВычетов.ОграничениеПоДоходам,
		|	ЕСТЬNULL(НДФЛРазмерВычетов.Размер, 0) * ЕСТЬNULL(ВычетыФизлиц.КоличествоВычетов, 0) КАК ПравоНаВычеты
		|ПОМЕСТИТЬ ВТПраваНаСтандВычеты
		|ИЗ
		|	(ВЫБРАТЬ
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.Физлицо КАК Физлицо,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.НомерСтроки КАК НомерСтроки,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.Период КАК Период,
		|		ВычетыФизлиц.КодВычетаЛичный КАК КодВычета,
		|		1 КАК КоличествоВычетов
		|	ИЗ
		|		(ВЫБРАТЬ
		|			МАКСИМУМ(ВычетыФизлиц.Период) КАК ПериодСреза,
		|			РаботникиОрганизаций.Физлицо КАК Физлицо,
		|			РаботникиОрганизаций.НомерСтроки КАК НомерСтроки,
		|			Периоды.Период КАК Период
		|		ИЗ
		|			ВТСправкиОДоходах КАК РаботникиОрганизаций
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
		|				ПО (ИСТИНА)
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыФизлиц КАК ВычетыФизлиц
		|				ПО (Периоды.Период >= ВычетыФизлиц.Период)
		|					И РаботникиОрганизаций.Физлицо = ВычетыФизлиц.Физлицо
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Периоды.Период,
		|			РаботникиОрганизаций.НомерСтроки,
		|			РаботникиОрганизаций.Физлицо) КАК НДФЛСтандартныеВычетыФизлицСрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыФизлиц КАК ВычетыФизлиц
		|			ПО НДФЛСтандартныеВычетыФизлицСрезПоследних.ПериодСреза = ВычетыФизлиц.Период
		|				И НДФЛСтандартныеВычетыФизлицСрезПоследних.Физлицо = ВычетыФизлиц.Физлицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.Физлицо,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.НомерСтроки,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.Период,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.КодВычета,
		|		ВЫБОР
		|			КОГДА НДФЛСтандартныеВычетыНаДетей.ПериодЗавершения <= НАЧАЛОПЕРИОДА(НДФЛСтандартныеВычетыФизлицСрезПоследних.Период, МЕСЯЦ)
		|					И НДФЛСтандартныеВычетыНаДетей.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА НДФЛСтандартныеВычетыНаДетей.КоличествоДетейЗавершения
		|			ИНАЧЕ НДФЛСтандартныеВычетыНаДетей.КоличествоДетей
		|		КОНЕЦ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НДФЛСтандартныеВычетыНаДетей.КодВычета КАК КодВычета,
		|			Периоды.Период КАК Период,
		|			РаботникиОрганизаций.Физлицо КАК Физлицо,
		|			РаботникиОрганизаций.НомерСтроки КАК НомерСтроки,
		|			МАКСИМУМ(НДФЛСтандартныеВычетыНаДетей.Период) КАК ПериодРегистра
		|		ИЗ
		|			ВТСправкиОДоходах КАК РаботникиОрганизаций
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
		|				ПО (ИСТИНА)
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыНаДетей КАК НДФЛСтандартныеВычетыНаДетей
		|				ПО (Периоды.Период >= НДФЛСтандартныеВычетыНаДетей.Период)
		|					И РаботникиОрганизаций.Физлицо = НДФЛСтандартныеВычетыНаДетей.Физлицо
		|		
		|		СГРУППИРОВАТЬ ПО
		|			РаботникиОрганизаций.Физлицо,
		|			РаботникиОрганизаций.НомерСтроки,
		|			НДФЛСтандартныеВычетыНаДетей.КодВычета,
		|			Периоды.Период) КАК НДФЛСтандартныеВычетыФизлицСрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыНаДетей КАК НДФЛСтандартныеВычетыНаДетей
		|			ПО НДФЛСтандартныеВычетыФизлицСрезПоследних.ПериодРегистра = НДФЛСтандартныеВычетыНаДетей.Период
		|				И НДФЛСтандартныеВычетыФизлицСрезПоследних.КодВычета = НДФЛСтандартныеВычетыНаДетей.КодВычета
		|				И НДФЛСтандартныеВычетыФизлицСрезПоследних.Физлицо = НДФЛСтандартныеВычетыНаДетей.Физлицо) КАК ВычетыФизлиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛРазмерВычетов.СрезПоследних(&КонецНП, ) КАК НДФЛРазмерВычетов
		|		ПО ВычетыФизлиц.КодВычета = НДФЛРазмерВычетов.КодВычета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрименениеВычетовВОрганизации КАК ПрименениеВычетов
		|		ПО ВычетыФизлиц.Физлицо = ПрименениеВычетов.Физлицо
		|			И ВычетыФизлиц.Период = ПрименениеВычетов.Период
		|ГДЕ
		|	ПрименениеВычетов.Физлицо ЕСТЬ НЕ NULL 
		|	И ВычетыФизлиц.КоличествоВычетов <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|	СУММА(НДФЛСведенияОДоходах.СуммаДохода) - СУММА(НДФЛСведенияОДоходах.СуммаВычета) КАК СуммаДоходаОборот
		|ПОМЕСТИТЬ ВТДоходыЗаГод
		|ИЗ
		|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
		|ГДЕ
		|	НДФЛСведенияОДоходах.Период МЕЖДУ &НачалоНП И &КонецНП
		|	И НДФЛСведенияОДоходах.Организация = &ГоловнаяОрганизация
		|	И НДФЛСведенияОДоходах.ПериодРегистрации <= &ДатаПоДанныхУчета
		|	И НДФЛСведенияОДоходах.ФизЛицо В
		|			(ВЫБРАТЬ
		|				СправкиОДоходах.ФизЛицо
		|			ИЗ
		|				ВТСправкиОДоходах КАК СправкиОДоходах)
		|	И НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ),
		|	НДФЛСведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РаботникиОргПраваНаВычеты.Физлицо,
		|	РаботникиОргПраваНаВычеты.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА &Это2007год
		|			ТОГДА РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2007
		|		КОГДА &Это2008год
		|			ТОГДА РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2008
		|		ИНАЧЕ РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2009
		|	КОНЕЦ КАК КодВычет,
		|	СУММА(ВЫБОР
		|			КОГДА ЕСТЬNULL(ДоходыЗаГод.ОблагаемыйДоходЗаГод, 0) + ЕСТЬNULL(НДФЛДоходыПредыдущегоМестаРаботы.Размер, 0) <= РаботникиОргПраваНаВычеты.ОграничениеПоДоходам
		|					ИЛИ РаботникиОргПраваНаВычеты.ОграничениеПоДоходам = 0
		|				ТОГДА РаботникиОргПраваНаВычеты.ПравоНаВычеты
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СумВычет
		|ИЗ
		|	ВТПраваНаСтандВычеты КАК РаботникиОргПраваНаВычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Периоды.Период КАК Период,
		|			РаботникиОрганизаций.ФизЛицо КАК ФизЛицо,
		|			СУММА(НДФЛОбороты.СуммаДоходаОборот) КАК ОблагаемыйДоходЗаГод
		|		ИЗ
		|			ВТСправкиОДоходах КАК РаботникиОрганизаций
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
		|				ПО (ИСТИНА)
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЗаГод КАК НДФЛОбороты
		|				ПО (НДФЛОбороты.Период МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) И Периоды.Период)
		|					И РаботникиОрганизаций.ФизЛицо = НДФЛОбороты.ФизЛицо
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Периоды.Период,
		|			РаботникиОрганизаций.ФизЛицо) КАК ДоходыЗаГод
		|		ПО РаботникиОргПраваНаВычеты.Период = ДоходыЗаГод.Период
		|			И РаботникиОргПраваНаВычеты.Физлицо = ДоходыЗаГод.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛДоходыПредыдущегоМестаРаботы КАК НДФЛДоходыПредыдущегоМестаРаботы
		|		ПО (НДФЛДоходыПредыдущегоМестаРаботы.Организация = &ГоловнаяОрганизация)
		|			И (НДФЛДоходыПредыдущегоМестаРаботы.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(РаботникиОргПраваНаВычеты.Период, МЕСЯЦ))
		|			И РаботникиОргПраваНаВычеты.Физлицо = НДФЛДоходыПредыдущегоМестаРаботы.ФизЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	РаботникиОргПраваНаВычеты.КодВычета,
		|	РаботникиОргПраваНаВычеты.Физлицо,
		|	РаботникиОргПраваНаВычеты.НомерСтроки,
		|	ВЫБОР
		|		КОГДА &Это2007год
		|			ТОГДА РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2007
		|		КОГДА &Это2008год
		|			ТОГДА РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2008
		|		ИНАЧЕ РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2009
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	КодВычет";
		
		//-----------------------------------------------------------------------------
		// ПРАВА НА Имущественные ВЫЧЕТЫ
		
		ПраваНаИмущественныеВычетыТекст = 
		"ВЫБРАТЬ
		|	СправкиОДоходах.ФизЛицо,
		|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА &Это2007год
		|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный.КодДляОтчетности2007
		|		КОГДА &Это2008год
		|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный.КодДляОтчетности2008
		|		ИНАЧЕ НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный.КодДляОтчетности2009
		|	КОНЕЦ КАК КодВычет,
		|	НДФЛИмущественныеВычетыФизлиц.РазмерРасход КАК СумВычет
		|ИЗ
		|	ВТСправкиОДоходах КАК СправкиОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛИмущественныеВычетыФизлиц.Обороты(
		|				&НачалоНП,
		|				&ДатаПоДанныхУчета,
		|				,
		|				Организация = &ГоловнаяОрганизация
		|					И Год = &НалоговыйПериод
		|					И ФизЛицо В
		|						(ВЫБРАТЬ
		|							СправкиОДоходах.ФизЛицо
		|						ИЗ
		|							ВТСправкиОДоходах КАК СправкиОДоходах)) КАК НДФЛИмущественныеВычетыФизлиц
		|		ПО (НДФЛИмущественныеВычетыФизлиц.ФизЛицо = СправкиОДоходах.ФизЛицо)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	КодВычет";
		
		//-----------------------------------------------------------------------------
		// ВЫБОРКА ДАННЫХ 
		
		Запрос.Текст = СведенияОФизЛицахТекст; 	
		ВыборкаФизЛиц = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = ДоходыПоВидамЗаГод; 	
		ВыборкаДоходовФизЛиц = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = ПраваНаСтандартныеВычетыТекст; 	
		ВыборкаСтандВычетовФизЛиц = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = ПраваНаИмущественныеВычетыТекст; 	
		ВыборкаИмущВычетовФизЛиц = Запрос.Выполнить().Выбрать();
		
		// Создаем начальное дерево
		ДеревоВыгрузки = ПроцедурыПерсонифицированногоУчета.СоздатьДеревоXML();
		
		ВерсияФормата = "4.00001";
		
		Атрибуты = Новый Соответствие;
		Атрибуты.Вставить("ВерсФорм",ВерсияФормата);
		
		Узел2НДФЛ = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "НДФЛ2", "", Атрибуты);
		
		// Информационная часть
		ФорматСправка = ЗагрузитьФорматНабораЗаписей(МакетФормата, "Справка", ОрганизацияЭтоФизЛицо);
		
		// Общие сведения служебной части
		НаборЗаписейОбщСвСЧ = ФорматСправка.ОбщСвИЧ.Значение;
		НаборЗаписейОбщСвСЧ.ДатаСпр = Дата;
		НаборЗаписейОбщСвСЧ.ИФНСНА = ВыборкаСведенийОбНА.КодИФНСОрганизации;
		НаборЗаписейОбщСвСЧ.ГодДох = НалоговыйПериод;
		
		// Сведения об отправителе
		НаборЗаписейОтправитель = ФорматСправка.ИстДох.Значение[?(ОрганизацияЭтоФизЛицо,"СвНАФЛ","СвНАЮЛ")].Значение;
		Если ОрганизацияЭтоФизЛицо Тогда
			
			// Для предпринимателя 12 символов ИНН 
			Если НЕ РегламентированнаяОтчетность.ИННСоответствуетТребованиям(ВыборкаСведенийОбНА.ИНН, Перечисления.ЮрФизЛицо.ФизЛицо) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для физического лица-работодателя неверно введен ИНН!", Отказ);
			КонецЕсли; 
			
			Фамилия 	= ВыборкаСведенийОбНА.Фамилия;
			Имя 		= ВыборкаСведенийОбНА.Имя;
			Отчество 	= ВыборкаСведенийОбНА.Отчество;
			
			Если Фамилия = Null Тогда
				ОбщегоНазначенияЗК.ФамилияИнициалыФизЛица(ВыборкаСведенийОбНА.НаименованиеОрганизации,Фамилия,Имя,Отчество);
			КонецЕсли;
			
			Если Не РегламентированнаяОтчетность.СтрокаНаписанаПоРусски(Фамилия + Имя + Отчество) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для физического лица-работодателя Фамилия, Имя, Отчество должно быть введены русскими буквами!", Отказ);
			КонецЕсли;
			Если ПустаяСтрока(Фамилия) Или ПустаяСтрока(Имя) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для физического лица-работодателя должны быть указаны, как минимум, фамилия и имя!", Отказ);
			КонецЕсли;
			
			НаборЗаписейОтправитель.ФИОФЛ.Значение.Фамилия = Фамилия;
			НаборЗаписейОтправитель.ФИОФЛ.Значение.Имя = Имя;
			НаборЗаписейОтправитель.ФИОФЛ.Значение.Отчество = Отчество;
			НаборЗаписейОтправитель.ИННФЛ.Значение = ВыборкаСведенийОбНА.ИНН;
			
		Иначе
			
			Если НЕ РегламентированнаяОтчетность.ИННСоответствуетТребованиям(ВыборкаСведенийОбНА.ИНН, Перечисления.ЮрФизЛицо.ЮрЛицо ) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для организации неверно введен ИНН!", Отказ);
			КонецЕсли; 
			
			Если СокрЛП(ВыборкаСведенийОбНА.НаименованиеОрганизации) = "" Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для организации должно быть указано сокращенное наименование организации!", Отказ);
			КонецЕсли;
			
			НаборЗаписейОтправитель.НаимОрг.Значение = ВыборкаСведенийОбНА.НаименованиеОрганизации;
			НаборЗаписейОтправитель.ИННЮЛ.Значение = ВыборкаСведенийОбНА.ИНН;
			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(КонтактныйТелефонОтветственного) Тогда
			НаборЗаписейОтправитель.Удалить("Телефон");
		Иначе
			НаборЗаписейОтправитель.Телефон.Значение = КонтактныйТелефонОтветственного;
		КонецЕсли;
		Если Не ОрганизацияЭтоФизЛицо Тогда
			НаборЗаписейОтправитель.КПП.Значение = ВыборкаСведенийОбНА.КПП;
		КонецЕсли;
		НаборЗаписейОтправитель.ОКАТО.Значение = ВыборкаСведенийОбНА.КодПоОКАТО;
		
		// проверим данные отправителя		
		Если НЕ ЗначениеЗаполнено(ВыборкаСведенийОбНА.КодИФНСОрганизации) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан код ИФНС " + ?(ОрганизацияЭтоФизЛицо, "физического лица", "организации") + " - работодателя!", Отказ);
		КонецЕсли; 
		
		// Заполняем дерево документами - справками о доходах
		СоответствиеФизЛиц = Новый Соответствие;
		
		Пока ВыборкаДоходовФизЛиц.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			СтрОшибки = "";	
			
			ВыборкаФизЛиц.Сбросить();
			ВыборкаФизЛиц.НайтиСледующий(ВыборкаДоходовФизЛиц.НомерСтроки,"НомерСтроки");
			
			ДанныеОФизлицеДляСправки = ПолучитьПустуюСправкуФизлица(СоответствиеФизЛиц, ВыборкаДоходовФизЛиц.ФизЛицо, ФорматСправка, ВыборкаФизЛиц, СтрОшибки);
			
			// копируем заполненные ранее разделы
			НаборЗаписейИнфЧастСправки = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ДанныеОФизлицеДляСправки);
			
			НаборЗаписейИнфЧастСправки.ОбщСвИЧ.Значение.НомСпр = ВыборкаФизЛиц.НомерСправки;
			
			// Сведения об облагаемых доходах
			СоответствиеСтавок = Новый Соответствие;
			НаборЗаписейДоходы = НаборЗаписейИнфЧастСправки.СвДохСтав.Значение;
			ТаблицаДоходов = НаборЗаписейДоходы.ДохВыч.Значение;
			ТаблицаДоходов.Колонки.Добавить("НеОблагаетсяУНА"); // для кодов 15хх, 22хх, не облагаемых у налогового агента
			Пока ВыборкаДоходовФизЛиц.Следующий() Цикл  // Доходы
				Если Не ПустаяСтрока(ВыборкаДоходовФизЛиц.КодДоход) Тогда
					СтрокаТЗ = ТаблицаДоходов.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТЗ,ВыборкаДоходовФизЛиц); // НомМес, КодДоход, СумДоход КодВычет, СумВычет
					СтрокаТЗ.НомМес = ?(СтрДлина(СтрокаТЗ.НомМес) = 1,"0","") + СтрокаТЗ.НомМес;
					СоответствиеСтавок.Вставить(ВыборкаДоходовФизЛиц.СтавкаНалогообложенияРезидента,Строка(ВыборкаДоходовФизЛиц.СтавкаНалогообложенияРезидента));
				КонецЕсли;
			КонецЦикла;
			
			СтрокаСтавки = "";
			Для каждого Ставка Из СоответствиеСтавок Цикл
				СтрокаСтавки = СтрокаСтавки + Ставка.Значение + "; ";
			КонецЦикла;
			НаборЗаписейДоходы.Ставка.Значение =?(ПустаяСтрока(СтрокаСтавки),"13%",Лев(СтрокаСтавки,3));
			
			// Стандартные налоговые вычеты
			НаборЗаписейСтандИмущВычет = НаборЗаписейДоходы.СтандВыч.Значение;
			ТаблицаВычетов = НаборЗаписейСтандИмущВычет.ПравоВыч.Значение;
			Если ВыборкаДоходовФизЛиц.ВыводитьВычеты Тогда
				ВыборкаСтандВычетовФизЛиц.Сбросить();
				Пока ВыборкаСтандВычетовФизЛиц.НайтиСледующий(ВыборкаДоходовФизЛиц.НомерСтроки,"НомерСтроки") Цикл  // право на вычеты
					Если ВыборкаСтандВычетовФизЛиц.СумВычет <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ТаблицаВычетов.Добавить(),ВыборкаСтандВычетовФизЛиц) // КодВычет, СумВычет
					КонецЕсли; 
				КонецЦикла;
				Если ТаблицаВычетов.Количество() = 0 Тогда // нет прав - удалим раздел целиком 
					НаборЗаписейДоходы.Удалить("СтандВыч");
				Иначе	
					НаборЗаписейСтандИмущВычет.СумСтНалВыч.Значение = ВыборкаФизЛиц.СумСтНалВыч;
				КонецЕсли;
			Иначе
				НаборЗаписейДоходы.Удалить("СтандВыч");
			КонецЕсли;
			
			// Имущественные налоговые вычеты
			НаборЗаписейСтандИмущВычет = НаборЗаписейДоходы.ИмущВыч.Значение;
			ТаблицаВычетов = НаборЗаписейСтандИмущВычет.ПравоВыч.Значение;
			Если ВыборкаДоходовФизЛиц.ВыводитьВычеты Тогда
				ВыборкаИмущВычетовФизЛиц.Сбросить();
				Пока ВыборкаИмущВычетовФизЛиц.НайтиСледующий(ВыборкаДоходовФизЛиц.НомерСтроки,"НомерСтроки") Цикл  // право на вычеты
					Если ВыборкаИмущВычетовФизЛиц.СумВычет <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ТаблицаВычетов.Добавить(),ВыборкаИмущВычетовФизЛиц) // КодВычет, СумВычет
					КонецЕсли; 
				КонецЦикла;
				Если ТаблицаВычетов.Количество() = 0 Тогда // нет прав - удалим раздел целиком 
					НаборЗаписейДоходы.Удалить("ИмущВыч");
				Иначе	
					НаборЗаписейСтандИмущВычет.НомерУвед.Значение = ВыборкаФизЛиц.НомерУведомления; 
					НаборЗаписейСтандИмущВычет.ДатаУвед.Значение = ВыборкаФизЛиц.ДатаУведомления; 
					НаборЗаписейСтандИмущВычет.ИФНСУвед.Значение = ВыборкаФизЛиц.ИФНСУведомления;
					Если Не ОбщегоНазначенияЗК.ТолькоЦифрыВСтроке(ВыборкаФизЛиц.ИФНСУведомления) Тогда
						СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + " - неверно указан код налогового органа, выдавшего уведомление!";
					КонецЕсли;
					НаборЗаписейСтандИмущВычет.СумИмуВыч.Значение = ВыборкаФизЛиц.СумИмуВыч;
				КонецЕсли;
			Иначе
				НаборЗаписейДоходы.Удалить("ИмущВыч");
			КонецЕсли;
			
			// Скорректируем данные о вычетах к доходам: если код вычета отсутствует, сумму вычета не передаем и наоборот
			Для каждого СтрокаТЗ Из ТаблицаДоходов Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТЗ.КодВычет) И СтрокаТЗ.СумВычет <> 0 Тогда
					СтрокаТЗ.СумВычет = 0
				КонецЕсли;
			КонецЦикла;
			
			// Общая сумма дохода и налога на доходы по итогам налогового периода
			
			СтруктураСГДНалПер = НаборЗаписейДоходы.СГДНалПер.Значение;
			ЗаполнитьЗначенияСвойств(СтруктураСГДНалПер,ВыборкаФизЛиц); // ВзыскИФНС, НИОблСумм, НУОблСумм, ВозврСуммПЛ, ДолгНП, ДолгНА
			//ЗачСуммПЛ
			//УдСуммПЛ
			СтруктураСГДНалПер.СГДСумм = ТаблицаДоходов.Итог("СумДоход");
			СтруктураСГДНалПер.ОблСумм = Макс(ТаблицаДоходов.Итог("СумДоход") 
									- ТаблицаДоходов.Итог("СумВычет") 
									- ТаблицаДоходов.Итог("НеОблагаетсяУНА") 
									- ВыборкаФизЛиц.СумСтНалВыч 
									- ВыборкаФизЛиц.СумИмуВыч,0);
									
			ТаблицаДоходов.Колонки.Удалить("НеОблагаетсяУНА"); // вспомогательная колонка
			
			ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "Справка", ""), НаборЗаписейИнфЧастСправки);
			
			// Вывод ошибок
			Если СтрОшибки <> "" Тогда
				//  Фамилия, Имя, Отчество
				Фамилия 	= ВыборкаФизЛиц.Фамилия;
				Имя 		= ВыборкаФизЛиц.Имя;
				Отчество 	= ВыборкаФизЛиц.Отчество;
				СтрОшибки =  "В сведениях о доходах сотрудника (строка " + ВыборкаДоходовФизЛиц.НомерСтроки + ")" + ?(Не ПустаяСтрока(Фамилия+Имя+Отчество), " " + Фамилия + " " + Имя + " " + Отчество, "") + " обнаружены ошибки:" + СтрОшибки;
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрОшибки, Отказ);
			КонецЕсли; 
			
			ОбработкаПрерыванияПользователя();	
			
		КонецЦикла;
		
	Иначе
		
		// данные документа
		
		Запрос.УстановитьПараметр("ВыделятьДивидендыНерезидентов", НалоговыйПериод > 2007);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|	ТЧРаботникиОрганизации.Ставка КАК Ставка,
		|	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|	ТЧРаботникиОрганизации.КодПоОКАТО КАК КодПоОКАТО,
		|	ТЧРаботникиОрганизации.КПП КАК КПП,
		|	ТЧРаботникиОрганизации.ПереданоНаВзыскание,
		|	ТЧРаботникиОрганизации.НомерСправки
		|ПОМЕСТИТЬ ВТВсеСправкиОДоходах
		|ИЗ
		|	Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|ГДЕ
		|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	НомерСтроки";
		Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Гражданство.ФизЛицо КАК ФизЛицо,
		|	Гражданство.Страна
		|ПОМЕСТИТЬ ВТГражданство
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|			&КонецНП,
		|			ФизЛицо В
		|				(ВЫБРАТЬ
		|					СправкиОДоходах.ФизЛицо
		|				ИЗ
		|					ВТВсеСправкиОДоходах КАК СправкиОДоходах)) КАК Гражданство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
		Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Гражданство.ФизЛицо КАК ФизЛицо,
		|	Гражданство.Статус
		|ПОМЕСТИТЬ ВТСтатусы
		|ИЗ
		|	РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
		|			&КонецНП,
		|			ФизЛицо В
		|				(ВЫБРАТЬ
		|					СправкиОДоходах.ФизЛицо
		|				ИЗ
		|					ВТВсеСправкиОДоходах КАК СправкиОДоходах)) КАК Гражданство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
		Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|	ТЧРаботникиОрганизации.КодПоОКАТО КАК КодПоОКАТО,
		|	ТЧРаботникиОрганизации.КПП КАК КПП,
		|	ТЧРаботникиОрганизации.ПереданоНаВзыскание,
		|	ТЧРаботникиОрганизации.НомерСправки
		|ПОМЕСТИТЬ ВТСправкиОДоходах
		|ИЗ
		|	ВТВсеСправкиОДоходах КАК ТЧРаботникиОрганизации
		|ГДЕ
		|	ТЧРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	НомерСтроки";
		Запрос.Выполнить();
		
		// ДоходыЗаГодНарастающимИтогом 
		//	Поля:
		//		ФизЛицо
		//		Период (конец месяца)
		//		ОблагаемыйДоходЗаГод
		//
		//	Описание:
		//	Выбирает по всем периодам с начала года сумму дохода нарастающим итогом за год
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Периоды.Период КАК Период,
		|	РаботникиОрганизаций.ФизЛицо КАК ФизЛицо,
		|	СУММА(ДоходыЗаГод.СуммаДохода) - СУММА(ДоходыЗаГод.СуммаВычета) КАК ОблагаемыйДоходЗаГод
		|ПОМЕСТИТЬ ВТДоходыЗаГодНарастающимИтогом
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		СправкиОДоходах.ФизЛицо КАК ФизЛицо
		|	ИЗ
		|		ВТСправкиОДоходах КАК СправкиОДоходах) КАК РаботникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛСведенияОДоходах КАК ДоходыЗаГод
		|		ПО РаботникиОрганизаций.ФизЛицо = ДоходыЗаГод.ФизЛицо
		|			И (ДоходыЗаГод.Период МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) И Периоды.Период)
		|			И (ДоходыЗаГод.Организация = &ГоловнаяОрганизация)
		|			И (ДоходыЗаГод.ПериодРегистрации <= &ДатаПоДанныхУчета)
		|			И (ДоходыЗаГод.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
		|
		|СГРУППИРОВАТЬ ПО
		|	Периоды.Период,
		|	РаботникиОрганизаций.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	Период";
		Запрос.Выполнить();
		
		// ПрименениеВычетовВОрганизации
		//	Поля:
		//		Физлицо,
		//		Период (конец месяца)
		//
		// Описание:
		//	Выбирает список физлиц + периодов, в которые применяются стандартные вычеты по 
		//	заданной организации
		
		// ПраваНаСтандВычеты
		//	Поля:
		//		Физлицо,
		//		Период (конец месяца)
		//
		// Описание:
		//	Выбирает список физлиц + периодв в которые применяются стандартные вычеты по 
		//	заданной организации
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДФЛПрименениеВычетовСрезПоследних.Физлицо КАК Физлицо,
		|	НДФЛПрименениеВычетовСрезПоследних.Период КАК Период
		|ПОМЕСТИТЬ ВТПрименениеВычетовВОрганизации
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(НДФЛПрименениеВычетов.Период) КАК ПериодСреза,
		|		РаботникиОрганизаций.Физлицо КАК Физлицо,
		|		Периоды.Период КАК Период
		|	ИЗ
		|		ВТСправкиОДоходах КАК РаботникиОрганизаций
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
		|			ПО (ИСТИНА)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
		|			ПО (Периоды.Период >= НДФЛПрименениеВычетов.Период)
		|				И РаботникиОрганизаций.Физлицо = НДФЛПрименениеВычетов.Физлицо
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РаботникиОрганизаций.Физлицо,
		|		Периоды.Период) КАК НДФЛПрименениеВычетовСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
		|		ПО НДФЛПрименениеВычетовСрезПоследних.ПериодСреза = НДФЛПрименениеВычетов.Период
		|			И НДФЛПрименениеВычетовСрезПоследних.Физлицо = НДФЛПрименениеВычетов.Физлицо
		|ГДЕ
		|	НДФЛПрименениеВычетов.Организация = &ГоловнаяОрганизация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВычетыФизлиц.Физлицо КАК Физлицо,
		|	ВычетыФизлиц.НомерСтроки,
		|	ВычетыФизлиц.Период КАК Период,
		|	ВычетыФизлиц.КодВычета КАК КодВычета,
		|	НДФЛРазмерВычетов.ОграничениеПоДоходам,
		|	ЕСТЬNULL(НДФЛРазмерВычетов.Размер, 0) * ЕСТЬNULL(ВычетыФизлиц.КоличествоВычетов, 0) КАК ПравоНаВычеты
		|ПОМЕСТИТЬ ВТПраваНаСтандВычеты
		|ИЗ
		|	(ВЫБРАТЬ
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.Физлицо КАК Физлицо,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.НомерСтроки КАК НомерСтроки,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.Период КАК Период,
		|		ВычетыФизлиц.КодВычетаЛичный КАК КодВычета,
		|		1 КАК КоличествоВычетов
		|	ИЗ
		|		(ВЫБРАТЬ
		|			МАКСИМУМ(ВычетыФизлиц.Период) КАК ПериодСреза,
		|			РаботникиОрганизаций.Физлицо КАК Физлицо,
		|			РаботникиОрганизаций.НомерСтроки КАК НомерСтроки,
		|			Периоды.Период КАК Период
		|		ИЗ
		|			ВТСправкиОДоходах КАК РаботникиОрганизаций
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
		|				ПО (ИСТИНА)
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыФизлиц КАК ВычетыФизлиц
		|				ПО (Периоды.Период >= ВычетыФизлиц.Период)
		|					И РаботникиОрганизаций.Физлицо = ВычетыФизлиц.Физлицо
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Периоды.Период,
		|			РаботникиОрганизаций.НомерСтроки,
		|			РаботникиОрганизаций.Физлицо) КАК НДФЛСтандартныеВычетыФизлицСрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыФизлиц КАК ВычетыФизлиц
		|			ПО НДФЛСтандартныеВычетыФизлицСрезПоследних.ПериодСреза = ВычетыФизлиц.Период
		|				И НДФЛСтандартныеВычетыФизлицСрезПоследних.Физлицо = ВычетыФизлиц.Физлицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.Физлицо,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.НомерСтроки,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.Период,
		|		НДФЛСтандартныеВычетыФизлицСрезПоследних.КодВычета,
		|		ВЫБОР
		|			КОГДА НДФЛСтандартныеВычетыНаДетей.ПериодЗавершения <= НАЧАЛОПЕРИОДА(НДФЛСтандартныеВычетыФизлицСрезПоследних.Период, МЕСЯЦ)
		|					И НДФЛСтандартныеВычетыНаДетей.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА НДФЛСтандартныеВычетыНаДетей.КоличествоДетейЗавершения
		|			ИНАЧЕ НДФЛСтандартныеВычетыНаДетей.КоличествоДетей
		|		КОНЕЦ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НДФЛСтандартныеВычетыНаДетей.КодВычета КАК КодВычета,
		|			Периоды.Период КАК Период,
		|			РаботникиОрганизаций.Физлицо КАК Физлицо,
		|			РаботникиОрганизаций.НомерСтроки КАК НомерСтроки,
		|			МАКСИМУМ(НДФЛСтандартныеВычетыНаДетей.Период) КАК ПериодРегистра
		|		ИЗ
		|			ВТСправкиОДоходах КАК РаботникиОрганизаций
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
		|				ПО (ИСТИНА)
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыНаДетей КАК НДФЛСтандартныеВычетыНаДетей
		|				ПО (Периоды.Период >= НДФЛСтандартныеВычетыНаДетей.Период)
		|					И РаботникиОрганизаций.Физлицо = НДФЛСтандартныеВычетыНаДетей.Физлицо
		|		
		|		СГРУППИРОВАТЬ ПО
		|			РаботникиОрганизаций.Физлицо,
		|			РаботникиОрганизаций.НомерСтроки,
		|			НДФЛСтандартныеВычетыНаДетей.КодВычета,
		|			Периоды.Период) КАК НДФЛСтандартныеВычетыФизлицСрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыНаДетей КАК НДФЛСтандартныеВычетыНаДетей
		|			ПО НДФЛСтандартныеВычетыФизлицСрезПоследних.ПериодРегистра = НДФЛСтандартныеВычетыНаДетей.Период
		|				И НДФЛСтандартныеВычетыФизлицСрезПоследних.КодВычета = НДФЛСтандартныеВычетыНаДетей.КодВычета
		|				И НДФЛСтандартныеВычетыФизлицСрезПоследних.Физлицо = НДФЛСтандартныеВычетыНаДетей.Физлицо) КАК ВычетыФизлиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛРазмерВычетов.СрезПоследних(&КонецНП, ) КАК НДФЛРазмерВычетов
		|		ПО ВычетыФизлиц.КодВычета = НДФЛРазмерВычетов.КодВычета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрименениеВычетовВОрганизации КАК ПрименениеВычетов
		|		ПО ВычетыФизлиц.Физлицо = ПрименениеВычетов.Физлицо
		|			И ВычетыФизлиц.Период = ПрименениеВычетов.Период
		|ГДЕ
		|	ПрименениеВычетов.Физлицо ЕСТЬ НЕ NULL 
		|	И ВычетыФизлиц.КоличествоВычетов <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо,
		|	Период";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|	СправкиОДоходах.ФизЛицо КАК ФизЛицо,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
		|					И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачисленоЗаТекущийГод,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
		|					И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < &НачалоСледующегоНП
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НачисленоЗаВсеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Удержание)
		|					И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК УдержаноЗаТекущийГод,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Удержание)
		|					И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < &НачалоСледующегоНП
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК УдержаноЗаВсеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ВозвратНалога)
		|					И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА -НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВозвращеноЗаТекущийГод,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ВозвратНалога)
		|					И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < &НачалоСледующегоНП
		|				ТОГДА -НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВозвращеноЗаВсеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ВозвратНалога)
		|					И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < &НачалоНП
		|					И (НДФЛРасчетыСБюджетом.Период МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА -НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВозвращеноВТекущемГодуЗаПрошлыеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание)
		|					И (НДФЛРасчетыСБюджетом.Период МЕЖДУ &НачалоНП И &КонецНП)
		|					И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПереданоНаВзысканиеВТекущемГодуЗаТекущий,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание)
		|					И (НДФЛРасчетыСБюджетом.Период МЕЖДУ &НачалоНП И &КонецНП)
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПереданоНаВзысканиеВТекущемГодуЗаВсеГоды,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание)
		|					И НДФЛРасчетыСБюджетом.Период < &НачалоСледующегоНП
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПереданоНаВзысканиеЗаВсеГоды
		|ПОМЕСТИТЬ ВТНачисленныйУдержанныйНалогЗаГодПоСтавкам
		|ИЗ
		|	ВТВсеСправкиОДоходах КАК СправкиОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
		|		ПО СправкиОДоходах.ФизЛицо = Статусы.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
		|		ПО СправкиОДоходах.ФизЛицо = НДФЛРасчетыСБюджетом.ФизЛицо
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КодПоОКАТО = ВЫБОР
		|					КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
		|						ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
		|					КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|						ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
		|					ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|				КОНЕЦ)
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КПП = ВЫБОР
		|					КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
		|						ТОГДА НДФЛРасчетыСБюджетом.КПП
		|					КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|						ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
		|					ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|				КОНЕЦ)
		|			И (СправкиОДоходах.Ставка = ВЫБОР
		|				КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
		|					ТОГДА ВЫБОР
		|							КОГДА &ВыделятьДивидендыНерезидентов
		|									И НДФЛРасчетыСБюджетом.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
		|								ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|							ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|						КОНЕЦ
		|				КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|				КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|				КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|				ИНАЧЕ """"
		|			КОНЕЦ)
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.Период <= &ДатаПоДанныхУчета
		|	И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиОДоходах.НомерСтроки,
		|	СправкиОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	НомерСтроки";
		Запрос.Выполнить();
		
		//	Суммы фактически предоставленных вычетов	
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(НДФЛИмущественныеВычетыФизлиц.Размер) КАК СумИмуВыч,
		|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|	СправкиОДоходах.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТПредоставленныеИмущественныеВычетыЗаГод
		|ИЗ
		|	ВТСправкиОДоходах КАК СправкиОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛИмущественныеВычетыФизлиц КАК НДФЛИмущественныеВычетыФизлиц
		|		ПО СправкиОДоходах.ФизЛицо = НДФЛИмущественныеВычетыФизлиц.ФизЛицо
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КодПоОКАТО = ВЫБОР
		|					КОГДА НДФЛИмущественныеВычетыФизлиц.КодПоОКАТО <> &ПустойКодПоОКАТО
		|						ТОГДА НДФЛИмущественныеВычетыФизлиц.КодПоОКАТО
		|					КОГДА ЕСТЬNULL(НДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|						ТОГДА НДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации.КодПоОКАТО
		|					ИНАЧЕ ЕСТЬNULL(НДФЛИмущественныеВычетыФизлиц.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|				КОНЕЦ)
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КПП = ВЫБОР
		|					КОГДА НДФЛИмущественныеВычетыФизлиц.КПП <> &ПустойКПП
		|						ТОГДА НДФЛИмущественныеВычетыФизлиц.КПП
		|					КОГДА ЕСТЬNULL(НДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|						ТОГДА НДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации.КПП
		|					ИНАЧЕ ЕСТЬNULL(НДФЛИмущественныеВычетыФизлиц.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|				КОНЕЦ)
		|ГДЕ
		|	НДФЛИмущественныеВычетыФизлиц.Период МЕЖДУ &НачалоНП И &ДатаПоДанныхУчета
		|	И НДФЛИмущественныеВычетыФизлиц.Год = &НалоговыйПериод
		|	И НДФЛИмущественныеВычетыФизлиц.Организация = &ГоловнаяОрганизация
		|	И НДФЛИмущественныеВычетыФизлиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиОДоходах.НомерСтроки,
		|	СправкиОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	НомерСтроки";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(НДФЛРасчетыСБюджетом.ПримененныйВычет) КАК СумСтНалВыч,
		|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|	СправкиОДоходах.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТПредоставленныеCтандартныеВычетыЗаГод
		|ИЗ
		|	ВТСправкиОДоходах КАК СправкиОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц КАК НДФЛРасчетыСБюджетом
		|		ПО СправкиОДоходах.ФизЛицо = НДФЛРасчетыСБюджетом.ФизЛицо
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КодПоОКАТО = ВЫБОР
		|					КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
		|						ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
		|					КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|						ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
		|					ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|				КОНЕЦ)
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КПП = ВЫБОР
		|					КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
		|						ТОГДА НДФЛРасчетыСБюджетом.КПП
		|					КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|						ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
		|					ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|				КОНЕЦ)
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.Период <= &ДатаПоДанныхУчета
		|	И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
		|	И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиОДоходах.НомерСтроки,
		|	СправкиОДоходах.ФизЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(НДФЛРасчетыСБюджетом.ПримененныйВычет) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	НомерСтроки";
		Запрос.Выполнить();
		
		//-----------------------------------------------------------------------------
		// СВЕДЕНИЯ О ФИЗЛИЦАХ и итоговые данные 4-го и 5-го разделов
		
		СведенияОФизЛицахТекст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|	РаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|	РаботникиОрганизации.НомерСправки КАК НомерСправки,
		|	РаботникиОрганизации.ПереданоНаВзыскание КАК ВзыскИФНС,
		|	РаботникиОрганизации.ФизЛицо.ИНН КАК ИНН,
		|	РаботникиОрганизации.ФизЛицо.ДатаРождения КАК ДатаРождения,
		|	РаботникиОрганизации.ФизЛицо.Наименование КАК ФизЛицоНаименование,
		|	ЕСТЬNULL(ФИОФизЛиц.Фамилия, """") КАК Фамилия,
		|	ЕСТЬNULL(ФИОФизЛиц.Имя, """") КАК Имя,
		|	ЕСТЬNULL(ФИОФизЛиц.Отчество, """") КАК Отчество,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументСерия, """") КАК СерияДокументаУдЛичн,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументНомер, """") КАК НомерДокументаУдЛичн,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументВид, ЗНАЧЕНИЕ(Справочник.ДокументыУдостоверяющиеЛичность.ПустаяСсылка)) КАК ВидДокументаСсылка,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументВид.КодИМНС, """") КАК КодДокументаУдЛичн,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументВид.КодИМНС, """") КАК КодУдЛичн,
		|	ЕСТЬNULL(ПаспортныеДанные.ДокументСерия, """") + "" "" + ЕСТЬNULL(ПаспортныеДанные.ДокументНомер, """") КАК СерНомДок,
		|	ВЫБОР
		|		КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Статус,
		|	ЕСТЬNULL(Гражданство.Страна.Код, ""643"") КАК КодСтраныГражданства,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Гражданство.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)) = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Россия)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоИностранец,
		|	Страны.Код КАК КодСтр,
		|	АдресаИностранцев.Представление КАК АдрТекст,
		|	АдресаРегистрации.Поле1 КАК Индекс,
		|	ВЫБОР
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 1
		|			ТОГДА ""01""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 2
		|			ТОГДА ""02""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 3
		|			ТОГДА ""03""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 4
		|			ТОГДА ""04""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 5
		|			ТОГДА ""05""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 6
		|			ТОГДА ""06""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 7
		|			ТОГДА ""07""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 8
		|			ТОГДА ""08""
		|		КОГДА РегионыПоРегистрации.КодРегионаВКоде = 9
		|			ТОГДА ""09""
		|		ИНАЧЕ РегионыПоРегистрации.КодРегионаВКоде
		|	КОНЕЦ КАК КодРегион,
		|	АдресаРегистрации.Поле3 КАК Район,
		|	АдресаРегистрации.Поле4 КАК Город,
		|	АдресаРегистрации.Поле5 КАК НасПункт,
		|	АдресаРегистрации.Поле6 КАК Улица,
		|	АдресаРегистрации.Поле7 КАК Дом,
		|	АдресаРегистрации.Поле8 КАК Корп,
		|	АдресаРегистрации.Поле9 КАК Кварт,
		|	АдресаРегистрации.Поле2 КАК Регион,
		|	АдресаРегистрации.Поле5 КАК НаселенныйПункт,
		|	АдресаРегистрации.Поле8 КАК Корпус,
		|	АдресаРегистрации.ТипДома КАК ТипДома,
		|	АдресаРегистрации.ТипКорпуса КАК ТипКорпуса,
		|	АдресаРегистрации.ТипКвартиры КАК ТипКвартиры,
		|	ЕСТЬNULL(ПредоставленныеCтандартныеВычеты.СумСтНалВыч, 0) КАК СумСтНалВыч,
		|	ЕСТЬNULL(ПредоставленныеИмущественныеВычеты.СумИмуВыч, 0) КАК СумИмуВыч,
		|	ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаТекущийГод, 0) КАК НИОблСумм,
		|	ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноВТекущемГодуЗаПрошлыеГоды, 0) КАК ВозврСуммПЛ,
		|	ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаТекущийГод, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаТекущийГод, 0) КАК НУОблСумм,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ПереданоНаВзысканиеЗаВсеГоды, 0) > 0
		|			ТОГДА ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ПереданоНаВзысканиеЗаВсеГоды, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДолгНП,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ПереданоНаВзысканиеЗаВсеГоды, 0) < 0
		|			ТОГДА -ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.НачисленоЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.УдержаноЗаВсеГоды, 0) - ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ВозвращеноЗаВсеГоды, 0) + ЕСТЬNULL(НачисленныйУдержанныйНалогЗаГод.ПереданоНаВзысканиеЗаВсеГоды, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДолгНА
		|ИЗ
		|	ВТВсеСправкиОДоходах КАК РаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
		|		ПО РаботникиОрганизации.ФизЛицо = Гражданство.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
		|		ПО РаботникиОрганизации.ФизЛицо = Статусы.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(
		|				&ДатаКадровыхСведений,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТВсеСправкиОДоходах КАК СправкиОДоходах)) КАК ПаспортныеДанные
		|		ПО РаботникиОрганизации.ФизЛицо = ПаспортныеДанные.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|				&ДатаКадровыхСведений,
		|				ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТВсеСправкиОДоходах КАК СправкиОДоходах)) КАК ФИОФизЛиц
		|		ПО РаботникиОрганизации.ФизЛицо = ФИОФизЛиц.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаРегистрации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресныйКлассификатор КАК РегионыПоРегистрации
		|			ПО (РегионыПоРегистрации.ТипАдресногоЭлемента = 1)
		|				И (АдресаРегистрации.Поле2 = РегионыПоРегистрации.Наименование + "" "" + РегионыПоРегистрации.Сокращение)
		|		ПО РаботникиОрганизации.ФизЛицо = АдресаРегистрации.Объект
		|			И (АдресаРегистрации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаИностранцев
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК Страны
		|			ПО АдресаИностранцев.Поле1 = Страны.Наименование
		|		ПО РаботникиОрганизации.ФизЛицо = АдресаИностранцев.Объект
		|			И (АдресаИностранцев.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ИнострАдресФизЛица))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленныеCтандартныеВычетыЗаГод КАК ПредоставленныеCтандартныеВычеты
		|		ПО РаботникиОрганизации.ФизЛицо = ПредоставленныеCтандартныеВычеты.ФизЛицо
		|			И РаботникиОрганизации.НомерСтроки = ПредоставленныеCтандартныеВычеты.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленныеИмущественныеВычетыЗаГод КАК ПредоставленныеИмущественныеВычеты
		|		ПО РаботникиОрганизации.ФизЛицо = ПредоставленныеИмущественныеВычеты.ФизЛицо
		|			И РаботникиОрганизации.НомерСтроки = ПредоставленныеИмущественныеВычеты.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленныйУдержанныйНалогЗаГодПоСтавкам КАК НачисленныйУдержанныйНалогЗаГод
		|		ПО РаботникиОрганизации.ФизЛицо = НачисленныйУдержанныйНалогЗаГод.ФизЛицо
		|			И РаботникиОрганизации.НомерСтроки = НачисленныйУдержанныйНалогЗаГод.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки" ;
		
		//-----------------------------------------------------------------------------
		// ВЫБОРКА ДОХОДОВ ПО ВИДАМ ЗА ГОД ДЛЯ ВСЕХ РАЗДЕЛОВ СПРАВКИ
		
		ДоходыПоВидамЗаГод =
		"ВЫБРАТЬ
		|	СправкиОДоходах.Ставка КАК Ставка,
		|	ВЫБОР
		|		КОГДА СправкиОДоходах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|			ТОГДА ""30""
		|		КОГДА СправкиОДоходах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|			ТОГДА ""13""
		|		КОГДА СправкиОДоходах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|			ТОГДА ""9""
		|		КОГДА СправкиОДоходах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|			ТОГДА ""15""
		|		КОГДА СправкиОДоходах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|			ТОГДА ""35""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК СтавкаДляФайла,
		|	СправкиОДоходах.ФизЛицо КАК ФизЛицо,
		|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА &ПоВсемКодамПоОКАТО
		|			ТОГДА &ПустойКодПоОКАТО
		|		ИНАЧЕ СправкиОДоходах.КодПоОКАТО
		|	КОНЕЦ КАК КодПоОКАТО,
		|	ВЫБОР
		|		КОГДА &ПоВсемКодамПоОКАТО
		|			ТОГДА &ПустойКПП
		|		ИНАЧЕ СправкиОДоходах.КПП
		|	КОНЕЦ КАК КПП,
		|	ВЫБОР
		|		КОГДА СправкиОДоходах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВыводитьВычеты,
		|	МЕСЯЦ(НДФЛСведенияОДоходах.Период) КАК НомМес,
		|	ЕСТЬNULL(НДФЛСведенияОДоходах.КодДоходаКодДляОтчетности, ""    "") КАК КодДоход,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.СуммаВычета = 0
		|			ТОГДА ""   ""
		|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.КодВычета, ""   "")
		|	КОНЕЦ КАК КодВычет,
		|	НДФЛСведенияОДоходах.СуммаДохода КАК СумДоход,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.НеОблагаетсяУНалоговогоАгента
		|			ТОГДА НДФЛСведенияОДоходах.СуммаДохода
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НеОблагаетсяУНА,
		|	ВЫБОР
		|		КОГДА НДФЛСведенияОДоходах.КодДохода.НеОблагаетсяУНалоговогоАгента
		|			ТОГДА 0
		|		ИНАЧЕ НДФЛСведенияОДоходах.СуммаВычета
		|	КОНЕЦ КАК СумВычет
		|ИЗ
		|	ВТВсеСправкиОДоходах КАК СправкиОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|			НДФЛСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|			ЕСТЬNULL(Статусы.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК СтатусРезидентаРФ,
		|			ВЫБОР
		|				КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
		|					ТОГДА ВЫБОР
		|							КОГДА &ВыделятьДивидендыНерезидентов
		|									И НДФЛСведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
		|								ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|							ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|						КОНЕЦ
		|				КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|				КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|				КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|				ИНАЧЕ """"
		|			КОНЕЦ КАК КодДоходаСтавка,
		|			НДФЛСведенияОДоходах.КодДохода.КодДляОтчетности КАК КодДоходаКодДляОтчетности,
		|			ВЫБОР
		|				КОГДА &Это2007год
		|					ТОГДА НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2007
		|				КОГДА &Это2008год
		|					ТОГДА НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2008
		|				ИНАЧЕ НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2009
		|			КОНЕЦ КАК КодВычета,
		|			ВЫБОР
		|				КОГДА &ПоВсемКодамПоОКАТО
		|					ТОГДА &ПустойКПП
		|				КОГДА НДФЛСведенияОДоходах.КПП <> &ПустойКПП
		|					ТОГДА НДФЛСведенияОДоходах.КПП
		|				КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|					ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП
		|				ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|			КОНЕЦ КАК КПП,
		|			ВЫБОР
		|				КОГДА &ПоВсемКодамПоОКАТО
		|					ТОГДА &ПустойКодПоОКАТО
		|				КОГДА НДФЛСведенияОДоходах.КодПоОКАТО <> &ПустойКодПоОКАТО
		|					ТОГДА НДФЛСведенияОДоходах.КодПоОКАТО
		|				КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|					ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО
		|				ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|			КОНЕЦ КАК КодПоОКАТО,
		|			СУММА(НДФЛСведенияОДоходах.СуммаДохода) КАК СуммаДохода,
		|			СУММА(НДФЛСведенияОДоходах.СуммаВычета) КАК СуммаВычета,
		|			НДФЛСведенияОДоходах.КодДохода КАК КодДохода
		|		ИЗ
		|			РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусы КАК Статусы
		|				ПО НДФЛСведенияОДоходах.ФизЛицо = Статусы.ФизЛицо
		|		ГДЕ
		|			НДФЛСведенияОДоходах.ПериодРегистрации <= &ДатаПоДанныхУчета
		|			И НДФЛСведенияОДоходах.ФизЛицо В
		|					(ВЫБРАТЬ
		|						СправкиОДоходах.ФизЛицо
		|					ИЗ
		|						ВТВсеСправкиОДоходах КАК СправкиОДоходах)
		|			И НДФЛСведенияОДоходах.Период МЕЖДУ &НачалоНП И &КонецНП
		|			И НДФЛСведенияОДоходах.Организация = &ГоловнаяОрганизация
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НДФЛСведенияОДоходах.ФизЛицо,
		|			Статусы.Статус,
		|			НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ),
		|			ВЫБОР
		|				КОГДА &Это2007год
		|					ТОГДА НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2007
		|				КОГДА &Это2008год
		|					ТОГДА НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2008
		|				ИНАЧЕ НДФЛСведенияОДоходах.КодВычета.КодДляОтчетности2009
		|			КОНЕЦ,
		|			ВЫБОР
		|				КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
		|					ТОГДА ВЫБОР
		|							КОГДА &ВыделятьДивидендыНерезидентов
		|									И НДФЛСведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
		|								ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|							ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|						КОНЕЦ
		|				КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|				КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|				КОГДА НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|				ИНАЧЕ """"
		|			КОНЕЦ,
		|			НДФЛСведенияОДоходах.КодДохода,
		|			ВЫБОР
		|				КОГДА &ПоВсемКодамПоОКАТО
		|					ТОГДА &ПустойКПП
		|				КОГДА НДФЛСведенияОДоходах.КПП <> &ПустойКПП
		|					ТОГДА НДФЛСведенияОДоходах.КПП
		|				КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|					ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП
		|				ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|			КОНЕЦ,
		|			ВЫБОР
		|				КОГДА &ПоВсемКодамПоОКАТО
		|					ТОГДА &ПустойКодПоОКАТО
		|				КОГДА НДФЛСведенияОДоходах.КодПоОКАТО <> &ПустойКодПоОКАТО
		|					ТОГДА НДФЛСведенияОДоходах.КодПоОКАТО
		|				КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|					ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО
		|				ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|			КОНЕЦ,
		|			НДФЛСведенияОДоходах.КодДохода.КодДляОтчетности) КАК НДФЛСведенияОДоходах
		|		ПО СправкиОДоходах.ФизЛицо = НДФЛСведенияОДоходах.ФизЛицо
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КПП = НДФЛСведенияОДоходах.КПП)
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КодПоОКАТО = НДФЛСведенияОДоходах.КодПоОКАТО)
		|			И СправкиОДоходах.Ставка = НДФЛСведенияОДоходах.КодДоходаСтавка
		|ГДЕ
		|	НДФЛСведенияОДоходах.СуммаДохода <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	НомМес,
		|	КодДоход";
		
		//-----------------------------------------------------------------------------
		// ПРАВА НА ВЫЧЕТЫ
	
		ПраваНаСтандартныеВычетыТекст = 
		"ВЫБРАТЬ
		|	РаботникиОргПраваНаВычеты.Физлицо,
		|	РаботникиОргПраваНаВычеты.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА &Это2007год
		|			ТОГДА РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2007
		|		КОГДА &Это2008год
		|			ТОГДА РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2008
		|		ИНАЧЕ РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2009
		|	КОНЕЦ КАК КодВычет,
		|	СУММА(ВЫБОР
		|			КОГДА ЕСТЬNULL(ДоходыЗаГод.ОблагаемыйДоходЗаГод, 0) + ЕСТЬNULL(НДФЛДоходыПредыдущегоМестаРаботы.Размер, 0) <= РаботникиОргПраваНаВычеты.ОграничениеПоДоходам
		|					ИЛИ РаботникиОргПраваНаВычеты.ОграничениеПоДоходам = 0
		|				ТОГДА РаботникиОргПраваНаВычеты.ПравоНаВычеты
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СумВычет
		|ИЗ
		|	ВТПраваНаСтандВычеты КАК РаботникиОргПраваНаВычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЗаГодНарастающимИтогом КАК ДоходыЗаГод
		|		ПО РаботникиОргПраваНаВычеты.Период = ДоходыЗаГод.Период
		|			И РаботникиОргПраваНаВычеты.Физлицо = ДоходыЗаГод.Физлицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛДоходыПредыдущегоМестаРаботы КАК НДФЛДоходыПредыдущегоМестаРаботы
		|		ПО (НДФЛДоходыПредыдущегоМестаРаботы.Организация = &ГоловнаяОрганизация)
		|			И (НДФЛДоходыПредыдущегоМестаРаботы.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(РаботникиОргПраваНаВычеты.Период, МЕСЯЦ))
		|			И РаботникиОргПраваНаВычеты.Физлицо = НДФЛДоходыПредыдущегоМестаРаботы.ФизЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА &Это2007год
		|			ТОГДА РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2007
		|		КОГДА &Это2008год
		|			ТОГДА РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2008
		|		ИНАЧЕ РаботникиОргПраваНаВычеты.КодВычета.КодДляОтчетности2009
		|	КОНЕЦ,
		|	РаботникиОргПраваНаВычеты.Физлицо,
		|	РаботникиОргПраваНаВычеты.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
			
		// ПраваНаИмущественныеВычеты 
		//	Поля:
		//		ФизЛицо, НомерСтроки
		//		КодВычет
		//      СумВычет - сумма вычета за налоговый период
		//
		//	Описание:
		//	
		
		ПраваНаИмущественныеВычетыТекст = 
		"ВЫБРАТЬ
		|	СправкиОДоходах.ФизЛицо,
		|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА &Это2007год
		|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный.КодДляОтчетности2007
		|		КОГДА &Это2008год
		|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный.КодДляОтчетности2008
		|		ИНАЧЕ НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный.КодДляОтчетности2009
		|	КОНЕЦ КАК КодВычет,
		|	СУММА(НДФЛИмущественныеВычетыФизлиц.Размер) КАК СумВычет
		|ИЗ
		|	ВТСправкиОДоходах КАК СправкиОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛИмущественныеВычетыФизлиц КАК НДФЛИмущественныеВычетыФизлиц
		|		ПО СправкиОДоходах.ФизЛицо = НДФЛИмущественныеВычетыФизлиц.ФизЛицо
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КодПоОКАТО = ВЫБОР
		|					КОГДА НДФЛИмущественныеВычетыФизлиц.КодПоОКАТО <> &ПустойКодПоОКАТО
		|						ТОГДА НДФЛИмущественныеВычетыФизлиц.КодПоОКАТО
		|					КОГДА ЕСТЬNULL(НДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|						ТОГДА НДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации.КодПоОКАТО
		|					ИНАЧЕ ЕСТЬNULL(НДФЛИмущественныеВычетыФизлиц.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|				КОНЕЦ)
		|			И (&ПоВсемКодамПоОКАТО
		|				ИЛИ СправкиОДоходах.КПП = ВЫБОР
		|					КОГДА НДФЛИмущественныеВычетыФизлиц.КПП <> &ПустойКПП
		|						ТОГДА НДФЛИмущественныеВычетыФизлиц.КПП
		|					КОГДА ЕСТЬNULL(НДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|						ТОГДА НДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации.КПП
		|					ИНАЧЕ ЕСТЬNULL(НДФЛИмущественныеВычетыФизлиц.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|				КОНЕЦ)
		|ГДЕ
		|	НДФЛИмущественныеВычетыФизлиц.Период МЕЖДУ &НачалоНП И &ДатаПоДанныхУчета
		|	И НДФЛИмущественныеВычетыФизлиц.Год = &НалоговыйПериод
		|	И НДФЛИмущественныеВычетыФизлиц.Организация = &ГоловнаяОрганизация
		|	И НДФЛИмущественныеВычетыФизлиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|СГРУППИРОВАТЬ ПО
		|	СправкиОДоходах.ФизЛицо,
		|	СправкиОДоходах.НомерСтроки,
		|	ВЫБОР
		|		КОГДА &Это2007год
		|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный.КодДляОтчетности2007
		|		КОГДА &Это2008год
		|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный.КодДляОтчетности2008
		|		ИНАЧЕ НДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный.КодДляОтчетности2009
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	КодВычет";
		
		// ПодтвержденияИмущВычета
		//	Поля:
		//		ФизЛицо
		//		НомерВходящегоДокумента
		//		ДатаУведомления
		//		КодНалоговогоОргана
		//
		//	Описание:
		// для физлиц из документа выбираются данные из введенных документов-подтверждений имущественного вычета
		
		ПодтвержденияИмущВычетаТекст =
		"ВЫБРАТЬ
		|	ДатыПодтверждения.ФизЛицо КАК ФизЛицо,
		|	Подтверждение.НомерВходящегоДокумента КАК НомерУведомления,
		|	Подтверждение.ДатаУведомления КАК ДатаУведомления,
		|	Подтверждение.КодНалоговогоОргана КАК ИФНСУведомления
		|ИЗ
		|	(ВЫБРАТЬ
		|		СправкиОДоходах.ФизЛицо КАК ФизЛицо,
		|		МИНИМУМ(Подтверждение.ДатаСобытия) КАК Период
		|	ИЗ
		|		ВТСправкиОДоходах КАК СправкиОДоходах
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НДФЛПодтверждениеПраваНаИмущественныйВычет.РаботникиОрганизации КАК Подтверждение
		|			ПО СправкиОДоходах.ФизЛицо = Подтверждение.ФизЛицо
		|	ГДЕ
		|		Подтверждение.Ссылка.НалоговыйПериод = &НалоговыйПериод
		|		И ВЫБОР
		|				КОГДА Подтверждение.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|					ТОГДА Подтверждение.Ссылка.Организация
		|				ИНАЧЕ Подтверждение.Ссылка.Организация.ГоловнаяОрганизация
		|			КОНЕЦ = &ГоловнаяОрганизация
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СправкиОДоходах.ФизЛицо) КАК ДатыПодтверждения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НДФЛПодтверждениеПраваНаИмущественныйВычет.РаботникиОрганизации КАК Подтверждение
		|		ПО ДатыПодтверждения.ФизЛицо = Подтверждение.ФизЛицо
		|			И ДатыПодтверждения.Период = Подтверждение.ДатаСобытия
		|			И (ВЫБОР
		|				КОГДА Подтверждение.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|					ТОГДА Подтверждение.Ссылка.Организация
		|				ИНАЧЕ Подтверждение.Ссылка.Организация.ГоловнаяОрганизация
		|			КОНЕЦ = &ГоловнаяОрганизация)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизЛицо";
		
		//-----------------------------------------------------------------------------
		// ВЫБОРКА ДАННЫХ 
		
		Запрос.Текст = СведенияОФизЛицахТекст; 	
		ВыборкаФизЛиц = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = ПодтвержденияИмущВычетаТекст; 	
		ВыборкаПодтвержденияИмущВычета = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = ДоходыПоВидамЗаГод; 	
		ВыборкаДоходовФизЛиц = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = ПраваНаСтандартныеВычетыТекст; 	
		ВыборкаСтандВычетовФизЛиц = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = ПраваНаИмущественныеВычетыТекст; 	
		ВыборкаИмущВычетовФизЛиц = Запрос.Выполнить().Выбрать();
		
		//-----------------------------------------------------------------------------
		// ФОРМИРОВАНИЕ ДЕРЕВА ДАННЫХ
		
		// Создаем начальное дерево
		ДеревоВыгрузки = ПроцедурыПерсонифицированногоУчета.СоздатьДеревоXML();
		
		ВерсияФормата = "4.00001";
		
		Атрибуты = Новый Соответствие;
		Атрибуты.Вставить("ИдФайл",СтрЗаменить(ПолучитьИмяФайла2НДФЛ(,ВерсияФормата, Дата),".xml",""));
		Атрибуты.Вставить("ВерсПрог","1С:" + РегламентированнаяОтчетность.ИДКонфигурации() + " " + РегламентированнаяОтчетность.РедакцияКонфигурации());
		Атрибуты.Вставить("ВерсФорм",ВерсияФормата);
		
		Узел2НДФЛ = ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(ДеревоВыгрузки, "НДФЛ2", "", Атрибуты);
		
		// Информационная часть
		ФорматСправка = ЗагрузитьФорматНабораЗаписей(МакетФормата, "Справка", ОрганизацияЭтоФизЛицо);
		
		// Общие сведения служебной части
		НаборЗаписейОбщСвСЧ = ФорматСправка.ОбщСвИЧ.Значение;
		НаборЗаписейОбщСвСЧ.ДатаСпр = Дата;
		НаборЗаписейОбщСвСЧ.ИФНСНА = ВыборкаСведенийОбНА.КодИФНСОрганизации;
		НаборЗаписейОбщСвСЧ.ГодДох = НалоговыйПериод;
		
		// Сведения об отправителе
		
		Если ОрганизацияЭтоФизЛицо Тогда
			
			Фамилия 	= ВыборкаСведенийОбНА.Фамилия;
			Имя 		= ВыборкаСведенийОбНА.Имя;
			Отчество 	= ВыборкаСведенийОбНА.Отчество;
			
			Если Фамилия = Null Тогда
				ОбщегоНазначенияЗК.ФамилияИнициалыФизЛица(ВыборкаСведенийОбНА.НаименованиеОрганизации,Фамилия,Имя,Отчество);
			КонецЕсли;
			
			НаборЗаписейОтправитель = ФорматСправка.ИстДох.Значение.СвНАФЛ.Значение;
				
			НаборЗаписейОтправитель.ФИОФЛ.Значение.Фамилия = Фамилия;
			НаборЗаписейОтправитель.ФИОФЛ.Значение.Имя = Имя;
			НаборЗаписейОтправитель.ФИОФЛ.Значение.Отчество = Отчество;
			НаборЗаписейОтправитель.ИННФЛ.Значение = ВыборкаСведенийОбНА.ИНН;
			НаборЗаписейОтправитель.ОКАТО.Значение = ВыборкаСведенийОбНА.КодПоОКАТО;
			Если НЕ ЗначениеЗаполнено(КонтактныйТелефонОтветственного) Тогда
				НаборЗаписейОтправитель.Удалить("Телефон");
			Иначе
				НаборЗаписейОтправитель.Телефон.Значение = КонтактныйТелефонОтветственного;
			КонецЕсли;
			
			// проверим данные отправителя
			// Для предпринимателя 12 символов ИНН
			Если НЕ РегламентированнаяОтчетность.ИННСоответствуетТребованиям(ВыборкаСведенийОбНА.ИНН, Перечисления.ЮрФизЛицо.ФизЛицо) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для физического лица-работодателя неверно введен ИНН!", Отказ);
			КонецЕсли;
			
			Если НЕ РегламентированнаяОтчетность.СтрокаНаписанаПоРусски(Фамилия + Имя + Отчество) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для физического лица-работодателя Фамилия, Имя, Отчество должно быть введены русскими буквами!", Отказ);
			КонецЕсли;
			Если ПустаяСтрока(Фамилия) Или ПустаяСтрока(Имя) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для физического лица-работодателя должны быть указаны, как минимум, фамилия и имя!", Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ВыборкаСведенийОбНА.КодИФНСОрганизации) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан код ИФНС физического лица - работодателя!", Отказ);
				
			ИначеЕсли СтрДлина(СокрЛП(ВыборкаСведенийОбНА.КодИФНСОрганизации)) <> 4 Тогда	
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Неверно указан код ИФНС физического лица - работодателя!", Отказ);
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ВыборкаСведенийОбНА.КодПоОКАТО) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан код по ОКАТО места жительства физического лица - работодателя!", Отказ);
				
			ИначеЕсли СтрДлина(СокрЛП(ВыборкаСведенийОбНА.КодПоОКАТО)) <> 11 Тогда	
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Неверно указан код по ОКАТО места жительства физического лица - работодателя!", Отказ);
				
			КонецЕсли;
			
			// для работодателя-ФЛ создадим пустую служебную выборку физлиц, имеющих справки по нескольким кодам ОКАТО
				
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК ФизЛицо
			|ГДЕ
			|	ЛОЖЬ";
			ВыборкаФизлицСНесколькимиОКАТО = Запрос.Выполнить().Выбрать();
			
		Иначе
			
			// Сведения об отправителе
			НаборЗаписейОтправитель = ФорматСправка.ИстДох.Значение.СвНАЮЛ.Значение;
			
			Если СокрЛП(ВыборкаСведенийОбНА.НаименованиеОрганизации) = "" Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для организации должно быть указано сокращенное наименование организации!", Отказ);
			КонецЕсли;
			
			НаборЗаписейОтправитель.НаимОрг.Значение = ВыборкаСведенийОбНА.НаименованиеОрганизации;
			НаборЗаписейОтправитель.ИННЮЛ.Значение = ВыборкаСведенийОбНА.ИНН;
			
			Если НЕ ЗначениеЗаполнено(КонтактныйТелефонОтветственного) Тогда
				НаборЗаписейОтправитель.Удалить("Телефон");
			Иначе
				НаборЗаписейОтправитель.Телефон.Значение = КонтактныйТелефонОтветственного;
			КонецЕсли;
			
			// проверим данные отправителя		
			Если НЕ ЗначениеЗаполнено(ВыборкаСведенийОбНА.КодИФНСОрганизации) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан код ИФНС организации - работодателя!", Отказ);
			КонецЕсли; 
			
			// если по ФЛ за налоговый период формируется несколько справок, то
			// выполняем дополнительные запросы по распределению прав на вычеты по кодам ОКАТО
				
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СправкиОДоходах.ФизЛицо КАК ФизЛицо,
			|	ВЫБОР
			|		КОГДА НДФЛСведенияОДоходах.КодПоОКАТО <> &ПустойКодПоОКАТО
			|			ТОГДА НДФЛСведенияОДоходах.КодПоОКАТО
			|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
			|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО
			|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
			|	КОНЕЦ КАК КодПоОКАТО,
			|	ВЫБОР
			|		КОГДА НДФЛСведенияОДоходах.КПП <> &ПустойКПП
			|			ТОГДА НДФЛСведенияОДоходах.КПП
			|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
			|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП
			|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КПП, &ПустойКПП)
			|	КОНЕЦ КАК КПП
			|ПОМЕСТИТЬ ВТКодыПоФизлицам
			|ИЗ
			|	ВТСправкиОДоходах КАК СправкиОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
			|		ПО (НДФЛСведенияОДоходах.ФизЛицо = СправкиОДоходах.ФизЛицо)
			|			И (НДФЛСведенияОДоходах.Период МЕЖДУ &НачалоНП И &КонецНП)
			|			И (НДФЛСведенияОДоходах.ПериодРегистрации <= &ДатаПоДанныхУчета)
			|			И (НДФЛСведенияОДоходах.Организация = &ГоловнаяОрганизация)
			|			И (НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КодыПоФизлицам.ФизЛицо КАК ФизЛицо,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КодыПоФизлицам.КодПоОКАТО) КАК ВсегоКодовПоОКАТО,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КодыПоФизлицам.КПП) КАК ВсегоКПП
			|ПОМЕСТИТЬ ВТКоличествоЭкземпляров
			|ИЗ
			|	ВТКодыПоФизлицам КАК КодыПоФизлицам
			|
			|СГРУППИРОВАТЬ ПО
			|	КодыПоФизлицам.ФизЛицо
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КоличествоЭкземпляров.ФизЛицо
			|ИЗ
			|	ВТКоличествоЭкземпляров КАК КоличествоЭкземпляров
			|ГДЕ
			|	(КоличествоЭкземпляров.ВсегоКодовПоОКАТО > 1
			|			ИЛИ КоличествоЭкземпляров.ВсегоКПП > 1)";

			ВыборкаФизлицСНесколькимиОКАТО = Запрос.Выполнить().Выбрать();
			Если ВыборкаФизлицСНесколькимиОКАТО.Количество() > 0 Тогда 
				
				////////////////////////////////////////////////////////////////////////////////
				// запросы распределения предоставленных вычетов по кодам ОКАТО
				
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДатыРегистра.ФизЛицо КАК ФизЛицо,
				|	СУММА(НДФЛСведенияОДоходах.СуммаДохода) КАК СуммаДохода,
				|	ВЫБОР
				|		КОГДА НДФЛСведенияОДоходах.КодПоОКАТО <> &ПустойКодПоОКАТО
				|			ТОГДА НДФЛСведенияОДоходах.КодПоОКАТО
				|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
				|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО
				|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ВЫБОР
				|		КОГДА НДФЛСведенияОДоходах.КПП <> &ПустойКПП
				|			ТОГДА НДФЛСведенияОДоходах.КПП
				|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
				|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП
				|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КПП, &ПустойКПП)
				|	КОНЕЦ КАК КПП
				|ПОМЕСТИТЬ ВТПоследниеДанныеРегистра
				|ИЗ
				|	(ВЫБРАТЬ
				|		Работники.ФизЛицо КАК ФизЛицо,
				|		МАКСИМУМ(НДФЛСведенияОДоходах.ПериодРегистрации) КАК ПериодРегистрации
				|	ИЗ
				|		ВТСправкиОДоходах КАК Работники
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
				|			ПО Работники.ФизЛицо = НДФЛСведенияОДоходах.ФизЛицо
				|	ГДЕ
				|		НДФЛСведенияОДоходах.Период МЕЖДУ &НачалоНП И &КонецНП
				|		И НДФЛСведенияОДоходах.Организация = &ГоловнаяОрганизация
				|		И НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
				|		И НДФЛСведенияОДоходах.ПериодРегистрации <= &ДатаПоДанныхУчета
				|	
				|	СГРУППИРОВАТЬ ПО
				|		Работники.ФизЛицо) КАК ДатыРегистра
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
				|		ПО ДатыРегистра.ФизЛицо = НДФЛСведенияОДоходах.ФизЛицо
				|			И ДатыРегистра.ПериодРегистрации = НДФЛСведенияОДоходах.ПериодРегистрации
				|ГДЕ
				|	НДФЛСведенияОДоходах.Период МЕЖДУ &НачалоНП И &КонецНП
				|	И НДФЛСведенияОДоходах.Организация = &ГоловнаяОрганизация
				|	И НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
				|	И НДФЛСведенияОДоходах.ПериодРегистрации <= &ДатаПоДанныхУчета
				|
				|СГРУППИРОВАТЬ ПО
				|	ДатыРегистра.ФизЛицо,
				|	ВЫБОР
				|		КОГДА НДФЛСведенияОДоходах.КодПоОКАТО <> &ПустойКодПоОКАТО
				|			ТОГДА НДФЛСведенияОДоходах.КодПоОКАТО
				|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
				|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КодПоОКАТО
				|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА НДФЛСведенияОДоходах.КПП <> &ПустойКПП
				|			ТОГДА НДФЛСведенияОДоходах.КПП
				|		КОГДА ЕСТЬNULL(НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
				|			ТОГДА НДФЛСведенияОДоходах.ПодразделениеОрганизации.КПП
				|		ИНАЧЕ ЕСТЬNULL(НДФЛСведенияОДоходах.ОбособленноеПодразделение.КПП, &ПустойКПП)
				|	КОНЕЦ
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ФизЛицо,
				|	КодПоОКАТО,
				|	КПП
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КодыМаксимальногоДохода.ФизЛицо КАК ФизЛицо,
				|	КодыМаксимальногоДохода.КодПоОКАТО,
				|	КодыМаксимальногоДохода.КПП
				|ПОМЕСТИТЬ ВТПоследниеКодыЗаГод
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПоследниеДанныеРегистра.ФизЛицо КАК ФизЛицо,
				|		ПоследниеДанныеРегистра.КодПоОКАТО КАК КодПоОКАТО,
				|		ПоследниеДанныеРегистра.КПП КАК КПП,
				|		МАКСИМУМ(ПоследниеДанныеРегистра.СуммаДохода) КАК СуммаДохода
				|	ИЗ
				|		ВТПоследниеДанныеРегистра КАК ПоследниеДанныеРегистра
				|	
				|	СГРУППИРОВАТЬ ПО
				|		ПоследниеДанныеРегистра.ФизЛицо,
				|		ПоследниеДанныеРегистра.КодПоОКАТО,
				|		ПоследниеДанныеРегистра.КПП) КАК КодыМаксимальногоДохода
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоследниеДанныеРегистра КАК ПоследниеДанныеРегистра
				|		ПО КодыМаксимальногоДохода.ФизЛицо = ПоследниеДанныеРегистра.ФизЛицо
				|			И КодыМаксимальногоДохода.СуммаДохода = ПоследниеДанныеРегистра.СуммаДохода
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ФизЛицо";
				Запрос.Выполнить();
				
				// ПравоНаCтандартныеВычетыПоКодамОКАТО
				//	Поля:
				//		Физлицо,
				//		КодПоОКАТО,КПП 
				//      КодВычета
				//      СуммаВычета
				//
				// Описание:
				//	Суммы распределенных по кодам ОКАТО прав на стандартные вычеты
				//
				
				ПравоНаCтандартныеВычетыПоКодамОКАТОТекст = 
				"ВЫБРАТЬ
				|	СправкиОДоходах.ФизЛицо КАК ФизЛицо,
				|	НДФЛРасчетыСБюджетом.КодВычета КАК КодВычета,
				|	ВЫБОР
				|		КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
				|			ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
				|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
				|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
				|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ВЫБОР
				|		КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
				|			ТОГДА НДФЛРасчетыСБюджетом.КПП
				|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
				|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
				|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
				|	КОНЕЦ КАК КПП,
				|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
				|	НДФЛРасчетыСБюджетом.ПримененныйВычет
				|ПОМЕСТИТЬ ВТСуммыВычетовПоМесяцам
				|ИЗ
				|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
				|		СправкиОДоходах.ФизЛицо КАК ФизЛицо
				|	ИЗ
				|		ВТСправкиОДоходах КАК СправкиОДоходах) КАК СправкиОДоходах
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛПредоставленныеСтандартныеВычетыФизЛиц КАК НДФЛРасчетыСБюджетом
				|		ПО СправкиОДоходах.ФизЛицо = НДФЛРасчетыСБюджетом.ФизЛицо
				|ГДЕ
				|	НДФЛРасчетыСБюджетом.Период <= &ДатаПоДанныхУчета
				|	И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
				|	И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ФизЛицо,
				|	МесяцНалоговогоПериода,
				|	КодВычета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СуммыВычетовПоМесяцам.Физлицо КАК Физлицо,
				|	СуммыВычетовПоМесяцам.КодВычета КАК КодВычета,
				|	СУММА(СуммыВычетовПоМесяцам.СуммаВычета) КАК СуммаВычета
				|ПОМЕСТИТЬ ВТОстаткиСтандартныхВычетов
				|ИЗ
				|	(ВЫБРАТЬ
				|		РаботникиОргПраваНаВычеты.ФизЛицо КАК Физлицо,
				|		ВЫБОР
				|			КОГДА ЕСТЬNULL(ДоходыЗаГод.ОблагаемыйДоходЗаГод, 0) + ЕСТЬNULL(НДФЛДоходыПредыдущегоМестаРаботы.Размер, 0) <= РаботникиОргПраваНаВычеты.ОграничениеПоДоходам
				|					ИЛИ РаботникиОргПраваНаВычеты.ОграничениеПоДоходам = 0
				|				ТОГДА РаботникиОргПраваНаВычеты.ПравоНаВычеты
				|			ИНАЧЕ 0
				|		КОНЕЦ КАК СуммаВычета,
				|		РаботникиОргПраваНаВычеты.КодВычета КАК КодВычета
				|	ИЗ
				|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
				|			РаботникиОргПраваНаВычеты.ФизЛицо КАК ФизЛицо,
				|			РаботникиОргПраваНаВычеты.ОграничениеПоДоходам КАК ОграничениеПоДоходам,
				|			РаботникиОргПраваНаВычеты.ПравоНаВычеты КАК ПравоНаВычеты,
				|			РаботникиОргПраваНаВычеты.Период КАК Период,
				|			РаботникиОргПраваНаВычеты.КодВычета КАК КодВычета
				|		ИЗ
				|			ВТПраваНаСтандВычеты КАК РаботникиОргПраваНаВычеты) КАК РаботникиОргПраваНаВычеты
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЗаГодНарастающимИтогом КАК ДоходыЗаГод
				|			ПО (ДоходыЗаГод.Период = РаботникиОргПраваНаВычеты.Период)
				|				И (ДоходыЗаГод.ФизЛицо = РаботникиОргПраваНаВычеты.ФизЛицо)
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛДоходыПредыдущегоМестаРаботы КАК НДФЛДоходыПредыдущегоМестаРаботы
				|			ПО (НДФЛДоходыПредыдущегоМестаРаботы.Организация = &ГоловнаяОрганизация)
				|				И (НДФЛДоходыПредыдущегоМестаРаботы.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(РаботникиОргПраваНаВычеты.Период, МЕСЯЦ))
				|				И (НДФЛДоходыПредыдущегоМестаРаботы.ФизЛицо = РаботникиОргПраваНаВычеты.ФизЛицо)
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		СуммыВычетовПоМесяцам.ФизЛицо,
				|		-СуммыВычетовПоМесяцам.ПримененныйВычет,
				|		СуммыВычетовПоМесяцам.КодВычета
				|	ИЗ
				|		ВТСуммыВычетовПоМесяцам КАК СуммыВычетовПоМесяцам) КАК СуммыВычетовПоМесяцам
				|
				|СГРУППИРОВАТЬ ПО
				|	СуммыВычетовПоМесяцам.Физлицо,
				|	СуммыВычетовПоМесяцам.КодВычета
				|
				|ИМЕЮЩИЕ
				|	СУММА(СуммыВычетовПоМесяцам.СуммаВычета) > 0
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Физлицо,
				|	КодВычета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СуммыВычетовПоМесяцам.ФизЛицо КАК ФизЛицо,
				|	СуммыВычетовПоМесяцам.КодПоОКАТО,
				|	СуммыВычетовПоМесяцам.КПП,
				|	СуммыВычетовПоМесяцам.КодВычета КАК КодВычета,
				|	СУММА(СуммыВычетовПоМесяцам.СуммаВычета) КАК СуммаВычета
				|ПОМЕСТИТЬ ВТПравоНаCтандартныеВычетыПоВсемОКАТО
				|ИЗ
				|	(ВЫБРАТЬ
				|		СуммыВычетовПоМесяцам.ФизЛицо КАК ФизЛицо,
				|		СуммыВычетовПоМесяцам.КодПоОКАТО КАК КодПоОКАТО,
				|		СуммыВычетовПоМесяцам.КПП КАК КПП,
				|		СуммыВычетовПоМесяцам.ПримененныйВычет КАК СуммаВычета,
				|		СуммыВычетовПоМесяцам.КодВычета КАК КодВычета
				|	ИЗ
				|		ВТСуммыВычетовПоМесяцам КАК СуммыВычетовПоМесяцам
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ОстаткиСтандартныхВычетов.Физлицо,
				|		ПоследниеКодыЗаГод.КодПоОКАТО,
				|		ПоследниеКодыЗаГод.КПП,
				|		ОстаткиСтандартныхВычетов.СуммаВычета,
				|		ОстаткиСтандартныхВычетов.КодВычета
				|	ИЗ
				|		ВТОстаткиСтандартныхВычетов КАК ОстаткиСтандартныхВычетов
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПоследниеКодыЗаГод КАК ПоследниеКодыЗаГод
				|			ПО ОстаткиСтандартныхВычетов.Физлицо = ПоследниеКодыЗаГод.ФизЛицо) КАК СуммыВычетовПоМесяцам
				|
				|СГРУППИРОВАТЬ ПО
				|	СуммыВычетовПоМесяцам.ФизЛицо,
				|	СуммыВычетовПоМесяцам.КодПоОКАТО,
				|	СуммыВычетовПоМесяцам.КПП,
				|	СуммыВычетовПоМесяцам.КодВычета
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ФизЛицо,
				|	КодВычета
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СправкиОДоходах.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР
				|		КОГДА &Это2007год
				|			ТОГДА ПравоНаCтандартныеВычетыПоВсемОКАТО.КодВычета.КодДляОтчетности2007
				|		КОГДА &Это2008год
				|			ТОГДА ПравоНаCтандартныеВычетыПоВсемОКАТО.КодВычета.КодДляОтчетности2008
				|		ИНАЧЕ ПравоНаCтандартныеВычетыПоВсемОКАТО.КодВычета.КодДляОтчетности2009
				|	КОНЕЦ КАК КодВычет,
				|	ПравоНаCтандартныеВычетыПоВсемОКАТО.СуммаВычета КАК СумВычет
				|ИЗ
				|	ВТВсеСправкиОДоходах КАК СправкиОДоходах
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПравоНаCтандартныеВычетыПоВсемОКАТО КАК ПравоНаCтандартныеВычетыПоВсемОКАТО
				|		ПО СправкиОДоходах.ФизЛицо = ПравоНаCтандартныеВычетыПоВсемОКАТО.ФизЛицо
				|			И СправкиОДоходах.КодПоОКАТО = ПравоНаCтандартныеВычетыПоВсемОКАТО.КодПоОКАТО
				|			И СправкиОДоходах.КПП = ПравоНаCтандартныеВычетыПоВсемОКАТО.КПП
				|ГДЕ
				|	ЕСТЬNULL(ПравоНаCтандартныеВычетыПоВсемОКАТО.СуммаВычета, 0) > 0
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки";
				
				Запрос.Текст = ПравоНаCтандартныеВычетыПоКодамОКАТОТекст; 	
				ВыборкаСтандВычетовФизЛицПоКодамОКАТО = Запрос.Выполнить().Выбрать();
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Заполняем дерево документами - справками о доходах
		СоответствиеФизЛиц = Новый Соответствие;
		
		Пока ВыборкаДоходовФизЛиц.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			СтрОшибки = "";	
			
			ВыборкаФизЛиц.Сбросить();
			ВыборкаФизЛиц.НайтиСледующий(ВыборкаДоходовФизЛиц.НомерСтроки,"НомерСтроки");
			
			ВыборкаПодтвержденияИмущВычета.Сбросить();
			ЕстьПодтверждениеИмущВычета = ВыборкаПодтвержденияИмущВычета.НайтиСледующий(ВыборкаДоходовФизЛиц.ФизЛицо,"ФизЛицо");
			
			ВыборкаФизлицСНесколькимиОКАТО.Сбросить();
			ЕстьНесколькоОКАТО = ВыборкаФизлицСНесколькимиОКАТО.НайтиСледующий(ВыборкаДоходовФизЛиц.ФизЛицо,"ФизЛицо");
			
			ДанныеОФизлицеДляСправки = ПолучитьПустуюСправкуФизлица(СоответствиеФизЛиц, ВыборкаДоходовФизЛиц.ФизЛицо, ФорматСправка, ВыборкаФизЛиц, СтрОшибки);
			
			// копируем заполненные ранее разделы
			НаборЗаписейИнфЧастСправки = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(ДанныеОФизлицеДляСправки);
			
			НаборЗаписейИнфЧастСправки.ОбщСвИЧ.Значение.НомСпр = ВыборкаФизЛиц.НомерСправки;
			Если Не ОрганизацияЭтоФизЛицо Тогда
				НаборЗаписейОтправитель = НаборЗаписейИнфЧастСправки.ИстДох.Значение.СвНАЮЛ.Значение;
				НаборЗаписейОтправитель.КПП.Значение = ВыборкаДоходовФизЛиц.КПП;
				НаборЗаписейОтправитель.ОКАТО.Значение = ВыборкаДоходовФизЛиц.КодПоОКАТО;
			КонецЕсли;
			
			// Сведения об облагаемых доходах
			НаборЗаписейДоходы = НаборЗаписейИнфЧастСправки.СвДохСтав.Значение;
			НаборЗаписейДоходы.Ставка.Значение = ВыборкаДоходовФизЛиц.СтавкаДляФайла;
			ТаблицаДоходов = НаборЗаписейДоходы.ДохВыч.Значение;
			ТаблицаДоходов.Колонки.Добавить("НеОблагаетсяУНА"); // для кодов 15хх, 22хх, не облагаемых у налогового агента
			Пока ВыборкаДоходовФизЛиц.Следующий() Цикл  // Доходы
				Если Не ПустаяСтрока(ВыборкаДоходовФизЛиц.КодДоход) Тогда
					СтрокаТЗ = ТаблицаДоходов.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТЗ,ВыборкаДоходовФизЛиц); // НомМес, КодДоход, СумДоход КодВычет, СумВычет
					СтрокаТЗ.НомМес = ?(СтрДлина(СтрокаТЗ.НомМес) = 1,"0","") + СтрокаТЗ.НомМес;
				КонецЕсли;
			КонецЦикла;
			
			// Стандартные налоговые вычеты
			НаборЗаписейСтандИмущВычет = НаборЗаписейДоходы.СтандВыч.Значение;
			ТаблицаВычетов = НаборЗаписейСтандИмущВычет.ПравоВыч.Значение;
			Если ВыборкаДоходовФизЛиц.ВыводитьВычеты Тогда
				Если ЕстьНесколькоОКАТО Тогда
					ВыборкаСтандВычетовФизЛицПоКодамОКАТО.Сбросить();
					Пока ВыборкаСтандВычетовФизЛицПоКодамОКАТО.НайтиСледующий(ВыборкаДоходовФизЛиц.НомерСтроки,"НомерСтроки") Цикл  // право на вычеты
						Если ВыборкаСтандВычетовФизЛицПоКодамОКАТО.СумВычет <> 0 Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаВычетов.Добавить(),ВыборкаСтандВычетовФизЛицПоКодамОКАТО) // КодВычет, СумВычет
						КонецЕсли; 
					КонецЦикла;
					
				Иначе
					ВыборкаСтандВычетовФизЛиц.Сбросить();
					Пока ВыборкаСтандВычетовФизЛиц.НайтиСледующий(ВыборкаДоходовФизЛиц.НомерСтроки,"НомерСтроки") Цикл  // право на вычеты
						Если ВыборкаСтандВычетовФизЛиц.СумВычет <> 0 Тогда
							ЗаполнитьЗначенияСвойств(ТаблицаВычетов.Добавить(),ВыборкаСтандВычетовФизЛиц) // КодВычет, СумВычет
						КонецЕсли; 
					КонецЦикла;
				КонецЕсли;
				Если ТаблицаВычетов.Количество() = 0 Тогда // нет прав - удалим раздел целиком 
					НаборЗаписейДоходы.Удалить("СтандВыч");
				Иначе	
					НаборЗаписейСтандИмущВычет.СумСтНалВыч.Значение = ВыборкаФизЛиц.СумСтНалВыч;
				КонецЕсли;
			Иначе
				НаборЗаписейДоходы.Удалить("СтандВыч");
			КонецЕсли;
			
			// Имущественные налоговые вычеты
			НаборЗаписейСтандИмущВычет = НаборЗаписейДоходы.ИмущВыч.Значение;
			ТаблицаВычетов = НаборЗаписейСтандИмущВычет.ПравоВыч.Значение;
			Если ВыборкаДоходовФизЛиц.ВыводитьВычеты Тогда
				ВыборкаИмущВычетовФизЛиц.Сбросить();
				Пока ВыборкаИмущВычетовФизЛиц.НайтиСледующий(ВыборкаДоходовФизЛиц.НомерСтроки,"НомерСтроки") Цикл  // право на вычеты
					Если ВыборкаИмущВычетовФизЛиц.СумВычет <> 0 Тогда
						ЗаполнитьЗначенияСвойств(ТаблицаВычетов.Добавить(),ВыборкаИмущВычетовФизЛиц) // КодВычет, СумВычет
					КонецЕсли; 
				КонецЦикла;
				Если ТаблицаВычетов.Количество() = 0 Тогда // нет вычетов - удалим раздел целиком 
					НаборЗаписейДоходы.Удалить("ИмущВыч");
				ИначеЕсли ЕстьПодтверждениеИмущВычета Тогда
					Если Не ОбщегоНазначенияЗК.ТолькоЦифрыВСтроке(ВыборкаПодтвержденияИмущВычета.ИФНСУведомления) Тогда
						СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + " - неверно указан код налогового органа, выдавшего Уведомление о предоставлении имущественного вычета!";
					КонецЕсли;
					Если ПустаяСтрока(ВыборкаПодтвержденияИмущВычета.НомерУведомления) Тогда
						СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + " - не указан номер Уведомления о предоставлении имущественного вычета!";
					КонецЕсли;
					НаборЗаписейСтандИмущВычет.НомерУвед.Значение = ВыборкаПодтвержденияИмущВычета.НомерУведомления; 
					НаборЗаписейСтандИмущВычет.ДатаУвед.Значение = ВыборкаПодтвержденияИмущВычета.ДатаУведомления; 
					НаборЗаписейСтандИмущВычет.ИФНСУвед.Значение = ВыборкаПодтвержденияИмущВычета.ИФНСУведомления;
					НаборЗаписейСтандИмущВычет.СумИмуВыч.Значение = ВыборкаФизЛиц.СумИмуВыч;
				Иначе
					СтрОшибки = СтрОшибки + Символы.ПС + Символы.Таб + " - отсутствуют данные Уведомления о предоставлении имущественного вычета!";
				КонецЕсли;
			Иначе
				НаборЗаписейДоходы.Удалить("ИмущВыч");
			КонецЕсли;
			
			// Скорректируем данные о вычетах к доходам: если код вычета отсутствует, сумму вычета не передаем и наоборот
			Для каждого СтрокаТЗ Из ТаблицаДоходов Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТЗ.КодВычет) И СтрокаТЗ.СумВычет <> 0 Тогда
					СтрокаТЗ.СумВычет = 0
				ИначеЕсли ЗначениеЗаполнено(СтрокаТЗ.КодВычет) И СтрокаТЗ.СумВычет = 0 Тогда
					СтрокаТЗ.КодВычет = ""
				КонецЕсли;
			КонецЦикла;
			
			// Общая сумма дохода и налога на доходы по итогам налогового периода
			
			СтруктураСГДНалПер = НаборЗаписейДоходы.СГДНалПер.Значение;
			ЗаполнитьЗначенияСвойств(СтруктураСГДНалПер,ВыборкаФизЛиц); // ВзыскИФНС, НИОблСумм, НУОблСумм, ВозврСуммПЛ, ДолгНП, ДолгНА
			//ЗачСуммПЛ
			//УдСуммПЛ
			СтруктураСГДНалПер.СГДСумм = ТаблицаДоходов.Итог("СумДоход");
			СтруктураСГДНалПер.ОблСумм = Макс(ТаблицаДоходов.Итог("СумДоход") 
									- ТаблицаДоходов.Итог("СумВычет") 
									- ТаблицаДоходов.Итог("НеОблагаетсяУНА") 
									- ВыборкаФизЛиц.СумСтНалВыч 
									- ВыборкаФизЛиц.СумИмуВыч,0);
									
			ТаблицаДоходов.Колонки.Удалить("НеОблагаетсяУНА"); // вспомогательная колонка
			
			ПроцедурыПерсонифицированногоУчета.ДобавитьИнформациюВДерево(ПроцедурыПерсонифицированногоУчета.ДобавитьУзелВДеревоXML(Узел2НДФЛ, "Справка", ""), НаборЗаписейИнфЧастСправки);
			
			// Вывод ошибок
			Если СтрОшибки <> "" Тогда
				//  Фамилия, Имя, Отчество
				Фамилия 	= ВыборкаФизЛиц.Фамилия;
				Имя 		= ВыборкаФизЛиц.Имя;
				Отчество 	= ВыборкаФизЛиц.Отчество;
				СтрОшибки =  "В сведениях о доходах сотрудника (строка " + ВыборкаДоходовФизЛиц.НомерСтроки + ")" + ?(Не ПустаяСтрока(Фамилия+Имя+Отчество), " " + Фамилия + " " + Имя + " " + Отчество, "") + " обнаружены ошибки:" + СтрОшибки;
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрОшибки, Отказ);
			КонецЕсли; 
			
			ОбработкаПрерыванияПользователя();	
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(ДеревоВыгрузки,"ДатаСпр") = "" Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Данных о доходах физлиц не обнаружено!",Отказ);
		Возврат ""
	КонецЕсли;
	
	Если Режим = "Дерево" Тогда
		Возврат ДеревоВыгрузки	
	КонецЕсли;
	
	// Преобразуем дерево в строковое описание XML
	
	ПотокВыгрузкиXML = ПроцедурыПерсонифицированногоУчета.СоздатьПотокXML();
	
	СправкиПоНДФЛ.ЗаписатьУзелДереваXMLВXML(ДеревоВыгрузки, ПотокВыгрузкиXML, "xsi", "http://www.w3.org/2001/XMLSchema-instance");
	
	// получаем содержимое файла в виде строки
	СтрокаXML = ПроцедурыПерсонифицированногоУчета.ЗаписатьПотокXML(ПотокВыгрузкиXML);

	Возврат СтрокаXML
	
КонецФункции 

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Если Не Проведен И НалоговыйПериод > 2009 Тогда
		ВывестиСообщениеОбУстареванииДокумента();
		РезультатПечати = Неопределено
	Иначе
		РезультатПечати = СведенияОДоходахФизлицПереопределяемый.Печать(ИмяМакета, КоличествоЭкземпляров, НаПринтер, ЭтотОбъект);
	КонецЕсли;
	
	ОбработкаКомментариев.ПоказатьСообщения();
	
	Возврат РезультатПечати
	
КонецФункции // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура("ПечатьФайла", "2-НДФЛ");
	СведенияОДоходахФизлицПереопределяемый.ДополнитьСтруктуруПечатныхФорм(СтруктураПечатныхФорм);
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Заполняет табличную часть документа физлицами, получавшими доходы
//
// Параметры
//   нет
//
Процедура Автозаполнение() Экспорт

	// Рассчитаем номер первой справки о доходах
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента",Дата);
	Запрос.УстановитьПараметр("НалоговыйПериод",НалоговыйПериод);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки) КАК КоличествоСформированныхСправок
	|ИЗ
	|	Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК СведенияОДоходахФизлицРаботникиОрганизации
	|ГДЕ
	|	СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.Дата < &ДатаДокумента
	|	И СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.Проведен
	|	И СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.Организация = &Организация
	|	И СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.НалоговыйПериод = &НалоговыйПериод";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		НомерПервойСправки = ?(Выборка.КоличествоСформированныхСправок = NULL, 0, Выборка.КоличествоСформированныхСправок) + 1;
	Иначе	
		НомерПервойСправки = 1;
	КонецЕсли;  
	
    Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ГодНП",НалоговыйПериод);
	Запрос.УстановитьПараметр("КонецНП",КонецГода(Дата(НалоговыйПериод,1,1)));
	Запрос.УстановитьПараметр("ДатаПодачиСведений", НачалоМесяца(Дата));
	
	ЭтоСводныеСправки = Не НазначениеСправки <> Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуСводно;
	ЭтоНеЮрЛицо = Не ОбщегоНазначенияЗКПереопределяемый.ЭтоЮрЛицо(Организация);
	
	Если ЭтоСводныеСправки Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДФЛСведенияОДоходах.ФизЛицо
		|ИЗ
		|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
		|ГДЕ
		|	НДФЛСведенияОДоходах.Организация = &Организация
		|	И ГОД(НДФЛСведенияОДоходах.Период) = &ГодНП
		|	И НДФЛСведенияОДоходах.ПериодРегистрации < &ДатаПодачиСведений
		|
		|УПОРЯДОЧИТЬ ПО
		|	НДФЛСведенияОДоходах.ФизЛицо.Наименование";
		
	ИначеЕсли ЭтоНеЮрЛицо Тогда                                              
		
		СведенияОДоходахФизлицПереопределяемый.ЗаполнитьЗапросЭтоНеЮрЛицо(Запрос, ЭтотОбъект);
		
	Иначе
		
		Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
		Запрос.УстановитьПараметр("ПустойКПП","");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	ВЫБОР
		|			КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|				ТОГДА Организации.Ссылка
		|			ИНАЧЕ Организации.ГоловнаяОрганизация
		|		КОНЕЦ = &Организация
		|	И (Организации.КодПоОКАТО = &ПустойКодПоОКАТО
		|			ИЛИ Организации.КПП = &ПустойКПП)";
		
		Если Не Запрос.Выполнить().Пустой() Тогда
			ТекстСообщения = ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Список справок не может быть заполнен, так как у организации или у одного из его обособленных подразделений с выделенным балансом не указан код по ОКАТО или КПП!");
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Предупреждение(ТекстСообщения);
			#Иначе
				ОбщегоНазначенияЗК.СообщитьОбОшибке(ТекстСообщения); 
			#КонецЕсли
			Возврат
		КонецЕсли;
		
		СведенияОДоходахФизлицПереопределяемый.ЗаполнитьЗапросАвтозаполнения(Запрос, ЭтотОбъект);
		
	КонецЕсли;

	РаботникиОрганизации.Загрузить(Запрос.Выполнить().Выгрузить());
	Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
		СтрокаТЧ.НомерСправки = НомерПервойСправки + РаботникиОрганизации.Индекс(СтрокаТЧ)
	КонецЦикла;
	
КонецПроцедуры // Автозаполнение()

// Пронумеровывает справки о доходах с учетом уже зафиксированных в ИБ
//
// Параметры
//   нет
//
Процедура ПронумероватьСправки() Экспорт 

	// Рассчитаем номер первой справки о доходах
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента",Дата);
	Запрос.УстановитьПараметр("НалоговыйПериод",НалоговыйПериод);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки) КАК КоличествоСформированныхСправок
	|ИЗ
	|	Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК СведенияОДоходахФизлицРаботникиОрганизации
	|ГДЕ
	|	СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.Дата < &ДатаДокумента
	|	И СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.Проведен
	|	И СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.Организация = &Организация
	|	И СведенияОДоходахФизлицРаботникиОрганизации.Ссылка.НалоговыйПериод = &НалоговыйПериод";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		НомерПервойСправки = ?(Выборка.КоличествоСформированныхСправок = NULL, 0, Выборка.КоличествоСформированныхСправок) + 1;
	Иначе	
		НомерПервойСправки = 1;
	КонецЕсли;  
	
	Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
		СтрокаТЧ.НомерСправки = НомерПервойСправки;
		НомерПервойСправки = НомерПервойСправки + 1;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке() Экспорт

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОДоходахФизлиц.Дата,
	|	СведенияОДоходахФизлиц.Ссылка,
	|	СведенияОДоходахФизлиц.Организация,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахФизлиц.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СведенияОДоходахФизлиц.Организация
	|		ИНАЧЕ СведенияОДоходахФизлиц.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	СведенияОДоходахФизлиц.Ответственный,
	|	СведенияОДоходахФизлиц.НалоговыйПериод,
	|	СведенияОДоходахФизлиц.ДолжностьОтветственного,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахФизлиц.НазначениеСправки = ЗНАЧЕНИЕ(Перечисление.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуСводно)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПроверятьСтавку,
	|	ВЫБОР
	|		КОГДА СведенияОДоходахФизлиц.НазначениеСправки = ЗНАЧЕНИЕ(Перечисление.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуСводно)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СведенияОДоходахФизлиц.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПроверятьКоды
	|ИЗ
	|	Документ.СведенияОДоходахФизлиц КАК СведенияОДоходахФизлиц
	|ГДЕ
	|	СведенияОДоходахФизлиц.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по табличной части документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента) Экспорт

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Если ВыборкаПоШапкеДокумента.ПроверятьКоды Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки,
		|	СведенияОДоходахФизлицРаботникиОрганизации.НомерСправки,
		|	СведенияОДоходахФизлицРаботникиОрганизации.ФизЛицо,
		|	ВЫБОР
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.ПустаяСсылка)
		|	КОНЕЦ КАК СтавкаНалогообложенияРезидента,
		|	СведенияОДоходахФизлицРаботникиОрганизации.ПереданоНаВзыскание,
		|	СведенияОДоходахФизлицРаботникиОрганизации.Ставка,
		|	СведенияОДоходахФизлицРаботникиОрганизации.КодПоОКАТО КАК КодПоОКАТО,
		|	СведенияОДоходахФизлицРаботникиОрганизации.КПП,
		|	МИНИМУМ(ПовторяющиесяНомераСправок.НомерСтроки) КАК НомерСтрокиПовторяющегосяНомераСправки,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПовторяющиесяНомераСправок.НомерСтроки) ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПовторяющиесяНомераСправок,
		|	МИНИМУМ(ПовторяющиесяСправки.НомерСтроки) КАК НомерСтрокиПовторяющейсяСправки,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПовторяющиесяСправки.НомерСтроки) ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПовторяющиесяСправки
		|ИЗ
		|	Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК СведенияОДоходахФизлицРаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахФизлицРаботникиОрганизации.НомерСправки КАК НомерСправки
		|		ИЗ
		|			Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК СведенияОДоходахФизлицРаботникиОрганизации
		|		ГДЕ
		|			СведенияОДоходахФизлицРаботникиОрганизации.Ссылка = &ДокументСсылка) КАК ПовторяющиесяНомераСправок
		|		ПО СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки < ПовторяющиесяНомераСправок.НомерСтроки
		|			И СведенияОДоходахФизлицРаботникиОрганизации.НомерСправки = ПовторяющиесяНомераСправок.НомерСправки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахФизлицРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахФизлицРаботникиОрганизации.Ставка КАК Ставка,
		|			СведенияОДоходахФизлицРаботникиОрганизации.КодПоОКАТО КАК КодПоОКАТО,
		|			СведенияОДоходахФизлицРаботникиОрганизации.КПП КАК КПП
		|		ИЗ
		|			Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК СведенияОДоходахФизлицРаботникиОрганизации
		|		ГДЕ
		|			СведенияОДоходахФизлицРаботникиОрганизации.Ссылка = &ДокументСсылка) КАК ПовторяющиесяСправки
		|		ПО СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки < ПовторяющиесяСправки.НомерСтроки
		|			И СведенияОДоходахФизлицРаботникиОрганизации.ФизЛицо = ПовторяющиесяСправки.ФизЛицо
		|			И СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ПовторяющиесяСправки.Ставка
		|			И СведенияОДоходахФизлицРаботникиОрганизации.КодПоОКАТО = ПовторяющиесяСправки.КодПоОКАТО
		|			И СведенияОДоходахФизлицРаботникиОрганизации.КПП = ПовторяющиесяСправки.КПП
		|ГДЕ
		|	СведенияОДоходахФизлицРаботникиОрганизации.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки,
		|	СведенияОДоходахФизлицРаботникиОрганизации.ФизЛицо,
		|	СведенияОДоходахФизлицРаботникиОрганизации.Ставка,
		|	СведенияОДоходахФизлицРаботникиОрганизации.КодПоОКАТО,
		|	СведенияОДоходахФизлицРаботникиОрганизации.КПП,
		|	ВЫБОР
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.ПустаяСсылка)
		|	КОНЕЦ,
		|	СведенияОДоходахФизлицРаботникиОрганизации.ПереданоНаВзыскание,
		|	СведенияОДоходахФизлицРаботникиОрганизации.НомерСправки";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки,
		|	СведенияОДоходахФизлицРаботникиОрганизации.НомерСправки,
		|	СведенияОДоходахФизлицРаботникиОрганизации.ФизЛицо,
		|	ВЫБОР
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.ПустаяСсылка)
		|	КОНЕЦ КАК СтавкаНалогообложенияРезидента,
		|	СведенияОДоходахФизлицРаботникиОрганизации.ПереданоНаВзыскание,
		|	СведенияОДоходахФизлицРаботникиОрганизации.Ставка,
		|	МИНИМУМ(ПовторяющиесяНомераСправок.НомерСтроки) КАК НомерСтрокиПовторяющегосяНомераСправки,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПовторяющиесяНомераСправок.НомерСтроки) ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПовторяющиесяНомераСправок,
		|	МИНИМУМ(ПовторяющиесяСправки.НомерСтроки) КАК НомерСтрокиПовторяющейсяСправки,
		|	"""" КАК КодПоОКАТО,
		|	"""" КАК КПП,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПовторяющиесяСправки.НомерСтроки) ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПовторяющиесяСправки
		|ИЗ
		|	Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК СведенияОДоходахФизлицРаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахФизлицРаботникиОрганизации.НомерСправки КАК НомерСправки
		|		ИЗ
		|			Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК СведенияОДоходахФизлицРаботникиОрганизации
		|		ГДЕ
		|			СведенияОДоходахФизлицРаботникиОрганизации.Ссылка = &ДокументСсылка) КАК ПовторяющиесяНомераСправок
		|		ПО СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки < ПовторяющиесяНомераСправок.НомерСтроки
		|			И СведенияОДоходахФизлицРаботникиОрганизации.НомерСправки = ПовторяющиесяНомераСправок.НомерСправки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахФизлицРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахФизлицРаботникиОрганизации.Ставка КАК Ставка
		|		ИЗ
		|			Документ.СведенияОДоходахФизлиц.РаботникиОрганизации КАК СведенияОДоходахФизлицРаботникиОрганизации
		|		ГДЕ
		|			СведенияОДоходахФизлицРаботникиОрганизации.Ссылка = &ДокументСсылка) КАК ПовторяющиесяСправки
		|		ПО СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки < ПовторяющиесяСправки.НомерСтроки
		|			И СведенияОДоходахФизлицРаботникиОрганизации.ФизЛицо = ПовторяющиесяСправки.ФизЛицо
		|			И СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ПовторяющиесяСправки.Ставка
		|ГДЕ
		|	СведенияОДоходахФизлицРаботникиОрганизации.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходахФизлицРаботникиОрганизации.НомерСтроки,
		|	СведенияОДоходахФизлицРаботникиОрганизации.ФизЛицо,
		|	СведенияОДоходахФизлицРаботникиОрганизации.Ставка,
		|	ВЫБОР
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
		|		КОГДА СведенияОДоходахФизлицРаботникиОрганизации.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.ПустаяСсылка)
		|	КОНЕЦ,
		|	СведенияОДоходахФизлицРаботникиОрганизации.ПереданоНаВзыскание,
		|	СведенияОДоходахФизлицРаботникиОрганизации.НомерСправки";
		
	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 		 - флаг отказа в проведении,
//	Заголовок	 - Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок) Экспорт

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.НалоговыйПериод) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан налоговый период, за который подаются сведения!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоШапкеДокумента.НалоговыйПериод > 2009 Тогда
		ВывестиСообщениеОбУстареванииДокумента(Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Ответственный) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано лицо, ответственное за подачу сведений!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НазначениеСправки = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ДляПередачиВИФНС И СтрДлина(СокрЛП(ИдентификаторФайла)) < 36 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Неверно указан идентификатор файла!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строки документа.
Процедура ПроверитьЗаполнениеСтрокиРаботникиОрганизации(ВыборкаПоШапкеДокумента,ВыборкаПоРаботникиОрганизации, Отказ, Заголовок) Экспорт

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоРаботникиОрганизации.НомерСтроки) +
								""" табл. части ""Сотрудники организации"": ";
									
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ФизЛицо) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		
	ИначеЕсли ВыборкаПоРаботникиОрганизации.ЕстьПовторяющиесяСправки Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "справка повторяется в другой строке документа (" + ВыборкаПоРаботникиОрганизации.НомерСтрокиПовторяющейсяСправки + ")!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.НомерСправки) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан номер справки!", Отказ, Заголовок);
		
	ИначеЕсли ВыборкаПоРаботникиОрганизации.ЕстьПовторяющиесяНомераСправок Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "номер справки повторяется в другой строке документа (" + ВыборкаПоРаботникиОрганизации.НомерСтрокиПовторяющегосяНомераСправки + ")!", Отказ, Заголовок);
		
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ПроверятьСтавку Тогда
		Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.Ставка) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указана ставка налогообложения дохода!", Отказ, Заголовок);
			
		ИначеЕсли НалоговыйПериод < 2008 и ВыборкаПоРаботникиОрганизации.Ставка = Перечисления.НДФЛСтавки.Ставка15 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "указана ставка 15%, введенная только с 1 января 2008 года!", Отказ, Заголовок);
			
		КонецЕсли;
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ПроверятьКоды Тогда
		Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.КодПоОКАТО) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан код по ОКАТО!", Отказ, Заголовок);
			
		ИначеЕсли СтрДлина(СокрЛП(ВыборкаПоРаботникиОрганизации.КодПоОКАТО)) <> 11 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "неверно указан код по ОКАТО!", Отказ, Заголовок);
			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.КПП) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан КПП!", Отказ, Заголовок);
			
		ИначеЕсли СтрДлина(СокрЛП(ВыборкаПоРаботникиОрганизации.КПП)) <> 9 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "неверно указан КПП!", Отказ, Заголовок);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ) Экспорт
	
	Если ВыборкаПоТЧ.ПереданоНаВзыскание <> 0 Тогда
		
		// Вычислим дату для заполнения измерения "МесяцНалоговогоПериода"
		КонецНП = Дата(ВыборкаПоШапкеДокумента.НалоговыйПериод, 12 , 31);
		Если Дата < КонецНП Тогда
			МесяцНалоговогоПериода = Дата;
		Иначе	
			МесяцНалоговогоПериода = КонецНП;
		КонецЕсли; 
		
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		// Свойства
		Движение.Период                 		= Дата;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо                		= ВыборкаПоТЧ.ФизЛицо;
		Движение.СтавкаНалогообложенияРезидента	= ВыборкаПоТЧ.СтавкаНалогообложенияРезидента;
		Движение.МесяцНалоговогоПериода      	= МесяцНалоговогоПериода;
		// Ресурсы
		Движение.Налог							= ВыборкаПоТЧ.ПереданоНаВзыскание; 
		// Реквизиты
		Движение.ОбособленноеПодразделение  	= ВыборкаПоШапкеДокумента.Организация;
		Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание;
		
		Движение.КодПоОКАТО = ВыборкаПоТЧ.КодПоОКАТО;
		Движение.КПП = ВыборкаПоТЧ.КПП;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			// получим реквизиты табличной части
			ВыборкаПоРаботникиОрганизации = СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботникиОрганизации(ВыборкаПоШапкеДокумента,ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);
				
				// Заполним записи в наборах записей регистров
				ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);

			КонецЦикла;
		КонецЕсли; 

	КонецЕсли;
	
	Если Отказ тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ФАЙЛА СВЕДЕНИЙ
	
	// Зафиксируем суммы передаваемые на взыскание
	Движения.НДФЛРасчетыСБюджетом.Записать();
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		//При проведении файл формируем заново 
		ТекстФайла = СформироватьВыходнойФайл(Отказ);
	#Иначе
		// На сервере и во внешнем соединении документ проводить нельзя
		ТекстФайла = "";
		Отказ = Истина;
	#КонецЕсли
	
	ОбработкаКомментариев.ПоказатьСообщения();
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения.АрхивДанныхРегламентированнойОтчетности.Добавить();

	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Файл-пачка сведений о доходах физических лиц (формы 2-НДФЛ)";
	Запись.Данные = ТекстФайла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");

	Если РежимЗаписи = РежимЗаписиДокумента.Проведение  Тогда
		ДляПередачиВИФНС = НазначениеСправки = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ДляПередачиВИФНС;
		ЭтоПодробныеСправки = НазначениеСправки <> Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуСводно;
		ЭтоЮрЛицо = ОбщегоНазначенияЗКПереопределяемый.ЭтоЮрЛицо(Организация);
		Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
			Если Не ДляПередачиВИФНС Тогда
				СтрокаТЧ.ПереданоНаВзыскание = 0;
			КонецЕсли;
			Если Не ЭтоПодробныеСправки Тогда
				СтрокаТЧ.Ставка = "";
				СтрокаТЧ.КодПоОКАТО = "";
				СтрокаТЧ.КПП = "";
			ИначеЕсли Не ЭтоЮрЛицо Тогда
				СтрокаТЧ.КодПоОКАТО = "";
				СтрокаТЧ.КПП = "";
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись	Тогда
		Если НалоговыйПериод = 0 Тогда // документ без налогового периода неконсистентен
			НалоговыйПериод = Макс(Год(Дата),2005);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


