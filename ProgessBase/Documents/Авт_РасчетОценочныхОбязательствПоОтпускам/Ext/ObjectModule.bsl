
////////////////////////////////////////////////////////////////////////////////                                                                                                        
// ПЕРЕМЕННЫЕ МОДУЛЯ  

Перем мОценочныеОбязательстваФормироватьБУ;
Перем мОценочныеОбязательстваФормироватьНУ;

Перем мЗаполнятьСчетаНУ; //  истина, для программ бухучета в которых НУ ведется по правилам БП1.6
Перем мЗаполнятьДанныеНУ; // ложь, когда данные по НУ не нужны, например УСН или не поддерживается программой бухучета
Перем мУчетПоПодразделениямНаСчетах; //когда учет по подразделениям ведется не на субконто
Перем мПроцентСтраховыхВзносовПоОрганизации;

//////////////////////////////////////////////////////////////////////////////                                                                                                        
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ  

// Процедура заполняет табличные части документа
//
Процедура Автозаполнение(Запрос = Неопределено, МассивСотрудников = Неопределено) Экспорт
	
	// Заполняем табличную часть
	ВыполнитьАвтозаполнение(Запрос, МассивСотрудников);
	
	ЗаполнитьЗначенияПеременныхВеденияУчета();
	
КонецПроцедуры // Автозаполнение()

// Процедура расчитывает суммы оценочных обязательств
//
Процедура РассчитатьСуммуОценочныхОбязательств(ФизЛицо = Неопределено) Экспорт
		
	мРассчитываемыеТаблицы = Новый Структура("Начисления, РасчетСреднего", Ложь, Истина);
	мСведенияОВидахРасчета = Новый Соответствие;
	ГоловнаяОрганизация    = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	//// Юдин Константин 03.02.2012 12:13 
	// {Ком.: Для Юли. Для того чтобы документы Начисление отпускных оставались в базе закомментировать две строки НачатьТранзакцию(); И ОтменитьТранзакцию();}
	
	Если ЗначениеЗаполнено(ФизЛицо) Тогда
		// Подбираем список строк для расчета по сотруднику
		СписокСотрудников = ОценочныеОбязательства.НайтиСтроки(Новый Структура("ФизЛицо", ФизЛицо));
	Иначе
		// Расчитываем по всем сотрудникам
		СписокСотрудников = ОценочныеОбязательства;
		
	КонецЕсли;
	
	МесяцНачисления	  = ДобавитьМесяц(НачалоМесяца(ПериодРегистрации), 1); 
	РасчетныйДокумент = Документы.НачислениеОтпускаРаботникамОрганизаций.СоздатьДокумент();
	
	Для Каждого СтрокаТаблицы Из СписокСотрудников Цикл
		
		СреднеДневнойЗаработок = 0;
		
		Если Не СтрокаТаблицы.Авторасчет Тогда
			Продолжить;	
		КонецЕсли;
		
		// Если количество дней отпуска не айдены не производим расчет
		Если СтрокаТаблицы.НеиспользованныеДниОтпуска = 0 Тогда
			Сообщить("Для сотрудника " + СтрокаТаблицы.ФизЛицо + " заданно не корректное количество дней отпуска");
			Продолжить;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		РасчетныйДокумент.ПериодРегистрации 			 = НачалоМесяца(МесяцНачисления);
		РасчетныйДокумент.Организация 					 = Организация;
		РасчетныйДокумент.ДатаНачалаСобытия 			 = НачалоДня(МесяцНачисления);
		РасчетныйДокумент.ДатаНачалаОсновногоОтпуска 	 = НачалоДня(МесяцНачисления);
		РасчетныйДокумент.ПорядокРасчетаОсновногоОтпуска = Перечисления.ПорядокРасчетаОтпуска.ПоКалендарнымДням;
		РасчетныйДокумент.ОсновнойОтпуск = Истина;
		
		ДатаКЗаписи = ТекущаяДата();
		
		Если ИспользованиеРабочейДаты = РежимРабочейДаты.Назначать Тогда
			ДатаКЗаписи = НачалоДня(РабочаяДата) + 3600 * Час(ДатаКЗаписи) + 60 * Минута(ДатаКЗаписи) + Секунда(ДатаКЗаписи);
		КонецЕсли;
		
		РасчетныйДокумент.Дата = ДатаКЗаписи;
		РасчетныйДокумент.УстановитьНовыйНомер();
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.НеиспользованныеДниОтпуска) <= 0 ИЛИ (НЕ СтрокаТаблицы.Авторасчет) Тогда
			Продолжить;
		КонецЕсли;
		
		РасчетныйДокумент.Сотрудник   = СтрокаТаблицы.Сотрудник;
		РасчетныйДокумент.Физлицо     = СтрокаТаблицы.ФизЛицо;
		РасчетныйДокумент.ДатаОкончанияОсновногоОтпуска  = НачалоДня(МесяцНачисления) + (?(СтрокаТаблицы.НеиспользованныеДниОтпуска <= 0, 0, СтрокаТаблицы.НеиспользованныеДниОтпуска - 1)) * 86400;
		РасчетныйДокумент.КоличествоДнейОсновногоОтпуска = СтрокаТаблицы.НеиспользованныеДниОтпуска;
		
		РасчетныйДокумент.ОпределитьРасчетныйПериод();
		ЗаполнитьЗначенияСвойств(РасчетныйДокумент, ПроцедурыУправленияПерсоналом.РассчитатьПериодРаботыДляОсновногоОтпуска(РасчетныйДокумент.Ссылка, РасчетныйДокумент.Сотрудник, РасчетныйДокумент.ДатаНачалаОсновногоОтпуска, РасчетныйДокумент.ДатаОкончанияОсновногоОтпуска));
		
		РасчетныйДокумент.Начисления.Очистить();
		РасчетныйДокумент.РасчетСреднегоПоШестидневке.Очистить();
		РасчетныйДокумент.РасчетСреднегоПоКалендарным.Очистить();
		
		Состояние("Расчет среднемесячной зарплаты для " + СтрокаТаблицы.Сотрудник);
		РасчетныйДокумент.Записать();
		
		мРассчитываемыеТаблицы.Начисления 	  = Истина;
		мРассчитываемыеТаблицы.РасчетСреднего = Истина;
		РасчетныйДокумент.Рассчитать(мРассчитываемыеТаблицы);
		РасчетныйДокумент.Записать();
		
		ВариантРасчетаДокумента = РасчетныйДокумент.ОсновнойВариантРасчетаДокумента();
		ВидРасчета = ВариантРасчетаДокумента.ВидРасчета;

		Если ЗначениеЗаполнено(ВидРасчета) Тогда
			
			СведениеОВидеРасчета 	 = ПроведениеРасчетов.ПолучитьСведенияОВидеРасчета(мСведенияОВидахРасчета, ВидРасчета);
			МесяцевРасчетногоПериода = ?(СведениеОВидеРасчета.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору, СведениеОВидеРасчета.ПериодРасчетаСреднегоЗаработка, НачислениеОтпускаРаботникамОрганизацийПереопределяемый.КоличествоМесяцевРасчетаПоЗакону(РасчетныйДокумент));
			СреднедневнойЗаработок   = НачислениеОтпускаРаботникамОрганизацийПереопределяемый.РасчетСреднегоЗаработка(РасчетныйДокумент, СведениеОВидеРасчета.СпособРасчета, МесяцевРасчетногоПериода, РасчетныйДокумент.ПериодРасчетаСреднегоЗаработкаНачало, РасчетныйДокумент.ПериодРасчетаСреднегоЗаработкаОкончание);
			
		Иначе
			
			СреднеДневнойЗаработок = 0;
			
		КонецЕсли;
		
		СтрокаТаблицы.СреднеДневнойЗаработок = СреднеДневнойЗаработок;
		СтрокаТаблицы.СуммаРезерваЗаТекущийПериод = 0;
		
		СуммаРезерва 			= РасчетныйДокумент.Начисления.Итог("Результат");
		КоличествоОплаченыхДней = РасчетныйДокумент.Начисления.Итог("ОплаченоДнейЧасов"); 
		
		// Проверяем не были ли исключены из начисления праздничные дни.
		Если КоличествоОплаченыхДней <> РасчетныйДокумент.КоличествоДнейОсновногоОтпуска Тогда
			// Производим перерасчет без учета праздничных дней
			СуммаРезерва = РасчетныйДокумент.Начисления[0].ДополнительныеДанные * СтрокаТаблицы.НеиспользованныеДниОтпуска * РасчетныйДокумент.Начисления[0].Показатель1 / 100;
			
		КонецЕсли;
		
		СтрокаТаблицы.СуммаРезерваЗаТекущийПериод = СуммаРезерва;
		
		Если СтрокаТаблицы.НачислятьПроцентСтраховыхВзносов Тогда
			СтрокаТаблицы.СуммаНалогов = СуммаРезерва * (СтрокаТаблицы.ПроцентСтраховыхВзносов + СтрокаТаблицы.СтавкаОтНесчастныхСлучаев) / 100; 
		Иначе
			СтрокаТаблицы.СуммаНалогов = СуммаРезерва * СтрокаТаблицы.СтавкаОтНесчастныхСлучаев / 100
		КонецЕсли;
		
		//СуммаРезерваНаТекущийМесяц = СтрокаТаблицы.СуммаРезерваЗаТекущийПериод + СтрокаТаблицы.СуммаНалогов;
					
		СтрокаТаблицы.Сумма = (СтрокаТаблицы.СуммаРезерваЗаТекущийПериод + СтрокаТаблицы.СуммаНалогов) - СтрокаТаблицы.СуммаРезерваЗаПредыдущийПериод; 
		
		ОтменитьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры // РассчитатьСуммуОценочныхОбязательств()

// Функция формирует запрос по резервам сотрудников
//
// Возвращаемое значение:
//   Результат запроса - информация по резервам сотрудников
Функция СформироватьЗапросПоРезервам()

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("парСсылкаДок", Ссылка);
	Запрос.УстановитьПараметр("парПериод", 	  НачалоМесяца(ПериодРегистрации));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	NULL КАК ПериодРегистрации,
	|	Резерв.Сотрудник,
	|	Резерв.ФизЛицо,
	|	Резерв.ПодразделениеОрганизации,
	|	Резерв.Должность,
	|	Резерв.НеиспользованныеДниОтпуска - ЕСТЬNULL(Резерв.НеиспользованныеДниОтпускаЗаПредыдущийПериод, 0) КАК НеиспользованныеДниОтпуска,
	|	Резерв.Сумма,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения
	|ИЗ
	|	Документ.Авт_РасчетОценочныхОбязательствПоОтпускам.ОценочныеОбязательства КАК Резерв
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Авт_ОценочныеОбязательстваПоОтпускам.Остатки(&парПериод, ) КАК ДниОтпуска
	|		ПО Резерв.ФизЛицо = ДниОтпуска.ФизЛицо
	|			И Резерв.Сотрудник = ДниОтпуска.Сотрудник
	|ГДЕ
	|	Резерв.Ссылка = &парСсылкаДок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	Резерв.Сотрудник,
	|	Резерв.ФизЛицо,
	|	Резерв.ПодразделениеОрганизации,
	|	Резерв.Должность,
	|	ВЫБОР
	|		КОГДА Резерв.КоличествоДнейФактическогоОтпуска > Резерв.НеиспользованныеДниОтпуска
	|			ТОГДА Резерв.НеиспользованныеДниОтпуска
	|		ИНАЧЕ Резерв.КоличествоДнейФактическогоОтпуска
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Резерв.СуммаОтпускныхЗаТекущийПериод + Резерв.СуммаНалоговОтпускныхЗаТекущийПериод > Резерв.СуммаРезерваЗаТекущийПериод + Резерв.СуммаНалогов
	|			ТОГДА Резерв.СуммаРезерваЗаТекущийПериод + Резерв.СуммаНалогов
	|		ИНАЧЕ Резерв.СуммаОтпускныхЗаТекущийПериод + Резерв.СуммаНалоговОтпускныхЗаТекущийПериод
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ИЗ
	|	Документ.Авт_РасчетОценочныхОбязательствПоОтпускам.ОценочныеОбязательства КАК Резерв
	|ГДЕ
	|	Резерв.Ссылка = &парСсылкаДок
	|	И (Резерв.СуммаОтпускныхЗаТекущийПериод > 0
	|			ИЛИ Резерв.КоличествоДнейФактическогоОтпуска > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтпускаЗаСчетЗатрат.Ссылка.ПериодРегистрации,
	|	ОтпускаЗаСчетЗатрат.Сотрудник,
	|	ОтпускаЗаСчетЗатрат.ФизЛицо,
	|	ОтпускаЗаСчетЗатрат.ПодразделениеОрганизации,
	|	ОтпускаЗаСчетЗатрат.Должность,
	|	ОтпускаЗаСчетЗатрат.КоличествоДнейФактическогоОтпуска - ОтпускаЗаСчетЗатрат.НеиспользованныеДниОтпуска,
	|	ОтпускаЗаСчетЗатрат.СуммаОтпускныхЗаТекущийПериод - ОтпускаЗаСчетЗатрат.СуммаРезерваЗаТекущийПериод,
	|	""Затратные счета""
	|ИЗ
	|	Документ.Авт_РасчетОценочныхОбязательствПоОтпускам.ОценочныеОбязательства КАК ОтпускаЗаСчетЗатрат
	|ГДЕ
	|	ОтпускаЗаСчетЗатрат.СуммаОтпускныхЗаТекущийПериод - ОтпускаЗаСчетЗатрат.СуммаРезерваЗаТекущийПериод > 0
	|	И ОтпускаЗаСчетЗатрат.Ссылка = &парСсылкаДок";
	
	РезультатЗапроса = Запрос.Выполнить();

	Возврат РезультатЗапроса;
	
КонецФункции // СформироватьЗапросПоРезервам()

// Функция формирует запрос для проведения по регистрам
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
Функция СформироватьЗапросПоПроводкам()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парСсылкаДок", Ссылка);
	
	Если мОценочныеОбязательстваФормироватьНУ Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Резерв.СчетДт,
		|	Резерв.СубконтоДт1,
		|	Резерв.СубконтоДт2,
		|	Резерв.СубконтоДт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов) КАК СчетКт,
		|	Резерв.Ссылка.ОценочноеОбязательство КАК СубконтоКт1,
		|	NULL КАК СубконтоКт2,
		|	NULL КАК СубконтоКт3,
		|	Резерв.СчетДтНУ,
		|	Резерв.СубконтоДтНУ1,
		|	Резерв.СубконтоДтНУ2,
		|	Резерв.СубконтоДтНУ3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РезервыПредстоящихРасходов) КАК СчетКтНУ,
		|	Резерв.Ссылка.ОценочноеОбязательство КАК СубконтоКтНУ1,
		|	NULL КАК СубконтоКтНУ2,
		|	NULL КАК СубконтоКтНУ3,
		|	СУММА(Резерв.Сумма) КАК Сумма
		|ИЗ
		|	Документ.Авт_РасчетОценочныхОбязательствПоОтпускам.ОценочныеОбязательства КАК Резерв
		|ГДЕ
		|	Резерв.Ссылка = &парСсылкаДок
		|
		|СГРУППИРОВАТЬ ПО
		|	Резерв.СчетДт,
		|	Резерв.СубконтоДт1,
		|	Резерв.СубконтоДт2,
		|	Резерв.СубконтоДт3,
		|	Резерв.Ссылка.ОценочноеОбязательство,
		|	Резерв.СчетДтНУ,
		|	Резерв.СубконтоДтНУ1,
		|	Резерв.СубконтоДтНУ2,
		|	Резерв.СубконтоДтНУ3,
		|	Резерв.Ссылка.ОценочноеОбязательство
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Резерв.СчетДт,
		|	Резерв.СубконтоДт1,
		|	Резерв.СубконтоДт2,
		|	Резерв.СубконтоДт3,
		|	Резерв.СчетКт,
		|	Резерв.СубконтоКт1,
		|	Резерв.СубконтоКт2,
		|	Резерв.СубконтоКт3,
		|	Резерв.СчетДтНУ,
		|	Резерв.СубконтоДтНУ1,
		|	Резерв.СубконтоДтНУ2,
		|	Резерв.СубконтоДтНУ3,
		|	Резерв.СчетКтНУ,
		|	Резерв.СубконтоКтНУ1,
		|	Резерв.СубконтоКтНУ2,
		|	Резерв.СубконтоКтНУ3,
		|	СУММА(Резерв.СуммаОтпускныхЗаТекущийПериод - (Резерв.СуммаРезерваЗаТекущийПериод + Резерв.СуммаНалогов))
		|ИЗ
		|	Документ.Авт_РасчетОценочныхОбязательствПоОтпускам.ОценочныеОбязательства КАК Резерв
		|ГДЕ
		|	Резерв.Ссылка = &парСсылкаДок
		|	И Резерв.СуммаОтпускныхЗаТекущийПериод > Резерв.СуммаРезерваЗаТекущийПериод + Резерв.СуммаНалогов
		|
		|СГРУППИРОВАТЬ ПО
		|	Резерв.СчетДт,
		|	Резерв.СубконтоДт1,
		|	Резерв.СубконтоДт2,
		|	Резерв.СубконтоДт3,
		|	Резерв.СчетДтНУ,
		|	Резерв.СубконтоДтНУ1,
		|	Резерв.СубконтоДтНУ2,
		|	Резерв.СубконтоДтНУ3,
		|	Резерв.Сотрудник,
		|	Резерв.СубконтоКт1,
		|	Резерв.СчетКт,
		|	Резерв.СчетКтНУ,
		|	Резерв.СубконтоКтНУ1,
		|	Резерв.СубконтоКт2,
		|	Резерв.СубконтоКт3,
		|	Резерв.СубконтоКтНУ2,
		|	Резерв.СубконтоКтНУ3";
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.СчетДт,
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.СубконтоДт1,
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.СубконтоДт2,
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.СубконтоДт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов) КАК СчетКт,
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.Ссылка.ОценочноеОбязательство КАК СубконтоКт1,
		|	СУММА(Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.Сумма) КАК Сумма
		|ИЗ
		|	Документ.Авт_РасчетОценочныхОбязательствПоОтпускам.ОценочныеОбязательства КАК Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства
		|ГДЕ
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.Ссылка = &парСсылкаДок
		|
		|СГРУППИРОВАТЬ ПО
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.СчетДт,
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.СубконтоДт1,
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.СубконтоДт2,
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.СубконтоДт3,
		|	Авт_РасчетОценочныхОбязательствПоОтпускамОценочныеОбязательства.Ссылка.ОценочноеОбязательство";
		
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;

КонецФункции // СформироватьЗапросПоПроводкам()

////////////////////////////////////////////////////////////////////////////////                                                                                                        
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ  

// Процедура выполняет автоматическое заполнение документа
//
// Параметры:
// 	Запрос  - [Запрос] - Содержит запрос по сотрудника организации
//
Процедура ВыполнитьАвтозаполнение(Запрос, МассивСотрудников)

	Если Запрос = Неопределено Тогда
		
		// Заполняем документ по всем сотрудникам
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		// Устанавливаем параметры
		Запрос.УстановитьПараметр("ПоВсемФизЛицам",			Истина);
		Запрос.УстановитьПараметр("ФизЛица", 				Справочники.ФизическиеЛица.ПустаяСсылка());
		Запрос.УстановитьПараметр("парОрганизация", 		Организация);
		Запрос.УстановитьПараметр("парКонецМесяца",			КонецМесяца(ПериодРегистрации));
		
		Если МассивСотрудников = Неопределено Тогда
			
			Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
				
				ПоВсемПодразделениямОрганизации = Ложь;
				Запрос.УстановитьПараметр("парамПодразделение", ПодразделениеОрганизации);
				
				ТекстЗапросаПоПодразделениям = 
				"ВЫБРАТЬ
				|	ПодразделенияОрганизаций.Ссылка КАК Подразделение
				|ПОМЕСТИТЬ ВТПодразделенияОтбора
				|ИЗ
				|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
				|ГДЕ
				|	ПодразделенияОрганизаций.Ссылка В ИЕРАРХИИ(&парамПодразделение)
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Подразделение";
				
			Иначе
				
				// Подготовим временную таблицу с подразделениями
				ПоВсемПодразделениямОрганизации = Истина;
				ТекстЗапросаПоПодразделениям = 
				"ВЫБРАТЬ
				|	НЕОПРЕДЕЛЕНО КАК Подразделение
				|ПОМЕСТИТЬ ВТПодразделенияОтбора";
				
			КонецЕсли;
			
			// Создаем временную таблицу с подразделениями
			Запрос.Текст = ТекстЗапросаПоПодразделениям;
			Запрос.УстановитьПараметр("ПоВсемПодразделениям", ПоВсемПодразделениямОрганизации);
			Запрос.Выполнить();
			
			// Получаем список сотрудников для отбора
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
			|	РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо
			|ПОМЕСТИТЬ ВТСписокРаботников
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|			&парКонецМесяца,
			|			Организация = &парОрганизация
			|				И (&ПоВсемФизЛицам
			|					ИЛИ Сотрудник.ФизЛицо В (&ФизЛица))) КАК РаботникиОрганизации
			|ГДЕ
			|	ВЫБОР
			|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &парКонецМесяца
			|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ТОГДА РаботникиОрганизации.ПричинаИзмененияСостоянияЗавершения
			|			ИНАЧЕ РаботникиОрганизации.ПричинаИзмененияСостояния
			|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|	И ВЫБОР
			|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &парКонецМесяца
			|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ТОГДА РаботникиОрганизации.ОбособленноеПодразделениеЗавершения
			|			ИНАЧЕ РаботникиОрганизации.ОбособленноеПодразделение
			|		КОНЕЦ = &парОрганизация
			|	И ВЫБОР
			|			КОГДА &ПоВсемПодразделениям
			|				ТОГДА ИСТИНА
			|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &парКонецМесяца
			|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|				ТОГДА РаботникиОрганизации.ПодразделениеОрганизацииЗавершения В
			|						(ВЫБРАТЬ
			|							Подразделения.Подразделение
			|						ИЗ
			|							ВТПодразделенияОтбора КАК Подразделения)
			|			ИНАЧЕ РаботникиОрганизации.ПодразделениеОрганизации В
			|					(ВЫБРАТЬ
			|						Подразделения.Подразделение
			|					ИЗ
			|						ВТПодразделенияОтбора КАК Подразделения)
			|		КОНЕЦ";
			
			Запрос.Выполнить();
		Иначе
			
			Запрос.УстановитьПараметр("ПоВсемПодразделениям", Истина);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Подразделение
			|ПОМЕСТИТЬ ВТПодразделенияОтбора";
			
			Запрос.Выполнить();
			
			Запрос.УстановитьПараметр("Сотрудники", МассивСотрудников);

			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СотрудникиОрганизаций.Ссылка КАК Сотрудник,
			|	СотрудникиОрганизаций.Физлицо
			|ПОМЕСТИТЬ ВТСписокРаботников
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			|ГДЕ
			|	СотрудникиОрганизаций.Ссылка В(&Сотрудники)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник";
			
			Запрос.Выполнить();
			
		КонецЕсли;
		
	Иначе
		// Заполняем документ только выбранными сотрудниками
		
		// Создаем временную таблицу ВТСписокРаботников с сотрудниками, отобранными по критериям пользователя 
		// 
		// Поля:
		//   Сотрудник
		//   Физлицо
		//
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
		// объявим временную таблицу - она должна присутствовать, но использоваться не будет
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Подразделение
		|ПОМЕСТИТЬ ВТПодразделенияОтбора";
		
		Запрос.Выполнить();
		Запрос.УстановитьПараметр("ПоВсемПодразделениям", Истина);
		Запрос.УстановитьПараметр("парОрганизация", 	  Организация);
		Запрос.УстановитьПараметр("парКонецМесяца",		  КонецМесяца(ПериодРегистрации));
		
	КонецЕсли;
		
	// Установка параметров
	Запрос.УстановитьПараметр("парамПериодРегистрации",  НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парНачалоПериодаМесяц", 	 НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парКонецПериодаМесяц",    КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парНачалоПериодаГод",  	 НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парКонецПериодаГод",  	 КонецМесяца(ПериодРегистрации));
    Запрос.УстановитьПараметр("парВидЕжегодногоОтпуска", ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни.ВидЕжегодногоОтпуска);
	
    СпособПоУмолчанию = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию;
	
	Запрос.УстановитьПараметр("парамСпособПоУмолчанию", 			 СпособПоУмолчанию);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетДт", 		 СпособПоУмолчанию.СчетДт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетКт", 		 СпособПоУмолчанию.СчетКт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт1", 	 СпособПоУмолчанию.СубконтоДт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт2", 	 СпособПоУмолчанию.СубконтоДт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт3", 	 СпособПоУмолчанию.СубконтоДт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт1", 	 СпособПоУмолчанию.СубконтоКт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт2", 	 СпособПоУмолчанию.СубконтоКт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт3", 	 СпособПоУмолчанию.СубконтоКт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетНУ", 		 СпособПоУмолчанию.СчетДтНУ);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетКтНУ", 	 СпособПоУмолчанию.СчетКтНУ);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ1", СпособПоУмолчанию.СубконтоДтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ2", СпособПоУмолчанию.СубконтоДтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ3", СпособПоУмолчанию.СубконтоДтНУ3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ1", СпособПоУмолчанию.СубконтоКтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ2", СпособПоУмолчанию.СубконтоКтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ3", СпособПоУмолчанию.СубконтоКтНУ3);	
	
	ТекстПериодов = "";
	ДтНачМесяца = НачалоГода(ПериодРегистрации);
	
	ТекстПериодов = "ВЫБРАТЬ
	|	ДАТАВРЕМЯ(" + Формат(ДтНачМесяца, "ДФ=yyyy")+ ", " + Месяц(ДтНачМесяца) + ", 1) КАК Период
	|ПОМЕСТИТЬ ВТПериоды";
	
	ДтНачМесяца = ДобавитьМесяц(ДтНачМесяца, 1);
	
	Пока ДтНачМесяца <= ПериодРегистрации Цикл
		
		ТекстПериодов =  ТекстПериодов + "
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ДАТАВРЕМЯ(" + Формат(ДтНачМесяца, "ДФ=yyyy") + ", " + Месяц(ДтНачМесяца) + ", 1) КАК Период
		|";
		
		ДтНачМесяца = ДобавитьМесяц(ДтНачМесяца, 1);
		
	КонецЦИкла;
	
	Запрос.Текст = ТекстПериодов +
	";
	|ВЫБРАТЬ
	|	РаботникиОрганизации.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &парКонецМесяца
	|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизации.ОбособленноеПодразделениеЗавершения
	|		ИНАЧЕ РаботникиОрганизации.ОбособленноеПодразделение
	|	КОНЕЦ КАК ОбособленноеПодразделение,
	|	РаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
	|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &парКонецМесяца
	|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизации.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизации.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &парКонецМесяца
	|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизации.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизации.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ПриказыОПриеме.ДатаПриема КАК ДатаПриема,
	|	0 КАК ТекущийОстатокОтпуска,
	|	&парамПериодРегистрации КАК ДатаНачалаСобытия
	|ПОМЕСТИТЬ ВТ_ФизЛицаОрганизаций
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&парКонецМесяца,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТСписокРаботников.Сотрудник
	|				ИЗ
	|					ВТСписокРаботников КАК ВТСписокРаботников)) КАК РаботникиОрганизации
	|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДатыПоследнихДвиженийРаботников.Период КАК ДатаПриема,
	|			ДатыПоследнихДвиженийРаботников.Сотрудник КАК Сотрудник,
	|			ДатыПоследнихДвиженийРаботников.Организация КАК Организация,
	|			ДатыПоследнихДвиженийРаботников.Приказ КАК ПриказИзмерение,
	|			ДанныеПоРаботникуПриНазначении.ПервичныйДокумент КАК Приказ,
	|			ДатыПоследнихДвиженийРаботников.Сотрудник.ВидЗанятости КАК ВидЗанятости
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТЧРаботникиОрганизации.Организация КАК Организация,
	|				МАКСИМУМ(Работники.Период) КАК Период,
	|				ТЧРаботникиОрганизации.Сотрудник КАК Сотрудник,
	|				ТЧРаботникиОрганизации.ПервичныйДокумент КАК Приказ
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парКонецМесяца, ) КАК ТЧРаботникиОрганизации
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|					ПО (Работники.Период <= ТЧРаботникиОрганизации.Период)
	|						И (Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
	|						И ТЧРаботникиОрганизации.Сотрудник = Работники.Сотрудник
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТЧРаботникиОрганизации.Сотрудник,
	|				ТЧРаботникиОрганизации.Организация,
	|				ТЧРаботникиОрганизации.ПервичныйДокумент) КАК ДатыПоследнихДвиженийРаботников
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуПриНазначении
	|				ПО (ДанныеПоРаботникуПриНазначении.Период = ДатыПоследнихДвиженийРаботников.Период)
	|					И ДатыПоследнихДвиженийРаботников.Сотрудник = ДанныеПоРаботникуПриНазначении.Сотрудник) КАК ПриказыОПриеме
	|		ПО РаботникиОрганизации.Сотрудник = ПриказыОПриеме.Сотрудник}
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &парКонецМесяца
	|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизации.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизации.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И ВЫБОР
	|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &парКонецМесяца
	|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизации.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизации.ОбособленноеПодразделение
	|		КОНЕЦ = &парОрганизация
	|	И ВЫБОР
	|			КОГДА &ПоВсемПодразделениям
	|				ТОГДА ИСТИНА
	|			КОГДА РаботникиОрганизации.ПериодЗавершения <= &парКонецМесяца
	|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизации.ПодразделениеОрганизацииЗавершения В
	|						(ВЫБРАТЬ
	|							Подразделения.Подразделение
	|						ИЗ
	|							ВТПодразделенияОтбора КАК Подразделения)
	|			ИНАЧЕ РаботникиОрганизации.ПодразделениеОрганизации В
	|					(ВЫБРАТЬ
	|						Подразделения.Подразделение
	|					ИЗ
	|						ВТПодразделенияОтбора КАК Подразделения)
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Сотрудник,
	|	ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСотрудников.Сотрудник КАК Сотрудник,
	|	МАКСИМУМ(УчетЗарВРеглУчете.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_СведенияОРаботниках
	|ИЗ
	|	ВТ_ФизЛицаОрганизаций КАК ДанныеСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
	|		ПО ДанныеСотрудников.Сотрудник = УчетЗарВРеглУчете.Сотрудник
	|			И (УчетЗарВРеглУчете.Период <= ДанныеСотрудников.ДатаНачалаСобытия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСотрудников.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОРаботникахСрез.Сотрудник КАК Сотрудник,
	|	УчетЗарВРеглУчете.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете
	|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработка
	|ИЗ
	|	РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОРаботниках КАК СведенияОРаботникахСрез
	|		ПО (СведенияОРаботникахСрез.Сотрудник = УчетЗарВРеглУчете.Сотрудник)
	|			И (СведенияОРаботникахСрез.Период = УчетЗарВРеглУчете.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСотрудников.Сотрудник,
	|	ДанныеСотрудников.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	МАКСИМУМ(УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_СведенияОПодразделениях
	|ИЗ
	|	ВТ_ФизЛицаОрганизаций КАК ДанныеСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
	|		ПО ДанныеСотрудников.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
	|			И (УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период <= ДанныеСотрудников.ДатаНачалаСобытия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСотрудников.ПодразделениеОрганизации,
	|	ДанныеСотрудников.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодразделениеОрганизации,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОПодразделенияхСрез.Сотрудник КАК Сотрудник,
	|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете
	|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаПодразделения
	|ИЗ
	|	ВТ_СведенияОПодразделениях КАК СведенияОПодразделенияхСрез
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
	|		ПО СведенияОПодразделенияхСрез.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
	|			И СведенияОПодразделенияхСрез.Период = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСотрудников.Сотрудник,
	|	МАКСИМУМ(УчетОсновногоЗаработкаОрганизации.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_СведенияПоОрганизации
	|ИЗ
	|	ВТ_ФизЛицаОрганизаций КАК ДанныеСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
	|		ПО ДанныеСотрудников.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
	|			И (УчетОсновногоЗаработкаОрганизации.Период <= ДанныеСотрудников.ДатаНачалаСобытия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСотрудников.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияПоОрганизации.Сотрудник КАК Сотрудник,
	|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете
	|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаОрганизации
	|ИЗ
	|	ВТ_СведенияПоОрганизации КАК СведенияПоОрганизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
	|		ПО СведенияПоОрганизации.Период = УчетОсновногоЗаработкаОрганизации.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСотрудников.Сотрудник КАК Сотрудник,
	|	ДанныеСотрудников.ФизЛицо КАК ФизЛицо,
	|	ДанныеСотрудников.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ДанныеСотрудников.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДанныеСотрудников.Должность,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДт
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДт
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДт
	|		ИНАЧЕ &парамСпособПоУмолчаниюСчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКт
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКт
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКт
	|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКт
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт1
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт1
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт1
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт2
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт2
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт2
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт3
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт3
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт3
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт1
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт1
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт1
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт2
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт2
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт2
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт3
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт3
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт3
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт3
	|	КОНЕЦ КАК СубконтоКт3,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДтНУ
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДтНУ
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДтНУ
	|		ИНАЧЕ &парамСпособПоУмолчаниюСчетНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКтНУ
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКтНУ
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКтНУ
	|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКтНУ
	|	КОНЕЦ КАК СчетКтНУ,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ1
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ2
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ3
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ1
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ1
	|	КОНЕЦ КАК СубконтоКтНУ1,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ2
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ2
	|	КОНЕЦ КАК СубконтоКтНУ2,
	|	ВЫБОР
	|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ3
	|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
	|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
	|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ3
	|	КОНЕЦ КАК СубконтоКтНУ3,
	|	ДанныеСотрудников.ДатаПриема
	|ПОМЕСТИТЬ Вт_ДанныеУчета
	|ИЗ
	|	ВТ_ФизЛицаОрганизаций КАК ДанныеСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетЗарВРеглУчете
	|		ПО ДанныеСотрудников.Сотрудник = УчетЗарВРеглУчете.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
	|		ПО ДанныеСотрудников.Сотрудник = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
	|		ПО ДанныеСотрудников.Сотрудник = УчетОсновногоЗаработкаОрганизации.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ФизЛицо,
	|	ОбособленноеПодразделение,
	|	ПодразделениеОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&парОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеУчета.Сотрудник,
	|	ДанныеУчета.ФизЛицо,
	|	ДанныеУчета.Должность,
	|	ДанныеУчета.ПодразделениеОрганизации,
	|	ДанныеУчета.СчетДт КАК СчетДт,
	|	ДанныеУчета.СубконтоДт1,
	|	ДанныеУчета.СубконтоДт2,
	|	ДанныеУчета.СубконтоДт3,
	|	ДанныеУчета.СчетКт КАК СчетКт,
	|	ДанныеУчета.СубконтоКт1,
	|	ДанныеУчета.СубконтоКт2,
	|	ДанныеУчета.СубконтоКт3,
	|	ДанныеУчета.СчетДтНУ,
	|	ДанныеУчета.СчетКтНУ,
	|	ДанныеУчета.СубконтоДтНУ1,
	|	ДанныеУчета.СубконтоДтНУ2,
	|	ДанныеУчета.СубконтоДтНУ3,
	|	ДанныеУчета.СубконтоКтНУ1,
	|	ДанныеУчета.СубконтоКтНУ2,
	|	ДанныеУчета.СубконтоКтНУ3,
	|	ЕСТЬNULL(ВидыСубконтоРаботникиДт.НомерСтроки, 0) КАК НомерСубконтоРаботникиДт,
	|	ЕСТЬNULL(ВидыСубконтоРаботникиКт.НомерСтроки, 0) КАК НомерСубконтоРаботникиКт,
	|	ЕСТЬNULL(ВидыСубконтоПодразделенияДт.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДт,
	|	ЕСТЬNULL(ВидыСубконтоРаботникиДтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиДтНУ,
	|	ЕСТЬNULL(ВидыСубконтоРаботникиКтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиКтНУ,
	|	ЕСТЬNULL(ВидыСубконтоПодразделенияДтНУ.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДтНУ,
	|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДт.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДт,
	|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДтНУ.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДтНУ,
	|	ДанныеУчета.ДатаПриема,
	|	СуммыРезерваПрошлыхПериодов.СуммаОстаток КАК СуммаРезерваЗаПредыдущийПериод,
	|	СуммыРезерваПрошлыхПериодов.НеиспользованныеДниОтпускаОстаток КАК НеиспользованныеДниОтпускаЗаПредыдущийПериод,
	|	СуммыОтпускных.СуммаОтпускныхЗаТекущийПериод,
	|	КоличествоФактическихДнейОтпуска.КоличествоОборот КАК КоличествоДнейФактическогоОтпуска
	|ПОМЕСТИТЬ ВТ_ИтоговаяСчета
	|ИЗ
	|	Вт_ДанныеУчета КАК ДанныеУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиДт
	|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И ДанныеУчета.СчетДт = ВидыСубконтоРаботникиДт.Ссылка
	|			И (ВидыСубконтоРаботникиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиКт
	|		ПО (ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И ДанныеУчета.СчетКт = ВидыСубконтоРаботникиКт.Ссылка
	|			И (ВидыСубконтоРаботникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияДт
	|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И ДанныеУчета.СчетДт = ВидыСубконтоПодразделенияДт.Ссылка
	|			И (ВидыСубконтоПодразделенияДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДт
	|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И ДанныеУчета.СчетДт = ВидыСубконтоСтатьиЗатратДт.Ссылка
	|			И (ВидыСубконтоСтатьиЗатратДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДтНУ
	|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
	|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоСтатьиЗатратДтНУ.Ссылка
	|			И (ВидыСубконтоСтатьиЗатратДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиДтНУ
	|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
	|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоРаботникиДтНУ.Ссылка
	|			И (ВидыСубконтоРаботникиДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиКтНУ
	|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
	|			И ДанныеУчета.СчетКтНУ = ВидыСубконтоРаботникиКтНУ.Ссылка
	|			И (ВидыСубконтоРаботникиКтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоПодразделенияДтНУ
	|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
	|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоПодразделенияДтНУ.Ссылка
	|			И (ВидыСубконтоПодразделенияДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Авт_ОценочныеОбязательстваПоОтпускам.Остатки(&парамПериодРегистрации, Организация = &парОрганизация) КАК СуммыРезерваПрошлыхПериодов
	|		ПО ДанныеУчета.Сотрудник = СуммыРезерваПрошлыхПериодов.Сотрудник
	|			И ДанныеУчета.ФизЛицо = СуммыРезерваПрошлыхПериодов.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|			ОсновныеНачисленияРаботниковОрганизаций.Организация КАК Организация,
	|			СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК СуммаОтпускныхЗаТекущийПериод
	|		ИЗ
	|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ГДЕ
	|			ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = НАЧАЛОПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
	|			И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОсновныеНачисленияРаботниковОрганизаций.Сотрудник,
	|			ОсновныеНачисленияРаботниковОрганизаций.Организация) КАК СуммыОтпускных
	|		ПО ДанныеУчета.Сотрудник = СуммыОтпускных.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ФактическиеОтпускаОрганизаций.Сотрудник КАК Сотрудник,
	|			ФактическиеОтпускаОрганизаций.КоличествоОборот КАК КоличествоОборот
	|		ИЗ
	|			РегистрНакопления.ФактическиеОтпускаОрганизаций.Обороты(&парНачалоПериодаМесяц, &парКонецПериодаМесяц, Месяц, ВидЕжегодногоОтпуска = &парВидЕжегодногоОтпуска) КАК ФактическиеОтпускаОрганизаций) КАК КоличествоФактическихДнейОтпуска
	|		ПО ДанныеУчета.Сотрудник = КоличествоФактическихДнейОтпуска.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрезПоследнихДат.ПериодРегистрации КАК ПериодРегистрации,
	|	СрезПоследнихДат.Физлицо КАК Физлицо,
	|	СведенияОбИнвалидностиФизлиц.Инвалидность,
	|	СведенияОбИнвалидностиФизлиц.ДатаВыдачи,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТИнвалиды
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТПериоды.Период КАК ПериодРегистрации,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК Период
	|	ИЗ
	|		ВТПериоды КАК ВТПериоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|			ПО (КОНЕЦПЕРИОДА(ВТПериоды.Период, МЕСЯЦ) >= СведенияОбИнвалидностиФизлиц.Период)
	|	ГДЕ
	|		СведенияОбИнвалидностиФизлиц.Физлицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТ_ФизЛицаОрганизаций КАК Организации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		ВТПериоды.Период) КАК СрезПоследнихДат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|		ПО СрезПоследнихДат.Период = СведенияОбИнвалидностиФизлиц.Период
	|			И СрезПоследнихДат.Физлицо = СведенияОбИнвалидностиФизлиц.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрезПоследнихДат.ПериодРегистрации КАК ПериодРегистрации,
	|	СрезПоследнихДат.Физлицо КАК Физлицо,
	|	ГражданствоФизЛиц.Страна,
	|	ГражданствоФизЛиц.НеИмеетПравоНаПенсию
	|ПОМЕСТИТЬ ВТГражданство
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТПериоды.Период КАК ПериодРегистрации,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК Период
	|	ИЗ
	|		ВТПериоды КАК ВТПериоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО (КОНЕЦПЕРИОДА(ВТПериоды.Период, МЕСЯЦ) >= ГражданствоФизЛиц.Период)
	|	ГДЕ
	|		ГражданствоФизЛиц.ФизЛицо В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо
	|				ИЗ
	|					ВТ_ФизЛицаОрганизаций КАК Организации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		ВТПериоды.Период) КАК СрезПоследнихДат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО СрезПоследнихДат.Период = ГражданствоФизЛиц.Период
	|			И СрезПоследнихДат.Физлицо = ГражданствоФизЛиц.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.Организация,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД,
	|	СтраховыеВзносыСведенияОДоходах.Период КАК Период,
	|	СУММА(СтраховыеВзносыСведенияОДоходах.РезультатОборот) КАК РезультатОборот,
	|	СУММА(СтраховыеВзносыСведенияОДоходах.СкидкаОборот) КАК СкидкаОборот
	|ПОМЕСТИТЬ ВТСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(
	|			&парНачалоПериодаГод,
	|			&парКонецПериодаГод,
	|			МЕСЯЦ,
	|			(Физлицо, ОбособленноеПодразделение) В
	|				(ВЫБРАТЬ
	|					Организации.ФизЛицо,
	|					Организации.ОбособленноеПодразделение
	|				ИЗ
	|					ВТ_ФизЛицаОрганизаций КАК Организации)) КАК СтраховыеВзносыСведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.Организация,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходах.Период,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(ВЫБОР
	|						КОГДА СведенияОДоходах.ОблагаетсяЕНВД
	|							ТОГДА СведенияОДоходах.РезультатОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ) > 0
	|				И СУММА(ВЫБОР
	|						КОГДА (НЕ СведенияОДоходах.ОблагаетсяЕНВД)
	|							ТОГДА СведенияОДоходах.РезультатОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоЕНВД,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ВТВидыДеятельности
	|ИЗ
	|	ВТСведенияОДоходах КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ОбособленноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.ОбособленноеПодразделение,
	|	Периоды.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)) = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)
	|				И ВидыДеятельности.ТолькоЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|		ИНАЧЕ ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим))
	|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТВидыТарифныхСтавокОрганизаций
	|ИЗ
	|	ВТ_ФизЛицаОрганизаций КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Периоды.Период КАК Период,
	|			Организации.Организация КАК Организация,
	|			МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|		ИЗ
	|			ВТПериоды КАК Периоды
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФизЛицаОрганизаций КАК Организации
	|				ПО (ИСТИНА)
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|				ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|					И (УчетнаяПолитикаНалоговыйУчет.Организация = Организации.Организация)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период,
	|			Организации.Организация) КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|				И Периоды.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
	|		ПО (Периоды.Организация = Организации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыДеятельности КАК ВидыДеятельности
	|		ПО Организации.ОбособленноеПодразделение = ВидыДеятельности.ОбособленноеПодразделение
	|			И (Периоды.Период = ВидыДеятельности.Период)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТарифСтраховыхВзносов.ПФР,
	|	ТарифСтраховыхВзносов.ПФРНакопительная,
	|	ТарифСтраховыхВзносов.ФСС,
	|	ТарифСтраховыхВзносов.ФФОМС,
	|	ТарифСтраховыхВзносов.ТФОМС,
	|	ТарифСтраховыхВзносов.ВидТарифа КАК ВидТарифа,
	|	ГОД(ДатыПоследнихДвижений.ПериодРегистрации) КАК РасчетныйПериод
	|ПОМЕСТИТЬ ВТРазмерыТарифныхСтавок
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТарифСтраховыхВзносов.ВидТарифа КАК ВидТарифа,
	|		КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) КАК ПериодРегистрации,
	|		МАКСИМУМ(ТарифСтраховыхВзносов.Период) КАК Период
	|	ИЗ
	|		ВТПериоды КАК Месяцы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТарифСтраховыхВзносов КАК ТарифСтраховыхВзносов
	|			ПО (КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) >= ТарифСтраховыхВзносов.Период)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТарифСтраховыхВзносов.ВидТарифа,
	|		Месяцы.Период) КАК ДатыПоследнихДвижений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТарифСтраховыхВзносов КАК ТарифСтраховыхВзносов
	|		ПО ДатыПоследнихДвижений.ВидТарифа = ТарифСтраховыхВзносов.ВидТарифа
	|			И ДатыПоследнихДвижений.Период = ТарифСтраховыхВзносов.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидТарифа,
	|	РасчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.Организация КАК Организация,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК ВидДохода,
	|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СтраховыеВзносыСведенияОДоходах.РезультатОборот КАК Результат,
	|	СтраховыеВзносыСведенияОДоходах.СкидкаОборот КАК Скидка,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	|		КОГДА ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)
	|				И СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
	|		ИНАЧЕ ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов
	|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом)
	|				ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС)
	|				ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих)
	|			ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НеОблагаетсяЦеликом,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДоговорыГПХ)
	|				ИЛИ СтраховыеВзносыСведенияОДоходах.ВидДохода = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоГражданскоПравовомуДоговору)
	|			ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоговорГПХ,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|			ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот - СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемаяБазаФСС,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода.ВходитВБазуФОМС
	|			ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот - СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемаяБазаФОМС,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|			ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот - СтраховыеВзносыСведенияОДоходах.СкидкаОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемаяБазаПФР
	|ПОМЕСТИТЬ ВТДоходыВзносов
	|ИЗ
	|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = Инвалиды.ПериодРегистрации
	|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Инвалиды.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыТарифныхСтавокОрганизаций КАК ВидыТарифныхСтавок
	|		ПО СтраховыеВзносыСведенияОДоходах.Период = ВидыТарифныхСтавок.Период
	|			И СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = ВидыТарифныхСтавок.ОбособленноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидДохода,
	|	Организация,
	|	ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредельнаяВеличинаБазыСтраховыхВзносов.Размер КАК Размер,
	|	ДатыПоследнихДвижений.ПериодРегистрации КАК ПериодРегистрации
	|ПОМЕСТИТЬ ВТПредельнаяВеличина
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ПредельнаяВеличинаБазыСтраховыхВзносов.Период) КАК Период,
	|		ВТПериоды.Период КАК ПериодРегистрации
	|	ИЗ
	|		ВТПериоды КАК ВТПериоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|			ПО ВТПериоды.Период >= ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТПериоды.Период) КАК ДатыПоследнихДвижений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|		ПО ДатыПоследнихДвижений.Период = ПредельнаяВеличинаБазыСтраховыхВзносов.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = СведенияОДоходах.Период
	|					И СведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаГодФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = СведенияОДоходах.Период
	|					И СведенияОДоходах.ВидДохода.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяцФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаГодФСС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = СведенияОДоходах.Период
	|					И СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяцФСС
	|ПОМЕСТИТЬ ВТБазаНарастающимИтогом
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходах КАК СведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|			ПО СведенияОДоходах.Период = Гражданство.ПериодРегистрации
	|				И СведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|		ПО (СведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) И Периоды.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
	|	ОблагаемаяБаза.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ОблагаемаяБаза.ЗаГод - Предел.Размер >= 0
	|			ТОГДА ОблагаемаяБаза.ЗаГод - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер >= 0
	|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПревысившаяПредел,
	|	ВЫБОР
	|		КОГДА ОблагаемаяБаза.ЗаГодФОМС - Предел.Размер >= 0
	|			ТОГДА ОблагаемаяБаза.ЗаГодФОМС - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФОМС, 0) - Предел.Размер >= 0
	|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФОМС, 0) - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПревысившаяПределФОМС,
	|	ВЫБОР
	|		КОГДА ОблагаемаяБаза.ЗаГодФСС - Предел.Размер >= 0
	|			ТОГДА ОблагаемаяБаза.ЗаГодФСС - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФСС, 0) - Предел.Размер >= 0
	|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГодФСС, 0) - Предел.Размер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПревысившаяПределФСС
	|ПОМЕСТИТЬ ВТБазаПревышенияДохода
	|ИЗ
	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличина КАК Предел
	|		ПО ОблагаемаяБаза.Период = Предел.ПериодРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаНарастающимИтогом КАК ОблагаемаяБазаПрошлогоМесяца
	|		ПО ОблагаемаяБаза.ФизЛицо = ОблагаемаяБазаПрошлогоМесяца.ФизЛицо
	|			И (ОблагаемаяБаза.Период = ДОБАВИТЬКДАТЕ(ОблагаемаяБазаПрошлогоМесяца.Период, МЕСЯЦ, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.ПериодРегистрации КАК Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|				ТОГДА СведенияОДоходах.Результат - СведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФОМС
	|				ТОГДА СведенияОДоходах.Результат - СведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяцФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|				ТОГДА 0
	|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
	|				ТОГДА СведенияОДоходах.Результат - СведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаМесяцФСС
	|ПОМЕСТИТЬ ВТБазаЗаМесяцПоОбособленноеПодразделение
	|ИЗ
	|	ВТДоходыВзносов КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
	|		ПО СведенияОДоходах.ПериодРегистрации = Гражданство.ПериодРегистрации
	|			И СведенияОДоходах.ФизЛицо = Гражданство.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.ОбособленноеПодразделение,
	|	СведенияОДоходах.ПериодРегистрации,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяц) КАК ЗаМесяц,
	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяцФОМС) КАК ЗаМесяцФОМС,
	|	МАКСИМУМ(СведенияОДоходах.ЗаМесяцФСС) КАК ЗаМесяцФСС
	|ПОМЕСТИТЬ ВТМаксБазаЗаМесяц
	|ИЗ
	|	ВТБазаЗаМесяцПоОбособленноеПодразделение КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ЗаМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходах.Период КАК Период,
	|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	МАКСИМУМ(БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТОбособленноеПодразделениеМаксБазы
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|		СведенияОДоходах.Период КАК Период,
	|		СведенияОДоходах.ЗаМесяц КАК ЗаМесяц,
	|		МАКСИМУМ(БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение) КАК ОбособленноеПодразделение
	|	ИЗ
	|		ВТМаксБазаЗаМесяц КАК СведенияОДоходах
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|				И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|				И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОДоходах.ФизЛицо,
	|		СведенияОДоходах.Период,
	|		СведенияОДоходах.ЗаМесяц) КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|		ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|			И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
	|			И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
	|			И СведенияОДоходах.ОбособленноеПодразделение = БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизЛицо,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ОбособленноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ОбособленноеПодразделение,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
	|	ОблагаемаяБаза.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел = 0
	|				ИЛИ ОблагаемаяБаза.ЗаМесяц = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаЗаМесяцПоОбособленным.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОблагаемаяБаза.ЗаМесяц КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПревысившаяПредел,
	|	БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение,
	|	БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТПревышениеДоходаПоОбособленноеПодразделение
	|ИЗ
	|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаПревышенияДохода КАК ПревышениеДоходаПоВсемОП
	|		ПО ОблагаемаяБаза.ФизЛицо = ПревышениеДоходаПоВсемОП.ФизЛицо
	|			И ОблагаемаяБаза.Период = ПревышениеДоходаПоВсемОП.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
	|			ПО БазаЗаМесяцПоОбособленным.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|				И БазаЗаМесяцПоОбособленным.Период = ОбособленноеПодразделениеДляОкругления.Период
	|				И БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение = ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение
	|				И БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов = ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
	|		ПО ОблагаемаяБаза.Период = БазаЗаМесяцПоОбособленным.Период
	|			И ОблагаемаяБаза.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
	|ГДЕ
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Превышение.ФизЛицо КАК ФизЛицо,
	|	СУММА(Превышение.СуммаПревысившаяПредел) КАК СуммаПревысившаяПредел,
	|	Превышение.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|	Превышение.ОбособленноеПодразделение КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ВТ_Превышение
	|ИЗ
	|	ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
	|ГДЕ
	|	Превышение.ОбособленноеПодразделение ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	Превышение.ФизЛицо,
	|	Превышение.ВидТарифаСтраховыхВзносов,
	|	Превышение.ОбособленноеПодразделение
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Превышение.ФизЛицо,
	|	СУММА(Превышение.СуммаПревысившаяПредел),
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов,
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение
	|ИЗ
	|	(ВЫБРАТЬ
	|		Превышение.ФизЛицо КАК ФизЛицо,
	|		Превышение.Период КАК Период,
	|		-Превышение.СуммаПревысившаяПредел КАК СуммаПревысившаяПредел
	|	ИЗ
	|		ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Превышение.ФизЛицо,
	|		Превышение.Период,
	|		Превышение.СуммаПревысившаяПредел
	|	ИЗ
	|		ВТБазаПревышенияДохода КАК Превышение) КАК Превышение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
	|		ПО Превышение.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
	|			И Превышение.Период = ОбособленноеПодразделениеДляОкругления.Период
	|ГДЕ
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	Превышение.ФизЛицо,
	|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов,
	|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Превышение.ФизЛицо,
	|	ВТ_Превышение.СуммаПревысившаяПредел,
	|	ВТ_Превышение.ВидТарифаСтраховыхВзносов,
	|	ВТ_Превышение.ОбособленноеПодразделение,
	|	ВТРазмерыТарифныхСтавок.ПФР,
	|	ВТРазмерыТарифныхСтавок.ПФРНакопительная,
	|	ВТРазмерыТарифныхСтавок.ФСС,
	|	ВТРазмерыТарифныхСтавок.ФФОМС,
	|	ВТРазмерыТарифныхСтавок.ТФОМС
	|ПОМЕСТИТЬ ВТ_ИтоговаяВзносы
	|ИЗ
	|	ВТ_Превышение КАК ВТ_Превышение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыТарифныхСтавок КАК ВТРазмерыТарифныхСтавок
	|		ПО ВТ_Превышение.ВидТарифаСтраховыхВзносов = ВТРазмерыТарифныхСтавок.ВидТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИтоговаяСчета.ГоловнаяОрганизация,
	|	ВТ_ИтоговаяСчета.Сотрудник,
	|	ВТ_ИтоговаяСчета.ФизЛицо,
	|	ВТ_ИтоговаяСчета.Должность,
	|	ВТ_ИтоговаяСчета.ПодразделениеОрганизации,
	|	ВТ_ИтоговаяСчета.СчетДт,
	|	ВТ_ИтоговаяСчета.СубконтоДт1,
	|	ВТ_ИтоговаяСчета.СубконтоДт2,
	|	ВТ_ИтоговаяСчета.СубконтоДт3,
	|	ВТ_ИтоговаяСчета.СчетКт,
	|	ВТ_ИтоговаяСчета.СубконтоКт1,
	|	ВТ_ИтоговаяСчета.СубконтоКт2,
	|	ВТ_ИтоговаяСчета.СубконтоКт3,
	|	ВТ_ИтоговаяСчета.СчетДтНУ,
	|	ВТ_ИтоговаяСчета.СчетКтНУ,
	|	ВТ_ИтоговаяСчета.СубконтоДтНУ1,
	|	ВТ_ИтоговаяСчета.СубконтоДтНУ2,
	|	ВТ_ИтоговаяСчета.СубконтоДтНУ3,
	|	ВТ_ИтоговаяСчета.СубконтоКтНУ1,
	|	ВТ_ИтоговаяСчета.СубконтоКтНУ2,
	|	ВТ_ИтоговаяСчета.СубконтоКтНУ3,
	|	ВТ_ИтоговаяСчета.НомерСубконтоРаботникиДт,
	|	ВТ_ИтоговаяСчета.НомерСубконтоРаботникиКт,
	|	ВТ_ИтоговаяСчета.НомерСубконтоПодразделенияДт,
	|	ВТ_ИтоговаяСчета.НомерСубконтоРаботникиДтНУ,
	|	ВТ_ИтоговаяСчета.НомерСубконтоРаботникиКтНУ,
	|	ВТ_ИтоговаяСчета.НомерСубконтоПодразделенияДтНУ,
	|	ВТ_ИтоговаяСчета.НомерСубконтоСтатьиЗатратДт,
	|	ВТ_ИтоговаяСчета.НомерСубконтоСтатьиЗатратДтНУ,
	|	ВТ_ИтоговаяСчета.ДатаПриема,
	|	ВТ_ИтоговаяСчета.КоличествоДнейФактическогоОтпуска,
	|	ЕСТЬNULL(ВТ_ИтоговаяСчета.НеиспользованныеДниОтпускаЗаПредыдущийПериод, 0) КАК НеиспользованныеДниОтпускаЗаПредыдущийПериод,
	|	ЕСТЬNULL(ВТ_ИтоговаяСчета.СуммаРезерваЗаПредыдущийПериод, 0) КАК СуммаРезерваЗаПредыдущийПериод,
	|	ЕСТЬNULL(ВТ_ИтоговаяСчета.СуммаОтпускныхЗаТекущийПериод, 0) КАК СуммаОтпускныхЗаТекущийПериод,
	|	ЕСТЬNULL(ВТ_ИтоговаяВзносы.СуммаПревысившаяПредел, 0) КАК ПревышениеПредельнойВеличиныСтраховыхВзносов,
	|	ЕСТЬNULL(ВТ_ИтоговаяВзносы.ПФР, 0) + ЕСТЬNULL(ВТ_ИтоговаяВзносы.ФСС, 0) + ЕСТЬNULL(ВТ_ИтоговаяВзносы.ФФОМС, 0) + ЕСТЬNULL(ВТ_ИтоговаяВзносы.ТФОМС, 0) КАК ПроцентСтраховыхВзносов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ИтоговаяВзносы.СуммаПревысившаяПредел, 0) > 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НачислятьПроцентСтраховыхВзносов,
	|	ЕСТЬNULL(ПроцентСтрахованиеОтНесчастныхСлучаев.Ставка, 0) КАК СтавкаОтНесчастныхСлучаев
	|ИЗ
	|	ВТ_ИтоговаяСчета КАК ВТ_ИтоговаяСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИтоговаяВзносы КАК ВТ_ИтоговаяВзносы
	|		ПО ВТ_ИтоговаяСчета.ГоловнаяОрганизация = ВТ_ИтоговаяВзносы.ОбособленноеПодразделение
	|			И ВТ_ИтоговаяСчета.ФизЛицо = ВТ_ИтоговаяВзносы.ФизЛицо,
	|	РегистрСведений.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев.СрезПоследних(ДОБАВИТЬКДАТЕ(&парамПериодРегистрации, МЕСЯЦ, 1), Организация = &парОрганизация) КАК ПроцентСтрахованиеОтНесчастныхСлучаев";
	
	// Получаем список сотрудников
	
	ТзСотрудники = Запрос.Выполнить().Выгрузить();
	ПустойСчет 	 = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	ПустойСчетНУ = ПланыСчетов.Налоговый.ПустаяСсылка();

	Если ТзСотрудники.Количество() > 0 Тогда
		
		Для Каждого СтрокаСотрудника Из ТзСотрудники Цикл
			
			Строка = ОценочныеОбязательства.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, СтрокаСотрудника);
			Строка.Авторасчет = Истина;
			
			Если НЕ ЗначениеЗаполнено(Строка.ПроцентСтраховыхВзносов) Тогда
				Строка.ПроцентСтраховыхВзносов = мПроцентСтраховыхВзносовПоОрганизации;	
			КонецЕсли;
			
			// Рассчитываем сумму с тещих отпускных с учетом соц отчислений
			Если Строка.СуммаОтпускныхЗаТекущийПериод <> 0 Тогда
				
				Строка.СуммаОтпускныхЗаТекущийПериод = Строка.СуммаОтпускныхЗаТекущийПериод; //* (1 + (Строка.ПроцентСтраховыхВзносов + Строка.СтавкаОтНесчастныхСлучаев) / 100); 
				Строка.СуммаНалоговОтпускныхЗаТекущийПериод = Строка.СуммаОтпускныхЗаТекущийПериод * (Строка.ПроцентСтраховыхВзносов + Строка.СтавкаОтНесчастныхСлучаев) / 100 
				
			КонецЕсли;
			
			// Провермяем необходимость заполнять данные по счетам
			Если мОценочныеОбязательстваФормироватьБУ Тогда
				Если НЕ мОценочныеОбязательстваФормироватьНУ Тогда
					Строка.СчетДтНУ = ПустойСчетНУ; 	
					Строка.СубконтоДтНУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка(); 
					Строка.СубконтоДтНУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка(); 
					Строка.СубконтоДтНУ3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка(); 
				КонецЕсли;
				
				АвтозаполнениеСубконто(СтрокаСотрудника, Строка, ПустойСчет);
			Иначе
				
				// Очищаем параметры учета
				Строка.СчетДт   = ПустойСчет; 
				Строка.СубконтоДт1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка(); 
				Строка.СубконтоДт2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка(); 
				Строка.СубконтоДт3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка(); 
				
				Строка.СчетДтНУ = ПустойСчетНУ; 
				Строка.СубконтоДтНУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка(); 
				Строка.СубконтоДтНУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка(); 
				Строка.СубконтоДтНУ3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка(); 

			КонецЕсли;
			
		КонецЦикла;
		
		Состояние("Расчет неиспользованных дней отпуска");
		ЗаполнитьДанныеПоКоличествуОставщихсяДнейОтпуска();
	
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьАвтозаполнение()

// Процедура заполняет колонку таблицы остаткоми дней отпуска сотрудника
// на дату формирования данных
//
Процедура ЗаполнитьДанныеПоКоличествуОставщихсяДнейОтпуска()
	
	// Получаем список ежегодных отпусков
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыЕжегодныхОтпусков.Ссылка
	|ИЗ
	|	Справочник.ВидыЕжегодныхОтпусков КАК ВидыЕжегодныхОтпусков
	|ГДЕ
	|	(НЕ ВидыЕжегодныхОтпусков.ПометкаУдаления)";
	
	ВыборкаПоВидамОтпусков = Запрос.Выполнить().Выбрать();
	
	// Подготовить таблицу периодов для расчета остатков
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("НомерСтроки",				Новый ОписаниеТипов("Число"));
	ТаблицаПериодов.Колонки.Добавить("Сотрудник",				Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"));
	ТаблицаПериодов.Колонки.Добавить("ВидЕжегодногоОтпуска",	Новый ОписаниеТипов("СправочникСсылка.ВидыЕжегодныхОтпусков"));
	ТаблицаПериодов.Колонки.Добавить("ДатаНачала",				Новый ОписаниеТипов("Дата"));
	ТаблицаПериодов.Колонки.Добавить("ДатаОкончания",			Новый ОписаниеТипов("Дата"));
	
	РабДата	   = КонецМесяца(ПериодРегистрации);
	ДлинаСуток = 86400;
	
	НомерСтроки = 0;
	Для Каждого ДанныеСтроки Из ОценочныеОбязательства Цикл
		
		ВыборкаПоВидамОтпусков.Сбросить();
		Пока ВыборкаПоВидамОтпусков.Следующий() Цикл
			
			Строка 						= ТаблицаПериодов.Добавить();
			Строка.НомерСтроки			= НомерСтроки;
			Строка.Сотрудник			= ДанныеСтроки.Сотрудник;
			Строка.ВидЕжегодногоОтпуска	= ВыборкаПоВидамОтпусков.Ссылка;
			Строка.ДатаНачала			= РабДата + ДлинаСуток;
			Строка.ДатаОкончания		= Строка.ДатаНачала;
			
		КонецЦикла;
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	Выборка = ПроцедурыУправленияПерсоналом.ПодготовитьДанныеПоРегламентированнымОтпускам(ТаблицаПериодов);
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Количество < 0 Тогда
			ОстатокОтпуска = Цел(Выборка.Количество);
		Иначе
			ОстатокОтпуска = Цел(Выборка.Количество) + ?(Цел(Выборка.Количество) = Выборка.Количество, 0, 1);
		КонецЕсли;
		
		НайденнаяСтрока = ОценочныеОбязательства.Найти(Выборка.Сотрудник, "Сотрудник");
		Если Не НайденнаяСтрока = Неопределено Тогда
			
			Если НайденнаяСтрока.КоличествоДнейФактическогоОтпуска > 0 И ОстатокОтпуска <> 0 Тогда
				ОстатокОтпуска = НайденнаяСтрока.КоличествоДнейФактическогоОтпуска + ОстатокОтпуска;
			ИначеЕсли НайденнаяСтрока.КоличествоДнейФактическогоОтпуска > 0 И ОстатокОтпуска = 0 Тогда
				ОстатокОтпуска = НайденнаяСтрока.КоличествоДнейФактическогоОтпуска;
			Иначе
								
			КонецЕсли;
			
			НайденнаяСтрока.НеиспользованныеДниОтпуска = ОстатокОтпуска;
			
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры // ЗаполнитьДанныеПоКоличествуОставщихсяДнейОтпуска()

Процедура ЗаполнитьЗначенияПеременныхВеденияУчета() Экспорт
	
	СтруктураЗначенияПеременных = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСтруктураПараметровПеременныхВеденияУчета(Организация, ПериодРегистрации);
	
	мЗаполнятьДанныеНУ = СтруктураЗначенияПеременных.ЗаполнятьДанныеНУ; 	
	мЗаполнятьСчетаНУ  = СтруктураЗначенияПеременных.ЗаполнятьСчетаНУ;
	мУчетПоПодразделениямНаСчетах = СтруктураЗначенияПеременных.УчетПоПодразделениямНаСчетах;
	
	мОценочныеОбязательстваФормироватьБУ = СтруктураЗначенияПеременных.ОценочныеОбязательстваФормироватьБУ;
	мОценочныеОбязательстваФормироватьНУ = СтруктураЗначенияПеременных.ОценочныеОбязательстваФормироватьНУ;

	// Определяем общий процент для страховых взносов
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("парПериодРегистрации", КонецМесяца(ПериодРегистрации));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТарифСтраховыхВзносов.ПФР, 0) + ЕСТЬNULL(ТарифСтраховыхВзносов.ФСС, 0) + ЕСТЬNULL(ТарифСтраховыхВзносов.ФФОМС, 0) + ЕСТЬNULL(ТарифСтраховыхВзносов.ТФОМС, 0) КАК ОбщийНалог
	|ИЗ
	|	РегистрСведений.ТарифСтраховыхВзносов.СрезПоследних(&парПериодРегистрации, ВидТарифа = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)) КАК ТарифСтраховыхВзносов";
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		мПроцентСтраховыхВзносовПоОрганизации = Результат.ОбщийНалог; 
	КонецЕсли;
	
КонецПроцедуры

// Автозаполнение субконто по данным строки 
Процедура АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет)
	
	// Если не пустой счет - заполним "автозаполняемые" субконто
	Если ДанныеУчета.СчетДт <> ПустойСчет и ДанныеУчета.СчетДт <> NULL Тогда
		
		Если ДанныеУчета.НомерСубконтоРаботникиДт <> 0 
			И НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоДт" + ДанныеУчета.НомерСубконтоРаботникиДт]) Тогда
			СтрокаДанных["СубконтоДт" + ДанныеУчета.НомерСубконтоРаботникиДт] = ДанныеУчета.Физлицо;
		КонецЕсли;
		
		Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ДанныеУчета.НомерСубконтоРаботникиДтНУ <> 0 И мОценочныеОбязательстваФормироватьНУ
			И НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоРаботникиДтНУ]) Тогда
			СтрокаДанных["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоРаботникиДтНУ] = ДанныеУчета.Физлицо;
		КонецЕсли;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			Если Не ЗначениеЗаполнено(СтрокаДанных.ПодразделениеДт) Тогда
				Если ДанныеУчета.НомерСубконтоПодразделенияДт <> 0
					и ЗначениеЗаполнено(ДанныеУчета["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт]) Тогда
					СтрокаДанных.ПодразделениеДт = СтрокаДанных["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт];
				Иначе
					СтрокаДанных.ПодразделениеДт = ДанныеУчета.ПодразделениеОрганизации;
				КонецЕсли;
			КонецЕсли;	
		Иначе
			Если ДанныеУчета.НомерСубконтоПодразделенияДт <> 0
				и Не ЗначениеЗаполнено(ДанныеУчета["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт]) Тогда
				СтрокаДанных["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт] = ДанныеУчета.ПодразделениеОрганизации;	
			КонецЕсли;
		КонецЕсли;	
		
		Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ДанныеУчета.НомерСубконтоПодразделенияДтНУ <> 0  И мОценочныеОбязательстваФормироватьНУ
			и НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоПодразделенияДтНУ]) Тогда
			СтрокаДанных["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоПодразделенияДтНУ] = ДанныеУчета.ПодразделениеОрганизации;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеУчета.СчетКт <> ПустойСчет и ДанныеУчета.СчетДт <> NULL Тогда
		
		Если ДанныеУчета.НомерСубконтоРаботникиКт <> 0 
			и НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоКт" + ДанныеУчета.НомерСубконтоРаботникиКт]) Тогда
			СтрокаДанных["СубконтоКт" + ДанныеУчета.НомерСубконтоРаботникиКт] = ДанныеУчета.Физлицо;
		КонецЕсли;
		
		Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ДанныеУчета.НомерСубконтоРаботникиКтНУ <> 0 
			и НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоКтНУ" + ДанныеУчета.НомерСубконтоРаботникиКтНУ]) Тогда
			СтрокаДанных["СубконтоКтНУ" + ДанныеУчета.НомерСубконтоРаботникиКтНУ] = ДанныеУчета.Физлицо;
		КонецЕсли;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			Если Не ЗначениеЗаполнено(СтрокаДанных.ПодразделениеКт) Тогда
				СтрокаДанных.ПодразделениеКт = СтрокаДанных.ПодразделениеДт;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры  // АвтозаполнениеСубконто

Процедура ОбработкаПроведения(Отказ, Режим)
	
	//УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(ПериодРегистрации, ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	ЗаполнитьЗначенияПеременныхВеденияУчета();

	// Движение по регистру резервов
	РезервыСотрудников = СформироватьЗапросПоРезервам().Выбрать();
	РезервыРегУчета	   = СформироватьЗапросПоПроводкам().Выгрузить();
	
	Движения.Авт_ОценочныеОбязательстваПоОтпускам.Записывать = Истина;
	Движения.Авт_ОценочныеОбязательстваПоОтпускам.Очистить();
	
	Движения.Авт_ОценочныеОбязательстваХозрасчетный.Записывать = Истина;
	Движения.Авт_ОценочныеОбязательстваХозрасчетный.Очистить();

	Движения.Авт_ОценочныеОбязательстваНалоговый.Записывать = Истина;
	Движения.Авт_ОценочныеОбязательстваНалоговый.Очистить();

	// Движение регистр Авт_ОценочныеОбязательстваПоОтпускам 
	Пока РезервыСотрудников.Следующий() Цикл
		
		Если НЕ РезервыСотрудников.ВидДвижения = "Затратные счета" Тогда
			
			Движение 			 = Движения.Авт_ОценочныеОбязательстваПоОтпускам.Добавить();
			
			// Свойства
			Движение.ВидДвижения = РезервыСотрудников.ВидДвижения;
			Движение.Период 	 = НачалоМесяца(ПериодРегистрации);
			
			// Измерения
			Движение.Организация = Организация;
			Движение.Сотрудник 	 = РезервыСотрудников.Сотрудник;
			Движение.ФизЛицо 	 = РезервыСотрудников.ФизЛицо;
			
			// Ресурсы
			Движение.Сумма 		 = РезервыСотрудников.Сумма;
			Движение.НеиспользованныеДниОтпуска = РезервыСотрудников.НеиспользованныеДниОтпуска;
			
			// Реквизиты
			Движение.ПодразделениеОрганизации   = РезервыСотрудников.ПодразделениеОрганизации;
			Движение.Должность 				    = РезервыСотрудников.Должность;
			
		Иначе
			
			Движение 			 = Движения.Авт_СуммыОтпускаНаЗатратныхСчетах.Добавить();
			
			// Свойства
			Движение.Период 	 = НачалоМесяца(ПериодРегистрации);
			
			// Измерения
			Движение.Организация 	   = Организация;
			Движение.Сотрудник 	 	   = РезервыСотрудников.Сотрудник;
			Движение.ФизЛицо 	 	   = РезервыСотрудников.ФизЛицо;
			Движение.ПериодРегистрации = РезервыСотрудников.ПериодРегистрации;
			
			// Ресурсы
			Движение.Сумма 		 = РезервыСотрудников.Сумма;
			
			// Реквизиты
			Движение.ПодразделениеОрганизации   = РезервыСотрудников.ПодразделениеОрганизации;
			Движение.Должность 				    = РезервыСотрудников.Должность;

		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Авт_СуммыОтпускаНаЗатратныхСчетах.Записать();
	
	//// Движение регистр Хозоперации
	//ТЗДвижениеПоХозСчетам = РезервыРегУчета.Скопировать();
	//ТЗДвижениеПоНалСчетам = РезервыРегУчета.Скопировать();
	//ТЗДвижениеПоХозСчетам.Свернуть("СчетДТ, СубконтоДт1, СубконтоДт2, СубконтоДт3, СчетКт, СубконтоКт1", "Сумма");
	//ТЗДвижениеПоНалСчетам.Свернуть("СчетДТНу, СубконтоДтНу1, СубконтоДтНу2, СубконтоДтНу3, СчетКт, СубконтоКт1", "Сумма");
	
	Для Каждого ТекСтрока Из РезервыРегУчета Цикл
		
		ДвижениеБух             = Движения.Авт_ОценочныеОбязательстваХозрасчетный.Добавить();
		ДвижениеБух.Организация = Организация;
		ДвижениеБух.Период      = ПериодРегистрации;
		ДвижениеБух.СчетДт      = ТекСтрока.СчетДт;
		ДвижениеБух.СчетКт      = ТекСтрока.СчетКт;
		ДвижениеБух.Сумма       = ТекСтрока.Сумма;
		
		// Заполняем субконто Дт
		Сч = 1;
		Для Каждого ТекСубконто из ТекСтрока.СчетДт.ВидыСубконто Цикл			
			ДвижениеБух.СубконтоДт[ТекСубконто.ВидСубконто] = ТекСтрока["СубконтоДт" + Сч];
			Сч = Сч + 1;
		КонецЦикла;
		
		// Заполняем субконто Кт
		Сч = 1;
		Для Каждого ТекСубконтоКт из ТекСтрока.СчетКт.ВидыСубконто Цикл			
			ДвижениеБух.СубконтоКт[ТекСубконтоКт.ВидСубконто] = ТекСтрока["СубконтоКт" + Сч];
			Сч = Сч + 1;
		КонецЦикла;
		
		Если мОценочныеОбязательстваФормироватьНУ Тогда
			
			ДвижениеНу             = Движения.Авт_ОценочныеОбязательстваНалоговый.Добавить();
			
			ДвижениеНу.Организация = Организация;
			ДвижениеНу.Период      = ПериодРегистрации;
			ДвижениеНу.СчетДт      = ТекСтрока.СчетДтНу;
			ДвижениеНу.СчетКт      = ТекСтрока.СчетКтНу;
			ДвижениеНу.Сумма       = ТекСтрока.Сумма;
			
			Сч = 1;
			Для Каждого ТекСубконто из ТекСтрока.СчетДтНУ.ВидыСубконто Цикл			
				ДвижениеНу.СубконтоДт[ТекСубконто.ВидСубконто] = ТекСтрока["СубконтоДтНУ" + Сч];
				Сч = Сч + 1;
			КонецЦикла;
			
			Сч = 1;
			Для Каждого ТекСубконтоКт из ТекСтрока.СчетКтНу.ВидыСубконто Цикл	
				ДвижениеНу.СубконтоКт[ТекСубконтоКт.ВидСубконто] = ТекСтрока["СубконтоКтНУ" + Сч];
				Сч = Сч + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры
 
мСведенияОВидахРасчета = Новый Соответствие;
