Перем СтавкаНалогаНаПрибыль;

Функция ПолучитьСтавкуНалогаНаПрибыль() Экспорт
	Срез = РегистрыСведений.СтавкиНалогаНаПрибыль.ПолучитьПоследнее(ПериодНач);
	СтавкаНалогаНаПрибыль = Срез.СтавкаФБ + Срез.СтавкаСубъектРФ + Срез.СтавкаМестный;
	Если СтавкаНалогаНаПрибыль = 0 Тогда
		Сообщить("Не определена ставка налога на прибыль на дату [" + Формат(ПериодНач, "ДФ=dd.MM.yyyy") + "].
		|Проверьте регистр сведений ""Ставки налога на прибыль!"".", СтатусСообщения.Важное);
	КонецЕсли; 
	
	Возврат СтавкаНалогаНаПрибыль;
КонецФункции //ПолучитьСтавкуНалогаНаПрибыль()

Функция РасчетСуммыСУсловием(Счет, Субконто1, Субконто2, Субконто3, Организация, Сумма, Условие, Показатель)
	Попытка
		Выполнить Условие;
	Исключение
		Сообщить("Ошибка при вычислении условия [" + Условие + "] в показателе [" + Показатель + "]: " + ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
	Возврат Сумма;
КонецФункции //РасчетСуммыСУсловием()

Процедура ДобавитьПоказатель(СтрокаТЧ, Показатель, Множитель = 1)
	Если Показатель.Составной Тогда
		Для каждого СтрокаПоказателя Из Показатель.ВложенныеПоказатели Цикл
			ДобавитьПоказатель(СтрокаТЧ, СтрокаПоказателя.Показатель, Множитель * СтрокаПоказателя.Множитель)
		КонецЦикла;
		
	Иначе
		Для каждого СтрокаСчета Из Показатель.Остатки Цикл
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиИОбороты.СуммаНачальныйОстатокДт КАК НачальныйОстаток,
			|	ОстаткиИОбороты.СуммаКонечныйОстатокДт КАК КонечныйОстаток,
			|	ОстаткиИОбороты.Счет,
			|	ОстаткиИОбороты.Субконто1,
			|	ОстаткиИОбороты.Субконто2,
			|	ОстаткиИОбороты.Субконто3,
			|	ОстаткиИОбороты.Организация
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ПериодНач, &ПериодКон, , , Счет В ИЕРАРХИИ (&Счет), , ) КАК ОстаткиИОбороты
			|ГДЕ
			|	&Условие";
			
			Запрос.УстановитьПараметр("ПериодНач", 	ПериодНач);
			Запрос.УстановитьПараметр("ПериодКон", 	ПериодКон);
			Запрос.УстановитьПараметр("Счет", 		СтрокаСчета.СчетУчета);
			
			// СуммаНачальныйРазвернутыйОстатокДт
			Если СтрокаСчета.РазвернутоеСальдо Тогда
				Если СтрокаСчета.ВидОстатков = Перечисления.ВидыДвиженийБухгалтерии.Дебет Тогда
					Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстатокДт", "РазвернутыйОстатокДт");
					
				ИначеЕсли СтрокаСчета.ВидОстатков = Перечисления.ВидыДвиженийБухгалтерии.Кредит Тогда
					Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстатокДт", "РазвернутыйОстатокКт");
				КонецЕсли;
				
			Иначе
				Если СтрокаСчета.ВидОстатков = Перечисления.ВидыДвиженийБухгалтерии.Кредит Тогда
					Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстатокДт", "ОстатокКт");
				КонецЕсли;
			КонецЕсли; 
			
			Если ТипЗнч(СтрокаСчета.СчетУчета) = Тип("ПланСчетовСсылка.Налоговый") Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "Хозрасчетный", "Налоговый");
				
			ИначеЕсли ТипЗнч(СтрокаСчета.СчетУчета) = Тип("ПланСчетовСсылка.Международный") Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "Хозрасчетный", "Международный");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаСчета.Реквизит) Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие", "ОстаткиИОбороты." + СтрокаСчета.Реквизит + " = &Значение");
				Запрос.УстановитьПараметр("Значение", СтрокаСчета.Значение);
			Иначе
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие", "ИСТИНА");
			КонецЕсли; 
			
			Результат = Запрос.Выполнить();
			
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				ОстаткиНаНачало = Выборка.НачальныйОстаток 	* СтрокаСчета.Множитель * Множитель;
				ОстаткиНаКонец 	= Выборка.КонечныйОстаток 	* СтрокаСчета.Множитель * Множитель;
				Оборот 			= ОстаткиНаКонец - ОстаткиНаНачало;
				Восстановлено 	= -Оборот;
				Если Показатель.УмножатьНаСтавкуНалогаНаПрибыль Тогда
					Восстановлено = Восстановлено * СтавкаНалогаНаПрибыль / 100;
				КонецЕсли; 
				
				СтрокаТЧ.ОстаткиНаНачало 	= СтрокаТЧ.ОстаткиНаНачало 	+ ОстаткиНаНачало;
				СтрокаТЧ.ОстаткиНаКонец 	= СтрокаТЧ.ОстаткиНаКонец 	+ ОстаткиНаКонец;
				СтрокаТЧ.Оборот 			= СтрокаТЧ.Оборот + Оборот;
				СтрокаТЧ.Восстановлено 		= СтрокаТЧ.Восстановлено + Восстановлено;
			КонецЦикла;
			 
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры //ДобавитьПоказатель()

Процедура Рассчитать(ИмяТЧ) Экспорт
	СтавкаНалогаНаПрибыль = ПолучитьСтавкуНалогаНаПрибыль();
	
	ЭтотОбъект["ПризнанныйОНА_" + ИмяТЧ] = 0;
	ЭтотОбъект["ПризнанноеОНО_" + ИмяТЧ] = 0;
	ЭтотОбъект["ЧистыеОНА_ОНО_" + ИмяТЧ] = 0;
	
	Для каждого СтрокаТЧ Из ЭтотОбъект[ИмяТЧ] Цикл
		СтрокаТЧ.ОстаткиНаНачало 	= 0;
		СтрокаТЧ.ОстаткиНаКонец 	= 0;
		СтрокаТЧ.Оборот 			= 0;
		СтрокаТЧ.Восстановлено 		= 0;
		
		ДобавитьПоказатель(СтрокаТЧ, СтрокаТЧ.Показатель);
		
		Если СтрокаТЧ.Восстановлено > 0 Тогда
			ЭтотОбъект["ПризнанныйОНА_" + ИмяТЧ] = ЭтотОбъект["ПризнанныйОНА_" + ИмяТЧ] + СтрокаТЧ.Восстановлено;
			
		Иначе
			ЭтотОбъект["ПризнанноеОНО_" + ИмяТЧ] = ЭтотОбъект["ПризнанноеОНО_" + ИмяТЧ] + СтрокаТЧ.Восстановлено;
		КонецЕсли; 
	КонецЦикла; 
	
	ЭтотОбъект["ЧистыеОНА_ОНО_" + ИмяТЧ] = ЭтотОбъект["ПризнанныйОНА_" + ИмяТЧ] + ЭтотОбъект["ПризнанноеОНО_" + ИмяТЧ];
КонецПроцедуры //Рассчитать()

Процедура Рассчитать_РСБУ() Экспорт
	Рассчитать("РСБУ");
КонецПроцедуры //Рассчитать_РСБУ()

Процедура Рассчитать_МСФО() Экспорт
	Рассчитать("МСФО");
КонецПроцедуры //Рассчитать_МСФО()

Процедура Рассчитать_Итого() Экспорт
	Рассчитать("Итого");
КонецПроцедуры //Рассчитать_МСФО()

Процедура ПересчитатьИтоги(ИмяТЧ) Экспорт
	Для каждого СтрокаТЧ Из ЭтотОбъект[ИмяТЧ] Цикл
		Если СтрокаТЧ.Восстановлено > 0 Тогда
			ЭтотОбъект["ПризнанныйОНА_" + ИмяТЧ] = ЭтотОбъект["ПризнанныйОНА_" + ИмяТЧ] + СтрокаТЧ.Восстановлено;
			
		Иначе
			ЭтотОбъект["ПризнанноеОНО_" + ИмяТЧ] = ЭтотОбъект["ПризнанноеОНО_" + ИмяТЧ] + СтрокаТЧ.Восстановлено;
		КонецЕсли; 
	КонецЦикла; 
	
	ЭтотОбъект["ЧистыеОНА_ОНО_" + ИмяТЧ] = ЭтотОбъект["ПризнанныйОНА_" + ИмяТЧ] + ЭтотОбъект["ПризнанноеОНО_" + ИмяТЧ];
КонецПроцедуры //ПересчитатьИтоги()

Процедура РасшифровкаВывестиПоказатель(Показатель, Множитель, ТабДок, ОбластьСтрока)
	Если Показатель.Составной Тогда
		ФиктинваяСтрокаТЧ = Новый Структура("ОстаткиНаНачало, ОстаткиНаКонец, Оборот, Восстановлено", 0, 0, 0, 0);
		ДобавитьПоказатель(ФиктинваяСтрокаТЧ, Показатель, Множитель = 1);
		//ФиктинваяСтрокаТЧ.Оборот = ФиктинваяСтрокаТЧ.ОстаткиНаКонец - ФиктинваяСтрокаТЧ.ОстаткиНаНачало;
		
		ОбластьСтрока.Параметры.Заполнить(ФиктинваяСтрокаТЧ);
		ОбластьСтрока.Параметры.Показатель 		= Показатель;
		ОбластьСтрока.Параметры.ПоказательТекст = Показатель;
		ТабДок.Вывести(ОбластьСтрока);
		ТабДок.НачатьГруппуСтрок("Показатель");
		
		Для каждого СтрокаПоказателя Из Показатель.ВложенныеПоказатели Цикл
			РасшифровкаВывестиПоказатель(СтрокаПоказателя.Показатель, Множитель * СтрокаПоказателя.Множитель, ТабДок, ОбластьСтрока)
		КонецЦикла;
		
		ТабДок.ЗакончитьГруппуСтрок();
		
	Иначе
		ФиктинваяСтрокаТЧ = Новый Структура("ОстаткиНаНачало, ОстаткиНаКонец, Оборот, Восстановлено", 0, 0, 0, 0);
		ДобавитьПоказатель(ФиктинваяСтрокаТЧ, Показатель, Множитель = 1);
		//ФиктинваяСтрокаТЧ.Оборот = ФиктинваяСтрокаТЧ.ОстаткиНаКонец - ФиктинваяСтрокаТЧ.ОстаткиНаНачало;
		
		ОбластьСтрока.Параметры.Заполнить(ФиктинваяСтрокаТЧ);
		ОбластьСтрока.Параметры.Показатель 		= Показатель;
		ОбластьСтрока.Параметры.ПоказательТекст = Показатель;
		ТабДок.Вывести(ОбластьСтрока);
		ТабДок.НачатьГруппуСтрок("Показатель");
		
		Для каждого СтрокаСчета Из Показатель.Остатки Цикл
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиИОбороты.СуммаНачальныйОстатокДт КАК НачальныйОстаток,
			|	ОстаткиИОбороты.СуммаКонечныйОстатокДт КАК КонечныйОстаток,
			|	ОстаткиИОбороты.Счет КАК Счет,
			|	ОстаткиИОбороты.Субконто1 КАК Субконто1,
			|	ОстаткиИОбороты.Субконто2 КАК Субконто2,
			|	ОстаткиИОбороты.Субконто3 КАК Субконто3,
			|	ОстаткиИОбороты.Организация КАК Организация
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ПериодНач, &ПериодКон, , , Счет В ИЕРАРХИИ (&Счет), , ) КАК ОстаткиИОбороты
			|ГДЕ
			|	&Условие
			|ИТОГИ
			|	СУММА(НачальныйОстаток),
			|	СУММА(КонечныйОстаток)
			|ПО
			|	Организация,
			|	Счет,
			|	Субконто1,
			|	Субконто2,
			|	Субконто3";
			
			Запрос.УстановитьПараметр("ПериодНач", 	ПериодНач);
			Запрос.УстановитьПараметр("ПериодКон", 	ПериодКон);
			Запрос.УстановитьПараметр("Счет", 		СтрокаСчета.СчетУчета);
			
			// СуммаНачальныйРазвернутыйОстатокДт
			Если СтрокаСчета.РазвернутоеСальдо Тогда
				Если СтрокаСчета.ВидОстатков = Перечисления.ВидыДвиженийБухгалтерии.Дебет Тогда
					Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстатокДт", "РазвернутыйОстатокДт");
					
				ИначеЕсли СтрокаСчета.ВидОстатков = Перечисления.ВидыДвиженийБухгалтерии.Кредит Тогда
					Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстатокДт", "РазвернутыйОстатокКт");
				КонецЕсли;
				
			Иначе
				Если СтрокаСчета.ВидОстатков = Перечисления.ВидыДвиженийБухгалтерии.Кредит Тогда
					Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстатокДт", "ОстатокКт");
				КонецЕсли;
			КонецЕсли; 
			
			Если ТипЗнч(СтрокаСчета.СчетУчета) = Тип("ПланСчетовСсылка.Налоговый") Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "Хозрасчетный", "Налоговый");
				
			ИначеЕсли ТипЗнч(СтрокаСчета.СчетУчета) = Тип("ПланСчетовСсылка.Международный") Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "Хозрасчетный", "Международный");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаСчета.Реквизит) Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие", "ОстаткиИОбороты." + СтрокаСчета.Реквизит + " = &Значение");
				Запрос.УстановитьПараметр("Значение", СтрокаСчета.Значение);
			Иначе
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Условие", "ИСТИНА");
			КонецЕсли; 
			
			Результат = Запрос.Выполнить();
			
			ВыборкаОрганизация = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаОрганизация.Следующий() Цикл
				ОстаткиНаНачало = ВыборкаОрганизация.НачальныйОстаток * СтрокаСчета.Множитель * Множитель;
				ОстаткиНаКонец 	= ВыборкаОрганизация.КонечныйОстаток 	* СтрокаСчета.Множитель * Множитель;
				Оборот 			= ОстаткиНаКонец - ОстаткиНаНачало;
				
				ОбластьСтрока.Параметры.Показатель 		= ВыборкаОрганизация.Организация;
				ОбластьСтрока.Параметры.ПоказательТекст = ВыборкаОрганизация.Организация;
				ОбластьСтрока.Параметры.ОстаткиНаНачало = ОстаткиНаНачало;
				ОбластьСтрока.Параметры.ОстаткиНаКонец 	= ОстаткиНаКонец;
				ОбластьСтрока.Параметры.Оборот 			= Оборот;
				ТабДок.Вывести(ОбластьСтрока);
				ТабДок.НачатьГруппуСтрок("Организация");
				
				ВыборкаСчет = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаСчет.Следующий() Цикл
					ОстаткиНаНачало = ВыборкаСчет.НачальныйОстаток * СтрокаСчета.Множитель * Множитель;
					ОстаткиНаКонец 	= ВыборкаСчет.КонечныйОстаток 	* СтрокаСчета.Множитель * Множитель;
					Оборот 			= ОстаткиНаКонец - ОстаткиНаНачало;
					
					Суффикс = "";
					Если ТипЗнч(ВыборкаСчет.Счет) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
						Суффикс = " (БУ)";
						
					ИначеЕсли ТипЗнч(ВыборкаСчет.Счет) = Тип("ПланСчетовСсылка.Налоговый") Тогда
						Суффикс = " (НУ)";
						
					ИначеЕсли ТипЗнч(ВыборкаСчет.Счет) = Тип("ПланСчетовСсылка.Международный") Тогда
						Суффикс = " (МСФО)";
					КонецЕсли; 
					
					
					ОбластьСтрока.Параметры.Показатель 		= ВыборкаСчет.Счет;
					ОбластьСтрока.Параметры.ПоказательТекст = "" + ВыборкаСчет.Счет + Суффикс;
					ОбластьСтрока.Параметры.ОстаткиНаНачало = ОстаткиНаНачало;
					ОбластьСтрока.Параметры.ОстаткиНаКонец 	= ОстаткиНаКонец;
					ОбластьСтрока.Параметры.Оборот 			= Оборот;
					ТабДок.Вывести(ОбластьСтрока);
					ТабДок.НачатьГруппуСтрок("Счет");
					
					ВыборкаСубконто1 = ВыборкаСчет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаСубконто1.Следующий() Цикл
						ОстаткиНаНачало = ВыборкаСубконто1.НачальныйОстаток * СтрокаСчета.Множитель * Множитель;
						ОстаткиНаКонец 	= ВыборкаСубконто1.КонечныйОстаток 	* СтрокаСчета.Множитель * Множитель;
						Оборот 			= ОстаткиНаКонец - ОстаткиНаНачало;
						
						ОбластьСтрока.Параметры.Показатель 		= ВыборкаСубконто1.Субконто1;
						ОбластьСтрока.Параметры.ПоказательТекст = ВыборкаСубконто1.Субконто1;
						ОбластьСтрока.Параметры.ОстаткиНаНачало = ОстаткиНаНачало;
						ОбластьСтрока.Параметры.ОстаткиНаКонец 	= ОстаткиНаКонец;
						ОбластьСтрока.Параметры.Оборот 			= Оборот;
						ТабДок.Вывести(ОбластьСтрока);
						ТабДок.НачатьГруппуСтрок("Субконто1");
						
						ВыборкаСубконто2 = ВыборкаСубконто1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаСубконто2.Следующий() Цикл
							ОстаткиНаНачало = ВыборкаСубконто2.НачальныйОстаток * СтрокаСчета.Множитель * Множитель;
							ОстаткиНаКонец 	= ВыборкаСубконто2.КонечныйОстаток 	* СтрокаСчета.Множитель * Множитель;
							Оборот 			= ОстаткиНаКонец - ОстаткиНаНачало;
							
							ОбластьСтрока.Параметры.Показатель 		= ВыборкаСубконто2.Субконто2;
							ОбластьСтрока.Параметры.ПоказательТекст	= ВыборкаСубконто2.Субконто2;
							ОбластьСтрока.Параметры.ОстаткиНаНачало = ОстаткиНаНачало;
							ОбластьСтрока.Параметры.ОстаткиНаКонец 	= ОстаткиНаКонец;
							ОбластьСтрока.Параметры.Оборот 			= Оборот;
							ТабДок.Вывести(ОбластьСтрока);
							ТабДок.НачатьГруппуСтрок("Субконто2");
							
							ВыборкаСубконто3 = ВыборкаСубконто2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаСубконто3.Следующий() Цикл
								ОстаткиНаНачало = ВыборкаСубконто3.НачальныйОстаток * СтрокаСчета.Множитель * Множитель;
								ОстаткиНаКонец 	= ВыборкаСубконто3.КонечныйОстаток 	* СтрокаСчета.Множитель * Множитель;
								Оборот 			= ОстаткиНаКонец - ОстаткиНаНачало;
								
								ОбластьСтрока.Параметры.Показатель 		= ВыборкаСубконто3.Субконто3;
								ОбластьСтрока.Параметры.ПоказательТекст	= ВыборкаСубконто3.Субконто3;
								ОбластьСтрока.Параметры.ОстаткиНаНачало = ОстаткиНаНачало;
								ОбластьСтрока.Параметры.ОстаткиНаКонец 	= ОстаткиНаКонец;
								ОбластьСтрока.Параметры.Оборот 			= Оборот;
								ТабДок.Вывести(ОбластьСтрока);
							КонецЦикла;
							ТабДок.ЗакончитьГруппуСтрок();
						КонецЦикла;
						ТабДок.ЗакончитьГруппуСтрок();
					КонецЦикла;
					ТабДок.ЗакончитьГруппуСтрок();
				КонецЦикла;
				ТабДок.ЗакончитьГруппуСтрок();
			КонецЦикла;
		КонецЦикла; 
		
		ТабДок.ЗакончитьГруппуСтрок();
	КонецЕсли; 
КонецПроцедуры //РасшифровкаВывестиПоказатель()
 
Процедура Расшифровка(Показатель) Экспорт
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.ДС_РасчетОтложенногоНалога.ПолучитьМакет("Печать");
	
	// Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(Область);
	
	// Показатель
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Область);
	
	// Показатель
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	РасшифровкаВывестиПоказатель(Показатель, 1, ТабДок, ОбластьСтрока);

	ТабДок.ОтображатьСетку 		= Ложь;
	ТабДок.Защита 				= Ложь;
	ТабДок.ТолькоПросмотр 		= Истина;
	ТабДок.ОтображатьЗаголовки 	= Ложь;
	ТабДок.Показать();
КонецПроцедуры //Расшифровка() 
