////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мДлинаСуток;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачала, ВидРасчета, ПроцентОплаты)

	СтрокаИнтервала					= ТаблицаИнтерваловОплаты.Добавить();
	СтрокаИнтервала.Начало			= ДатаНачала;
	СтрокаИнтервала.Расчет			= ВидРасчета;
	СтрокаИнтервала.ПроцентОплаты	= ПроцентОплаты;
	
КонецПроцедуры // ДобавитьСтрокуВТаблицуИнтервалов()

Процедура ЗаполнитьДанныеОрганизации()

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбменСведениямиОПособияхСФСС.ДанныеОрганизацииДляЗаявленияНаВыплатуПособия(Организация, Дата));

КонецПроцедуры

Процедура ЗаполнитьДанныеСотрудника()

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбменСведениямиОПособияхСФСС.ДанныеСотрудникаДляЗаявленияНаВыплатуПособия(Организация, Сотрудник, ?(ЗначениеЗаполнено(ДатаНачалаСобытия), ДатаНачалаСобытия, Дата)));

КонецПроцедуры

// Выполняет проверку непрерывности интервалов начислений
Процедура ПроверитьНепрерывностьЗаписейНачислений(Отказ, Заголовок)
	
	Если Начисления.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// создадим массив начислений, по которым будем проверять непрерывность записей
	МассивНачислений = Новый Массив;
	МассивНачислений.Добавить(?(ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам, ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезниПоБеременности, ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезни));	
	МассивНачислений.Добавить(ВидРасчета);
	МассивНачислений.Добавить(ВидРасчетаЗаСчетРаботодателя);
	
	ТНачислений = Начисления.Выгрузить();
	ТНачислений.Сортировать("Сотрудник, ДатаНачала");
	
	ПредыдущийСотрудник = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
	ПредыдущаяДатаОкончания = '00010101';
	СтрокаНеПервая = Ложь;
	Для Каждого Строка ИЗ ТНачислений Цикл
		
		// Пропустим сторно записи и записи не из массива начислений
		Если Строка.Сторно ИЛИ МассивНачислений.Найти(Строка.ВидРасчета) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПредыдущийСотрудник <> Строка.Сотрудник Тогда
			ПредыдущийСотрудник = Строка.Сотрудник;
			СтрокаНеПервая = Ложь;
		КонецЕсли;
		
		// если встретили не первую строку начислений
		Если СтрокаНеПервая Тогда
			// строка не первая
			Если Строка.ДатаНачала <> ПредыдущаяДатаОкончания + мДлинаСуток Тогда
				СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(Строка.НомерСтроки) +
				""" табл. части ""Начисления"": ";
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "нарушено требование непрерывности записей начислений!", Отказ, Заголовок);
			КонецЕсли;
		Иначе
			СтрокаНеПервая = Истина;
		КонецЕсли;
		ПредыдущаяДатаОкончания = Строка.ДатаОкончания;
		
	КонецЦикла;
	
	Если ДоплачиватьДоПолногоСреднегоЗаработка Тогда
		ТНачислений = Начисления.Выгрузить(Новый Структура("ВидРасчета, Сторно",ВидРасчетаДоплаты, Ложь));
		ТНачислений.Сортировать("Сотрудник, ДатаНачала");
		ПредыдущийСотрудник = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
		ПредыдущаяДатаОкончания = '00010101';
		СтрокаНеПервая = Ложь;
		Для Каждого Строка ИЗ ТНачислений Цикл
			
			Если ПредыдущийСотрудник <> Строка.Сотрудник Тогда
				ПредыдущийСотрудник = Строка.Сотрудник;
				СтрокаНеПервая = Ложь;
			КонецЕсли;
			
			// если встретили не первую строку начислений
			Если СтрокаНеПервая Тогда
				// строка не первая
				Если Строка.ДатаНачала <> ПредыдущаяДатаОкончания + мДлинаСуток Тогда
					СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(Строка.НомерСтроки) +
					""" табл. части ""Начисления"": ";
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "нарушено требование непрерывности записей начислений!", Отказ, Заголовок);
				КонецЕсли;
			Иначе
				СтрокаНеПервая = Истина;
			КонецЕсли;
			ПредыдущаяДатаОкончания = Строка.ДатаОкончания;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьНепрерывностьЗаписейНачислений()

Процедура СкопироватьГодыРасчетаСреднего(Основание)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011.НомерСтроки,
	|	НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011.Год
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.ГодыРасчетаСреднего2011 КАК НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011
	|ГДЕ
	|	НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Основание);
	ГодыРасчетаСреднего2011.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Функция ПолучитьВариантАлгоритмаРасчета(ВыборкаПоШапкеДокумента, ПоПравиламЗакона213ФЗ)

	ВариантАлгоритмаРасчета = НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьВариантАлгоритмаРасчета(ВыборкаПоШапкеДокумента);
	Если ВариантАлгоритмаРасчета <> Неопределено Тогда
		Возврат ВариантАлгоритмаРасчета
	КонецЕсли;
	
	Если ПоПравиламЗакона213ФЗ Тогда
		Если ЭтоПособиеПоМатеринству()
				И (НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении Или ДатаСобытия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству() И ДатаНазначенияПособия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству()) Тогда
			Если ПрименятьЛьготыПриНачисленииПособия И ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение И ОграничениеПособияБезЛьгот = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
				ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПоБеременностиВ2013годуСОбщимОграничениемИВРазмереММОТ;
			ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
				ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПоБеременностиВ2013годуСОбщимОграничением;
			ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
				ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПоБеременностиВ2013годуСОграничениемВРазмереММОТ;
			Иначе
				ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйПоБеременностиВ2013годуБезОграничений;
			КонецЕсли;
		ИначеЕсли ЭтоПособиеПоМатеринству() И РасчетПоПравилам2010Года Тогда
			Если ПрименятьЛьготыПриНачисленииПособия И ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение И ОграничениеПособияБезЛьгот = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
				ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйВ2011годуКакВ2010мСОбщимОграничениемИВРазмереММОТ;
			ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
				ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйВ2011годуКакВ2010мСОбщимОграничением;
			ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
				ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйВ2011годуКакВ2010мСОграничениемВРазмереММОТ;
			Иначе
				ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйВ2011годуКакВ2010мБезОграничений;
			КонецЕсли;
		ИначеЕсли ПрименятьЛьготыПриНачисленииПособия И ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение И ОграничениеПособияБезЛьгот = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
			ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйСОбщимОграничениемИВРазмереММОТС2010года;
		ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
			ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйСОбщимОграничениемС2010года;
		ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
			ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйСОграничениемВРазмереММОТ;
		ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеМаксимальнымРазмеромЕжемесячнойСтраховойВыплаты Тогда
			ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйНСиПЗСОграничением;
		Иначе
			ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйБезОграничений;
		КонецЕсли;
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам И ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
		ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйСОграничениемПоБеременности
	ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
		ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйСОбщимОграничением;
	ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
		ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйСОграничениемВРазмереММОТ;
	Иначе
		ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйБезОграничений;
	КонецЕсли;

	Возврат ВариантАлгоритмаРасчета
	
КонецФункции // ПолучитьВариантАлгоритмаРасчета()

// Формирует соответствие в котором находятся действующие графики сотрудника 
// на указанные даты
Функция ПолучитьГрафикРаботыСотрудника(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Физлицо",			ВыборкаПоШапкеДокумента.Физлицо);
	Запрос.УстановитьПараметр("Дата",				ВыборкаПоШапкеДокумента.ДатаНачалаСобытия);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("ВидРасчета",			ВыборкаПоШапкеДокумента.ВидРасчета);
    НачислениеПоБольничномуЛистуПереопределяемый.УстановитьДополнительныеПараметрыЗапросаГрафиковРаботы(Запрос, ВыборкаПоШапкеДокумента);
	
	НачМесяца = НачалоМесяца(ДатаНачала);
	ДатыПоМесяцамТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(НачМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период
	|ПОМЕСТИТЬ ВТДатыПоМесяцам";
	Пока НачМесяца < НачалоМесяца(ДатаОкончания) Цикл
		НачМесяца = НачалоМесяца(КонецМесяца(НачМесяца) + 1);
		ДатыПоМесяцамТекст = ДатыПоМесяцамТекст +"
		|ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(НачМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	ДатыПоМесяцамТекст = ДатыПоМесяцамТекст + "
	|ИНДЕКСИРОВАТЬ ПО Период";
	
	Запрос.Текст = ДатыПоМесяцамТекст;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокДат.Период КАК Период,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	НЕОПРЕДЕЛЕНО КАК ВидУчетаВремени,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ГрафикРаботыЗавершения
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ГрафикРаботы
	|	КОНЕЦ КАК ГрафикРаботы,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
	|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацийСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени
	|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени
	|	КОНЕЦ КАК ГрафикПолногоРабочегоВремени
	|ПОМЕСТИТЬ ВТСотрудникиДаты
	|ИЗ
	|	ВТДатыПоМесяцам КАК СписокДат
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&Дата,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						Сотрудники.Ссылка
	|					ИЗ
	|						Справочник.СотрудникиОрганизаций КАК Сотрудники
	|					ГДЕ
	|						Сотрудники.Физлицо = &Физлицо
	|						И ИСТИНА
	|						И Сотрудники.Организация = &ГоловнаяОрганизация)) КАК РаботникиОрганизацийСрезПоследних
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
	|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Сотрудник";
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"НЕОПРЕДЕЛЕНО КАК ВидУчетаВремени",НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьПолеЗапросаГрафиковРаботы());
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"И ИСТИНА",НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьУсловиеЗапросаГрафиковРаботы());
	Запрос.Выполнить();

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыДействия.Период КАК Период,
	|	ГрафикиРаботыПоВидамВремени.План,
	|	ПериодыДействия.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТДанныеИндивидуальныхГрафиковИТабелей
	|ИЗ
	|	ВТСотрудникиДаты КАК ПериодыДействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО ПериодыДействия.Сотрудник = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И ПериодыДействия.Период = ГрафикиРаботыПоВидамВремени.Месяц
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.План ЕСТЬ Не NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Сотрудник";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыДействия.Период КАК Период,
	|	ПериодыДействия.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТСводныеИндивидуальныеГрафикиРаботы
	|ИЗ
	|	ВТСотрудникиДаты КАК ПериодыДействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СводныеИндивидуальныеГрафики КАК СводныеИндивидуальныеГрафики
	|		ПО ПериодыДействия.Сотрудник = СводныеИндивидуальныеГрафики.Сотрудник
	|			И ПериодыДействия.Период = СводныеИндивидуальныеГрафики.Месяц
	|ГДЕ
	|	СводныеИндивидуальныеГрафики.Сотрудник ЕСТЬ Не NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Сотрудник";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыДействия.Сотрудник КАК Сотрудник,
	|	ПериодыДействия.Сотрудник.ВидЗанятости КАК ВидЗанятостиСотрудника,
	|	ПериодыДействия.Период КАК Месяц,
	|	ПериодыДействия.ВидУчетаВремени,
	|	ПериодыДействия.ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ИндивидуальныеГрафикиРаботы.Период ЕСТЬ NULL 
	|				И ТабелиУчетаВремениПоСотруднику.Период ЕСТЬ NULL 
	|			ТОГДА ПериодыДействия.ГрафикРаботы
	|		ИНАЧЕ ПериодыДействия.Сотрудник
	|	КОНЕЦ КАК ГрафикРаботы,
	|	ВЫБОР
	|		КОГДА ИндивидуальныеГрафикиРаботы.Период ЕСТЬ NULL 
	|				И СводныеИндивидуальныеГрафикиРаботы.Период ЕСТЬ NULL 
	|				И ТабелиУчетаВремениПоСотруднику.Период ЕСТЬ Не NULL 
	|			ТОГДА ПериодыДействия.ГрафикРаботы
	|		КОГДА ПериодыДействия.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|				И (ИндивидуальныеГрафикиРаботы.Период ЕСТЬ Не NULL 
	|					ИЛИ СводныеИндивидуальныеГрафикиРаботы.Период ЕСТЬ Не NULL )
	|			ТОГДА ПериодыДействия.ГрафикПолногоРабочегоВремени
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|	КОНЕЦ КАК ГрафикРаботыНорма
	|ИЗ
	|	ВТСотрудникиДаты КАК ПериодыДействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСводныеИндивидуальныеГрафикиРаботы КАК СводныеИндивидуальныеГрафикиРаботы
	|		ПО ПериодыДействия.Период = СводныеИндивидуальныеГрафикиРаботы.Период
	|			И ПериодыДействия.Сотрудник = СводныеИндивидуальныеГрафикиРаботы.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеИндивидуальныхГрафиковИТабелей КАК ИндивидуальныеГрафикиРаботы
	|		ПО ПериодыДействия.Период = ИндивидуальныеГрафикиРаботы.Период
	|			И ПериодыДействия.Сотрудник = ИндивидуальныеГрафикиРаботы.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеИндивидуальныхГрафиковИТабелей КАК ТабелиУчетаВремениПоСотруднику
	|		ПО ПериодыДействия.Период = ТабелиУчетаВремениПоСотруднику.Период
	|			И ((Не ТабелиУчетаВремениПоСотруднику.План))
	|			И ПериодыДействия.Сотрудник = ТабелиУчетаВремениПоСотруднику.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	Сотрудник";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьГрафикРаботыСотрудника()

Функция ПолучитьСтрокуЗаполняемыхРеквизитов()

	СтрокаРеквизитов = "Организация,Сотрудник,ФизЛицо,ДатаНарушенияРежима,"
			+ "ДоплачиватьДоПолногоСреднегоЗаработка,ВидРасчетаДоплаты,ВидРасчетаЗаСчетРаботодателя,"
			+ "ПодпадаетПодЕНВД,СтратегияОтраженияВУчете,"
			+ "ПеречислятьПособиеПочтовымПереводом,Банк,НомерЛицевогоСчета,НаличиеКартыМИР,НомерКартыМИР,АдресПочтовый,АдресРегистрации,АдресПочтовыйКодПоКЛАДР,АдресРегистрацииКодПоКЛАДР,Фамилия,Имя,Отчество,Телефон,"
			+ "ВидДокумента,СерияДокумента,НомерДокумента,ДатаВыдачиДокумента,КемВыданДокумент,ДатаДействияДокумента,РасчетПособияИзТарифнойСтавки,ТарифнаяСтавкаОклад,"
			+ "НаименованиеБанка,БИКБанка,КоррСчетБанка,ДолжностьУполномоченного,Уполномоченный,СтажЛет,СтажМесяцев,СтажБезНестраховыхПериодовЛет,СтажБезНестраховыхПериодовСтажМесяцев,КодПричиныНетрудоспособности,"
			+ "НаименованиеДокументаНаПроживание, СерияДокументаНаПроживание, НомерДокументаНаПроживание, ДатаВыдачиДокументаНаПроживание,"
			+ "ДополнительныйКодПричиныНетрудоспособности,УсловияИсчисленияКод1,УсловияИсчисленияКод2,УсловияИсчисленияКод3,"
			+ "НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении,"
			+ "ПериодРасчетаСреднегоЗаработкаНачало,ПериодРасчетаСреднегоЗаработкаОкончание,"
			+ "ПроцентОплатыБезЛьгот,ОграничениеПособияБезЛьгот,ПрименятьЛьготыПриНачисленииПособия,ВыплатаЗаСчетФедеральногоБюджета,"
			+ "ПричинаНетрудоспособности,ВидРасчета,ДатаНачалаСобытия,ПроцентОплаты,ОграничениеПособия,УчитыватьЗаработокПредыдущихСтрахователей,"
			+ "СлучайУходаЗаБольнымРебенком, НеВыплачиватьПособие, РасчетПоПравилам2010Года";
		
	Возврат НачислениеПоБольничномуЛистуПереопределяемый.ДополнитьСтрокуЗаполняемыхРеквизитов(СтрокаРеквизитов)
	
КонецФункции // ПолучитьСтрокуЗаполняемыхРеквизитов()

// Определяет льготный процент оплаты
//
// Параметры
//  ВыборкаПоШапкеДокумента - имеет свойства, одноименные с реквизитами докмента
//  ПроцентОплатыИзТаблицы - число
//
// Возвращаемое значение:
//   число - процент от среднего заработка
//
Функция ПроцентОплатыСУчетомЛьгот(ВыборкаПоШапкеДокумента, ПроцентОплатыИзТаблицы)

	Если ВыборкаПоШапкеДокумента.ПрименятьЛьготыПриНачисленииПособия Тогда
		Если ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов Тогда
			Возврат ?(ПроцентОплатыИзТаблицы = ВыборкаПоШапкеДокумента.ПроцентОплатыБезЛьгот, ВыборкаПоШапкеДокумента.ПроцентОплаты, ПроцентОплатыИзТаблицы)
		Иначе
			Возврат ВыборкаПоШапкеДокумента.ПроцентОплаты
		КонецЕсли;
	Иначе
		Возврат ПроцентОплатыИзТаблицы
	КонецЕсли;	

КонецФункции // ПроцентОплатыСУчетомЛьгот()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если ТолстыйКлиентОбычноеПриложение Тогда

Функция ПечатьОборотаБольничного2010()
		
	мДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	ДатаЗакона = ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования();
	
	Если ПериодРегистрации >= ДатаЗакона И ДатаНачалаСобытия >= ДатаЗакона И Не (РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам) Тогда
		Возврат Неопределено
	КонецЕсли;
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("Сотрудник",			 Сотрудник);
	Запрос.УстановитьПараметр("ФизЛицо",			 Сотрудник.Физлицо);
	Запрос.УстановитьПараметр("ДокументСсылка",		 Ссылка);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",	 ДатаНачалаСобытия);
	Запрос.УстановитьПараметр("ДатаПредельнойБазы",	 ?(мДатаЗакона213ФЗ > ДатаНачалаСобытия, мДатаЗакона213ФЗ, ?(РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам, мДатаЗакона213ФЗ,ДатаНачалаСобытия)));
	Запрос.УстановитьПараметр("ДатаЗакона213ФЗ",	 мДатаЗакона213ФЗ);
	Запрос.УстановитьПараметр("ДатаНачала",			 ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",		 ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаНарушенияРежима", ДатаНарушенияРежима);
	Запрос.УстановитьПараметр("ВидРасчета",			 ВидРасчета);
	Запрос.УстановитьПараметр("ВидРасчетаЗаСчетРаботодателя", ВидРасчетаЗаСчетРаботодателя);
	
	ДанныеОДокументеТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументБЛ.Ссылка,
	|	ДокументБЛ.Сотрудник.Физлицо КАК Физлицо,
	|	ДокументБЛ.Организация,
	|	ДокументБЛ.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	ДокументБЛ.ДатаНачала,
	|	ДокументБЛ.ДатаОкончания,
	|	ДокументБЛ.НомерВходящегоДокумента,
	|	ДокументБЛ.СерияВходящегоДокумента,
	|	ДокументБЛ.ПроцентОплаты,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|			ТОГДА ""по беременности и родам""
	|		ИНАЧЕ ""по временной нетрудоспособности""
	|	КОНЕЦ КАК ПричинаНетрудоспособности,
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, ДокументБЛ.Сотрудник.Наименование) КАК ФИОРаботника,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.Сотрудник.Физлицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|			ТОГДА ""Не работала""
	|		ИНАЧЕ ""Не работал""
	|	КОНЕЦ КАК СловаНеРаботал,
	|	ВЫБОР
	|		КОГДА ПараметрыВидаРасчета.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = ЗНАЧЕНИЕ(Перечисление.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору)
	|			ТОГДА ПараметрыВидаРасчета.ПериодРасчетаСреднегоЗаработка
	|		ИНАЧЕ 12
	|	КОНЕЦ КАК ПериодРасчетаСреднегоЗаработка,
	|	ДокументБЛ.Сотрудник.Код КАК ТабельныйНомер,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.Наименование
	|	КОНЕЦ КАК ПодразделениеНаименование,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьНаименование,
	|	""дней"" КАК СловаДней
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК ДокументБЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ПараметрыВидаРасчета
	|		ПО (ПараметрыВидаРасчета.Ссылка = ДокументБЛ.ВидРасчета)
	|ГДЕ
	|	ДокументБЛ.Ссылка = &ДокументСсылка";
	
	// РазмерММОТ
	//	Поля:
	//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
	//		Размер - размер ММОТ
	//	Описание:
	//		получает размер ММОТ для каждой строки начислений
	//
	РазмерММОТТекст = 
	"ВЫБРАТЬ
	|	ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
	|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
	|ПОМЕСТИТЬ ВТРазмерММОТ
	|ИЗ
	|	(ВЫБРАТЬ
	|		Основной.НомерСтроки КАК НомерСтроки,
	|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|			ПО (МинимальнаяОплатаТрудаРФ.Период <= Основной.ПериодДействияНачало)
	|	ГДЕ
	|		Основной.Регистратор = &ДокументСсылка
	|		И Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Основной.НомерСтроки) КАК ДатыАктуальностиММОТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|		ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновнойНомерСтроки";
	Запрос.Текст = РазмерММОТТекст;
	Запрос.Выполнить();
	
	Если ПериодРегистрации < мДатаЗакона213ФЗ Или ДатаНачалаОплаты < мДатаЗакона213ФЗ Тогда
		// РазмерОграниченияПособия
		//	Поля:
		//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
		//		Размер - размер ограничения
		//	Описание:
		//		получает размер ограничения пособия для каждой строки начислений
		//
		Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
			РазмерОграниченияПособияТекст = 
			"ВЫБРАТЬ
			|	ДатыАктуальности.НомерСтроки КАК ОсновнойНомерСтроки,
			|	РазмерОграниченияПособияПоНетрудоспособности.РазмерПоБеременности КАК Размер
			|ПОМЕСТИТЬ ВТРазмерОграниченияПособия
			|ИЗ
			|	(ВЫБРАТЬ
			|		Основной.НомерСтроки КАК НомерСтроки,
			|		МАКСИМУМ(РазмерОграниченияПособияПоНетрудоспособности.Период) КАК ДатаАктуальности
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерОграниченияПособияПоНетрудоспособности КАК РазмерОграниченияПособияПоНетрудоспособности
			|			ПО (РазмерОграниченияПособияПоНетрудоспособности.Период <= Основной.ПериодДействияНачало)
			|	ГДЕ
			|		Основной.Регистратор = &ДокументСсылка
			|		И Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Основной.НомерСтроки) КАК ДатыАктуальности
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерОграниченияПособияПоНетрудоспособности КАК РазмерОграниченияПособияПоНетрудоспособности
			|		ПО (РазмерОграниченияПособияПоНетрудоспособности.Период = ДатыАктуальности.ДатаАктуальности)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновнойНомерСтроки";
		Иначе
			РазмерОграниченияПособияТекст = 
			"ВЫБРАТЬ
			|	ДатыАктуальности.НомерСтроки КАК ОсновнойНомерСтроки,
			|	РазмерОграниченияПособияПоНетрудоспособности.Размер КАК Размер
			|ПОМЕСТИТЬ ВТРазмерОграниченияПособия
			|ИЗ
			|	(ВЫБРАТЬ
			|		Основной.НомерСтроки КАК НомерСтроки,
			|		МАКСИМУМ(РазмерОграниченияПособияПоНетрудоспособности.Период) КАК ДатаАктуальности
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерОграниченияПособияПоНетрудоспособности КАК РазмерОграниченияПособияПоНетрудоспособности
			|			ПО (РазмерОграниченияПособияПоНетрудоспособности.Период <= Основной.ПериодДействияНачало)
			|	ГДЕ
			|		Основной.Регистратор = &ДокументСсылка
			|		И Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Основной.НомерСтроки) КАК ДатыАктуальности
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерОграниченияПособияПоНетрудоспособности КАК РазмерОграниченияПособияПоНетрудоспособности
			|		ПО (РазмерОграниченияПособияПоНетрудоспособности.Период = ДатыАктуальности.ДатаАктуальности)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновнойНомерСтроки";
		КонецЕсли;
		Запрос.Текст = РазмерОграниченияПособияТекст;
		Запрос.Выполнить();
	КонецЕсли;
	
	Если ПериодРегистрации < мДатаЗакона213ФЗ Тогда
		ОграничениеВРазмереММОТТекст = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец, МЕСЯЦ)) * ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
		|						ТОГДА ВЫБОР
		|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|								ИНАЧЕ 1
		|							КОНЕЦ
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))";
		
		ОграничениеТекст = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец, МЕСЯЦ)) * ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
		|						ТОГДА ВЫБОР
		|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|								ИНАЧЕ 1
		|							КОНЕЦ
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))";
		
		РасчетПособияТекст = 
		"ВЫБРАТЬ
		|	ФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
		|	СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ФактическийПериодДействия.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ)) КАК ОплачиватьДнейПособия
		|ПОМЕСТИТЬ ВТКалендарныеДниПособия
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|			ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС))
		|				И Регистратор = &ДокументСсылка) КАК ФактическийПериодДействия
		|
		|СГРУППИРОВАТЬ ПО
		|	ФактическийПериодДействия.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|	КалендарныеДниПособия.ОплачиватьДнейПособия КАК ОплаченоВремени,
		|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1 КАК РазмерВПроцентах,
		|	ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Показатель1 * &Средний / 100 КАК ЧИСЛО(15, 2)) КАК РазмерВРублях,
		|	НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,
		|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчета
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоФСС,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчетаЗаСчетРаботодателя
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоРаботодателем
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниПособия КАК КалендарныеДниПособия
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = КалендарныеДниПособия.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТ КАК РазмерММОТ
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерММОТ.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерОграниченияПособия КАК РазмерОграниченияПособия
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерОграниченияПособия.ОсновнойНомерСтроки
		|ГДЕ
		|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
		|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодДействияНачало";
		
	ИначеЕсли ДатаНачалаОплаты < мДатаЗакона213ФЗ Тогда
		ОграничениеВРазмереММОТТекст = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец, МЕСЯЦ)) * ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
		|						ТОГДА ВЫБОР
		|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|								ИНАЧЕ 1
		|							КОНЕЦ
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))";
		
		ОграничениеТекст = 
		"ВЫРАЗИТЬ(ВЫБОР
		|		КОГДА &ДатаЗакона213ФЗ <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
		|			ТОГДА ЕСТЬNULL(ПредельнаяВеличина.Размер, 0) / 365 * ОсновныеНачисленияРаботниковОрганизаций.Показатель1 / 100
		|		ИНАЧЕ ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец, МЕСЯЦ)) * ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
		|						ТОГДА ВЫБОР
		|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|								ИНАЧЕ 1
		|							КОНЕЦ
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|				ИНАЧЕ 1
		|			КОНЕЦ 
		|		КОНЕЦ КАК ЧИСЛО(15, 2))";
		
		РасчетПособияТекст = 
		"ВЫБРАТЬ
		|	ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних.РазмерФСС КАК Размер
		|ПОМЕСТИТЬ ВТПредельнаяВеличина
		|ИЗ
		|	РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СрезПоследних(&ДатаПредельнойБазы, ) КАК ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
		|	СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ФактическийПериодДействия.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ)) КАК ОплачиватьДнейПособия
		|ПОМЕСТИТЬ ВТКалендарныеДниПособия
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|			ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС))
		|				И Регистратор = &ДокументСсылка) КАК ФактическийПериодДействия
		|
		|СГРУППИРОВАТЬ ПО
		|	ФактическийПериодДействия.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|	КалендарныеДниПособия.ОплачиватьДнейПособия КАК ОплаченоВремени,
		|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1 КАК РазмерВПроцентах,
		|	ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Показатель1 * ВЫБОР
		|			КОГДА &ДатаЗакона213ФЗ <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
		|				ТОГДА &Средний
		|			ИНАЧЕ &Средний2009
		|		КОНЕЦ / 100 КАК ЧИСЛО(15, 2)) КАК РазмерВРублях,
		|	НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,
		|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчета
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоФСС,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчетаЗаСчетРаботодателя
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоРаботодателем
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниПособия КАК КалендарныеДниПособия
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = КалендарныеДниПособия.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТ КАК РазмерММОТ
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерММОТ.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерОграниченияПособия КАК РазмерОграниченияПособия
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерОграниченияПособия.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличина КАК ПредельнаяВеличина
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
		|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодДействияНачало";
		
	Иначе
		
		ОграничениеВРазмереММОТТекст = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец, МЕСЯЦ)) * ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
		|						ТОГДА ВЫБОР
		|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|								ИНАЧЕ 1
		|							КОНЕЦ
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))";
		
		ОграничениеТекст = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0) / 365 * ОсновныеНачисленияРаботниковОрганизаций.Показатель1 / 100 КАК ЧИСЛО(15, 2))";
		
		РасчетПособияТекст = 
		"ВЫБРАТЬ
		|	ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних.РазмерФСС КАК Размер
		|ПОМЕСТИТЬ ВТРазмерОграниченияПособия
		|ИЗ
		|	РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СрезПоследних(&ДатаПредельнойБазы, ) КАК ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
		|	СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ФактическийПериодДействия.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ)) КАК ОплачиватьДнейПособия
		|ПОМЕСТИТЬ ВТКалендарныеДниПособия
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|			ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС))
		|				И Регистратор = &ДокументСсылка) КАК ФактическийПериодДействия
		|
		|СГРУППИРОВАТЬ ПО
		|	ФактическийПериодДействия.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|	КалендарныеДниПособия.ОплачиватьДнейПособия КАК ОплаченоВремени,
		|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1 КАК РазмерВПроцентах,
		|	ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Показатель1 * &Средний / 100 КАК ЧИСЛО(15, 2)) КАК РазмерВРублях,
		|	НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,
		|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчета
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоФСС,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчетаЗаСчетРаботодателя
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоРаботодателем
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниПособия КАК КалендарныеДниПособия
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = КалендарныеДниПособия.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТ КАК РазмерММОТ
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерММОТ.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерОграниченияПособия КАК РазмерОграниченияПособия
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
		|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодДействияНачало";
		
	КонецЕсли;
	
	Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
		РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,",ОграничениеВРазмереММОТТекст + " КАК ОграничениеПособия,")
	ИначеЕсли ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
		Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,","ВЫБОР
			|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
			|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
			|		ИНАЧЕ " + ОграничениеТекст + "
			|	КОНЕЦ КАК ОграничениеПособия,")
		Иначе
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,","ВЫБОР
			|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
			|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
			|		ИНАЧЕ ""-""
			|	КОНЕЦ КАК ОграничениеПособия,")
		КонецЕсли;
	ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
		РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,",ОграничениеТекст + " КАК ОграничениеПособия,")
	Иначе
		РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,","""-""  КАК ОграничениеПособия,")
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеПоБольничномуЛисту_ОборотЛисткаНетрудоспособности";
	
	Макет = Документы.НачислениеПоБольничномуЛисту.ПолучитьМакет("ОборотЛисткаНетрудоспособности");
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	СекцияРасчетПособияШапка = Макет.ПолучитьОбласть("РасчетПособияШапка");
	СекцияРасчетПособияСтрока = Макет.ПолучитьОбласть("РасчетПособияСтрока");
	СекцияРасчетПособияИтог = Макет.ПолучитьОбласть("РасчетПособияИтог");
	
	Запрос.Текст = ДанныеОДокументеТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СекцияШапка.Параметры,Выборка);
	ЗаполнитьЗначенияСвойств(СекцияРасчетПособияШапка.Параметры,Выборка);
	ПериодРасчетаСреднегоЗаработка = Выборка.ПериодРасчетаСреднегоЗаработка;
	ЛетСтажа	= 0;
	МесяцевСтажа= 0;
	ДнейСтажа	= 0;
	ДатаНепрерывногоСтажа = ПроведениеРасчетов.ПолучитьНачалоСтажаДляБольничногоЛиста(ДатаНачалаСобытия	, Сотрудник.Физлицо, Организация, ?(ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов,Справочники.ВидыСтажа.РасширенныйСтраховойСтажДляБЛ,Неопределено));
	Если ЗначениеЗаполнено(ДатаНепрерывногоСтажа) Тогда
		ОбщегоНазначенияЗК.РазобратьРазностьДат(ДатаНачалаСобытия, ДатаНепрерывногоСтажа, ЛетСтажа, МесяцевСтажа, ДнейСтажа);
	КонецЕсли;
	СекцияШапка.Параметры.НазваниеСтажа = "Страховой";
	СекцияШапка.Параметры.ЛетСтажа = ЛетСтажа;
	СекцияШапка.Параметры.ПодписьЛетСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("год","года","лет",ЛетСтажа);
	СекцияШапка.Параметры.МесяцевСтажа = МесяцевСтажа;
	СекцияШапка.Параметры.ПодписьМесяцевСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("месяц","месяца","месяцев",МесяцевСтажа);
	СекцияШапка.Параметры.ДнейСтажа = ДнейСтажа;
	СекцияШапка.Параметры.ПодписьДнейСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("день","дня","дней",ДнейСтажа);
	
	СекцияШапка.Параметры.НаименованиеОрганизации = СокрЛП(СекцияШапка.Параметры.НаименованиеОрганизации);
	
	ДатыВыходныхДней = "";
	СекцияШапка.Параметры.НазваниеДней =  "календарных";
	СекцияШапка.Параметры.РабочихДней = ДнейОплаты;
	СекцияШапка.Параметры.ДатыВыходныхДней = ДатыВыходныхДней;
	ТабДокумент.Вывести(СекцияШапка);
	
	СтруктураПоказателей = Неопределено;
	Если ПериодРегистрации >= мДатаЗакона213ФЗ И ДатаНачалаОплаты < мДатаЗакона213ФЗ Тогда // переходный период 2009-2010 годов
		
		СписокСоставляющихСреднегоЗаработка = Новый Массив(2); 
		СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
		СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
		Начало = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, ПериодРасчетаСреднегоЗаработка, "", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, СписокСоставляющихСреднегоЗаработка, Ложь, Ложь, СтруктураПоказателей);
		Запрос.УстановитьПараметр("Средний2009",Окр(СтруктураПоказателей.Средний,2));
		
		СтруктураПоказателей = Неопределено;
		СписокСоставляющихСреднегоЗаработка = Новый Массив(2); 
		СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010;
		СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010;
		Продолжение = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, ПериодРасчетаСреднегоЗаработка, "", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, СписокСоставляющихСреднегоЗаработка, Ложь, Ложь, СтруктураПоказателей);
		
		Макет = ПолучитьОбщийМакет("РасчетСреднегоЗаработка");
		Секция = Макет.ПолучитьОбласть("ШапкаОсобая");
		ПечатьРасчетаСреднегоЗаработкаОтчет = Новый ТабличныйДокумент;
		Секция.Параметры.ЗаголовокРаздела = "Расчет среднего заработка по правилам 2009 года";
		ПечатьРасчетаСреднегоЗаработкаОтчет.Вывести(Секция);
		ПечатьРасчетаСреднегоЗаработкаОтчет.Вывести(Начало);
		Секция.Параметры.ЗаголовокРаздела = "Расчет среднего заработка по правилам 2010 года";
		ПечатьРасчетаСреднегоЗаработкаОтчет.Вывести(Секция);
		ПечатьРасчетаСреднегоЗаработкаОтчет.Вывести(Продолжение);
		
	ИначеЕсли ПериодРегистрации >= мДатаЗакона213ФЗ И ДатаНачалаСобытия < мДатаЗакона213ФЗ Тогда  // продолжение переходящего б/л, полностью в 2010 году
		СписокСоставляющихСреднегоЗаработка = Новый Массив(2); 
		СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010;
		СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010;
		ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия	, ПериодРасчетаСреднегоЗаработка, "", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, СписокСоставляющихСреднегоЗаработка, Ложь, Ложь, СтруктураПоказателей);
	Иначе	
		ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, ПериодРасчетаСреднегоЗаработка, "", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, СписокСоставляющихСреднегоЗаработка, Ложь, Ложь, СтруктураПоказателей);
	КонецЕсли;
	ОбластьПрямоугольная = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, 1, ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы, ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы);
	НачалоНовогоФорматаСтрок = ТабДокумент.ВысотаТаблицы + 1;
	ТабДокумент.Область(НачалоНовогоФорматаСтрок, , НачалоНовогоФорматаСтрок + ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы - 1, ).СоздатьФорматСтрок();
	// назначим ширину колонок у новой области формата строк
	Для Счетчик = 1 По ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы Цикл
		ТабДокумент.Область(НачалоНовогоФорматаСтрок, Счетчик).ШиринаКолонки = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, Счетчик).ШиринаКолонки;
	КонецЦикла;
	ТабДокумент.ВставитьОбласть(ОбластьПрямоугольная, ТабДокумент.Область(НачалоНовогоФорматаСтрок, 1));
	
	ТабДокумент.Вывести(СекцияРасчетПособияШапка);
	Запрос.УстановитьПараметр("Средний",Окр(СтруктураПоказателей.Средний,2));
	Запрос.Текст = РасчетПособияТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	НачисленоВсего = 0;
	НачисленоФСС = 0;
	НачисленоРаботодателем = 0;
	Пока Выборка.Следующий() Цикл
		НачисленоВсего = НачисленоВсего + Выборка.Результат;
		НачисленоФСС = НачисленоФСС + Выборка.НачисленоФСС;
		НачисленоРаботодателем = НачисленоРаботодателем + Выборка.НачисленоРаботодателем;
		ЗаполнитьЗначенияСвойств(СекцияРасчетПособияСтрока.Параметры,Выборка);
		ТабДокумент.Вывести(СекцияРасчетПособияСтрока);
	КонецЦикла;
	
	Если ПериодРегистрации < ДатаЗакона Тогда
		
		СекцияРасчетПособияИтог.Параметры.НачисленоВсегоПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоВсего, Константы.ВалютаРегламентированногоУчета.Получить());
		СекцияРасчетПособияИтог.Параметры.ПериодРегистрации = ПериодРегистрации;
		ТабДокумент.Вывести(СекцияРасчетПособияИтог);
		
		НачислениеПоБольничномуЛистуПереопределяемый.ВывестиОтражениеВУчете(ТабДокумент, Ссылка, ПериодРегистрации, Организация, ВидРасчета);
	Иначе
		
		Макет = Документы.НачислениеПоБольничномуЛисту.ПолучитьМакет("ОборотЛисткаНетрудоспособности2011");
		СекцияРасчетПособияИтог = Макет.ПолучитьОбласть("РасчетПособияИтог");
		Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		СекцияРасчетПособияИтог.Параметры.НачисленоВсегоПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоВсего, Валюта);
		СекцияРасчетПособияИтог.Параметры.НачисленоФССПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоФСС, Валюта);
		СекцияРасчетПособияИтог.Параметры.НачисленоРаботодателемПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоРаботодателем, Валюта);
		СекцияРасчетПособияИтог.Параметры.ПериодРегистрации = ПериодРегистрации;
		ТабДокумент.Вывести(СекцияРасчетПособияИтог);
		
	КонецЕсли;
	
	Возврат	ТабДокумент
	
КонецФункции // ПечатьОборотаБольничного2010()

Функция ПечатьОборотаБольничного2011()
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("Сотрудник",			 Сотрудник);
	Запрос.УстановитьПараметр("ФизЛицо",			 Физлицо);
	Запрос.УстановитьПараметр("ДокументСсылка",		 Ссылка);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",	 ДатаНачалаСобытия);
	Запрос.УстановитьПараметр("ДатаНачала",			 ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",		 ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаНарушенияРежима", ДатаНарушенияРежима);
	Запрос.УстановитьПараметр("ВидРасчета",			 ВидРасчета);
	Запрос.УстановитьПараметр("ВидРасчетаЗаСчетРаботодателя", ВидРасчетаЗаСчетРаботодателя);
	ВидыРасчетов = Новый Массив;
	ВидыРасчетов.Добавить(ВидРасчета);
	ВидыРасчетов.Добавить(ВидРасчетаЗаСчетРаботодателя);
	Запрос.УстановитьПараметр("ВидыРасчетов", ВидыРасчетов);
	
	ДанныеОДокументеТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументБЛ.Ссылка,
	|	ДокументБЛ.Сотрудник.Физлицо КАК Физлицо,
	|	ДокументБЛ.Организация,
	|	ДокументБЛ.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	ДокументБЛ.ДатаНачала,
	|	ДокументБЛ.ДатаОкончания,
	|	ДокументБЛ.НомерВходящегоДокумента,
	|	ДокументБЛ.СерияВходящегоДокумента,
	|	ДокументБЛ.ПроцентОплаты,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.ДатаНачалаОплаты = ДокументБЛ.ДатаНачала
	|				И ДокументБЛ.ДнейОплаты = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Отказано,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.ДатаНарушенияРежима >= ДокументБЛ.ДатаНачала
	|				И ДокументБЛ.ДатаНарушенияРежима <= ДокументБЛ.ДатаОкончания
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Снижено,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|			ТОГДА ""по беременности и родам""
	|		КОГДА ДокументБЛ.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаРебенком)
	|			ТОГДА ""по уходу за больным ребенком""
	|		КОГДА ДокументБЛ.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаВзрослым)
	|			ТОГДА ""по уходу за больным членом семьи""
	|		ИНАЧЕ ""по временной нетрудоспособности""
	|	КОНЕЦ КАК ПричинаНетрудоспособности,
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, ДокументБЛ.Сотрудник.Наименование) КАК ФИОРаботника,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.Сотрудник.Физлицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|			ТОГДА ""Не работала""
	|		ИНАЧЕ ""Не работал""
	|	КОНЕЦ КАК СловаНеРаботал,
	|	ДокументБЛ.Сотрудник.Код КАК ТабельныйНомер,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.Наименование
	|	КОНЕЦ КАК ПодразделениеНаименование,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьНаименование,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|					И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ВЫБОР
	|						КОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.СокращенноеРабочееВремя
	|								И РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|								И РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|							ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ДлительностьРабочейНедели / РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			КОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СокращенноеРабочееВремя
	|					И РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|					И РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|				ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ДлительностьРабочейНедели / РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|			ИНАЧЕ 1
	|		КОНЕЦ, 1) КАК Доля,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.ВыплатаЗаСчетФедеральногоБюджета В (ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Маяк), ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Чернобыль), ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.Семипалатинск), ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ПодразделенияОсобогоРиска))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Радиация,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаРебенком)
	|				И ДокументБЛ.СлучайУходаЗаБольнымРебенком В (ЗНАЧЕНИЕ(Перечисление.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомВСтационаре), ЗНАЧЕНИЕ(Перечисление.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомАмбулаторно))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РебенокИнвалид,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА ВЫБОР
	|						КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|								И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.КодПоОКТМО
	|						ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.КодПоОКТМО
	|					КОНЕЦ <> """" или ВЫБОР
	|						КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|								И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.КодПоОКАТО
	|						ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.КодПоОКАТО
	|					КОНЕЦ <> """"
	|					ТОГДА ВЫБОР
	|							КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|									И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|								ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.ТерриториальныеУсловияПФР
	|							ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.ТерриториальныеУсловияПФР
	|						КОНЕЦ
	|				ИНАЧЕ ДокументБЛ.Организация.ТерриториальныеУсловияПФР
	|			КОНЕЦ В (ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловия.МКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловия.МКСР), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловия.РКС), ЗНАЧЕНИЕ(Справочник.ТерриториальныеУсловия.РКСМ))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК МКС
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК ДокументБЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДокументБЛ.Ссылка = &ДокументСсылка";

	ОграничениеВРазмереММОТТекст = 
	"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало, МЕСЯЦ)) * ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКТМО <> """" ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|						ТОГДА ВЫБОР
	|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))";
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1,
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКТМО <> """"
	|				ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|			ТОГДА ВЫБОР
	|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|						ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК РайонныйКоэффициентРФОрганизации
	|ПОМЕСТИТЬ ВТСтрокиРасчета
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
	|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета В(&ВидыРасчетов)
	|	И НЕ ОсновныеНачисленияРаботниковОрганизаций.Сторно";
	Запрос.Выполнить();
	
	// РазмерММОТ
	//	Поля:
	//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
	//		Размер - размер ММОТ
	//	Описание:
	//		получает размер ММОТ для каждой строки начислений
	//
	Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Или ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
		|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
		|ПОМЕСТИТЬ ВТРазмерММОТ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Основной.НомерСтроки КАК НомерСтроки,
		|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
		|	ИЗ
		|		ВТСтрокиРасчета КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|			ПО (МинимальнаяОплатаТрудаРФ.Период <= Основной.ПериодДействияНачало)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Основной.НомерСтроки) КАК ДатыАктуальностиММОТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|		ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)";
	Иначе	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	0 КАК ОсновнойНомерСтроки,
		|	0 КАК Размер
		|ПОМЕСТИТЬ ВТРазмерММОТ";
	КонецЕсли;
	Запрос.Выполнить();
	
	// МаксимальныйРазмерЕжемесячнойСтраховойВыплаты
	//	Поля:
	//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
	//		Размер - максимальный размер ежемесячной страховой выплаты
	//	Описание:
	//		получает максимальный размер ежемесячной страховой выплаты для каждой строки начислений
	//
	Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеМаксимальнымРазмеромЕжемесячнойСтраховойВыплаты Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
		|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
		|ПОМЕСТИТЬ ВТМаксимальныйРазмерЕжемесячнойСтраховойВыплаты
		|ИЗ
		|	(ВЫБРАТЬ
		|		Основной.НомерСтроки КАК НомерСтроки,
		|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
		|	ИЗ
		|		ВТСтрокиРасчета КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МаксимальныйРазмерЕжемесячнойСтраховойВыплаты КАК МинимальнаяОплатаТрудаРФ
		|			ПО (МинимальнаяОплатаТрудаРФ.Период <= Основной.ПериодДействияНачало)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Основной.НомерСтроки) КАК ДатыАктуальностиММОТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МаксимальныйРазмерЕжемесячнойСтраховойВыплаты КАК МинимальнаяОплатаТрудаРФ
		|		ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновнойНомерСтроки";
	Иначе	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	0 КАК ОсновнойНомерСтроки,
		|	0 КАК Размер
		|ПОМЕСТИТЬ ВТМаксимальныйРазмерЕжемесячнойСтраховойВыплаты";
	КонецЕсли;
	Запрос.Выполнить();
	
	РасчетПособияТекст = 
	"ВЫБРАТЬ
	|	ФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
	|	СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ФактическийПериодДействия.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ)) КАК ОплачиватьДнейПособия
	|ПОМЕСТИТЬ ВТКалендарныеДниПособия
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|			ВидРасчета В (&ВидыРасчетов)
	|				И Регистратор = &ДокументСсылка) КАК ФактическийПериодДействия
	|
	|СГРУППИРОВАТЬ ПО
	|	ФактическийПериодДействия.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МинимальнаяОплатаТрудаРФСрезПоследних.Размер
	|ПОМЕСТИТЬ ВТМРОТнаДатуСобытия
	|ИЗ
	|	РегистрСведений.МинимальнаяОплатаТрудаРФ.СрезПоследних(&ДатаНачалаСобытия, ) КАК МинимальнаяОплатаТрудаРФСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
	|	КалендарныеДниПособия.ОплачиватьДнейПособия КАК ОплаченоВремени,
	|	&Средний КАК Средний,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(МРОТнаДатуСобытия.Размер, 0) * &ДоляММОТ * 24 / 730 КАК ЧИСЛО(15, 2)) КАК СреднийМРОТ,
	|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1 КАК РазмерВПроцентах,
	|	ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Показатель1 * ВЫБОР
	|			КОГДА &Средний > (ВЫРАЗИТЬ(ЕСТЬNULL(МРОТнаДатуСобытия.Размер, 0) * &ДоляММОТ * 24 / 730 КАК ЧИСЛО(15, 2)))
	|				ТОГДА &Средний
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(МРОТнаДатуСобытия.Размер, 0) * ОсновныеНачисленияРаботниковОрганизаций.РайонныйКоэффициентРФОрганизации * &ДоляММОТ * 24 / 730 КАК ЧИСЛО(15, 2))
	|		КОНЕЦ / 100 КАК ЧИСЛО(15, 2)) КАК РазмерВРублях,
	|	НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,
	|	ОсновныеНачисленияРаботниковОрганизаций.РайонныйКоэффициентРФОрганизации,
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчета
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НачисленоФСС,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчетаЗаСчетРаботодателя
	|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НачисленоРаботодателем
	|ИЗ
	|	ВТСтрокиРасчета КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниПособия КАК КалендарныеДниПособия
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = КалендарныеДниПособия.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТ КАК РазмерММОТ
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерММОТ.ОсновнойНомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМаксимальныйРазмерЕжемесячнойСтраховойВыплаты КАК МаксимальныйРазмерЕжемесячнойСтраховойВыплаты
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.ОсновнойНомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМРОТнаДатуСобытия КАК МРОТнаДатуСобытия
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодДействияНачало";
	
	/////Вадим 27.03.2013 9:52:26
	//	Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
	//	РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", ОграничениеВРазмереММОТТекст + " КАК ОграничениеПособия,")
	//ИначеЕсли ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
	//	РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", "ВЫБОР
	//	|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
	//	|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
	//	|		ИНАЧЕ ""-""
	//	|	КОНЕЦ КАК ОграничениеПособия,")
	//Иначе
	//	РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", """-""  КАК ОграничениеПособия,")
	//КонецЕсли;
 
    РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", ОграничениеВРазмереММОТТекст + " КАК ОграничениеПособия,");
 ////ВадимКонец
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеПоБольничномуЛисту_ОборотЛисткаНетрудоспособности2011";
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Макет = Документы.НачислениеПоБольничномуЛисту.ПолучитьМакет("ОборотЛисткаНетрудоспособности2011");
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	СекцияРасчетПособияШапка = Макет.ПолучитьОбласть("РасчетПособияШапка");
	СекцияРасчетПособияСтрока = Макет.ПолучитьОбласть("РасчетПособияСтрока");
	СекцияРасчетПособияИтог = Макет.ПолучитьОбласть("РасчетПособияИтог");
	
	Запрос.Текст = ДанныеОДокументеТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СекцияШапка.Параметры,Выборка);
	Запрос.УстановитьПараметр("ДоляММОТ", Мин(Выборка.Доля, 1));
	
	СекцияШапка.Область("Радиация").ГраницаСнизу = ?(Выборка.Радиация, Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1), Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии));
	СекцияШапка.Область("МКС").ГраницаСнизу = ?(Выборка.МКС, Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1), Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии));
	СекцияШапка.Область("РебенокИнвалид").ГраницаСнизу = ?(Выборка.РебенокИнвалид, Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1), Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии));
	
	СекцияШапка.Область("Снижено").ГраницаСнизу = ?(Выборка.Снижено, Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1), Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии));
	СекцияШапка.Область("Отказано").ГраницаСнизу = ?(Выборка.Отказано, Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1), Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии));
	
	ЛетСтажа	= 0;
	МесяцевСтажа= 0;
	ДнейСтажа	= 0;
	ДатаНепрерывногоСтажа = ПроведениеРасчетов.ПолучитьНачалоСтажаДляБольничногоЛиста(ДатаНачалаСобытия, Физлицо, Организация, ?(ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов,Справочники.ВидыСтажа.РасширенныйСтраховойСтажДляБЛ,Справочники.ВидыСтажа.СтраховойСтажДляБЛ));
	Если ЗначениеЗаполнено(ДатаНепрерывногоСтажа) Тогда
		ОбщегоНазначенияЗК.РазобратьРазностьДат(ДатаНачалаСобытия, ДатаНепрерывногоСтажа, ЛетСтажа, МесяцевСтажа, ДнейСтажа);
	КонецЕсли;
	СекцияШапка.Параметры.ЛетСтажа = ЛетСтажа;
	СекцияШапка.Параметры.ПодписьЛетСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("год","года","лет",ЛетСтажа);
	СекцияШапка.Параметры.МесяцевСтажа = МесяцевСтажа;
	СекцияШапка.Параметры.ПодписьМесяцевСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("месяц","месяца","месяцев",МесяцевСтажа);
	СекцияШапка.Параметры.ДнейСтажа = ДнейСтажа;
	СекцияШапка.Параметры.ПодписьДнейСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("день","дня","дней",ДнейСтажа);
	Если ЗначениеЗаполнено(ДатаНарушенияРежима) И ДатаНарушенияРежима >= ДатаНачала И ДатаНарушенияРежима <= ДатаОкончания Тогда
		СекцияШапка.Параметры.ДатаНарушенияРежима = Формат(ДатаНарушенияРежима,"ДЛФ=DD");
	Иначе
		СекцияШапка.Параметры.ДатаНарушенияРежима = """____"" _________ 20__ г.";
	КонецЕсли;
	СекцияШапка.Параметры.ДнейОплаты = "" + ?(ДнейОплаты = 0," -", ДнейОплаты) + ОбщегоНазначенияЗК.ФормаМножественногоЧисла(" календарный день"," календарных дня"," календарных дней", ДнейОплаты);
	СекцияШапка.Параметры.НаименованиеОрганизации = СокрЛП(СекцияШапка.Параметры.НаименованиеОрганизации);
	
	ТабДокумент.Вывести(СекцияШапка);
	
	СтруктураПоказателей = Неопределено;
	ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.РасчетСреднегоЗаработкаПособий2011(ЭтотОбъект, Ложь, СтруктураПоказателей);
	ОбластьПрямоугольная = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, 1, ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы, ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы);
	НачалоНовогоФорматаСтрок = ТабДокумент.ВысотаТаблицы + 1;
	ТабДокумент.Область(НачалоНовогоФорматаСтрок, , НачалоНовогоФорматаСтрок + ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы - 1, ).СоздатьФорматСтрок();
	// назначим ширину колонок у новой области формата строк
	Для Счетчик = 1 По ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы Цикл
		ТабДокумент.Область(НачалоНовогоФорматаСтрок, Счетчик).ШиринаКолонки = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, Счетчик).ШиринаКолонки;
	КонецЦикла;
	ТабДокумент.ВставитьОбласть(ОбластьПрямоугольная, ТабДокумент.Область(НачалоНовогоФорматаСтрок, 1));
	
	Запрос.УстановитьПараметр("Средний",Окр(СтруктураПоказателей.Средний,2));
	Запрос.Текст = РасчетПособияТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Средний < Выборка.СреднийМРОТ И Выборка.РайонныйКоэффициентРФОрганизации > 1 Тогда
			СекцияРасчетПособияШапка.Параметры.УчетРК = " с учетом РК: " + Выборка.РайонныйКоэффициентРФОрганизации
		КонецЕсли;
	КонецЕсли;
	ТабДокумент.Вывести(СекцияРасчетПособияШапка);
	
	НачисленоВсего = 0;
	НачисленоФСС = 0;
	НачисленоРаботодателем = 0;
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		НачисленоВсего = НачисленоВсего + Выборка.Результат;
		НачисленоФСС = НачисленоФСС + Выборка.НачисленоФСС;
		НачисленоРаботодателем = НачисленоРаботодателем + Выборка.НачисленоРаботодателем;
		ЗаполнитьЗначенияСвойств(СекцияРасчетПособияСтрока.Параметры,Выборка);
		ТабДокумент.Вывести(СекцияРасчетПособияСтрока);
	КонецЦикла;
	
	Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	СекцияРасчетПособияИтог.Параметры.НачисленоВсегоПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоВсего, Валюта);
	СекцияРасчетПособияИтог.Параметры.НачисленоФССПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоФСС, Валюта);
	СекцияРасчетПособияИтог.Параметры.НачисленоРаботодателемПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоРаботодателем, Валюта);
	СекцияРасчетПособияИтог.Параметры.ПериодРегистрации = ПериодРегистрации;
	ТабДокумент.Вывести(СекцияРасчетПособияИтог);
	
	Возврат	ТабДокумент
	
КонецФункции // ПечатьОборотаБольничного2011()

Функция ПечатьРасчетПособияКЛисткуНетрудоспособности2011()
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("Сотрудник",			 Сотрудник);
	Запрос.УстановитьПараметр("ФизЛицо",			 Физлицо);
	Запрос.УстановитьПараметр("ДокументСсылка",		 Ссылка);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",	 ДатаНачалаСобытия);
	Запрос.УстановитьПараметр("ДатаНачала",			 ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",		 ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаНарушенияРежима", ДатаНарушенияРежима);
	Запрос.УстановитьПараметр("ВидРасчета",			 ВидРасчета);
	Запрос.УстановитьПараметр("ВидРасчетаЗаСчетРаботодателя", ВидРасчетаЗаСчетРаботодателя);
	ВидыРасчетов = Новый Массив;
	ВидыРасчетов.Добавить(ВидРасчета);
	ВидыРасчетов.Добавить(ВидРасчетаЗаСчетРаботодателя);
	Запрос.УстановитьПараметр("ВидыРасчетов", ВидыРасчетов);
	
	ДанныеОДокументеТекст = 
	"ВЫБРАТЬ
	|	СУММА(НачислениеПоБольничномуЛистуНачисления.ОплаченоДнейЧасов) КАК ОплаченоДнейЧасов,
	|	НачислениеПоБольничномуЛистуНачисления.Показатель1
	|ПОМЕСТИТЬ ВТОплаченоДней
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛистуНачисления
	|ГДЕ
	|	НачислениеПоБольничномуЛистуНачисления.Ссылка = &ДокументСсылка
	|	И НачислениеПоБольничномуЛистуНачисления.ВидРасчета В (&ВидРасчета, &ВидРасчетаЗаСчетРаботодателя)
	|	И НЕ НачислениеПоБольничномуЛистуНачисления.Сторно
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеПоБольничномуЛистуНачисления.Показатель1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументБЛ.Ссылка,
	|	ДокументБЛ.Сотрудник.Физлицо КАК Физлицо,
	|	ДокументБЛ.Организация,
	|	ДокументБЛ.Организация.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	ДокументБЛ.ДатаНачала,
	|	ДокументБЛ.ДатаОкончания,
	|	ДокументБЛ.НомерВходящегоДокумента,
	|	ДокументБЛ.СерияВходящегоДокумента,
	|	ДокументБЛ.ПроцентОплаты,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.ДатаНачалаОплаты = ДокументБЛ.ДатаНачала
	|				И ДокументБЛ.ДнейОплаты = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Отказано,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.ДатаНарушенияРежима >= ДокументБЛ.ДатаНачала
	|				И ДокументБЛ.ДатаНарушенияРежима <= ДокументБЛ.ДатаОкончания
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Снижено,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|			ТОГДА ""по беременности и родам""
	|		КОГДА ДокументБЛ.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаРебенком)
	|			ТОГДА ""по уходу за больным ребенком""
	|		КОГДА ДокументБЛ.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаВзрослым)
	|			ТОГДА ""по уходу за больным членом семьи""
	|		ИНАЧЕ ""по временной нетрудоспособности""
	|	КОНЕЦ КАК ПричинаНетрудоспособности,
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, ДокументБЛ.Сотрудник.Наименование) КАК ФИОРаботника,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.Сотрудник.Физлицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|			ТОГДА ""Не работала""
	|		ИНАЧЕ ""Не работал""
	|	КОНЕЦ КАК СловаНеРаботал,
	|	ДокументБЛ.Сотрудник.Код КАК ТабельныйНомер,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.Наименование
	|	КОНЕЦ КАК ПодразделениеНаименование,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения.Наименование
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьНаименование,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|					И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ВЫБОР
	|						КОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.СокращенноеРабочееВремя
	|								И РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|								И РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|							ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ДлительностьРабочейНедели / РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			КОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СокращенноеРабочееВремя
	|					И РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|					И РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|				ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ДлительностьРабочейНедели / РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|			ИНАЧЕ 1
	|		КОНЕЦ, 1) КАК Доля,
	|	ДокументБЛ.УсловияИсчисленияКод2,
	|	ДокументБЛ.УсловияИсчисленияКод1,
	|	ДокументБЛ.УсловияИсчисленияКод3,
	|	ДокументБЛ.СтажЛет КАК ЛетСтажа,
	|	ДокументБЛ.СтажМесяцев КАК МесяцевСтажа,
	|	ДокументБЛ.НеВыплачиватьПособие,
	|	ДокументБЛ.Сотрудник.Физлицо.ИНН КАК ИНН,
	|	ДокументБЛ.Сотрудник.Физлицо.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ДокументБЛ.СтажБезНестраховыхПериодовЛет,
	|	ДокументБЛ.СтажБезНестраховыхПериодовСтажМесяцев,
	|	ЕСТЬNULL(ОплаченоДнейВПолномРазмере.ОплаченоДнейЧасов, 0) КАК ДнейВПолномРазмере,
	|	ЕСТЬNULL(ОплаченоДнейПо50процентов.ОплаченоДнейЧасов, 0) КАК ДнейПо50процентов
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК ДокументБЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОплаченоДней КАК ОплаченоДнейВПолномРазмере
	|		ПО ДокументБЛ.ПроцентОплаты = ОплаченоДнейВПолномРазмере.Показатель1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОплаченоДней КАК ОплаченоДнейПо50процентов
	|		ПО (ОплаченоДнейПо50процентов.Показатель1 = 50)
	|ГДЕ
	|	ДокументБЛ.Ссылка = &ДокументСсылка";

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеПоБольничномуЛисту_ПечатьРасчетПособияКЛисткуНетрудоспособности2011";
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Макет = Документы.НачислениеПоБольничномуЛисту.ПолучитьМакет("РасчетПособия2011");
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	СекцияРасчетПособияИтог = Макет.ПолучитьОбласть("РасчетПособияНачалоИтогов");
	СекцияНДФЛ = Макет.ПолучитьОбласть("НДФЛ");
	СекцияПодписи = Макет.ПолучитьОбласть("Подписи");
	
	Запрос.Текст = ДанныеОДокументеТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СекцияШапка.Параметры, Выборка);
	СекцияШапка.Параметры.ПодписьЛетСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("год","года","лет",СекцияШапка.Параметры.ЛетСтажа);
	СекцияШапка.Параметры.ПодписьМесяцевСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("месяц","месяца","месяцев",СекцияШапка.Параметры.МесяцевСтажа);

	Если ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов Тогда
		
		ЛетСтажа = 0;
		МесяцевСтажа = 0;
		ОбменСведениямиОПособияхСФСС.ПодсчитатьРазностьСтажейВГодахИМесяцах(Выборка.ЛетСтажа, Выборка.МесяцевСтажа, Выборка.СтажБезНестраховыхПериодовЛет,Выборка.СтажБезНестраховыхПериодовСтажМесяцев, ЛетСтажа, МесяцевСтажа);
		Если ЛетСтажа > 0 Или МесяцевСтажа > 0 Тогда
			СекцияШапка.Параметры.ЛетНестраховогоСтажа = ЛетСтажа;
			СекцияШапка.Параметры.МесяцевНестраховогоСтажа = МесяцевСтажа;
			СекцияШапка.Параметры.ПодписьЛетНестраховогоСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("год","года","лет",СекцияШапка.Параметры.ЛетНестраховогоСтажа);
			СекцияШапка.Параметры.ПодписьМесяцевНестраховогоСтажа = ОбщегоНазначенияЗК.ФормаМножественногоЧисла("месяц","месяца","месяцев",СекцияШапка.Параметры.МесяцевНестраховогоСтажа);
		КонецЕсли;
		
	КонецЕсли;
	
	ОписаниеНазначениеПособия = "";
	Если Выборка.НеВыплачиватьПособие Тогда
		ОписаниеНазначениеПособия = "Пособие не начислялось"
	ИначеЕсли Выборка.Отказано Тогда
		ОписаниеНазначениеПособия = "В пособии отказано"
	Иначе
		ОписаниеНазначениеПособия = "Назначено пособие " + Выборка.ПричинаНетрудоспособности + " в размере ";
		Если Не ЗначениеЗаполнено(Выборка.ДнейПо50процентов) Тогда
			ОписаниеНазначениеПособия = ОписаниеНазначениеПособия + Выборка.ПроцентОплаты + "% за " + ?(Выборка.ДнейВПолномРазмере = 0," -", Выборка.ДнейВПолномРазмере) + ОбщегоНазначенияЗК.ФормаМножественногоЧисла(" календарный день"," календарных дня"," календарных дней", Выборка.ДнейВПолномРазмере)
		ИначеЕсли Не ЗначениеЗаполнено(Выборка.ДнейВПолномРазмере) Тогда
			ОписаниеНазначениеПособия = ОписаниеНазначениеПособия + "50% за " + Выборка.ДнейПо50процентов + ОбщегоНазначенияЗК.ФормаМножественногоЧисла(" календарный день"," календарных дня"," календарных дней", Выборка.ДнейПо50процентов)
		Иначе
			ОписаниеНазначениеПособия = ОписаниеНазначениеПособия + Выборка.ПроцентОплаты + "% за " + Выборка.ДнейВПолномРазмере + ОбщегоНазначенияЗК.ФормаМножественногоЧисла(" календарный день"," календарных дня"," календарных дней", Выборка.ДнейВПолномРазмере) + " и 50% за " + Выборка.ДнейПо50процентов + ОбщегоНазначенияЗК.ФормаМножественногоЧисла(" календарный день"," календарных дня"," календарных дней", Выборка.ДнейПо50процентов)
		КонецЕсли;
		Если Выборка.Снижено Тогда
			ОписаниеНазначениеПособия = ОписаниеНазначениеПособия + Символы.ПС + "Пособие снижено с " + Формат(ДатаНарушенияРежима,"ДЛФ=DD");
		КонецЕсли;
	КонецЕсли;
	СекцияШапка.Параметры.ОписаниеНазначениеПособия = ОписаниеНазначениеПособия;
	СекцияШапка.Параметры.НаименованиеОрганизации = СокрЛП(СекцияШапка.Параметры.НаименованиеОрганизации);
	
	ТабДокумент.Вывести(СекцияШапка);
	
	Если РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
		
		СекцияРасчетПособияШапка = Макет.ПолучитьОбласть("РасчетПособияШапка2010");
		СекцияРасчетПособияСтрока = Макет.ПолучитьОбласть("РасчетПособияСтрока2010");
		
		Запрос.УстановитьПараметр("ДатаПредельнойБазы",	 ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
		
		ОграничениеВРазмереММОТТекст = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец, МЕСЯЦ)) * ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКТМО <> """" или ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """" 
		|						ТОГДА ВЫБОР
		|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|								ИНАЧЕ 1
		|							КОНЕЦ
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))";
		
		ОграничениеТекст = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0) / 365 * ОсновныеНачисленияРаботниковОрганизаций.Показатель1 / 100 КАК ЧИСЛО(15, 2))";
		
		РасчетПособияТекст = 
		"ВЫБРАТЬ
		|	ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
		|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
		|ПОМЕСТИТЬ ВТРазмерММОТ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Основной.НомерСтроки КАК НомерСтроки,
		|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|			ПО (МинимальнаяОплатаТрудаРФ.Период <= Основной.ПериодДействияНачало)
		|	ГДЕ
		|		Основной.Регистратор = &ДокументСсылка
		|		И Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Основной.НомерСтроки) КАК ДатыАктуальностиММОТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|		ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновнойНомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних.РазмерФСС КАК Размер
		|ПОМЕСТИТЬ ВТРазмерОграниченияПособия
		|ИЗ
		|	РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СрезПоследних(&ДатаПредельнойБазы, ) КАК ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
		|	СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ФактическийПериодДействия.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ)) КАК ОплачиватьДнейПособия
		|ПОМЕСТИТЬ ВТКалендарныеДниПособия
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|			ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС))
		|				И Регистратор = &ДокументСсылка) КАК ФактическийПериодДействия
		|
		|СГРУППИРОВАТЬ ПО
		|	ФактическийПериодДействия.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|	КалендарныеДниПособия.ОплачиватьДнейПособия КАК ОплаченоВремени,
		|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1 КАК РазмерВПроцентах,
		|	ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Показатель1 * &Средний / 100 КАК ЧИСЛО(15, 2)) КАК РазмерВРублях,
		|	НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,
		|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчета
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоФСС,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчетаЗаСчетРаботодателя
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоРаботодателем
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниПособия КАК КалендарныеДниПособия
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = КалендарныеДниПособия.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТ КАК РазмерММОТ
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерММОТ.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерОграниченияПособия КАК РазмерОграниченияПособия
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
		|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодДействияНачало";
		
		Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,",ОграничениеВРазмереММОТТекст + " КАК ОграничениеПособия,")
		ИначеЕсли ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
			Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
				РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,","ВЫБОР
				|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
				|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
				|		ИНАЧЕ " + ОграничениеТекст + "
				|	КОНЕЦ КАК ОграничениеПособия,")
			Иначе
				РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,","ВЫБОР
				|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
				|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
				|		ИНАЧЕ ""-""
				|	КОНЕЦ КАК ОграничениеПособия,")
			КонецЕсли;
		ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение Тогда
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,",ОграничениеТекст + " КАК ОграничениеПособия,")
		Иначе
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст,"НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,","""-""  КАК ОграничениеПособия,")
		КонецЕсли;
		
		СтруктураПоказателей = Неопределено;
		ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, 12, "", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, , Ложь, Ложь, СтруктураПоказателей);
		
		Запрос.УстановитьПараметр("Средний",Окр(СтруктураПоказателей.Средний,2));
		Запрос.Текст = РасчетПособияТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		
	ИначеЕсли (ЭтоПособиеПоМатеринству() И (НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении Или ДатаСобытия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству() И ПериодРегистрации >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству())) Или (ПричинаНетрудоспособности <> Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве И (Год(ДатаНачалаСобытия) = 2015 Или Год(ДатаНачалаСобытия) = 2016) И ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ФизЛицо, "ПостоянноПроживалВКрыму18Марта2014Года")) Тогда

		СекцияРасчетПособияШапка = Макет.ПолучитьОбласть("РасчетПособияШапка2013");
		СекцияРасчетПособияСтрока = Макет.ПолучитьОбласть("РасчетПособияСтрока2013");
		
		ОграничениеВРазмереММОТТекст = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало, МЕСЯЦ)) * ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКТМО <> """" ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
		|						ТОГДА ВЫБОР
		|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|								ИНАЧЕ 1
		|							КОНЕЦ
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))";
		
		// РазмерММОТ
		//	Поля:
		//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
		//		Размер - размер ММОТ
		//	Описание:
		//		получает размер ММОТ для каждой строки начислений
		//
		РасчетПособияТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1,
		|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
		|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
		|	ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
		|	ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКТМО <> """"
		|				ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
		|			ТОГДА ВЫБОР
		|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|						ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|					ИНАЧЕ 1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК РайонныйКоэффициентРФОрганизации
		|ПОМЕСТИТЬ ВТСтрокиРасчета
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|ГДЕ
		|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
		|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета В(&ВидыРасчетов)
		|	И НЕ ОсновныеНачисленияРаботниковОрганизаций.Сторно
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
		|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
		|ПОМЕСТИТЬ ВТРазмерММОТ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Основной.НомерСтроки КАК НомерСтроки,
		|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
		|	ИЗ
		|		ВТСтрокиРасчета КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|			ПО (МинимальнаяОплатаТрудаРФ.Период <= Основной.ПериодДействияНачало)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Основной.НомерСтроки) КАК ДатыАктуальностиММОТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|		ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновнойНомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
		|	СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ФактическийПериодДействия.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ)) КАК ОплачиватьДнейПособия
		|ПОМЕСТИТЬ ВТКалендарныеДниПособия
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|			ВидРасчета В (&ВидыРасчетов)
		|				И Регистратор = &ДокументСсылка) КАК ФактическийПериодДействия
		|
		|СГРУППИРОВАТЬ ПО
		|	ФактическийПериодДействия.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МинимальнаяОплатаТрудаРФСрезПоследних.Размер
		|ПОМЕСТИТЬ ВТМРОТнаДатуСобытия
		|ИЗ
		|	РегистрСведений.МинимальнаяОплатаТрудаРФ.СрезПоследних(&ДатаНачалаСобытия, ) КАК МинимальнаяОплатаТрудаРФСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|	КалендарныеДниПособия.ОплачиватьДнейПособия КАК ОплаченоВремени,
		|	&Средний КАК Средний,
		|	&СреднийПредельный КАК СреднийПредельный,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(МРОТнаДатуСобытия.Размер, 0) * &ДоляММОТ * 24 / 730 КАК ЧИСЛО(15, 2)) КАК СреднийМРОТ,
		|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1 КАК РазмерВПроцентах,
		|	ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Показатель1 * ВЫБОР
		|			КОГДА &ОграниченныйСверхуСредний > (ВЫРАЗИТЬ(ЕСТЬNULL(МРОТнаДатуСобытия.Размер, 0) * &ДоляММОТ * 24 / 730 КАК ЧИСЛО(15, 2)))
		|				ТОГДА &ОграниченныйСверхуСредний
		|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(МРОТнаДатуСобытия.Размер, 0) * &ДоляММОТ * 24 / 730 КАК ЧИСЛО(15, 2))
		|		КОНЕЦ / 100 КАК ЧИСЛО(15, 2)) КАК РазмерВРублях,
		|	НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,
		|	ОсновныеНачисленияРаботниковОрганизаций.РайонныйКоэффициентРФОрганизации,
		|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчета
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоФСС,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчетаЗаСчетРаботодателя
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоРаботодателем
		|ИЗ
		|	ВТСтрокиРасчета КАК ОсновныеНачисленияРаботниковОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниПособия КАК КалендарныеДниПособия
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = КалендарныеДниПособия.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТ КАК РазмерММОТ
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерММОТ.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМРОТнаДатуСобытия КАК МРОТнаДатуСобытия
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодДействияНачало";
		
		Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", ОграничениеВРазмереММОТТекст + " КАК ОграничениеПособия,")
		ИначеЕсли ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", "ВЫБОР
			|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
			|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
			|		ИНАЧЕ ""-""
			|	КОНЕЦ КАК ОграничениеПособия,")
		Иначе
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", """-""  КАК ОграничениеПособия,")
		КонецЕсли;
		
		СтруктураПоказателей = Неопределено;
		ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.РасчетСреднегоЗаработкаПособий2011(ЭтотОбъект, Ложь, СтруктураПоказателей);
		
		Запрос.УстановитьПараметр("Средний",Окр(СтруктураПоказателей.Средний,2));
		Запрос.УстановитьПараметр("ОграниченныйСверхуСредний",Мин(Окр(СтруктураПоказателей.Средний,2),СтруктураПоказателей.СреднийПредельный));
		Запрос.УстановитьПараметр("СреднийПредельный",СтруктураПоказателей.СреднийПредельный);
		Запрос.УстановитьПараметр("ДоляММОТ", Мин(Выборка.Доля, 1));
		
		Запрос.Текст = РасчетПособияТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Если Выборка.Средний < Выборка.СреднийМРОТ И Выборка.РайонныйКоэффициентРФОрганизации > 1 Тогда
				СекцияРасчетПособияШапка.Параметры.УчетРК = " с учетом РК: " + Выборка.РайонныйКоэффициентРФОрганизации
			КонецЕсли;
		КонецЕсли;
		Выборка.Сбросить();
		
	Иначе
		
		СекцияРасчетПособияШапка = Макет.ПолучитьОбласть("РасчетПособияШапка2011");
		СекцияРасчетПособияСтрока = Макет.ПолучитьОбласть("РасчетПособияСтрока2011");
		
		ОграничениеВРазмереММОТТекст = 
		"ВЫРАЗИТЬ(ЕСТЬNULL(РазмерММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало, МЕСЯЦ)) * ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКТМО <> """" или  ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
		|						ТОГДА ВЫБОР
		|								КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|								ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|								ИНАЧЕ 1
		|							КОНЕЦ
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 2))";
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1,
		|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
		|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
		|	ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
		|	ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКТМО <> """"
		|				ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
		|			ТОГДА ВЫБОР
		|					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
		|						ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
		|					ИНАЧЕ 1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК РайонныйКоэффициентРФОрганизации
		|ПОМЕСТИТЬ ВТСтрокиРасчета
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|ГДЕ
		|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &ДокументСсылка
		|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета В(&ВидыРасчетов)
		|	И НЕ ОсновныеНачисленияРаботниковОрганизаций.Сторно";
		Запрос.Выполнить();
		
		// РазмерММОТ
		//	Поля:
		//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
		//		Размер - размер ММОТ
		//	Описание:
		//		получает размер ММОТ для каждой строки начислений
		//
		Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Или ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
			|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
			|ПОМЕСТИТЬ ВТРазмерММОТ
			|ИЗ
			|	(ВЫБРАТЬ
			|		Основной.НомерСтроки КАК НомерСтроки,
			|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
			|	ИЗ
			|		ВТСтрокиРасчета КАК Основной
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
			|			ПО (МинимальнаяОплатаТрудаРФ.Период <= Основной.ПериодДействияНачало)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Основной.НомерСтроки) КАК ДатыАктуальностиММОТ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
			|		ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)";
		Иначе	
			Запрос.Текст =
			"ВЫБРАТЬ
			|	0 КАК ОсновнойНомерСтроки,
			|	0 КАК Размер
			|ПОМЕСТИТЬ ВТРазмерММОТ";
		КонецЕсли;
		Запрос.Выполнить();
		
		// МаксимальныйРазмерЕжемесячнойСтраховойВыплаты
		//	Поля:
		//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
		//		Размер - максимальный размер ежемесячной страховой выплаты
		//	Описание:
		//		получает максимальный размер ежемесячной страховой выплаты для каждой строки начислений
		//
		Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеМаксимальнымРазмеромЕжемесячнойСтраховойВыплаты Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
			|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
			|ПОМЕСТИТЬ ВТМаксимальныйРазмерЕжемесячнойСтраховойВыплаты
			|ИЗ
			|	(ВЫБРАТЬ
			|		Основной.НомерСтроки КАК НомерСтроки,
			|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
			|	ИЗ
			|		ВТСтрокиРасчета КАК Основной
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МаксимальныйРазмерЕжемесячнойСтраховойВыплаты КАК МинимальнаяОплатаТрудаРФ
			|			ПО (МинимальнаяОплатаТрудаРФ.Период <= Основной.ПериодДействияНачало)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Основной.НомерСтроки) КАК ДатыАктуальностиММОТ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МаксимальныйРазмерЕжемесячнойСтраховойВыплаты КАК МинимальнаяОплатаТрудаРФ
			|		ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновнойНомерСтроки";
		Иначе	
			Запрос.Текст =
			"ВЫБРАТЬ
			|	0 КАК ОсновнойНомерСтроки,
			|	0 КАК Размер
			|ПОМЕСТИТЬ ВТМаксимальныйРазмерЕжемесячнойСтраховойВыплаты";
		КонецЕсли;
		Запрос.Выполнить();
		
		// РазмерММОТ
		//	Поля:
		//		ОсновнойНомерСтроки - номер строки рассчитываемых движений
		//		Размер - размер ММОТ
		//	Описание:
		//		получает размер ММОТ для каждой строки начислений
		//
		РасчетПособияТекст = 
		"ВЫБРАТЬ
		|	ФактическийПериодДействия.НомерСтроки КАК НомерСтроки,
		|	СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействия.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ФактическийПериодДействия.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ)) КАК ОплачиватьДнейПособия
		|ПОМЕСТИТЬ ВТКалендарныеДниПособия
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|			ВидРасчета В (&ВидыРасчетов)
		|				И Регистратор = &ДокументСсылка) КАК ФактическийПериодДействия
		|
		|СГРУППИРОВАТЬ ПО
		|	ФактическийПериодДействия.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МинимальнаяОплатаТрудаРФСрезПоследних.Размер
		|ПОМЕСТИТЬ ВТМРОТнаДатуСобытия
		|ИЗ
		|	РегистрСведений.МинимальнаяОплатаТрудаРФ.СрезПоследних(&ДатаНачалаСобытия, ) КАК МинимальнаяОплатаТрудаРФСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
		|	КалендарныеДниПособия.ОплачиватьДнейПособия КАК ОплаченоВремени,
		|	&Средний КАК Средний,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(МРОТнаДатуСобытия.Размер, 0) * &ДоляММОТ * 24 / 730 КАК ЧИСЛО(15, 2)) КАК СреднийМРОТ,
		|	ОсновныеНачисленияРаботниковОрганизаций.Показатель1 КАК РазмерВПроцентах,
		|	ВЫРАЗИТЬ(ОсновныеНачисленияРаботниковОрганизаций.Показатель1 * ВЫБОР
		|			КОГДА &Средний > (ВЫРАЗИТЬ(ЕСТЬNULL(МРОТнаДатуСобытия.Размер, 0) * &ДоляММОТ * 24 / 730 КАК ЧИСЛО(15, 2)))
		|				ТОГДА &Средний
		|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(МРОТнаДатуСобытия.Размер, 0) * &ДоляММОТ * 24 / 730 КАК ЧИСЛО(15, 2))
		|		КОНЕЦ / 100 КАК ЧИСЛО(15, 2)) КАК РазмерВРублях,
		|	НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,
		|	ОсновныеНачисленияРаботниковОрганизаций.РайонныйКоэффициентРФОрганизации,
		|	ОсновныеНачисленияРаботниковОрганизаций.Результат,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчета
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоФСС,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = &ВидРасчетаЗаСчетРаботодателя
		|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоРаботодателем
		|ИЗ
		|	ВТСтрокиРасчета КАК ОсновныеНачисленияРаботниковОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниПособия КАК КалендарныеДниПособия
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = КалендарныеДниПособия.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТ КАК РазмерММОТ
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = РазмерММОТ.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМаксимальныйРазмерЕжемесячнойСтраховойВыплаты КАК МаксимальныйРазмерЕжемесячнойСтраховойВыплаты
		|		ПО ОсновныеНачисленияРаботниковОрганизаций.НомерСтроки = МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМРОТнаДатуСобытия КАК МРОТнаДатуСобытия
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодДействияНачало";
		
		Если ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеМаксимальнымРазмеромЕжемесячнойСтраховойВыплаты Тогда
			ОграничениеСтраховойВыплатойТекст = "ВЫРАЗИТЬ(ЕСТЬNULL(МаксимальныйРазмерЕжемесячнойСтраховойВыплаты.Размер, 0) * 4 / ДЕНЬ(КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало, МЕСЯЦ)) КАК ЧИСЛО(15, 2))";
			Если ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
				РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", "ВЫБОР
				|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
				|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
				|		ИНАЧЕ " + ОграничениеСтраховойВыплатойТекст + " 
				|	КОНЕЦ КАК ОграничениеПособия,")
			Иначе
				РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", ОграничениеСтраховойВыплатойТекст + " КАК ОграничениеПособия,")
			КонецЕсли;
		ИначеЕсли ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ Тогда
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", ОграничениеВРазмереММОТТекст + " КАК ОграничениеПособия,")
		ИначеЕсли ЗначениеЗаполнено(ДатаНарушенияРежима) Тогда
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", "ВЫБОР
			|		КОГДА &ДатаНарушенияРежима <= ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало
			|			ТОГДА " + ОграничениеВРазмереММОТТекст + "
			|		ИНАЧЕ ""-""
			|	КОНЕЦ КАК ОграничениеПособия,")
		Иначе
			РасчетПособияТекст = СтрЗаменить(РасчетПособияТекст, "НЕОПРЕДЕЛЕНО КАК ОграничениеПособия,", """-""  КАК ОграничениеПособия,")
		КонецЕсли;
		
		СтруктураПоказателей = Неопределено;
		ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.РасчетСреднегоЗаработкаПособий2011(ЭтотОбъект, Ложь, СтруктураПоказателей);
		
		Запрос.УстановитьПараметр("Средний",Окр(СтруктураПоказателей.Средний,2));
		Запрос.УстановитьПараметр("ДоляММОТ", Мин(Выборка.Доля, 1));
		
		Запрос.Текст = РасчетПособияТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Если Выборка.Средний < Выборка.СреднийМРОТ И Выборка.РайонныйКоэффициентРФОрганизации > 1 Тогда
				СекцияРасчетПособияШапка.Параметры.УчетРК = " с учетом РК: " + Выборка.РайонныйКоэффициентРФОрганизации
			КонецЕсли;
		КонецЕсли;
		Выборка.Сбросить();
	КонецЕсли;
	
	ОбластьПрямоугольная = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, 1, ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы, ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы);
	НачалоНовогоФорматаСтрок = ТабДокумент.ВысотаТаблицы + 1;
	ТабДокумент.Область(НачалоНовогоФорматаСтрок, , НачалоНовогоФорматаСтрок + ПечатьРасчетаСреднегоЗаработкаОтчет.ВысотаТаблицы - 1, ).СоздатьФорматСтрок();
	// назначим ширину колонок у новой области формата строк
	Для Счетчик = 1 По ПечатьРасчетаСреднегоЗаработкаОтчет.ШиринаТаблицы Цикл
		ТабДокумент.Область(НачалоНовогоФорматаСтрок, Счетчик).ШиринаКолонки = ПечатьРасчетаСреднегоЗаработкаОтчет.Область(1, Счетчик).ШиринаКолонки;
	КонецЦикла;
	ТабДокумент.ВставитьОбласть(ОбластьПрямоугольная, ТабДокумент.Область(НачалоНовогоФорматаСтрок, 1));
	
	ТабДокумент.Вывести(СекцияРасчетПособияШапка);
	НачисленоВсего = 0;
	НачисленоФСС = 0;
	НачисленоРаботодателем = 0;
	Пока Выборка.Следующий() Цикл
		НачисленоВсего = НачисленоВсего + Выборка.Результат;
		НачисленоФСС = НачисленоФСС + Выборка.НачисленоФСС;
		НачисленоРаботодателем = НачисленоРаботодателем + Выборка.НачисленоРаботодателем;
		ЗаполнитьЗначенияСвойств(СекцияРасчетПособияСтрока.Параметры,Выборка);
		/////Вадим 27.03.2013 10:58:07
		Если РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам тогда
        	СекцияРасчетПособияСтрока.Параметры.ОграничениеПособия=СтруктураПоказателей.ВсегоЗаработка/730;
		Иначе
		    СекцияРасчетПособияСтрока.Параметры.ОграничениеПособия=СтруктураПоказателей.ЗаработокВсего/730;
		Конецесли;
  		////ВадимКонец
		ТабДокумент.Вывести(СекцияРасчетПособияСтрока);
	КонецЦикла;
	
	Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	СекцияРасчетПособияИтог.Параметры.НачисленоВсегоПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоВсего, Валюта);
	СекцияРасчетПособияИтог.Параметры.НачисленоФССПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоФСС, Валюта);
	СекцияРасчетПособияИтог.Параметры.НачисленоРаботодателемПрописью = ОбщегоНазначенияЗК.СформироватьСуммуПрописью(НачисленоРаботодателем, Валюта);
	СекцияРасчетПособияИтог.Параметры.НачисленоВсего = НачисленоВсего;
	СекцияРасчетПособияИтог.Параметры.НачисленоФСС = НачисленоФСС;
	СекцияРасчетПособияИтог.Параметры.НачисленоРаботодателем = НачисленоРаботодателем;
	ТабДокумент.Вывести(СекцияРасчетПособияИтог);
	Если ЗначениеЗаполнено(НДФЛсПособия) Тогда
		СекцияНДФЛ.Параметры.ВсегоБезНДФЛ = Макс(НачисленоВсего - НДФЛсПособия,0);
		ТабДокумент.Вывести(СекцияНДФЛ);
	КонецЕсли;
	СекцияПодписи.Параметры.ПериодРегистрации = ПериодРегистрации;
		/////Вадим 01.02.2013 13:33:55
		СекцияПодписи.Параметры.ДатаПодписи=Дата; 
 
 ////ВадимКонец
	ТабДокумент.Вывести(СекцияПодписи);

	Возврат	ТабДокумент
	
КонецФункции // ПечатьРасчетПособияКЛисткуНетрудоспособности2011()

Функция ПечатьСправкаКЛисткуНетрудоспособности2007() 
	
	Если Не Проведен Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Документ можно распечатать только после расчета и проведения!");
		Возврат Неопределено;
	КонецЕсли;
		
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("Сотрудник",			 Сотрудник);
	Запрос.УстановитьПараметр("ФизЛицо",			 Физлицо);
	Запрос.УстановитьПараметр("ДокументСсылка",		 Ссылка);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",	 ДатаНачалаСобытия);
	Запрос.УстановитьПараметр("ДатаДокумента",		 ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",		 ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаНарушенияРежима", ДатаНарушенияРежима);
	Запрос.УстановитьПараметр("ВидРасчета",			 ВидРасчета);
	Запрос.УстановитьПараметр("ВидРасчетаЗаСчетРаботодателя", ВидРасчетаЗаСчетРаботодателя);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",Организация);
	Запрос.Текст = ФормированиеПечатныхФормЗК.ПолучитьТекстЗапросаПоОтветственнымЛицам(
			"ДатаДокумента",
			"ОтветственноеЛицо В (ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель),ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер))
			|И СтруктурнаяЕдиница = &СтруктурнаяЕдиница");
	Запрос.Выполнить();
	
	ДанныеОДокументеТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА НачислениеПоБольничномуЛистуНачисления.ВидРасчета = &ВидРасчета
	|				ТОГДА НачислениеПоБольничномуЛистуНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаСчетФСС,
	|	СУММА(ВЫБОР
	|			КОГДА НачислениеПоБольничномуЛистуНачисления.ВидРасчета = &ВидРасчетаЗаСчетРаботодателя
	|				ТОГДА НачислениеПоБольничномуЛистуНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаСчетРаботодателя,
	|	СУММА(НачислениеПоБольничномуЛистуНачисления.Результат) КАК Начислено
	|ПОМЕСТИТЬ ВТНачислено
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛистуНачисления
	|ГДЕ
	|	НачислениеПоБольничномуЛистуНачисления.Ссылка = &ДокументСсылка
	|	И (НачислениеПоБольничномуЛистуНачисления.ВидРасчета = &ВидРасчета
	|			ИЛИ НачислениеПоБольничномуЛистуНачисления.ВидРасчета = &ВидРасчетаЗаСчетРаботодателя)
	|	И (НЕ НачислениеПоБольничномуЛистуНачисления.Сторно)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументБЛ.Организация.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	ДокументБЛ.ДатаНачалаОплаты,
	|	ДокументБЛ.ДатаОкончания,
	|	ДокументБЛ.НомерВходящегоДокумента,
	|	ДокументБЛ.СерияВходящегоДокумента,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|					И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ВЫБОР
	|						КОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.КодПоОКАТО <> """"
	|							ТОГДА ВЫБОР
	|									КОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.РайонныйКоэффициентРФ > 1
	|										ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.РайонныйКоэффициентРФ
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения.РайонныйКоэффициентРФ > 1
	|							ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения.РайонныйКоэффициентРФ
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|						ТОГДА ВЫБОР
	|								КОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|									ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					КОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|						ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ, 1) КАК РК,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|					И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ВЫБОР
	|						КОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.СокращенноеРабочееВремя
	|								И РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|								И РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|							ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ДлительностьРабочейНедели / РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			КОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СокращенноеРабочееВремя
	|					И РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|					И РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|				ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ДлительностьРабочейНедели / РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|			ИНАЧЕ 1
	|		КОНЕЦ, 1) * МинимальнаяОплатаТрудаРФСрезПоследних.Размер КАК ДоляМРОТ,
	|	ДокументБЛ.УсловияИсчисленияКод2,
	|	ДокументБЛ.УсловияИсчисленияКод1,
	|	ДокументБЛ.УсловияИсчисленияКод3,
	|	ДокументБЛ.СтажЛет КАК ЛетСтажа,
	|	ДокументБЛ.СтажМесяцев КАК МесяцевСтажа,
	|	ДокументБЛ.Сотрудник.Физлицо.ИНН КАК ИНН,
	|	ДокументБЛ.Сотрудник.Физлицо.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ДокументБЛ.Организация.ДополнительныйКодФСС КАК ДополнительныйКодФСС,
	|	ДокументБЛ.Организация.КодПодчиненностиФСС КАК КодПодчиненностиФСС,
	|	ДокументБЛ.Организация.РегистрационныйНомерФСС КАК РегистрационныйНомерФСС,
	|	ДокументБЛ.СтажБезНестраховыхПериодовЛет,
	|	ДокументБЛ.СтажБезНестраховыхПериодовСтажМесяцев,
	|	ДокументБЛ.ВыплатаЗаСчетФедеральногоБюджета,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ""V""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Основное,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ""V""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Совместительство,
	|	ЕСТЬNULL(Руководитель.НаименованиеОтветственногоЛица, """") КАК ФИОРуководителя,
	|	ЕСТЬNULL(Бухгалтер.НаименованиеОтветственногоЛица, """") КАК ФИОбухгалтера,
	|	НачисленоВДокументе.ЗаСчетФСС,
	|	НачисленоВДокументе.ЗаСчетРаботодателя,
	|	НачисленоВДокументе.Начислено
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК ДокументБЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислено КАК НачисленоВДокументе
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ.СрезПоследних(&ДатаНачалаСобытия, ) КАК МинимальнаяОплатаТрудаРФСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК Руководитель
	|		ПО (Руководитель.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК Бухгалтер
	|		ПО (Бухгалтер.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер))
	|ГДЕ
	|	ДокументБЛ.Ссылка = &ДокументСсылка";

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеПоБольничномуЛисту_ПечатьСправкаКЛисткуФормы2007года";
	
	Макет = Документы.НачислениеПоБольничномуЛисту.ПолучитьМакет("СправкаКЛисткуФормы2007года");
	
	Запрос.Текст = ДанныеОДокументеТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.СерияВходящегоДокумента, Макет, "Серия_", 4);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.НомерВходящегоДокумента, Макет, "Номер_", 9);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.НаименованиеОрганизации, Макет, "НаименованиеОрганизации_", 29);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.Основное, Макет, "Основное", 1);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.Совместительство, Макет, "Совместительство", 1);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.РегистрационныйНомерФСС, Макет, "РегистрационныйНомер_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.ДополнительныйКодФСС, Макет, "ДополнительныйКод_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.КодПодчиненностиФСС, Макет, "КодПодчиненности_", 5);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.ИНН, Макет, "ИНН_", 12);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.СтраховойНомерПФР, Макет, "СтраховойНомер_", 14);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(Выборка.ЛетСтажа < 10," ","") + Строка(Выборка.ЛетСтажа), Макет, "СтажЛет_", 2);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(Выборка.МесяцевСтажа < 10," ","") + Строка(Выборка.МесяцевСтажа), Макет, "СтажМесяцев_", 2);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(ПустаяСтрока(Выборка.УсловияИсчисленияКод1), "", Выборка.УсловияИсчисленияКод1) + ?(ПустаяСтрока(Выборка.УсловияИсчисленияКод2), "", Выборка.УсловияИсчисленияКод2) + ?(ПустаяСтрока(Выборка.УсловияИсчисленияКод3), "", Выборка.УсловияИсчисленияКод3), Макет, "УсловияИсчисленияКод_", 6);
	Если Выборка.ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов Тогда
		ЛетСтажа = 0;
		МесяцевСтажа = 0;
		ОбменСведениямиОПособияхСФСС.ПодсчитатьРазностьСтажейВГодахИМесяцах(Выборка.ЛетСтажа, Выборка.МесяцевСтажа, Выборка.СтажБезНестраховыхПериодовЛет,Выборка.СтажБезНестраховыхПериодовСтажМесяцев, ЛетСтажа, МесяцевСтажа);
		Если ЛетСтажа > 0 Или МесяцевСтажа > 0 Тогда
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(ЛетСтажа < 10," ","") + Строка(ЛетСтажа), Макет, "НестраховыеПериодыЛет_", 2);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(МесяцевСтажа < 10," ","") + Строка(МесяцевСтажа), Макет, "НестраховыеПериодыМесяцев_", 2);
		КонецЕсли;
	КонецЕсли;
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаНачалаОплаты,"ДФ=dd-MM-yyyy"), Макет, "ДатаНачалаОплаты_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаОкончания,"ДФ=dd-MM-yyyy"), Макет, "ДатаОкончания_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.ЗаСчетРаботодателя, 9), Макет, "ЗаСчетРаботодателя_", 9);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.ЗаСчетФСС, 9), Макет, "ЗаСчетФСС_", 9);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.Начислено, 9), Макет, "Начислено_", 9);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.ФИОруководителя, Макет, "ФИОруководителя_", 20);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.ФИОбухгалтера, Макет, "ФИОбухгалтера_", 20);
	
	
	СтруктураПоказателей = Неопределено;
	Если РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
		ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, 12, "", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, , Ложь, Ложь, СтруктураПоказателей);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(СтруктураПоказателей.ОбщийЗаработок, 2), 10), Макет, "СреднийЗаработок_", 10);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(СтруктураПоказателей.Средний, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
	Иначе
		ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.РасчетСреднегоЗаработкаПособий2011(ЭтотОбъект, Ложь, СтруктураПоказателей);
		Если Окр(СтруктураПоказателей.Средний, 2) * 730 > Мин(Выборка.ДоляМРОТ, 1) * 24 Тогда
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(СтруктураПоказателей.ЗаработокВсего, 10), Макет, "СреднийЗаработок_", 10);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(СтруктураПоказателей.Средний, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
		Иначе
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Мин(Выборка.ДоляМРОТ, 1) * 24, 10), Макет, "СреднийЗаработок_", 10);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(Мин(Выборка.ДоляМРОТ, 1) * 24 / 730, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
		КонецЕсли;
		
	КонецЕсли;

	ТабДокумент.Вывести(Макет);
	
	Возврат ТабДокумент
	
КонецФункции // ПечатьСправкаКЛисткуНетрудоспособности2007()

Функция ПечатьСправкаПоРасчетуСуммыДоплатыПособия() 
	
	Если Не Проведен Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Документ можно распечатать только после расчета и проведения!");
		Возврат Неопределено;
	КонецЕсли;
		
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КодПричиныПерерасчета) Тогда
		Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		Отказ = Ложь;
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан код причины перерасчета!", Отказ, Заголовок);
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;
		
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("Сотрудник",			Сотрудник);
	Запрос.УстановитьПараметр("ДокументСсылка",		Ссылка);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",	ДатаНачалаСобытия);
	Запрос.УстановитьПараметр("ДатаДокумента",		Дата);
	Запрос.УстановитьПараметр("ПерерассчитываемыйДокумент", ПерерассчитываемыйДокумент);
	Запрос.УстановитьПараметр("ВидРасчета",			ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ПерерассчитываемыйДокумент,"ВидРасчета"));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",	Организация);
	
	ДанныеОДокументеТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо.Наименование КАК НаименованиеФизлица,
	|	ОтветственныеЛицаСрезПоследних.Должность.Наименование КАК Должность,
	|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК Физлицо,
	|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница,
	|	ФизическиеЛица.Комментарий
	|ПОМЕСТИТЬ ВТОтветственныеЛица
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|			&ДатаДокумента,
	|			ОтветственноеЛицо В (ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель), ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер))
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛицаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ, ОтветственныеЛицаСрезПоследних.НаименованиеФизлица) КАК НаименованиеОтветственногоЛица,
	|	ОтветственныеЛицаСрезПоследних.Должность,
	|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
	|	ОтветственныеЛицаСрезПоследних.Физлицо,
	|	ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОтветственныеЛицаСрезПоследних.Комментарий
	|ПОМЕСТИТЬ ВТДанныеОбОтветственномЛице
	|ИЗ
	|	ВТОтветственныеЛица КАК ОтветственныеЛицаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&ДатаДокумента,
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						Ответственные.Физлицо
	|					ИЗ
	|						ВТОтветственныеЛица КАК Ответственные)) КАК ФИОФизЛицСрезПоследних
	|		ПО ОтветственныеЛицаСрезПоследних.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(НачислениеПоБольничномуЛистуНачисления.Результат) КАК ЗаСчетФСС
	|ПОМЕСТИТЬ ВТНачислено
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛистуНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|		ПО НачислениеПоБольничномуЛистуНачисления.Ссылка = НачислениеПоБольничномуЛисту.Ссылка
	|			И НачислениеПоБольничномуЛистуНачисления.ВидРасчета = НачислениеПоБольничномуЛисту.ВидРасчета
	|ГДЕ
	|	НачислениеПоБольничномуЛистуНачисления.Ссылка = &ПерерассчитываемыйДокумент
	|	И НЕ НачислениеПоБольничномуЛистуНачисления.Сторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументБЛ.Организация.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	ДокументБЛ.ДатаНачалаОплаты,
	|	ДокументБЛ.ДатаОкончания,
	|	ДокументБЛ.НомерВходящегоДокумента,
	|	ДокументБЛ.СерияВходящегоДокумента,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|					И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ВЫБОР
	|						КОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.КодПоОКТМО <> """"
	|								ИЛИ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.КодПоОКАТО <> """"
	|							ТОГДА ВЫБОР
	|									КОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.РайонныйКоэффициентРФ > 1
	|										ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения.РайонныйКоэффициентРФ
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения.РайонныйКоэффициентРФ > 1
	|							ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделениеЗавершения.РайонныйКоэффициентРФ
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.КодПоОКТМО <> """"
	|							ИЛИ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|						ТОГДА ВЫБОР
	|								КОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.РайонныйКоэффициентРФ > 1
	|									ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					КОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение.РайонныйКоэффициентРФ > 1
	|						ТОГДА РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ, 1) КАК РК,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|					И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ВЫБОР
	|						КОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.СокращенноеРабочееВремя
	|								И РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|								И РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|							ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ДлительностьРабочейНедели / РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			КОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СокращенноеРабочееВремя
	|					И РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|					И РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|				ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ДлительностьРабочейНедели / РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|			ИНАЧЕ 1
	|		КОНЕЦ, 1) * МинимальнаяОплатаТрудаРФСрезПоследних.Размер КАК ДоляМРОТ,
	|	ДокументБЛ.УсловияИсчисленияКод2,
	|	ДокументБЛ.УсловияИсчисленияКод1,
	|	ДокументБЛ.УсловияИсчисленияКод3,
	|	ДокументБЛ.КодПричиныПерерасчета,
	|	ДокументБЛ.СтажЛет КАК ЛетСтажа,
	|	ДокументБЛ.СтажМесяцев КАК МесяцевСтажа,
	|	ДокументБЛ.Фамилия + "" "" + ДокументБЛ.Имя + "" "" + ДокументБЛ.Отчество КАК ФИОСотрудника,
	|	ДокументБЛ.Сотрудник.Физлицо.ИНН КАК ИНН,
	|	ДокументБЛ.Сотрудник.Физлицо.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ДокументБЛ.Сотрудник.Физлицо.ДатаРождения КАК ДатаРождения,
	|	ДокументБЛ.Организация.ДополнительныйКодФСС КАК ДополнительныйКодФСС,
	|	ДокументБЛ.Организация.КодПодчиненностиФСС КАК КодПодчиненностиФСС,
	|	ДокументБЛ.Организация.РегистрационныйНомерФСС КАК РегистрационныйНомерФСС,
	|	ДокументБЛ.СтажБезНестраховыхПериодовЛет,
	|	ДокументБЛ.СтажБезНестраховыхПериодовСтажМесяцев,
	|	ДокументБЛ.ВыплатаЗаСчетФедеральногоБюджета,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ""V""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Основное,
	|	ВЫБОР
	|		КОГДА ДокументБЛ.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ""V""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Совместительство,
	|	ЕСТЬNULL(Руководитель.НаименованиеОтветственногоЛица, """") КАК ФИОРуководителя,
	|	ЕСТЬNULL(Бухгалтер.НаименованиеОтветственногоЛица, """") КАК ФИОбухгалтера,
	|	НачисленоВДокументе.ЗаСчетФСС
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК ДокументБЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислено КАК НачисленоВДокументе
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ.СрезПоследних(&ДатаНачалаСобытия, ) КАК МинимальнаяОплатаТрудаРФСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК Руководитель
	|		ПО (Руководитель.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК Бухгалтер
	|		ПО (Бухгалтер.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер))
	|ГДЕ
	|	ДокументБЛ.Ссылка = &ДокументСсылка";

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеПоБольничномуЛисту_ПечатьСправкаПоРасчетуСуммыДоплатыПособия";
	
	Макет = Документы.НачислениеПоБольничномуЛисту.ПолучитьМакет("СправкаПоРасчетуСуммыДоплатыПособия");
	
	Запрос.Текст = ДанныеОДокументеТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.КодПричиныПерерасчета, Макет, "КодПричиныПерерасчета_", 2);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.СерияВходящегоДокумента, Макет, "Серия_", 4);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.НомерВходящегоДокумента, Макет, "Номер_", 12);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.ФИОСотрудника, Макет, "ФИО_Получателя_", 42);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.НаименованиеОрганизации, Макет, "НаименованиеОрганизации_", 29);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.Основное, Макет, "Основное", 1);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.Совместительство, Макет, "Совместительство", 1);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.РегистрационныйНомерФСС, Макет, "РегистрационныйНомер_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.ДополнительныйКодФСС, Макет, "ДополнительныйКод_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.КодПодчиненностиФСС, Макет, "КодПодчиненности_", 5);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.ИНН, Макет, "ИНН_", 12);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.СтраховойНомерПФР, Макет, "СтраховойНомер_", 14);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаРождения,"ДФ=dd-MM-yyyy"), Макет, "ДатаРождения_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(Выборка.ЛетСтажа < 10," ","") + Строка(Выборка.ЛетСтажа), Макет, "СтажЛет_", 2);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(Выборка.МесяцевСтажа < 10," ","") + Строка(Выборка.МесяцевСтажа), Макет, "СтажМесяцев_", 2);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(ПустаяСтрока(Выборка.УсловияИсчисленияКод1), "", Выборка.УсловияИсчисленияКод1) + ?(ПустаяСтрока(Выборка.УсловияИсчисленияКод2), "", Выборка.УсловияИсчисленияКод2) + ?(ПустаяСтрока(Выборка.УсловияИсчисленияКод3), "", Выборка.УсловияИсчисленияКод3), Макет, "УсловияИсчисленияКод_", 6);
	Если Выборка.ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов Тогда
		ЛетСтажа = 0;
		МесяцевСтажа = 0;
		ОбменСведениямиОПособияхСФСС.ПодсчитатьРазностьСтажейВГодахИМесяцах(Выборка.ЛетСтажа, Выборка.МесяцевСтажа, Выборка.СтажБезНестраховыхПериодовЛет,Выборка.СтажБезНестраховыхПериодовСтажМесяцев, ЛетСтажа, МесяцевСтажа);
		Если ЛетСтажа > 0 Или МесяцевСтажа > 0 Тогда
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(ЛетСтажа < 10," ","") + Строка(ЛетСтажа), Макет, "НестраховыеПериодыЛет_", 2);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(?(МесяцевСтажа < 10," ","") + Строка(МесяцевСтажа), Макет, "НестраховыеПериодыМесяцев_", 2);
		КонецЕсли;
	КонецЕсли;
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаНачалаОплаты,"ДФ=dd-MM-yyyy"), Макет, "ДатаНачалаОплаты_", 10);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Формат(Выборка.ДатаОкончания,"ДФ=dd-MM-yyyy"), Макет, "ДатаОкончания_", 10);
	Если ЗначениеЗаполнено(Выборка.ЗаСчетФСС) Тогда
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Выборка.ЗаСчетФСС, 9), Макет, "ЗаСчетФСС_", 9);
	КонецЕсли;
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.ФИОруководителя, Макет, "ФИОруководителя_", 20);
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Выборка.ФИОбухгалтера, Макет, "ФИОбухгалтера_", 20);
	
	СтруктураПоказателей = Неопределено;
	Если РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
		ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, 12, "", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, , Ложь, Ложь, СтруктураПоказателей);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(СтруктураПоказателей.ОбщийЗаработок, 2), 10), Макет, "СреднийЗаработок_", 10);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(СтруктураПоказателей.Средний, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
	Иначе
		ПечатьРасчетаСреднегоЗаработкаОтчет = ФормированиеПечатныхФормЗК.РасчетСреднегоЗаработкаПособий2011(ЭтотОбъект, Ложь, СтруктураПоказателей);
		Если Окр(СтруктураПоказателей.Средний, 2) * 730 > Мин(Выборка.ДоляМРОТ, 1) * 24 Тогда
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(СтруктураПоказателей.ЗаработокВсего, 10), Макет, "СреднийЗаработок_", 10);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(СтруктураПоказателей.Средний, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
		Иначе
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Мин(Выборка.ДоляМРОТ, 1) * 24, 10), Макет, "СреднийЗаработок_", 10);
			ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СуммаДляПечатиПоБуквенно(Окр(Мин(Выборка.ДоляМРОТ, 1) * 24 / 730, 2), 9), Макет, "СреднийДневнойЗаработок_", 9);
		КонецЕсли;
		
	КонецЕсли;

	ТабДокумент.Вывести(Макет);
	
	Возврат ТабДокумент
	
КонецФункции // ПечатьСправкаПоРасчетуСуммыДоплатыПособия()

Функция СтруктураДанныхДляПечатиЗаявлений()

	СтруктураДанныхЗаявления = ОбменСведениямиОПособияхСФСС.СтруктураДанныхДляПечатиЗаявленийВФССОВыплатеПособия();
	
	Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
		СтруктураДанныхЗаявления.ВидПособия = Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды;
		Если ПоставленаНаУчетВРанниеСрокиБеременности Тогда
			СтруктураДанныхЗаявления.ВидПособия2 = Перечисления.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности
		КонецЕсли;
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве Тогда
		СтруктураДанныхЗаявления.ВидПособия = Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай;
	Иначе
		СтруктураДанныхЗаявления.ВидПособия = Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность
	КонецЕсли;
	//Blik 010716 в запрос добавлен среднедневной заработок 54103
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(НачислениеПоБольничномуЛистуРасчетСреднего2011.Заработок) КАК Заработок
	|ПОМЕСТИТЬ ВТСуммаСреднегоЗаработка
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.РасчетСреднего2011 КАК НачислениеПоБольничномуЛистуРасчетСреднего2011
	|ГДЕ
	|	НачислениеПоБольничномуЛистуРасчетСреднего2011.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(НачислениеПоБольничномуЛистуРасчетСреднего.ОтработаноДней) КАК ОтработаноДней
	|ПОМЕСТИТЬ ВТРасчетСреднего
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.РасчетСреднего КАК НачислениеПоБольничномуЛистуРасчетСреднего
	|ГДЕ
	|	НачислениеПоБольничномуЛистуРасчетСреднего.Ссылка = &Ссылка
	|	И НачислениеПоБольничномуЛистуРасчетСреднего.Сотрудник = НачислениеПоБольничномуЛистуРасчетСреднего.Ссылка.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизлица.Имя, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизлица.Имя, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизлица.Отчество, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизлица.Отчество, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ, ФизическиеЛица.Наименование) КАК ФИОРуководителя
	|ПОМЕСТИТЬ ВТРуководитель
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.ДатаНачалаСобытия,
	|	НачислениеПоБольничномуЛисту.Сотрудник,
	|	НачислениеПоБольничномуЛисту.Дата КАК ДатаПодачиЗаявления,
	|	НачислениеПоБольничномуЛисту.ПеречислятьПособиеПочтовымПереводом,
	|	НачислениеПоБольничномуЛисту.Банк,
	|	НачислениеПоБольничномуЛисту.НаименованиеБанка,
	|	НачислениеПоБольничномуЛисту.БИКБанка,
	|	НачислениеПоБольничномуЛисту.КоррСчетБанка,
	|	НачислениеПоБольничномуЛисту.НомерЛицевогоСчета,
	|	НачислениеПоБольничномуЛисту.НаличиеКартыМИР,
	|	НачислениеПоБольничномуЛисту.НомерКартыМИР,
	|	НачислениеПоБольничномуЛисту.АдресПочтовый КАК АдресПроживания,
	|	НачислениеПоБольничномуЛисту.АдресРегистрации,
	|	НачислениеПоБольничномуЛисту.Телефон,
	|	НачислениеПоБольничномуЛисту.Фамилия + "" "" + НачислениеПоБольничномуЛисту.Имя + "" "" + НачислениеПоБольничномуЛисту.Отчество КАК ФИОСотрудника,
	|	НачислениеПоБольничномуЛисту.Сотрудник.Физлицо.ДатаРождения КАК ДатаРождения,
	|	НачислениеПоБольничномуЛисту.Сотрудник.Физлицо.Пол КАК ПолСотрудника,
	|	НачислениеПоБольничномуЛисту.Сотрудник.ВидЗанятости КАК ВидЗанятостиСотрудника,
	|	НачислениеПоБольничномуЛисту.ВидДокумента КАК УдостоверениеЛичностиВид,
	|	НачислениеПоБольничномуЛисту.СерияДокумента КАК УдостоверениеЛичностиСерия,
	|	НачислениеПоБольничномуЛисту.НомерДокумента КАК УдостоверениеЛичностиНомер,
	|	НачислениеПоБольничномуЛисту.ДатаВыдачиДокумента КАК УдостоверениеЛичностиДата,
	|	НачислениеПоБольничномуЛисту.КемВыданДокумент КАК УдостоверениеЛичностиКемВыдан,
	|	НачислениеПоБольничномуЛисту.ДатаДействияДокумента КАК УдостоверениеЛичностиСрокДействия,
	|	НачислениеПоБольничномуЛисту.ПериодПростояС КАК ПериодПростояДатаНачало,
	|	НачислениеПоБольничномуЛисту.ПериодПростояПо КАК ПериодПростояДатаОкончание,
	|	НачислениеПоБольничномуЛисту.ПоставленаНаУчетВРанниеСрокиБеременности,
	|	НачислениеПоБольничномуЛисту.РасчетПособияИзТарифнойСтавки,
	|	ЕСТЬNULL(Руководитель.ФИОРуководителя, """") КАК ФИОРуководителя,
	|	НачислениеПоБольничномуЛисту.ДолжностьУполномоченного.Наименование КАК ДолжностьРуководителя,
	|	НачислениеПоБольничномуЛисту.Организация.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	НачислениеПоБольничномуЛисту.Организация.НаименованиеТерриториальногоОрганаФСС КАК НаименованиеТерриториальногоОрганаФСС,
	|	ВЫБОР
	|		КОГДА НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|				И НачислениеПоБольничномуЛисту.РасчетПоПравилам2010Года
	|				И НЕ НачислениеПоБольничномуЛисту.РасчетПособияИзТарифнойСтавки
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаявлениеПоМатеринству2010,
	|	ВЫБОР
	|		КОГДА НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|				И НачислениеПоБольничномуЛисту.РасчетПоПравилам2010Года
	|				И НЕ НачислениеПоБольничномуЛисту.РасчетПособияИзТарифнойСтавки
	|			ТОГДА НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаНачало
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ЗаявлениеПоМатеринству2010ДатаНачало,
	|	ВЫБОР
	|		КОГДА НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|				И НачислениеПоБольничномуЛисту.РасчетПоПравилам2010Года
	|				И НЕ НачислениеПоБольничномуЛисту.РасчетПособияИзТарифнойСтавки
	|			ТОГДА НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаОкончание
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ЗаявлениеПоМатеринству2010ДатаОкончание,
	|	ВЫБОР
	|		КОГДА НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|				И НачислениеПоБольничномуЛисту.РасчетПоПравилам2010Года
	|				И НЕ НачислениеПоБольничномуЛисту.РасчетПособияИзТарифнойСтавки
	|			ТОГДА ЕСТЬNULL(ДанныеРасчетаСреднего.ОтработаноДней, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЧислоКалендарныхДней,
	|	НачислениеПоБольничномуЛисту.Сотрудник.Физлицо.ИНН КАК ИННСотрудника,
	|	НачислениеПоБольничномуЛисту.Сотрудник.Физлицо.СтраховойНомерПФР КАК СНИЛССотрудника,
	|	НачислениеПоБольничномуЛисту.НаименованиеДокументаНаПроживание,
	|	НачислениеПоБольничномуЛисту.СерияДокументаНаПроживание,
	|	НачислениеПоБольничномуЛисту.НомерДокументаНаПроживание,
	|	НачислениеПоБольничномуЛисту.ДатаВыдачиДокументаНаПроживание,
	|	НачислениеПоБольничномуЛисту.НомерСправкиБеременной,
	|	НачислениеПоБольничномуЛисту.ДатаСправкиБеременной,
	|	НачислениеПоБольничномуЛисту.НомерВходящегоДокумента КАК НомерБольничного,
	|	НачислениеПоБольничномуЛисту.ДатаВыдачиБольничного,
	|	НачислениеПоБольничномуЛисту.СреднедневнойЗаработокНаПериодПростоя,
	|	НачислениеПоБольничномуЛисту.ТарифнаяСтавкаОклад,
	|	НачислениеПоБольничномуЛисту.ТелефонСоставителя,
	|	НачислениеПоБольничномуЛисту.Фамилия,
	|	НачислениеПоБольничномуЛисту.Имя,
	|	НачислениеПоБольничномуЛисту.Отчество,
	|	ВТСуммаСреднегоЗаработка.Заработок КАК СреднийЗаработок
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетСреднего КАК ДанныеРасчетаСреднего
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРуководитель КАК Руководитель
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммаСреднегоЗаработка КАК ВТСуммаСреднегоЗаработка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НачислениеПоБольничномуЛисту.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= ДатыРегистра.ДатаНачалаСобытия
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.СокращенноеРабочееВремя
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|						ТОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОГДА РаботникиОрганизаций.ГрафикРаботы.СокращенноеРабочееВремя
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|			ТОГДА РаботникиОрганизаций.ГрафикРаботы.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоляВремени
	|ПОМЕСТИТЬ ВТДанныеСотрудника
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДанныеРегистра.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|		ДанныеРегистра.Сотрудник КАК Сотрудник,
	|		МАКСИМУМ(РаботникиОрганизаций.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТДанныеДокумента КАК ДанныеРегистра
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПО ДанныеРегистра.ДатаНачалаСобытия >= РаботникиОрганизаций.Период
	|				И ДанныеРегистра.Сотрудник = РаботникиОрганизаций.Сотрудник
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистра.ДатаНачалаСобытия,
	|		ДанныеРегистра.Сотрудник) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ДатыРегистра.ПериодРегистра = РаботникиОрганизаций.Период
	|			И ДатыРегистра.Сотрудник = РаботникиОрганизаций.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.ДатаНачалаСобытия,
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.ДатаПодачиЗаявления,
	|	ДанныеДокумента.ПеречислятьПособиеПочтовымПереводом,
	|	ДанныеДокумента.Банк,
	|	ДанныеДокумента.НаименованиеБанка,
	|	ДанныеДокумента.БИКБанка,
	|	ДанныеДокумента.КоррСчетБанка,
	|	ДанныеДокумента.НомерЛицевогоСчета,
	|	ДанныеДокумента.НаличиеКартыМИР,
	|	ДанныеДокумента.НомерКартыМИР,
	|	ДанныеДокумента.АдресПроживания,
	|	ДанныеДокумента.АдресРегистрации,
	|	ДанныеДокумента.Телефон,
	|	ДанныеДокумента.ФИОСотрудника,
	|	ДанныеДокумента.ДатаРождения,
	|	ДанныеДокумента.ПолСотрудника,
	|	ДанныеДокумента.ВидЗанятостиСотрудника,
	|	ДанныеДокумента.УдостоверениеЛичностиВид,
	|	ДанныеДокумента.УдостоверениеЛичностиСерия,
	|	ДанныеДокумента.УдостоверениеЛичностиНомер,
	|	ДанныеДокумента.УдостоверениеЛичностиДата,
	|	ДанныеДокумента.УдостоверениеЛичностиКемВыдан,
	|	ДанныеДокумента.УдостоверениеЛичностиСрокДействия,
	|	ДанныеДокумента.ПериодПростояДатаНачало,
	|	ДанныеДокумента.ПериодПростояДатаОкончание,
	|	ДанныеДокумента.ПоставленаНаУчетВРанниеСрокиБеременности,
	|	ДанныеДокумента.ФИОРуководителя,
	|	ДанныеДокумента.ДолжностьРуководителя,
	|	ДанныеДокумента.НаименованиеОрганизации,
	|	ДанныеДокумента.НаименованиеТерриториальногоОрганаФСС,
	|	ДанныеДокумента.ЗаявлениеПоМатеринству2010,
	|	ДанныеДокумента.ЗаявлениеПоМатеринству2010ДатаНачало,
	|	ДанныеДокумента.ЗаявлениеПоМатеринству2010ДатаОкончание,
	|	ДанныеДокумента.ЧислоКалендарныхДней,
	|	ДанныеДокумента.ИННСотрудника,
	|	ДанныеДокумента.СНИЛССотрудника,
	|	ДанныеДокумента.НаименованиеДокументаНаПроживание,
	|	ДанныеДокумента.СерияДокументаНаПроживание,
	|	ДанныеДокумента.НомерДокументаНаПроживание,
	|	ДанныеДокумента.ДатаВыдачиДокументаНаПроживание,
	|	ДанныеДокумента.НомерСправкиБеременной,
	|	ДанныеДокумента.ДатаСправкиБеременной,
	|	ДанныеДокумента.НомерБольничного,
	|	ДанныеДокумента.ДатаВыдачиБольничного,
	|	ЕСТЬNULL(ДанныеСотрудника.ДоляВремени, 0) КАК ДоляВремени,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.РасчетПособияИзТарифнойСтавки
	|				И ЕСТЬNULL(ДанныеСотрудника.ДоляВремени, 0) > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеполноеРабочееВремя,
	|	ДанныеДокумента.ТарифнаяСтавкаОклад,
	|	ДанныеДокумента.СреднедневнойЗаработокНаПериодПростоя,
	|	ДанныеДокумента.ТелефонСоставителя,
	|	ДанныеДокумента.Фамилия,
	|	ДанныеДокумента.Имя,
	|	ДанныеДокумента.Отчество,
	|	ДанныеДокумента.СреднийЗаработок КАК СреднийЗаработок
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудника КАК ДанныеСотрудника
	|		ПО (ИСТИНА)";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ФизЛицо", Уполномоченный);
	Выборка = Запрос.Выполнить().Выбрать();
	Если  Выборка.Следующий() Тогда 
		ЗаполнитьЗначенияСвойств(СтруктураДанныхЗаявления, Выборка);
		ГодНачалаСобытия = Год(ДатаНачалаСобытия);
		ПервыйГод = ГодНачалаСобытия - 2;
		ВторойГод = ГодНачалаСобытия - 1;
		ПервыйГодРасчета = 0;
		ВторойГодРасчета = 0;
		Для каждого СтрокаТЧ Из ГодыРасчетаСреднего2011 Цикл
			Если СтрокаТЧ.НомерСтроки = 1 Тогда
				ПервыйГодРасчета = СтрокаТЧ.Год
			ИначеЕсли СтрокаТЧ.НомерСтроки = 2 Тогда
				ВторойГодРасчета = СтрокаТЧ.Год
			Иначе
				Прервать;
			КонецЕсли;
		КонецЦикла;
		СтруктураДанныхЗаявления.ЗаявлениеРаботникаОЗаменеКалендарныхГодов = ПервыйГод <> ПервыйГодРасчета И ЗначениеЗаполнено(ПервыйГодРасчета) Или ВторойГод <> ВторойГодРасчета И ЗначениеЗаполнено(ВторойГодРасчета);
		Если СтруктураДанныхЗаявления.ЗаявлениеРаботникаОЗаменеКалендарныхГодов Тогда
	
			Если ПервыйГодРасчета <> ПервыйГод Или ВторойГодРасчета <> ВторойГод Тогда
				Если ПервыйГодРасчета <> ПервыйГод И ВторойГодРасчета <> ПервыйГод Тогда
					СтруктураДанныхЗаявления.ПервыйГод = ПервыйГод - 2000;
				Иначе
					СтруктураДанныхЗаявления.ПервыйГод = ВторойГод - 2000;
				КонецЕсли;
				СтруктураДанныхЗаявления.ВторойГод = ПервыйГодРасчета - 2000;
				Если  ПервыйГодРасчета <> ПервыйГод И ВторойГодРасчета <> ПервыйГод И ПервыйГодРасчета <> ВторойГод И ВторойГодРасчета <> ВторойГод Тогда
					СтруктураДанныхЗаявления.ТретийГод = ВторойГод - 2000;
					СтруктураДанныхЗаявления.ЧетвертыйГод = ВторойГодРасчета - 2000;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		Если ДатаНачала < ДатаНачалаОплаты Тогда
			СтруктураДанныхЗаявления.ПособияНеНазначаютсяДатаНачало = ДатаНачала;
			СтруктураДанныхЗаявления.ПособияНеНазначаютсяДатаОкончание = НачалоДня(ДатаНачалаОплаты - 1);
		КонецЕсли;
	КонецЕсли;

	Возврат СтруктураДанныхЗаявления	

КонецФункции // СтруктураДанныхДляПечатиЗаявлений()

Функция СуммаДляПечатиПоБуквенно(Сумма, Длина)

	Возврат СтрЗаменить(Прав("                  " + Формат(Сумма, "ЧЦ=" + Длина + "; ЧДЦ=2; ЧРД=.; ЧН=' .  '; ЧГ=0"), Длина),".","р")	

КонецФункции // СуммаДляПечатиПоБуквенно()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	ПроверятьПроведенность = ИмяМакета <> "АнализСкидки" И ИмяМакета <> "СправкаЧистыйБланк" И ИмяМакета <> "ЗаявлениеЧистыйБланк";
	ПроверятьИзмененность = Лев(ИмяМакета,20) = "ЗаявлениеЧистыйБланк" Или Лев(ИмяМакета,28) = "ЗаявлениеВФССОВыплатеПособия";
	Если ПроверятьПроведенность И Не Проведен Тогда
		РаботаСДиалогами.ВывестиПредупреждение("Документ можно распечатать только после расчета и проведения!");
		Возврат Неопределено;
	ИначеЕсли ПроверятьИзмененность И Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат Неопределено;
	КонецЕсли;

	Результат = НачислениеПоБольничномуЛистуПереопределяемый.Печать(ИмяМакета, КоличествоЭкземпляров, НаПринтер, ЭтотОбъект);
	Если Результат <> Неопределено Тогда
		Возврат Результат
	КонецЕсли;
	
	Если ИмяМакета = "РасчетСреднегоЗаработка" Тогда
		ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
		ПериодРасчетаСреднегоЗаработка = 12;
		ОписаниеПериода = "с " + Формат(ДатаНачала,"ДФ=dd.MM.yyyy") + " по " + Формат(ДатаОкончания,"ДФ=dd.MM.yyyy");
		Если ПериодРегистрации >= ДатаЗакона213ФЗ И ДатаНачалаОплаты < ДатаЗакона213ФЗ Тогда // переходный период 2009-2010 годов
			СписокСоставляющихСреднегоЗаработка = Новый Массив(2); 
			СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
			СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
			Начало = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, ПериодРасчетаСреднегоЗаработка, ОписаниеПериода, Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, СписокСоставляющихСреднегоЗаработка);
			СписокСоставляющихСреднегоЗаработка = Новый Массив(2); 
			СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010;
			СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010;
			Продолжение = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, ПериодРасчетаСреднегоЗаработка, ОписаниеПериода, Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь, СписокСоставляющихСреднегоЗаработка,Ложь);
			
			Макет = ПолучитьОбщийМакет("РасчетСреднегоЗаработка");
			Секция = Макет.ПолучитьОбласть("ШапкаОсобая");
	        Секция.Параметры.ЗаголовокРаздела = "Расчет среднего заработка по правилам 2010 года";
			ТабДокумент = Новый ТабличныйДокумент;
			ТабДокумент.Вывести(Начало);
			ТабДокумент.Вывести(Секция);
			ТабДокумент.Вывести(Продолжение);
		ИначеЕсли ПериодРегистрации >= ДатаЗакона213ФЗ И ДатаНачалаСобытия < ДатаЗакона213ФЗ Тогда  // продолжение переходящего б/л, полностью в 2010 году
			СписокСоставляющихСреднегоЗаработка = Новый Массив(2); 
			СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010;
			СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010;
			ТабДокумент = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, ПериодРасчетаСреднегоЗаработка, ОписаниеПериода, Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь,СписокСоставляющихСреднегоЗаработка);
		Иначе 
			ТабДокумент = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачалаСобытия, ПериодРасчетаСреднегоЗаработка, ОписаниеПериода, Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС, Ложь);
		КонецЕсли;
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (расчет среднего заработка)");
	ИначеЕсли ИмяМакета = "РасчетСреднегоЗаработка2011" Тогда                                                                                                         
		ТабДокумент = ФормированиеПечатныхФормЗК.РасчетСреднегоЗаработкаПособий2011(ЭтотОбъект);
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (расчет среднего заработка)");
	ИначеЕсли ИмяМакета = "РасчетПособияКЛисткуНетрудоспособности2011" Тогда                                                                                                         
		ТабДокумент = ПечатьРасчетПособияКЛисткуНетрудоспособности2011();
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (расчет пособия к б/л образца 2011 г.)",,ТабДокумент);
	ИначеЕсли ИмяМакета = "ОборотЛисткаНетрудоспособности" Тогда                                                                                                         
		
		Результат = НачислениеПоБольничномуЛистуПереопределяемый.ПечатьОборотаБольничного(ЭтотОбъект);
		Если Результат <> Неопределено Тогда
			Возврат УниверсальныеМеханизмы.НапечататьДокумент(Результат, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (оборот листка нетрудоспособности)");
		КонецЕсли;
		
		Результат = ПечатьОборотаБольничного2010();
		Если Результат <> Неопределено Тогда
			Возврат УниверсальныеМеханизмы.НапечататьДокумент(Результат, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (оборот листка нетрудоспособности)");
		КонецЕсли;
		
		ТабДокумент = ПечатьОборотаБольничного2011();
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (оборот листка нетрудоспособности)",,ТабДокумент);
	ИначеЕсли ИмяМакета = "АнализСкидки" Тогда                                                                                                         
		ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
		Если ПериодРегистрации < ДатаЗакона213ФЗ Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Материальная помощь учитывается только с " + Формат(ДатаЗакона213ФЗ,"ДЛФ=DD") + "!");
			Возврат Неопределено;
		КонецЕсли;
		Если РасчетСреднего.Количество() = 0 Тогда  
			Если ЕстьРасчетыПоМесяцам() Тогда
				РаботаСДиалогами.ВывестиПредупреждение("Анализ учтенных сумм материальной помощи можно распечатать только после расчета!");
			Иначе
				РаботаСДиалогами.ВывестиПредупреждение("Отчет формируется только для пособий за 2010 год!");
			КонецЕсли;
			Возврат Неопределено;
		КонецЕсли;
		ТабДокумент = ФормированиеПечатныхФормЗК.АнализУчтеннойВРасчетеСреднегоСкидки(ЭтотОбъект);
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (анализ учтенных сумм скидки)",,ТабДокумент);
	ИначеЕсли ИмяМакета = "СправкаЧистыйБланк" Тогда                                                                                                         
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = ?(ЗначениеЗаполнено(ПерерассчитываемыйДокумент), "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеПоБольничномуЛисту_ПечатьСправкаПоРасчетуСуммыДоплатыПособия", "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеПоБольничномуЛисту_ПечатьСправкаКЛисткуНетрудоспособности2007");
		ИмяМакета = ?(ЗначениеЗаполнено(ПерерассчитываемыйДокумент), "СправкаПоРасчетуСуммыДоплатыПособия", "СправкаКЛисткуФормы2007года");
		ОписаниеФормы = ?(ЗначениеЗаполнено(ПерерассчитываемыйДокумент), " (справка по расчету суммы доплаты пособия, бланк)", " (справка к б/л образца 2007 г., бланк)");
		ТабДокумент.Вывести(Документы.НачислениеПоБольничномуЛисту.ПолучитьМакет(ИмяМакета));
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + ОписаниеФормы);
	ИначеЕсли ИмяМакета = "СправкаКЛисткуНетрудоспособности2007" Тогда                                                                                                         
		Если ЗначениеЗаполнено(ПерерассчитываемыйДокумент) Тогда
			ОписаниеФормы = " (справка по расчету суммы доплаты пособия)";
			ТабДокумент = ПечатьСправкаПоРасчетуСуммыДоплатыПособия();
		Иначе
			ОписаниеФормы = " (справка к б/л образца 2007 г.)";
			ТабДокумент = ПечатьСправкаКЛисткуНетрудоспособности2007();
		КонецЕсли;
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + ОписаниеФормы);
	ИначеЕсли Лев(ИмяМакета,20) = "ЗаявлениеЧистыйБланк" Тогда                                                                                                         
		ТабДокумент = ОбменСведениямиОПособияхСФСС.ПечатьЗаявлениеВФССОВыплатеПособия(ОбменСведениямиОПособияхСФСС.СтруктураДанныхДляПечатиЗаявленийВФССОВыплатеПособия(), ?(ЗначениеЗаполнено(ПерерассчитываемыйДокумент), "ЗаявлениеВФССОДоплатеПособия", "ЗаявлениеВФССОВыплатеПособия" + Прав(ИмяМакета,5)));
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, , , ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (бланк заявления)", , ТабДокумент);
	ИначеЕсли Лев(ИмяМакета,28) = "ЗаявлениеВФССОВыплатеПособия" Тогда                                                                                                         
		ТабДокумент = ОбменСведениямиОПособияхСФСС.ПечатьЗаявлениеВФССОВыплатеПособия(СтруктураДанныхДляПечатиЗаявлений(), ?(ЗначениеЗаполнено(ПерерассчитываемыйДокумент), "ЗаявлениеВФССОДоплатеПособия", ИмяМакета));
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, , , ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (заявление на пособие)", , ТабДокумент);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции // Печать()

Процедура НастроитьКолонкуВидаДохода(КолонкаТабличногоПоля) Экспорт

	ПоказыватьЕСН = ПериодРегистрации < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	Если ПоказыватьЕСН Тогда
		Описание = Новый ОписаниеТипов("СправочникСсылка.ДоходыЕСН");
		КолонкаТабличногоПоля.ТекстШапки = "Код для ЕСН";
	Иначе
		Описание = Новый ОписаниеТипов("СправочникСсылка.ДоходыПоСтраховымВзносам");
		КолонкаТабличногоПоля.ТекстШапки = "Вид дохода по страховым взносам";
	КонецЕсли;
	КолонкаТабличногоПоля.ЭлементУправления.ОграничениеТипа = Описание;

КонецПроцедуры

#КонецЕсли

Процедура Автозаполнение(Режим = Неопределено) Экспорт
	
	Если Режим = "ДанныеСотрудника" Тогда
		ЗаполнитьДанныеСотрудника()
	ИначеЕсли Режим = "ДанныеСтрахователя" Тогда
		ЗаполнитьДанныеОрганизации()
	Иначе	
		ЗаполнитьДанныеОрганизации();
		ЗаполнитьДанныеСотрудника();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтсканированныйДокумент() Экспорт

	ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	
	Если ЗначениеЗаполнено(ПервичныйБольничныйЛист) Тогда
		БылПервичныйБольничныйЛист = ПервичныйБольничныйЛист;
		ЗаполнитьПоПервичномуЛистку(ПервичныйБольничныйЛист);
		ПервичныйБольничныйЛист	= БылПервичныйБольничныйЛист;
	Иначе
		СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления;
		ВидРасчетаЗаСчетРаботодателя = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций, "ОплатаБолезниЗаСчетРаботодателя");
		ВидРасчета = ПолучитьВидРасчетаОтПричиныНетрудоспособности(ПричинаНетрудоспособности);
		Если ПроведениеРасчетов.ПособияПоОбязательномуСтрахованиюВыплачиваетФСС(ПериодРегистрации, Организация) Тогда
			Автозаполнение();
		КонецЕсли;
		ПрочитатьДанныеОЛьготах();
		ПрочитатьРазмерыПособия(Ложь);
		ДоплачиватьДоПолногоСреднегоЗаработка = Ложь;
		РасчетПоПравилам2010Года = Ложь;
		НеВыплачиватьПособие = Ложь;
		УчитыватьЗаработокПредыдущихСтрахователей = Ложь;
		Если ЗначениеЗаполнено(ДатаНачалаСобытия) Тогда
			ПериодРасчетаСреднегоЗаработкаНачало = ДобавитьМесяц(НачалоМесяца(ДатаНачалаСобытия), - 12);
			ПериодРасчетаСреднегоЗаработкаОкончание = НачалоМесяца(ДатаНачалаСобытия) - 1;
			ГодНачалаСобытия = Год(ДатаНачалаСобытия);
			ГодыРасчетаСреднего2011.Добавить().Год = ГодНачалаСобытия - 2;
			ГодыРасчетаСреднего2011.Добавить().Год = ГодНачалаСобытия - 1;
		КонецЕсли;
	КонецЕсли;
	
	РассчитатьДниКОплате();

КонецПроцедуры

// Заполняет документ по перерассчитываемому документу
// ИсходныйДокумент - тип ДокументОбъект.НачислениеПоБольничномуЛисту
//
Процедура ЗаполнитьПоПерерассчитываемомуДокументу(ИсходныйДокумент, Сотрудники = Неопределено) Экспорт
	
	ПерерассчитываемыйДокумент = ИсходныйДокумент.Ссылка;
 	ЗаполнитьЗначенияСвойств(ЭтотОбъект,ИсходныйДокумент,,
		"Проведен, Номер, Дата, ПометкаУдаления, ПерерассчитываемыйДокумент, ПериодРегистрации, Комментарий, Ответственный, ДатаВыплатыДохода"); // кроме указанных

	СкопироватьГодыРасчетаСреднего(ПерерассчитываемыйДокумент);
	
	Если ПроведениеРасчетов.ПособияПоОбязательномуСтрахованиюВыплачиваетФСС(ПериодРегистрации, Организация) И Не ПроведениеРасчетов.ПособияПоОбязательномуСтрахованиюВыплачиваетФСС(ИсходныйДокумент.ПериодРегистрации, Организация) Тогда
		Автозаполнение()
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоПерерассчитываемомуДокументу()

Процедура ЗаполнитьПоПервичномуЛистку(Основание) Экспорт 

	СкопироватьГодыРасчетаСреднего(Основание);
	
	СтрокаЗаполняемыхРеквизитов = ПолучитьСтрокуЗаполняемыхРеквизитов();
	ДанныеПервичногоЛистка = ОбщегоНазначенияЗК.ПолучитьЗначенияРеквизитов(Основание, СтрокаЗаполняемыхРеквизитов + ",ПериодРегистрации");
	
	// Скопируем параметры начисления
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеПервичногоЛистка, СтрокаЗаполняемыхРеквизитов);
	
	Если Не ЗначениеЗаполнено(ВидРасчетаЗаСчетРаботодателя) Тогда
		ВидРасчетаЗаСчетРаботодателя = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций, "ОплатаБолезниЗаСчетРаботодателя");
	КонецЕсли;
	Если Не ПроведениеРасчетов.ПособияПоОбязательномуСтрахованиюВыплачиваетФСС(ДанныеПервичногоЛистка.ПериодРегистрации, Организация) И ПроведениеРасчетов.ПособияПоОбязательномуСтрахованиюВыплачиваетФСС(ПериодРегистрации, Организация) Тогда
		Автозаполнение()
	КонецЕсли;
	
КонецПроцедуры

// Выполняет перерасчет по заданному списку физлиц
// Параметры
// 	Физлица - массив - ссылки на физлиц
// Возвращаемое значение
//  Нет
//
Процедура Перерассчитать(Физлица = Неопределено) Экспорт

	// проверим можно ли что-то делать с документом
	ОписаниеПричиныОтказа = "";
	Если ПроведениеРасчетов.ДокументНельзяИзменятьЗаднимЧислом(Ссылка, ОписаниеПричиныОтказа) Тогда
		ВызватьИсключение(ОписаниеПричиныОтказа);
	КонецЕсли;
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	НДФЛ.Очистить();
	Движения.НДФЛСведенияОДоходах.Очистить();
	Движения.НДФЛСведенияОДоходах.ОбменДанными.Загрузка = Истина; 
	Движения.НДФЛСведенияОДоходах.Записать();
	
	// Выполним полный перерасчет документа
	Рассчитать(Новый Структура("Начисления,РасчетСреднего",Истина,Истина), , Истина, ВыборкаПоШапкеДокумента);
	
	// Зафиксируем данные табличных частей после расчета
	Записать();

	НачислениеПоБольничномуЛистуПереопределяемый.ПереписатьПрочиеДвиженияПриПерерасчете(ЭтотОбъект, ВыборкаПоШапкеДокумента);
	
	// Удалим записи перерасчета по которым выполнен перерасчет
	ПроведениеРасчетов.УдалитьСведенияОПерерасчетеДокумента(Ссылка);
	
КонецПроцедуры // Перерассчитать()

Процедура ПрочитатьДанныеОЛьготах() Экспорт

	НачислениеПоБольничномуЛистуСервис.ПрочитатьДанныеОЛьготах(ЭтотОбъект);
	Если Не ЗначениеЗаполнено(ВыплатаЗаСчетФедеральногоБюджета) Или ВыплатаЗаСчетФедеральногоБюджета = Перечисления.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов Тогда
		Если УсловияИсчисленияКод1 = "43" Тогда
			УсловияИсчисленияКод1 = ""
		КонецЕсли;
		Если УсловияИсчисленияКод2 = "43" Тогда
			УсловияИсчисленияКод2 = ""
		КонецЕсли;
		Если УсловияИсчисленияКод3 = "43" Тогда
			УсловияИсчисленияКод3 = ""
		КонецЕсли;
	Иначе
		Если Найти(УсловияИсчисленияКод1 + "," + УсловияИсчисленияКод2 + "," + УсловияИсчисленияКод3,"43") = 0 Тогда
			ПродолжаемЗаполнять = Истина;
			Если ПродолжаемЗаполнять И Не ЗначениеЗаполнено(УсловияИсчисленияКод1) Тогда
				ПродолжаемЗаполнять = Ложь;
				УсловияИсчисленияКод1 = "43";
			КонецЕсли;
			Если ПродолжаемЗаполнять И Не ЗначениеЗаполнено(УсловияИсчисленияКод2) Тогда
				ПродолжаемЗаполнять = Ложь;
				УсловияИсчисленияКод2 = "43";
			КонецЕсли;
			Если ПродолжаемЗаполнять И Не ЗначениеЗаполнено(УсловияИсчисленияКод3) Тогда
				ПродолжаемЗаполнять = Ложь;
				УсловияИсчисленияКод3 = "43";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочитатьРазмерыПособия(ТолькоДополнительныеДанные, ГоловнаяОрганизация = Неопределено) Экспорт

	НачислениеПоБольничномуЛистуСервис.ПрочитатьРазмерыПособия(ЭтотОбъект, Истина, ТолькоДополнительныеДанные, ГоловнаяОрганизация)
	
КонецПроцедуры

// Процедура рассчитывает начисления по среднему и заполняет реквизит Результат таблицы начислений
// Параметры:
//		РассчитываемыеТаблицы  - структура из элементов, соответствующих табличным частям документа. 
//				Значение Истина для каждого из элементов структуры означает необходимость расчета 
//				соответствующей табличной части документа
//		РежимПерерасчета - булево - признак вызов расчета при перерасчете документа
Процедура Рассчитать(РассчитываемыеТаблицы, КомментироватьРасчет = Ложь, РежимПерерасчета = Ложь, ВыборкаПоШапкеДокумента = Неопределено) Экспорт
	
	//Перед вызовом процедуры документ должнен быть записан, движения должны быть удалены 
	
	Отказ = Ложь;
	
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		// позиционируем выборку
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если РассчитываемыеТаблицы.РасчетСреднего И ЗначениеЗаполнено(ПервичныйБольничныйЛист) Тогда
		
		Если КомментироватьРасчет Тогда
			КомментарийПродолжения = ОбщегоНазначенияЗК.КомментарийРасчета("Оплачивается листок нетрудоспособности, являющийся продолжением листка № " + ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ПервичныйБольничныйЛист,"НомерВходящегоДокумента"))					
		КонецЕсли;
		Если ЕстьРасчетыПоМесяцам() Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НачислениеПоБольничномуЛистуРасчетСреднего.НомерСтроки,
			|	НачислениеПоБольничномуЛистуРасчетСреднего.ВидРасчета,
			|	НачислениеПоБольничномуЛистуРасчетСреднего.БазовыйПериодНачало,
			|	НачислениеПоБольничномуЛистуРасчетСреднего.БазовыйПериодКонец,
			|	НачислениеПоБольничномуЛистуРасчетСреднего.Результат,
			|	НачислениеПоБольничномуЛистуРасчетСреднего.СкидкаПоСтраховымВзносам,
			|	НачислениеПоБольничномуЛистуРасчетСреднего.ОтработаноДней,
			|	НачислениеПоБольничномуЛистуРасчетСреднего.Сотрудник
			|ИЗ
			|	Документ.НачислениеПоБольничномуЛисту.РасчетСреднего КАК НачислениеПоБольничномуЛистуРасчетСреднего
			|ГДЕ
			|	НачислениеПоБольничномуЛистуРасчетСреднего.Ссылка = &ПервичныйБольничныйЛист";
			Запрос.УстановитьПараметр("ПервичныйБольничныйЛист", ПервичныйБольничныйЛист);
			ДанныеПервичногоДокумента = Запрос.Выполнить().Выгрузить();
			
			ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
			Если ПериодРегистрации >= ДатаЗакона213ФЗ И ДатаНачалаСобытия < ДатаЗакона213ФЗ Тогда // переходный период 2010 года
				НетСтрокЗаработка = ДанныеПервичногоДокумента.НайтиСтроки(Новый Структура("ВидРасчета",ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010)).Количество() = 0;
				НетСтрокПремий = ДанныеПервичногоДокумента.НайтиСтроки(Новый Структура("ВидРасчета",ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010)).Количество() = 0;
				Если НетСтрокЗаработка И НетСтрокПремий Тогда
					ВременнаяСтруктура = ПроцедурыПерсонифицированногоУчета.СкопироватьСтруктуруДанных(РассчитываемыеТаблицы);
					ВременнаяСтруктура.Начисления = Ложь;
					ПроведениеРасчетов.РассчитатьДокументСреднегоЗаработка(ЭтотОбъект, ВременнаяСтруктура, ВыборкаПоШапкеДокумента, РежимПерерасчета);
					ВременнаяТаблица = РасчетСреднего.Выгрузить();
					РасчетСреднего.Загрузить(ДанныеПервичногоДокумента);
					Строки213ФЗ = ВременнаяТаблица.НайтиСтроки(Новый Структура("ВидРасчета",ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010));
					Для каждого СтрокаРасчета Из Строки213ФЗ Цикл
						ЗаполнитьЗначенияСвойств(РасчетСреднего.Добавить(),СтрокаРасчета);
					КонецЦикла;
					Строки213ФЗ = ВременнаяТаблица.НайтиСтроки(Новый Структура("ВидРасчета",ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010));
					Для каждого СтрокаРасчета Из Строки213ФЗ Цикл
						ЗаполнитьЗначенияСвойств(РасчетСреднего.Добавить(),СтрокаРасчета);
					КонецЦикла;
				Иначе
					РасчетСреднего.Загрузить(ДанныеПервичногоДокумента);
				КонецЕсли;
			Иначе
				Если КомментироватьРасчет Тогда
					ОбщегоНазначенияЗК.КомментарийРасчета("Данные для расчета среднего заработка по правилам 2010 года скопированы из первичного документа", КомментарийПродолжения)					
				КонецЕсли;
				РасчетСреднего.Загрузить(ДанныеПервичногоДокумента);
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьРасчетыПоКалендарнымГодам() Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НачислениеПоБольничномуЛистуРасчетСреднего2011.НомерСтроки,
			|	НачислениеПоБольничномуЛистуРасчетСреднего2011.БазовыйПериодНачало,
			|	НачислениеПоБольничномуЛистуРасчетСреднего2011.РасчетныйГод,
			|	НачислениеПоБольничномуЛистуРасчетСреднего2011.Заработок,
			|	НачислениеПоБольничномуЛистуРасчетСреднего2011.Страхователь,
			|	НачислениеПоБольничномуЛистуРасчетСреднего2011.ДнейБолезниУходаЗаДетьми
			|ИЗ
			|	Документ.НачислениеПоБольничномуЛисту.РасчетСреднего2011 КАК НачислениеПоБольничномуЛистуРасчетСреднего2011
			|ГДЕ
			|	НачислениеПоБольничномуЛистуРасчетСреднего2011.Ссылка = &ПервичныйБольничныйЛист";
			Запрос.УстановитьПараметр("ПервичныйБольничныйЛист", ПервичныйБольничныйЛист);
			ДанныеПервичногоДокумента = Запрос.Выполнить().Выгрузить();
			
			ЕстьСтрокиЗаработка = ДанныеПервичногоДокумента.Количество() > 0;
			Если ЕстьСтрокиЗаработка Тогда
				Если КомментироватьРасчет Тогда
					ОбщегоНазначенияЗК.КомментарийРасчета("Данные для расчета среднего заработка по правилам 2011 года скопированы из первичного документа", КомментарийПродолжения)					
				КонецЕсли;
				РасчетСреднего2011.Загрузить(ДанныеПервичногоДокумента);
			Иначе
				Если КомментироватьРасчет Тогда
					ОбщегоНазначенияЗК.КомментарийРасчета("В первичном документе отсутствуют данные для расчета среднего заработка по правилам 2011 года", КомментарийПродолжения)					
				КонецЕсли;
				Если Не ПервичныйБольничныйЛист.ПолучитьОбъект().ЕстьРасчетыПоКалендарнымГодам() Тогда // в первичном б/л новый средний не рассчитывался - надо посчитать
					ПроведениеРасчетов.РасчетЗаработкаПособийС2011года(ЭтотОбъект,,,ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве, КомментироватьРасчет, ЭтоПособиеПоМатеринству() И ДатаСобытия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству() И ПериодРегистрации >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству())
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Записать();
		РассчитываемыеТаблицы.РасчетСреднего = Ложь;
	КонецЕсли;
	
	ОбнуляемыйВидРасчета = Неопределено;
	Если ПроведениеРасчетов.ПособияПоОбязательномуСтрахованиюВыплачиваетФСС(ВыборкаПоШапкеДокумента.ПериодРегистрации, ВыборкаПоШапкеДокумента.ОбособленноеПодразделение) Тогда
		ОбнуляемыйВидРасчета = ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ПерерассчитываемыйДокумент,"ВидРасчета");
	КонецЕсли;
	
	Если Не РассчитываемыеТаблицы.РасчетСреднего Или Не ЕстьРасчетыПоКалендарнымГодам() Тогда
		
		РезультатЗапроса = Неопределено;
		Если Не РассчитываемыеТаблицы.РасчетСреднего Тогда
			РезультатЗапроса = СформироватьЗапросПоРасчетСреднего();
		КонецЕсли;
		
		Отказ = Не ПроведениеРасчетов.РассчитатьДокументСреднегоЗаработка(ЭтотОбъект, РассчитываемыеТаблицы, ВыборкаПоШапкеДокумента, РежимПерерасчета, РезультатЗапроса, КомментироватьРасчет, ОбнуляемыйВидРасчета);
		
	Иначе
		
		// Создадим наборы записей используемых регистров 
		НаборОсновныеНачисления = РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций.СоздатьНаборЗаписей();
		НаборОсновныеНачисления.Отбор.Регистратор.Значение = Ссылка;
			
		НаборДополнительныеНачисления = РегистрыРасчета.ДополнительныеНачисленияРаботниковОрганизаций.СоздатьНаборЗаписей();
		НаборДополнительныеНачисления.Отбор.Регистратор.Значение = Ссылка;
		
		НаборРасчетСреднего = РегистрыРасчета.РасчетСреднегоЗаработка.СоздатьНаборЗаписей();
		НаборРасчетСреднего.Отбор.Регистратор.Значение = Ссылка;
		
		// Если это документ-исправление, тогда добавим сторно-записи из исправляемого документа.
		Если ЗначениеЗаполнено(ПерерассчитываемыйДокумент) Тогда
			ПроведениеРасчетов.СформироватьСторноЗаписиПоПерерассчитываемомуДокументу(ПерерассчитываемыйДокумент, ВыборкаПоШапкеДокумента, НаборОсновныеНачисления, НаборДополнительныеНачисления, , ОбнуляемыйВидРасчета);
		КонецЕсли;
		
		СформироватьДвиженияПоНачислениям(ВыборкаПоШапкеДокумента, НаборОсновныеНачисления);
		
		// Получим дополнительные записи, имеющие признак сторно, которые необходимо добавить 
		// в текущий набор для того, чтобы в результате сохранения получился максимальный 
		// фактический период действия
		ТаблицаСторноЗаписей = НаборОсновныеНачисления.ПолучитьДополнение();
		ТаблицаСторноЗаписей.Колонки.Удалить("ПериодРегистрации");
		ТаблицаСторноЗаписей.Колонки.ПериодРегистрацииСторно.Имя = "ПериодРегистрации";
		ТаблицаСторноЗаписей.Колонки.Удалить("ПериодДействияНачало");
		ТаблицаСторноЗаписей.Колонки.ПериодДействияНачалоСторно.Имя = "ПериодДействияНачало";
		ТаблицаСторноЗаписей.Колонки.Удалить("ПериодДействияКонец");
		ТаблицаСторноЗаписей.Колонки.ПериодДействияКонецСторно.Имя = "ПериодДействияКонец";
		ТаблицаСторноЗаписей.Колонки.Удалить("СторнируемыйДокумент");
		ТаблицаСторноЗаписей.Колонки.Регистратор.Имя = "СторнируемыйДокумент";
		Для каждого СтрокаСторно Из ТаблицаСторноЗаписей Цикл
			// Заполним записи в наборе записей регистра
			// и в табличной части
			
			// новая запись движений
			Движение = НаборОсновныеНачисления.Добавить();

			ЗаполнитьЗначенияСвойств(Движение,СтрокаСторно);
			
			// Свойства
			Движение.Сторно	= Истина;
			Движение.Авторасчет	= Истина;

		КонецЦикла;
		
		Если ТаблицаСторноЗаписей.Количество() <> 0 Тогда
			// если таблица сторно-записей не пустая, получим таблицу
			// начислений зависисяцих от тех начислений, которые зарегистрированы,
			
			ТаблицаОсновныхНачислений = ПроведениеРасчетов.ПолучитьТаблицуЗависимыхНачисленийОсновные(НаборОсновныеНачисления.Выгрузить());
			Для каждого СтрокаТаблицы Из ТаблицаОсновныхНачислений Цикл
				
				Если СтрокаТаблицы.Начислить > 0 Тогда
					// начисление зависит от сторнирующего, добавим не сторно
					Движение = НаборОсновныеНачисления.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
					Движение.СторнируемыйДокумент = Неопределено;
					Движение.Сторно	= Ложь;
					Движение.Авторасчет	= Истина;
				КонецЕсли;
				
				Если СтрокаТаблицы.Сторнировать > 0 Тогда
					
					Движение = НаборОсновныеНачисления.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
					Движение.Сторно	= Истина;
					Движение.Авторасчет	= Ложь;
					
					Движение = НаборОсновныеНачисления.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
					Движение.СторнируемыйДокумент = Неопределено;
					Движение.Сторно	= Ложь;
					Движение.Авторасчет	= Истина;
					
				КонецЕсли;	
				
			КонецЦикла;
			
			ТаблицаДополнительныхНачислений = ПроведениеРасчетов.ПолучитьТаблицуЗависимыхНачисленийДополнительные(ТаблицаСторноЗаписей);
			Для каждого СтрокаТаблицы Из ТаблицаДополнительныхНачислений Цикл
				
				Движение = НаборДополнительныеНачисления.Добавить();
				ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
				Движение.Сторно	= Истина;
				Движение.Авторасчет	= Ложь;
				
				Движение = НаборДополнительныеНачисления.Добавить();
				ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
				Движение.СторнируемыйДокумент = Неопределено;
				Движение.Сторно	= Ложь;
				Движение.Авторасчет	= Истина;	
				
			КонецЦикла;
			
		КонецЕсли;
		
		// расчет среднего по правилам 2010 года
		Если ЕстьРасчетыПоМесяцам() Тогда
			НаборОсновныеНачисления.Записать(Истина, Ложь, Истина, Ложь);
			ПроведениеРасчетовПереопределяемый.СформироватьИЗаписатьДанныеРасчетаСреднего("ОсновныеНачисленияРаботниковОрганизаций", Ссылка, НаборРасчетСреднего, КомментироватьРасчет);
			// перепишем записи расчета среднего заработка в документ
			РасчетСреднего.Загрузить(НаборРасчетСреднего.Выгрузить());
		КонецЕсли;

		// расчет среднего по правилам 2011 года
		ПроведениеРасчетов.РасчетЗаработкаПособийС2011года(ЭтотОбъект, ВыборкаПоШапкеДокумента, НаборРасчетСреднего, ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве, КомментироватьРасчет, ЭтоПособиеПоМатеринству() И ДатаСобытия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству() И ПериодРегистрации >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству());
		
		// рассчитываем записи начислений 
		Начисления.Очистить();
		Если РассчитываемыеТаблицы.Начисления Тогда
			
			ПроведениеРасчетовПереопределяемый.РассчитатьЗаписиРегистраРасчета("ОсновныеНачисленияРаботниковОрганизаций", НаборОсновныеНачисления, , , ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, ВыборкаПоШапкеДокумента.ОбособленноеПодразделение,,,,,КомментироватьРасчет);
			
			Если НаборДополнительныеНачисления.Количество() > 0 Тогда
				
				НаборОсновныеНачисления.Записать(Истина, Истина);
				
				ПроведениеРасчетовПереопределяемый.РассчитатьЗаписиРегистраРасчета("ДополнительныеНачисленияРаботниковОрганизаций", НаборДополнительныеНачисления, , , ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, ВыборкаПоШапкеДокумента.ОбособленноеПодразделение,,,,,КомментироватьРасчет);
				НаборДополнительныеНачисления.Записать(Истина, Истина);
				
				// повторный расчет на случай зависимости основных начислений от дополнительных
				ПроведениеРасчетовПереопределяемый.РассчитатьЗаписиРегистраРасчета("ОсновныеНачисленияРаботниковОрганизаций", НаборОсновныеНачисления, , , ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, ВыборкаПоШапкеДокумента.ОбособленноеПодразделение,,,,,КомментироватьРасчет);
				
			КонецЕсли;
			
			// перепишем записи начислений в документ
			ЗаписиНачислений = НаборОсновныеНачисления.Выгрузить();
			ЗаписиНачислений.Колонки.ПериодДействияНачало.Имя = "ДатаНачала";
			ЗаписиНачислений.Колонки.ПериодДействияКонец.Имя  = "ДатаОкончания";
			Начисления.Загрузить(ЗаписиНачислений);
			
			Если НаборДополнительныеНачисления.Количество() > 0 Тогда
				// перепишем записи начислений в документ
				ЗаписиНачислений = НаборДополнительныеНачисления.Выгрузить();
				ЗаписиНачислений.Колонки.БазовыйПериодНачало.Имя = "ДатаНачала";
				ЗаписиНачислений.Колонки.БазовыйПериодКонец.Имя = "ДатаОкончания";
				Для каждого СтрокаТаблицы Из ЗаписиНачислений Цикл
					НоваяСтрока = Начисления.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
				КонецЦикла;
			КонецЕсли;			
			
		КонецЕсли;

		Если ПроведениеРасчетовПереопределяемый.ЗаписыватьДвиженияПриРасчетеДокументаСреднегоЗаработка(РассчитываемыеТаблицы, РежимПерерасчета) Тогда
			
			Если НаборОсновныеНачисления.Модифицированность() Тогда
				НаборОсновныеНачисления.Записать(Истина, Ложь, Истина, Ложь);
			КонецЕсли;
			Если НаборДополнительныеНачисления.Модифицированность() Тогда
				НаборДополнительныеНачисления.Записать(Истина, Ложь, Истина, Ложь);
			КонецЕсли;
			Если НаборРасчетСреднего.Модифицированность() Тогда
				НаборРасчетСреднего.Записать(Истина, Ложь, Истина, Ложь);
			КонецЕсли;
			
			ПроведениеРасчетовПереопределяемый.ВыполнитьДополнительныеДействияПриРасчетеДокументаСреднегоЗаработка(ЭтотОбъект);
		КонецЕсли;
		
		Если Не РежимПерерасчета тогда
			
			// Удаляем движения для режима интерактивного расчета
			НаборОсновныеНачисления.Очистить();
			НаборОсновныеНачисления.Записать(Истина, Ложь, Истина, Ложь);
			
			Если НаборДополнительныеНачисления.Количество() > 0 Тогда
				НаборДополнительныеНачисления.Очистить();
				НаборДополнительныеНачисления.Записать(Истина, Ложь, Истина, Ложь);
			КонецЕсли;
			
			НаборРасчетСреднего.Очистить();
			НаборРасчетСреднего.Записать();
		КонецЕсли;
			
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		НДФЛсПособия = 0; // НДФЛ теперь рассчитывается со всех доходов
		
		Если РассчитываемыеТаблицы.Начисления Тогда
			Записать();
			// Отразим пособие в учете
			НачислениеПоБольничномуЛистуПереопределяемый.АвтозаполнениеПроводок(ЭтотОбъект, ВыборкаПоШапкеДокумента, Не РежимПерерасчета);
			РассчитатьНДФЛ(Ложь, Ложь, ВыборкаПоШапкеДокумента);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьДниКОплате() Экспорт

	Если ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаОкончания) Тогда
		Если ДатаНачалаСобытия <> ДатаНачалаОплаты Тогда
			ДнейКОплате = (ДатаОкончания - ДатаНачалаСобытия) / мДлинаСуток + 1;
			ОплаченоРанее = (ДатаНачалаОплаты - ДатаНачалаСобытия) / мДлинаСуток;
		Иначе
			ДнейКОплате = (ДатаОкончания - ДатаНачалаОплаты) / мДлинаСуток + 1;
			ОплаченоРанее = 0;
		КонецЕсли;
		
		// учтем ограничение периода оплаты по одному страховому случаю
		Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании Тогда
			ДнейОплаты = Макс(Мин(ДнейКОплате, 24) - ОплаченоРанее,0) // п.2 ст.6 Федерального закона от 29 декабря 2006 г. № 255-ФЗ
		ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым Тогда
			ДнейОплаты = Макс(Мин(ДнейКОплате, 7) - ОплаченоРанее,0) // пп. 6 п.5 ст.6 Федерального закона от 29 декабря 2006 г. № 255-ФЗ
		ИначеЕсли СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетАмбулаторно
			Или СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетВСтационаре Тогда
			ДнейОплаты = Макс(Мин(ДнейКОплате, 15) - ОплаченоРанее,0) // пп. 2 п.5 ст.6 Федерального закона от 29 декабря 2006 г. № 255-ФЗ
		Иначе
			ДнейОплаты = Макс(ДнейКОплате - ОплаченоРанее,0)
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Процедура рассчитывает НДФЛ
// и заполняет реквизиты табличной части
//
Процедура РассчитатьНДФЛ(КомментироватьРасчет = Ложь, ПроводитьПроверки = Истина, ВыборкаПоШапкеДокумента = Неопределено) Экспорт
	
	Отказ = Ложь;
	
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		// Получим реквизиты шапки из запроса
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		// позиционируем выборку
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	
	Если ПроводитьПроверки Тогда

		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ);

		ПроверятьМестоРаботы = НачислениеПоБольничномуЛистуПереопределяемый.ПроверятьМестоРаботы(ВыборкаПоШапкеДокумента);
		ВыборкаПоНачислениям = СформироватьЗапросПоНачислениям(ВыборкаПоШапкеДокумента).Выбрать();
		Пока ВыборкаПоНачислениям.Следующий() Цикл
			ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, Отказ, "", ПроверятьМестоРаботы);
		КонецЦикла;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	НачислениеПоБольничномуЛистуПереопределяемый.ВыполнитьПрочиеДвиженияДокумента(ЭтотОбъект, ВыборкаПоШапкеДокумента, Отказ, "");
	ДоходыИзДокумента = Движения.НДФЛСведенияОДоходах.Выгрузить();
	Для каждого НаборЗаписей Из Движения Цикл
		НаборЗаписей.Очистить()
	КонецЦикла;
	
	СтруктураДанныхДляПромежуточногоРасчета = ПроведениеРасчетов.ДанныеДляПромежуточногоРасчетаНДФЛ(ВыборкаПоШапкеДокумента.Физлицо, ВыборкаПоШапкеДокумента);
	
	// Составим текст запроса для выбора списка физлиц, по которым надо считать НДФЛ
	СписокФизлицТекст = 
	"ВЫБРАТЬ
	|	&Физлицо КАК Физлицо";
	ДополнительныеПараметрыЗапросаНДФЛ = Новый Структура("Физлицо", ВыборкаПоШапкеДокумента.Физлицо);
	
	//Blik 070617 66417 н 
	Если ВыборкаПоШапкеДокумента.Физлицо.ПРГ_НеНачислятьНДФЛ Тогда
		ДанныеНДФЛ = Неопределено;	
	Иначе
		// получение результата НДФЛ по ставке 13 процентов
		ДанныеНДФЛ = ПроведениеРасчетов.ПолучитьДанныеНДФЛПоРегистратору(Неопределено, Неопределено, ПериодРегистрации, Организация, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, Ссылка, СписокФизлицТекст, ДополнительныеПараметрыЗапросаНДФЛ, Ложь, КомментироватьРасчет, Ложь, ДоходыИзДокумента, СтруктураДанныхДляПромежуточногоРасчета.Налоги, СтруктураДанныхДляПромежуточногоРасчета.Вычеты, Истина);
	КонецЕсли; //Blik 070617 66417 к

	Если ДанныеНДФЛ <> Неопределено Тогда
		
		МесяцыПолученияДохода = Новый Массив;
		Для каждого СтрокаТЗ Из ДоходыИзДокумента Цикл
			МесяцыПолученияДохода.Добавить(НачалоМесяца(СтрокаТЗ.Период));
		КонецЦикла;
		
		ПроведениеРасчетов.ВписатьПромежуточныйНДФЛвДокумент(НДФЛ, ДанныеНДФЛ, ВыборкаПоШапкеДокумента.ДатаВыплатыДохода, МесяцыПолученияДохода);
		
		ПроведениеРасчетовПереопределяемый.ВыполнитьДополнительныеДействияПриРасчетеНДФЛ(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует записи регистра "ОсновныеНачисленияРаботниковОрганизаций" по данным шапки документа
//
Процедура СформироватьДвиженияПоНачислениям(ВыборкаПоШапкеДокумента, НаборОсновныеНачисления) Экспорт
	
	СтрокаСвойствИзДокумента = "ПериодРегистрации,Сотрудник,ФизЛицо,Организация,ОбособленноеПодразделение,ДатаНачалаСобытия,ПериодРасчетаСреднегоЗаработкаНачало,ПериодРасчетаСреднегоЗаработкаОкончание";
	
	ДатаНачалаСобытия = ВыборкаПоШапкеДокумента.ДатаНачалаСобытия;
	ДатаОкончанияОплаты = ВыборкаПоШапкеДокумента.ДатаНачалаОплаты + (ВыборкаПоШапкеДокумента.ДнейОплаты - 1) * мДлинаСуток;
	БЛБезОплаты = ?(ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам, ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезниПоБеременности, ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезни);
	ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	
	// в зависимости от причины нетрудоспособности оплачивается разное количество дней; процент оплаты также меняется
	ТаблицаИнтерваловОплаты = ЗаполнитьТаблицуИнтервалов(ДатаНачалаСобытия, ВыборкаПоШапкеДокумента.ВидРасчета, ВыборкаПоШапкеДокумента.ПериодРегистрации, ВыборкаПоШапкеДокумента.ВидРасчетаЗаСчетРаботодателя);
	// таблица значений с колонками:  Месяц, ГрафикРаботы, ГрафикРаботыНорма
	ГрафикиСотрудникаПоМесяцам = ПолучитьГрафикРаботыСотрудника(ВыборкаПоШапкеДокумента);
	ГрафикиСотрудникаПоМесяцам.Индексы.Добавить("Месяц");
	ЕстьДанныеОСотруднике = ГрафикиСотрудникаПоМесяцам.Количество() > 0;
	Если Не ЕстьДанныеОСотруднике Тогда
		СтрокаСвойствИзДокумента = СтрокаСвойствИзДокумента + ", ГрафикРаботы, ВидУчетаВремени, ПодразделениеОрганизации"
	КонецЕсли;
	СтруктураПоиска = Новый Структура("Месяц");
	
	Если ДатаНачала < ДатаНачалаОплаты Тогда
		
		ТекущаяДатаНачала = ДатаНачала;
		ВременнаяДатаОкончания = НачалоДня(ДатаНачалаОплаты - 1);
		ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачала), ВременнаяДатаОкончания);
		Пока ТекущаяДатаНачала <= ТекущаяДатаОкончания Цикл
			
			Если ЕстьДанныеОСотруднике Тогда
				
				СтруктураПоиска.Месяц = НачалоМесяца(ТекущаяДатаНачала);
				Для каждого ДанныеОГрафиках Из ГрафикиСотрудникаПоМесяцам.НайтиСтроки(СтруктураПоиска) Цикл
					
					// строка движений
					Движение = НаборОсновныеНачисления.Добавить();
					
					ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,СтрокаСвойствИзДокумента);
					
					// заполнение графиков работы
					ЗаполнитьЗначенияСвойств(Движение,ДанныеОГрафиках); // ГрафикРаботы, ГрафикРаботыНорма, ВидУчетаВремени, ПодразделениеОрганизации 
					
					// Свойства
					Движение.ПериодДействияНачало		= НачалоДня(ТекущаяДатаНачала);
					Движение.ПериодДействияКонец		= КонецДня(ТекущаяДатаОкончания);
					Движение.ВидРасчета					= БЛБезОплаты;
					
					// Реквизиты
					Движение.Авторасчет					= Истина;
					
				КонецЦикла;
				
			Иначе
				
				// строка движений
				Движение = НаборОсновныеНачисления.Добавить();
				
				ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,СтрокаСвойствИзДокумента);
				
				// Свойства
				Движение.ПериодДействияНачало		= НачалоДня(ТекущаяДатаНачала);
				Движение.ПериодДействияКонец		= КонецДня(ТекущаяДатаОкончания);
				Движение.ВидРасчета					= БЛБезОплаты;
				
				// Реквизиты
				Движение.Авторасчет					= Истина;
				
			КонецЕсли;
			
			ТекущаяДатаНачала = ТекущаяДатаОкончания + 1;
			ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачала), ВременнаяДатаОкончания);				
			
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого ИнтервалОплаты Из ТаблицаИнтерваловОплаты Цикл
		
		НомерИнтервалаОплаты = ТаблицаИнтерваловОплаты.Индекс(ИнтервалОплаты);
		
		Если ИнтервалОплаты.Начало > ДатаОкончания Тогда
			Продолжить;
		КонецЕсли;
		Если НомерИнтервалаОплаты < 2 и ТаблицаИнтерваловОплаты[НомерИнтервалаОплаты + 1].Начало < ДатаНачалаОплаты Тогда
			Продолжить;
		КонецЕсли;
		
		ОкончаниеИнтервалаОплаты = ?(НомерИнтервалаОплаты = 2, ДатаОкончания, Мин(ТаблицаИнтерваловОплаты[НомерИнтервалаОплаты + 1].Начало - мДлинаСуток,ДатаОкончания));
		
		ТекущаяДатаНачалаОплаты = Макс(ИнтервалОплаты.Начало, ДатаНачалаОплаты);
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаНарушенияРежима) Или ВыборкаПоШапкеДокумента.ДатаНарушенияРежима <= ТекущаяДатаНачалаОплаты Тогда
			Если ДатаОкончанияОплаты < ТекущаяДатаНачалаОплаты Тогда
				ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачалаОплаты), ОкончаниеИнтервалаОплаты);
			Иначе
				ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачалаОплаты), ДатаОкончанияОплаты, ОкончаниеИнтервалаОплаты);
			КонецЕсли;
		Иначе 
			Если ДатаОкончанияОплаты < ТекущаяДатаНачалаОплаты Тогда
				ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачалаОплаты), ОкончаниеИнтервалаОплаты, ВыборкаПоШапкеДокумента.ДатаНарушенияРежима - 1);
			Иначе
				ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачалаОплаты), ДатаОкончанияОплаты, ОкончаниеИнтервалаОплаты, ВыборкаПоШапкеДокумента.ДатаНарушенияРежима - 1);
			КонецЕсли;
		КонецЕсли;
		
		Пока ТекущаяДатаНачалаОплаты <= ТекущаяДатаОкончания Цикл
			
			СчитаемПоПравиламЗакона213ФЗ = ВыборкаПоШапкеДокумента.ПериодРегистрации >= ДатаЗакона213ФЗ И НачалоДня(ТекущаяДатаНачалаОплаты) >= ДатаЗакона213ФЗ;
			ВариантАлгоритмаРасчета = ПолучитьВариантАлгоритмаРасчета(ВыборкаПоШапкеДокумента, СчитаемПоПравиламЗакона213ФЗ);	
			
			Если ЕстьДанныеОСотруднике Тогда
				СтруктураПоиска.Месяц = НачалоМесяца(ТекущаяДатаНачалаОплаты);
				Для каждого ДанныеОГрафиках Из ГрафикиСотрудникаПоМесяцам.НайтиСтроки(СтруктураПоиска) Цикл
					
					
					// строка движений
					Движение = НаборОсновныеНачисления.Добавить();
					
					ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,СтрокаСвойствИзДокумента);
					
					// заполнение графиков работы
					ЗаполнитьЗначенияСвойств(Движение,ДанныеОГрафиках); // ГрафикРаботы, ГрафикРаботыНорма, ВидУчетаВремени, ПодразделениеОрганизации 
					
					// Свойства
					Движение.ПериодДействияНачало		= НачалоДня(ТекущаяДатаНачалаОплаты);
					Движение.ПериодДействияКонец		= КонецДня(ТекущаяДатаОкончания);
					Если ДанныеОГрафиках.ВидЗанятостиСотрудника = Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство Тогда
						Движение.ВидРасчета				= БЛБезОплаты;
					Иначе
						Движение.ВидРасчета				= ?(Движение.ПериодДействияНачало <= ДатаОкончанияОплаты,ИнтервалОплаты.Расчет,БЛБезОплаты);
					КонецЕсли;
					
					// Реквизиты
					Если СчитаемПоПравиламЗакона213ФЗ Тогда
						Движение.Показатель1				= ПроцентОплатыСУчетомЛьгот(ВыборкаПоШапкеДокумента, ИнтервалОплаты.ПроцентОплаты);
						Движение.Показатель2				= ?(ВыборкаПоШапкеДокумента.ПрименятьЛьготыПриНачисленииПособия, ИнтервалОплаты.ПроцентОплаты, 0);
					Иначе
						Движение.Показатель1				= ИнтервалОплаты.ПроцентОплаты;
						НачислениеПоБольничномуЛистуПереопределяемый.УточнитьПроцентОплаты(Движение, ВыборкаПоШапкеДокумента, ТекущаяДатаНачалаОплаты, ИнтервалОплаты);
					КонецЕсли;
					
					Если Движение.ПериодДействияНачало > ДатаОкончанияОплаты Тогда
						Движение.Показатель1					= 0;
						Движение.Показатель2					= 0;
					КонецЕсли;
					
					Движение.ВариантАлгоритмаРасчета	= ВариантАлгоритмаРасчета;
					Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаНарушенияРежима) И Движение.ПериодДействияНачало >= ВыборкаПоШапкеДокумента.ДатаНарушенияРежима Тогда
						Если СчитаемПоПравиламЗакона213ФЗ Тогда
							Если РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
								Движение.ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйВ2011годуКакВ2010мСОграничениемВРазмереММОТ;
							Иначе
								Движение.ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйСОграничениемВРазмереММОТ;
							КонецЕсли;
						Иначе
							НачислениеПоБольничномуЛистуПереопределяемый.УточнитьВариантАлгоритмаРасчетаПриНарушенииРежима(ВыборкаПоШапкеДокумента, Движение);
						КонецЕсли;
					КонецЕсли;
					
					Движение.Авторасчет					= Истина;
				
				КонецЦикла;
				        
			Иначе
				
				// строка движений
				Движение = НаборОсновныеНачисления.Добавить();
				
				ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,СтрокаСвойствИзДокумента);
				
				// Свойства
				Движение.ПериодДействияНачало		= НачалоДня(ТекущаяДатаНачалаОплаты);
				Движение.ПериодДействияКонец		= КонецДня(ТекущаяДатаОкончания);
				Движение.ВидРасчета				    = ?(Движение.ПериодДействияНачало <= ДатаОкончанияОплаты,ИнтервалОплаты.Расчет,БЛБезОплаты);
				
				// Реквизиты
				Если СчитаемПоПравиламЗакона213ФЗ Тогда
					Движение.Показатель1				= ПроцентОплатыСУчетомЛьгот(ВыборкаПоШапкеДокумента, ИнтервалОплаты.ПроцентОплаты);
					Движение.Показатель2				= ?(ВыборкаПоШапкеДокумента.ПрименятьЛьготыПриНачисленииПособия, ИнтервалОплаты.ПроцентОплаты, 0);
				Иначе
					Движение.Показатель1				= ИнтервалОплаты.ПроцентОплаты;
					НачислениеПоБольничномуЛистуПереопределяемый.УточнитьПроцентОплаты(Движение, ВыборкаПоШапкеДокумента, ТекущаяДатаНачалаОплаты, ИнтервалОплаты);
				КонецЕсли;
				Если Движение.ПериодДействияНачало > ДатаОкончанияОплаты Тогда
					Движение.Показатель1					= 0;
					Движение.Показатель2					= 0;
				КонецЕсли;
				Движение.ВариантАлгоритмаРасчета	= ВариантАлгоритмаРасчета;
				Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаНарушенияРежима) И Движение.ПериодДействияНачало >= ВыборкаПоШапкеДокумента.ДатаНарушенияРежима Тогда
					Если СчитаемПоПравиламЗакона213ФЗ Тогда
						Если РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
							Движение.ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйВ2011годуКакВ2010мСОграничениемВРазмереММОТ;
						Иначе
							Движение.ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйСОграничениемВРазмереММОТ;
						КонецЕсли;
					Иначе
						НачислениеПоБольничномуЛистуПереопределяемый.УточнитьВариантАлгоритмаРасчетаПриНарушенииРежима(ВыборкаПоШапкеДокумента, Движение);
					КонецЕсли;
				КонецЕсли;
				Движение.Авторасчет					= Истина;
				        
			КонецЕсли;
			
			ТекущаяДатаНачалаОплаты = КонецДня(ТекущаяДатаОкончания) + 1;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаНарушенияРежима) Или ВыборкаПоШапкеДокумента.ДатаНарушенияРежима <= ТекущаяДатаНачалаОплаты Тогда
				Если ДатаОкончанияОплаты < ТекущаяДатаНачалаОплаты Тогда
					ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачалаОплаты), ОкончаниеИнтервалаОплаты);
				Иначе
					ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачалаОплаты), ДатаОкончанияОплаты, ОкончаниеИнтервалаОплаты);
				КонецЕсли;
			Иначе 
				Если ДатаОкончанияОплаты < ТекущаяДатаНачалаОплаты Тогда
					ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачалаОплаты), ОкончаниеИнтервалаОплаты, ВыборкаПоШапкеДокумента.ДатаНарушенияРежима - 1);
				Иначе
					ТекущаяДатаОкончания = Мин(КонецМесяца(ТекущаяДатаНачалаОплаты), ДатаОкончанияОплаты, ОкончаниеИнтервалаОплаты, ВыборкаПоШапкеДокумента.ДатаНарушенияРежима - 1);
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;

	Если ДоплачиватьДоПолногоСреднегоЗаработка Тогда
		ВременнаяТаблица = НаборОсновныеНачисления.Выгрузить();
		Если ПроведениеРасчетов.ПособияПоОбязательномуСтрахованиюВыплачиваетФСС(ПериодРегистрации, Организация) Тогда
			СтрокиОсновногоНачисления = ВременнаяТаблица.НайтиСтроки(Новый Структура("Сторно, ВидРасчета",Ложь, ВидРасчетаЗаСчетРаботодателя));
		Иначе
			СтрокиОсновногоНачисления = ВременнаяТаблица.НайтиСтроки(Новый Структура("Сторно",Ложь));
		КонецЕсли;
		Для каждого СуществующееДвижение Из СтрокиОсновногоНачисления Цикл
			Если СуществующееДвижение.Сотрудник <> ВыборкаПоШапкеДокумента.Сотрудник Тогда // внутренних совместителей пропускаем
				Продолжить;
			КонецЕсли;
			Движение = НаборОсновныеНачисления.Добавить();
			ЗаполнитьЗначенияСвойств(Движение,СуществующееДвижение,,"Показатель1, Показатель2, ВидРасчета");
		    Движение.ВидРасчета = ВидРасчетаДоплаты;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // СформироватьДвиженияПоНачислениям()

// Возвращает количество дней, оплачиваемых работодателем
//
// Параметры
//  ПериодРегистрации - дата - период регистрации документа
//
// Возвращаемое значение:
//   Число
//
Функция ДниОплачиваемыеРаботодателем(ПериодРегистрации) Экспорт

	Если ПериодРегистрации < ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования() Тогда
		Возврат 2
	Иначе
		Возврат 3
	КонецЕсли;

КонецФункции // ДниОплачиваемыеРаботодателем()

// Формирует таблицу значений, описывающую размеры выплаты пособия по периодам
//
Функция ЗаполнитьТаблицуИнтервалов(ДатаНачалаСобытия, ВидРасчетаОтПричины, ПериодРегистрации, ВидРасчетаРаботодателя) Экспорт
	
	ТаблицаИнтерваловОплаты = Новый ТаблицаЗначений;
	ТаблицаИнтерваловОплаты.Колонки.Добавить("Начало",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТаблицаИнтерваловОплаты.Колонки.Добавить("Расчет",Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
	ТаблицаИнтерваловОплаты.Колонки.Добавить("ПроцентОплаты",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(6,2)));
	
	НачислениеПоБольничномуЛистуПереопределяемый.ЗаполнитьТаблицуИнтерваловПоПрочимПричинам(ТаблицаИнтерваловОплаты,ДатаНачалаСобытия, ДатаОкончания, ПричинаНетрудоспособности, СлучайУходаЗаБольнымРебенком, ВидРасчетаОтПричины, ПроцентОплаты);
	Если ТаблицаИнтерваловОплаты.Количество() > 0 Тогда
		Возврат ТаблицаИнтерваловОплаты
	КонецЕсли;
	
	УточненныйПроцент = ?(ЗначениеЗаполнено(ВыплатаЗаСчетФедеральногоБюджета), ПроцентОплатыБезЛьгот, ПроцентОплаты);
	
	// в зависимости от причины нетрудоспособности оплачивается разное количество дней; процент оплаты также меняется
	Если НеВыплачиватьПособие Тогда
		
		БЛБезОплаты = ?(ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам, ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезниПоБеременности, ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезни);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия, 		   БЛБезОплаты, 0);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаОкончания + мДлинаСуток, ВидРасчетаОтПричины, 0);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаОкончания + мДлинаСуток, ВидРасчетаОтПричины, 0);
		
	ИначеЕсли СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетАмбулаторно 
		Или СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо15тиЛетПриПоствакцинальномОсложненииАмбулаторно
		Или СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетАмбулаторно
		Или СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуДо7миЛетПриОсобомЗаболеванииАмбулаторно
		Или СлучайУходаЗаБольнымРебенком = Перечисления.СлучаиУходаЗаБольнымиДетьми.ПоУходуЗаРебенкомИнвалидомАмбулаторно Тогда
		
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия, 					ВидРасчетаОтПричины, УточненныйПроцент);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия + 10 * мДлинаСуток, ВидРасчетаОтПричины, 50);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаОкончания + мДлинаСуток,			ВидРасчетаОтПричины, 0);
		
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПособиеПриДолечивании Тогда
		
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия, 				  	ВидРасчетаОтПричины, УточненныйПроцент);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия + 24 * мДлинаСуток, ВидРасчетаОтПричины, 0);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаОкончания + мДлинаСуток,			ВидРасчетаОтПричины, 0);
		
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаВзрослым Тогда
		
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия, 				  	ВидРасчетаОтПричины, УточненныйПроцент);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия + 7 * мДлинаСуток,	ВидРасчетаОтПричины, 0);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаОкончания + мДлинаСуток,			ВидРасчетаОтПричины, 0);
		
	ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание И ПериодРегистрации >= ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования() Тогда
		
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия,			ВидРасчетаРаботодателя,	УточненныйПроцент);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия + ДнейОплатыРаботодателем * мДлинаСуток, ВидРасчетаОтПричины, УточненныйПроцент);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаОкончания + мДлинаСуток,	ВидРасчетаОтПричины,	0);
		
	Иначе
		
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаНачалаСобытия, 		   ВидРасчетаОтПричины, УточненныйПроцент);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаОкончания + мДлинаСуток, ВидРасчетаОтПричины, 0);
		ДобавитьСтрокуВТаблицуИнтервалов(ТаблицаИнтерваловОплаты, ДатаОкончания + мДлинаСуток, ВидРасчетаОтПричины, 0);
		
	КонецЕсли;
	
	Возврат ТаблицаИнтерваловОплаты
	
КонецФункции // ЗаполнитьТаблицуИнтервалов()

// Возвращает вид расчета, соответствующий причине нетрудоспособности
//
// Параметры
//  Причина  – <ПеречислениеСсылка.ПричиныНетрудочпособности> – причина нетрудоспособности
//
// Возвращаемое значение:
//   ПланыВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций   – вид расчета
//
Функция ПолучитьВидРасчетаОтПричиныНетрудоспособности(Причина) Экспорт

	Если Причина = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
		Возврат ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоБеременностиИРодам;
		
	ИначеЕсли Причина = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве Тогда
		Возврат ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаБЛПоТравмеНаПроизводстве;
		
	Иначе
		Возврат ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуБЛ;
		
	КонецЕсли;
	
КонецФункции // ПолучитьВидРасчетаОтПричиныНетрудоспособности()

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//	Структура, каждая строка которой соответствует одному из вариантов печати
//	
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьСтруктуруПечатныхФорм(ЭтотОбъект);
	Если СтруктураПечатныхФорм = Неопределено Тогда
		СтруктураПечатныхФорм = Новый Структура("РасчетСреднегоЗаработка2011, РасчетСреднегоЗаработка, РасчетПособияКЛисткуНетрудоспособности2011, Разделитель, ОборотЛисткаНетрудоспособности, АнализСкидки","Расчет среднего заработка с 2011 года", "Расчет среднего заработка до 2011 года", "Расчет пособия к б/л образца 2011 г.", , "Оборот б/л образца 2007 г.", "Анализ учтенных сумм скидки по мат.помощи");
	КонецЕсли;
	
	Возврат СтруктураПечатныхФорм
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Определяет последний день болезни, оформленной несколькими листками нетрудоспособности
//
// Параметры
//  ПервичныйБольничныйЛист - ДокументСсылка.НачислениеПоБольничномуЛисту
//                 первичный листок нетрудоспособности
//
// Возвращаемое значение:
//   Дата - последний день болезни, зарегистрированной по переданному б/л
//
Функция ПоследнийДеньБолезни(ПервичныйБольничныйЛист) Экспорт 

	ДатаОкончанияБолезни = '00010101';
	
	Если Не ЗначениеЗаполнено(ПервичныйБольничныйЛист) Тогда
		Возврат	ДатаОкончанияБолезни
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПервичныйБольничныйЛист",ПервичныйБольничныйЛист);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|ГДЕ
	|	НачислениеПоБольничномуЛисту.Ссылка = &ПервичныйБольничныйЛист
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.ДатаОкончания
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|ГДЕ
	|	НачислениеПоБольничномуЛисту.ПервичныйБольничныйЛист = &ПервичныйБольничныйЛист
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОкончания УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		ДатаОкончанияБолезни = Выборка.ДатаОкончания;
	КонецЕсли;

	Возврат	ДатаОкончанияБолезни
	
КонецФункции // ПоследнийДеньБолезни()

// Определяет будем ли считать "по правилам 2011 года"
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   булево
//
Функция ЕстьРасчетыПоКалендарнымГодам() Экспорт

	ДатаЗакона = ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования();
	Возврат Не (РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам) И (ДатаНачалаСобытия >= ДатаЗакона Или ДатаОкончания >= ДатаЗакона Или Не ЗначениеЗаполнено(ДатаНачалаСобытия) И ПериодРегистрации >= ДатаЗакона);

КонецФункции // ЕстьРасчетыПоКалендарнымГодам()

// Определяет будем ли считать "по правилам 2010 года"
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   булево
//
Функция ЕстьРасчетыПоМесяцам() Экспорт

	ДатаЗакона = ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования();
	Возврат ДатаНачалаСобытия < ДатаЗакона Или (РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам)

КонецФункции // ЕстьРасчетыПоКалендарнымГодам()

Функция ДатаСобытия() Экспорт 

	Возврат ДатаНачалаСобытия

КонецФункции 

Функция ДатаНазначенияПособия() Экспорт 

	Если ЭтоПособиеПоМатеринству() Тогда
		Если ЗначениеЗаполнено(ПерерассчитываемыйДокумент) И НовыйПорядокРасчетаПособияПоМатеринствуПриИсправлении Тогда
			Возврат ПериодРегистрации
		ИначеЕсли ЗначениеЗаполнено(ПерерассчитываемыйДокумент) Тогда
			Возврат ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ПерерассчитываемыйДокумент,"ПериодРегистрации");
		Иначе
			Возврат ПериодРегистрации
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ПерерассчитываемыйДокумент) Тогда
		Возврат ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ПерерассчитываемыйДокумент,"ПериодРегистрации");
	Иначе
		Возврат ПериодРегистрации
	КонецЕсли;
	
КонецФункции 

Функция ПриНачисленииПособияИспользоватьОграниченныйЗаработок() Экспорт 

	Возврат ОграничениеПособия <> Перечисления.ВидыОграниченияПособия.БезОграничений И ОграничениеПособия <> Перечисления.ВидыОграниченияПособия.ОграничениеМаксимальнымРазмеромЕжемесячнойСтраховойВыплаты

КонецФункции 

Функция ЭтоПособиеПоМатеринству() Экспорт 

	Возврат ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам

КонецФункции 


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(СобиратьДополнительныеДанные = Истина) Экспорт 

	Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("Сотрудник",				Сотрудник);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",		ДатаНачалаСобытия);
	НачислениеПоБольничномуЛистуПереопределяемый.УстановитьДополнительныеПараметрыЗапросаПоНачислениям(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ГрафикРаботы
	|	КОНЕЦ КАК ГрафикРаботы,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.СуммированныйУчетРабочегоВремени
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СуммированныйУчетРабочегоВремени
	|	КОНЕЦ КАК СуммированныйУчетРабочегоВремени,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаНачалаСобытия
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ГрафикРаботы.ГрафикПолногоРабочегоВремени
	|	КОНЕЦ КАК ГрафикПолногоРабочегоВремени
	|ПОМЕСТИТЬ ВТДанныеОСотруднике
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТРасчетныеГоды
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.ГодыРасчетаСреднего2011 КАК НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011
	|ГДЕ
	|	НачислениеПоБольничномуЛистуГодыРасчетаСреднего2011.Ссылка = &ДокументСсылка";
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.Дата,
	|	НачислениеПоБольничномуЛисту.ПериодРегистрации,
	|	НачислениеПоБольничномуЛисту.Организация,
	|	ВЫБОР
	|		КОГДА НачислениеПоБольничномуЛисту.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НачислениеПоБольничномуЛисту.Организация
	|		ИНАЧЕ НачислениеПоБольничномуЛисту.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	НачислениеПоБольничномуЛисту.Комментарий,
	|	НачислениеПоБольничномуЛисту.Ответственный,
	|	НачислениеПоБольничномуЛисту.Сотрудник,
	|	НачислениеПоБольничномуЛисту.Физлицо,
	|	НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности,
	|	НачислениеПоБольничномуЛисту.ПроцентОплаты,
	|	НачислениеПоБольничномуЛисту.ЯвляетсяПродолжениемБолезни,
	|	НачислениеПоБольничномуЛисту.ПервичныйБольничныйЛист,
	|	НачислениеПоБольничномуЛисту.ДатаНачалаСобытия,
	|	НачислениеПоБольничномуЛисту.ДатаНачала,
	|	НачислениеПоБольничномуЛисту.ДатаНачалаОплаты,
	|	НачислениеПоБольничномуЛисту.ДатаОкончания,
	|	НачислениеПоБольничномуЛисту.ОграничениеПособия,
	|	НачислениеПоБольничномуЛисту.ПерерассчитываемыйДокумент,
	|	НачислениеПоБольничномуЛисту.СтратегияОтраженияВУчете,
	|	НачислениеПоБольничномуЛисту.ПодпадаетПодЕНВД,
	|	НачислениеПоБольничномуЛисту.СлучайУходаЗаБольнымРебенком,
	|	НачислениеПоБольничномуЛисту.ДнейОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДополнительныеПоля,
	|	НачислениеПоБольничномуЛисту.ДатаНарушенияРежима,
	|	НачислениеПоБольничномуЛисту.ВидРасчета,
	|	НачислениеПоБольничномуЛисту.ВидРасчетаЗаСчетРаботодателя,
	|	НачислениеПоБольничномуЛисту.Ссылка,
	|	НачислениеПоБольничномуЛисту.ДоплачиватьДоПолногоСреднегоЗаработка,
	|	НачислениеПоБольничномуЛисту.ВидРасчетаДоплаты,
	|	НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаНачало,
	|	НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	НачислениеПоБольничномуЛисту.ВыплатаЗаСчетФедеральногоБюджета,
	|	НачислениеПоБольничномуЛисту.ПрименятьЛьготыПриНачисленииПособия,
	|	НачислениеПоБольничномуЛисту.ПроцентОплатыБезЛьгот,
	|	НачислениеПоБольничномуЛисту.ОграничениеПособияБезЛьгот,
	|	НачислениеПоБольничномуЛисту.ДнейОплатыРаботодателем,
	|	НачислениеПоБольничномуЛисту.ДатаВыплатыДохода,
	|	(НЕ НачислениеПоБольничномуЛисту.НеВыплачиватьПособие) КАК ВыплачиватьПособие,
	|	НачислениеПоБольничномуЛисту.РасчетПоПравилам2010Года
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|ГДЕ
	|	НачислениеПоБольничномуЛисту.Ссылка = &ДокументСсылка";
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"НЕОПРЕДЕЛЕНО КАК ДополнительныеПоля,",НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьДополнительныеПоляЗапросаДанныеДокумента());
	Запрос.Выполнить();
	
	Запрос.Текст = НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьТекстДополнительнойТаблицыДокумента(Запрос, СобиратьДополнительныеДанные);
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ДанныеДокумента.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТНачисленоПособия
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.Начисления КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|	И ДанныеДокумента.ВидРасчета.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.Ссылка,
	|	НачислениеПоБольничномуЛисту.Дата,
	|	НачислениеПоБольничномуЛисту.ПериодРегистрации,
	|	НачислениеПоБольничномуЛисту.ГоловнаяОрганизация КАК Организация,
	|	НачислениеПоБольничномуЛисту.ГоловнаяОрганизация,
	|	НачислениеПоБольничномуЛисту.Организация КАК ОбособленноеПодразделение,
	|	НачислениеПоБольничномуЛисту.ПерерассчитываемыйДокумент.Сотрудник КАК ИсправляемыйДокументСотрудник,
	|	НачислениеПоБольничномуЛисту.Сотрудник,
	|	НачислениеПоБольничномуЛисту.Сотрудник.Физлицо КАК Физлицо,
	|	НачислениеПоБольничномуЛисту.Сотрудник.ВидЗанятости КАК ВидЗанятости,
	|	НачислениеПоБольничномуЛисту.ПроцентОплаты,
	|	НачислениеПоБольничномуЛисту.ПроцентОплатыБезЛьгот,
	|	НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности,
	|	НачислениеПоБольничномуЛисту.ПервичныйБольничныйЛист,
	|	НачислениеПоБольничномуЛисту.ЯвляетсяПродолжениемБолезни,
	|	НачислениеПоБольничномуЛисту.ОграничениеПособия,
	|	НачислениеПоБольничномуЛисту.ОграничениеПособияБезЛьгот,
	|	НачислениеПоБольничномуЛисту.СлучайУходаЗаБольнымРебенком,
	|	НачислениеПоБольничномуЛисту.ДатаНачала,
	|	НачислениеПоБольничномуЛисту.ДатаОкончания,
	|	НачислениеПоБольничномуЛисту.ДатаНачалаОплаты,
	|	НачислениеПоБольничномуЛисту.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|	НачислениеПоБольничномуЛисту.ДатаНарушенияРежима,
	|	НачислениеПоБольничномуЛисту.ДатаВыплатыДохода,
	|	НачислениеПоБольничномуЛисту.ДнейОплаты,
	|	НачислениеПоБольничномуЛисту.ВидРасчета КАК ВидРасчета,
	|	НачислениеПоБольничномуЛисту.ВидРасчетаЗаСчетРаботодателя,
	|	НачислениеПоБольничномуЛисту.ДнейОплатыРаботодателем,
	|	НачислениеПоБольничномуЛисту.ВыплачиватьПособие,
	|	НачислениеПоБольничномуЛисту.РасчетПоПравилам2010Года,
	|	ПараметрыВидаРасчета.СпособРасчета КАК СпособРасчета,
	|	&ДокументСсылка КАК ДокументОснование,
	|	12 КАК ПериодРасчетаСреднегоЗаработка,
	|	ВЫБОР
	|		КОГДА РасчетныеГоды.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НетРасчетныхЛет,
	|	НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаНачало,
	|	НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаНачало КАК ДатаНачалаРасчетногоПериода,
	|	ВЫБОР
	|		КОГДА НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаОкончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаОкончание, ДЕНЬ)
	|	КОНЕЦ КАК ПериодРасчетаСреднегоЗаработкаОкончание,
	|	ВЫБОР
	|		КОГДА НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаОкончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(НачислениеПоБольничномуЛисту.ПериодРасчетаСреднегоЗаработкаОкончание, ДЕНЬ)
	|	КОНЕЦ КАК ДатаОкончанияРасчетногоПериода,
	|	РаботникиОрганизацииСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
	|	РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НЕОПРЕДЕЛЕНО КАК ВидУчетаВремени,
	|	НачислениеПоБольничномуЛисту.ДоплачиватьДоПолногоСреднегоЗаработка,
	|	НачислениеПоБольничномуЛисту.ВидРасчетаДоплаты,
	|	НачислениеПоБольничномуЛисту.ПрименятьЛьготыПриНачисленииПособия,
	|	НачислениеПоБольничномуЛисту.ВыплатаЗаСчетФедеральногоБюджета,
	|	НачислениеПоБольничномуЛисту.ПерерассчитываемыйДокумент КАК ПерерассчитываемыйДокумент,
	|	НачислениеПоБольничномуЛисту.ПерерассчитываемыйДокумент.ПериодРегистрации КАК ПериодПерерасчета,
	|	НачислениеПоБольничномуЛисту.ПерерассчитываемыйДокумент.Организация КАК ОрганизацияПерерасчета,
	|	ВЫБОР
	|		КОГДА НачислениеПоБольничномуЛисту.Сотрудник.Организация = ВЫБОР
	|				КОГДА НачислениеПоБольничномуЛисту.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА НачислениеПоБольничномуЛисту.Организация
	|				ИНАЧЕ НачислениеПоБольничномуЛисту.Организация.ГоловнаяОрганизация
	|			КОНЕЦ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	ЕСТЬNULL(НачисленоПособия.Результат, 0) КАК ВсегоПособия,
	|	ВЫБОР
	|		КОГДА НачислениеПоБольничномуЛисту.Дата < НачислениеПоБольничномуЛисту.ПериодРегистрации
	|			ТОГДА НачислениеПоБольничномуЛисту.ПериодРегистрации
	|		КОГДА НачислениеПоБольничномуЛисту.Дата > КОНЕЦПЕРИОДА(НачислениеПоБольничномуЛисту.ПериодРегистрации, МЕСЯЦ)
	|			ТОГДА КОНЕЦПЕРИОДА(НачислениеПоБольничномуЛисту.ПериодРегистрации, МЕСЯЦ)
	|		ИНАЧЕ НачислениеПоБольничномуЛисту.Дата
	|	КОНЕЦ КАК ПериодРегистрацииДополнительныхНачислений,
	|	НЕОПРЕДЕЛЕНО КАК ДополнительныеПоля
	|ИЗ
	|	ВТДанныеДокумента КАК НачислениеПоБольничномуЛисту
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетныеГоды КАК РасчетныеГоды
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОСотруднике КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДополнительнаяТаблица КАК ДополнительнаяТаблица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ПараметрыВидаРасчета
	|		ПО НачислениеПоБольничномуЛисту.ВидРасчета = ПараметрыВидаРасчета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленоПособия КАК НачисленоПособия
	|		ПО (ИСТИНА)";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"НЕОПРЕДЕЛЕНО КАК ВидУчетаВремени",НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьПолеЗапросаПоДокументу());
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"НЕОПРЕДЕЛЕНО КАК ДополнительныеПоля",НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьДополнительныеПоляЗапросаПоДокументу());
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по табличной части Начисления
//
//
// Возвращаемое значение:
//	Результат запроса
//
Функция СформироватьЗапросПоНачислениям(ВыборкаПоШапкеДокумента) Экспорт 

	Запрос = Новый Запрос;

	ГоловнаяОрганизация = ВыборкаПоШапкеДокумента.Организация;
	СписокСтруктурныхПодразделений = ОбщегоНазначенияЗК.ПолучитьСписокОбособленныхПодразделенийОрганизации(ГоловнаяОрганизация);
	СписокСтруктурныхПодразделений.Добавить(ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СписокСтруктурныхПодразделений",	СписокСтруктурныхПодразделений);
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",					ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаНачалаСобытия" , 			ВыборкаПоШапкеДокумента.ДатаНачалаСобытия);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",			ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ВидРасчета",						ВыборкаПоШапкеДокумента.ВидРасчета);
	НачислениеПоБольничномуЛистуПереопределяемый.УстановитьДополнительныеПараметрыЗапросаПоНачислениям(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеПоБольничномуЛистуНачисления.Ссылка,
	|	НачислениеПоБольничномуЛистуНачисления.НомерСтроки КАК НомерСтроки,
	|	НачислениеПоБольничномуЛистуНачисления.ВидРасчета,
	|	НачислениеПоБольничномуЛистуНачисления.ДатаНачала,
	|	НачислениеПоБольничномуЛистуНачисления.ДатаОкончания,
	|	НачислениеПоБольничномуЛистуНачисления.Показатель1,
	|	НачислениеПоБольничномуЛистуНачисления.Показатель2,
	|	НачислениеПоБольничномуЛистуНачисления.Показатель3,
	|	НачислениеПоБольничномуЛистуНачисления.Показатель4,
	|	НачислениеПоБольничномуЛистуНачисления.Показатель5,
	|	НачислениеПоБольничномуЛистуНачисления.Показатель6,
	|	НачислениеПоБольничномуЛистуНачисления.Результат,
	|	НачислениеПоБольничномуЛистуНачисления.ДополнительныйРезультат,
	|	НачислениеПоБольничномуЛистуНачисления.ПодразделениеОрганизации,
	|	НачислениеПоБольничномуЛистуНачисления.НормаДней,
	|	НачислениеПоБольничномуЛистуНачисления.НормаЧасов,
	|	НачислениеПоБольничномуЛистуНачисления.НормаДнейПоПятидневке,
	|	НачислениеПоБольничномуЛистуНачисления.ОтработаноДней,
	|	НачислениеПоБольничномуЛистуНачисления.ОтработаноЧасов,
	|	НачислениеПоБольничномуЛистуНачисления.ОтработаноДнейПоПятидневке,
	|	НачислениеПоБольничномуЛистуНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
	|	НачислениеПоБольничномуЛистуНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	НачислениеПоБольничномуЛистуНачисления.ДополнительныеДанные,
	|	НачислениеПоБольничномуЛистуНачисления.ДатаНачалаСобытия,
	|	НачислениеПоБольничномуЛистуНачисления.Сторно,
	|	НачислениеПоБольничномуЛистуНачисления.Авторасчет,
	|	НачислениеПоБольничномуЛистуНачисления.Сотрудник,
	|	НачислениеПоБольничномуЛистуНачисления.ОплаченоДнейЧасов,
	|	НачислениеПоБольничномуЛистуНачисления.ОтработаноЧасовПоПятидневке,
	|	НачислениеПоБольничномуЛистуНачисления.НормаЧасовПоПятидневке,
	|	НачислениеПоБольничномуЛистуНачисления.СторнируемыйДокумент,
	|	НачислениеПоБольничномуЛистуНачисления.ЧислоМесяцев,
	|	НачислениеПоБольничномуЛистуНачисления.РасчетнаяБазаЗаЕдиницуНормыВремени
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛистуНачисления
	|ГДЕ
	|	НачислениеПоБольничномуЛистуНачисления.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(РаботникиОрганизации.Период) КАК МаксПериод,
	|	СтрокиНачисления.НомерСтроки КАК НомерСтроки,
	|	СтрокиНачисления.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТПоследниеДаты
	|ИЗ
	|	ВТДанныеДокумента КАК СтрокиНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Период <= СтрокиНачисления.ДатаНачалаСобытия)
	|			И СтрокиНачисления.Сотрудник = РаботникиОрганизации.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиНачисления.НомерСтроки,
	|	СтрокиНачисления.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	МаксПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНачисления.НомерСтроки КАК НомерСтроки,
	|	СтрокиНачисления.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТГрафикРаботыПоСотруднику
	|ИЗ
	|	ВТДанныеДокумента КАК СтрокиНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО СтрокиНачисления.Сотрудник = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И (ГрафикиРаботыПоВидамВремени.Месяц = НАЧАЛОПЕРИОДА(СтрокиНачисления.ДатаНачала, МЕСЯЦ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНачисления.НомерСтроки КАК НомерСтроки,
	|	СтрокиНачисления.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТГрафикРаботыНормаПоСотруднику
	|ИЗ
	|	ВТДанныеДокумента КАК СтрокиНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО СтрокиНачисления.Сотрудник = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И (ГрафикиРаботыПоВидамВремени.Месяц = НАЧАЛОПЕРИОДА(СтрокиНачисления.ДатаНачала, МЕСЯЦ))
	|			И (НЕ ГрафикиРаботыПоВидамВремени.План)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиНачисления.НомерСтроки,
	|	СтрокиНачисления.Сотрудник,
	|	ЕСТЬNULL(ГрафикРаботыПоСотруднику.Сотрудник, ВЫБОР
	|			КОГДА РаботникиОрганизации.ПериодЗавершения <= СтрокиНачисления.ДатаНачалаСобытия
	|					И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения
	|			ИНАЧЕ РаботникиОрганизации.ГрафикРаботы
	|		КОНЕЦ) КАК ГрафикРаботы,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ПериодЗавершения <= СтрокиНачисления.ДатаНачалаСобытия
	|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения.СуммированныйУчетРабочегоВремени
	|		ИНАЧЕ РаботникиОрганизации.ГрафикРаботы.СуммированныйУчетРабочегоВремени
	|	КОНЕЦ КАК СуммированныйУчетРабочегоВремени,
	|	ВЫБОР
	|		КОГДА НЕ ГрафикРаботыНормаПоСотруднику.НомерСтроки ЕСТЬ NULL 
	|				ИЛИ (РаботникиОрганизации.ПериодЗавершения <= СтрокиНачисления.ДатаНачалаСобытия
	|						И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						И РаботникиОрганизации.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|						И НЕ РаботникиОрганизации.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени ЕСТЬ NULL 
	|					ИЛИ НЕ(РаботникиОрганизации.ПериодЗавершения <= СтрокиНачисления.ДатаНачалаСобытия
	|								И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|						И РаботникиОрганизации.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|						И НЕ РаботникиОрганизации.ГрафикРаботы.ГрафикПолногоРабочегоВремени ЕСТЬ NULL )
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиОрганизации.ПериодЗавершения <= СтрокиНачисления.ДатаНачалаСобытия
	|							И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения
	|					ИНАЧЕ РаботникиОрганизации.ГрафикРаботы
	|				КОНЕЦ
	|	КОНЕЦ КАК ГрафикРаботыНорма,
	|	НЕОПРЕДЕЛЕНО КАК ВидУчетаВремени,
	|	СтрокиНачисления.ВидРасчета,
	|	СтрокиНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,
	|	СтрокиНачисления.ВидРасчета.ЗачетНормыВремени КАК ЗачетНормыВремени,
	|	СтрокиНачисления.ВидРасчета.КодДоходаНДФЛ КАК КодДоходаНДФЛ,
	|	СтрокиНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме КАК ЯвляетсяДоходомВНатуральнойФорме,
	|	СтрокиНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	СтрокиНачисления.ВидРасчета.ВидВремени КАК ВидВремени,
	|	СтрокиНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидИспользованияРабочегоВремени,
	|	НЕОПРЕДЕЛЕНО КАК ДополнительноеПоле,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ВидРасчета.КодДоходаНДФЛ.СоответствуетОплатеТруда
	|			ТОГДА КОНЕЦПЕРИОДА(СтрокиНачисления.Ссылка.ПериодРегистрации, МЕСЯЦ)
	|		ИНАЧЕ СтрокиНачисления.Ссылка.ДатаВыплатыДохода
	|	КОНЕЦ КАК МесяцНалоговогоПериода,
	|	СтрокиНачисления.ДатаНачала КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА КОНЕЦПЕРИОДА(СтрокиНачисления.ДатаОкончания, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	СтрокиНачисления.ДатаНачала КАК БазовыйПериодНачало,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА КОНЕЦПЕРИОДА(СтрокиНачисления.ДатаОкончания, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК БазовыйПериодКонец,
	|	СтрокиНачисления.Показатель1,
	|	СтрокиНачисления.Показатель2,
	|	СтрокиНачисления.Показатель3,
	|	СтрокиНачисления.Показатель4,
	|	СтрокиНачисления.Показатель5,
	|	СтрокиНачисления.Показатель6,
	|	СтрокиНачисления.Результат,
	|	СтрокиНачисления.ДополнительныйРезультат,
	|	СтрокиНачисления.ДополнительныеДанные,
	|	СтрокиНачисления.ПодразделениеОрганизации,
	|	СтрокиНачисления.ОплаченоДнейЧасов,
	|	СтрокиНачисления.ОтработаноДней,
	|	СтрокиНачисления.ОтработаноЧасов,
	|	СтрокиНачисления.ОтработаноДнейПоПятидневке,
	|	СтрокиНачисления.ОтработаноЧасовПоПятидневке,
	|	СтрокиНачисления.НормаДней,
	|	СтрокиНачисления.НормаЧасов,
	|	СтрокиНачисления.НормаДнейПоПятидневке,
	|	СтрокиНачисления.НормаЧасовПоПятидневке,
	|	СтрокиНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
	|	СтрокиНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	СтрокиНачисления.ДатаНачалаСобытия,
	|	СтрокиНачисления.Сторно,
	|	СтрокиНачисления.Авторасчет,
	|	СтрокиНачисления.ЧислоМесяцев,
	|	СтрокиНачисления.РасчетнаяБазаЗаЕдиницуНормыВремени,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	ВЫБОР
	|		КОГДА НЕ СтрокиНачисления.ПодразделениеОрганизации.Владелец В (&СписокСтруктурныхПодразделений)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаПодразделениеНеПринадлежитОрганизации,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сторно
	|			ТОГДА СтрокиНачисления.СторнируемыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СторнируемыйДокумент,
	|	СтрокиНачисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЯвляетсяПособием,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ВидРасчета = &ВидРасчета
	|				И НЕ СтрокиНачисления.Сторно
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроверятьПериодНачисления
	|ИЗ
	|	ВТДанныеДокумента КАК СтрокиНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоследниеДаты КАК ПоследниеДаты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|			ПО ПоследниеДаты.МаксПериод = РаботникиОрганизации.Период
	|				И ПоследниеДаты.Сотрудник = РаботникиОрганизации.Сотрудник
	|		ПО СтрокиНачисления.НомерСтроки = ПоследниеДаты.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикРаботыПоСотруднику КАК ГрафикРаботыПоСотруднику
	|		ПО СтрокиНачисления.НомерСтроки = ГрафикРаботыПоСотруднику.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикРаботыНормаПоСотруднику КАК ГрафикРаботыНормаПоСотруднику
	|		ПО СтрокиНачисления.НомерСтроки = ГрафикРаботыНормаПоСотруднику.НомерСтроки";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"НЕОПРЕДЕЛЕНО КАК ВидУчетаВремени",НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьПолеЗапросаПоНачислениям());
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"НЕОПРЕДЕЛЕНО КАК ДополнительноеПоле,",НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьДополнительноеПолеЗапросаПоНачислениям());
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоНачислениям()

// Формирует запрос по таблице "РасчетСреднего" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоРасчетСреднего() Экспорт 
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);
	
	Если ДатаОкончания >= ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования() Тогда
		
		Запрос.УстановитьПараметр("ВидРасчета", ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.СреднийЗаработок, "ПоЗаработкуПособийС2011"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	""2011"" КАК ВариантРасчета,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА СтрокаРасчетСреднего.Ссылка.Организация
		|		ИНАЧЕ СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация
		|	КОНЕЦ КАК Организация,
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник.Физлицо КАК Физлицо,
		|	СтрокаРасчетСреднего.НомерСтроки,
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник,
		|	&ВидРасчета КАК ВидРасчета,
		|	СтрокаРасчетСреднего.БазовыйПериодНачало КАК БазовыйПериодНачало,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.БазовыйПериодНачало <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА КОНЕЦПЕРИОДА(СтрокаРасчетСреднего.БазовыйПериодНачало, ГОД)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	КОНЕЦ КАК БазовыйПериодКонец,
		|	СУММА(СтрокаРасчетСреднего.Заработок) КАК Результат,
		|	0 КАК СкидкаПоСтраховымВзносам,
		|	СтрокаРасчетСреднего.ДнейБолезниУходаЗаДетьми КАК ОтработаноДней,
		|	0 КАК ОтработаноПоПятидневке,
		|	1 КАК КоэффициентИндексации,
		|	0 КАК НормаПоПятидневке,
		|	0 КАК ОтработаноЧасов,
		|	1 КАК ЧислоМесяцев
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту.РасчетСреднего2011 КАК СтрокаРасчетСреднего
		|ГДЕ
		|	СтрокаРасчетСреднего.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник.Физлицо,
		|	СтрокаРасчетСреднего.НомерСтроки,
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник,
		|	СтрокаРасчетСреднего.БазовыйПериодНачало,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА СтрокаРасчетСреднего.Ссылка.Организация
		|		ИНАЧЕ СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация
		|	КОНЕЦ,
		|	СтрокаРасчетСреднего.ДнейБолезниУходаЗаДетьми
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""2010"",
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА СтрокаРасчетСреднего.Ссылка.Организация
		|		ИНАЧЕ СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация
		|	КОНЕЦ,
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник.Физлицо,
		|	СтрокаРасчетСреднего.НомерСтроки,
		|	СтрокаРасчетСреднего.Сотрудник,
		|	СтрокаРасчетСреднего.ВидРасчета,
		|	СтрокаРасчетСреднего.БазовыйПериодНачало,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.БазовыйПериодКонец <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА КОНЕЦПЕРИОДА(СтрокаРасчетСреднего.БазовыйПериодКонец, ДЕНЬ)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	КОНЕЦ,
		|	СтрокаРасчетСреднего.Результат,
		|	СтрокаРасчетСреднего.СкидкаПоСтраховымВзносам,
		|	СтрокаРасчетСреднего.ОтработаноДней,
		|	0,
		|	1,
		|	0,
		|	0,
		|	1
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту.РасчетСреднего КАК СтрокаРасчетСреднего
		|ГДЕ
		|	СтрокаРасчетСреднего.Ссылка = &ДокументСсылка";
		
	Иначе
		
		// реализация Федерального закона № 180-ФЗ от 22.12.2005 г.:
		// поле "Сотрудник" с 1 января 2006 года может идентифицировать несколько мест работы,
		// включая работу по внутреннему совместительству
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	""2010"" КАК ВариантРасчета,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА СтрокаРасчетСреднего.Ссылка.Организация
		|		ИНАЧЕ СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация
		|	КОНЕЦ КАК Организация,
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник.Физлицо КАК Физлицо,
		|	СтрокаРасчетСреднего.НомерСтроки,
		|	СтрокаРасчетСреднего.Сотрудник,
		|	СтрокаРасчетСреднего.ВидРасчета,
		|	СтрокаРасчетСреднего.БазовыйПериодНачало КАК БазовыйПериодНачало,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.БазовыйПериодКонец <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА КОНЕЦПЕРИОДА(СтрокаРасчетСреднего.БазовыйПериодКонец, ДЕНЬ)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	КОНЕЦ КАК БазовыйПериодКонец,
		|	СтрокаРасчетСреднего.Результат,
		|	СтрокаРасчетСреднего.СкидкаПоСтраховымВзносам,
		|	СтрокаРасчетСреднего.ОтработаноДней,
		|	НЕОПРЕДЕЛЕНО КАК ПрочиеПоля
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту.РасчетСреднего КАК СтрокаРасчетСреднего
		|ГДЕ
		|	СтрокаРасчетСреднего.Ссылка = &ДокументСсылка";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"НЕОПРЕДЕЛЕНО КАК ПрочиеПоля",НачислениеПоБольничномуЛистуПереопределяемый.ПолучитьПрочиеПоляЗапросаПоСреднему());
		
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоРасчетСреднего()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//	ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//	Отказ 					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок = "")

	// ПериодРегистрации
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан период регистрации!", Отказ, Заголовок);
	КонецЕсли;

	//  Организация
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОбособленноеПодразделение) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация, по которой выполняется начисление!"), Отказ, Заголовок);
	ИначеЕсли ПроведениеРасчетов.ПособияПоОбязательномуСтрахованиюВыплачиваетФСС(ВыборкаПоШапкеДокумента.ПериодРегистрации, ВыборкаПоШапкеДокумента.ОбособленноеПодразделение) И ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ВсегоПособия) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("У страхователей, участвующих в пилотном проекте ФСС, пособия не начисляются!", Отказ, Заголовок);
	КонецЕсли;

	// Сотрудник
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// Проверка того, что не изменили сотрудника при исправлении
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ИсправляемыйДокументСотрудник) 
		И (ВыборкаПоШапкеДокумента.ИсправляемыйДокументСотрудник <> ВыборкаПоШапкеДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("При исправлении документа нельзя изменить сотрудника!", Отказ, Заголовок);
	КонецЕсли;

	// ДатаНачалаСобытия
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаНачалаСобытия) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата начала нетрудоспособности!", Отказ, Заголовок);
	ИначеЕсли ЕстьРасчетыПоМесяцам() И (ВыборкаПоШапкеДокумента.ВыплачиватьПособие Или ВыборкаПоШапкеДокумента.ДоплачиватьДоПолногоСреднегоЗаработка) Тогда
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата начала расчетного периода!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаОкончание) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата окончания расчетного периода!", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаОкончание < ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания расчетного периода не должна быть меньше даты начала расчетного периода!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;

	// ДатаНачалаОплаты
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаНачалаОплаты) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата назначения пособия!", Отказ, Заголовок);
	КонецЕсли;
	
	// ДатаНачала
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаНачала) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата начала оплачиваемого события!", Отказ, Заголовок);
	КонецЕсли;
	
	// ДатаОкончания
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаОкончания) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата окончания оплачиваемого события!", Отказ, Заголовок);
	ИначеЕсли ЕстьРасчетыПоКалендарнымГодам() И (ВыборкаПоШапкеДокумента.ВыплачиватьПособие Или ВыборкаПоШапкеДокумента.ДоплачиватьДоПолногоСреднегоЗаработка) И ВыборкаПоШапкеДокумента.НетРасчетныхЛет Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указаны расчетные годы!", Отказ, Заголовок);
	КонецЕсли;
	
	// Период нетрудоспособности
	Если ВыборкаПоШапкеДокумента.ДатаНачала < ВыборкаПоШапкеДокумента.ДатаНачалаСобытия Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата начала периода отстутствия сотрудника не должна быть меньше даты начала события!", Отказ, Заголовок);
	КонецЕсли;

	// Период нетрудоспособности
	Если ВыборкаПоШапкеДокумента.ДатаНачалаОплаты < ВыборкаПоШапкеДокумента.ДатаНачала Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата назначения пособия не должна быть меньше даты начала периода отстутствия сотрудника!", Отказ, Заголовок);
	КонецЕсли;

	// Период нетрудоспособности
	Если ВыборкаПоШапкеДокумента.ДатаОкончания < ВыборкаПоШапкеДокумента.ДатаНачалаОплаты Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания периода отстутствия сотрудника не должна быть меньше даты назначения пособия!", Отказ, Заголовок);
	КонецЕсли;

	// ВидРасчета
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПричинаНетрудоспособности) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана причина нетрудоспособности!", Отказ, Заголовок);
		
	ИначеЕсли ВыборкаПоШапкеДокумента.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоУходуЗаРебенком И Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.СлучайУходаЗаБольнымРебенком) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан случай ухода за ребенком!", Отказ, Заголовок);
		
	ИначеЕсли ВыборкаПоШапкеДокумента.ВыплачиватьПособие Тогда
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ВидРасчета) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан вид расчета для начисления пособия!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ДоплачиватьДоПолногоСреднегоЗаработка И Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ВидРасчетаДоплаты) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан вид расчета для начисления доплаты до полного среднего заработка!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ВыплачиватьПособие Тогда
		
		// Процент оплаты
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПроцентОплаты) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан процент оплаты!", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВыборкаПоШапкеДокумента.ПериодРегистрации >= ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() И ВыборкаПоШапкеДокумента.ДатаНачалаОплаты >= ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Тогда
			
			Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОграничениеПособия) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано ограничение пособия!", Отказ, Заголовок);
			КонецЕсли;
			
			Если ВыборкаПоШапкеДокумента.ПрименятьЛьготыПриНачисленииПособия И (Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОграничениеПособияБезЛьгот)) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано ограничение пособия для расчета без предоставления льгот!", Отказ, Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВыборкаПоШапкеДокумента.ПериодРегистрации >= ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования() И ВыборкаПоШапкеДокумента.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание  Тогда
			Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ВидРасчетаЗаСчетРаботодателя) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан вид расчета для начисления пособия за счет работодателя!", Отказ, Заголовок);
			КонецЕсли;
			Если ВыборкаПоШапкеДокумента.ДнейОплатыРаботодателем <> 2 И ВыборкаПоШапкеДокумента.ДнейОплатыРаботодателем <> 3 Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Указано недопустимое количество дней оплаты за счет работодателя!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
		
		НачислениеПоБольничномуЛистуПереопределяемый.ВыполнитьДополнительныеПроверкиДокумента(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	
	КонецЕсли;
	
	// ДатаВыплатыДохода
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаВыплатыДохода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана предполагаемая дата выплаты начисленного дохода!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоШапкеДокумента.ДатаВыплатыДохода	< '19800101' Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Неверно указан год предполагаемой даты выплаты начисленного дохода!", Отказ, Заголовок);

	КонецЕсли;
	
	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоШапкеДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Указанный сотрудник оформлен на другую организацию!"), Отказ, Заголовок);
	КонецЕсли;
	
	// ВидЗанятости
	Если ВыборкаПоШапкеДокумента.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Документ не может быть оформлен на внутреннего совместителя!", Отказ, Заголовок);
	КонецЕсли;
	
	// соответствие периодов документа и перерассчитываемого документа
	Если ВыборкаПоШапкеДокумента.ПериодПерерасчета <> Null 
		и ВыборкаПоШапкеДокумента.ПериодРегистрации <= ВыборкаПоШапкеДокумента.ПериодПерерасчета Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Период документа должен быть больше периода перерассчитываемого документа!", Отказ, Заголовок);
	КонецЕсли;
	
	// соответствие организаций документа и перерассчитываемого документа
	Если ВыборкаПоШапкеДокумента.ОрганизацияПерерасчета <> Null 
		и ВыборкаПоШапкеДокумента.ОбособленноеПодразделение <> ВыборкаПоШапкеДокумента.ОрганизацияПерерасчета Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Организация, заданная для документа, должна совпадать с организацией перерассчитываемого документа!"), Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "Начисления" документа.
// Если какой-то из реквизитов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса к ТЧ документа, 
//  Отказ 						- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, ПроверятьМестоРаботы = Истина, ПроводитьДополнительныеПроверки = Ложь) Экспорт 

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Оплата"": ";
	
	// Сотрудник в табличном поле
	Если ПроверятьМестоРаботы И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	// ВидРасчета
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета!", Отказ, Заголовок);
	КонецЕсли;
	
	// Дата начала
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПериодДействияНачало) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала начисления!", Отказ, Заголовок);
	Иначе
		// Дата окончания
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПериодДействияКонец) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания начисления!", Отказ, Заголовок);
			
		Иначе
			Если ВыборкаПоСтрокамДокумента.ПериодДействияКонец < ВыборкаПоСтрокамДокумента.ПериодДействияНачало Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата окончания начисления не должна быть меньше даты начала!", Отказ, Заголовок);
				
			ИначеЕсли ВыборкаПоСтрокамДокумента.ОсновныеНачисления Тогда
				Если НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияКонец) <> НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало) Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "даты начала и окончания должны принадлежать одному месяцу!", Отказ, Заголовок);
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	// Дата начала события
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаНачалаСобытия) И ВыборкаПоСтрокамДокумента.ОсновныеНачисления Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала события!", Отказ, Заголовок);
	КонецЕсли;
	
	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоСтрокамДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("указанный сотрудник оформлен на другую организацию!"), Отказ, Заголовок);
	КонецЕсли;

	// Подразделение
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("не указано подразделение организации!"), Отказ, Заголовок);
		
	ИначеЕсли ВыборкаПоСтрокамДокумента.ОшибкаПодразделениеНеПринадлежитОрганизации Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("указано подразделение, принадлежащее другой организации!"), Отказ, Заголовок);
		
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.ПроверятьПериодНачисления И 
		(ВыборкаПоСтрокамДокумента.ПериодДействияНачало < ВыборкаПоШапкеДокумента.ДатаНачала 
			ИЛИ ВыборкаПоСтрокамДокумента.ПериодДействияНачало > КонецДня(ВыборкаПоШапкеДокумента.ДатаОкончания) 
			ИЛИ ВыборкаПоСтрокамДокумента.ПериодДействияКонец < ВыборкаПоШапкеДокумента.ДатаНачала 
			ИЛИ ВыборкаПоСтрокамДокумента.ПериодДействияКонец > КонецДня(ВыборкаПоШапкеДокумента.ДатаОкончания)) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "период начисления выходит за временные границы оплачиваемого события!", Ложь, Заголовок);
	КонецЕсли;

	Если ПроводитьДополнительныеПроверки Тогда
		НачислениеПоБольничномуЛистуПереопределяемый.ВыполнитьДополнительныеПроверкиСтрокиНачислений(ЭтотОбъект,ВыборкаПоСтрокамДокумента,Отказ, Заголовок, СтрокаНачалаСообщенияОбОшибке);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиНачисления()

// Проверяет правильность заполнения реквизитов в строке ТЧ "РасчетСреднего" документа.
// Если какой-то из реквизитов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//	ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//	ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//								  из результата запроса к ТЧ документа, 
//	Отказ 						- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеСтрокиРасчетСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, ПроверятьМестоРаботы = Истина) Экспорт 

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Расчет среднего"": ";
	
	// Вид расчета
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета среднего заработка!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.ВариантРасчета = "2011" Тогда
		
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодНачало) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан расчетный год!", Отказ, Заголовок);
		КонецЕсли;

	Иначе
		
		// Дата начала базового периода
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодНачало) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала базового периода!", Отказ, Заголовок);
			// Дата окончания базового периода
		ИначеЕсли Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодКонец) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания базового периода!", Отказ, Заголовок);
		ИначеЕсли ВыборкаПоСтрокамДокумента.БазовыйПериодКонец < ВыборкаПоСтрокамДокумента.БазовыйПериодНачало Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата начала базового периода не может быть больше даты окончания базового периода!", Отказ, Заголовок);
		КонецЕсли;
		
		// Сотрудник
		Если ПроверятьМестоРаботы И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан сотрудник!", Отказ, Заголовок);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРасчетСреднего()

// По строке выборок из результатов запроса по документу формируем движения по регистру
//
// Параметры:
//	Выборка				- спозиционированная на определеной строке выборка
//						  из результата запроса к ТЧ документа
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуОсновныхНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборЗаписей) Экспорт 
	
	Движение = ПроведениеРасчетов.ДобавитьСтрокуОсновныхНачислений(НаборЗаписей, ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
	
	Если ВыборкаПоСтрокамДокумента.ЯвляетсяПособием Тогда
		
		Движение.ДополнительныйРезультат = ВыборкаПоСтрокамДокумента.ДополнительныйРезультат;
		
		ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
		СчитаемПоПравиламЗакона213ФЗ = ВыборкаПоШапкеДокумента.ПериодРегистрации >= ДатаЗакона213ФЗ И Движение.ПериодДействияНачало >= ДатаЗакона213ФЗ;
		
		Движение.ВариантАлгоритмаРасчета = ПолучитьВариантАлгоритмаРасчета(ВыборкаПоШапкеДокумента, СчитаемПоПравиламЗакона213ФЗ);
		Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаНарушенияРежима) И Движение.ПериодДействияНачало >= ВыборкаПоШапкеДокумента.ДатаНарушенияРежима Тогда
			Если СчитаемПоПравиламЗакона213ФЗ Тогда
				Если РасчетПоПравилам2010Года И ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
					Движение.ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйВ2011годуКакВ2010мСОграничениемВРазмереММОТ;
				Иначе
					Движение.ВариантАлгоритмаРасчета = Перечисления.ВариантыАлгоритмовРасчета.БольничныйСОграничениемВРазмереММОТ;
				КонецЕсли;
			Иначе
				НачислениеПоБольничномуЛистуПереопределяемый.УточнитьВариантАлгоритмаРасчетаПриНарушенииРежима(ВыборкаПоШапкеДокумента, Движение);
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Движение.ДополнительныйРезультат = 0;
		Движение.ВидУчетаВремени = ПроведениеРасчетов.ПолучитьВидУчетаВремени(ВыборкаПоСтрокамДокумента.СпособРасчета, ВыборкаПоСтрокамДокумента.ВидВремени, ВыборкаПоСтрокамДокумента.СуммированныйУчетРабочегоВремени, ВыборкаПоСтрокамДокумента.ВидИспользованияРабочегоВремени);
	КонецЕсли;

КонецПроцедуры // ДобавитьСтрокуОсновныхНачислений()

// По строке выборок из результатов запроса по документу формируем движения по регистру
//
// Параметры:
//	ВыборкаПоСтрокамДокумента				- спозиционированная на определеной строке выборка 
//											  из результата запроса к ТЧ документа, 
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуРасчетаСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборОсновныеНачисления) Экспорт 
	
	Движение = НаборОсновныеНачисления.Добавить();
	
	СтрокаСвойствИзДокумента = "ПериодРегистрации,ФизЛицо,Организация,ДатаНачалаСобытия,СпособРасчета,"
									+ "ДатаНачалаРасчетногоПериода,ДатаОкончанияРасчетногоПериода,ПериодРасчетаСреднегоЗаработка";
	СтрокаСвойствИзСтрокиДокумента = "БазовыйПериодНачало,БазовыйПериодКонец,Сотрудник,ВидРасчета,Результат,СкидкаПоСтраховымВзносам," 
									+ "ОтработаноПоПятидневке,НормаПоПятидневке,ОтработаноДней,ОтработаноЧасов,КоэффициентИндексации,ЧислоМесяцев";
	
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,СтрокаСвойствИзДокумента);
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоСтрокамДокумента,СтрокаСвойствИзСтрокиДокумента);
	
КонецПроцедуры // ДобавитьСтрокуРасчетаСреднего()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.НачислениеПоБольничномуЛисту") Тогда
		
		Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
			ПериодРегистрации = НачалоМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
		КонецЕсли;
		
		ЗаполнитьПоПервичномуЛистку(Основание);
		
		ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
		Если ПериодРегистрации >= ДатаЗакона213ФЗ И ДатаНачалаСобытия < ДатаЗакона213ФЗ Тогда // переходный период 2010 года
			ПрочитатьДанныеОЛьготах();
		КонецЕсли;
		
		// добавим другие реквизиты
		Если ПервичныйБольничныйЛист.Пустая() Тогда
			ПервичныйБольничныйЛист	= Основание;
		КонецЕсли;
		
		ЯвляетсяПродолжениемБолезни = Истина;
		ДатаНачала = ПоследнийДеньБолезни(ПервичныйБольничныйЛист) + мДлинаСуток;
		ДатаНачалаОплаты = ДатаНачала;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		
		Если Не Основание.ТекущееОбособленноеПодразделение.Пустая() Тогда
			Организация = Основание.ТекущееОбособленноеПодразделение;
		Иначе
			Организация = Основание.Организация;
		КонецЕсли;
		
		Сотрудник	= Основание;
		Физлицо		= Основание.Физлицо;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);

	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Ложь); // данные по отразжению в учете уже не нужны

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	//Надо позвать проверку заполнения реквизитов шапки
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	
	ПроверятьМестоРаботы = НачислениеПоБольничномуЛистуПереопределяемый.ПроверятьМестоРаботы(ВыборкаПоШапкеДокумента);
	
	// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
	Если Не Отказ Тогда
		
		// Проверим непрерывность следования записей начислений
		ПроверитьНепрерывностьЗаписейНачислений(Отказ, Заголовок);
		
		Движения.ОсновныеНачисленияРаботниковОрганизаций.мВыполнятьВспомогательныеРасчеты = Истина;
		
		Движения.ПособияСоциальномуСтрахованию.мВыполнятьДополнительныеДвижения	= Истина;
		
		// перепишем данные из таблицы начислений в набор записей
		ВыборкаПоНачислениям = СформироватьЗапросПоНачислениям(ВыборкаПоШапкеДокумента).Выбрать();
		Пока ВыборкаПоНачислениям.Следующий() Цикл 
			
			// проверим очередную строку табличной части
			ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, Отказ, Заголовок, ПроверятьМестоРаботы, Истина);
			
			Если Не Отказ Тогда
				Если ВыборкаПоНачислениям.ОсновныеНачисления Тогда
					ДобавитьСтрокуОсновныхНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, Движения.ОсновныеНачисленияРаботниковОрганизаций);
				Иначе
					ПроведениеРасчетов.ДобавитьСтрокуДополнительныхНачислений(Движения.ДополнительныеНачисленияРаботниковОрганизаций, ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		// получим реквизиты табличной части
		ВыборкаПоРасчетСреднего = СформироватьЗапросПоРасчетСреднего().Выбрать();
		Пока ВыборкаПоРасчетСреднего.Следующий() Цикл
			
			// проверим очередную строку табличной части
			ПроверитьЗаполнениеСтрокиРасчетСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоРасчетСреднего, Отказ, Заголовок, ПроверятьМестоРаботы);
			
			Если Не Отказ Тогда
				ДобавитьСтрокуРасчетаСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоРасчетСреднего, Движения.РасчетСреднегоЗаработка);
			КонецЕсли;
			
		КонецЦикла;
		
		ПроведениеРасчетов.СформироватьПредоставленныеВычетыПоНДФЛ(ЭтотОбъект, ВыборкаПоШапкеДокумента, Истина, Отказ, Заголовок);
		
		// При выполнении процедуры ВыполнитьПрочиеДвиженияДокумента фактические отпуска списывать не нужно
		Движения.ОсновныеНачисленияРаботниковОрганизаций.мВыполнятьСписаниеФактическогоОтпуска			= Ложь;
		Движения.ДополнительныеНачисленияРаботниковОрганизаций.мВыполнятьСписаниеФактическогоОтпуска	= Ложь;
		
		НачислениеПоБольничномуЛистуПереопределяемый.ВыполнитьПрочиеДвиженияДокумента(ЭтотОбъект, ВыборкаПоШапкеДокумента, Отказ, Заголовок, ВыборкаПоНачислениям);
		
		Движения.ОсновныеНачисленияРаботниковОрганизаций.мВыполнятьСписаниеФактическогоОтпуска			= Истина;
		Движения.ДополнительныеНачисленияРаботниковОрганизаций.мВыполнятьСписаниеФактическогоОтпуска	= Истина;
		
		Если Не Отказ Тогда
			
			ПроведениеРасчетов.СформироватьЗачтенныеАвансыПоНДФЛ(ЭтотОбъект, ВыборкаПоШапкеДокумента, Истина);
			
			// НДФЛ к перечислению в бюджет
			УпрощенныйУчетНДФЛ = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "УпрощенныйУчетНДФЛ");
			Если УпрощенныйУчетНДФЛ И Движения.НДФЛРасчетыСБюджетом.Количество() > 0 Тогда
				Если ДатаВыплатыДохода >= ПроведениеРасчетов.ДатаИзмененияСроковУплатыНалога() Тогда
					ПроведениеРасчетов.ВписатьДатыВыплатыСрокУплатыВУдержанныеНалоги(Движения.НДФЛРасчетыСБюджетом, ДатаВыплатыДохода, ?(ЗначениеЗаполнено(ПерерассчитываемыйДокумент), Перечисления.СрокиПеречисляемогоНалога.ПрочиеДоходы, Перечисления.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные));
				КонецЕсли;
				Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Загрузить(ПроведениеРасчетов.РасчетыНалоговогоАгентаПоУдержанномуНДФЛ(Движения.НДФЛРасчетыСБюджетом.Выгрузить()))
			КонецЕсли;
		
			// выполним удаление перерасчетов исправленного документа
			Если ЗначениеЗаполнено(ПерерассчитываемыйДокумент) Тогда
				ПроведениеРасчетов.УдалитьСведенияОПерерасчетеДокумента(Ссылка, Истина); // Только по исправленным документам
			КонецЕсли;
		
			Для Каждого Набор Из Движения Цикл
				ТипНабораЗаписей = ТипЗнч(Набор);
				Если ТипНабораЗаписей = Тип("РегистрРасчетаНаборЗаписей.ОсновныеНачисленияРаботниковОрганизаций") 
					Или ТипНабораЗаписей = Тип("РегистрРасчетаНаборЗаписей.ДополнительныеНачисленияРаботниковОрганизаций") Тогда
					Попытка
					   Набор.Записать()
					Исключение 
					  ВызватьИсключение ОбщегоНазначенияЗК.ПолучитьПричинуОшибки(ИнформацияОбОшибке()).Описание
					КонецПопытки; 
				КонецЕсли;
			КонецЦикла;
			ПроведениеРасчетов.ОбработатьТаблицуПерерасчетов(Ссылка);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаУдаленияПроведения(Отказ)
	Движения.ОсновныеНачисленияРаботниковОрганизаций.мВыполнятьВспомогательныеРасчеты = Истина;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЕстьРасчетыПоКалендарнымГодам() Тогда
		ГодыРасчетаСреднего2011.Очистить();
		РасчетСреднего2011.Очистить();
	КонецЕсли;
	Если Не ЕстьРасчетыПоМесяцам() Тогда
		РасчетСреднего.Очистить();
		ДнейОплатыРаботодателем = ДниОплачиваемыеРаботодателем(ПериодРегистрации)
	КонецЕсли;
	
	Для каждого СтрокаТЧ Из РасчетСреднего2011 Цикл
		Если СтрокаТЧ.РасчетныйГод <> 0 Тогда
			СтрокаТЧ.БазовыйПериодНачало = Дата(СтрокаТЧ.РасчетныйГод, 1, 1)
		Иначе 
			СтрокаТЧ.БазовыйПериодНачало = '00010101';
		КонецЕсли;
	КонецЦикла;
	
	НачислениеПоБольничномуЛистуПереопределяемый.ДополнительныеДействияПередЗаписью(ЭтотОбъект);
	
	//Blik 011216 59819 н
	ПРГ_ПроверитьПересечения();
	//Blik 011216 59819 к
	
	//Blik 170217 62495 н
	Проврить_Уведомить_Инвалидность();
	//Blik 170217 62495 к
	
КонецПроцедуры
//Blik 011216 59819 н
Процедура ПРГ_ПроверитьПересечения()
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СостояниеРаботниковОрганизацийСрезПоследних.Регистратор,
	|	СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник,
	|	СостояниеРаботниковОрганизацийСрезПоследних.Состояние
	|ИЗ
	|	РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних КАК СостояниеРаботниковОрганизацийСрезПоследних
	|ГДЕ
	|	(СостояниеРаботниковОрганизацийСрезПоследних.Период МЕЖДУ &ДатаНбл И &ДатаКбл
	|			ИЛИ СостояниеРаботниковОрганизацийСрезПоследних.ПериодЗавершения МЕЖДУ &ДатаНбл И &ДатаКбл)
	|	И СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник = &Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор,
	|	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник,
	|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &Сотрудник
	|	И (ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало МЕЖДУ &ДатаНбл И &ДатаКбл
	|			ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец МЕЖДУ &ДатаНбл И &ДатаКбл)
	|	И ОсновныеНачисленияРаботниковОрганизаций.Регистратор <> &ТекДок
	|	И ТИПЗНАЧЕНИЯ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор) <> ТИП(Документ.НачислениеЗарплатыРаботникамОрганизаций)
	|	И ТИПЗНАЧЕНИЯ(ОсновныеНачисленияРаботниковОрганизаций.Регистратор) <> ТИП(Документ.ТабельУчетаРабочегоВремениОрганизации)";

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДатаНбл",	ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКбл",	ДатаОкончания);
	Запрос.УстановитьПараметр("Сотрудник",	Сотрудник);
	Запрос.УстановитьПараметр("ТекДок",		Ссылка);
	
	Выборкарезультата = Запрос.Выполнить().Выбрать();
	ТекстПересечения="";
	Пока Выборкарезультата.Следующий() Цикл
		 ТекстПересечения = ТекстПересечения+" "+Выборкарезультата.Регистратор+" "; 
	КонецЦикла;
	посттекст = "По сотруднику "+СокрЛП(Строка(Сотрудник))+ " обнаружены пересечения периодов в документах: ";
	Если не ТекстПересечения="" Тогда
		 СтрСообщения = посттекст + " "+ ТекстПересечения;
		 Сообщить(СтрСообщения);
	КонецЕсли;
КонецПроцедуры
//Blik 011216 59819 к

//Blik 170217 62495 н
Процедура	Проврить_Уведомить_Инвалидность()
Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОбИнвалидностиФизлицСрезПоследних.Физлицо,
	|	СведенияОбИнвалидностиФизлицСрезПоследних.Инвалидность,
	|	СведенияОбИнвалидностиФизлицСрезПоследних.Физлицо.Наименование КАК ФИО
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&ДатаСведений, ) КАК СведенияОбИнвалидностиФизлицСрезПоследних
	|ГДЕ
	|	СведенияОбИнвалидностиФизлицСрезПоследних.Инвалидность = ИСТИНА
	|	И СведенияОбИнвалидностиФизлицСрезПоследних.Физлицо = &Физлицо";

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДатаСведений",	Дата);
	Запрос.УстановитьПараметр("Физлицо",	Сотрудник.Физлицо); 
	
	ТекстСотрудник = "";
	
	ВыборкаРезультат = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаРезультат.Следующий() Тогда
		 ТекстСотрудник = "ВНИМАНИЕ!!! Сотрудник "+СокрЛП(Строка(ВыборкаРезультат.ФИО))+" является инвалидом!!!"
	КонецЕсли;
	
	Если не ТекстСотрудник = "" Тогда
		Сообщить(ТекстСотрудник);
	КонецЕсли;
	
КонецПроцедуры
//Blik 170217 62495 к

	
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток	= 86400; // в секундах

