////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ПодписатьДокументНаКлиенте(СтруктураПараметровПодписи, Подписан)
		
	// Ограничение - в таблице Вложения не может быть больше одной строки.
	ТекДокумент = Вложения[0].Ссылка;
	
	Попытка
		МенеджерКриптографии = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьМенеджерКриптографии();
	Исключение
		ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСообщениеОбОшибке("100");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецПопытки;
	
	Сертификат = ЭлектроннаяЦифроваяПодписьКлиент.ПолучитьСертификатПоОтпечатку(
											СтруктураПараметровПодписи.Отпечаток);
	СтруктураПараметровПодписи.Вставить("Сертификат", Сертификат);
	
	ВключатьСертификатСубъекта = РежимВключенияСертификатовКриптографии.ВключатьСертификатСубъекта;
	МенеджерКриптографии.ВключениеСертификатовВПодпись = ВключатьСертификатСубъекта;
	
	ДанныеФайла = ПрисоединенныеФайлыСлужебныйВызовСервера.ПолучитьДанныеФайла(ТекДокумент);
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
	ДанныеПодписи = ЭлектроннаяЦифроваяПодписьКлиент.СформироватьДанныеПодписи(
													МенеджерКриптографии,
													ТекДокумент,
													ДвоичныеДанныеФайла,
													СтруктураПараметровПодписи);
		
	ЭлектронныеДокументыСлужебныйВызовСервера.ДобавитьПодпись(ТекДокумент, ДанныеПодписи);
	ЭлектронныеДокументыСлужебныйКлиент.ОпределитьСтатусыПодписей(ТекДокумент);
	Подписан = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПодписатьДокументНаСервере(Знач СтруктураДанныхПодписи, Подписан)
	
	// Ограничение - в таблице Вложения не может быть больше одной строки.
	ТекДокумент = Вложения[0].Ссылка;
	
	Попытка
		МенеджерКриптографии = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьМенеджерКриптографии();
	Исключение
		ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСообщениеОбОшибке("110");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецПопытки;
	
	ВключатьСертификатСубъекта = РежимВключенияСертификатовКриптографии.ВключатьСертификатСубъекта;
	МенеджерКриптографии.ВключениеСертификатовВПодпись = ВключатьСертификатСубъекта;
	
	Сертификат = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСертификатПоОтпечатку(
														СтруктураДанныхПодписи.Отпечаток);
	СтруктураДанныхПодписи.Вставить("Сертификат", Сертификат);
	
	ДанныеФайла = ПрисоединенныеФайлыСлужебныйВызовСервера.ПолучитьДанныеФайла(ТекДокумент);
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
	ДанныеПодписи = ЭлектронныеДокументыСлужебныйВызовСервера.СформироватьДанныеПодписи(МенеджерКриптографии,
																						ТекДокумент,
																						ДвоичныеДанныеФайла,
																						СтруктураДанныхПодписи);
	ЭлектронныеДокументыСлужебныйВызовСервера.ДобавитьПодпись(ТекДокумент, ДанныеПодписи);
	ЭлектронныеДокументыСлужебныйВызовСервера.ОпределитьСтатусыПодписей(ТекДокумент);
	Подписан = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	Если Объект.Направление = Перечисления.НаправленияЭД.Исходящий Тогда
		Элементы.Вложения.ТолькоПросмотр  = Ложь;
		Элементы.Сообщение.ТолькоПросмотр = Ложь;
		Элементы.Вложения.КоманднаяПанель.ПодчиненныеЭлементы.Добавить.Видимость = Истина;
		Элементы.Вложения.КоманднаяПанель.ПодчиненныеЭлементы.Удалить.Видимость  = Истина;
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ПодписатьИОтправитьЭД.Заголовок = НСтр(
			"ru = 'Отправить документ'");
	Иначе
		Элементы.Вложения.ТолькоПросмотр  = Истина;
		Элементы.Сообщение.ТолькоПросмотр = Истина;
		Элементы.Вложения.КоманднаяПанель.ПодчиненныеЭлементы.Добавить.Видимость = Ложь;
		Элементы.Вложения.КоманднаяПанель.ПодчиненныеЭлементы.Удалить.Видимость  = Ложь;
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ПодписатьИОтправитьЭД.Заголовок = НСтр(
			"ru = 'Отправить подтверждение'");
	КонецЕсли;
	
	Если Объект.СтатусДокумента = Перечисления.СтатусыЭД.ПодготовленоПодтверждение
		ИЛИ Объект.СтатусДокумента = Перечисления.СтатусыЭД.ПодготовленКОтправке Тогда
		
		Элементы.ПодписатьИОтправитьЭД.Доступность = Вложения.Количество() > 0;
		Элементы.Подписать.Доступность             = Вложения.Количество() > 0;
		Элементы.ОткрытьКарточкуФайла.Доступность  = Вложения.Количество() > 0;
	ИначеЕсли Объект.СтатусДокумента = Перечисления.СтатусыЭД.Получен
		ИЛИ Объект.СтатусДокумента = Перечисления.СтатусыЭД.НеОтправлен Тогда
		
		Элементы.Подписать.Доступность             = Вложения.Количество() > 0;
		Элементы.ОткрытьКарточкуФайла.Доступность  = Вложения.Количество() > 0;
		Элементы.ПодписатьИОтправитьЭД.Доступность = Ложь;
	Иначе
		Элементы.ПодписатьИОтправитьЭД.Доступность = Ложь;
		Элементы.Добавить.Доступность              = Ложь;
		Элементы.Удалить.Доступность               = Ложь;
		Элементы.Подписать.Доступность             = Ложь;
		Элементы.Сообщение.Доступность             = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокФормы()
	
	Если Объект.Направление = Перечисления.НаправленияЭД.Исходящий Тогда
		ТекстЗаголовка = НСтр("ru = 'Исходящий документ %1 от %2'");
		ЭтаФорма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстЗаголовка, Объект.Номер, Объект.Дата);
	Иначе
		ТекстЗаголовка = НСтр("ru = 'Входящий документ %1 от %2'");
		ЭтаФорма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстЗаголовка, Объект.Номер, Объект.Дата);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ДокументЗаписан()
	
	ФлагЗаписи = Истина;
	
	Если Модифицированность ИЛИ Объект.Ссылка.Пустая() Тогда
		ФлагЗаписи = Ложь;
		
		ТекстВопроса = НСтр("ru = 'Документ еще не записан!
		|Вложения можно добавлять только в записанный документ.
		|Записать документ?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьНовыйДокумент(ФлагЗаписи);
		КонецЕсли;
		
		Оповестить("ОбновитьСостояниеЭД");
	КонецЕсли;
	
	Возврат ФлагЗаписи;
	
КонецФункции

&НаСервере
Процедура ЗаписатьНовыйДокумент(ФлагЗаписи)
	
	ОбъектДокумент = РеквизитФормыВЗначение("Объект");
	Если ЕстьСоглашение(ОбъектДокумент) Тогда
		ОбъектДокумент.Дата = ТекущаяДатаСеанса();
		ОбъектДокумент.Записать();
		ЗначениеВРеквизитФормы(ОбъектДокумент, "Объект");
		
		ФлагЗаписи = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПрисоединенныеФайлыКСообщению(МассивСтруктур)
	
	МассивВозврата = Новый Массив;
	ПараметрыСоглашения = ЭлектронныеДокументыСлужебный.ОпределитьНастройкиОбменаЭДПоИсточнику(Объект.Ссылка);
	Если ЗначениеЗаполнено(ПараметрыСоглашения) Тогда
		ИдентификаторОрганизации = ПараметрыСоглашения.ИдентификаторОрганизации;
		ИдентификаторКонтрагента = ПараметрыСоглашения.ИдентификаторКонтрагента;
		СоглашениеЭД             = ПараметрыСоглашения.СоглашениеЭД;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыСоглашения) И НЕ ЗначениеЗаполнено(СоглашениеЭД) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтруктураФайла Из МассивСтруктур Цикл
		ФайлБезРасширения = Неопределено;
		ФайлРасширение = Неопределено;
		АдресВоВременномХранилище = Неопределено;
		Если НЕ СтруктураФайла.Свойство("ФайлБезРасширения", ФайлБезРасширения)
			ИЛИ НЕ СтруктураФайла.Свойство("ФайлРасширение", ФайлРасширение)
			ИЛИ НЕ СтруктураФайла.Свойство("АдресВоВременномХранилище", АдресВоВременномХранилище) Тогда
			Продолжить;
		КонецЕсли;
		ДобавленныйФайл = ПрисоединенныеФайлы.ДобавитьФайл(Объект.Ссылка,
														   ФайлБезРасширения,
														   ФайловыеФункцииКлиентСервер.РасширениеБезТочки(ФайлРасширение),
														   ТекущаяДатаСеанса(),
														   ТекущаяДатаСеанса(),
														   АдресВоВременномХранилище,
														   ,
														   ,
														   Справочники.ЭДПрисоединенныеФайлы.ПолучитьСсылку());
			
		МассивВозврата.Добавить(ДобавленныйФайл);
		
		НомерДокумента = ЭлектронныеДокументыВнутренний.ВернутьИдЭД(
			ДобавленныйФайл, ИдентификаторОрганизации, Неопределено);
		
		СтруктураДокумента =  Новый Структура(
			"Автор, ВладелецЭД, Организация, Контрагент,
			|ВидЭД, НаправлениеЭД, НомерЭД, УникальныйИД,
			|Отправитель, Получатель, НомерДокументаОтправителя, ДатаДокументаОтправителя, НомерВерсииЭД, СоглашениеЭД,
			|ТипЭлементаВерсииЭД, СтатусЭД",
			ПользователиСервер.АвторизованныйПользователь(), Объект.Ссылка, Объект.Организация, Объект.Контрагент,
			Перечисления.ВидыЭД.ПроизвольныйЭД, Перечисления.НаправленияЭД.Исходящий, НомерДокумента, НомерДокумента,
			ИдентификаторОрганизации, ИдентификаторКонтрагента, Объект.Номер, Объект.Дата, 0, СоглашениеЭД,
			Перечисления.ТипыЭлементовВерсииЭД.ПервичныйЭД, Перечисления.СтатусыЭД.НеОтправлен);
			
		ЭлектронныеДокументыСлужебный.ИзменитьПоСсылкеПрисоединенныйФайл(ДобавленныйФайл, СтруктураДокумента);
	КонецЦикла;
	
	ЭтаФорма.Прочитать();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуВложений()
	
	ЗапросВложений = Новый Запрос;
	ЗапросВложений.УстановитьПараметр("ВладелецФайла", Объект.Ссылка);
	ЗапросВложений.Текст =
	"ВЫБРАТЬ
	|	ЭДПрисоединенныеФайлы.Ссылка КАК Ссылка,
	|	ЭДПрисоединенныеФайлы.Наименование КАК ИмяФайла,
	|	ЭДПрисоединенныеФайлы.Расширение КАК Расширение
	|ИЗ
	|	Справочник.ЭДПрисоединенныеФайлы КАК ЭДПрисоединенныеФайлы
	|ГДЕ
	|	ЭДПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
	|	И ЭДПрисоединенныеФайлы.ВидЭД = ЗНАЧЕНИЕ(Перечисление.ВидыЭД.ПроизвольныйЭД)
	|	И НЕ ЭДПрисоединенныеФайлы.ПометкаУдаления";
	Результат = ЗапросВложений.Выполнить().Выгрузить();
	
	Результат.Колонки.Добавить("ИндексКартинки");
	Результат.Колонки.Добавить("НаименованиеФайла");
	
	Для Каждого ЭлементРезультат Из Результат Цикл
		
		ЭлементРезультат.ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(
			ЭлементРезультат.Расширение);
		ЭлементРезультат.НаименованиеФайла = ЭлементРезультат.ИмяФайла + "." + ЭлементРезультат.Расширение;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Результат, "Вложения");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусДокумента(ПараметрыДокумента)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ПараметрыДокумента.Свойство("МассивНаОтправку") И ПараметрыДокумента.МассивНаОтправку.Количество() > 0 Тогда
		ЭД = ПараметрыДокумента.МассивНаОтправку[0];
		ДокументОбъект.СтатусДокумента = ЭД.СтатусЭД;
	КонецЕсли;
	
	Если ПараметрыДокумента.Свойство("Подписан") И ПараметрыДокумента.Подписан Тогда
		Если ДокументОбъект.Направление = Перечисления.НаправленияЭД.Входящий Тогда
			
			ДокументОбъект.СтатусДокумента = Перечисления.СтатусыЭД.ПодготовленоПодтверждение;
		Иначе
			ДокументОбъект.СтатусДокумента = Перечисления.СтатусыЭД.ПодготовленКОтправке;
		КонецЕсли;
	КонецЕсли;
	
	Если (СоглашениеОпределялось И ЗначениеЗаполнено(СоглашениеЭД))
		ИЛИ (НЕ СоглашениеОпределялось И ЕстьСоглашение(ДокументОбъект)) Тогда
		
		ДокументОбъект.Записать();
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
		ЭтаФорма.Прочитать();
		ОбновитьЗаголовокФормы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивЭДДляОтправки()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если ЭтаФорма.Модифицированность И ЕстьСоглашение(ДокументОбъект) Тогда
		ДокументОбъект.Записать();
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	КонецЕсли;
	
	ТаблицаВложений = РеквизитФормыВЗначение("Вложения");

	МассивВложений = ТаблицаВложений.ВыгрузитьКолонку("Ссылка");
	ЭтоИсходящийДокумент = Объект.Направление = Перечисления.НаправленияЭД.Исходящий;
	
	СтруктураВозврата = Новый Структура("МассивНаОтправку, ЭтоИсходящийДокумент", МассивВложений, ЭтоИсходящийДокумент);
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьВыбранныеДокументы(ПараметрыПодписи)
	
	СоотвСоглашенийИСтруктурСертификатов = ЭлектронныеДокументыСлужебныйКлиент.СоотвСоглашенийИСтруктурСертификатовДляАвторизации(,
																					   ПараметрыПодписи.МассивНаОтправку);
	СтруктураРезультата = ЭлектронныеДокументыСлужебныйКлиент.ПодготовитьИОтправитьПЭД(ПараметрыПодписи.МассивНаОтправку,
																					   Ложь,
																					   СоотвСоглашенийИСтруктурСертификатов);
		
	ЭтаФорма.Прочитать();
	
	Если СтруктураРезультата.КолОтправленных > 0 Тогда
		ТекстСостояния = НСтр("ru = 'Отправлено: (%1)'");
		Количество = СтруктураРезультата.КолОтправленных;
	Иначе
		ТекстСостояния = НСтр("ru = 'Подготовлено к отправке: (%1)'");
		Количество = СтруктураРезультата.КолПодготовленных;
	КонецЕсли;
	ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСостояния, Количество);
	ТекстЗаголовка = НСтр("ru = 'Обмен электронными документами'");
	ПоказатьОповещениеПользователя(ТекстЗаголовка, , ТекстСостояния);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЛишниеПрисоединенныеФайлы()
	
	ПараметрыВыборки = Новый Структура("ВладелецФайла", Объект.Ссылка);
	ВыборкаПрисоединенныхФайлов = ЭлектронныеДокументыСлужебный.ПолучитьВыборкуЭДПоОтбору(ПараметрыВыборки);
	
	Пока ЗначениеЗаполнено(ВыборкаПрисоединенныхФайлов) И ВыборкаПрисоединенныхФайлов.Следующий() Цикл
		МассивФайлов = Вложения.Выгрузить().ВыгрузитьКолонку("Ссылка");
		Если МассивФайлов.Найти(ВыборкаПрисоединенныхФайлов.Ссылка) = Неопределено Тогда
			ВыборкаПрисоединенныхФайлов.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина, Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЕстьСоглашение(ОбъектДокумент)
	
	НастройкиЭД = ЭлектронныеДокументыСлужебный.ОпределитьНастройкиОбменаЭДПоИсточнику(ОбъектДокумент);
	СоглашениеОпределялось = Истина;
	Если ЗначениеЗаполнено(НастройкиЭД) Тогда
		ОбъектДокумент.ДополнительныеСвойства.Вставить("ЕстьСоглашение", Истина);
		СоглашениеЭД = НастройкиЭД.СоглашениеЭД;
		Возврат Истина;
	Иначе
		СоглашениеЭД = Справочники.СоглашенияОбИспользованииЭД.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция КоличествоПодписейЭД(ЭлектронныйДокумент)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭДПрисоединенныеФайлыЭлектронныеЦифровыеПодписи.Подпись
	|ИЗ
	|	Справочник.ЭДПрисоединенныеФайлы.ЭлектронныеЦифровыеПодписи КАК ЭДПрисоединенныеФайлыЭлектронныеЦифровыеПодписи
	|ГДЕ
	|	ЭДПрисоединенныеФайлыЭлектронныеЦифровыеПодписи.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЭлектронныйДокумент);
	
	Возврат Запрос.Выполнить().Выгрузить().Количество();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодписатьИОтправить(Команда)
	
	ОчиститьСообщения();
	
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		
		ПараметрыДокумента = ПолучитьМассивЭДДляОтправки();
		ОбработатьВыбранныеДокументы(ПараметрыДокумента);
		ОбновитьСтатусДокумента(ПараметрыДокумента);
		Оповестить("ОбновитьСостояниеЭД");
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьДокумент(Команда)
	
	Подписан = Ложь;
	
	// Ограничение - в таблице Вложения не может быть больше одной строки.
	Если Вложения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ОбъектСсылка", Объект.Ссылка);
	
	ОткрытьФорму("ОбщаяФорма.УстановкаПодписиЭД",
			ПараметрыФормы,
			ЭтаФорма,
			УникальныйИдентификатор,
			ВариантОткрытияОкна.ОтдельноеОкно);
			
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуФайла(Команда)
	
	// Ограничение - в таблице Вложения не может быть больше одной строки.
	Если Вложения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЭлектронныйДокумент = Вложения[0].Ссылка;
	КоличествоПодписей = КоличествоПодписейЭД(ЭлектронныйДокумент);
	
	ПараметрыОткрытия = Новый Структура("ПрисоединенныйФайл", ЭлектронныйДокумент);
	ОткрытьФормуМодально("ОбщаяФорма.ПрисоединенныйФайл", ПараметрыОткрытия);
	
	КоличествоПодписейПослеПодписи = КоличествоПодписейЭД(ЭлектронныйДокумент);
	Если КоличествоПодписей <> КоличествоПодписейПослеПодписи Тогда
		
		ПараметрыДокумента = Новый Структура;
		ПараметрыДокумента.Вставить("Подписан", Истина);
		
	Если ЭлектронныеДокументыСлужебныйВызовСервера.ВыполнятьКриптооперацииНаСервере() Тогда
		ЭлектронныеДокументыСлужебныйВызовСервера.ОпределитьСтатусыПодписей(ЭлектронныйДокумент);
	Иначе
		ЭлектронныеДокументыСлужебныйКлиент.ОпределитьСтатусыПодписей(ЭлектронныйДокумент);
	КонецЕсли;
		
		ОбновитьСтатусДокумента(ПараметрыДокумента)
	КонецЕсли;
	
	ЭтаФорма.Прочитать();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не ЭтаФорма.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ДокументЗаписан() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Ограничение оператора Такском на количество пересылаемых вложений.
	Если Вложения.Количество() > 0 Тогда
		ТекстСообщения = НСтр("ru = 'Операция отменена. Добавить возможно только одно вложение.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат;
	КонецЕсли;
	
	АдресВХранилище = Неопределено;
	ВыбранныйФайл   = "";
	СтруктураФайла  = Новый Структура;
	МассивСтруктур  = Новый Массив;
	Если ПоместитьФайл(АдресВХранилище, , ВыбранныйФайл, Истина, УникальныйИдентификатор) Тогда
		ФайлДанных = Новый Файл(ВыбранныйФайл);
		СтруктураФайла.Вставить("ФайлБезРасширения",         ФайлДанных.ИмяБезРасширения);
		СтруктураФайла.Вставить("ФайлРасширение",            ФайлДанных.Расширение);
		СтруктураФайла.Вставить("АдресВоВременномХранилище", АдресВХранилище);
		МассивСтруктур.Добавить(СтруктураФайла);
		
		ДобавитьПрисоединенныеФайлыКСообщению(МассивСтруктур);
	КонецЕсли;
	ОбновитьТаблицуВложений();
	УстановитьДоступностьЭлементов();
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПослеУдаления(Элемент)
	
	Если ЭлектронныеДокументыСлужебныйВызовСервера.ЕстьПравоОбработкиЭД() Тогда
		УдалитьЛишниеПрисоединенныеФайлы();
		УстановитьДоступностьЭлементов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	// Ограничение - в таблице Вложения не может быть больше одной строки.
	ЭД = Вложения[0].Ссылка;
	// Откроем вложение по стандартному механизму
	ДанныеФайла = ПрисоединенныеФайлыСлужебныйВызовСервера.ПолучитьДанныеФайла(ЭД, УникальныйИдентификатор);
	ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	
	ОбновитьЗаголовокФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Объект") Тогда
		ЗначениеВРеквизитФормы(Параметры.Объект.ПолучитьОбъект(), "Объект");
	КонецЕсли;
		
	Если Параметры.Ключ.Пустая() Тогда
		Объект.СтатусДокумента = Перечисления.СтатусыЭД.НеОтправлен;
		Объект.Направление     = Перечисления.НаправленияЭД.Исходящий;
	КонецЕсли;
	
	Если НЕ Объект.Прочитан И НЕ Объект.Ссылка.Пустая()
		И Объект.Направление = Перечисления.НаправленияЭД.Входящий Тогда
		Документ = РеквизитФормыВЗначение("Объект");
		Документ.Прочитан = Истина;
		Документ.Записать();
		ЗначениеВРеквизитФормы(Документ, "Объект");
		ИзмененСтатус = Истина;
	КонецЕсли;
	
	ОбновитьТаблицуВложений();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЗаголовокФормы();
	Если ИзмененСтатус Тогда
		Оповестить("ОбновитьСостояниеЭД");
	КонецЕсли;
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьЗаголовокФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЕстьСоглашение(ТекущийОбъект) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Подписан = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Если ЭлектронныеДокументыСлужебныйВызовСервера.ВыполнятьКриптооперацииНаСервере() Тогда
			ПодписатьДокументНаСервере(ВыбранноеЗначение, Подписан);
		Иначе
			ПодписатьДокументНаКлиенте(ВыбранноеЗначение, Подписан);
		КонецЕсли;
	КонецЕсли;
	
	ЭтаФорма.Прочитать();
	
	Если Подписан Тогда
		ПараметрыДокумента = Новый Структура;
		ПараметрыДокумента.Вставить("Подписан", Истина);
		
		ОбновитьСтатусДокумента(ПараметрыДокумента);
		
		ЭтаФорма.Прочитать();
		УстановитьДоступностьЭлементов();
		
		ТекстСостояния = НСтр("ru = 'Подписано: (1)'");
		ТекстЗаголовка = НСтр("ru = 'Обмен электронными документами'");
		ПоказатьОповещениеПользователя(ТекстЗаголовка, ,ТекстСостояния);
	КонецЕсли;
	
КонецПроцедуры
