////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мУдалятьДвижения;

Перем мДлинаСуток;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)
	
	// Сотрудник
	НетФизлица = НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Физлицо);
	Если НетФизлица Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// Результат
	НетРезультата = НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Результат);
	Если НетРезультата Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан результат!", Отказ, Заголовок);
	КонецЕсли;
	
	// ДатаИзменения
	НетДатыИзменения = НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаИзменения);
	Если НетРезультата Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата изменения!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НетФизлица И НетРезультата И НетДатыИзменения Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ВыборкаПоШапкеДокумента.КандидатПринятНаИспытательныйСрок Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Кандидат не принят на испытательный срок!", Отказ, Заголовок);
		Возврат;
	КонецЕсли;

	Если ВыборкаПоШапкеДокумента.ЕстьРешение Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("По кандидату на дату решения уже присутствует решение!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ПланируемоеСобытие <> NULL Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("На дату решения по кандидату уже запланировано событие: " + ВыборкаПоШапкеДокумента.ПланируемоеСобытие, Отказ, Заголовок);
	КонецЕсли;
	
	РезультатИспытательногоСрокаПереопределяемый.ПроверитьЗаполнениеШапкиДополнительно(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                - выборка из результата запроса по шапке документа,
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров 
//                                           сведений по которым надо проводить документ,
//  СтруктураПараметров                    - структура параметров проведения,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, СтруктураПараметров = "")
	
	Если ВыборкаПоШапкеДокумента.Результат = Перечисления.РезультатыИспытательногоСрока.Положительный Тогда
		Движение = Движения.СостояниеРаботниковНаИспытательномСроке.Добавить();
		// Свойства
		Движение.Период				= ВыборкаПоШапкеДокумента.ДатаИзменения;
		// Измерения
		Движение.Физлицо			= ВыборкаПоШапкеДокумента.Физлицо;
		// Ресурсы
		Движение.Состояние			= Перечисления.СостоянияРаботникаНаИспытательномСроке.ПринятНаРаботу;
		
		РезультатИспытательногоСрокаПереопределяемый.ДополнитьДвижениеСостоянияРаботникаНаИспытательномСроке(Движение, ВыборкаПоШапкеДокумента);
		
	ИначеЕсли ВыборкаПоШапкеДокумента.Результат = Перечисления.РезультатыИспытательногоСрока.Отрицательный Тогда
		Движение = Движения.СостояниеРаботниковНаИспытательномСроке.Добавить();
		// Свойства
		Движение.Период				= ВыборкаПоШапкеДокумента.ДатаИзменения;
		// Измерения
		Движение.Физлицо			= ВыборкаПоШапкеДокумента.Физлицо;
		// Ресурсы
		Движение.Состояние			= Перечисления.СостоянияРаботникаНаИспытательномСроке.НеПрошелИспытательныйСрок;
		
		РезультатИспытательногоСрокаПереопределяемый.ДополнитьДвижениеСостоянияРаботникаНаИспытательномСроке(Движение, ВыборкаПоШапкеДокумента);
		
		Движение = Движения.НамеченныеСобытияПоПерсоналу.Добавить();
		// Свойства
		Движение.Период				= ВыборкаПоШапкеДокумента.ДатаИзменения;
		// Измерения
		РезультатИспытательногоСрокаПереопределяемый.ДополнитьДвижение(Движение, ВыборкаПоШапкеДокумента);
		
		Движение.ПланируемоеСобытие	= Перечисления.НамеченныеСобытияПоПерсоналу.УвольнениеПослеИспытательногоСрока;
		Движение.ДатаИзменения		= ВыборкаПоШапкеДокумента.ДатаИзменения;
		// Ресурсы
		
	ИначеЕсли ВыборкаПоШапкеДокумента.Результат = Перечисления.РезультатыИспытательногоСрока.Продлен Тогда
		Движение = Движения.НамеченныеСобытияПоПерсоналу.Добавить();
		// Свойства
		Движение.Период				= ВыборкаПоШапкеДокумента.Дата;
		// Измерения
		РезультатИспытательногоСрокаПереопределяемый.ДополнитьДвижение(Движение, ВыборкаПоШапкеДокумента);
		
		Движение.ПланируемоеСобытие	= Перечисления.НамеченныеСобытияПоПерсоналу.РезультатИспытательногоСрока;
		Движение.ДатаИзменения		= ВыборкаПоШапкеДокумента.ДатаИзменения;
		// Ресурсы
		
		РезультатИспытательногоСрокаПереопределяемый.ДобавитьСтрокуВДвиженияПоРегистрамСведенийПродленДополнительно(Движения, ВыборкаПоШапкеДокумента);
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	мУдалятьДвижения = Не ЭтоНовый();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначенияЗК.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	РезультатЗапросаПоШапке = РезультатИспытательногоСрокаПереопределяемый.СформироватьЗапросПоШапке(Режим, Ссылка);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда
			// Заполним записи в наборах записей регистров
			ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента);
		КонецЕсли;
	КонецЕсли;

	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначенияЗК.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		
		Сотрудник = ДанныеЗаполнения;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Для Каждого ПараметрЗаполнения Из ДанныеЗаполнения Цикл
			Если ЭтотОбъект.Метаданные().Реквизиты.Найти(ПараметрЗаполнения.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ЭтотОбъект[ПараметрЗаполнения.Ключ]) Тогда
				ЭтотОбъект[ПараметрЗаполнения.Ключ] = ПараметрЗаполнения.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток = 86400;
