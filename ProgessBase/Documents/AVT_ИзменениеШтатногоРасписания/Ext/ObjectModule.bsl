
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Формирует запрос по основным параметрам и надбавкам штатной единицы.
//
// Параметры:
// 	ПодразделениеОрганизации  - [СправочникСсылка.ПодразделенияОрганизаций] - филиал
// 	СписокШтатныхЕдиниц  - [СправочникСсылка.AVT_ШтатноеРасписание][СписокЗначений] - штатная единица
//
Функция СформироватьЗапросПоДаннымШтатнойЕдиницы(СписокШтатныхЕдиниц, ПодразделениеОрганизации = Неопределено) Экспорт
	
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.Период,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.ПодразделениеОрганизации,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.Должность КАК Должность,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.AVTШтатноеРасписание КАК ШтатноеРасписание,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.КоличествоСтавок,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.МинимальнаяТарифнаяСтавка,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.МаксимальнаяТарифнаяСтавка,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.ВидТарифнойСтавки,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.ГрафикРаботы,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.ОсобыеУсловияТруда,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.AVT_СистемаОплаты КАК СистемаОплаты,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.AVT_ТарифнаяСтавкаНаВремяИспСрока КАК ТарифнаяСтавкаНаВремяИспСрока,
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.AVT_СистемаОплатыНаВремяИспСрока КАК СистемаОплатыНаВремяИспСрока,
	|	СведенияОШтатныхЕдиницахОрганизаций.Информация,
	|	СведенияОШтатныхЕдиницахОрганизаций.ДолжностныеОбязанности,
	|	СведенияОШтатныхЕдиницахОрганизаций.ДолженЗнать,
	|	СведенияОШтатныхЕдиницахОрганизаций.ТребованияККвалификации,
	|	ЕСТЬNULL(ШтатноеРасписаниеОрганизацийСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаЗакрытия
	|ИЗ
	|	РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(&Период, AVTШтатноеРасписание В (&ШтатноеРасписание)) КАК ШтатноеРасписаниеОрганизацийНаАктуальнуюДату
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОШтатныхЕдиницахОрганизаций КАК СведенияОШтатныхЕдиницахОрганизаций
	|		ПО ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.AVTШтатноеРасписание = СведенияОШтатныхЕдиницахОрганизаций.AVTШтатноеРасписание
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних КАК ШтатноеРасписаниеОрганизацийСрезПоследних
	|		ПО ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.AVTШтатноеРасписание = ШтатноеРасписаниеОрганизацийСрезПоследних.AVTШтатноеРасписание
	|			И ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.Период < ШтатноеРасписаниеОрганизацийСрезПоследних.Период
	|ГДЕ
	|	ШтатноеРасписаниеОрганизацийНаАктуальнуюДату.КоличествоСтавок > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ШтатноеРасписание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.AVTШтатноеРасписание КАК ШтатноеРасписание,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ВидНадбавки,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель1,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель2,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель3,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель4,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель5,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель6,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Валюта1,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Валюта2,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Валюта3,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Валюта4,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Валюта5,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Валюта6,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ПодразделениеОрганизации КАК Подразделение,
	|	НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(&Период, AVTШтатноеРасписание В (&ШтатноеРасписание)) КАК НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	ШтатноеРасписание
	|ИТОГИ ПО
	|	ШтатноеРасписание";
	Запрос.УстановитьПараметр("ШтатноеРасписание",        СписокШтатныхЕдиниц);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Период",                   ?(ЗначениеЗаполнено(Дата), Дата, КонецДня(ТекущаяДата())));
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

// Заполняет документ на основании штатной единицы.
//
// Параметры:
// 	СписокШтатныхЕдиниц  - [СправочникСсылка.AVT_ШтатноеРасписание] [СписокЗначений] - штатная единица
//
Функция ЗаполнитьНаОснованииШтатнойЕдиницы(СписокШтатныхЕдиниц) Экспорт
	
	Результат = СформироватьЗапросПоДаннымШтатнойЕдиницы(СписокШтатныхЕдиниц);
	ВыборкаШЕ       = Результат[0].Выбрать();
	ВыборкаНадбавки = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПерваяСтрока = Истина;
	КлючСвязи    = 1;
	
	Пока ВыборкаШЕ.Следующий() Цикл
		
		Если ПерваяСтрока Тогда
			ПодразделениеОрганизации = AVT_ОбщегоНазначения.ПолучитьФилиалПодразделения(ВыборкаШЕ.ПодразделениеОрганизации);
			Организация              = ПодразделениеОрганизации.Владелец;
			ПерваяСтрока             = Ложь;
		КонецЕсли;
			
		НоваяСтрока = ШтатныеЕдиницы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаШЕ);
		НоваяСтрока.КлючСвязи = КлючСвязи;
		Если ВыборкаНадбавки.НайтиСледующий(ВыборкаШЕ.ШтатноеРасписание, "ШтатноеРасписание") Тогда
			Выборка = ВыборкаНадбавки.Выбрать();
			Пока Выборка.Следующий() Цикл
				НоваяСтрокаНадбавки = Надбавки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаНадбавки, Выборка);
				НоваяСтрокаНадбавки.КлючСвязи = КлючСвязи;
			КонецЦикла;
		КонецЕсли;
		КлючСвязи = КлючСвязи + 1;
	КонецЦикла;	
	
	Возврат КлючСвязи-1;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция СформироватьЗапросПоШтатнымЕдиницам()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Период,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.НомерСтроки,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ПодразделениеОрганизации,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Должность,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ШтатноеРасписание КАК AVTШтатноеРасписание,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.КоличествоСтавок КАК КоличествоСтавок,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.МинимальнаяТарифнаяСтавка,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.МаксимальнаяТарифнаяСтавка,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ВидТарифнойСтавки,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ГрафикРаботы,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ВалютаТарифнойСтавки,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ОсобыеУсловияТруда,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.СистемаОплаты КАК AVT_СистемаОплаты,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ТарифнаяСтавкаНаВремяИспСрока КАК AVT_ТарифнаяСтавкаНаВремяИспСрока,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.СистемаОплатыНаВремяИспСрока КАК AVT_СистемаОплатыНаВремяИспСрока,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Информация,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ДолжностныеОбязанности,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ДолженЗнать,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ТребованияККвалификации,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ДатаЗакрытия
	|ПОМЕСТИТЬ ВТШтатныеЕдиницы
	|ИЗ
	|	Документ.AVT_ИзменениеШтатногоРасписания.ШтатныеЕдиницы КАК AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы
	|ГДЕ
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТШтатныеЕдиницы.Период,
	|	ВТШтатныеЕдиницы.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ВТШтатныеЕдиницы.Должность КАК Должность,
	|	ВТШтатныеЕдиницы.AVTШтатноеРасписание,
	|	ВТШтатныеЕдиницы.КоличествоСтавок,
	|	ВТШтатныеЕдиницы.МинимальнаяТарифнаяСтавка,
	|	ВТШтатныеЕдиницы.МаксимальнаяТарифнаяСтавка,
	|	ВТШтатныеЕдиницы.ВидТарифнойСтавки,
	|	ВТШтатныеЕдиницы.ГрафикРаботы,
	|	ВТШтатныеЕдиницы.ВалютаТарифнойСтавки,
	|	ВТШтатныеЕдиницы.ОсобыеУсловияТруда,
	|	ВТШтатныеЕдиницы.AVT_СистемаОплаты,
	|	ВТШтатныеЕдиницы.AVT_ТарифнаяСтавкаНаВремяИспСрока,
	|	ВТШтатныеЕдиницы.AVT_СистемаОплатыНаВремяИспСрока,
	|	ВТШтатныеЕдиницы.Информация,
	|	ВТШтатныеЕдиницы.ДолжностныеОбязанности,
	|	ВТШтатныеЕдиницы.ДолженЗнать,
	|	ВТШтатныеЕдиницы.ТребованияККвалификации,
	|	ЕСТЬNULL(ДублиСтрок.НомерСтрокиДубль, 0) КАК НомерСтрокиДубль,
	|	ЛОЖЬ КАК Закрытие,
	|	ВТШтатныеЕдиницы.НомерСтроки
	|ИЗ
	|	ВТШтатныеЕдиницы КАК ВТШтатныеЕдиницы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТШтатныеЕдиницы.НомерСтроки КАК НомерСтроки,
	|			МИНИМУМ(ВТШтатныеЕдиницы1.НомерСтроки) КАК НомерСтрокиДубль
	|		ИЗ
	|			ВТШтатныеЕдиницы КАК ВТШтатныеЕдиницы
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТШтатныеЕдиницы КАК ВТШтатныеЕдиницы1
	|				ПО ВТШтатныеЕдиницы.AVTШтатноеРасписание = ВТШтатныеЕдиницы1.AVTШтатноеРасписание
	|					И ВТШтатныеЕдиницы.НомерСтроки > ВТШтатныеЕдиницы1.НомерСтроки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТШтатныеЕдиницы.НомерСтроки) КАК ДублиСтрок
	|		ПО ВТШтатныеЕдиницы.НомерСтроки = ДублиСтрок.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТШтатныеЕдиницы.ДатаЗакрытия,
	|	ВТШтатныеЕдиницы.ПодразделениеОрганизации,
	|	ВТШтатныеЕдиницы.Должность,
	|	ВТШтатныеЕдиницы.AVTШтатноеРасписание,
	|	0,
	|	ВТШтатныеЕдиницы.МинимальнаяТарифнаяСтавка,
	|	ВТШтатныеЕдиницы.МаксимальнаяТарифнаяСтавка,
	|	ВТШтатныеЕдиницы.ВидТарифнойСтавки,
	|	ВТШтатныеЕдиницы.ГрафикРаботы,
	|	ВТШтатныеЕдиницы.ВалютаТарифнойСтавки,
	|	ВТШтатныеЕдиницы.ОсобыеУсловияТруда,
	|	ВТШтатныеЕдиницы.AVT_СистемаОплаты,
	|	ВТШтатныеЕдиницы.AVT_ТарифнаяСтавкаНаВремяИспСрока,
	|	ВТШтатныеЕдиницы.AVT_СистемаОплатыНаВремяИспСрока,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	0,
	|	ИСТИНА,
	|	ВТШтатныеЕдиницы.НомерСтроки
	|ИЗ
	|	ВТШтатныеЕдиницы КАК ВТШтатныеЕдиницы
	|ГДЕ
	|	ВТШтатныеЕдиницы.ДатаЗакрытия <> ДАТАВРЕМЯ(1, 1, 1)";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоНадбавкам()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Период,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.НомерСтроки,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Должность КАК Должность,
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ШтатноеРасписание КАК AVTШтатноеРасписание,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.ВидНадбавки,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Показатель1,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Показатель2,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Показатель3,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Показатель4,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Показатель5,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Показатель6,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Валюта1,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Валюта2,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Валюта3,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Валюта4,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Валюта5,
	|	AVT_ИзменениеШтатногоРасписанияНадбавки.Валюта6
	|ИЗ
	|	Документ.AVT_ИзменениеШтатногоРасписания.ШтатныеЕдиницы КАК AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.AVT_ИзменениеШтатногоРасписания.Надбавки КАК AVT_ИзменениеШтатногоРасписанияНадбавки
	|		ПО AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Ссылка = AVT_ИзменениеШтатногоРасписанияНадбавки.Ссылка
	|			И AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.КлючСвязи = AVT_ИзменениеШтатногоРасписанияНадбавки.КлючСвязи
	|ГДЕ
	|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ПроверитьЗаполнениеТЧШтатныеЕдиницы(ТаблицаДанных, Отказ)
	
	#Если Клиент Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
	#КонецЕсли
	
	Для каждого Строка Из ТаблицаДанных Цикл
		Если Строка.НомерСтрокиДубль > 0 Тогда
			СрокаСообщенияОбОшибке = "Штатная единица в строке штатного расписания " + Строка.НомерСтроки + " уже использовалась в сроке " + Строка.НомерСтрокиДубль + ".";
			
			#Если Клиент Тогда
				ОбработкаКомментариев.ДобавитьСообщение(СрокаСообщенияОбОшибке, Перечисления.ВидыСообщений.Ошибка); 
				Отказ = Истина;
			#Иначе
				ОбщегоНазначения.СообщитьОбОшибке(СрокаСообщенияОбОшибке, Отказ, "", СтатусСообщения.Важное);
			#КонецЕсли
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		#Если Клиент Тогда
			ОбработкаКомментариев.ПоказатьСообщения();
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

Процедура ПерезаписатьДопИнформациюОШтатЕдин(ТаблицаДанных)
	
	Для каждого СтрокаШтатнойЕдиницы Из ТаблицаДанных Цикл
		Если Не СтрокаШтатнойЕдиницы.Закрытие Тогда
			НаборЗаписейСведенияОШтатныхЕдиницахОрганизации = РегистрыСведений.СведенияОШтатныхЕдиницахОрганизаций.СоздатьНаборЗаписей();
			
			НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Отбор.AVTШтатноеРасписание.Установить(СтрокаШтатнойЕдиницы.AVTШтатноеРасписание);		
			НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Прочитать();
			
			Если НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Количество() > 0 тогда
				Запись = НаборЗаписейСведенияОШтатныхЕдиницахОрганизации[0];
			Иначе
				Запись = НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Добавить();
			КонецЕсли;
			Запись.Должность				= СтрокаШтатнойЕдиницы.Должность;
			Запись.ПодразделениеОрганизации = СтрокаШтатнойЕдиницы.ПодразделениеОрганизации;
			Запись.Информация				    = СтрокаШтатнойЕдиницы.Информация;
			Запись.ДолжностныеОбязанности	    = СтрокаШтатнойЕдиницы.ДолжностныеОбязанности;
			Запись.ДолженЗнать				    = СтрокаШтатнойЕдиницы.ДолженЗнать;
			Запись.ТребованияККвалификации	    = СтрокаШтатнойЕдиницы.ТребованияККвалификации;
			Запись.AVTШтатноеРасписание		    = СтрокаШтатнойЕдиницы.AVTШтатноеРасписание;
			
			НаборЗаписейСведенияОШтатныхЕдиницахОрганизации.Записать(Истина);
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

// Выполняет движения по регистрам.
//
Процедура ДвиженияПоРегистрам(НаборДвижений, ТаблицаДанных, Отказ, Заголовок)
	
	НаборДвижений.Записывать = Истина;
	
	ТаблицаДвижений = НаборДвижений.ВыгрузитьКолонки();
	
	// Заполним таблицу движений
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДанных, ТаблицаДвижений);
	
	// Заполняем дополнительные поля
	ТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
	
	// Записываем набор записей
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "");
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.AVT_ШтатноеРасписание") Тогда
		ЗаполнитьНаОснованииШтатнойЕдиницы(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	#Если Клиент Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
	#КонецЕсли
	
	Для каждого Запись Из ШтатныеЕдиницы Цикл
		Ошибка = Ложь;
		Если Не ЗначениеЗаполнено(Запись.Период) Тогда
			Ошибка = Истина;
			
			СрокаСообщенияОбОшибке = "Для строки штатного расписания " + Запись.НомерСтроки + " не указана дата, с которой она действует.";
			
			#Если Клиент Тогда
				ОбработкаКомментариев.ДобавитьСообщение(СрокаСообщенияОбОшибке, Перечисления.ВидыСообщений.Ошибка);
			#Иначе
				ОбщегоНазначения.СообщитьОбОшибке(СрокаСообщенияОбОшибке, Отказ, "Элемент не записан!", СтатусСообщения.Важное);
			#КонецЕсли
		КонецЕсли;
		Если Запись.ПодразделениеОрганизации.Пустая() Тогда
			Ошибка = Истина;
			
			СрокаСообщенияОбОшибке = "Для строки штатного расписания " + Запись.НомерСтроки + " не указано подразделение.";
			
			#Если Клиент Тогда
				ОбработкаКомментариев.ДобавитьСообщение(СрокаСообщенияОбОшибке, Перечисления.ВидыСообщений.Ошибка);
			#Иначе
				ОбщегоНазначения.СообщитьОбОшибке(СрокаСообщенияОбОшибке, Отказ, "Элемент не записан!", СтатусСообщения.Важное);
			#КонецЕсли
		КонецЕсли;
		Если Запись.Должность.Пустая() Тогда
			Ошибка = Истина;
			
			СрокаСообщенияОбОшибке = "Для строки штатного расписания " + Запись.НомерСтроки + " не указана должность.";
			
			#Если Клиент Тогда
				ОбработкаКомментариев.ДобавитьСообщение(СрокаСообщенияОбОшибке, Перечисления.ВидыСообщений.Ошибка);
			#Иначе
				ОбщегоНазначения.СообщитьОбОшибке(СрокаСообщенияОбОшибке, Отказ, "Элемент не записан!", СтатусСообщения.Важное);
			#КонецЕсли
		КонецЕсли;
		
		Если Ошибка Тогда
			#Если Клиент Тогда
				ОбработкаКомментариев.ДобавитьСообщение("Элемент не записан!", Перечисления.ВидыСообщений.Ошибка);
			#КонецЕсли
			Отказ = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ Тогда
		#Если Клиент Тогда
			ОбработкаКомментариев.ПоказатьСообщения();
		#КонецЕсли
		
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Для каждого Запись Из ШтатныеЕдиницы Цикл
			Если Запись.ШтатноеРасписание.Пустая() Тогда
				ОбъектШтатноеРасписание = Справочники.AVT_ШтатноеРасписание.СоздатьЭлемент();
			Иначе
				ОбъектШтатноеРасписание = Запись.ШтатноеРасписание.ПолучитьОбъект();
			КонецЕсли;
			Попытка
				ОбъектШтатноеРасписание.Записать();
				Запись.ШтатноеРасписание = ОбъектШтатноеРасписание.Ссылка;
			Исключение
				ОбработкаКомментариев.ДобавитьСообщение(ОписаниеОшибки(), Перечисления.ВидыСообщений.Ошибка);
				Отказ = Истина;
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ТаблицаШтатныеЕдиницы = СформироватьЗапросПоШтатнымЕдиницам().Выгрузить();
	ТаблицаНадбавки       = СформироватьЗапросПоНадбавкам().Выгрузить();
	
	ПроверитьЗаполнениеТЧШтатныеЕдиницы(ТаблицаШтатныеЕдиницы, Отказ);
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(Движения.ШтатноеРасписаниеОрганизаций,            ТаблицаШтатныеЕдиницы, Отказ, Заголовок);
		ДвиженияПоРегистрам(Движения.НадбавкиПоШтатномуРасписаниюОрганизаций, ТаблицаНадбавки, Отказ, Заголовок);
		ПерезаписатьДопИнформациюОШтатЕдин(ТаблицаШтатныеЕдиницы);
	КонецЕсли;
	/////Вадим 30.01.2013 15:01:22
 	 ВыполнитьСписанияИзмененыхШтаток();
 
 ////ВадимКонец
 
КонецПроцедуры

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура;
	///СтруктураПечатныхФорм.Вставить("Приказ",	"Приказ");
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

///Вадим 30.01.2013 14:17:38
Процедура ВыполнитьСписанияИзмененыхШтаток()

/////// написано для того чтобы если у штатки меняется должность или подразделение, старые значения 	обнулялись
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Период,
		|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ПодразделениеОрганизации,
		|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Должность,
		|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.ШтатноеРасписание
		|ИЗ
		|	Документ.AVT_ИзменениеШтатногоРасписания.ШтатныеЕдиницы КАК AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы
		|ГДЕ
		|	AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.Ссылка = &Ссылка
		|	И AVT_ИзменениеШтатногоРасписанияШтатныеЕдиницы.КоличествоСтавок > 0";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
		ЗапросБыв = Новый Запрос;
		ЗапросБыв.Текст = 
		"ВЫБРАТЬ
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.Период,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.Регистратор,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.НомерСтроки,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.Активность,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.AVTШтатноеРасписание,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.ПодразделениеОрганизации,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.Должность,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.КоличествоСтавок,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.МинимальнаяТарифнаяСтавка,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.МаксимальнаяТарифнаяСтавка,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.ВидТарифнойСтавки,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.ГрафикРаботы,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.ВалютаТарифнойСтавки,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.ОсобыеУсловияТруда,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.AVT_СистемаОплаты,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.AVT_ТарифнаяСтавкаНаВремяИспСрока,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.AVT_СистемаОплатыНаВремяИспСрока,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.AVT_ПодразделениеОрганизации,
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.AVT_Должность
		|ИЗ
		|	РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(&Дата, ) КАК ШтатноеРасписаниеОрганизацийСрезПоследних
		|ГДЕ
		|	ШтатноеРасписаниеОрганизацийСрезПоследних.AVTШтатноеРасписание = &AVTШтатноеРасписание
		|	И ШтатноеРасписаниеОрганизацийСрезПоследних.КоличествоСтавок > 0";
		
		ЗапросБыв.УстановитьПараметр("AVTШтатноеРасписание", ВыборкаДетальныеЗаписи.ШтатноеРасписание);
		ЗапросБыв.УстановитьПараметр("Дата", НачалоДня(ВыборкаДетальныеЗаписи.Период)-1);
		
		РезультатБыв = ЗапросБыв.Выполнить();
		
		ВыборкаДетальныеЗаписиБыв = РезультатБыв.Выбрать();
		
		Если ВыборкаДетальныеЗаписиБыв.Следующий() тогда
			Если ВыборкаДетальныеЗаписиБыв.ПодразделениеОрганизации<>ВыборкаДетальныеЗаписи.ПодразделениеОрганизации или ВыборкаДетальныеЗаписиБыв.Должность<>ВыборкаДетальныеЗаписи.Должность  тогда
				нов=Движения.ШтатноеРасписаниеОрганизаций.Добавить();
				ЗаполнитьЗначенияСвойств(нов,ВыборкаДетальныеЗаписиБыв);
				нов.КоличествоСтавок=0;
				нов.Регистратор=Ссылка;
				нов.Период=ВыборкаДетальныеЗаписи.Период;
			Конецесли;	
		КонецЕсли;
		
	КонецЦикла;

	


КонецПроцедуры
//ВадимКонец