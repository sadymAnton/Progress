перем тзОбщ,счет96,общТаблицаСравненияПодразделений;
//начало изменений
Перем ТаблСоотвсчетовНУБУ;
//конец изменений 
//Blik 010216 48522 н
Перем СтатьяОбщехозяйственныхРасходовТек, СтатьяПроизводственныхРасходовТек, ВидУчетаНУТек; 
Перем СтатьяОбщехозяйственныхРасходовПред, СтатьяПроизводственныхРасходовПред, ВидУчетаНУПред, НетДанных, ЭтоСторно; 
//Blik 010216 48522 к


Функция получитьСчетПоВидуСтроки(вид,СпособОтражения,Дебет=ложь)
	ВидыСтроки=Перечисления.ПРГ_РаспределениеРезервовОтпусков;
	Если вид=ВидыСтроки.СуммаОтпускных тогда
		Если дебет тогда
			возврат СпособОтражения.СчетДт;	
		Иначе	
			возврат СпособОтражения.СчетКт;
		КонецЕсли;
	ИначеЕсли вид=ВидыСтроки.СтавкаПФРНакопительная тогда	
		возврат ПланыСчетов.Хозрасчетный.ПФР_нак;
	ИначеЕсли вид=ВидыСтроки.СтавкаПФРСтраховая тогда	
		возврат ПланыСчетов.Хозрасчетный.ПФР_страх;	
	ИначеЕсли вид=ВидыСтроки.СтавкаФОМС тогда	
		возврат ПланыСчетов.Хозрасчетный.ФФОМС;		
	ИначеЕсли вид=ВидыСтроки.СтавкаФССиНС тогда	
		возврат ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;			
	ИначеЕсли вид=ВидыСтроки.СтавкаФСС тогда	
		возврат ПланыСчетов.Хозрасчетный.ФСС;				
		
	конецесли;	
	

КонецФункции 


Процедура СписатьПриПеремещение()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Сотрудник,
		|	ВложенныйЗапрос.ПодразделениеОрганизацииНачальный,
		|	ВложенныйЗапрос.СпособОтражениеЗарплатыВРегУчетеНачальный,
		|	ВложенныйЗапрос.ПодразделениеОрганизацииКонечный,
		|	ВложенныйЗапрос.СпособОтражениеЗарплатыВРегУчетеКонечный,
		|	ВложенныйЗапрос.Вид,
		|	ВложенныйЗапрос.Сумма,
		|	ВложенныйЗапрос.Дни
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.Сотрудник КАК Сотрудник,
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииНачальный КАК ПодразделениеОрганизацииНачальный,
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.СпособОтражениеЗарплатыВРегУчетеНачальный КАК СпособОтражениеЗарплатыВРегУчетеНачальный,
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииКонечный КАК ПодразделениеОрганизацииКонечный,
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.СпособОтражениеЗарплатыВРегУчетеКонечный КАК СпособОтражениеЗарплатыВРегУчетеКонечный,
		|		ПРГ_РезервыОтпусковОстатки.Вид КАК Вид,
		|		ПРГ_РезервыОтпусковОстатки.СуммаОстаток КАК Сумма,
		|		ПРГ_РезервыОтпусковОстатки.ДниОстаток КАК Дни
		|	ИЗ
		|		Документ.ПРГ_РезервированиеОтпусков.ПеремещениеСотрудников КАК ПРГ_РезервированиеОтпусковПеремещениеСотрудников
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПРГ_РезервыОтпусков.Остатки(&Дата, ) КАК ПРГ_РезервыОтпусковОстатки
		|			ПО ПРГ_РезервированиеОтпусковПеремещениеСотрудников.Сотрудник = ПРГ_РезервыОтпусковОстатки.Сотрудник
		|				И ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииНачальный = ПРГ_РезервыОтпусковОстатки.Подразделение
		|	ГДЕ
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|ГДЕ
		|	НЕ ВложенныйЗапрос.Вид ЕСТЬ NULL ";

	Запрос.УстановитьПараметр("Дата", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);


	Результат = Запрос.Выполнить();
  	Выборка=Результат.Выбрать();

	пока Выборка.Следующий() цикл

		нов=тзОбщ.добавить();
		нов.ВидДвижения=ВидДвиженияНакопления.расход; //ВидДвиженияНакопления.Приход;  //Blik 080514
		нов.ОписаниеДвижения="перемещениеСписание";
		
		нов.Сотрудник=Выборка.Сотрудник;
		нов.Подразделение=Выборка.ПодразделениеОрганизацииНачальный;
		нов.СпособОтраженияВБухУчете=Выборка.СпособОтражениеЗарплатыВРегУчетеНачальный;
		нов.Вид=Выборка.Вид;
		нов.Сумма=Выборка.Сумма;
		нов.Дни=Выборка.Дни;
		
		нов=тзОбщ.добавить();
		нов.ВидДвижения=ВидДвиженияНакопления.Приход;
		нов.ОписаниеДвижения="перемещениеНачисление";
		нов.Сотрудник=Выборка.Сотрудник;
		нов.Подразделение=Выборка.ПодразделениеОрганизацииКонечный;
		нов.СпособОтраженияВБухУчете=Выборка.СпособОтражениеЗарплатыВРегУчетеКонечный;
		нов.Вид=Выборка.Вид;
		нов.Сумма=Выборка.Сумма;
		нов.Дни=Выборка.Дни;
		
	КонецЦикла;

КонецПроцедуры

///Вадим 09.09.2013 13:03:52
Процедура СписатьКорректировку()
	виды=Перечисления.ПРГ_РаспределениеРезервовОтпусков;
    Для каждого стр Из Корректировка Цикл
		добавитьСтрокуТЗОбщКорректировку(стр,виды.СуммаОтпускных,стр.СуммаОтпускных);
		добавитьСтрокуТЗОбщКорректировку(стр,виды.СтавкаПФРНакопительная,стр.СуммаПФРНакопительная);
		добавитьСтрокуТЗОбщКорректировку(стр,виды.СтавкаПФРСтраховая,стр.СуммаПФРСтраховая);
		добавитьСтрокуТЗОбщКорректировку(стр,виды.СтавкаФОМС,стр.СуммаФОМС);
		добавитьСтрокуТЗОбщКорректировку(стр,виды.СтавкаФСС,стр.СуммаФСС);
		добавитьСтрокуТЗОбщКорректировку(стр,виды.СтавкаФССиНС,стр.СуммаФССНС);
	КонецЦикла;
	
	

КонецПроцедуры
//ВадимКонец
Процедура добавитьСтрокуТЗОбщКорректировку(стр,вид,СуммаКорректировки=0)


	//Если не СуммаУвольнения=0 тогда
		нов=тзОбщ.добавить();
		нов.ВидДвижения=ВидДвиженияНакопления.Расход;
		нов.ОписаниеДвижения="КорректировкаРасход";
		нов.Сотрудник=стр.Сотрудник;
		нов.Подразделение=стр.ПодразделениеОрганизацииСтарое;
		нов.Вид=Вид;
		нов.СпособОтраженияВБухУчете=стр.СпособОтражениеЗарплатыВРегУчетеСтарое;
		нов.Сумма=СуммаКорректировки;
		Если вид=Перечисления.ПРГ_РаспределениеРезервовОтпусков.СуммаОтпускных тогда
			нов.Дни= стр.Дни;
		КонецЕсли;
		
		нов=тзОбщ.добавить();
		нов.ВидДвижения=ВидДвиженияНакопления.Приход;
		нов.ОписаниеДвижения="КорректировкаПриход";
		нов.Сотрудник=стр.Сотрудник;
		нов.Подразделение=стр.ПодразделениеОрганизацииНовое;
		нов.СпособОтраженияВБухУчете=стр.СпособОтражениеЗарплатыВРегУчетеНовое;
		нов.Вид=Вид;
		нов.Сумма=СуммаКорректировки;
		Если вид=Перечисления.ПРГ_РаспределениеРезервовОтпусков.СуммаОтпускных тогда
			нов.Дни= стр.Дни;
		КонецЕсли;
		
	//конецесли;
	
	
КонецПроцедуры	

///Вадим 09.09.2013 13:03:52
Процедура СписатьУволенных()
	виды=Перечисления.ПРГ_РаспределениеРезервовОтпусков;
    Для каждого стр Из Уволенные Цикл
		добавитьСтрокуТЗОбщУволенные(стр,виды.СуммаОтпускных,стр.СуммаОтпускных);
		добавитьСтрокуТЗОбщУволенные(стр,виды.СтавкаПФРНакопительная,стр.СуммаПФРНакопительная);
		добавитьСтрокуТЗОбщУволенные(стр,виды.СтавкаПФРСтраховая,стр.СуммаПФРСтраховая);
		добавитьСтрокуТЗОбщУволенные(стр,виды.СтавкаФОМС,стр.СуммаФОМС);
		добавитьСтрокуТЗОбщУволенные(стр,виды.СтавкаФСС,стр.СуммаФСС);
		добавитьСтрокуТЗОбщУволенные(стр,виды.СтавкаФССиНС,стр.СуммаФССНС);
	КонецЦикла;
	
	

КонецПроцедуры
//ВадимКонец
Процедура добавитьСтрокуТЗОбщУволенные(стр,вид,СуммаУвольнения=0)
	
	//Если не СуммаУвольнения=0 тогда
		нов=тзОбщ.добавить();
		нов.ВидДвижения=ВидДвиженияНакопления.Расход;
		нов.ОписаниеДвижения="СписаниеУволенных";
		нов.Сотрудник=стр.Сотрудник;
		нов.Подразделение=стр.ПодразделениеОрганизации;
		нов.Вид=Вид;
		нов.Сумма=СуммаУвольнения;
		Если вид=Перечисления.ПРГ_РаспределениеРезервовОтпусков.СуммаОтпускных тогда
			нов.Дни= стр.ДнейКонечныйОстаток;
		КонецЕсли;
	//конецесли;
	
	
КонецПроцедуры	

Процедура добавитьСтрокуТЗОбщ(стр,вид,СуммаПриход,СуммаРасход)
	Если не СуммаРасход=0 или не стр.ДнейИспользовано=0 тогда
		нов=тзОбщ.добавить();
		нов.ВидДвижения=ВидДвиженияНакопления.Расход;
		нов.ОписаниеДвижения="СписаниеОтпуска";
		нов.Сотрудник=стр.Сотрудник;
		нов.Подразделение=стр.ПодразделениеОрганизации;
		нов.СпособОтраженияВБухУчете=стр.СпособОтраженияВБухУчете;
		нов.Вид=Вид;
		нов.Сумма=СуммаРасход;
		Если вид=Перечисления.ПРГ_РаспределениеРезервовОтпусков.СуммаОтпускных тогда
			нов.Дни= стр.ДнейИспользовано;
		КонецЕсли;
		
		
	КонецЕсли;
	Если не СуммаПриход=0 или не стр.ДнейНачислено=0 тогда
		нов=тзОбщ.добавить();
		нов.ВидДвижения=ВидДвиженияНакопления.Приход;
		нов.ОписаниеДвижения="НачислениеОтпуска";
		нов.Сотрудник=стр.Сотрудник;
		нов.Подразделение=стр.ПодразделениеОрганизации;
		нов.СпособОтраженияВБухУчете=стр.СпособОтраженияВБухУчете;
		нов.Вид=Вид;
		нов.Сумма=СуммаПриход;
		Если вид=Перечисления.ПРГ_РаспределениеРезервовОтпусков.СуммаОтпускных тогда
			нов.Дни= стр.ДнейНачислено;
		КонецЕсли;
	конецесли;
	
КонецПроцедуры	

 ///Вадим 19.11.2012 16:59:17
Процедура создатьСтрокиНачисления(тз)
	перечислениеРезервы=Перечисления.ПРГ_РаспределениеРезервовОтпусков;
	Для Каждого ТекСтрокаРезервы Из тз Цикл
		СуммаНачислено=ТекСтрокаРезервы.СуммаНачислено;
		СуммаИспользовано=ТекСтрокаРезервы.СуммаИспользовано;
		добавитьСтрокуТЗОбщ(ТекСтрокаРезервы,перечислениеРезервы.СуммаОтпускных,
		ТекСтрокаРезервы.СуммаНачислено,
		ТекСтрокаРезервы.СуммаИспользовано);
		
		//Если не ТекСтрокаРезервы.СуммаПФРНакопительная=0 Тогда
			добавитьСтрокуТЗОбщ(ТекСтрокаРезервы,перечислениеРезервы.СтавкаПФРНакопительная,
			ТекСтрокаРезервы.СуммаПФРНакопительная,
			ТекСтрокаРезервы.СуммаПФРНакопительнаяИсп);
		//КонецЕсли;
		//Если не ТекСтрокаРезервы.СуммаПФРСтраховая=0 Тогда
			добавитьСтрокуТЗОбщ(ТекСтрокаРезервы,перечислениеРезервы.СтавкаПФРСтраховая,
			ТекСтрокаРезервы.СуммаПФРСтраховая,
			ТекСтрокаРезервы.СуммаПФРСтраховаяИсп);
		//КонецЕсли;
		//Если не ТекСтрокаРезервы.СуммаФОМС=0 Тогда
			добавитьСтрокуТЗОбщ(ТекСтрокаРезервы,перечислениеРезервы.СтавкаФОМС,
			ТекСтрокаРезервы.СуммаФОМС,
			ТекСтрокаРезервы.СуммаФОМСИсп);
		//КонецЕсли;
		//Если не ТекСтрокаРезервы.СуммаФСС=0 Тогда
			добавитьСтрокуТЗОбщ(ТекСтрокаРезервы,перечислениеРезервы.СтавкаФСС,
			ТекСтрокаРезервы.СуммаФСС,
			ТекСтрокаРезервы.СуммаФССИсп);
		//КонецЕсли;
		//Если не ТекСтрокаРезервы.СуммаФССНС=0 Тогда
			добавитьСтрокуТЗОбщ(ТекСтрокаРезервы,перечислениеРезервы.СтавкаФССиНС,
			ТекСтрокаРезервы.СуммаФССНС,
			ТекСтрокаРезервы.СуммаФССНСИсп);
		//КонецЕсли;
		
	КонецЦикла;

	

КонецПроцедуры
//ВадимКонец

///Вадим 05.02.2014 10:34:28   бп 
Процедура заполнитьТаблицуСравненийПодразделений()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеКадровогоУчета,
		|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеЗатрат
		|ИЗ
		|	РегистрСведений.ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета КАК ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета";

	Результат = Запрос.Выполнить();
    общТаблицаСравненияПодразделений=Результат.Выгрузить();
	

КонецПроцедуры
//ВадимКонец
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	заполнитьТаблицуСравненийПодразделений();

	Тз=Резервы.Выгрузить();
	тзОбщ=Новый ТаблицаЗначений;
	тзОбщ.Колонки.Добавить("ВидДвижения");
	тзОбщ.Колонки.Добавить("ОписаниеДвижения");
	тзОбщ.Колонки.Добавить("Сотрудник");
	тзОбщ.Колонки.Добавить("Подразделение");
	тзОбщ.Колонки.Добавить("СпособОтраженияВБухУчете");
	тзОбщ.Колонки.Добавить("Вид");
	тзОбщ.Колонки.Добавить("Сумма");
	тзОбщ.Колонки.Добавить("Дни");
	
	                         
	
	
	тз.Свернуть("ПодразделениеОрганизации,Сотрудник,СпособОтраженияВБухУчете","ДнейИспользовано,ДнейНачислено,СуммаИспользовано,СуммаНачислено,СуммаПФРСтраховая,СуммаПФРНакопительная,СуммаФОМС,СуммаФСС,СуммаФССНС,СуммаПФРСтраховаяИсп,СуммаПФРНакопительнаяИсп,СуммаФОМСИсп,СуммаФССИсп,СуммаФССНСИсп");
	
	создатьСтрокиНачисления(тз);
	СписатьПриПеремещение();
	СписатьКорректировку();
	СписатьУволенных();
	//создатьДвиженияНачисленияПоРегистрам(тз);
    //создатьДвиженияНачисленияПоСчетам(тз);
	
	Движения.ПРГ_РезервыОтпусков.Записывать = Истина;
	Движения.ПРГ_РезервыОтпусков.Очистить();
	Движения.Хозрасчетный.Записывать = Истина;
	Движения.Хозрасчетный.Очистить();
	Движения.Налоговый.Записывать = Истина; //Blik добавлены движения по НУ 240314 п 63
	Движения.Налоговый.Очистить();
	///////Создаем движения по регистру
	тзОбщ.Свернуть("ВидДвижения,ОписаниеДвижения,Сотрудник,Подразделение,СпособОтраженияВБухУчете,Вид","Сумма,Дни");
	кол=ТЗОбщ.Количество();сч=0;
	Для каждого стр Из ТЗОбщ Цикл
		Если сч % 50 =0 Тогда
			Состояние("Создаем движения регистров: "+сокрЛп(сч)+" из "+сокрЛП(кол));
		КонецЕсли;	
		сч=сч+1; 
		заполнитьСтрокуРегистра(стр,Движения.ПРГ_РезервыОтпусков.Добавить());
	КонецЦикла;
	
	//начало изменений
	ТаблСчетовЗатрат  = Новый ТаблицаЗначений;
	ТаблСчетовЗатрат.Колонки.Добавить("Счет");
	ТаблСчетовЗатрат.Индексы.Добавить("Счет");
	  
	ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("20"),ТаблСчетовЗатрат);
	ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("23"),ТаблСчетовЗатрат);
	ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("29"),ТаблСчетовЗатрат);
	  
	ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("25"),ТаблСчетовЗатрат);
	ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("26"),ТаблСчетовЗатрат);
	ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("44"),ТаблСчетовЗатрат);
	
	ТаблСтатей = Новый ТаблицаЗначений;
	ТаблСтатей.Колонки.Добавить("Статья");
	ТаблСтатей.Индексы.Добавить("Статья");
	ТаблСтатей.Колонки.Добавить("ВидУчета");
	
	//конец изменеий
	
	///////Создаем движения по Бух
	Если СоздаватьПроводки тогда
		тзОбщ.Свернуть("ВидДвижения,ОписаниеДвижения,Подразделение,СпособОтраженияВБухУчете,Вид","Сумма,Дни");
		ЗаполнитьСтатьиОтраженияБУНУ();//Blik 010216 48522
		///////Делаем Проводки сторно нач значений
		СоздатьСторноПроводокДанныхНаНачалоИКонецПериодаПериода(Движения.Хозрасчетный,Движения.Налоговый);	//Blik добавлены движения по НУ 240314 п 63	
		//создатьПроводкиПоПеремещению(Движения.Хозрасчетный,Движения.Налоговый);//Blik 030414 по перемещению проводок не будет - списываем на начало месяца со старого подр
		//создатьПроводкиПоКорректировки(Движения.Хозрасчетный,Движения.Налоговый); //Blik 040414 переделать тут должня бять движения по регистру ПРГ_РезервыОтпусков
		
		///////Делаем Проводки
		кол=ТЗОбщ.Количество();сч=0;
		Для каждого стр Из ТЗОбщ Цикл
			Если сч % 50 =0 Тогда
				Состояние("Создаем проводки: "+сокрЛп(сч)+" из "+сокрЛП(кол));
			КонецЕсли;	
			сч=сч+1; 
			
			Если 
				не стр.ОписаниеДвижения="СписаниеУволенных"
				и не стр.ОписаниеДвижения="НачислениеОтпуска"
				И не стр.ОписаниеДвижения="перемещениеСписание"
				И не стр.ОписаниеДвижения="перемещениеНачисление"
				И не стр.ОписаниеДвижения="КорректировкаРасход"
				И не стр.ОписаниеДвижения="КорректировкаПриход"
				//////////////////////исключаем 69
				и стр.вид=Перечисления.ПРГ_РаспределениеРезервовОтпусков.СуммаОтпускных
				/////////////////////
				тогда
				нов=Движения.Хозрасчетный.Добавить();
				заполнитьПроводку(стр,нов);
				нов.Организация=Организация;
				новну = Движения.Налоговый.Добавить();  //Blik добавлены движения по НУ 240314 п 63	
				ЗаполнитьпроводкупоНУ(стр,новну,ТаблСчетовЗатрат,ТаблСтатей);
			Конецесли;	
		КонецЦикла;
		//////////////////
		СоздатьПроводкиПоУволенным(Движения.Хозрасчетный,Движения.Налоговый);

		//начало изменений
		СформироватьДополнительныеДвижения();
		//конец изменений  
		
	Конецесли;
 
КонецПроцедуры

Процедура ЗаполнитьСчетамиТаблицу(Счет,Табл)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Хозрасчетный.Ссылка
	                      |ИЗ
	                      |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	                      |ГДЕ
	                      |	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счет)");
						  
	Запрос.УстановитьПараметр("Счет",Счет);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Табл.Добавить();
		НоваяСтрока.Счет = Выборка.Ссылка;
	КонецЦикла;	
КонецПроцедуры	

Процедура ЗаполнитьСчетамиТаблицуНУ(Счет,Табл)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Налоговый.Ссылка
	                      |ИЗ
	                      |	ПланСчетов.Налоговый КАК Налоговый
	                      |ГДЕ
	                      |	Налоговый.Ссылка В ИЕРАРХИИ(&Счет)");
						  
	Запрос.УстановитьПараметр("Счет",Счет);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Табл.Добавить();
		НоваяСтрока.Счет = Выборка.Ссылка;
	КонецЦикла;	
КонецПроцедуры	

Процедура СформироватьДополнительныеДвижения()
	
	  ТаблСчетовНезавершенка = Новый ТаблицаЗначений;
	  ТаблСчетовНезавершенка.Колонки.Добавить("Счет");
	  ТаблСчетовНезавершенка.Индексы.Добавить("Счет");
	  
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("20"),ТаблСчетовНезавершенка);
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("23"),ТаблСчетовНезавершенка);
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("29"),ТаблСчетовНезавершенка);
	  
	  ТаблСчетовЗатрат = Новый ТаблицаЗначений;
	  ТаблСчетовЗатрат.Колонки.Добавить("Счет");
	  ТаблСчетовЗатрат.Индексы.Добавить("Счет");
	  
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("25"),ТаблСчетовЗатрат);
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("26"),ТаблСчетовЗатрат);
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("44"),ТаблСчетовЗатрат);
	  
	  //по ну
	  
	  
	  Движения.ЗатратыБухгалтерскийУчет.Записывать = Истина;
	  Движения.ЗатратыБухгалтерскийУчет.Очистить();
	  
	  Движения.НезавершенноеПроизводствоБухгалтерскийУчет.Записывать = Истина;
	  Движения.НезавершенноеПроизводствоБухгалтерскийУчет.Очистить();
	  
	  //Blik добавлены движения по НУ 240314 п 63 н
      Движения.ЗатратыНалоговыйУчет.Записывать = Истина;
	  Движения.ЗатратыНалоговыйУчет.Очистить();
	  
	  Движения.НезавершенноеПроизводствоНалоговыйУчет.Записывать = Истина;
	  Движения.НезавершенноеПроизводствоНалоговыйУчет.Очистить();
	  //Blik добавлены движения по НУ 240314 п 63 к
	  
	  //начало изменений
	  Счета70 = БухгалтерскийУчет.ПолучитьМассивСчетов("Хозрасчетный", "70");
	  //конец изменений 
	  
	  //ТаблСчетовЗатрат.ВыбратьСтроку();
	  
	  ///Движения = Движения.Хозрасчетный;
	  
	  /// =  РегистрыНакопления.ЗатратыБухгалтерскийУчет.СоздатьНаборЗаписей(); 
	  
	  //ТаблЗатрат =  ЗатратыБухгалтерскийУчет
	  ДокОбъект = ЭтотОбъект;
	  
	  Для Каждого ТекСтрока ИЗ Движения.Хозрасчетный Цикл
		  
		  Если ТекСтрока.Сумма = 0 Тогда
			  продолжить;
		  КонецЕсли;
		  НайдЗнч = ТаблСчетовНезавершенка.Найти(ТекСтрока.СчетДт,"Счет");
		  Если НайдЗнч <> Неопределено Тогда
			  	   НоваяСтрока = ДокОбъект.Движения.НезавершенноеПроизводствоБухгалтерскийУчет.Добавить();
				   НоваяСтрока.Период		 = ДокОбъект.Дата;
				   НоваяСтрока.ВидДвижения   = ВидДвиженияНакопления.Приход;
				   НоваяСтрока.Организация   = ДокОбъект.Организация;
				   НоваяСтрока.Подразделение = ТекСтрока.СубконтоДт.Подразделения;
				   НоваяСтрока.СчетУчета	 = ТекСтрока.СчетДТ;
				   НоваяСтрока.СтатьяЗатрат  = ТекСтрока.СубконтоДт.СтатьиЗатрат;
				   НоваяСтрока.Стоимость 		 = ТекСтрока.Сумма;
				   //Blik добавлены движения по НУ 240314 п 63 н
				  // Если Счета70.НайтиПоЗначению(ТекСтрока.СчетКТ ) <> Неопределено Тогда
				  //	 НоваяСтрокаНУ = ДокОбъект.Движения.НезавершенноеПроизводствоНалоговыйУчет.Добавить();
				  //	 НоваяСтрокаНУ.Период		 = ДокОбъект.Дата;
				  //	 НоваяСтрокаНУ.ВидДвижения   = ВидДвиженияНакопления.Приход;
				  //	 НоваяСтрокаНУ.Организация   = ДокОбъект.Организация;
				  //	 НоваяСтрокаНУ.Подразделение = ТекСтрока.СубконтоДт.Подразделения;
				  //	 НоваяСтрокаНУ.СчетУчета	 =   ПРГ_ОпределитьсчетНУ(ТекСтрока.СчетДТ,Истина); //БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",ТекСтрока.СчетДТ), Ложь, Дата);
				  //	 НоваяСтрокаНУ.СтатьяЗатрат  = ТекСтрока.СубконтоДт.СтатьиЗатрат;
				  //	 НоваяСтрокаНУ.Стоимость = ТекСтрока.Сумма;
				  // Иначе
				  //	 НоваяСтрокаНУ = ДокОбъект.Движения.НезавершенноеПроизводствоНалоговыйУчет.Добавить();
				  //	 НоваяСтрокаНУ.Период		 = ДокОбъект.Дата;
				  //	 НоваяСтрокаНУ.ВидДвижения   = ВидДвиженияНакопления.Приход;
				  //	 НоваяСтрокаНУ.Организация   = ДокОбъект.Организация;
				  //	 НоваяСтрокаНУ.Подразделение = ТекСтрока.СубконтоДт.Подразделения;
				  //	 НоваяСтрокаНУ.СчетУчета	 =  ПРГ_ОпределитьсчетНУ(ТекСтрока.СчетДТ); //БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",ТекСтрока.СчетДТ), Ложь, Дата);
				  //	 НоваяСтрокаНУ.СтатьяЗатрат  = ТекСтрока.СубконтоДт.СтатьиЗатрат;
				  //	 НоваяСтрокаНУ.ПостояннаяРазница = ТекСтрока.Сумма;
				  // КонецЕсли;
				  ////Blik добавлены движения по НУ 240314 п 63 к
		  Иначе  
			НайдЗнч = ТаблСчетовЗатрат.Найти(ТекСтрока.СчетДт,"Счет");
			Если НайдЗнч <> Неопределено Тогда
				   НоваяСтрока = ДокОбъект.Движения.ЗатратыБухгалтерскийУчет.Добавить();
				   НоваяСтрока.Период		= ДокОбъект.Дата;
				   НоваяСтрока.ВидДвижения  = ВидДвиженияНакопления.Приход;
				   НоваяСтрока.Организация = ДокОбъект.Организация;
				   НоваяСтрока.Подразделение = ТекСтрока.СубконтоДт.Подразделения;
				   НоваяСтрока.СчетУчета	 = ТекСтрока.СчетДТ;
				   НоваяСтрока.СтатьяЗатрат  = ТекСтрока.СубконтоДт.СтатьиЗатрат;
				   НоваяСтрока.Сумма 		 = ТекСтрока.Сумма;
				   НоваяСтрока.КодОперации   = Перечисления.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты;
				   //Blik добавлены движения по НУ 240314 п 63 н
				   //Если ТекСтрока.СчетДТ = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходыНеОблагаемыеЕНВД Тогда
				   //	СчетУчета = ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы;	
				   //ИначеЕсли ТекСтрока.СчетДТ = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходыНеОблагаемыеЕНВД Тогда
				   //	СчетУчета = ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы;	
				   //иначе
				   //	СчетУчета = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",ТекСтрока.СчетДТ), Ложь, Дата);
				   //КонецЕсли;
				   //СчетУчета  = ПРГ_ОпределитьсчетНУ(ТекСтрока.СчетДТ);
				   ////начало изменений
				   ////Если ТекСтрока.СчетКТ = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
				   //Если Счета70.НайтиПоЗначению(ТекСтрока.СчетКТ ) <> Неопределено Тогда
				   ////конец изменений  
				   //	НоваяСтрокаНУ = ДокОбъект.Движения.ЗатратыНалоговыйУчет.Добавить();
				   //	НоваяСтрокаНУ.Период		= ДокОбъект.Дата;
				   //	НоваяСтрокаНУ.ВидДвижения  = ВидДвиженияНакопления.Приход;
				   //	НоваяСтрокаНУ.Организация = ДокОбъект.Организация;
				   //	НоваяСтрокаНУ.Подразделение = ТекСтрока.СубконтоДт.Подразделения;
				   //	НоваяСтрокаНУ.СчетУчета	 = СчетУчета;//БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",ТекСтрока.СчетДТ), Ложь, Дата);
				   //	НоваяСтрокаНУ.СтатьяЗатрат  = ТекСтрока.СубконтоДт.СтатьиЗатрат;
				   //	НоваяСтрокаНУ.Сумма	 	 = ТекСтрока.Сумма;
				   //	НоваяСтрока.КодОперации   = Перечисления.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты;
				   //Иначе
				   //	НоваяСтрокаНУ = ДокОбъект.Движения.ЗатратыНалоговыйУчет.Добавить();
				   //	НоваяСтрокаНУ.Период		= ДокОбъект.Дата;
				   //	НоваяСтрокаНУ.ВидДвижения  = ВидДвиженияНакопления.Приход;
				   //	НоваяСтрокаНУ.Организация = ДокОбъект.Организация;
				   //	НоваяСтрокаНУ.Подразделение = ТекСтрока.СубконтоДт.Подразделения;
				   //	НоваяСтрокаНУ.СчетУчета	 = СчетУчета;//БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",ТекСтрока.СчетДТ), Ложь, Дата);
				   //	НоваяСтрокаНУ.СтатьяЗатрат  = ТекСтрока.СубконтоДт.СтатьиЗатрат;
				   //	НоваяСтрокаНУ.ПостояннаяРазница 	 = ТекСтрока.Сумма;
				   //	НоваяСтрока.КодОперации   = Перечисления.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты;
				   //КонецЕсли;
                   //Blik добавлены движения по НУ 240314 п 63 к
			КонецЕсли;	
		  КонецЕсли;  
		  
	  КонецЦикла;	  
	  
	  //движения НУ
	  
	  ТаблСчетовНезавершенка = Новый ТаблицаЗначений;
	  ТаблСчетовНезавершенка.Колонки.Добавить("Счет");
	  ТаблСчетовНезавершенка.Индексы.Добавить("Счет");
	  
	  ЗаполнитьСчетамиТаблицуНУ(ПланыСчетов.Налоговый.НайтиПоКоду("20"),ТаблСчетовНезавершенка);
	  ЗаполнитьСчетамиТаблицуНУ(ПланыСчетов.Налоговый.НайтиПоКоду("23"),ТаблСчетовНезавершенка);
	  ЗаполнитьСчетамиТаблицуНУ(ПланыСчетов.Налоговый.НайтиПоКоду("29"),ТаблСчетовНезавершенка);
	  
	  ТаблСчетовЗатрат = Новый ТаблицаЗначений;
	  ТаблСчетовЗатрат.Колонки.Добавить("Счет");
	  ТаблСчетовЗатрат.Индексы.Добавить("Счет");
	  
	  ЗаполнитьСчетамиТаблицуНУ(ПланыСчетов.Налоговый.НайтиПоКоду("25"),ТаблСчетовЗатрат);
	  ЗаполнитьСчетамиТаблицуНУ(ПланыСчетов.Налоговый.НайтиПоКоду("26"),ТаблСчетовЗатрат);
	  ЗаполнитьСчетамиТаблицуНУ(ПланыСчетов.Налоговый.НайтиПоКоду("44"),ТаблСчетовЗатрат);
	  
	  Для Каждого ТекСтрока ИЗ Движения.Налоговый Цикл
		  
		  Если ТекСтрока.Сумма = 0 Тогда
			  продолжить;
		  КонецЕсли;
		  НайдЗнч = ТаблСчетовНезавершенка.Найти(ТекСтрока.СчетДт,"Счет");
		  Если НайдЗнч <> Неопределено Тогда
					   НоваяСтрокаНУ = ДокОбъект.Движения.НезавершенноеПроизводствоНалоговыйУчет.Добавить();
					   НоваяСтрокаНУ.Период		 = ДокОбъект.Дата;
					   НоваяСтрокаНУ.ВидДвижения   = ВидДвиженияНакопления.Приход;
					   НоваяСтрокаНУ.Организация   = ДокОбъект.Организация;
					   НоваяСтрокаНУ.Подразделение = ТекСтрока.СубконтоДт.Подразделения;
					   НоваяСтрокаНУ.СчетУчета	   = ТекСтрока.СчетДт; //БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",ТекСтрока.СчетДТ), Ложь, Дата);
					   НоваяСтрокаНУ.СтатьяЗатрат  = ТекСтрока.СубконтоДт.СтатьиЗатрат;
					   Если ТекСтрока.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
						    НоваяСтрокаНУ.ПостояннаяРазница = ТекСтрока.Сумма;
					   //начало изменений Ожиганов 02.02.2016 б/н сумма временной разницы в регистр 		
					   ИначеЕсли ТекСтрока.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР Тогда
						    НоваяСтрокаНУ.ВременнаяРазница = ТекСтрока.Сумма;
					   //конец изменений 
					   Иначе
                        	НоваяСтрокаНУ.Стоимость = ТекСтрока.Сумма;
					   КонецЕсли; 
		  Иначе  
			НайдЗнч = ТаблСчетовЗатрат.Найти(ТекСтрока.СчетДт,"Счет");
			Если НайдЗнч <> Неопределено Тогда
					   //конец изменений  
					   НоваяСтрокаНУ = ДокОбъект.Движения.ЗатратыНалоговыйУчет.Добавить();
					   НоваяСтрокаНУ.Период		= ДокОбъект.Дата;
					   НоваяСтрокаНУ.ВидДвижения   = ВидДвиженияНакопления.Приход;
					   НоваяСтрокаНУ.Организация   = ДокОбъект.Организация;
					   НоваяСтрокаНУ.Подразделение = ТекСтрока.СубконтоДт.Подразделения;
					   НоваяСтрокаНУ.СчетУчета	   = ТекСтрока.СчетДт;//БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",ТекСтрока.СчетДТ), Ложь, Дата);
					   НоваяСтрокаНУ.СтатьяЗатрат  = ТекСтрока.СубконтоДт.СтатьиЗатрат;
					   Если ТекСтрока.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
						    НоваяСтрокаНУ.ПостояннаяРазница = ТекСтрока.Сумма;
					   //начало изменений Ожиганов 02.02.2016 б/н сумма временной разницы в регистр 
				   	   ИначеЕсли ТекСтрока.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР Тогда
					       	НоваяСтрокаНУ.ВременнаяРазница = ТекСтрока.Сумма;
					   //конец изменений 
					   Иначе
                        	НоваяСтрокаНУ.Сумма = ТекСтрока.Сумма;
					   КонецЕсли; 
					   НоваяСтрока.КодОперации   = Перечисления.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты;
                   //Blik добавлены движения по НУ 240314 п 63 к
			КонецЕсли;	
		  КонецЕсли;  
		  
	  КонецЦикла;	  
	  
	  
	  //Движения.ЗатратыБухгалтерскийУчет.Записать(Истина);
	  //
	  //Движения.НезавершенноеПроизводствоБухгалтерскийУчет.Записать(Истина);
	

КонецПроцедуры	

Процедура создатьПроводкиПоПеремещению(Движения,ДвиженияНУ)
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Сотрудник,
		|	ВложенныйЗапрос.ПодразделениеОрганизацииНачальный,
		|	ВложенныйЗапрос.СпособОтражениеЗарплатыВРегУчетеНачальный,
		|	ВложенныйЗапрос.ПодразделениеОрганизацииКонечный,
		|	ВложенныйЗапрос.СпособОтражениеЗарплатыВРегУчетеКонечный,
		|	ВложенныйЗапрос.Вид,
		|	ВложенныйЗапрос.Сумма,
		|	ВложенныйЗапрос.Дни
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.Сотрудник КАК Сотрудник,
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииНачальный КАК ПодразделениеОрганизацииНачальный,
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.СпособОтражениеЗарплатыВРегУчетеНачальный КАК СпособОтражениеЗарплатыВРегУчетеНачальный,
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииКонечный КАК ПодразделениеОрганизацииКонечный,
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.СпособОтражениеЗарплатыВРегУчетеКонечный КАК СпособОтражениеЗарплатыВРегУчетеКонечный,
		|		ПРГ_РезервыОтпусковОстатки.Вид КАК Вид,
		|		ПРГ_РезервыОтпусковОстатки.СуммаОстаток КАК Сумма,
		|		ПРГ_РезервыОтпусковОстатки.ДниОстаток КАК Дни
		|	ИЗ
		|		Документ.ПРГ_РезервированиеОтпусков.ПеремещениеСотрудников КАК ПРГ_РезервированиеОтпусковПеремещениеСотрудников
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПРГ_РезервыОтпусков.Остатки(&Дата, ) КАК ПРГ_РезервыОтпусковОстатки
		|			ПО ПРГ_РезервированиеОтпусковПеремещениеСотрудников.Сотрудник = ПРГ_РезервыОтпусковОстатки.Сотрудник
		|				И ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииНачальный = ПРГ_РезервыОтпусковОстатки.Подразделение
		|	ГДЕ
		|		ПРГ_РезервированиеОтпусковПеремещениеСотрудников.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		|ГДЕ
		|	НЕ ВложенныйЗапрос.Вид ЕСТЬ NULL 
		|	И ВложенныйЗапрос.Вид = &Вид";

    Запрос.УстановитьПараметр("Вид", Перечисления.ПРГ_РаспределениеРезервовОтпусков.СуммаОтпускных);
	Запрос.УстановитьПараметр("Дата", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);


	Результат = Запрос.Выполнить();
  	Выборка=Результат.Выбрать();
    сч70=ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
	резервыОтпусков96=Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков");
	СчДТНУ =  БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",сч70), Ложь, Дата);
	СчКТНУ =  БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",счет96), Ложь, Дата);
	пока Выборка.Следующий() цикл

		ПодразделениеЗатрат=получитьЗатратноеПодразделениеИзКадрового(Выборка.ПодразделениеОрганизацииНачальный);
		ПодразделениеЗатратНовое=получитьЗатратноеПодразделениеИзКадрового(Выборка.ПодразделениеОрганизацииКонечный);
		//////////////////////////Списываем со старого подразделения
		структура=Новый Структура;
		
		
		структура.Вставить("СчетДт" , сч70);
		структура.Вставить("СубконтоДт1", ПодразделениеЗатрат);
		структура.Вставить("СубконтоДт2", Неопределено);
		структура.Вставить("СубконтоДт3", Неопределено);
		
		структура.Вставить("СчетКт", счет96);
		структура.Вставить("СубконтоКт1", резервыОтпусков96);
		структура.Вставить("СубконтоКт2", ПодразделениеЗатрат);
		структура.Вставить("СубконтоКт3", Неопределено);
		
		структура.Вставить("Сумма", Выборка.Сумма*(-1));
		структура.Вставить("Содержание", "Перемещение со старого подразделени по "+строка(Выборка.Вид));
		
		СоздатьПроводкуПеремещениеКорректировкиПоСтруктуре(Движения,структура);
		
		//////////////////////////Начисляем на новое подразделения
		структура=Новый Структура;
		
		
		структура.Вставить("СчетДт" , сч70);
		структура.Вставить("СубконтоДт1", ПодразделениеЗатрат);
		структура.Вставить("СубконтоДт2", Неопределено);
		структура.Вставить("СубконтоДт3", Неопределено);
		
		структура.Вставить("СчетКт", счет96);
		структура.Вставить("СубконтоКт1", резервыОтпусков96);
		структура.Вставить("СубконтоКт2", ПодразделениеЗатратНовое);
		структура.Вставить("СубконтоКт3", Неопределено);
		
		структура.Вставить("Сумма", Выборка.сумма);
		структура.Вставить("Содержание", "Перемещение на новое подразделение по "+строка(Выборка.Вид));
		
		СоздатьПроводкуПеремещениеКорректировкиПоСтруктуре(Движения,структура);
		//Blik добавлены движения по НУ 240314 п 63 н
		//Движения по НУ
		//перемещение со старого
		новну = ДвиженияНУ.добавить();
		новну.период=дата;
		новну.СчетКт= СчКТНУ;
		новну.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоКт, 1, резервыОтпусков96);
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоКт, 2, ПодразделениеЗатрат);
		новну.сумма=Выборка.Сумма*(-1);
		новну.Содержание="Перемещение в НУ со старого подразделени по "+строка(Выборка.Вид);
		новну.Организация=Организация;
		//перемещение на новое 
		новну = ДвиженияНУ.добавить();
		новну.период=дата;
		новну.СчетКт= СчКТНУ;
		новну.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 1, резервыОтпусков96);
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 2, ПодразделениеЗатратНовое);
		новну.сумма=Выборка.Сумма;
		новну.Содержание="Перемещение в НУ на новое подразделение по "+строка(Выборка.Вид);
		новну.Организация=Организация;

		//Blik добавлены движения по НУ 240314 п 63 к
	КонецЦикла;


	
	
	

КонецПроцедуры

Процедура создатьПроводкиПоКорректировки(Движения,ДвиженияНУ)
    
    сч70=ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
	резервыОтпусков96=Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков");
	СчДТНУ =  БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",сч70), Ложь, Дата);
	СчКТНУ =  БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",счет96), Ложь, Дата);
	//пока Выборка.Следующий() цикл
	виды=Перечисления.ПРГ_РаспределениеРезервовОтпусков;
	Для каждого выборка Из Корректировка Цикл
		ПодразделениеЗатрат=получитьЗатратноеПодразделениеИзКадрового(Выборка.ПодразделениеОрганизацииСтарое);
		ПодразделениеЗатратНовое=получитьЗатратноеПодразделениеИзКадрового(Выборка.ПодразделениеОрганизацииНовое);
		//////////////////////////Списываем со старого подразделения
	
	
		
		//добавитьСтрокуТЗОбщКорректировку(стр,виды.СуммаОтпускных,стр.СуммаОтпускных);
		
		структура=Новый Структура;
		
		структура.Вставить("СчетДт" , сч70);
		структура.Вставить("СубконтоДт1", ПодразделениеЗатрат);
		структура.Вставить("СубконтоДт2", Неопределено);
		структура.Вставить("СубконтоДт3", Неопределено);
		
		структура.Вставить("СчетКт", счет96);
		структура.Вставить("СубконтоКт1", резервыОтпусков96);
		структура.Вставить("СубконтоКт2", ПодразделениеЗатрат);
		структура.Вставить("СубконтоКт3", Неопределено);
		
		структура.Вставить("Сумма", выборка.СуммаОтпускных*(-1));
		структура.Вставить("Содержание", "Корректировка со старого подразделени по "+строка(виды.СуммаОтпускных));
		

		СоздатьПроводкуПеремещениеКорректировкиПоСтруктуре(Движения,структура);
		
		//////////////////////////Начисляем на новое подразделения
		структура=Новый Структура;
		
		
		структура.Вставить("СчетДт" , сч70);
		структура.Вставить("СубконтоДт1", ПодразделениеЗатрат);
		структура.Вставить("СубконтоДт2", Неопределено);
		структура.Вставить("СубконтоДт3", Неопределено);
		
		структура.Вставить("СчетКт", счет96);
		структура.Вставить("СубконтоКт1", резервыОтпусков96);
		структура.Вставить("СубконтоКт2", ПодразделениеЗатратНовое);
		структура.Вставить("СубконтоКт3", Неопределено);
		
		структура.Вставить("Сумма", выборка.СуммаОтпускных);
		структура.Вставить("Содержание", "Корректирируем на новое подразделение по  "+строка(виды.СуммаОтпускных));
		
		СоздатьПроводкуПеремещениеКорректировкиПоСтруктуре(Движения,структура);
        //Blik добавлены движения по НУ 240314 п 63 н
		//Движения по НУ
		//перемещение со старого
		новну = ДвиженияНУ.добавить();
		новну.период=дата;
		новну.СчетКт= СчКТНУ;
		новну.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоКт, 1, резервыОтпусков96);
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоКт, 2, ПодразделениеЗатрат);
		новну.сумма=Выборка.СуммаОтпускных*(-1);
		новну.Содержание="Корректировка в НУ со старого подразделени по "+строка(виды.СуммаОтпускных);
		новну.Организация=Организация;
		//перемещение на новое 
		новну = ДвиженияНУ.добавить();
		новну.период=дата;
		новну.СчетКт= СчКТНУ;
		новну.ВидУчетаДт=Перечисления.ВидыУчетаПоПБУ18.НУ;
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 1, резервыОтпусков96);
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 2, ПодразделениеЗатратНовое);
		новну.сумма=Выборка.СуммаОтпускных;
		новну.Содержание="Корректирируем в НУ на новое подразделение по  "+строка(виды.СуммаОтпускных);
		новну.Организация=Организация;

		//Blik добавлены движения по НУ 240314 п 63 к

	КонецЦикла;	



	
	
	

КонецПроцедуры

///Вадим 06.02.2014 7:38:10   бп 
Процедура СоздатьПроводкуПеремещениеКорректировкиПоСтруктуре(Движения,структура) 
	Движение=Движения.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,структура);
	Движение.период=дата;
	если не Движение.СчетДт.ВидыСубконто.Количество()=0 тогда
		для ии=1 по Движение.СчетДт.ВидыСубконто.Количество() цикл
			текЗнч=структура["СубконтоДт"+строка(ии)];
			текЗнч=проверитьЗначениеНаСтатьюЗатрат(Движение.СчетДт,текЗнч); 
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, ии, текЗнч);
		конеццикла;		
	Конецесли;	
	если не Движение.СчетКт.ВидыСубконто.Количество()=0 тогда
		для ии=1 по Движение.СчетКт.ВидыСубконто.Количество() цикл
			текЗнч=структура["СубконтоКт"+строка(ии)];
			текЗнч=проверитьЗначениеНаСтатьюЗатрат(Движение.СчетКт,текЗнч); 
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, ии, текЗнч);
		конеццикла;		
	Конецесли;	
	Движение.Организация=Организация;
	

КонецПроцедуры
//ВадимКонец
 ///Вадим 29.01.2014 11:13:53   бп 
Процедура СоздатьСторноПроводокДанныхНаНачалоИКонецПериодаПериода(Движения,ДвиженияНУ) //Blik добавлены движения по НУ 240314 п 63
	//для налоговых обязательств
	счДТНУО =  ПланыСчетов.Хозрасчетный.РасчетыСБюджетом; //68.04.1
	СчКТНУО = ПланыСчетов.Хозрасчетный.ПостоянноеНалоговоеОбязательство; //99.02.3
	Запрос = Новый Запрос;
	Запрос.Текст =
	//blik 030414 к  изменения в резервах - списываем на начало со старого подр
    //добавила в запросе старое подр
	"ВЫБРАТЬ
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СчетДт КАК СчетДт,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт1 КАК СубконтоДт1,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт2 КАК СубконтоДт2,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт3 КАК СубконтоДт3,
	|	СУММА(ПРГ_РезервированиеОтпусковРезервы.ОбщаяСуммаОценочныеОбязательстваНач) КАК СуммаНачОстатков,
	|	СУММА(ПРГ_РезервированиеОтпусковРезервы.ОбщаяСуммаОценочныеОбязательстваКон) КАК СуммаКонОстатков,
	|	ПРГ_РезервированиеОтпусковРезервы.ПодразделениеОрганизации,
	|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеЗатрат,
	|	ВЫБОР
	|		КОГДА НЕ ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииНачальный ЕСТЬ NULL 
	|			ТОГДА ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииНачальный
	|		ИНАЧЕ ПРГ_РезервированиеОтпусковРезервы.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизацииначальный
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.ПРГ_РезервированиеОтпусков.Резервы КАК ПРГ_РезервированиеОтпусковРезервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета КАК ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета
	|		ПО ПРГ_РезервированиеОтпусковРезервы.ПодразделениеОрганизации = ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеКадровогоУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПРГ_РезервированиеОтпусков.ПеремещениеСотрудников КАК ПРГ_РезервированиеОтпусковПеремещениеСотрудников
	|		ПО ПРГ_РезервированиеОтпусковРезервы.Ссылка = ПРГ_РезервированиеОтпусковПеремещениеСотрудников.Ссылка
	|			И ПРГ_РезервированиеОтпусковРезервы.Сотрудник = ПРГ_РезервированиеОтпусковПеремещениеСотрудников.Сотрудник
	|ГДЕ
	|	ПРГ_РезервированиеОтпусковРезервы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СчетДт,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт1,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт2,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт3,
	|	ПРГ_РезервированиеОтпусковРезервы.ПодразделениеОрганизации,
	|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеЗатрат,
	|	ВЫБОР
	|		КОГДА НЕ ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииНачальный ЕСТЬ NULL 
	|			ТОГДА ПРГ_РезервированиеОтпусковПеремещениеСотрудников.ПодразделениеОрганизацииНачальный
	|		ИНАЧЕ ПРГ_РезервированиеОтпусковРезервы.ПодразделениеОрганизации
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.СчетДт,
	|	ВТ.СубконтоДт1,
	|	ВТ.СубконтоДт2,
	|	ВТ.СубконтоДт3,
	|	ВТ.СуммаНачОстатков * -1 КАК СуммаНачОстатков,
	|	ВТ.СуммаКонОстатков,
	|	ВТ.ПодразделениеОрганизации,
	|	ВТ.ПодразделениеЗатрат,
	|	ВТ.ПодразделениеОрганизацииначальный
	|ИЗ
	|	ВТ КАК ВТ
	//|ГДЕ   //Blik 250215 36220
	//|	НЕ ВТ.СуммаНачОстатков = 0   //Blik 250215 36220
	//|	И НЕ ВТ.СуммаКонОстатков = 0   //Blik 220714 30283
	|";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		//начало изменений 
		//Blik добавлены движения по НУ 240314 п 63
		//счетДТНУ =   БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",Выборка.СчетДт), Ложь, Дата);
		//Если Выборка.СчетДт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходыНеОблагаемыеЕНВД Тогда
		//	счетДТНУ = ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы;	
		//ИначеЕсли Выборка.СчетДт = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходыНеОблагаемыеЕНВД Тогда
		//	счетДТНУ = ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы;	
		//иначе
		//	счетДТНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",Выборка.СчетДт), Ложь, Дата);
		//КонецЕсли;

		счетДТНУ  = ПРГ_ОпределитьсчетНУ(Выборка.СчетДт);
		счетКТНУ  = ПРГ_ОпределитьсчетНУ(счет96);
        //СчетКТНУ =  БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",счет96), Ложь, Дата);
		//конец изменений 

		////сторно нач остатка
		Если не Выборка.СуммаНачОстатков=0 Тогда //Blik 250215 36220
            ЭтоСторно = Истина; //Blik 160915 43943
			нов=Движения.Добавить();
			нов.период=НачалоМесяца(дата); //Blik 030414 списываем на начало месяца
			нов.СчетДт=Выборка.СчетДт;
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 1,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт1),);
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 2,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт2));
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 3,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт3)); 			
			//ЗаполнитьЗначенияСвойств(нов,Выборка);
			нов.СчетКт= счет96;
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетКт, нов.СубконтоКт, 1, Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков"));
			//blik 030414 к  изменения в резервах - списываем на начало со старого подр
			//БухгалтерскийУчет.УстановитьСубконто(нов.СчетКт, нов.СубконтоКт, 2, Выборка.ПодразделениеОрганизации);
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетКт, нов.СубконтоКт, 2, ?(Выборка.ПодразделениеОрганизации = Выборка.ПодразделениеОрганизацииначальный,Выборка.ПодразделениеЗатрат,ПолучитьПодразделениеЗатрат(Выборка.ПодразделениеОрганизацииначальный)));
			нов.сумма=Выборка.СуммаНачОстатков;
			нов.Содержание="Сторно на начало месяца";
			нов.Организация=Организация;
		КонецЕсли; //Blik 250215 36220
		////Конечный остаток
		Если не Выборка.СуммаКонОстатков=0 Тогда //Blik 250215 36220
			ЭтоСторно = Ложь; //Blik 160915 43943
			нов=Движения.Добавить();
			нов.период=дата;
			нов.СчетДт=Выборка.СчетДт;
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 1,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт1));
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 2,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт2));
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 3,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт3));
			нов.СчетКт= счет96;
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетКт, нов.СубконтоКт, 1, Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков"));
			БухгалтерскийУчет.УстановитьСубконто(нов.СчетКт, нов.СубконтоКт, 2, Выборка.ПодразделениеЗатрат);
			нов.сумма=Выборка.СуммаКонОстатков;
			нов.Содержание="Начисленно на конец месяца";
			нов.Организация=Организация;
			Если Выборка.ПодразделениеЗатрат=NULL тогда
				сообщить("Для подразделения "+Выборка.ПодразделениеОрганизации.наименование+" "+Выборка.ПодразделениеОрганизации.код+" не найдено соответствие с затратным подразделением");
			Конецесли;
		КонецЕсли;
		//Blik добавлены движения по НУ 240314 п 63 н
		Если не Выборка.СуммаНачОстатков=0 Тогда //Blik 250215 36220
			ЭтоСторно = Истина;  //Blik 160915 43943 
			новну = ДвиженияНУ.Добавить();
			////сторно нач остатка  ну по пр
			новну.период=НачалоМесяца(дата);
			новну.СчетДт=счетДТНУ;
			Если НетДанных Тогда  //Blik 160915 43943 н
				новну.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР;
			Иначе
				новну.ВидУчетаДт = ВидУчетаНУПред;
			КонецЕсли;  //Blik 160915 43943 к
			БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоДт, 1,проверитьЗначениеНаСтатьюЗатрат(Выборка.СчетДт,Выборка.СубконтоДт1));
			БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоДт, 2,проверитьЗначениеНаСтатьюЗатрат(Выборка.СчетДт,Выборка.СубконтоДт2));
			БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоДт, 3,проверитьЗначениеНаСтатьюЗатрат(Выборка.СчетДт,Выборка.СубконтоДт3));
			
			новну.СчетКт= СчетКТНУ;
			//начало изменений
			Если НетДанных Тогда  //Blik 160915 43943 н
				новну.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР;
			Иначе
				новну.ВидУчетаКт = ВидУчетаНУПред;
			КонецЕсли;  //Blik 160915 43943 к

			//конец изменений 
			БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 1, Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков"));
			БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 2, Выборка.ПодразделениеЗатрат);
			новну.сумма=Выборка.СуммаНачОстатков;
			новну.Содержание="Сторно на начало месяца по НУ";
			новну.Организация=Организация;
			
			////сторно нач остатка  ну по ну
			Если (нетданных) или (не нетданных и СтатьяОбщехозяйственныхРасходовТек.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения) Тогда //Blik 020216  по этому счету формируем только если статьи неучитываемые
				новну = ДвиженияНУ.добавить();
				новну.период=НачалоМесяца(дата);
				новну.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
				новну.СчетДт= ПланыСчетов.Налоговый.ДругиеВыплатыПоП_1_48;
				новну.сумма=Выборка.СуммаНачОстатков;
				новну.Содержание="Сторно на начало месяца по НУ";
				новну.Организация=Организация;
			КонецЕсли; 
			////сторно нач остатка по пост налог обязат-ва
			//нов=Движения.Добавить();
			//нов.период=дата;
			//нов.СчетДт=счДТНУО; //тут заполнить проводки
			////БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 1,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт1));
			////БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 2,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт2));
			////БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 3,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт3));
			//	  
			//нов.СчетКт= СчКТНУО;
			//нов.сумма=Выборка.СуммаНачОстатков*0.20;
			//нов.Содержание="Сторно на конец месяца по ПНО";
			//нов.Организация=Организация;
			
			////начислено по  ну по пр
			//начало изменений 
		КонецЕсли;
		Если не Выборка.СуммаКонОстатков=0 Тогда //Blik 250215 36220
			ЭтоСторно = Ложь; //Blik 160915 43943
			новну  =ДвиженияНУ.добавить();
			//конец изменений 
			новну.период=дата;
			новну.СчетДт=счетДТНУ;
			Если НетДанных Тогда  //Blik 160915 43943 н
				новну.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР;
			Иначе
				новну.ВидУчетаДт = ВидУчетаНУТек;
			КонецЕсли;  //Blik 160915 43943 к

			БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоДт, 1,проверитьЗначениеНаСтатьюЗатрат(Выборка.СчетДт,Выборка.СубконтоДт1));
			БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоДт, 2,проверитьЗначениеНаСтатьюЗатрат(Выборка.СчетДт,Выборка.СубконтоДт2));
			БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоДт, 3,проверитьЗначениеНаСтатьюЗатрат(Выборка.СчетДт,Выборка.СубконтоДт3));
			
			новну.СчетКт= СчетКТНУ;
			Если НетДанных Тогда  //Blik 160915 43943 н
				новну.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР;
			Иначе
				новну.ВидУчетаКт = ВидУчетаНУТек;
			КонецЕсли;  //Blik 160915 43943 к

			БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 1, Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков"));
			БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 2, Выборка.ПодразделениеЗатрат);
			новну.сумма=Выборка.СуммаКонОстатков;
			новну.Содержание="Начисленно на конец месяца по НУ";
			новну.Организация=Организация;
			
			////начислено по  ну по ну
			Если (нетданных) или (не нетданных и СтатьяОбщехозяйственныхРасходовТек.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения) Тогда //Blik 020216  по этому счету формируем только если статьи неучитываемые
				новну = ДвиженияНУ.добавить();
				новну.период=дата;
				новну.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
				новну.СчетДт= ПланыСчетов.Налоговый.ДругиеВыплатыПоП_1_48;
				новну.сумма=Выборка.СуммаКонОстатков;
				новну.Содержание="Начисленно на конец месяца по НУ";
				новну.Организация=Организация;
			КонецЕсли;
			////начислено  по пост налог обязат-ва
			//нов=Движения.Добавить();
			//нов.период=дата;
			//нов.СчетДт=счДТНУО; //тут заполнить проводки
			////БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 1,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт1));
			////БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 2,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт2));
			////БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 3,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт3));
			//	  
			//нов.СчетКт= СчКТНУО;
			//нов.сумма=Выборка.СуммаКонОстатков*0.20;
			//нов.Содержание="Начисленно на конец месяца ПНО";
			//нов.Организация=Организация;
		КонецЕсли;
		//Blik добавлены движения по НУ 240314 п 63 к

	КонецЦикла;	

КонецПроцедуры
//ВадимКонец
///Вадим 29.01.2014 11:13:53   бп 
Процедура СоздатьПроводкиПоУволенным(Движения,ДвиженияНУ)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СчетДт КАК СчетДт,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт1 КАК СубконтоДт1,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт2 КАК СубконтоДт2,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт3 КАК СубконтоДт3,
	|	СУММА(ПРГ_РезервированиеОтпусковРезервы.ОбщаяСуммаОценочныеОбязательстваКон) КАК СуммаКонОстатков,
	|	ПРГ_РезервированиеОтпусковРезервы.ПодразделениеОрганизации,
	|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеЗатрат
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.ПРГ_РезервированиеОтпусков.Резервы КАК ПРГ_РезервированиеОтпусковРезервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета КАК ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета
	|		ПО ПРГ_РезервированиеОтпусковРезервы.ПодразделениеОрганизации = ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеКадровогоУчета
	|ГДЕ
	|	ПРГ_РезервированиеОтпусковРезервы.Ссылка = &Ссылка
	|	И НЕ ПРГ_РезервированиеОтпусковРезервы.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СчетДт,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт1,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт2,
	|	ПРГ_РезервированиеОтпусковРезервы.СпособОтраженияВБухУчете.СубконтоДт3,
	|	ПРГ_РезервированиеОтпусковРезервы.ПодразделениеОрганизации,
	|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.СчетДт,
	|	ВТ.СубконтоДт1,
	|	ВТ.СубконтоДт2,
	|	ВТ.СубконтоДт3,
	|	ВТ.СуммаКонОстатков * -1 КАК СуммаКонОстатков,
	|	ВТ.ПодразделениеОрганизации,
	|	ВТ.ПодразделениеЗатрат
	|ИЗ
	|	ВТ КАК ВТ
	//|ГДЕ  //Blik 220714 30283
	//|	НЕ ВТ.СуммаКонОстатков = 0
	|";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		//счетДТНУ =   БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",Выборка.СчетДт), Ложь, Дата);
		//Если Выборка.СчетДт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходыНеОблагаемыеЕНВД Тогда
		//	счетДТНУ = ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы;	
		//ИначеЕсли Выборка.СчетДт = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходыНеОблагаемыеЕНВД Тогда
		//	счетДТНУ = ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы;	
		//иначе
		//	счетДТНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",Выборка.СчетДт), Ложь, Дата);
		//КонецЕсли;
        //СчетКТНУ =  БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",счет96), Ложь, Дата);
		ЭтоСТорно=Ложь;//Blik 160915 43943
		счетДТНУ   = ПРГ_ОпределитьсчетНУ(Выборка.СчетДт);
		СчетКТНУ   = ПРГ_ОпределитьсчетНУ(счет96);

		////сторно нач остатка
		нов=Движения.Добавить();
		нов.период=дата;
		нов.СчетДт=Выборка.СчетДт;
		БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 1,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт1));
		БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 2,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт2));
		БухгалтерскийУчет.УстановитьСубконто(нов.СчетДт, нов.СубконтоДт, 3,проверитьЗначениеНаСтатьюЗатрат(нов.СчетДт,Выборка.СубконтоДт3));
		
		
		//ЗаполнитьЗначенияСвойств(нов,Выборка);
		нов.СчетКт= счет96;
		БухгалтерскийУчет.УстановитьСубконто(нов.СчетКт, нов.СубконтоКт, 1, Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков"));
		БухгалтерскийУчет.УстановитьСубконто(нов.СчетКт, нов.СубконтоКт, 2, Выборка.ПодразделениеЗатрат);
		нов.сумма=Выборка.СуммаКонОстатков;
		нов.Содержание="Списания остатков по уволенным";
		нов.Организация=Организация;
		Если Выборка.ПодразделениеЗатрат=NULL тогда
			сообщить("Для подразделения "+Выборка.ПодразделениеОрганизации.наименование+" "+Выборка.ПодразделениеОрганизации.код+" не найдено соответствие с затратным подразделением");
		Конецесли;
		//проводка в ну по уволенным
		новну = ДвиженияНУ.добавить();
		новну.период=дата;
		новну.СчетДт=счетДТНУ;
		Если НетДанных Тогда  //Blik 160915 43943 н
			новну.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		Иначе
			новну.ВидУчетаДт = ВидУчетаНУТек;
		КонецЕсли;  //Blik 160915 43943 к

		БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоДт, 1,проверитьЗначениеНаСтатьюЗатрат(Выборка.СчетДт,Выборка.СубконтоДт1));
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоДт, 2,проверитьЗначениеНаСтатьюЗатрат(Выборка.СчетДт,Выборка.СубконтоДт2));
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетДт, новну.СубконтоДт, 3,проверитьЗначениеНаСтатьюЗатрат(Выборка.СчетДт,Выборка.СубконтоДт3));
			  
		новну.СчетКт= СчетКТНУ;
		Если НетДанных Тогда  //Blik 160915 43943 н
			новну.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		Иначе
			новну.ВидУчетаДт = ВидУчетаНУТек;
		КонецЕсли;  //Blik 160915 43943 к
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 1, Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков"));
		БухгалтерскийУчет.УстановитьСубконто(новну.СчетКт, новну.СубконтоКт, 2, Выборка.ПодразделениеЗатрат);
		новну.сумма=Выборка.СуммаКонОстатков;
		новну.Содержание="Списания остатков по уволенным в НУ";
		новну.Организация=Организация;
		

	КонецЦикла;
	

	

КонецПроцедуры
//ВадимКонец

/////Вадим 06.02.2014 16:33:30  бп 
Функция проверитьЗначениеНаСтатьюЗатрат(СчетДт,Значение,ВидПроводки="")
	//структура.Вставить("ВидПроводки", "СписаниеОтпуска");;
	Если нетДанных = Истина Тогда //старый алгоритм //Blik 010216 48522
		Сообщить("Обратите внимание!!!! При проведении используется страй алгоритм отражения затрат !!!!!");
		Если  типзнч(Значение)=тип("СправочникСсылка.СтатьиЗатрат") тогда
			Если ВидПроводки="СписаниеОтпуска" тогда
				ЕСли СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_) тогда
					возврат Справочники.СтатьиЗатрат.НайтиПоНаименованию("Зарплата основных производственных работников");///стр.Подразделение;
				Иначе //Blik 160915 43943  к	
					//начало изменений Ожиганов
					// все кроме 29 счета принимаемые к НУ
					//потом не забыть переделать под статью из основного начисления
					//возврат Справочники.СтатьиЗатрат.НайтиПоНаименованию("Заработная плата");
					Если сокрЛП(строка(Значение.код)) = "000010288" Тогда  //Blik 160915 43943 н
						возврат Справочники.СтатьиЗатрат.НайтиПоНаименованию("Зарплата основных производственных работников");
					Иначе    //Blik 160915 43943 к
						Если СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства) Тогда
							возврат Справочники.СтатьиЗатрат.НайтиПоКоду("000010836"); //Заработная плата не учитываеваемая
						Иначе
							возврат Справочники.СтатьиЗатрат.НайтиПоКоду("000010287"); //Заработная плата не учитываеваемая
						КонецЕсли;	
					КонецЕсли;	
				Конецесли;	
				
			Иначе
				ЕСли СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_) тогда
					возврат Справочники.СтатьиЗатрат.НайтиПоНаименованию("Резервы по отпускам персонала основных произв рабочих");///стр.Подразделение;
				иначе
					Если сокрЛП(строка(Значение.код)) = "000010288" Тогда  //Blik 160915 43943 н
						возврат Справочники.СтатьиЗатрат.НайтиПоНаименованию("Резервы по отпускам персонала основных произв рабочих");
					Иначе    //Blik 160915 43943 к
						возврат Справочники.СтатьиЗатрат.НайтиПоНаименованию("Резервы по отпускам персонала");
					КонецЕсли;
				Конецесли;		
			Конецесли;		
		иначе
			возврат Значение;
		Конецесли;	
	Иначе  //Blik 010216 48522 н
		Если  типзнч(Значение)=тип("СправочникСсылка.СтатьиЗатрат") тогда
			Если ВидПроводки="СписаниеОтпуска" тогда
				ЕСли СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_) тогда
					возврат Справочники.СтатьиЗатрат.НайтиПоНаименованию("Зарплата основных производственных работников");
				Иначе
					Если сокрЛП(строка(Значение.код)) = "000010288" Тогда  //Blik 160915 43943 н
						возврат Справочники.СтатьиЗатрат.НайтиПоНаименованию("Зарплата основных производственных работников");
					Иначе    //Blik 160915 43943 к
						Если СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства) Тогда
							возврат Справочники.СтатьиЗатрат.НайтиПоКоду("000010836"); //Заработная плата не учитываеваемая
						Иначе
							возврат Справочники.СтатьиЗатрат.НайтиПоКоду("000010287"); //Заработная плата не учитываеваемая
						КонецЕсли;	
					КонецЕсли;	
				Конецесли;	
				
			Иначе
				ЕСли СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_) тогда
					Если ЭтоСторно = Истина Тогда
						Возврат СтатьяПроизводственныхРасходовПред;
					иначе
						Возврат СтатьяПроизводственныхРасходовТек;
					КонецЕсли;
				иначе
					Если сокрЛП(строка(Значение.код)) = "000010288" Тогда  
						Если ЭтоСторно = Истина Тогда
							Возврат СтатьяПроизводственныхРасходовПред;
						иначе
							Возврат СтатьяПроизводственныхРасходовТек;
						КонецЕсли;
					Иначе    
						Если ЭтоСторно = Истина Тогда
							Возврат СтатьяОбщехозяйственныхРасходовПред;
						иначе
							Возврат СтатьяОбщехозяйственныхРасходовТек;
						КонецЕсли;
					КонецЕсли;
				Конецесли;		
			Конецесли;		
		иначе
			возврат Значение;
		Конецесли;	

	КонецЕсли; //Blik 010216 48522 к
	

КонецФункции 
// проверитьЗначениеНаСтатьюЗатрат() ВадимКонец


///Вадим 04.12.2012 15:38:57
Процедура заполнитьСтрокуРегистра(стр,Нов)
	ЗаполнитьЗначенияСвойств(нов,стр);
	нов.период=дата;
	

КонецПроцедуры

Процедура заполнитьПроводку(стр,Движение)
	структура=получитьЗначениеСчетовИСубконто(стр);
	ЗаполнитьЗначенияСвойств(Движение,структура);
	Движение.период=дата;
	ЭтоСТорно = Ложь; //Blik 160915 43943
	если не Движение.СчетДт.ВидыСубконто.Количество()=0 тогда
		для ии=1 по Движение.СчетДт.ВидыСубконто.Количество() цикл
			текЗнч=структура["СубконтоДт"+строка(ии)];
			текЗнч=проверитьЗначениеНаСтатьюЗатрат(Движение.СчетДт,текЗнч,структура.ВидПроводки); 
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, ии, текЗнч);
		конеццикла;		
	Конецесли;	
	
	
	если не Движение.СчетКт.ВидыСубконто.Количество()=0 тогда
		для ии=1 по Движение.СчетКт.ВидыСубконто.Количество() цикл
			текЗнч=структура["СубконтоКт"+строка(ии)];
			текЗнч=проверитьЗначениеНаСтатьюЗатрат(Движение.СчетКт,текЗнч,структура.ВидПроводки);  

			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, ии, текЗнч);
		конеццикла;		
	Конецесли;	

	
	//для ии=1 по 3 цикл
	//	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, ии, структура["СубконтоДт"+строка(ии)]);
	//	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, ии, структура["СубконтоКт"+строка(ии)]);
	//конеццикла;	
	
	
	
	

КонецПроцедуры

//Blik добавлены движения по НУ 240314 п 63	 н
Процедура ЗаполнитьпроводкупоНУ(стр,Движение,ТаблСчетовЗатрат,ТаблСтатей)
	//начало изменений 
	//Если стр.СпособОтраженияВБухУчете.СчетДт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходыНеОблагаемыеЕНВД Тогда
	//	счетДТНУ = ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы;	
	//ИначеЕсли стр.СпособОтраженияВБухУчете.СчетДт = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходыНеОблагаемыеЕНВД Тогда
	//	счетДТНУ = ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы;	
	//иначе
	//	счетДТНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",стр.СпособОтраженияВБухУчете.СчетДт), Ложь, Дата);
	//КонецЕсли;
	//
	счетДТНУ  = ПРГ_ОпределитьсчетНУ(стр.СпособОтраженияВБухУчете.СчетДт,Истина);
	
	//счетПоВиду=получитьСчетПоВидуСтроки(Стр.вид,стр.СпособОтраженияВБухУчете);
	//Если счетПоВиду=стр.СпособОтраженияВБухУчете.СчетКТ тогда
	СчетКТНУ = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда; //БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", стр.СпособОтраженияВБухУчете.СчетКт), Ложь, Дата);
	//конец изменений
	//Иначе
	//	СчетКТНУ =  БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",счетПоВиду), Ложь, Дата);
	//КонецЕсли;
	ВидУчетаДТ = Перечисления.ВидыУчетаПоПБУ18.НУ;
	
	Движение.период=дата;
	Движение.СчетДт=счетДТНУ;
	Движение.ВидУчетаДт = ВидУчетаДТ;
	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 1,стр.СпособОтраженияВБухУчете.СубконтоДт1);
	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 2,стр.СпособОтраженияВБухУчете.СубконтоДт2);
	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 3,стр.СпособОтраженияВБухУчете.СубконтоДт3);
	
	Если ТаблСчетовЗатрат.Найти(стр.СпособОтраженияВБухУчете.СчетДт,"Счет") <> Неопределено Тогда
		  ПРГСтатья = Движение.СубконтоДт.СтатьиЗатрат;
		  найдЗнч = ТаблСтатей.Найти(ПРГСтатья);
		  Если найдЗнч = Неопределено Тогда
			  НС  = ТаблСтатей.Добавить();
			  НС.Статья = ПРГСтатья;
			  Если НетДанных Тогда  //Blik 160915 43943 н 
				  НС.ВидУчета = ?(НС.Статья.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения,Перечисления.ВидыУчетаПоПБУ18.ПР,Перечисления.ВидыУчетаПоПБУ18.НУ);
			  Иначе
				  НС.ВидУчета = ?(НС.Статья.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения,ВидУчетаНУТек,Перечисления.ВидыУчетаПоПБУ18.НУ);
			  КонецЕсли;  //Blik 160915 43943 к
			  Движение.ВидУчетаДт = НС.ВидУчета;
		  Иначе 
			  Движение.ВидУчетаДт = найдЗнч.ВидУчета;
		  КонецЕсли; 
	КонецЕсли;	
	
	
	Движение.СчетКт= СчетКТНУ;
	//начало изменений 
	Движение.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;
	//конец изменений 
	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 1, стр.СпособОтраженияВБухУчете.СубконтоКт1);
	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 2, стр.СпособОтраженияВБухУчете.СубконтоКт2);
	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 3, стр.СпособОтраженияВБухУчете.СубконтоКт3);
	Движение.сумма=стр.сумма;
	Движение.Содержание="списание используемого отпуска по "+строка(Стр.вид);
	Движение.Организация=Организация;
	

КонецПроцедуры
//Blik добавлены движения по НУ 240314 п 63 к	

/////Вадим 05.02.2014 10:36:12  бп 
Функция получитьЗатратноеПодразделениеИзКадрового(ПодразделениеКадровое)
	
	
	НайденнаяСтрока = общТаблицаСравненияПодразделений.Найти(ПодразделениеКадровое, "ПодразделениеКадровогоУчета");
	Если НайденнаяСтрока = Неопределено Тогда
		сообщить("Для подразделения "+ПодразделениеКадровое.наименование+" "+ПодразделениеКадровое.код+" не найдено соответствие с затратным подразделением");
		возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	Иначе
		возврат НайденнаяСтрока.ПодразделениеЗатрат;
	КонецЕсли; 

	

КонецФункции 
// получитьЗатратноеПодразделениеИзКадрового() ВадимКонец


Функция получитьЗначениеСчетовИСубконто(стр)
	структура=Новый Структура;
	сч70=ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
	ПодразделениеЗатрат=получитьЗатратноеПодразделениеИзКадрового(стр.Подразделение);
	если  стр.ОписаниеДвижения="перемещениеСписание" или стр.ОписаниеДвижения="перемещениеНачисление"
		или стр.ОписаниеДвижения="КорректировкаРасход" или стр.ОписаниеДвижения="КорректировкаПриход" тогда
		структура.Вставить("ВидПроводки", "перемещение");

		счетПоВиду=получитьСчетПоВидуСтроки(стр.вид,стр.СпособОтраженияВБухУчете,Истина);	
		//Если счетПоВиду=стр.СпособОтраженияВБухУчете.СчетДт тогда
		//	структура.Вставить("СчетДт" , стр.СпособОтраженияВБухУчете.СчетДт);
		//	структура.Вставить("СубконтоДт1", стр.СпособОтраженияВБухУчете.СубконтоДт1);
		//	структура.Вставить("СубконтоДт2", стр.СпособОтраженияВБухУчете.СубконтоДт2);
		//	структура.Вставить("СубконтоДт3", стр.СпособОтраженияВБухУчете.СубконтоДт3);
		Если счетПоВиду=стр.СпособОтраженияВБухУчете.СчетДт тогда
			структура.Вставить("СчетДт" , сч70);
			структура.Вставить("СубконтоДт1", ПодразделениеЗатрат);
			структура.Вставить("СубконтоДт2", Неопределено);
			структура.Вставить("СубконтоДт3", Неопределено);
		Иначе
			
			структура.Вставить("СчетДт", счетПоВиду);
			структура.Вставить("СубконтоДт1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			структура.Вставить("СубконтоДт2", Неопределено);
			структура.Вставить("СубконтоДт3", Неопределено);
		конецесли;	
		структура.Вставить("СчетКт", счет96);
		структура.Вставить("СубконтоКт1", Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков"));
		структура.Вставить("СубконтоКт2", ПодразделениеЗатрат);
		структура.Вставить("СубконтоКт3", Неопределено);
		Если стр.ОписаниеДвижения="перемещениеСписание" или стр.ОписаниеДвижения="КорректировкаРасход" тогда
			структура.Вставить("Сумма", стр.сумма*(-1));
		Иначе
			структура.Вставить("Сумма", стр.сумма);
		Конецесли;	
		///структура.Вставить("Содержание", ?(стр.ОписаниеДвижения="перемещениеСписание","сторнируем движение со старого подразделени по "+строка(стр.вид),"записываем движение на новое подразделение по "+строка(стр.вид)));
		Если стр.ОписаниеДвижения="перемещениеСписание" или стр.ОписаниеДвижения="перемещениеНачисление" тогда
			структура.Вставить("Содержание", ?(стр.ОписаниеДвижения="перемещениеСписание","Перемещение со старого подразделени по "+строка(стр.вид),"Перемещение на новое подразделение по "+строка(стр.вид)));
		Иначе
			структура.Вставить("Содержание", ?(стр.ОписаниеДвижения="КорректировкаРасход","Корректировка со старого подразделени по "+строка(стр.вид),"Корректирируем на новое подразделение по "+строка(стр.вид)));
		Конецесли;
	иначеесли  стр.ОписаниеДвижения="СписаниеОтпуска" тогда
		структура.Вставить("ВидПроводки", "СписаниеОтпуска");
		счетПоВиду=получитьСчетПоВидуСтроки(Стр.вид,стр.СпособОтраженияВБухУчете);
		
		Если счетПоВиду=стр.СпособОтраженияВБухУчете.СчетКТ тогда
			структура.Вставить("СчетКт" , стр.СпособОтраженияВБухУчете.СчетКт);
			структура.Вставить("СубконтоКт1", стр.СпособОтраженияВБухУчете.СубконтоКт1);
			структура.Вставить("СубконтоКт2", стр.СпособОтраженияВБухУчете.СубконтоКт2);
			структура.Вставить("СубконтоКт3", стр.СпособОтраженияВБухУчете.СубконтоКт3);
		Иначе
			
			структура.Вставить("СчетКт", счетПоВиду);
			структура.Вставить("СубконтоКт1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			структура.Вставить("СубконтоКт2", Неопределено);
			структура.Вставить("СубконтоКт3", Неопределено);
		конецесли;	
		//структура.Вставить("СчетДт", счет96);
		//структура.Вставить("СубконтоДт1", Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков"));
		//структура.Вставить("СубконтоДт2", Неопределено);
		//структура.Вставить("СубконтоДт3", Неопределено);
		структура.Вставить("СчетДт" , стр.СпособОтраженияВБухУчете.СчетДт);
		структура.Вставить("СубконтоДт1", стр.СпособОтраженияВБухУчете.СубконтоДт1);
		структура.Вставить("СубконтоДт2", стр.СпособОтраженияВБухУчете.СубконтоДт2);
		структура.Вставить("СубконтоДт3", стр.СпособОтраженияВБухУчете.СубконтоДт3);
		
		
		
		структура.Вставить("Сумма", стр.сумма);
		структура.Вставить("Содержание", "списание используемого отпуска по "+строка(Стр.вид));
		
	//иначеесли  стр.ОписаниеДвижения="НачислениеОтпуска" тогда		
	//	
	//	
	//	структура.Вставить("СчетДт" , стр.СпособОтраженияВБухУчете.СчетДт);
	//	структура.Вставить("СубконтоДт1", стр.СпособОтраженияВБухУчете.СубконтоДт1);
	//	структура.Вставить("СубконтоДт2", стр.СпособОтраженияВБухУчете.СубконтоДт2);
	//	структура.Вставить("СубконтоДт3", стр.СпособОтраженияВБухУчете.СубконтоДт3);
	//	
	//	структура.Вставить("СчетКт", счет96);
	//	структура.Вставить("СубконтоКт1", Справочники.Резервы.НайтиПоНаименованию("Резерв отпусков"));
	//	структура.Вставить("СубконтоКт2", Неопределено);
	//	структура.Вставить("СубконтоКт3", Неопределено);
	//	структура.Вставить("Сумма", стр.сумма);
	//	структура.Вставить("Содержание", "начисление отпуска по "+строка(Стр.вид));
	Конецесли;
    возврат структура;
КонецФункции 
// получитьЗначениеСчетовИСубконто() ВадимКонец

 //Blik 010216 48522 н
Процедура ЗаполнитьСтатьиОтраженияБУНУ()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПРГ_СпособыОтраженияРезервовОтпусков.Период,
	|	ПРГ_СпособыОтраженияРезервовОтпусков.СтатьяОбщехозяйственныхРасходов КАК СтатьяОбщехозяйственныхРасходовТек,
	|	ПРГ_СпособыОтраженияРезервовОтпусков.СтатьяПроизводственныхРасходов КАК СтатьяПроизводственныхРасходовТек,
	|	ПРГ_СпособыОтраженияРезервовОтпусков.ВидУчетаНУ КАК ВидУчетаНУТек,
	|	ПРГ_СпособыОтраженияРезервовОтпусковПред.Период КАК Период1,
	|	ПРГ_СпособыОтраженияРезервовОтпусковПред.СтатьяОбщехозяйственныхРасходов,
	|	ПРГ_СпособыОтраженияРезервовОтпусковПред.СтатьяПроизводственныхРасходов,
	|	ПРГ_СпособыОтраженияРезервовОтпусковПред.ВидУчетаНУ
	|ИЗ
	|	РегистрСведений.ПРГ_СпособыОтраженияРезервовОтпусков КАК ПРГ_СпособыОтраженияРезервовОтпусков,
	|	РегистрСведений.ПРГ_СпособыОтраженияРезервовОтпусков КАК ПРГ_СпособыОтраженияРезервовОтпусковПред
	|ГДЕ
	|	ПРГ_СпособыОтраженияРезервовОтпусков.Период МЕЖДУ &НачалоГодаДатаДок И &НачалоМесяцаДатаДок
	|	И ВЫБОР
	|			КОГДА &НачалоГодаДатаДок = &НачалоМесяцаДатаДок
	|				ТОГДА ПРГ_СпособыОтраженияРезервовОтпусковПред.Период < &НачалоМесяцаДатаДок
	|			ИНАЧЕ ПРГ_СпособыОтраженияРезервовОтпусковПред.Период МЕЖДУ &НачалоГодаДатаДок И &НачалоМесяцаДатаДок
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("НачалоМесяцаДатаДок", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("НачалоГодаДатаДок", НачалоГода(Дата));
	
	выборка = запрос.Выполнить().Выбрать();
	
	Если выборка.Следующий() тогда
		СтатьяОбщехозяйственныхРасходовТек  = выборка.СтатьяОбщехозяйственныхРасходовТек;
		СтатьяПроизводственныхРасходовТек = выборка.СтатьяПроизводственныхРасходовТек;
		ВидУчетаНУТек = выборка.ВидУчетаНУТек;
		Если НачалоМесяца(Дата) = НачалоГода(ТекущаяДата()) Тогда
			СтатьяОбщехозяйственныхРасходовПред  = выборка.СтатьяОбщехозяйственныхРасходовТек;
			СтатьяПроизводственныхРасходовПред = выборка.СтатьяПроизводственныхРасходовТек;
			ВидУчетаНУПред = выборка.ВидУчетаНУТек;
		Иначе
			СтатьяОбщехозяйственныхРасходовПред = выборка.СтатьяОбщехозяйственныхРасходов;
			СтатьяПроизводственныхРасходовПред = выборка.СтатьяПроизводственныхРасходов;
			ВидУчетаНУПред = выборка.ВидУчетаНУ;
		КонецЕсли;
	Иначе
		НетДанных = Истина;
	КонецЕсли;
КонецПроцедуры
//Blik 010216 48522 к


//ВадимКонец

//начало изменений 
Процедура ДобавитьСчета(Табл,счбу,счну)
	Если Табл = Неопределено Тогда
		Табл = Новый ТаблицаЗначений;
		Табл.Колонки.Добавить("СчетБУ");
		Табл.Колонки.Добавить("СчетНУ");
	КонецЕсли;	 
	НоваяСтрока = Табл.Добавить();
	НоваяСтрока.СчетБУ  = ПланыСчетов.Хозрасчетный.НайтиПоКоду(счбу);
	НоваяСтрока.СчетНУ  = ПланыСчетов.Налоговый.НайтиПоКоду(счну);
КонецПроцедуры	

Функция ПРГ_ОпределитьсчетНУ(счБУ,Прямые20=ложь)
	
	Если Прямые20 Тогда
		Если счБУ = ПланыСчетов.Хозрасчетный.ОсновноеПроизводствоНеОблагаемоеЕНВД Тогда
			возврат ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства;
		КонецЕсли;	
	КонецЕсли;	
	Найдзнч = ТаблСоотвсчетовНУБУ.Найти(счБУ,"СчетБУ");
	Если Найдзнч <> Неопределено Тогда
		возврат Найдзнч.СчетНУ;
	Иначе
		возврат БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ",счБУ), Ложь, Дата);
	КонецЕслИ	
КонецФункции	
//конец изменений 

Функция получитьСписокВидовОтчислений()
	тзВидов=Новый ТаблицаЗначений;
	тзВидов.Колонки.Добавить("Вид");
	тзВидов.Колонки.Добавить("ПолеСуммыНачислено");
	тзВидов.Колонки.Добавить("ПолеСуммыИспользовано");
	перечВидов=Перечисления.ПРГ_РаспределениеРезервовОтпусков;
	нов=тзВидов.Добавить();нов.вид=перечВидов.СуммаОтпускных;нов.ПолеСуммыНачислено="СуммаНачислено";нов.ПолеСуммыИспользовано="СуммаИспользовано";
	нов=тзВидов.Добавить();нов.вид=перечВидов.СтавкаПФРНакопительная;нов.ПолеСуммыНачислено="СуммаПФРНакопительная";нов.ПолеСуммыИспользовано="СуммаПФРНакопительнаяИсп";
	нов=тзВидов.Добавить();нов.вид=перечВидов.СтавкаПФРСтраховая;нов.ПолеСуммыНачислено="СуммаПФРСтраховая";нов.ПолеСуммыИспользовано="СуммаПФРСтраховаяИсп";
	нов=тзВидов.Добавить();нов.вид=перечВидов.СтавкаФОМС;нов.ПолеСуммыНачислено="СуммаФОМС";нов.ПолеСуммыИспользовано="СуммаФОМСИсп";
	нов=тзВидов.Добавить();нов.вид=перечВидов.СтавкаФСС;нов.ПолеСуммыНачислено="СуммаФСС";нов.ПолеСуммыИспользовано="СуммаФССИсп";
	нов=тзВидов.Добавить();нов.вид=перечВидов.СтавкаФССиНС;нов.ПолеСуммыНачислено="СуммаФССНС";нов.ПолеСуммыИспользовано="СуммаФССНСИсп";

	возврат тзВидов;

КонецФункции 
// получитьСписокВидовОтчислений() ВадимКонец

Функция ПолучитьПодразделениеЗатрат(подркадр)  //blik 030414 н  изменения в резервах - списываем на начало со старого подр
      Запрос = Новый Запрос;
	Запрос.Текст =
	//blik 030414 к  изменения в резервах - списываем на начало со старого подр
    //добавила в запросе старое подр
	"ВЫБРАТЬ
	|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеЗатрат КАК подрЗатрат
	|ИЗ
	|	РегистрСведений.ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета КАК ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета
	|ГДЕ
	|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеКадровогоУчета = &ПодразделениеКадровогоУчета";
	Запрос.УстановитьПараметр("ПодразделениеКадровогоУчета", подркадр);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		 Возврат выборка.подрЗатрат;
	 Иначе
		 Сообщить("Не определено подразделение затрат для подразделения "+Строка(подркадр));
		 Возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;

КонецФункции;   //blik 030414 к  изменения в резервах - списываем на начало со старого подр 


ДобавитьСчета(ТаблСоотвсчетовНУБУ,"20.01.1","20.01.2");
ДобавитьСчета(ТаблСоотвсчетовНУБУ,"23.01","23.02");
ДобавитьСчета(ТаблСоотвсчетовНУБУ,"25.01","25.02");
//начало изменений
//ДобавитьСчета(ТаблСоотвсчетовНУБУ,"26.01","26.01");
ДобавитьСчета(ТаблСоотвсчетовНУБУ,"26.01","26.02");
//конец изменений
ДобавитьСчета(ТаблСоотвсчетовНУБУ,"28.01","28.02");
ДобавитьСчета(ТаблСоотвсчетовНУБУ,"29.01","29.01");
ДобавитьСчета(ТаблСоотвсчетовНУБУ,"44.02.1","44.02.1");
ДобавитьСчета(ТаблСоотвсчетовНУБУ,"96","96");
	
счет96=ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
НетДанных=Ложь;//Blik 010216 48522