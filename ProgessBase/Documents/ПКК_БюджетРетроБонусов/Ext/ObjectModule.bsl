Перем мУдалятьДвижения;

#Если Клиент Тогда
	
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() ИЛИ (НЕ Проведен) Тогда
		Предупреждение("Документ можно распечатать только после его проведения.");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если ИмяМакета = "" тогда
        		

	КонецЕсли;

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура;
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Выполняет движения по регистру "ПланыДвиженияДенежныхСредств"
//
Процедура ДвиженияПоРегистрамУпр()
	
	ВалютаУпрУчета = глЗначениеПеременной("ВалютаУправленческогоУчета");
	
	// Получим коэффициент пересчета сумм документа в валюту упр. учета.
	Если ВалютаДокумента = ВалютаУпрУчета Тогда
		КоэффициентПересчетаУпр = 1;
	Иначе
		
		Если Сценарий.ИспользоватьКурсыСценария Тогда
			РегистрКурсов = РегистрыСведений.КурсыВалютПоСценариям;
			
			ОтборПоВалютеУпр = Новый Структура;
			ОтборПоВалютеУпр.Вставить("Валюта",   ВалютаУпрУчета);
			ОтборПоВалютеУпр.Вставить("Сценарий", Сценарий);
			
			ОтборПоВалютеДок = Новый Структура;
			ОтборПоВалютеДок.Вставить("Валюта",   ВалютаДокумента);
			ОтборПоВалютеДок.Вставить("Сценарий", Сценарий);
			
		Иначе
			
			РегистрКурсов = РегистрыСведений.КурсыВалют;
			
			ОтборПоВалютеУпр = Новый Структура;
			ОтборПоВалютеУпр.Вставить("Валюта", ВалютаУпрУчета);
			
			ОтборПоВалютеДок = Новый Структура;
			ОтборПоВалютеДок.Вставить("Валюта", ВалютаДокумента);
			
		КонецЕсли;
		
		СтруктураКурсовУпр = РегистрКурсов.ПолучитьПоследнее(ДатаПланирования, ОтборПоВалютеУпр);
		КурсУпрУчета       = СтруктураКурсовУпр.Курс;
		КратностьУпрУчета  = СтруктураКурсовУпр.Кратность;
		
		СтруктураКурсовДок = РегистрКурсов.ПолучитьПоследнее(ДатаПланирования, ОтборПоВалютеДок);
		КурсДок            = СтруктураКурсовДок.Курс;
		КратностьДок       = СтруктураКурсовДок.Кратность;
		
		Если КурсДок = 0 
			или КратностьДок = 0 
			или КурсУпрУчета = 0 
			или КратностьУпрУчета = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("При пересчете в валюту упр. учета обнаружен нулевой курс.");
			Возврат;
		Иначе	
			КоэффициентПересчетаУпр = (КурсДок * КратностьУпрУчета) / (КурсУпрУчета * КратностьДок)
		КонецЕсли;
		
	КонецЕсли;
	
	// По регистру "ПКК_БюджетБонусовУслуг"
	НаборДвижений = Движения.ПКК_БюджетБонусовУслуг;
	
	// Получим таблицу значений, совпадающую со структурой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	НаборДвиженийОстаткиПоСтатьям   = Движения.ПРГ_ОстаткиПоБюджетам;
	ТаблицаДвиженийОстаткиПоСтатьям = НаборДвиженийОстаткиПоСтатьям.Выгрузить();
	ТаблицаДвиженийОстаткиПоСтатьям.Очистить();
		
	Для Каждого Строка ИЗ ДвиженияДенежныхСредств Цикл
		
		СтрокаДвижение = ТаблицаДвижений.Добавить();
		//СтрокаДвижение.Подразделение                 = Ссылка.Подразделение;
		СтрокаДвижение.Дивизион                      = Ссылка.Дивизион;
		СтрокаДвижение.СтатьяДДС                     = Строка.СтатьяДвиженияДенежныхСредств;
		//{18.05.2015 Островерхий заявка №38415 
		СтрокаДвижение.Комментарий     = Строка.Комментарий; 
		//18.05.2015 Островерхий}
		СтрокаДвижение.Проект                        = Строка.Проект;
		//СтрокаДвижение.Контрагент                    = Строка.Контрагент;
		//СтрокаДвижение.ДоговорКонтрагента            = Строка.ДоговорКонтрагента;
		СтрокаДвижение.Вывеска                       = Строка.Вывеска;
		
		//СтрокаДвижение.Сумма    = Строка.Сумма;
		СтрокаДвижение.Сумма = Строка.Сумма * КоэффициентПересчетаУпр;
		
		
		СтрокаДвижениеОстаткиПоСтатьям = ТаблицаДвиженийОстаткиПоСтатьям.Добавить();
		
		СтрокаДвижениеОстаткиПоСтатьям.Подразделение = Ссылка.Подразделение;
		СтрокаДвижениеОстаткиПоСтатьям.СтатьяДДС     = Строка.СтатьяДвиженияДенежныхСредств;
		СтрокаДвижениеОстаткиПоСтатьям.Проект        = ?(ЗначениеЗаполнено(Строка.Проект), Строка.Проект, Неопределено);
		СтрокаДвижениеОстаткиПоСтатьям.Сумма         = Строка.Сумма * КоэффициентПересчетаУпр;
		СтрокаДвижениеОстаткиПоСтатьям.Период        = ?(ДатаПланирования<>'00010101',НачалоМесяца(ДатаПланирования),НачалоМесяца(Дата));// НачалоМесяца(Ссылка.Дата);
		СтрокаДвижениеОстаткиПоСтатьям.СарехОрех     = Перечисления.ПРГ_СарехОрех.Орех;

	КонецЦикла;        	
	
	НаборДвижений.мПериод            = ДатаПланирования;
	НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;
	
	Движения.ПКК_БюджетБонусовУслуг.ВыполнитьДвижения();   	
	
	НаборДвиженийОстаткиПоСтатьям.мПериод            = НачалоМесяца(Ссылка.Дата);
	НаборДвиженийОстаткиПоСтатьям.мТаблицаДвижений   = ТаблицаДвиженийОстаткиПоСтатьям;
	
	Движения.ПРГ_ОстаткиПоБюджетам.ВыполнитьДвижения();
	
КонецПроцедуры // ДвиженияПоРегистрамУпр()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	Отказ=Ложь;
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, Новый Структура("ВалютаДокумента,ДатаПланирования"), Отказ, Заголовок);
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ДвиженияДенежныхСредств", Новый Структура("СтатьяДвиженияДенежныхСредств",
													"Не заполнена статья движения денежных средств"),Отказ, Заголовок);
													
	Если Не Отказ Тогда
		
		ДвиженияПоРегистрамУпр();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	
КонецПроцедуры

Процедура ЗагрузитьТаблицуРетробонусов(ТЗ) Экспорт 

	Если ТЗ.Количество() Тогда
		ДвиженияДенежныхСредств.Очистить();	
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.Вывеска,
		|	Таблица.Комментарий,
		|	Таблица.Контрагент,
		|	Таблица.Показатель,
		|	Таблица.РасшифровкаБюджетаРетробонусов,
		|	Таблица.Брендообъем,
		|	Таблица.СтатьяДвиженияДенежныхСредств,
		|	Таблица.Дивизион
		|ПОМЕСТИТЬ втТаблица
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблица.Дивизион,
		|	ПРГДивизионы.Ссылка КАК ДивизионСсылка,
		|	втТаблица.Вывеска,
		|	НСИ_Вывески.Ссылка КАК ВывескаСсылка,
		|	втТаблица.Контрагент,
		|	Контрагенты.Ссылка КАК КонтрагентСсылка,
		|	втТаблица.РасшифровкаБюджетаРетробонусов КАК РасшифровкаБюджетаРетробонусов,
		|	ПРГРасшифровкаБюджетаРетробонусов.Ссылка КАК РасшифровкаБюджетаРетробонусовСсылка,
		|	втТаблица.Брендообъем,
		|	НСИ_Брендообъемы.Ссылка КАК БрендообъемСсылка,
		|	СтатьиДвиженияДенежныхСредств.Ссылка КАК СтатьяДвиженияДенежныхСредствСсылка,
		|	втТаблица.СтатьяДвиженияДенежныхСредств,
		|	втТаблица.Комментарий,
		|	втТаблица.Показатель КАК Показатель
		|ИЗ
		|	втТаблица КАК втТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НСИ_Вывески КАК НСИ_Вывески
		|		ПО втТаблица.Вывеска = НСИ_Вывески.Наименование
		|			И (НЕ НСИ_Вывески.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО втТаблица.Контрагент = Контрагенты.Код
		|			И (НЕ Контрагенты.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПРГРасшифровкаБюджетаРетробонусов КАК ПРГРасшифровкаБюджетаРетробонусов
		|		ПО втТаблица.РасшифровкаБюджетаРетробонусов = ПРГРасшифровкаБюджетаРетробонусов.Наименование
		|			И (НЕ ПРГРасшифровкаБюджетаРетробонусов.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НСИ_Брендообъемы КАК НСИ_Брендообъемы
		|		ПО втТаблица.Брендообъем = НСИ_Брендообъемы.Наименование
		|			И (НЕ НСИ_Брендообъемы.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
		|		ПО втТаблица.СтатьяДвиженияДенежныхСредств = СтатьиДвиженияДенежныхСредств.ФинКод
		|			И (НЕ СтатьиДвиженияДенежныхСредств.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПРГДивизионы КАК ПРГДивизионы
		|		ПО втТаблица.Дивизион = ПРГДивизионы.Код
		|			И (НЕ ПРГДивизионы.ПометкаУдаления)
		|ГДЕ
		|	ПРГДивизионы.Ссылка = &Дивизион
		|ИТОГИ
		|	СУММА(Показатель)
		|ПО
		|	КонтрагентСсылка,
		|	РасшифровкаБюджетаРетробонусов,
		|	РасшифровкаБюджетаРетробонусовСсылка";

	Запрос.УстановитьПараметр("Таблица",ТЗ);
	Запрос.УстановитьПараметр("Дивизион",Дивизион);

	//Таблица = Запрос.Выполнить().Выгрузить();
	Результат = Запрос.Выполнить();
	
	ВыборкаКонтрагент = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
	
		ВыборкаРасшифровкаБюджетаРетробонусов = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаРасшифровкаБюджетаРетробонусов.Следующий() Цикл
			
			тНоваяСтрокаДДС = ДвиженияДенежныхСредств.Добавить();
			
			ВыборкаРасшифровкаБюджетаРетробонусовСсылка = ВыборкаРасшифровкаБюджетаРетробонусов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаРасшифровкаБюджетаРетробонусовСсылка.Следующий() Цикл
				
				Если ВыборкаРасшифровкаБюджетаРетробонусовСсылка.РасшифровкаБюджетаРетробонусовСсылка = NULL Тогда
					РасшифровкаБюджетаРетробонусов = Справочники.ПРГРасшифровкаБюджетаРетробонусов.СоздатьЭлемент();
				Иначе
					РасшифровкаБюджетаРетробонусов = ВыборкаРасшифровкаБюджетаРетробонусовСсылка.РасшифровкаБюджетаРетробонусовСсылка.ПолучитьОбъект();
				КонецЕсли; 
				
				РасшифровкаБюджетаРетробонусов.Расшифровка.Очистить();
				РасшифровкаБюджетаРетробонусов.Наименование = ВыборкаРасшифровкаБюджетаРетробонусов.РасшифровкаБюджетаРетробонусов;
				РасшифровкаБюджетаРетробонусов.Контрагент = ВыборкаРасшифровкаБюджетаРетробонусов.КонтрагентСсылка;
				
				ВыборкаДетальныеЗаписи = ВыборкаРасшифровкаБюджетаРетробонусовСсылка.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					тНоваяСтрокаДДС.Контрагент = ВыборкаДетальныеЗаписи.КонтрагентСсылка;
					//{26.07.2016 Островерхий заявка №б/н 
					//тНоваяСтрокаДДС.Вывеска = ВыборкаДетальныеЗаписи.ВывескаСсылка; 
					//{15.02.2017 Островерхий заявка №б/н 
					//тНоваяСтрокаДДС.Вывеска = тНоваяСтрокаДДС.Контрагент.НСИ_Вывеска; 
					Если ЗначениеЗаполнено(тНоваяСтрокаДДС.Контрагент) 
						И ТипЗнч(тНоваяСтрокаДДС.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
					
						тНоваяСтрокаДДС.Вывеска = тНоваяСтрокаДДС.Контрагент.НСИ_Вывеска;	
					
					КонецЕсли; 
					//15.02.2017 Островерхий} 
					//26.07.2016 Островерхий} тНоваяСтрокаДДС.Вывеска = ВыборкаДетальныеЗаписи.ВывескаСсылка;
					
					тНоваяСтрокаДДС.СтатьяДвиженияДенежныхСредств = ВыборкаДетальныеЗаписи.СтатьяДвиженияДенежныхСредствСсылка;
					//{25.07.2016 Островерхий заявка №б/н 
					//тНоваяСтрокаДДС.Комментарий = ВыборкаДетальныеЗаписи.Брендообъем;
                    тНоваяСтрокаДДС.Комментарий = ВыборкаДетальныеЗаписи.Комментарий;
					//25.07.2016 Островерхий} 
					
					РасшифровкаБюджетаРетробонусов.СтатьяДвиженияДенежныхСредств = ВыборкаДетальныеЗаписи.СтатьяДвиженияДенежныхСредствСсылка;
					
					//{26.07.2016 Островерхий заявка №б/н, письмо Нагорной А. 
					//Если ВыборкаДетальныеЗаписи.БрендообъемСсылка = NULL Тогда
					//	Продолжить;
					//КонецЕсли; 
					//26.07.2016 Островерхий} 
					
					тНоваяСтрокаРБР = РасшифровкаБюджетаРетробонусов.Расшифровка.Добавить();
					тНоваяСтрокаРБР.Брендообъем = ВыборкаДетальныеЗаписи.БрендообъемСсылка;
					тНоваяСтрокаРБР.Сумма = ВыборкаДетальныеЗаписи.Показатель;
					
				КонецЦикла;
				
				Попытка
					
					РасшифровкаБюджетаРетробонусов.Записать();
					тНоваяСтрокаДДС.РасшифровкаБюджетаРетробонусов = РасшифровкаБюджетаРетробонусов.Ссылка;	
					
				Исключение
					
				КонецПопытки;	
			
			КонецЦикла; 
			
			тНоваяСтрокаДДС.Сумма = ВыборкаРасшифровкаБюджетаРетробонусов.Показатель;
			//тНоваяСтрокаДДС.СтатьяДвиженияДенежныхСредств = ;
			
		КонецЦикла;	
	
	КонецЦикла; 

КонецПроцедуры
 

