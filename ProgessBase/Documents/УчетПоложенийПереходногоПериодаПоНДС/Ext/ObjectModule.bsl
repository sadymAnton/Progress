Перем мУдалятьДвижения;


Перем мВалютаРегламентированногоУчета Экспорт;

Перем мУчетнаяПолитикаНУ Экспорт;

Перем мВестиУчетНДС Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ АВТОЗАПОЛНЕНИЯ СТРОК ДОКУМЕНТА

////////////////////////////////////////////////////////////////////////////////
// Заполнение табличной части "СМР хозспособом"

// Процедура выполняет автоматическое заполнение табличной части документа
// Вызывается из процедуры КоманднаяПанельВычетПоПриобретеннымЦенностямЗаполнить
//
Процедура ЗаполнитьДокумент(ОшибкаЗаполнения = Ложь, Сообщать = Истина, СтрокаСообщения = "", ОтменитьПроведение = Ложь) Экспорт
	
	Если Проведен Тогда
		Если ОтменитьПроведение Тогда
			Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			ОшибкаЗаполнения = Истина;
			СтрокаСообщения = " перед заполнением требуется отменить проведение документа";
			Если Сообщать Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Документ не заполнен:" + СтрокаСообщения, , Строка(Ссылка));
			КонецЕсли; 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Если учетная политика не заполнена
	Если Не ?(Не ЗначениеЗаполнено(мУчетнаяПолитикаНУ), Ложь, мУчетнаяПолитикаНУ.Свойство("НДСНалоговыйПериод")) Тогда
			
		мУчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Дата, Организация, Ложь);
		
		Если Не ЗначениеЗаполнено(мУчетнаяПолитикаНУ) Тогда
			СтрокаСообщения = "не указаны параметры учетной политики (" + СокрЛП(Организация) + ") на " + Формат(Дата, "ДЛФ=DD");
			Если Сообщать Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Документ не заполнен:" + СтрокаСообщения,,Строка(Ссылка));
			КонецЕсли; 
			Возврат;
		КонецЕсли;
		
	КонецЕсли; 
	
	ТаблицаРезультатов = НДСпоСтроительству.ВыгрузитьКолонки();
	
	ЗаполнениеПоТекущемуНалоговомуПериоду = ( не НачалоДня(Дата) < '20060101');
	Если ЗаполнениеПоТекущемуНалоговомуПериоду 
		и Год(Дата) = 2006  и не месяц(дата) = 12 Тогда
		Делитель =  13 - месяц(дата);
	Иначе		
		Делитель = 1;
	КонецЕсли; 

	ТаблицаРезультатов = ЗаполнитьНДСпоСтроительствуПоТекущимДанным(Делитель);
	
	НДСпоСтроительству.Загрузить(ТаблицаРезультатов);

	Если Не (НДСпоСтроительству.Количество() > 0 
        ) Тогда
		ОшибкаЗаполнения = Истина;
		СтрокаСообщения = СтрокаСообщения+Символы.ПС + " - не обнаружены данные для заполнения"
	КонецЕсли;	

   Если ОшибкаЗаполнения Тогда
		Если Сообщать Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Документ не заполнен:" + СтрокаСообщения, , Строка(Ссылка));
		КонецЕсли; 
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры // ЗаполнитьСтрокиДокумента()

// Вызывается из процедуры ЗаполнитьСтроки_НДСпоСтроительству.
// Заполняет ТЧ НДСпоСтроительству по данным указанного периода
Функция ЗаполнитьНДСпоСтроительствуПоТекущимДанным(Делитель = 1)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСнаСтроительство.Объект КАК ОбъектСтроительства,
	|	НДСнаСтроительство.СчетФактура,
	|	НДСнаСтроительство.ВидЦенности,
	|	НДСнаСтроительство.СтавкаНДС,
	|	НДСнаСтроительство.СчетУчетаНДС КАК СчетУчетаНДС,
	|	НДСнаСтроительство.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	НДСнаСтроительство.Состояние,
	|	ВЫБОР
	|		КОГДА НДСнаСтроительство.СуммаБезНДС > НДСпоОСиНМАОстатки.СуммаБезНДСОстаток
	|			ТОГДА НДСпоОСиНМАОстатки.СуммаБезНДСОстаток
	|		ИНАЧЕ НДСнаСтроительство.СуммаБезНДС
	|	КОНЕЦ / &Делитель КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА НДСнаСтроительство.НДС > НДСпоОСиНМАОстатки.НДСОстаток
	|			ТОГДА НДСпоОСиНМАОстатки.НДСОстаток
	|		ИНАЧЕ НДСнаСтроительство.НДС
	|	КОНЕЦ / &Делитель КАК НДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДСпоОСиНМАОбороты.Объект КАК Объект,
	|		НДСпоОСиНМАОбороты.СчетФактура КАК СчетФактура,
	|		НДСпоОСиНМАОбороты.ВидЦенности КАК ВидЦенности,
	|		НДСпоОСиНМАОбороты.СтавкаНДС КАК СтавкаНДС,
	|		НДСпоОСиНМАОбороты.СчетУчетаНДС КАК СчетУчетаНДС,
	|		НДСпоОСиНМАОбороты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|		НДСпоОСиНМАОбороты.Состояние КАК Состояние,
	|		СУММА(НДСпоОСиНМАОбороты.СуммаБезНДСОборот) КАК СуммаБезНДС,
	|		СУММА(НДСпоОСиНМАОбороты.НДСОборот) КАК НДС
	|	ИЗ
	|		РегистрНакопления.НДСпоОСиНМА.Обороты(
	|			&Начало2005,
	|			&Конец2005,
	|			Период,
	|			Организация = &Организация
	|			    И ВЫБОР
	|			        КОГДА &ИсключитьВидыЦенностей
	|			            ТОГДА (НЕ ВидЦенности В (&ВидЦенности))
	|			        ИНАЧЕ ВидЦенности В (&ВидЦенности)
	|			    КОНЕЦ
	|			    И Состояние = &Состояние_ОжиданиеПринятияКУчетуОбъектаСтроительства
	|			    И НеВлияетНаВычет = ЛОЖЬ
	|			    И Объект ССЫЛКА Справочник.ОбъектыСтроительства) КАК НДСпоОСиНМАОбороты
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДСпоОСиНМАОбороты.СчетУчетаНДС,
	|		НДСпоОСиНМАОбороты.НДСВключенВСтоимость,
	|		НДСпоОСиНМАОбороты.ВидЦенности,
	|		НДСпоОСиНМАОбороты.Состояние,
	|		НДСпоОСиНМАОбороты.СтавкаНДС,
	|		НДСпоОСиНМАОбороты.Объект,
	|		НДСпоОСиНМАОбороты.СчетФактура
	|	
	|	ИМЕЮЩИЕ
	|		(СУММА(НДСпоОСиНМАОбороты.СуммаБезНДСОборот) > 0
	|			ИЛИ СУММА(НДСпоОСиНМАОбороты.НДСОборот) > 0)) КАК НДСнаСтроительство
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСпоОСиНМА.Остатки(
	|		&КонецПериода_Граница,
	|		Организация = &Организация
	|		    И ВЫБОР
	|		        КОГДА &ИсключитьВидыЦенностей
	|		            ТОГДА (НЕ ВидЦенности В (&ВидЦенности))
	|		        ИНАЧЕ ВидЦенности В (&ВидЦенности)
	|		    КОНЕЦ
	|		    И Состояние = &Состояние_ожиданиеПринятияКУчетуОбъектаСтроительства
	|		    И НеВлияетНаВычет = ЛОЖЬ
	|		    И Объект ССЫЛКА Справочник.ОбъектыСтроительства) КАК НДСпоОСиНМАОстатки
	|		ПО НДСнаСтроительство.Объект = НДСпоОСиНМАОстатки.Объект
	|			И НДСнаСтроительство.СчетФактура = НДСпоОСиНМАОстатки.СчетФактура
	|			И НДСнаСтроительство.ВидЦенности = НДСпоОСиНМАОстатки.ВидЦенности
	|			И НДСнаСтроительство.СтавкаНДС = НДСпоОСиНМАОстатки.СтавкаНДС
	|			И НДСнаСтроительство.СчетУчетаНДС = НДСпоОСиНМАОстатки.СчетУчетаНДС
	|			И НДСнаСтроительство.НДСВключенВСтоимость = НДСпоОСиНМАОстатки.НДСВключенВСтоимость
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НДСнаСтроительство.СуммаБезНДС > НДСпоОСиНМАОстатки.СуммаБезНДСОстаток
	|				ТОГДА НДСпоОСиНМАОстатки.СуммаБезНДСОстаток
	|			ИНАЧЕ НДСнаСтроительство.СуммаБезНДС
	|		КОНЕЦ >= 0
	|	И ВЫБОР
	|			КОГДА НДСнаСтроительство.НДС > НДСпоОСиНМАОстатки.НДСОстаток
	|				ТОГДА НДСпоОСиНМАОстатки.НДСОстаток
	|			ИНАЧЕ НДСнаСтроительство.НДС
	|		КОНЕЦ >= 0
	|	И ВЫБОР
	|			КОГДА НДСнаСтроительство.СуммаБезНДС > НДСпоОСиНМАОстатки.СуммаБезНДСОстаток
	|				ТОГДА НДСпоОСиНМАОстатки.СуммаБезНДСОстаток
	|			ИНАЧЕ НДСнаСтроительство.СуммаБезНДС
	|		КОНЕЦ / &Делитель + ВЫБОР
	|			КОГДА НДСнаСтроительство.НДС > НДСпоОСиНМАОстатки.НДСОстаток
	|				ТОГДА НДСпоОСиНМАОстатки.НДСОстаток
	|			ИНАЧЕ НДСнаСтроительство.НДС
	|		КОНЕЦ / &Делитель > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектСтроительства,
	|	НДСнаСтроительство.СчетФактура.МоментВремени,
	|	СчетУчетаНДС,
	|	НДСВключенВСтоимость УБЫВ";

	Запрос.УстановитьПараметр("Организация"	, Организация);
	Запрос.УстановитьПараметр("Начало2005"	, '20050101');
	Запрос.УстановитьПараметр("Конец2005"	, '20051231235959');
	Запрос.УстановитьПараметр("Состояние_ОжиданиеПринятияКУчетуОбъектаСтроительства", Перечисления.НДССостоянияОСНМА.ОжидаетсяПринятиеКУчетуОбъектаСтроительства);
	Запрос.УстановитьПараметр("КонецПериода_Граница"	, Новый граница(КонецДня(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Делитель"	, Делитель);
	
	ВидЦенности = новый Массив;
	Если Дата<'20060101' Тогда
		// Отработка переходного периода в соответствии с п.6 статьи 3 закона №119-ФЗ
		ВидЦенности.Добавить(Перечисления.ВидыЦенностей.СМРПодрядные);
		ВидЦенности.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
		ВидЦенности.Добавить(Перечисления.ВидыЦенностей.ОС);
		ВидЦенности.Добавить(Перечисления.ВидыЦенностей.Оборудование);
		ВидЦенности.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежиОС);
		Запрос.УстановитьПараметр("ИсключитьВидыЦенностей"	, Истина);
	Иначе
		// Отработка переходного периода в соответствии с п.2 статьи 3 закона №119-ФЗ 
		ВидЦенности.Добавить(Перечисления.ВидыЦенностей.СМРПодрядные);
		Запрос.УстановитьПараметр("ИсключитьВидыЦенностей"	, Ложь);
	КонецЕсли; 
	Запрос.УстановитьПараметр("ВидЦенности"	, ВидЦенности);
	
	ТаблицаРезультатов = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	
	Возврат ТаблицаРезультатов;
	
КонецФункции // ЗаполнитьНДСКВычетуПоДаннымРегистраНДСПредъявленный()

// Заполнение табличной части "СМР хозспособом"
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение, не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - структура, содержащая рексвизиты шапки документа и результаты запроса по шапке,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	// Документ может быть введен не ранее 31.12.2005.
	// В нем отрабатываются положения НК РФ, вступающие в силу с 01.01.2006 г.
	// а так же положения переходного периода (последним днам 2005 года)
	Если СтруктураШапкиДокумента.Дата<'20051231' Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Документ не может быть проведен с датой менее 31 декабря 2005 года!",Отказ, Заголовок);
	КонецЕсли; 
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// По организации не может быть введено более одного документа данного вида за месяц 
//
Процедура ПроверитьСуществованиеДругихДокументовВТекущемПериоде(СтруктураШапкиДокумента, Отказ,Заголовок)
	
	ЗаполнениеПоТекущемуНалоговомуПериоду = ( не НачалоДня(Дата) < '20060101');
	
	Если ЗаполнениеПоТекущемуНалоговомуПериоду Тогда
	    НачалоПериода	= НачалоМесяца(Дата);
		КонецПериода	= КонецМесяца(Дата);	
	Иначе
	    НачалоПериода	= '20050101';
		КонецПериода	= '20051231235959';	
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетПоложенийПереходногоПериодаПоНДС.Ссылка,
	|	УчетПоложенийПереходногоПериодаПоНДС.Представление
	|ИЗ
	|	Документ.УчетПоложенийПереходногоПериодаПоНДС КАК УчетПоложенийПереходногоПериодаПоНДС
	|ГДЕ
	|	УчетПоложенийПереходногоПериодаПоНДС.Дата >= &НачалоПериода
	|	И УчетПоложенийПереходногоПериодаПоНДС.Дата <= &КонецПериода
	|	И УчетПоложенийПереходногоПериодаПоНДС.Организация = &Организация
	|	И (НЕ УчетПоложенийПереходногоПериодаПоНДС.Ссылка = &ТекущийДокумент)
	|	И УчетПоложенийПереходногоПериодаПоНДС.Проведен = ИСТИНА";
	
	Запрос.УстановитьПараметр("НачалоПериода",	НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",	КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация",	СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ТекущийДокумент",СтруктураШапкиДокумента.Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
	    Возврат;
	КонецЕсли; 
	
	СтрокаДокументовПересечений = "";
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если НЕ ПустаяСтрока(СтрокаДокументовПересечений) Тогда
			СтрокаДокументовПересечений = СтрокаДокументовПересечений + Символы.ПС;
		КонецЕсли; 
		СтрокаДокументовПересечений = СтрокаДокументовПересечений + Строка(Выборка.Представление);
	КонецЦикла; 
	
	Если НЕ ПустаяСтрока(СтрокаДокументовПересечений) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(("Найдены документы по учету положений переходного периода, которые действуют в выбранном периоде("+ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина")+"):" + Символы.ПС + СтрокаДокументовПересечений), Отказ, Заголовок);
	КонецЕсли; 
	
КонецПроцедуры // ПроверитьСуществованиеДругихДокументовВТекущемМесяце(СтруктураШапкиДокумента)()
 
// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
//
Функция ПодготовитьТаблицуПоНДСпоСтроительству(РезультатЗапросаПоНДСпоСтроительству, СтруктураШапкиДокумента)

	ТаблицаНДСпоСтроительству = РезультатЗапросаПоНДСпоСтроительству.Выгрузить();
	
	ТаблицаНДСпоСтроительству.Колонки.Добавить("Состояние", Новый ОписаниеТипов("ПеречислениеСсылка.НДССостоянияОСНМА"));
	ТаблицаНДСпоСтроительству.ЗаполнитьЗначения(Перечисления.НДССостоянияОСНМА.ОжидаетсяПринятиеКУчетуОбъектаСтроительства,"Состояние");
	
	ТаблицаНДСпоСтроительству.Колонки.Добавить("НеВлияетНаВычет", Новый ОписаниеТипов("Булево"));
	
	Возврат ТаблицаНДСпоСтроительству;

КонецФункции // ПодготовитьТаблицуПоОплатам()

// Проверяет правильность заполнения строк табличной части.
//
//
Процедура ПроверитьЗаполнениеТабличнойЧастиПоНДСпоСтроительству(СтруктураШапкиДокумента,ТаблицаПоНДСпоСтроительству, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ОбъектСтроительства,СчетФактура,ВидЦенности,СчетУчетаНДС, СтавкаНДС"); 
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "НДСпоСтроительству", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	Для Каждого СтрокаТаблицы Из НДСпоСтроительству Цикл
		
		// Проверка на заполнение сумм
		Если СтрокаТаблицы.СуммаБезНДС + СтрокаТаблицы.НДС = 0 Тогда
			СтрокаСообщенияОбОшибке = "В строке номер """+ СокрЛП(СтрокаТаблицы.НомерСтроки) + """ табличной части ""НДС по строительству"": не заполнены значения реквизитов ""Сумма без НДС"" и ""НДС""";
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщенияОбОшибке, Отказ, Заголовок);
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// По результату запроса по шапке документа формируем движения по регистрам.
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоНДСпоСтроительству, Отказ, Заголовок)
	
	ДвиженияПоРегистрамНДС_СнятиеБлокировкиНДСпоСтроительству(СтруктураШапкиДокумента, ТаблицаПоНДСпоСтроительству, Отказ, Заголовок);
	
КонецПроцедуры // ДвиженияПоРегистрам()

// По результату запроса по шапке документа формируем движения по регистрам.
// Отрабатывает по табличной части "НДСпоСтроительству"
//
Процедура ДвиженияПоРегистрамНДС_СнятиеБлокировкиНДСпоСтроительству(СтруктураШапкиДокумента, ТаблицаПоНДСпоСтроительству, Отказ, Заголовок)

	Если ТаблицаПоНДСпоСтроительству.КОличество()=0 Тогда
		Возврат;
	КонецЕсли; 
	
	Если мВестиУчетНДС Тогда
		// Отражение по регистру "НДС по ОС, НМА"
		ТаблицаДвижений_НДСпоОСиНМА = Движения.НДСпоОСиНМА.Выгрузить();
		ТаблицаДвижений_НДСпоОСиНМА.Очистить();
		
		СоответствиеНазваний = Новый Структура("СуммаБезНДС, НДС, СуммаБезНДС_Минус, НДС_Минус","СуммаБезНДС_Плюс", "НДС_Плюс", "СуммаБезНДС", "НДС");
		УчетНДС.ПереименованиеКолонок(ТаблицаПоНДСпоСтроительству, СоответствиеНазваний, Ложь, Ложь);
		
		// Сторно записей, блокирующих вычет
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоНДСпоСтроительству,ТаблицаДвижений_НДСпоОСиНМА);
		
		ТаблицаПоНДСпоСтроительству.ЗаполнитьЗначения(Истина, "НеВлияетНаВычет");
		СоответствиеНазваний = Новый Структура("СуммаБезНДС, НДС,СуммаБезНДС_Плюс ,НДС_Плюс ","СуммаБезНДС_Минус", "НДС_Минус", "СуммаБезНДС", "НДС");
		УчетНДС.ПереименованиеКолонок(ТаблицаПоНДСпоСтроительству, СоответствиеНазваний, Ложь, Ложь);
		
		// Загрузка записей, не блокирующих вычет
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоНДСпоСтроительству,ТаблицаДвижений_НДСпоОСиНМА);
		
		Движения.НДСпоОСиНМА.мПериод = СтруктураШапкиДокумента.Дата;
		Движения.НДСпоОСиНМА.мТаблицаДвижений = ТаблицаДвижений_НДСпоОСиНМА;
		Движения.НДСпоОСиНМА.ВыполнитьПриход();
		
	КонецЕсли;
	

КонецПроцедуры // ДвиженияПоНДСпоСтроительствуНДСпоПриобретеннымЦенностям()
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	ПроверитьСуществованиеДругихДокументовВТекущемПериоде(СтруктураШапкиДокумента, Отказ,Заголовок);
	
	// Подготовим данные необходимые для проведения и проверки заполнения табличной части.
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("Организация",		"Ссылка.Организация");
	
	СтруктураПолей.Вставить("Объект",			"ОбъектСтроительства");
	СтруктураПолей.Вставить("СчетФактура",		"СчетФактура");
	СтруктураПолей.Вставить("ВидЦенности",		"ВидЦенности");
	СтруктураПолей.Вставить("СчетУчетаНДС",		"СчетУчетаНДС");
	СтруктураПолей.Вставить("НДСВключенВСтоимость","НДСВключенВСтоимость");
	
	СтруктураПолей.Вставить("СтавкаНДС",		"СтавкаНДС");
	СтруктураПолей.Вставить("СуммаБезНДС",		"СуммаБезНДС");
	СтруктураПолей.Вставить("НДС",				"НДС");
	СтруктураПолей.Вставить("СуммаБезНДС_Минус","СуммаБезНДС*(-1)");
	СтруктураПолей.Вставить("НДС_Минус",		"НДС*(-1)");
	                         
	СтруктураПолей.Вставить("ДатаСобытия",		"Ссылка.Дата");

	РезультатЗапросаНДСпоСтроительству	= УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "НДСпоСтроительству", СтруктураПолей);
	ТаблицаПоНДСпоСтроительству			= ПодготовитьТаблицуПоНДСпоСтроительству(РезультатЗапросаНДСпоСтроительству,СтруктураШапкиДокумента);
	
	ПроверитьЗаполнениеТабличнойЧастиПоНДСпоСтроительству(СтруктураШапкиДокумента,ТаблицаПоНДСпоСтроительству, Отказ, Заголовок);
	
	мВестиУчетНДС = УчетНДС.ПроводитьПоРазделуУчетаНДС(Дата);

	Если Не Отказ Тогда
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоНДСпоСтроительству,Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");

мУчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Дата, Организация);
