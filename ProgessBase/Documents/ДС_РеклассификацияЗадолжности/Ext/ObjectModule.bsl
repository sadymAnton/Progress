
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
	Движения.Международный.Записывать = Истина;
	
	//СоответствиеСчетов = Новый Соответствие;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МеждународныйОстатки.Счет,
	|	МеждународныйОстатки.Субконто1 КАК Контрагент,
	|	МеждународныйОстатки.Субконто2 КАК Договор,
	|	МеждународныйОстатки.Валюта,
	|	ВЫБОР
	|		КОГДА МеждународныйОстатки.Счет В (&СчетаКраткосрочнойЗадолженности)
	|			ТОГДА МеждународныйОстатки.СуммаОстатокКт - МеждународныйОстатки.СуммаОстатокДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КраткосрочнаяЗадолженность,
	|	ВЫБОР
	|		КОГДА МеждународныйОстатки.Счет В (&СчетаКраткосрочнойЗадолженности)
	|			ТОГДА МеждународныйОстатки.ВалютнаяСуммаОстатокКт - МеждународныйОстатки.ВалютнаяСуммаОстатокДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КраткосрочнаяЗадолженностьВал,	
	|	ВЫБОР
	|		КОГДА МеждународныйОстатки.Счет В (&СчетаДолгосрочнойЗадолженности)
	|			ТОГДА МеждународныйОстатки.СуммаОстатокКт - МеждународныйОстатки.СуммаОстатокДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДолгосрочнаяЗадолженность,
	|	ВЫБОР
	|		КОГДА МеждународныйОстатки.Счет В (&СчетаДолгосрочнойЗадолженности)
	|			ТОГДА МеждународныйОстатки.ВалютнаяСуммаОстатокКт - МеждународныйОстатки.ВалютнаяСуммаОстатокДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДолгосрочнаяЗадолженностьВал
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(&ДатаОстатков, Счет В (&Субсчета65), &ВидыСубконто, Субконто2 В (&Договоры)) КАК МеждународныйОстатки");
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Договоры);
	
	Субсчета65 = Новый Массив;
	Субсчета65.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.01.1"));
	Субсчета65.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.01.2"));
	Субсчета65.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.02.1"));
	Субсчета65.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.02.2"));
	Субсчета65.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.03.1"));
	Субсчета65.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.03.2"));
	Субсчета65.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.04.1"));
	Субсчета65.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.04.2"));
	
	СчетаКраткосрочнойЗадолженности = Новый Массив;
	СчетаКраткосрочнойЗадолженности.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.01.1"));
	СчетаКраткосрочнойЗадолженности.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.01.2"));
	СчетаКраткосрочнойЗадолженности.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.03.1"));
	СчетаКраткосрочнойЗадолженности.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.03.2"));
	
	СчетаДолгосрочнойЗадолженности = Новый Массив;
	СчетаДолгосрочнойЗадолженности.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.02.1"));
	СчетаДолгосрочнойЗадолженности.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.02.2"));
	СчетаДолгосрочнойЗадолженности.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.04.1"));
	СчетаДолгосрочнойЗадолженности.Добавить(ПланыСчетов.Международный.НайтиПоКоду("65.04.2"));
	
	Запрос.УстановитьПараметр("ДатаОстатков", 	Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Субсчета65", 	Субсчета65);
	Запрос.УстановитьПараметр("ВидыСубконто", 	ВидыСубконто);
	Запрос.УстановитьПараметр("Договоры", 		Задолжности.ВыгрузитьКолонку("Договор"));
	
	Запрос.УстановитьПараметр("СчетаКраткосрочнойЗадолженности", СчетаКраткосрочнойЗадолженности);
	Запрос.УстановитьПараметр("СчетаДолгосрочнойЗадолженности", СчетаДолгосрочнойЗадолженности);
	
	ТекущееСостояниеБУ = Запрос.Выполнить().Выгрузить();
	
	ТекущееСостояниеБУСвернутое = ТекущееСостояниеБУ.Скопировать();
	ТекущееСостояниеБУСвернутое.Свернуть("Договор, Валюта", "КраткосрочнаяЗадолженность, КраткосрочнаяЗадолженностьВал, ДолгосрочнаяЗадолженность, ДолгосрочнаяЗадолженностьВал");
	ТекущееСостояниеБУСвернутое.Колонки.Добавить("СчетКраткосрочнойЗадолженности");
	ТекущееСостояниеБУСвернутое.Колонки.Добавить("СчетДолгосрочнойЗадолженности");
	
	Для Каждого СтрокаБУСвернутое Из ТекущееСостояниеБУСвернутое Цикл
		Для Каждого СтрокаБУ Из ТекущееСостояниеБУ.НайтиСтроки(Новый Структура("Договор", СтрокаБУСвернутое.Договор)) Цикл
			Если СтрокаБУ.КраткосрочнаяЗадолженность <> 0 Тогда
				СтрокаБУСвернутое.СчетКраткосрочнойЗадолженности = СтрокаБУ.Счет;
			ИначеЕсли СтрокаБУ.ДолгосрочнаяЗадолженность <> 0 Тогда
				СтрокаБУСвернутое.СчетДолгосрочнойЗадолженности = СтрокаБУ.Счет;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("Период", КонецДня(Дата));
	
	ВидСубконтоКонтрагенты = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Контрагенты;
	ВидСубконтоДоговоры = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Договоры;
	
	Для Каждого СтрокаЗадолженности Из Задолжности Цикл
		Для Каждого СтрокаОстатков Из ТекущееСостояниеБУСвернутое.НайтиСтроки(Новый Структура("Договор", СтрокаЗадолженности.Договор)) Цикл
			Если СтрокаОстатков.ДолгосрочнаяЗадолженность <> 0 Тогда
				
				Если Не ЗначениеЗаполнено(СтрокаОстатков.СчетКраткосрочнойЗадолженности) Тогда
					СтрокаОстатков.СчетКраткосрочнойЗадолженности = СтрокаЗадолженности.ис_СчетКраткосрочнойЗадолженности;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(СтрокаОстатков.СчетДолгосрочнойЗадолженности) Тогда
					СтрокаОстатков.СчетДолгосрочнойЗадолженности = СтрокаЗадолженности.ис_СчетДолгосрочнойЗадолженности;
				КонецЕсли;				
				
				Если ЗначениеЗаполнено(СтрокаОстатков.СчетКраткосрочнойЗадолженности) И ЗначениеЗаполнено(СтрокаОстатков.СчетДолгосрочнойЗадолженности) Тогда
					// сначала списываем долгосрочную на счет краткосрочной
					
					Если СтрокаОстатков.ДолгосрочнаяЗадолженность > 0 Тогда
						СтруктураРеквизитов.Вставить("СчетДт", СтрокаОстатков.СчетДолгосрочнойЗадолженности);
						СтруктураРеквизитов.Вставить("СчетКт", СтрокаОстатков.СчетКраткосрочнойЗадолженности);
						СтруктураРеквизитов.Вставить("Сумма",  СтрокаОстатков.ДолгосрочнаяЗадолженность);
					Иначе
						СтруктураРеквизитов.Вставить("СчетДт", СтрокаОстатков.СчетКраткосрочнойЗадолженности);
						СтруктураРеквизитов.Вставить("СчетКт", СтрокаОстатков.СчетДолгосрочнойЗадолженности);
						СтруктураРеквизитов.Вставить("Сумма", -СтрокаОстатков.ДолгосрочнаяЗадолженность);
					КонецЕсли;
					
					Если СтруктураРеквизитов.СчетДт.Валютный Тогда
						СтруктураРеквизитов.Вставить("ВалютаДт", СтрокаОстатков.Валюта);
						Если СтрокаОстатков.ДолгосрочнаяЗадолженность > 0 Тогда
							СтруктураРеквизитов.Вставить("ВалютнаяСуммаДт",  СтрокаОстатков.ДолгосрочнаяЗадолженностьВал);
						Иначе
							СтруктураРеквизитов.Вставить("ВалютнаяСуммаДт",  -СтрокаОстатков.ДолгосрочнаяЗадолженностьВал);
						КонецЕсли;
					Иначе
						СтруктураРеквизитов.Удалить("ВалютаДт");
						СтруктураРеквизитов.Удалить("ВалютнаяСуммаДт");
					КонецЕсли;
					
					Если СтруктураРеквизитов.СчетКт.Валютный Тогда
						СтруктураРеквизитов.Вставить("ВалютаКт", СтрокаОстатков.Валюта);
						Если СтрокаОстатков.ДолгосрочнаяЗадолженность > 0 Тогда
							СтруктураРеквизитов.Вставить("ВалютнаяСуммаКт",  СтрокаОстатков.ДолгосрочнаяЗадолженностьВал);
						Иначе
							СтруктураРеквизитов.Вставить("ВалютнаяСуммаКт",  -СтрокаОстатков.ДолгосрочнаяЗадолженностьВал);
						КонецЕсли;
					Иначе
						СтруктураРеквизитов.Удалить("ВалютаКт");
						СтруктураРеквизитов.Удалить("ВалютнаяСуммаКт");
					КонецЕсли;
					
					Движение = Движения.Международный.Добавить();
					ЗаполнитьЗначенияСвойств(Движение, СтруктураРеквизитов);
					Движение.СубконтоДт[ВидСубконтоДоговоры] = СтрокаЗадолженности.Договор;
					Движение.СубконтоКт[ВидСубконтоДоговоры] = СтрокаЗадолженности.Договор;
					Движение.СубконтоДт[ВидСубконтоКонтрагенты] = СтрокаЗадолженности.Договор.Владелец;
					Движение.СубконтоКт[ВидСубконтоКонтрагенты] = СтрокаЗадолженности.Договор.Владелец;
					
					// потом оставляем краткосрочную по графику
					СуммаУбрать = СтрокаОстатков.ДолгосрочнаяЗадолженность + СтрокаОстатков.КраткосрочнаяЗадолженность - СтрокаЗадолженности.КраткосрочнаяЗадолжностьРуб;
					СуммаУбратьВал = СтрокаОстатков.ДолгосрочнаяЗадолженностьВал + СтрокаОстатков.КраткосрочнаяЗадолженностьВал - СтрокаЗадолженности.КраткосрочнаяЗадолжность;
					
					Если СуммаУбрать > 0 Тогда
						СтруктураРеквизитов.Вставить("СчетДт", СтрокаОстатков.СчетКраткосрочнойЗадолженности);
						СтруктураРеквизитов.Вставить("СчетКт", СтрокаОстатков.СчетДолгосрочнойЗадолженности);
						СтруктураРеквизитов.Вставить("Сумма",  СуммаУбрать);
					ИначеЕсли СуммаУбрать < 0 Тогда
						СтруктураРеквизитов.Вставить("СчетКт", СтрокаОстатков.СчетКраткосрочнойЗадолженности);
						СтруктураРеквизитов.Вставить("СчетДт", СтрокаОстатков.СчетДолгосрочнойЗадолженности);
						СтруктураРеквизитов.Вставить("Сумма",  -СуммаУбрать);						
					Иначе // СуммаУбрать = 0
						Продолжить;
					КонецЕсли;
					
					Если СтруктураРеквизитов.СчетДт.Валютный Тогда
						СтруктураРеквизитов.Вставить("ВалютаДт", СтрокаОстатков.Валюта);
						СтруктураРеквизитов.Вставить("ВалютнаяСуммаДт",  СуммаУбратьВал);
					Иначе
						СтруктураРеквизитов.Удалить("ВалютаДт");
						СтруктураРеквизитов.Удалить("ВалютнаяСуммаДт");
					КонецЕсли;
					
					Если СтруктураРеквизитов.СчетКт.Валютный Тогда
						СтруктураРеквизитов.Вставить("ВалютаКт", СтрокаОстатков.Валюта);
						СтруктураРеквизитов.Вставить("ВалютнаяСуммаКт",  СуммаУбратьВал);
					Иначе
						СтруктураРеквизитов.Удалить("ВалютаКт");
						СтруктураРеквизитов.Удалить("ВалютнаяСуммаКт");
					КонецЕсли;
					
					Движение = Движения.Международный.Добавить();
					ЗаполнитьЗначенияСвойств(Движение, СтруктураРеквизитов);
					Движение.СубконтоДт[ВидСубконтоДоговоры] = СтрокаЗадолженности.Договор;
					Движение.СубконтоКт[ВидСубконтоДоговоры] = СтрокаЗадолженности.Договор;
					Движение.СубконтоДт[ВидСубконтоКонтрагенты] = СтрокаЗадолженности.Договор.Владелец;
					Движение.СубконтоКт[ВидСубконтоКонтрагенты] = СтрокаЗадолженности.Договор.Владелец;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Движения.Международный.Записать();
	
КонецПроцедуры


Процедура ОбработкаПроведенияСтарая(Отказ, РежимПроведения)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
	Движения.Международный.Записывать = Истина;
	
	// is ЯннуровВФ нач 20141022	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДС_РеклассификацияЗадолжностиЗадолжности.Договор.Владелец КАК Контрагент,
	|	ДС_РеклассификацияЗадолжностиЗадолжности.Договор КАК Договор,
	|	ДС_РеклассификацияЗадолжностиЗадолжности.ис_СчетКраткосрочнойЗадолженности КАК СчетКЗ,
	|	ДС_РеклассификацияЗадолжностиЗадолжности.ис_СчетДолгосрочнойЗадолженности КАК СчетДЗ
	|ПОМЕСТИТЬ втЗадолженности
	|ИЗ
	|	Документ.ДС_РеклассификацияЗадолжности.Задолжности КАК ДС_РеклассификацияЗадолжностиЗадолжности
	|ГДЕ
	|	ДС_РеклассификацияЗадолжностиЗадолжности.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МеждународныйОстатки.Счет КАК Счет,
	|	МеждународныйОстатки.Субконто1 КАК Контрагент,
	|	МеждународныйОстатки.Субконто2 КАК Договор,
	|	СУММА(МеждународныйОстатки.ВалютнаяСуммаОстатокКт) КАК ВалютнаяСуммаОстатокКт,
	|	СУММА(МеждународныйОстатки.СуммаОстатокКт) КАК СуммаОстатокКт
	|ПОМЕСТИТЬ втОстаткиКЗ
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					втЗадолженности.СчетКЗ
	|				ИЗ
	|					втЗадолженности КАК втЗадолженности),
	|			,
	|			Организация = &Организация
	|				И (Субконто1, Субконто2) В
	|					(ВЫБРАТЬ
	|						втЗадолженности.Контрагент,
	|						втЗадолженности.Договор
	|					ИЗ
	|						втЗадолженности КАК втЗадолженности)) КАК МеждународныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйОстатки.Счет,
	|	МеждународныйОстатки.Субконто1,
	|	МеждународныйОстатки.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МеждународныйОстатки.Счет КАК Счет,
	|	МеждународныйОстатки.Субконто1 КАК Контрагент,
	|	МеждународныйОстатки.Субконто2 КАК Договор,
	|	СУММА(МеждународныйОстатки.ВалютнаяСуммаОстатокДт) КАК ВалютнаяСуммаОстатокДт,
	|	СУММА(МеждународныйОстатки.СуммаОстатокДт) КАК СуммаОстатокДт
	|ПОМЕСТИТЬ втОстаткиДЗ
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					втЗадолженности.СчетДЗ
	|				ИЗ
	|					втЗадолженности КАК втЗадолженности),
	|			,
	|			Организация = &Организация
	|				И (Субконто1, Субконто2) В
	|					(ВЫБРАТЬ
	|						втЗадолженности.Контрагент,
	|						втЗадолженности.Договор
	|					ИЗ
	|						втЗадолженности КАК втЗадолженности)) КАК МеждународныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйОстатки.Счет,
	|	МеждународныйОстатки.Субконто1,
	|	МеждународныйОстатки.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втЗадолженности.Контрагент,
	|	втЗадолженности.Договор КАК Договор,
	|	втЗадолженности.Договор.ВалютаВзаиморасчетов КАК Валюта,
	|	втЗадолженности.СчетКЗ КАК СчетКЗ,
	|	втЗадолженности.СчетДЗ КАК СчетДЗ,
	|	втОстаткиДЗ.ВалютнаяСуммаОстатокДт,
	|	втОстаткиДЗ.СуммаОстатокДт,
	|	ЕСТЬNULL(втОстаткиКЗ.ВалютнаяСуммаОстатокКт, 0) КАК ВалютнаяСуммаОстатокКт,
	|	ЕСТЬNULL(втОстаткиКЗ.СуммаОстатокКт, 0) КАК СуммаОстатокКт
	|ИЗ
	|	втЗадолженности КАК втЗадолженности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиДЗ КАК втОстаткиДЗ
	|		ПО втЗадолженности.Контрагент = втОстаткиДЗ.Контрагент
	|			И втЗадолженности.Договор = втОстаткиДЗ.Договор
	|			И втЗадолженности.СчетДЗ = втОстаткиДЗ.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиКЗ КАК втОстаткиКЗ
	|		ПО втЗадолженности.Контрагент = втОстаткиКЗ.Контрагент
	|			И втЗадолженности.Договор = втОстаткиКЗ.Договор
	|			И втЗадолженности.СчетКЗ = втОстаткиКЗ.Счет
	|ГДЕ
	|	втОстаткиДЗ.СуммаОстатокДт > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Договор
	|АВТОУПОРЯДОЧИВАНИЕ";
	лЗапрос.УстановитьПараметр("Ссылка", Ссылка);
	лЗапрос.УстановитьПараметр("Период", Новый Граница(Дата, ВидГраницы.Включая));
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лВыборка = лЗапрос.Выполнить().Выбрать();
	Пока лВыборка.Следующий() Цикл 
		
		// is ЯннуровВФ нач 20141112
		Если лВыборка.Валюта <> Константы.ВалютаМеждународногоУчета.Получить() Тогда 
			Если лВыборка.ВалютнаяСуммаОстатокКт - лВыборка.ВалютнаяСуммаОстатокДт < 0 Тогда 
				Сообщить("Сумма проведенной оплаты "+лВыборка.ВалютнаяСуммаОстатокДт+" больше, чем имеющаяся краткосрочная задолженность по договору <"+лВыборка.Договор+">: "+лВыборка.ВалютнаяСуммаОстатокКт, СтатусСообщения.Внимание);
				Продолжить;
			КонецЕсли;
		Иначе
		// is ЯннуровВФ кон 20141112
			Если лВыборка.СуммаОстатокКт - лВыборка.СуммаОстатокДт < 0 Тогда 
				Сообщить("Сумма проведенной оплаты "+лВыборка.СуммаОстатокДт+" больше, чем имеющаяся краткосрочная задолженность по договору <"+лВыборка.Договор+">: "+лВыборка.СуммаОстатокКт, СтатусСообщения.Внимание);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		лПроводка = Движения.Международный.Добавить();
		лПроводка.Период = Дата;
		лПроводка.Организация = Организация;
		лПроводка.СчетДт = лВыборка.СчетКЗ;
		БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 1, лВыборка.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 2, лВыборка.Договор);
		лПроводка.СчетКт = лВыборка.СчетДЗ;
		БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, 1, лВыборка.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, 2, лВыборка.Договор);
		лПроводка.Сумма = лВыборка.СуммаОстатокДт;
		Если лПроводка.СчетДт.Валютный Тогда 
			лПроводка.ВалютаДт = лВыборка.Договор.ВалютаВзаиморасчетов;
			лПроводка.ВалютнаяСуммаДт = лВыборка.ВалютнаяСуммаОстатокДт;
		КонецЕсли;
		Если лПроводка.СчетКт.Валютный Тогда 
			лПроводка.ВалютаКт = лВыборка.Договор.ВалютаВзаиморасчетов;
			лПроводка.ВалютнаяСуммаКт = лВыборка.ВалютнаяСуммаОстатокДт;
		КонецЕсли;
		лПроводка.Содержание = "Перенос оплаты на счет ККЗЛ";
		
	КонецЦикла;
	Движения.Международный.Записать();
	Движения.Международный.Очистить();
	// is ЯннуровВФ кон 20141022
	
	// is ЯннуровВФ нач 20140616 
	//Для Каждого Стр Из Задолжности Цикл
	//	Движение = Движения.Международный.Добавить();
	//	Движение.Период			 = Дата;
	//	Движение.Сумма			 = Стр.КраткосрочнаяЗадолжностьРуб;
	//	Движение.Организация	 = Организация;
	//	Движение.СчетДт			 = ?(Стр.Договор.ВидВзаиморасчетов = Справочники.ВидыВзаиморасчетов.ЛизингМашин, ПланыСчетов.Международный._КраткосрочнаяЗадолженностьПоЛизингуМашины, ПланыСчетов.Международный._КраткосрочнаяЗадолженностьПоЛизингуОборудование);
	//	Движение.СчетКт			 = ?(Стр.Договор.ВидВзаиморасчетов = Справочники.ВидыВзаиморасчетов.ЛизингМашин, ПланыСчетов.Международный._ДолгосрочнаяЗадолженностьПоЛизингуМашины, ПланыСчетов.Международный._ДолгосрочнаяЗадолженностьПоЛизингуОборудование);
	//	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 1, Стр.Договор.Владелец); 
	//	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 2, Стр.Договор); 
	//	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 1, Стр.Договор.Владелец); 
	//	БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 2, Стр.Договор);  
	//КонецЦикла;	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДС_РеклассификацияЗадолжностиЗадолжности.Договор.Владелец КАК Контрагент,
	|	ДС_РеклассификацияЗадолжностиЗадолжности.Договор КАК Договор,
	|	ДС_РеклассификацияЗадолжностиЗадолжности.КраткосрочнаяЗадолжность,
	|	ДС_РеклассификацияЗадолжностиЗадолжности.КраткосрочнаяЗадолжностьРуб,
	|	ДС_РеклассификацияЗадолжностиЗадолжности.ис_СчетКраткосрочнойЗадолженности,
	|	ДС_РеклассификацияЗадолжностиЗадолжности.ис_СчетДолгосрочнойЗадолженности
	|ПОМЕСТИТЬ втЗадолженности
	|ИЗ
	|	Документ.ДС_РеклассификацияЗадолжности.Задолжности КАК ДС_РеклассификацияЗадолжностиЗадолжности
	|ГДЕ
	|	ДС_РеклассификацияЗадолжностиЗадолжности.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МеждународныйОстатки.Субконто1 КАК Контрагент,
	|	МеждународныйОстатки.Субконто2 КАК Договор,
	|	МеждународныйОстатки.СуммаОстатокКт,
	|	МеждународныйОстатки.ВалютнаяСуммаОстатокКт
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&Дата,
	|			Счет В
	|				(ВЫБРАТЬ
	|					втЗадолженности.ис_СчетКраткосрочнойЗадолженности
	|				ИЗ
	|					втЗадолженности КАК втЗадолженности),
	|			,
	|			Организация = &Организация
	|				И (Субконто1, Субконто2) В
	|					(ВЫБРАТЬ
	|						втЗадолженности.Контрагент,
	|						втЗадолженности.Договор
	|					ИЗ
	|						втЗадолженности КАК втЗадолженности)) КАК МеждународныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втЗадолженности.Контрагент КАК Контрагент,
	|	втЗадолженности.Договор КАК Договор,
	|	втЗадолженности.Договор.ВалютаВзаиморасчетов КАК Валюта,
	|	втЗадолженности.КраткосрочнаяЗадолжность - ЕСТЬNULL(втОстатки.ВалютнаяСуммаОстатокКт, 0) КАК КраткосрочнаяЗадолжность,
	|	втЗадолженности.КраткосрочнаяЗадолжностьРуб - ЕСТЬNULL(втОстатки.СуммаОстатокКт, 0) КАК КраткосрочнаяЗадолжностьРуб,
	|	втЗадолженности.ис_СчетКраткосрочнойЗадолженности,
	|	втЗадолженности.ис_СчетДолгосрочнойЗадолженности
	|ИЗ
	|	втЗадолженности КАК втЗадолженности
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	|		ПО втЗадолженности.Контрагент = втОстатки.Контрагент
	|			И втЗадолженности.Договор = втОстатки.Договор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Договор
	|АВТОУПОРЯДОЧИВАНИЕ";
	лЗапрос.УстановитьПараметр("Ссылка", Ссылка);
	лЗапрос.УстановитьПараметр("Дата", Новый Граница(Дата, ВидГраницы.Включая));
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лВыборка = лЗапрос.Выполнить().Выбрать();
	Пока лВыборка.Следующий() Цикл 
		
		лКурс = МодульВалютногоУчета.ПолучитьКурсВалюты(лВыборка.Валюта, Дата);
		
		лПроводка = Движения.Международный.Добавить();
		лПроводка.Период = Дата;
		лПроводка.Организация = Организация;
		лПроводка.СчетДт = лВыборка.ис_СчетДолгосрочнойЗадолженности;
		БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 1, лВыборка.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 2, лВыборка.Договор);
		лПроводка.СчетКт = лВыборка.ис_СчетКраткосрочнойЗадолженности;
		БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, 1, лВыборка.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, 2, лВыборка.Договор);
		Если лВыборка.Валюта = Константы.ВалютаМеждународногоУчета.Получить() Тогда 
			лПроводка.Сумма = лВыборка.КраткосрочнаяЗадолжностьРуб;
			Если лПроводка.СчетДт.Валютный Тогда 
				лПроводка.ВалютаДт = лВыборка.Договор.ВалютаВзаиморасчетов;
				лПроводка.ВалютнаяСуммаДт = лВыборка.КраткосрочнаяЗадолжностьРуб;
			КонецЕсли;
			Если лПроводка.СчетКт.Валютный Тогда 
				лПроводка.ВалютаКт = лВыборка.Договор.ВалютаВзаиморасчетов;
				лПроводка.ВалютнаяСуммаКт = лВыборка.КраткосрочнаяЗадолжностьРуб;
			КонецЕсли;
		Иначе
			лПроводка.Сумма = лВыборка.КраткосрочнаяЗадолжность * лКурс.Курс*лКурс.Кратность;
			Если лПроводка.СчетДт.Валютный Тогда 
				лПроводка.ВалютаДт = лВыборка.Договор.ВалютаВзаиморасчетов;
				лПроводка.ВалютнаяСуммаДт = лВыборка.КраткосрочнаяЗадолжность;
			КонецЕсли;
			Если лПроводка.СчетКт.Валютный Тогда 
				лПроводка.ВалютаКт = лВыборка.Договор.ВалютаВзаиморасчетов;
				лПроводка.ВалютнаяСуммаКт = лВыборка.КраткосрочнаяЗадолжность;
			КонецЕсли;
		КонецЕсли;
		лПроводка.Содержание = "Реклассификация задолженности";
		
		// is ЯннуровВФ нач 20140818
		Если Не ЗначениеЗаполнено(лПроводка.Сумма) Тогда 
			Движения.Международный.Удалить(лПроводка);
		КонецЕсли;
		// is ЯннуровВФ кон 20140818
		
	КонецЦикла;
	// is ЯннуровВФ кон 20140616
	
КонецПроцедуры
