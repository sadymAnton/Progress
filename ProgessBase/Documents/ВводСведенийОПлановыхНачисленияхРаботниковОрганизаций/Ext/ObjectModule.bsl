////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем СоответствиеВалютныеСпособыРасчета;
Перем мДлинаСуток;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ДобавитьСтрокиНачисленийПоРаботнику(Сотрудник, ДатаАктуальности = Неопределено) Экспорт
	
	ДействияСНачислениями = ЗаполнениеДокументовЗК.ПолучитьТаблицуДействийСНачислениями(Сотрудник, Ссылка, ?(ДатаАктуальности = Неопределено, Дата, ДатаАктуальности), Организация, "ДатаДействия");

	СтруктураПоиска = Новый Структура("Сотрудник, ВидРасчета");
	
	Для Каждого СтрокаТаблицы Из ДействияСНачислениями Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТаблицы);
		МассивНачислений = ОсновныеНачисления.НайтиСтроки(СтруктураПоиска);
		
		Если МассивНачислений.Количество() <> 0 Тогда
			Продолжить;
		КонецЕсли;

		ЗаполнитьЗначенияСвойств(ОсновныеНачисления.Добавить(), СтрокаТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры // ДобавитьСтрокиНачисленийПоРаботнику()

// Удаляет строки начислений по РаботникиОрганизации
//
Процедура УдалитьСтрокиНачисленийПоРаботнику(Сотрудник) Экспорт
	
	СтруктураПоиска = Новый Структура("Сотрудник", Сотрудник);
	
	МассивСтрок = ОсновныеНачисления.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаТабличнойЧасти Из МассивСтрок Цикл
		ОсновныеНачисления.Удалить(СтрокаТабличнойЧасти);
	КонецЦикла;
	
КонецПроцедуры // УдалитьСтрокиНачисленийПоРаботнику()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",		Ссылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация",	Справочники.Организации.ПустаяСсылка());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Дата,
	|	ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Организация,
	|	ВЫБОР
	|		КОГДА ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Организация.ГоловнаяОрганизация = &ПустаяОрганизация
	|			ТОГДА ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Организация
	|		ИНАЧЕ ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Ссылка
	|ИЗ
	|	Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций КАК ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций
	|ГДЕ
	|	ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "РаботникиОрганизации" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса. В запросе данные документа дополняются значениями
//  проверяемых параметров из связанного с
//
Функция СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента, КонтрольКоличестваСтавокШтатногоРасписания, КонтрольРазмераСтавокШтатногоРасписания)

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧНачислений.Ссылка,
	|	ТЧНачислений.НомерСтроки КАК НомерСтроки,
	|	ТЧНачислений.Сотрудник,
	|	ТЧНачислений.ФизЛицо,
	|	ТЧНачислений.ВидРасчета,
	|	ТЧНачислений.Действие,
	|	ТЧНачислений.ДатаДействия,
	|	ТЧНачислений.ДатаДействияКонец,
	|	ТЧНачислений.Показатель1,
	|	ТЧНачислений.Показатель2,
	|	ТЧНачислений.Показатель3,
	|	ТЧНачислений.Показатель4,
	|	ТЧНачислений.Показатель5,
	|	ТЧНачислений.Показатель6,
	|	ТЧНачислений.Валюта1,
	|	ТЧНачислений.Валюта2,
	|	ТЧНачислений.Валюта3,
	|	ТЧНачислений.Валюта4,
	|	ТЧНачислений.Валюта5,
	|	ТЧНачислений.Валюта6,
	|	ТЧНачислений.ТарифныйРазряд1,
	|	ТЧНачислений.ТарифныйРазряд2,
	|	ТЧНачислений.ТарифныйРазряд3,
	|	ТЧНачислений.ТарифныйРазряд4,
	|	ТЧНачислений.ТарифныйРазряд5,
	|	ТЧНачислений.ТарифныйРазряд6
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.ОсновныеНачисления КАК ТЧНачислений
	|ГДЕ
	|	ТЧНачислений.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";
	Запрос.Выполнить();	
	
	Если КонтрольКоличестваСтавокШтатногоРасписания Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДатыРаботников.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА ДатыРаботников.ДатаДействия >= РаботникиОрганизации.ПериодЗавершения
		|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизации.ПодразделениеОрганизацииЗавершения
		|		ИНАЧЕ РаботникиОрганизации.ПодразделениеОрганизации
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА ДатыРаботников.ДатаДействия >= РаботникиОрганизации.ПериодЗавершения
		|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизации.ДолжностьЗавершения
		|		ИНАЧЕ РаботникиОрганизации.Должность
		|	КОНЕЦ КАК Должность,
		|	ВЫБОР
		|		КОГДА ДатыРаботников.ДатаДействия >= РаботникиОрганизации.ПериодЗавершения
		|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизации.ГрафикРаботыЗавершения
		|		ИНАЧЕ РаботникиОрганизации.ГрафикРаботы
		|	КОНЕЦ КАК ГрафикРаботы,
				///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 27.10.2011 14:41 
		|	ВЫБОР
		|		КОГДА ДатыРаботников.ДатаДействия >= РаботникиОрганизации.ПериодЗавершения
		|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизации.AVTШтатноеРасписаниеЗавершения
		|		ИНАЧЕ РаботникиОрганизации.AVTШтатноеРасписание
		|	КОНЕЦ КАК AVTШтатноеРасписание,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
		|	ВЫБОР
		|		КОГДА ДатыРаботников.ДатаДействия >= РаботникиОрганизации.ПериодЗавершения
		|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизации.ЗанимаемыхСтавокЗавершения
		|		ИНАЧЕ РаботникиОрганизации.ЗанимаемыхСтавок
		|	КОНЕЦ КАК ЗанимаемыхСтавок
		|ПОМЕСТИТЬ ВТДанныеОРаботниках
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|		ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.Сотрудник КАК Сотрудник,
		|		ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.ДатаДействия КАК ДатаДействия,
		|		МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
		|	ИЗ
		|		ВТДанныеДокумента КАК ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|			ПО ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.ДатаДействия >= РаботникиОрганизации.Период
		|				И ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.Сотрудник = РаботникиОрганизации.Сотрудник
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.НомерСтроки,
		|		ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.ДатаДействия,
		|		ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.Сотрудник) КАК ДатыРаботников
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО ДатыРаботников.Период = РаботникиОрганизации.Период
		|			И ДатыРаботников.Сотрудник = РаботникиОрганизации.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДатыРаботников.НомерСтроки КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации,
		|	ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка) КАК Должность,
		|	ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка) КАК ГрафикРаботы,
			///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 27.10.2011 14:41 
		|	ЗНАЧЕНИЕ(Справочник.AVT_ШтатноеРасписание.ПустаяСсылка) КАК AVTШтатноеРасписание,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}  
		|	0 КАК ЗанимаемыхСтавок
		|ПОМЕСТИТЬ ВТДанныеОРаботниках
		|ИЗ
		|	ВТДанныеДокумента КАК ДатыРаботников"
		
	КонецЕсли;
	Запрос.Выполнить();	

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧНачисления.Ссылка КАК Ссылка,
	|	ТЧНачисления.НомерСтроки КАК НомерСтроки,
	|	ТЧНачисления.Сотрудник КАК Сотрудник,
	|	ТЧРаботникиОрганизации.ПодразделениеОрганизации,
	|	ТЧРаботникиОрганизации.Должность,
	|	ТЧРаботникиОрганизации.ЗанимаемыхСтавок,
	|	ТЧРаботникиОрганизации.ГрафикРаботы,
	|	ТЧНачисления.ДатаДействия КАК Период,
	|	ВЫБОР
	|		КОГДА ТЧНачисления.ДатаДействияКонец <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ТЧНачисления.ДатаДействияКонец, ДЕНЬ, 1)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ПериодЗавершения,
	|	ТЧНачисления.Действие КАК Действие,
	|	ВЫБОР
	|		КОГДА ТЧНачисления.ДатаДействияКонец <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА ТЧНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
	|					КОГДА ТЧНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|					ИНАЧЕ ТЧНачисления.Действие
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.ПустаяСсылка)
	|	КОНЕЦ КАК ДействиеЗавершения,
	|	ТЧНачисления.ВидРасчета КАК ВидРасчета,
	|	ВЫБОР
	|		КОГДА ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|			ТОГДА """"
	|		ИНАЧЕ ТЧНачисления.ВидРасчета
	|	КОНЕЦ КАК ВидРасчетаИзмерение,
	|	ТЧНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,
	|	ТЧНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
	|	ТЧНачисления.ВидРасчета.ПроизвольнаяФормулаРасчета КАК ПроизвольнаяФормулаРасчета,
			///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
	// Измайлова Полина 27.10.2011 14:42 
	|	ТЧРаботникиОрганизации.AVTШтатноеРасписание,
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
	|	ТЧНачисления.Показатель1 КАК Показатель1,
	|	ТЧНачисления.Валюта1 КАК Валюта1,
	|	ТЧНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
	|	ТЧНачисления.Показатель2 КАК Показатель2,
	|	ТЧНачисления.Валюта2 КАК Валюта2,
	|	ТЧНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
	|	ТЧНачисления.Показатель3 КАК Показатель3,
	|	ТЧНачисления.Валюта3 КАК Валюта3,
	|	ТЧНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
	|	ТЧНачисления.Показатель4 КАК Показатель4,
	|	ТЧНачисления.Валюта4 КАК Валюта4,
	|	ТЧНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
	|	ТЧНачисления.Показатель5 КАК Показатель5,
	|	ТЧНачисления.Валюта5 КАК Валюта5,
	|	ТЧНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
	|	ТЧНачисления.Показатель6 КАК Показатель6,
	|	ТЧНачисления.Валюта6 КАК Валюта6,
	|	ТЧНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6
	|ИЗ
	|	ВТДанныеДокумента КАК ТЧНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОРаботниках КАК ТЧРаботникиОрганизации
	|		ПО ТЧНачисления.НомерСтроки = ТЧРаботникиОрганизации.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ПроцедурыУправленияПерсоналом.СформироватьЗапросПоПлановымНачислениям(Запрос.Выполнить().Выгрузить(), КонтрольРазмераСтавокШтатногоРасписания);
	
КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры:
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "РаботникиОрганизации" документа.
// Если какой-то из реквизитов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса
//  Отказ						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, КонтрольРазмераСтавокШтатногоРасписания)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Плановые начисления"": ";
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоШапкеДокумента.ГоловнаяОрганизация <> ВыборкаПоСтрокамДокумента.ОрганизацияСотрудника Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("указанный сотрудник оформлен на другую организацию!"), Отказ, Заголовок);
	КонецЕсли;
	
	// Действие
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не задано действие!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		
		// Вид расчета
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не задан вид расчета!", Отказ, Заголовок);
		ИначеЕсли (ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать ИЛИ ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Изменить) Тогда
			
			// Соответствие размера "основного" начисления штатному расписанию
			Если КонтрольРазмераСтавокШтатногоРасписания И Не ВыборкаПоСтрокамДокумента.РазмерСоответствуетШТР  Тогда
					////Вадим....... это типо заборенко сделал
				///ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "размер основного начисления не соответствует штатному расписанию!", Отказ, Заголовок);
				// Снял запрет на проведение документа, если начисление не соответствует штатному расписанию. Заборенко. 21.03.2012
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "размер основного начисления не соответствует штатному расписанию!", , Заголовок);       

			КонецЕсли;
		КонецЕсли;
		
		// ДатаДействия
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Период) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не задана дата действия!", Отказ, Заголовок);
			
		ИначеЕсли ВыборкаПоСтрокамДокумента.Период = ВыборкаПоСтрокамДокумента.ДатаДвижения Тогда
			// Движения в регистре на дату из документа
			Расшифровки = Новый Массив;
			Расшифровки.Добавить(Новый Структура("Представление, Расшифровка", ВыборкаПоСтрокамДокумента.КонфликтныйДокумент, ВыборкаПоСтрокамДокумента.КонфликтныйДокумент));
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "на дату "+ ВыборкаПоСтрокамДокумента.Период + " начисление уже зарегистрировано документом ", Отказ, Заголовок, , Расшифровки);
			
		КонецЕсли;
		
		// Период действия
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПериодЗавершения) И ВыборкаПоСтрокамДокумента.Период >= ВыборкаПоСтрокамДокумента.ПериодЗавершения Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата окончания действия не должна быть меньше даты начала!", Отказ, Заголовок);
		КонецЕсли; 
		
		// Одинаковые строки
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДвойнаяСтрока) Тогда
			Если ВыборкаПоСтрокамДокумента.ОсновноеНачисление Тогда
				СтрокаСообщениеОбОшибке = "основное начисление сотрудника следует редактировать в одной строке (см. строку " + ВыборкаПоСтрокамДокумента.ДвойнаяСтрока + ")!"; 
			Иначе
				СтрокаСообщениеОбОшибке = "сотруднику не может быть назначено одно и тоже начисление дважды (см. строку " + ВыборкаПоСтрокамДокумента.ДвойнаяСтрока + ")!"; 
			КонецЕсли;
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке  + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
		КонецЕсли;
		
		Если ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать или ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Изменить Тогда
			ИспользуютсяНачисленияВВалюте			= ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ИспользуютсяНачисленияВВалюте");
			ПроведениеРасчетовПереопределяемый.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Истина, Отказ, Заголовок, ИспользуютсяНачисленияВВалюте, СоответствиеВалютныеСпособыРасчета);
		КонецЕсли;

				
	КонецЕсли;
		
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента					- выборка из результата запроса по шапке документа,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации)

	Если ВыборкаПоРаботникиОрганизации.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		Возврат;
	КонецЕсли;
	
	// Движения по регистру "ПлановыеНачисленияРаботниковОрганизаций"
	ПроцедурыУправленияПерсоналом.СформироватьДвижениеПоПлановымНачислениям(Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить(), ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		КонтрольКоличестваСтавокШтатногоРасписания = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "КонтрольКоличестваСтавокШтатногоРасписания");
		КонтрольРазмераСтавокШтатногоРасписания = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "КонтрольРазмераСтавокШтатногоРасписания");
		
		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда

			// получим реквизиты табличной части
			РезультатЗапросаПоРаботники = СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента, КонтрольКоличестваСтавокШтатногоРасписания, КонтрольРазмераСтавокШтатногоРасписания);
			ВыборкаПоРаботникиОрганизации = РезультатЗапросаПоРаботники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл
				
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, Отказ, Заголовок, КонтрольРазмераСтавокШтатногоРасписания);

				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);
					
				КонецЕсли;

			КонецЦикла;
			
		КонецЕсли;

	КонецЕсли;

	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаЗаполнения(Основание)

	ТипОснования = ТипЗнч(Основание);
	
	Если ТипОснования = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		
		// Заполним реквизиты из стандартного набора.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
		
		ДобавитьСтрокиНачисленийПоРаботнику(Основание, ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Сотрудник", Основание);
		Запрос.УстановитьПараметр("ДатаАктуальности", ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА РаботникиОрганизации.ПериодЗавершения <= &ДатаАктуальности
		|				И РаботникиОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизации.ОбособленноеПодразделениеЗавершения
		|		ИНАЧЕ РаботникиОрганизации.ОбособленноеПодразделение
		|	КОНЕЦ КАК Организация
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Сотрудник = &Сотрудник) КАК РаботникиОрганизации";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Организация = Выборка.Организация
		Иначе 
			Организация = Основание.ОбособленноеПодразделение
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(ОсновныеНачисления);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
КонецПроцедуры // ПередЗаписью()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток = 86400;
