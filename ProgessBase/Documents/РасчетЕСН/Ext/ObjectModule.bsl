////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мГоловнаяОрганизация;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАСЧЕТА ЕСН

// Получаем таблицу сотрудников для сбора данных и расчета ЕСН
//
// Возвращаемое значение:
//   ТаблицаЗначений - перечень сотрудников, или Неопределено, если по всем
//						поля таблицы: Сотрудник и Физлицо
//
Функция ПолучитьОграничениеНаСотрудников(Отказ)

	МассивПодразделений = Новый Массив;
	
	ТекстЗапроса = "";
	
	Если Не ЗначениеЗаполнено(Ответственный) и Не ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		// нет условий по подразделению	
	ИначеЕсли Не ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		//применяем условие на подразделение по ответственному
		Если ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "РасчетЗарплатыОрганизацииПоОтветственным") Тогда
			//расчет зарплаты по ответственным включен, получим список подразделений
			ТекстЗапроса = 
			"ВЫБРАТЬ 
			|	ПодразделенияОрганизаций.Ссылка
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			|ГДЕ
			|	ПодразделенияОрганизаций.Ссылка В ИЕРАРХИИ
			|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|				Расчетчики.ПодразделениеОрганизации
			|			ИЗ
			|				РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&парамПериодРегистрации, ) КАК Расчетчики
			|			ГДЕ
			|				Расчетчики.Пользователь = &парамОтветственный)
			|	И ПодразделенияОрганизаций.Владелец = &парамОрганизация";
	
		КонецЕсли;
		
	Иначе // отбор по подразделению заданному в форме документа	
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПодразделенияОрганизаций.Ссылка
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПодразделенияОрганизаций.Ссылка В ИЕРАРХИИ(&парамПодразделениеОрганизации)
		|	И ПодразделенияОрганизаций.Владелец = &парамОрганизация";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("парамОрганизация",				Организация);
		Запрос.УстановитьПараметр("парамПодразделениеОрганизации",	ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("парамПериодРегистрации",			ПериодРегистрации);
		Запрос.УстановитьПараметр("парамОтветственный",				Ответственный);
		
		Запрос.Текст = ТекстЗапроса;
		МассивПодразделений = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		Если МассивПодразделений.Количество() = 0 Тогда
			//список может быть пустым когда ответственному не назначены подразделения для расчета
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Для ответственного не задан список подразделений для расчета!", Отказ, "Расчет ЕСН");
		КонецЕсли;
	
	КонецЕсли;
	
	Если Отказ Или МассивПодразделений.Количество() = 0 Тогда
		//ошибка или нет отбора по подразделениям, возвращаем пустой список
		Возврат Неопределено; 	
	КонецЕсли;	
	
	//необходимо собрать список сотрудников, которые работали по состоянию на конец месяца
	//в подразделении из списка МассивПодразделений
	
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("парамМассивПодразделений",	МассивПодразделений);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",	мГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОрганизация",			Организация);
	Запрос.УстановитьПараметр("НачалоПериода",				ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериода",				КонецМесяца(ПериодРегистрации));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// список физлиц, которые когда-либо работали в выбранном
	// обособленном подразделении и подразделении организации
	ФизлицаРаботникиТекст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_Физлица
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|	И РаботникиОрганизаций.Период <= &КонецПериода
	|	И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И ВЫБОР
	|			КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|					И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|		КОНЕЦ = &парамОрганизация
	|	И ВЫБОР
	|			КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|					И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения
	|			ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации
	|		КОНЕЦ В (&парамМассивПодразделений)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	
	Запрос.Текст = ФизлицаРаботникиТекст;
	Запрос.Выполнить();
	
	// список физлиц, которые когда-либо работали в выбранном
	// обособленном подразделении и подразделении организации
	// и чистых договорников
	ФизлицаДоговорникиТекст =
	"ВЫБРАТЬ
	|	Договорники.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ФизлицаДоговорники
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК Договорники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ПО Договорники.Физлицо = СотрудникиОрганизаций.Физлицо
	|			И (СотрудникиОрганизаций.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизлицами.ТрудовойДоговор))
	|			И (СотрудникиОрганизаций.Организация = &парамГоловнаяОрганизация)
	|ГДЕ
	|	Договорники.Организация = &парамГоловнаяОрганизация
	|	И Договорники.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизлицами.ТрудовойДоговор)
	|	И СотрудникиОрганизаций.Ссылка ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Физлица.Физлицо
	|ИЗ
	|	ВТ_Физлица КАК ВТ_Физлица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Текст = ФизлицаДоговорникиТекст;
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СотрудникиОрганизаций.Ссылка КАК Сотрудник,
	|	СотрудникиОрганизаций.Физлицо КАК Физлицо
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ДатыПоследнихДвижений.Период КАК Период,
	|				ДатыПоследнихДвижений.Физлицо КАК Физлицо,
	|				КОЛИЧЕСТВО(РаботникиОрганизаций.Период) КАК КолВоДвижений,
	|				ДатыПоследнихДвижений.ДатаНачала КАК ДатаНачала
	|			ИЗ
	|				(ВЫБРАТЬ
	|					РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|					МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|					МАКСИМУМ(Договора.ДатаНачала) КАК ДатаНачала
	|				ИЗ
	|					РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|						ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК Договора
	|						ПО (Договора.ДатаНачала <= &КонецПериода)
	|							И (Договора.ДатаОкончания >= &НачалоПериода)
	|							И (Договора.Проведен)
	|							И (Договора.Организация = &парамОрганизация)
	|							И (Договора.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо)
	|				ГДЕ
	|					РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|					И РаботникиОрганизаций.Период <= &КонецПериода
	|					И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|					И ВЫБОР
	|							КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|									И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|								ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|							ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|						КОНЕЦ = &парамОрганизация
	|					И РаботникиОрганизаций.Сотрудник.Физлицо В
	|							(ВЫБРАТЬ
	|								ВТ_Физлица.Физлицо
	|							ИЗ
	|								ВТ_Физлица)
	|				
	|				СГРУППИРОВАТЬ ПО
	|					РаботникиОрганизаций.Сотрудник.Физлицо) КАК ДатыПоследнихДвижений
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО ДатыПоследнихДвижений.Период = РаботникиОрганизаций.Период
	|						И ДатыПоследнихДвижений.Физлицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|			ГДЕ
	|				РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|				И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|				И ВЫБОР
	|						КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|								И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|						ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|					КОНЕЦ = &парамОрганизация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ДатыПоследнихДвижений.Физлицо,
	|				ДатыПоследнихДвижений.Период,
	|				ДатыПоследнихДвижений.ДатаНачала) КАК ПоследниеДаты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|				ПО ПоследниеДаты.Физлицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|					И ПоследниеДаты.Период = РаботникиОрганизаций.Период
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|				ПО (ДоговорНаВыполнениеРаботСФизЛицом.Организация = &парамОрганизация)
	|					И (ДоговорНаВыполнениеРаботСФизЛицом.Проведен)
	|					И ПоследниеДаты.Физлицо = ДоговорНаВыполнениеРаботСФизЛицом.ФизЛицо
	|					И ПоследниеДаты.ДатаНачала = ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала
	|		ГДЕ
	|			РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|			И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			И ВЫБОР
	|					КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|							И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|					ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|				КОНЕЦ = &парамОрганизация
	|			И (ПоследниеДаты.КолВоДвижений = 2
	|						И РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					ИЛИ ПоследниеДаты.КолВоДвижений = 1)
	|			И ВЫБОР
	|					КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|							И РаботникиОрганизаций.Период <= &НачалоПериода
	|							И (НЕ ДоговорНаВыполнениеРаботСФизЛицом.ФизЛицо ЕСТЬ NULL )
	|						ТОГДА ЛОЖЬ
	|					КОГДА РаботникиОрганизаций.ПричинаИзмененияСостоянияЗавершения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|							И РаботникиОрганизаций.ПериодЗавершения <= &НачалоПериода
	|							И (НЕ ДоговорНаВыполнениеРаботСФизЛицом.ФизЛицо ЕСТЬ NULL )
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|			И ВЫБОР
	|					КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|							И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения
	|					ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации
	|				КОНЕЦ В (&парамМассивПодразделений)
	|		
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ
	|			ДатыПоследнихДоговоров.Физлицо
	|		ИЗ
	|			(ВЫБРАТЬ
	|				Договора.ФизЛицо КАК Физлицо,
	|				Договора.Организация КАК Организация,
	|				МАКСИМУМ(Договора.ДатаНачала) КАК ДатаНачала,
	|				МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период
	|			ИЗ
	|				Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК Договора
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО Договора.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|						И (РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация)
	|						И (ВЫБОР
	|							КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|									И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|								ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|							ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|						КОНЕЦ = &парамОрганизация)
	|						И (РаботникиОрганизаций.Период <= &КонецПериода)
	|						И (РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			ГДЕ
	|				Договора.ДатаНачала <= &КонецПериода
	|				И Договора.ДатаОкончания >= &НачалоПериода
	|				И Договора.Проведен
	|				И Договора.Организация = &парамОрганизация
	|				И Договора.ФизЛицо В
	|						(ВЫБРАТЬ
	|							ВТ_ФизлицаДоговорники.Физлицо
	|						ИЗ
	|							ВТ_ФизлицаДоговорники)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Договора.ФизЛицо,
	|				Договора.Организация) КАК ДатыПоследнихДоговоров
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|				ПО ДатыПоследнихДоговоров.Физлицо = ДоговорНаВыполнениеРаботСФизЛицом.ФизЛицо
	|					И ДатыПоследнихДоговоров.Организация = ДоговорНаВыполнениеРаботСФизЛицом.Организация
	|					И ДатыПоследнихДоговоров.ДатаНачала = ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|				ПО ДатыПоследнихДоговоров.Физлицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|					И ДатыПоследнихДоговоров.Период = РаботникиОрганизаций.Период
	|					И (РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация)
	|					И (ВЫБОР
	|						КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|								И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|						ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|					КОНЕЦ = &парамОрганизация)
	|					И (РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|		ГДЕ
	|			ВЫБОР
	|					КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|							И РаботникиОрганизаций.Период <= &НачалоПериода
	|						ТОГДА ИСТИНА
	|					КОГДА РаботникиОрганизаций.ПричинаИзмененияСостоянияЗавершения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|							И РаботникиОрганизаций.ПериодЗавершения <= &НачалоПериода
	|						ТОГДА ИСТИНА
	|					КОГДА РаботникиОрганизаций.ПричинаИзмененияСостоянияЗавершения ЕСТЬ NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДатыПоследнихДоговоров.Физлицо
	|		
	|		ИМЕЮЩИЕ
	|			МАКСИМУМ(ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации) В (&парамМассивПодразделений)) КАК СписокФизлиц
	|		ПО СотрудникиОрганизаций.Физлицо = СписокФизлиц.Физлицо
	|ГДЕ
	|	СотрудникиОрганизаций.Организация = &парамГоловнаяОрганизация";
	
	Запрос.Текст = ТекстЗапроса;
	
    Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьОграничениеНаСотрудников()

// Предназначена для получения выборки из запроса с данными расчета ЕСН
// По текущему регистратору получает 
//    	данные о начисленной зарплате в разрезе кодов дохода ЕСН
// 		данные об инвалидности физлиц помесячно
//		присоединяет данные о скидках к доходам
//
// Параметры:
//  нет
// Возвращаемое значение:
//  Выборка результата запроса
//
Функция ПолучитьДанныеРасчетаЕСН(ГоловнаяОрганизация, ОрганичениеНаСотрудников, Отказ)
	
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// расчет ЕСН вызван независимо от получения данных о доходах,
	// получим список сотрудников для расчета ЕСН
	Если ОрганичениеНаСотрудников = Неопределено Тогда
		ОрганичениеНаСотрудников = ПолучитьОграничениеНаСотрудников(Отказ);	
		Если Отказ Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамКонецМесяцаПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
    Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(ПериодРегистрации));
    Запрос.УстановитьПараметр("парамГодРасчета", Год(ПериодРегистрации));
    Запрос.УстановитьПараметр("парамМесяцРасчета", Месяц(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	// ---------------------------------------------------------------------------
	// тексты запросов
	//

	// ФизлицаДляРасчета
	//
	Если ОрганичениеНаСотрудников = Неопределено Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТСписокСотрудников
		|ИЗ
		|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
		|ГДЕ
		|	ЕСНСведенияОДоходах.Период = &парамПериодРегистрации
		|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
		Запрос.Выполнить();
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
        |   ТаблицаСотрудников.ФизЛицо КАК ФизЛицо
        |ПОМЕСТИТЬ ВТСписокСотрудников
        |ИЗ
        |   &парамТаблицаСотрудников КАК ТаблицаСотрудников
        |
        |ИНДЕКСИРОВАТЬ ПО
        |   ФизЛицо";
		Запрос.УстановитьПараметр("парамТаблицаСотрудников", ОрганичениеНаСотрудников);
		Запрос.Выполнить();
	КонецЕсли;
	
	// Периоды
	// Таблица список периодов
	// Поля:
	//		Период
	// Описание:
	//  список периодов - первые даты месяцев с начала года по "текущий" для запроса период
	//
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоГода(ПериодРегистрации));
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТПериоды";
	// прибавим остальные месяцы
	Для Сч = 2 По Месяц(ПериодРегистрации) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
    	ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.Текст = РасчетЕСНПереопределяемый.ПолучитьТекстЗапросаУчетнаяПолитика();
	Запрос.Выполнить();
		
	// ДанныеОПравеНаПенсию
	// Таблица Данные о праве на пенсию - это список иностранцев и периодов
	// Поля:
	//		Физлицо, 
	//		Месяц - месяц налогового периода
	// 
	// Описание:
	//	Выбираем Из Списка периодов
	//	Внутреннее соединение с ГражданствоФизЛиц.СрезПоследних
	//  по равенству периодов
	//  условие: что физлицо - не имеет права на пенсию
	//
    // ДанныеОбИнвалидности
	// Таблица Данных об Инвалидности - это список инвалидов и периодов инвалидности
	// поля:
	//		Физлицо, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//	Выбираем Из Список периодов (таблица - список периодов с начала года по текущий период
	//	Внутреннее соединение с СведенияОбИнвалидностиФизлиц.СрезПоследних
	//	по равенству периодов
	//  условие: что физлицо - Инвалид
	// 
    // ПравоПримененияИнвалидныхЛьготПоЕСН
	// Таблица ПравоПримененияИнвалидныхЛьготПоЕСН - это список периодов, когда организация имеет право на льготу
	// поля:
	//		ПравоНаЛьготы, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//	Выбираем Из Периоды (таблица - список периодов с начала года по текущий период)
	//	Внутреннее соединение с "псевдосрезом" последних регистра ПравоПримененияЛьготПоЕСН
	//	по равенству периодов
	//  условие: что организация имеет право на льготу
	// 
    // ДоходыПоФизлицамМесяцам
	// Таблица ЕСН-доходы по ФЛ и Периодам:
    // Поля:
	//		ФизЛицо
	//		Месяц
	//		ВходитВБазуФедеральныйБюджет
	//		ВходитВБазуФСС
	//		ВходитВБазуФОМС
	//		ОблагаетсяЕНВД
	//		Результат
	// Описание:
	// Выбираем из ЕСНСведенияОДоходах и суммируем результат помесячно
	// с начала года по текущий период
	// 
	// ОблагаемаяБазаПФРЗаМесяцРасчета
	// Таблица баз ПФР за месяц расчета - для выделения из взносов ЕНВД-ой доли
	// Поля:
	//		ФизЛицо
	//		БазаПФР		 - база для взносов в ПФР (включая доходы, облагаемые ЕНВД)
	//		БазаПФР_ЕНВД - сумма облагаемых ПФР доходов, подпадающих под ЕНВД
	//
	// Описание:
	//	
	// 	Выбираем из таблицы ВТДоходыПоФизлицамМесяцам подходящий месяц, при этом учитывается входимость в базу
	//	    и раскладываем по двум "кучкам"
	//		Доход иностранца не включаем в базу ПФР.
	//	
	// 
	// ОблагаемаяБазаПоФизлицам
	// Таблица Баз для исчисления ЕСН по месяцам налогового периода:
	// Поля:
	//		ФизЛицо
	//		Месяц - месяц налогового периода
	//		БазаФедеральныйБюджет         - база для налогообложения ЕСН в части налога в федеральный бюджет
	//		ЛьготаИнвалидуФБ   			  - сумма льготы инвалиду по ЕСН в части налога в федеральный бюджет
	//		БазаФСС                       - база для налогообложения ЕСН в части налога в ФСС
	//		ЛьготаИнвалидуФСС  			  - сумма льготы инвалиду по ЕСН в части налога в ФСС
	//		БазаФОМС					  - база для налогообложения ЕСН в части налогов в ФОМС
	//		ЛьготаИнвалидуФОМС 			  - сумма льготы инвалиду по ЕСН в части налога в ФОМС
	//		БазаПФР			   			  - база для взносов в ПФР (включая доходы, облагаемые ЕНВД)
	//
	// Описание:
	//	
	// 	1) выбираем из ВТДоходыПоФизлицамМесяцам
	// 		и суммируем ОблагаемыйДоход для всех составных частей ЕСН. При этом учитывается входимость в базу
	// 		по флажку в справочнике - это База.
	//		Доход, облагаемый ЕНВД, не включаем в базу ЕСН. 
	//		Доход иностранца не включаем в базу ПФР.
	//		Для инвалидов считается база отдельно, но из неё исключаем договора подряда.
	//  2) суммировать ОблагаемыйДоход для всех составных частей ЕСН при входимости в базу и признака инвалидности - это ЛьготаИнвалиду по всем частям ЕСН
	//	
	// Таблица исчисленного ЕСН:
	// Поля:
	//		ФизЛицо
    //		ФедеральныйБюджет - налог в федеральный бюджет
    //		ФФОМС
    //		ТФОМС
    //		ФСС
	//      ПримененнаяЛьготаФБ - примененная льгота инвалида
	//		ПримененнаяЛьготаФОМС - примененная льгота инвалида
	//		ПримененнаяЛьготаФСС - примененная льгота инвалида
    //		ПФРНакопительная
    //		ПФРСтраховая
    //		ПФРНакопительнаяЕНВД
    //		ПФРСтраховаяЕНВД
	//
	// Описание:
	// 	 1. выбираем данные о доходах из ВТОблагаемаяБазаПоФизлицам, льготы для инвалидов ограничиваем 100000 рублей
	//   1а.соединение со СведенияОСтавкахЕСНиПФР несколько раз - по числу разных баз для налогообложения
	//   по соответствующему полю БазыДляИсчисленияЕСН.База...
	//   1б.соединяем с ИсчисленныйЕСН для вычитания уже исчисленного за год ЕСН
	//   1в.дополнительно к суммам налога и взносов в ПФР рассчитываем сумму возможного вычета из ЕСН в части ФБ
	//   эти суммы будут использоваться, если выбрана соответствующая уч.политика по ЕСН
	//   2. Полученные суммы налогов и взносов округляем в соответствии с учетной политикой (по умолчанию - не округляем)
	//   2а. Рассчитываем сумму взносов в ПФР, относящуюся к ЕНВД, - либо как соответствующую долю, либо как разницу 
	//   между начисленными взносами и суммой вычета, в зависимости от уч.политики по ЕСН
	// 

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	ГражданствоФизЛиц.ФизЛицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОПравеНаПенсию
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.Период >= ГражданствоФизЛиц.Период
	|	ГДЕ
	|		ГражданствоФизЛиц.ФизЛицо В
	|				(ВЫБРАТЬ
	|					СписокСотрудников.ФизЛицо
	|				ИЗ
	|					ВТСписокСотрудников КАК СписокСотрудников)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|			И (ГражданствоФизЛиц.Период = Периоды.ПериодРегистра)
	|			И (ГражданствоФизЛиц.ФизЛицо = Периоды.Физлицо)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|	СведенияОбИнвалидностиФизлиц.Период КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Инвалидность
	|ПОМЕСТИТЬ ВТ_СведенияОбИнвалидности
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо В
	|			(ВЫБРАТЬ
	|				СписокСотрудников.ФизЛицо
	|			ИЗ
	|				ВТСписокСотрудников КАК СписокСотрудников)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОбИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|			И (СведенияОбИнвалидностиФизлиц.Инвалидность)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	ПравоПримененияЛьготПоЕСН.ПравоНаЛьготы КАК ПравоНаЛьготы
	|ПОМЕСТИТЬ ВТПравоПримененияИнвалидныхЛьготПоЕСН
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(ПравоПримененияЛьготПоЕСН.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТПериоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПравоПримененияЛьготПоЕСН КАК ПравоПримененияЛьготПоЕСН
	|			ПО Периоды.Период >= ПравоПримененияЛьготПоЕСН.Период
	|				И (ПравоПримененияЛьготПоЕСН.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПравоПримененияЛьготПоЕСН КАК ПравоПримененияЛьготПоЕСН
	|		ПО Периоды.ПериодРегистра = ПравоПримененияЛьготПоЕСН.Период
	|			И (ПравоПримененияЛьготПоЕСН.Организация = &парамГоловнаяОрганизация)
	|			И (ПравоПримененияЛьготПоЕСН.ПравоНаЛьготы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.Организация,
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	МЕСЯЦ(ЕСНСведенияОДоходах.Период) КАК Месяц,
	|	ЕСНСведенияОДоходах.ОблагаетсяЕНВД,
	|	ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет КАК ВходитВБазуФедеральныйБюджет,
	|	ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФСС КАК ВходитВБазуФСС,
	|	ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
	|	СУММА(ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка) КАК ОблагаемыйДоход
	|ПОМЕСТИТЬ ВТДоходыПоФизлицамМесяцам
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокСотрудников КАК ФизлицаДляРасчета
	|		ПО ЕСНСведенияОДоходах.ФизЛицо = ФизлицаДляРасчета.ФизЛицо
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период >= &парамНачалоГода
	|	И ЕСНСведенияОДоходах.Период <= &парамКонецМесяцаПериодаРегистрации
	|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо,
	|	МЕСЯЦ(ЕСНСведенияОДоходах.Период),
	|	ЕСНСведенияОДоходах.ОблагаетсяЕНВД,
	|	ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет,
	|	ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФСС,
	|	ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФОМС,
	|	ЕСНСведенияОДоходах.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Основная.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА Иностр.Физлицо ЕСТЬ NULL 
	|				ТОГДА Основная.ОблагаемыйДоход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаПФР,
	|	СУММА(ВЫБОР
	|			КОГДА Основная.ОблагаетсяЕНВД
	|					И Иностр.Физлицо ЕСТЬ NULL 
	|				ТОГДА Основная.ОблагаемыйДоход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаПФР_ЕНВД
	|ПОМЕСТИТЬ ВТОблагаемаяБазаПФРЗаМесяцРасчета
	|ИЗ
	|	ВТДоходыПоФизлицамМесяцам КАК Основная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК Иностр
	|		ПО Основная.ФизЛицо = Иностр.Физлицо
	|			И Основная.Месяц = Иностр.Месяц
	|ГДЕ
	|	Основная.Месяц = &парамМесяцРасчета
	|	И Основная.ВходитВБазуФедеральныйБюджет
	|
	|СГРУППИРОВАТЬ ПО
	|	Основная.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Основная.Организация,
	|	Основная.ФизЛицо КАК Физлицо,
	|	СУММА(ВЫБОР
	|			КОГДА Основная.ВходитВБазуФедеральныйБюджет
	|					И (НЕ Основная.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА Основная.ОблагаемыйДоход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФедеральныйБюджет,
	|	СУММА(ВЫБОР
	|			КОГДА Основная.ВходитВБазуФедеральныйБюджет
	|					И (НЕ Основная.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И (Инвалид.Физлицо ЕСТЬ НЕ NULL 
	|						ИЛИ ПравоПримененияИнвалидныхЛьготПоЕСН.ПравоНаЛьготы ЕСТЬ НЕ NULL )
	|				ТОГДА Основная.ОблагаемыйДоход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЛьготаИнвалидуФБ,
	|	СУММА(ВЫБОР
	|			КОГДА Основная.ВходитВБазуФСС
	|					И (НЕ Основная.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА Основная.ОблагаемыйДоход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФСС,
	|	СУММА(ВЫБОР
	|			КОГДА Основная.ВходитВБазуФСС
	|					И (НЕ Основная.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И (Инвалид.Физлицо ЕСТЬ НЕ NULL 
	|						ИЛИ ПравоПримененияИнвалидныхЛьготПоЕСН.ПравоНаЛьготы ЕСТЬ НЕ NULL )
	|				ТОГДА Основная.ОблагаемыйДоход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЛьготаИнвалидуФСС,
	|	СУММА(ВЫБОР
	|			КОГДА Основная.ВходитВБазуФОМС
	|					И (НЕ Основная.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА Основная.ОблагаемыйДоход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА Основная.ВходитВБазуФОМС
	|					И (НЕ Основная.ОблагаетсяЕНВД)
	|					И УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И (Инвалид.Физлицо ЕСТЬ НЕ NULL 
	|						ИЛИ ПравоПримененияИнвалидныхЛьготПоЕСН.ПравоНаЛьготы ЕСТЬ НЕ NULL )
	|				ТОГДА Основная.ОблагаемыйДоход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЛьготаИнвалидуФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА Основная.ВходитВБазуФедеральныйБюджет
	|					И Иностр.Физлицо ЕСТЬ NULL 
	|				ТОГДА Основная.ОблагаемыйДоход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаПФР
	|ПОМЕСТИТЬ ВТОблагаемаяБазаПоФизлицам
	|ИЗ
	|	ВТДоходыПоФизлицамМесяцам КАК Основная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбИнвалидности КАК Инвалид
	|		ПО Основная.ФизЛицо = Инвалид.Физлицо
	|			И Основная.Месяц = Инвалид.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК Иностр
	|		ПО Основная.ФизЛицо = Иностр.Физлицо
	|			И Основная.Месяц = Иностр.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|		ПО Основная.Месяц = УчетнаяПолитикаНалоговыйУчетУСН.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПравоПримененияИнвалидныхЛьготПоЕСН КАК ПравоПримененияИнвалидныхЛьготПоЕСН
	|		ПО Основная.Месяц = ПравоПримененияИнвалидныхЛьготПоЕСН.Месяц
	|
	|СГРУППИРОВАТЬ ПО
	|	Основная.Организация,
	|	Основная.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСНИсчисленныйОбороты.ФизЛицо КАК ФизЛицо,
	|	ЕСНИсчисленныйОбороты.ФедеральныйБюджетОборот,
	|	ЕСНИсчисленныйОбороты.ФССОборот,
	|	ЕСНИсчисленныйОбороты.ФФОМСОборот,
	|	ЕСНИсчисленныйОбороты.ТФОМСОборот,
	|	ЕСНИсчисленныйОбороты.ПФРНакопительнаяОборот,
	|	ЕСНИсчисленныйОбороты.ПФРСтраховаяОборот,
	|	ЕСНИсчисленныйОбороты.ПримененнаяЛьготаФБОборот,
	|	ЕСНИсчисленныйОбороты.ПримененнаяЛьготаФССОборот,
	|	ЕСНИсчисленныйОбороты.ПримененнаяЛьготаФОМСОборот,
	|	ЕСНИсчисленныйОбороты.ПФРНакопительнаяЕНВДОборот,
	|	ЕСНИсчисленныйОбороты.ПФРСтраховаяЕНВДОборот
	|ПОМЕСТИТЬ ВТЕСНИсчисленный
	|ИЗ
	|	РегистрНакопления.ЕСНИсчисленный.Обороты(
	|			&парамНачалоГода,
	|			&парамКонецМесяцаПериодаРегистрации,
	|			,
	|			Организация = &парамГоловнаяОрганизация
	|				И ФизЛицо В
	|					(ВЫБРАТЬ
	|						СписокСотрудников.ФизЛицо
	|					ИЗ
	|						ВТСписокСотрудников КАК СписокСотрудников)) КАК ЕСНИсчисленныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БазыДляИсчисленияЕСН.ФизЛицо КАК ФизЛицо,
	|	БазыДляИсчисленияЕСН.Порядок КАК Порядок,
	|	БазыДляИсчисленияЕСН.ЛьготаИнвалидуФБ,
	|	БазыДляИсчисленияЕСН.ЛьготаИнвалидуФСС,
	|	БазыДляИсчисленияЕСН.ЛьготаИнвалидуФОМС,
	|	ВЫБОР
	|		КОГДА БазыДляИсчисленияЕСН.БазаФедеральныйБюджет = 0
	|			ТОГДА 0
	|		ИНАЧЕ СтавкиФедеральныйБюджет.ФедеральныйБюджетВРублях + (БазыДляИсчисленияЕСН.БазаФедеральныйБюджет - СтавкиФедеральныйБюджет.СуммаДоходаС) * СтавкиФедеральныйБюджет.ФедеральныйБюджетВПроцентах / 100
	|	КОНЕЦ КАК РезультатФедеральныйБюджет,
	|	ВЫБОР
	|		КОГДА БазыДляИсчисленияЕСН.БазаФСС = 0
	|			ТОГДА 0
	|		ИНАЧЕ СтавкиФСС.ФССвРублях + (БазыДляИсчисленияЕСН.БазаФСС - СтавкиФСС.СуммаДоходаС) * СтавкиФСС.ФССвПроцентах / 100
	|	КОНЕЦ КАК РезультатФСС,
	|	ВЫБОР
	|		КОГДА БазыДляИсчисленияЕСН.БазаФОМС = 0
	|			ТОГДА 0
	|		ИНАЧЕ СтавкиФОМС.ФФОМСвРублях + (БазыДляИсчисленияЕСН.БазаФОМС - СтавкиФОМС.СуммаДоходаС) * СтавкиФОМС.ФФОМСвПроцентах / 100
	|	КОНЕЦ КАК РезультатФФОМС,
	|	ВЫБОР
	|		КОГДА БазыДляИсчисленияЕСН.БазаФОМС = 0
	|			ТОГДА 0
	|		ИНАЧЕ СтавкиФОМС.ТФОМСвРублях + (БазыДляИсчисленияЕСН.БазаФОМС - СтавкиФОМС.СуммаДоходаС) * СтавкиФОМС.ТФОМСвПроцентах / 100
	|	КОНЕЦ КАК РезультатТФОМС,
	|	ВЫБОР
	|		КОГДА БазыДляИсчисленияЕСН.БазаПФР = 0
	|			ТОГДА 0
	|		КОГДА БазыДляИсчисленияЕСН.НомерКолонкиСтавокПФР = 1
	|			ТОГДА СтавкиПФР.ПФРНакопительная1вРублях + (БазыДляИсчисленияЕСН.БазаПФР - СтавкиПФР.СуммаДоходаС) * СтавкиПФР.ПФРНакопительная1вПроцентах / 100
	|		ИНАЧЕ СтавкиПФР.ПФРНакопительная2вРублях + (БазыДляИсчисленияЕСН.БазаПФР - СтавкиПФР.СуммаДоходаС) * СтавкиПФР.ПФРНакопительная2вПроцентах / 100
	|	КОНЕЦ КАК РезультатПФРНакопительная,
	|	ВЫБОР
	|		КОГДА БазыДляИсчисленияЕСН.БазаПФР = 0
	|			ТОГДА 0
	|		КОГДА БазыДляИсчисленияЕСН.НомерКолонкиСтавокПФР = 1
	|			ТОГДА СтавкиПФР.ПФРСтраховая1вРублях + (БазыДляИсчисленияЕСН.БазаПФР - СтавкиПФР.СуммаДоходаС) * СтавкиПФР.ПФРСтраховая1вПроцентах / 100
	|		ИНАЧЕ СтавкиПФР.ПФРСтраховая2вРублях + (БазыДляИсчисленияЕСН.БазаПФР - СтавкиПФР.СуммаДоходаС) * СтавкиПФР.ПФРСтраховая2вПроцентах / 100
	|	КОНЕЦ КАК РезультатПФРСтраховая,
	|	ВЫБОР
	|		КОГДА БазыДляИсчисленияЕСН.БазаФедеральныйБюджет = 0
	|			ТОГДА 0
	|		КОГДА БазыДляИсчисленияЕСН.НомерКолонкиСтавокПФР = 1
	|			ТОГДА СтавкиВычета.ПФРНакопительная1вРублях + (БазыДляИсчисленияЕСН.БазаФедеральныйБюджет - СтавкиВычета.СуммаДоходаС) * СтавкиВычета.ПФРНакопительная1вПроцентах / 100
	|		ИНАЧЕ СтавкиВычета.ПФРНакопительная2вРублях + (БазыДляИсчисленияЕСН.БазаФедеральныйБюджет - СтавкиВычета.СуммаДоходаС) * СтавкиВычета.ПФРНакопительная2вПроцентах / 100
	|	КОНЕЦ КАК РезультатДляРасчетаВычетаНакопительная,
	|	ВЫБОР
	|		КОГДА БазыДляИсчисленияЕСН.БазаФедеральныйБюджет = 0
	|			ТОГДА 0
	|		КОГДА БазыДляИсчисленияЕСН.НомерКолонкиСтавокПФР = 1
	|			ТОГДА СтавкиВычета.ПФРСтраховая1вРублях + (БазыДляИсчисленияЕСН.БазаФедеральныйБюджет - СтавкиВычета.СуммаДоходаС) * СтавкиВычета.ПФРСтраховая1вПроцентах / 100
	|		ИНАЧЕ СтавкиВычета.ПФРСтраховая2вРублях + (БазыДляИсчисленияЕСН.БазаФедеральныйБюджет - СтавкиВычета.СуммаДоходаС) * СтавкиВычета.ПФРСтраховая2вПроцентах / 100
	|	КОНЕЦ КАК РезультатДляРасчетаВычетаСтраховая
	|ПОМЕСТИТЬ ВТСуммыНалогаНарастающимИтогом
	|ИЗ
	|	(ВЫБРАТЬ
	|		БазаПоФизлицам.Организация.ВидСтавокЕСНиПФР КАК ВидСтавокЕСНиПФР,
	|		БазаПоФизлицам.Физлицо КАК ФизЛицо,
	|		БазаПоФизлицам.Физлицо.Наименование КАК Порядок,
	|		ВЫБОР
	|			КОГДА ГОД(БазаПоФизлицам.Физлицо.ДатаРождения) < 1967
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ КАК НомерКолонкиСтавокПФР,
	|		БазаПоФизлицам.БазаФедеральныйБюджет КАК БазаФедеральныйБюджет,
	|		БазаПоФизлицам.БазаФСС КАК БазаФСС,
	|		БазаПоФизлицам.БазаФОМС КАК БазаФОМС,
	|		БазаПоФизлицам.БазаПФР КАК БазаПФР,
	|		ВЫБОР
	|			КОГДА БазаПоФизлицам.ЛьготаИнвалидуФБ > 100000
	|				ТОГДА 100000
	|			ИНАЧЕ БазаПоФизлицам.ЛьготаИнвалидуФБ
	|		КОНЕЦ КАК ЛьготаИнвалидуФБ,
	|		ВЫБОР
	|			КОГДА БазаПоФизлицам.ЛьготаИнвалидуФСС > 100000
	|				ТОГДА 100000
	|			ИНАЧЕ БазаПоФизлицам.ЛьготаИнвалидуФСС
	|		КОНЕЦ КАК ЛьготаИнвалидуФСС,
	|		ВЫБОР
	|			КОГДА БазаПоФизлицам.ЛьготаИнвалидуФОМС > 100000
	|				ТОГДА 100000
	|			ИНАЧЕ БазаПоФизлицам.ЛьготаИнвалидуФОМС
	|		КОНЕЦ КАК ЛьготаИнвалидуФОМС
	|	ИЗ
	|		ВТОблагаемаяБазаПоФизлицам КАК БазаПоФизлицам) КАК БазыДляИсчисленияЕСН
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СтавкиФедеральныйБюджет
	|		ПО (СтавкиФедеральныйБюджет.Год = &парамГодРасчета)
	|			И БазыДляИсчисленияЕСН.БазаФедеральныйБюджет > СтавкиФедеральныйБюджет.СуммаДоходаС
	|			И БазыДляИсчисленияЕСН.БазаФедеральныйБюджет <= СтавкиФедеральныйБюджет.СуммаДоходаПо
	|			И БазыДляИсчисленияЕСН.ВидСтавокЕСНиПФР = СтавкиФедеральныйБюджет.ВидСтавокЕСНиПФР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СтавкиПФР
	|		ПО БазыДляИсчисленияЕСН.ВидСтавокЕСНиПФР = СтавкиПФР.ВидСтавокЕСНиПФР
	|			И БазыДляИсчисленияЕСН.БазаПФР > СтавкиПФР.СуммаДоходаС
	|			И БазыДляИсчисленияЕСН.БазаПФР <= СтавкиПФР.СуммаДоходаПо
	|			И (СтавкиПФР.Год = &парамГодРасчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СтавкиВычета
	|		ПО БазыДляИсчисленияЕСН.ВидСтавокЕСНиПФР = СтавкиВычета.ВидСтавокЕСНиПФР
	|			И БазыДляИсчисленияЕСН.БазаФедеральныйБюджет > СтавкиВычета.СуммаДоходаС
	|			И БазыДляИсчисленияЕСН.БазаФедеральныйБюджет <= СтавкиВычета.СуммаДоходаПо
	|			И (СтавкиВычета.Год = &парамГодРасчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СтавкиФСС
	|		ПО БазыДляИсчисленияЕСН.ВидСтавокЕСНиПФР = СтавкиФСС.ВидСтавокЕСНиПФР
	|			И БазыДляИсчисленияЕСН.БазаФСС > СтавкиФСС.СуммаДоходаС
	|			И БазыДляИсчисленияЕСН.БазаФСС <= СтавкиФСС.СуммаДоходаПо
	|			И (СтавкиФСС.Год = &парамГодРасчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СтавкиФОМС
	|		ПО БазыДляИсчисленияЕСН.ВидСтавокЕСНиПФР = СтавкиФОМС.ВидСтавокЕСНиПФР
	|			И БазыДляИсчисленияЕСН.БазаФОМС > СтавкиФОМС.СуммаДоходаС
	|			И БазыДляИсчисленияЕСН.БазаФОМС <= СтавкиФОМС.СуммаДоходаПо
	|			И (СтавкиФОМС.Год = &парамГодРасчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетнаяПолитикаПоЕСНСрезПоследних.ТочностьИсчисленияЕСН,
	|	УчетнаяПолитикаПоЕСНСрезПоследних.ПорядокРасчетаВычетаФБ,
	|	УчетнаяПолитикаПоЕСНСрезПоследних.ТочностьИсчисленияПФР
	|ПОМЕСТИТЬ ВТПорядокИсчисленияНалогов
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаПоЕСН.СрезПоследних(&парамНачалоГода, Организация = &парамГоловнаяОрганизация) КАК УчетнаяПолитикаПоЕСНСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыБезОкругления.ФизЛицо КАК ФизЛицо,
	|	СуммыБезОкругления.Порядок КАК Порядок,
	|	СуммыБезОкругления.ЛьготаИнвалидуФБ - ЕСТЬNULL(ЕСНИсчисленный.ПримененнаяЛьготаФБОборот, 0) КАК ПримененнаяЛьготаФБ,
	|	СуммыБезОкругления.ЛьготаИнвалидуФСС - ЕСТЬNULL(ЕСНИсчисленный.ПримененнаяЛьготаФССОборот, 0) КАК ПримененнаяЛьготаФСС,
	|	СуммыБезОкругления.ЛьготаИнвалидуФОМС - ЕСТЬNULL(ЕСНИсчисленный.ПримененнаяЛьготаФОМСОборот, 0) КАК ПримененнаяЛьготаФОМС,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияЕСН = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРублях)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатФедеральныйБюджет КАК ЧИСЛО(15, 0))
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияЕСН = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРубляхИКопейках)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатФедеральныйБюджет КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыБезОкругления.РезультатФедеральныйБюджет
	|	КОНЕЦ - ЕСТЬNULL(ЕСНИсчисленный.ФедеральныйБюджетОборот, 0) КАК ФедеральныйБюджет,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияЕСН = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРублях)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатФСС КАК ЧИСЛО(15, 0))
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияЕСН = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРубляхИКопейках)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатФСС КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыБезОкругления.РезультатФСС
	|	КОНЕЦ - ЕСТЬNULL(ЕСНИсчисленный.ФССОборот, 0) КАК ФСС,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияЕСН = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРублях)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатФФОМС КАК ЧИСЛО(15, 0))
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияЕСН = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРубляхИКопейках)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатФФОМС КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыБезОкругления.РезультатФФОМС
	|	КОНЕЦ - ЕСТЬNULL(ЕСНИсчисленный.ФФОМСОборот, 0) КАК ФФОМС,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияЕСН = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРублях)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатТФОМС КАК ЧИСЛО(15, 0))
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияЕСН = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРубляхИКопейках)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатТФОМС КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыБезОкругления.РезультатТФОМС
	|	КОНЕЦ - ЕСТЬNULL(ЕСНИсчисленный.ТФОМСОборот, 0) КАК ТФОМС,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияПФР = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРублях)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатПФРНакопительная КАК ЧИСЛО(15, 0))
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияПФР = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРубляхИКопейках)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатПФРНакопительная КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыБезОкругления.РезультатПФРНакопительная
	|	КОНЕЦ - ЕСТЬNULL(ЕСНИсчисленный.ПФРНакопительнаяОборот, 0) КАК ПФРНакопительная,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияПФР = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРублях)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатПФРСтраховая КАК ЧИСЛО(15, 0))
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияПФР = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРубляхИКопейках)
	|			ТОГДА ВЫРАЗИТЬ(СуммыБезОкругления.РезультатПФРСтраховая КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыБезОкругления.РезультатПФРСтраховая
	|	КОНЕЦ - ЕСТЬNULL(ЕСНИсчисленный.ПФРСтраховаяОборот, 0) КАК ПФРСтраховая,
	|	ВЫБОР
	|		КОГДА СуммыБезОкругления.РезультатПФРНакопительная = ЕСТЬNULL(ЕСНИсчисленный.ПФРНакопительнаяОборот, 0)
	|			ТОГДА 0
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияПФР = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРублях)
	|			ТОГДА ВЫБОР
	|					КОГДА УчетнаяПолитикаПоЕСН.ПорядокРасчетаВычетаФБ = ЗНАЧЕНИЕ(Перечисление.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеЕСН)
	|						ТОГДА (ВЫРАЗИТЬ(СуммыБезОкругления.РезультатПФРНакопительная - СуммыБезОкругления.РезультатДляРасчетаВычетаНакопительная КАК ЧИСЛО(15, 0))) - ЕСТЬNULL(ЕСНИсчисленный.ПФРНакопительнаяЕНВДОборот, 0)
	|					КОГДА ЕСТЬNULL(БазаПФРЗаМесяц.БазаПФР, 0) <> 0
	|						ТОГДА ВЫРАЗИТЬ(БазаПФРЗаМесяц.БазаПФР_ЕНВД * (СуммыБезОкругления.РезультатПФРНакопительная - ЕСТЬNULL(ЕСНИсчисленный.ПФРНакопительнаяОборот, 0)) / БазаПФРЗаМесяц.БазаПФР КАК ЧИСЛО(15, 0))
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияПФР = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРубляхИКопейках)
	|			ТОГДА ВЫБОР
	|					КОГДА УчетнаяПолитикаПоЕСН.ПорядокРасчетаВычетаФБ = ЗНАЧЕНИЕ(Перечисление.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеЕСН)
	|						ТОГДА (ВЫРАЗИТЬ(СуммыБезОкругления.РезультатПФРНакопительная - СуммыБезОкругления.РезультатДляРасчетаВычетаНакопительная КАК ЧИСЛО(15, 2))) - ЕСТЬNULL(ЕСНИсчисленный.ПФРНакопительнаяЕНВДОборот, 0)
	|					КОГДА ЕСТЬNULL(БазаПФРЗаМесяц.БазаПФР, 0) <> 0
	|						ТОГДА ВЫРАЗИТЬ(БазаПФРЗаМесяц.БазаПФР_ЕНВД * (СуммыБезОкругления.РезультатПФРНакопительная - ЕСТЬNULL(ЕСНИсчисленный.ПФРНакопительнаяОборот, 0)) / БазаПФРЗаМесяц.БазаПФР КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УчетнаяПолитикаПоЕСН.ПорядокРасчетаВычетаФБ = ЗНАЧЕНИЕ(Перечисление.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеЕСН)
	|					ТОГДА СуммыБезОкругления.РезультатПФРНакопительная - СуммыБезОкругления.РезультатДляРасчетаВычетаНакопительная - ЕСТЬNULL(ЕСНИсчисленный.ПФРНакопительнаяЕНВДОборот, 0)
	|				КОГДА ЕСТЬNULL(БазаПФРЗаМесяц.БазаПФР, 0) <> 0
	|					ТОГДА БазаПФРЗаМесяц.БазаПФР_ЕНВД * (СуммыБезОкругления.РезультатПФРНакопительная - ЕСТЬNULL(ЕСНИсчисленный.ПФРНакопительнаяОборот, 0)) / БазаПФРЗаМесяц.БазаПФР
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ПФРНакопительнаяЕНВД,
	|	ВЫБОР
	|		КОГДА СуммыБезОкругления.РезультатПФРСтраховая = ЕСТЬNULL(ЕСНИсчисленный.ПФРСтраховаяОборот, 0)
	|			ТОГДА 0
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияПФР = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРублях)
	|			ТОГДА ВЫБОР
	|					КОГДА УчетнаяПолитикаПоЕСН.ПорядокРасчетаВычетаФБ = ЗНАЧЕНИЕ(Перечисление.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеЕСН)
	|						ТОГДА (ВЫРАЗИТЬ(СуммыБезОкругления.РезультатПФРСтраховая - СуммыБезОкругления.РезультатДляРасчетаВычетаСтраховая КАК ЧИСЛО(15, 0))) - ЕСТЬNULL(ЕСНИсчисленный.ПФРСтраховаяЕНВДОборот, 0)
	|					КОГДА ЕСТЬNULL(БазаПФРЗаМесяц.БазаПФР, 0) <> 0
	|						ТОГДА ВЫРАЗИТЬ(БазаПФРЗаМесяц.БазаПФР_ЕНВД * (СуммыБезОкругления.РезультатПФРСтраховая - ЕСТЬNULL(ЕСНИсчисленный.ПФРСтраховаяОборот, 0)) / БазаПФРЗаМесяц.БазаПФР КАК ЧИСЛО(15, 0))
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОГДА УчетнаяПолитикаПоЕСН.ТочностьИсчисленияПФР = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияЕСН.ВРубляхИКопейках)
	|			ТОГДА ВЫБОР
	|					КОГДА УчетнаяПолитикаПоЕСН.ПорядокРасчетаВычетаФБ = ЗНАЧЕНИЕ(Перечисление.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеЕСН)
	|						ТОГДА (ВЫРАЗИТЬ(СуммыБезОкругления.РезультатПФРСтраховая - СуммыБезОкругления.РезультатДляРасчетаВычетаСтраховая КАК ЧИСЛО(15, 2))) - ЕСТЬNULL(ЕСНИсчисленный.ПФРСтраховаяЕНВДОборот, 0)
	|					КОГДА ЕСТЬNULL(БазаПФРЗаМесяц.БазаПФР, 0) <> 0
	|						ТОГДА ВЫРАЗИТЬ(БазаПФРЗаМесяц.БазаПФР_ЕНВД * (СуммыБезОкругления.РезультатПФРСтраховая - ЕСТЬNULL(ЕСНИсчисленный.ПФРСтраховаяОборот, 0)) / БазаПФРЗаМесяц.БазаПФР КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УчетнаяПолитикаПоЕСН.ПорядокРасчетаВычетаФБ = ЗНАЧЕНИЕ(Перечисление.ПорядкиИсчисленияВычетаПоЕСН.ПоСуммеЕСН)
	|					ТОГДА СуммыБезОкругления.РезультатПФРСтраховая - СуммыБезОкругления.РезультатДляРасчетаВычетаСтраховая - ЕСТЬNULL(ЕСНИсчисленный.ПФРСтраховаяЕНВДОборот, 0)
	|				КОГДА ЕСТЬNULL(БазаПФРЗаМесяц.БазаПФР, 0) <> 0
	|					ТОГДА БазаПФРЗаМесяц.БазаПФР_ЕНВД * (СуммыБезОкругления.РезультатПФРСтраховая - ЕСТЬNULL(ЕСНИсчисленный.ПФРСтраховаяОборот, 0)) / БазаПФРЗаМесяц.БазаПФР
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ПФРСтраховаяЕНВД
	|ПОМЕСТИТЬ ВТНалогиСОкруглением
	|ИЗ
	|	ВТСуммыНалогаНарастающимИтогом КАК СуммыБезОкругления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЕСНИсчисленный КАК ЕСНИсчисленный
	|		ПО СуммыБезОкругления.ФизЛицо = ЕСНИсчисленный.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОблагаемаяБазаПФРЗаМесяцРасчета КАК БазаПФРЗаМесяц
	|		ПО СуммыБезОкругления.ФизЛицо = БазаПФРЗаМесяц.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПорядокИсчисленияНалогов КАК УчетнаяПолитикаПоЕСН
	|		ПО (ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалогиСОкруглением.ФизЛицо,
	|	НалогиСОкруглением.ПримененнаяЛьготаФБ,
	|	НалогиСОкруглением.ПримененнаяЛьготаФСС,
	|	НалогиСОкруглением.ПримененнаяЛьготаФОМС,
	|	НалогиСОкруглением.ФедеральныйБюджет,
	|	НалогиСОкруглением.ФСС,
	|	НалогиСОкруглением.ФФОМС,
	|	НалогиСОкруглением.ТФОМС,
	|	НалогиСОкруглением.ПФРНакопительная,
	|	НалогиСОкруглением.ПФРСтраховая,
	|	НалогиСОкруглением.ПФРНакопительнаяЕНВД,
	|	НалогиСОкруглением.ПФРСтраховаяЕНВД
	|ИЗ
	|	ВТНалогиСОкруглением КАК НалогиСОкруглением
	|ГДЕ
	|	(НалогиСОкруглением.ФедеральныйБюджет <> 0
	|			ИЛИ НалогиСОкруглением.ФСС <> 0
	|			ИЛИ НалогиСОкруглением.ФФОМС <> 0
	|			ИЛИ НалогиСОкруглением.ТФОМС <> 0
	|			ИЛИ НалогиСОкруглением.ПФРНакопительная <> 0
	|			ИЛИ НалогиСОкруглением.ПФРСтраховая <> 0
	|			ИЛИ НалогиСОкруглением.ПримененнаяЛьготаФБ <> 0
	|			ИЛИ НалогиСОкруглением.ПримененнаяЛьготаФСС <> 0
	|			ИЛИ НалогиСОкруглением.ПримененнаяЛьготаФОМС <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалогиСОкруглением.Порядок";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"РегистрСведений.УчетнаяПолитикаПоЕСН",ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ИмяУчетнойПолитикиЕСН());
	Запрос.Текст = ТекстЗапроса;
	Возврат Запрос.Выполнить();
	
КонецФункции  // ПолучитьДанныеРасчетаЕСН

// расчет документа
//
Процедура РассчитатьЕСН(ВыборкаПоШапкеДокумента, ОграничениеНаСотрудников = Неопределено)
	
	Отказ = Ложь;
	
	НаборЗаписейОДоходах = РегистрыНакопления.ЕСНСведенияОДоходах.СоздатьНаборЗаписей();
	НаборЗаписейОДоходах.Отбор.Регистратор.Значение = Ссылка;
	
	РасчетЕСНПереопределяемый.СформироватьДвиженияПоДоходам(ЭтотОбъект, ВыборкаПоШапкеДокумента, "", Отказ, НаборЗаписейОДоходах);
	
	НаборЗаписейОДоходах.Записать();
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДляРасчетаЕСН = ПолучитьДанныеРасчетаЕСН(ВыборкаПоШапкеДокумента.Организация, ОграничениеНаСотрудников, Отказ);
	
	РасчетЕСНПереопределяемый.ОбработатьДанныеДляРасчетаЕСН(ЭтотОбъект, ДанныеДляРасчетаЕСН, Отказ);
	
	// Очистим ранее записанные в регистр сведения о доходах
	НаборЗаписейОДоходах.Очистить();
	НаборЗаписейОДоходах.Записать();
	
КонецПроцедуры // РассчитатьЕСН()


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// заполнение доходов и расчет документа
Процедура ЗаполнитьИРассчитать(Скидки = Истина, ЕСН = Истина) Экспорт

	Если Не Скидки И Не ЕСН Тогда  // делать ничего не надо
		Возврат
	КонецЕсли;
	
	Отказ = Ложь;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	мГоловнаяОрганизация = ВыборкаПоШапкеДокумента.Организация;
	
	Если ЕСН Тогда // выберем сотрудников для последующей обработки
		ОграничениеНаСотрудников = ПолучитьОграничениеНаСотрудников(Отказ);	
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Скидки И ЕСН Тогда // надо полностью перезаполнить документ
		РасчетЕСНПереопределяемый.Автозаполнение(ЭтотОбъект, ВыборкаПоШапкеДокумента, ОграничениеНаСотрудников, Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	Если Скидки и Не ЕСН Тогда // только расчет скидок к доходам
		РасчетЕСНПереопределяемый.РасчетСкидок(ЭтотОбъект, ВыборкаПоШапкеДокумента);
	КонецЕсли;
	
	Если ЕСН Тогда
		РассчитатьЕСН(ВыборкаПоШапкеДокумента, ОграничениеНаСотрудников);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

/// Формирует запрос по шапке документа
//
// Параметры: 
//	нет
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетЕСН.Дата,
	|	РасчетЕСН.Организация КАК ОбособленноеПодразделение,
	|	РасчетЕСН.Ответственный,
	|	РасчетЕСН.ПериодРегистрации КАК ПериодРегистрации,
	|	РасчетЕСН.ПериодРегистрации КАК Период,
	|	ВЫБОР
	|		КОГДА РасчетЕСН.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасчетЕСН.Организация
	|		ИНАЧЕ РасчетЕСН.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК Организация,
	|	РасчетЕСН.Ссылка,
	|	ВЫБОР
	|		КОГДА СведенияОСтавкахЕСНиПФР.НомерСтрокиСтавок ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НетСведенийОСтавкахЕСН,
	|	ВЫБОР
	|		КОГДА РасчетЕСН.Организация.ВидСтавокЕСНиПФР = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокЕСНиПФР.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеУказанВидСтавокЕСН,
	|	ГОД(РасчетЕСН.ПериодРегистрации) КАК Год,
	|	ПРЕДСТАВЛЕНИЕ(ВЫБОР
	|			КОГДА РасчетЕСН.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА РасчетЕСН.Организация
	|			ИНАЧЕ РасчетЕСН.Организация.ГоловнаяОрганизация
	|		КОНЕЦ) КАК ОрганизацияПредставление
	|ИЗ
	|	Документ.РасчетЕСН КАК РасчетЕСН
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СведенияОСтавкахЕСНиПФР
	|		ПО РасчетЕСН.Организация.ВидСтавокЕСНиПФР = СведенияОСтавкахЕСНиПФР.ВидСтавокЕСНиПФР
	|			И (ГОД(РасчетЕСН.ПериодРегистрации) = СведенияОСтавкахЕСНиПФР.Год)
	|			И (СведенияОСтавкахЕСНиПФР.НомерСтрокиСтавок = 1)
	|ГДЕ
	|	РасчетЕСН.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//	ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//	Отказ					- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок = "")

	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОбособленноеПодразделение) Тогда
		СтрокаСообщения = ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!");
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаСообщения, Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан период регистрации!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоШапкеДокумента.ПериодРегистрации >= ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Уплата ЕСН с 1 января 2010 года отменена!", Отказ);
	ИначеЕсли ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОбособленноеПодразделение) и ПустаяСтрока(Заголовок) Тогда
		// проверка выполняется при расчетах
		Если ВыборкаПоШапкеДокумента.НеУказанВидСтавокЕСН Тогда
			
			// расшифровка сообщений представляет собой массив структур "Представление+Расшифровка"
			Расшифровки = Новый Массив;
			ОткрытьОрганизацию = Новый Массив;
			ОткрытьОрганизацию.Добавить("РаботаСДиалогамиЗК.ОткрытьФормуЭлементаОрганизация");
			ОткрытьОрганизацию.Добавить(ВыборкаПоШапкеДокумента.Организация);
			ОткрытьОрганизацию.Добавить("РасчетЗарплаты");
			ОткрытьОрганизацию.Добавить("ВидСтавокЕСНиПФР");
			Расшифровки.Добавить(Новый Структура("Представление,Расшифровка", ВыборкаПоШапкеДокумента.ОрганизацияПредставление, ОткрытьОрганизацию));
			
			СтрокаСообщения = ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("организации");
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(
			"Для " + СтрокаСообщения + "  %% не указана шкала ставок ЕСН и взносов в ПФР!",
					Отказ, Заголовок, Перечисления.ВидыСообщений.Ошибка, Расшифровки);
			
		ИначеЕсли ВыборкаПоШапкеДокумента.НетСведенийОСтавкахЕСН Тогда
			
			Расшифровки = Новый Массив;
			// расшифровка сообщений представляет собой массив структур "Представление+Расшифровка"
			МассивРасшифровки = Новый Массив;
			МассивРасшифровки.Добавить("ОткрытьФормуСписка");
			МассивРасшифровки.Добавить("РегистрыСведений.СведенияОСтавкахЕСНиПФР");
			Расшифровки.Добавить(Новый Структура("Представление,Расшифровка", Формат(ВыборкаПоШапкеДокумента.Год, "ЧЦ=4; ЧГ="), МассивРасшифровки));
		
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(
			"Нет сведений о ставках ЕСН на %% год!",
					Отказ, Заголовок, Перечисления.ВидыСообщений.Ошибка, Расшифровки);
					
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Формирует запрос по табличной части документа "ИсчисленныйЕСН" 
//
Функция СформироватьЗапросПоНалогам()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Налог.НомерСтроки,
	|	Налог.ФизЛицо,
	|	Налог.ФедеральныйБюджет,
	|	Налог.ФСС,
	|	Налог.ФФОМС,
	|	Налог.ТФОМС,
	|	Налог.ПФРНакопительная,
	|	Налог.ПФРСтраховая,
	|	Налог.ПримененнаяЛьготаФБ,
	|	Налог.ПримененнаяЛьготаФСС,
	|	Налог.ПримененнаяЛьготаФОМС,
	|	Налог.ПФРНакопительнаяЕНВД,
	|	Налог.ПФРСтраховаяЕНВД
	|ИЗ
	|	Документ.РасчетЕСН.ИсчисленныйЕСН КАК Налог
	|ГДЕ
	|	Налог.Ссылка = &парамРегистратор";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоНалогам()

// Выполняет проверку правильности заполнения строки табличной части налогов
Процедура ПроверитьЗаполнениеСтрокиНалога(ВыборкаПоНалогам, Отказ, Заголовок = "")
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоНалогам.НомерСтроки) +
	""" табл. части Исчисленный ЕСН: ";
	Если ВыборкаПоНалогам.ФизЛицо.Пустая() Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке  + "Не указан сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиНалога()

// Добавляет запись в движения по регистру учета налогов
Процедура ДобавитьСтрокуВДвиженияПоНалогам(ВыборкаПоНалогам, ВыборкаПоШапкеДокумента)
	
	СтрокаНабора = Движения.ЕСНИсчисленный.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаНабора,ВыборкаПоШапкеДокумента);
	ЗаполнитьЗначенияСвойств(СтрокаНабора,ВыборкаПоНалогам);
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоНалогам()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
	КонецЦикла;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	
	Если Отказ Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	ВыборкаПоНалогам = СформироватьЗапросПоНалогам().Выбрать();
	Пока ВыборкаПоНалогам.Следующий() Цикл
		ПроверитьЗаполнениеСтрокиНалога(ВыборкаПоНалогам, Отказ);
		Если Не Отказ Тогда
			ДобавитьСтрокуВДвиженияПоНалогам(ВыборкаПоНалогам, ВыборкаПоШапкеДокумента);
		КонецЕсли;
	КонецЦикла;
	
	Если Не Отказ Тогда
		РасчетЕСНПереопределяемый.СформироватьДвиженияПоДоходам(ЭтотОбъект, ВыборкаПоШапкеДокумента, Заголовок, Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		РасчетЕСНПереопределяемый.ДополнительныеДействияОбработкиПроведения(ЭтотОбъект, ВыборкаПоШапкеДокумента, Заголовок, Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(ИсчисленныйЕСН);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");
	
	РасчетЕСНПереопределяемый.ДополнительныеДействияПередЗаписью(ЭтотОбъект);
	
КонецПроцедуры // ПередЗаписью()

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
		Набор.Записать();
	КонецЦикла;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

