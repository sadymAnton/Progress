
Процедура ПроверитьПравильностьЗаполненияДокумента(Ссылка, ЕстьОшибки, СообщатьОбУспехе = Истина, ВыборкаПоШапкеДокумента = Неопределено, СообщенияРазделПроверки = Неопределено) Экспорт
	
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке2014(Ссылка).Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	
	// Заголовок для сообщений об ошибках
	Заголовок =  "Проверка Раздела 2.5 расчета РСВ-1, пачка № " + ВыборкаПоШапкеДокумента.НомерПачки;
	
	Отказ = Ложь;
	
	Если СообщенияРазделПроверки = Неопределено Тогда
		Обработка = глЗначениеПеременной("глОбработкаСообщений");
		СообщенияРазделПроверки = Обработка.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Информация);
	КонецЕсли;

	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок, СообщенияРазделПроверки);
	
	// Проверим правильности указания таблицы пачек документов
	ВыборкаПоПачкам = СформироватьЗапросДляПроверкиПачек(Ссылка).Выбрать();
	
	ПроверитьЗаполнениеПачек(ВыборкаПоПачкам, ВыборкаПоШапкеДокумента, Отказ, Заголовок, СообщенияРазделПроверки);
	
	Если Отказ тогда
		ЕстьОшибки = Истина;
	КонецЕсли;	 
	
	Если СообщатьОбУспехе И Не ЕстьОшибки Тогда
		Обработка.ДобавитьСообщение("Ошибок не обнаружено.", Перечисления.ВидыСообщений.Информация, , СообщенияРазделПроверки);		
	КонецЕсли;

КонецПроцедуры // ПроверитьПравильностьЗаполненияДокумента()	

////////////////////////////////////////////////////////////////////////////////

Функция Раздел25РасчетаРСВ1(Ссылка, ДатаПодписи, НумероватьСтраницы = Истина, НомерПервойСтраницы = 1, НомерПоследнейСтраницы = 0, ПроверятьДокументы = Истина, ОчищатьСообщения = Истина) Экспорт
	
	ПечатныеФормы = Новый ТаблицаЗначений;
    ПечатныеФормы.Колонки.Добавить("Представление");
    ПечатныеФормы.Колонки.Добавить("Описание", Новый ОписаниеТипов("Строка"));
	
	Отказ = Ложь;
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке2014(Ссылка).Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	Макет = ПолучитьМакет(?(ВыборкаПоШапкеДокумента.ОтчетныйПериод >= ПроцедурыПерсонифицированногоУчета.ДатаВводаФормыРСВ_1за2015год(), "ФормаРаздел25_2015", "ФормаРаздел25"));
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	Если ПроверятьДокументы Тогда
		Если ОчищатьСообщения Тогда
			ОбработкаКомментариев.УдалитьСообщения();
		КонецЕсли;
		ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, Ложь, ВыборкаПоШапкеДокумента);
	КонецЕсли;
	
	Если Отказ Тогда
		НомерПоследнейСтраницы = НомерПервойСтраницы;
		СтрокаОписания = ПечатныеФормы.Добавить();
		СтрокаОписания.Представление = ПустойРаздел25РасчетаРСВ1(ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Ссылка,"Организация"), ДатаПодписи, НумероватьСтраницы, НомерПервойСтраницы);
		СтрокаОписания.Описание = "Раздел 2.5";
		Возврат ПечатныеФормы;
	КонецЕсли;	 
	
	ОбластьВерхнийКолонтитул = Макет.ПолучитьОбласть("ВерхнийКолонтитул");
	ОбластьНижнийКолонтитул = Макет.ПолучитьОбласть("НижнийКолонтитул");
	ОбластьПустаяСтрока	= Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьИсходныеПачкиНачало = Макет.ПолучитьОбласть("ИсходныеПачкиНачало");
	ОбластьИсходныеПачкиИтого = Макет.ПолучитьОбласть("ИсходныеПачкиИтого");
	ОбластьИсходныеПачкиСтрока = Макет.ПолучитьОбласть("ИсходныеПачкиСтрока");
	ОбластьКорректирующиеПачкиНачало = Макет.ПолучитьОбласть("КорректирующиеПачкиНачало");
	ОбластьКорректирующиеПачкиИтого = Макет.ПолучитьОбласть("КорректирующиеПачкиИтого");
	ОбластьКорректирующиеПачкиСтрока = Макет.ПолучитьОбласть("КорректирующиеПачкиСтрока");

	ОтчетныйГод = Год(ВыборкаПоШапкеДокумента.ОтчетныйПериод);

	РегистрационныйНомерПФР = СтрЗаменить(ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР," ","");
	РегистрационныйНомерПФР = СтрЗаменить(РегистрационныйНомерПФР,"-","");
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(РегистрационныйНомерПФР, ОбластьВерхнийКолонтитул, "НомРег", 12);
	ОбластьНижнийКолонтитул.Параметры.ДатаПодписиПолная = Формат(ДатаПодписи, "ДФ=dd.MM.yyyy; ДП=' '");
	
	ТекущийНомерСтраницы = НомерПервойСтраницы;
	
	ДокументРезультат = НовыйЛистРаздела(ПечатныеФормы, НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул);
	
	ДокументРезультат.Вывести(ОбластьИсходныеПачкиНачало);
	
	Если ВыборкаПоШапкеДокумента.КолЗЛИсходных = 0 Тогда
		Для Сч = 1 По 6 Цикл
			ДокументРезультат.Вывести(ОбластьИсходныеПачкиСтрока);
		КонецЦикла; 
	Иначе
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьИсходныеПачкиСтрока);
		ВыводимыеОбласти.Добавить(ОбластьИсходныеПачкиИтого);
		ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
		
		ОбластьИсходныеПачкиИтого.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
		ВыборкаПоПачкам = ЗапросПоИсходнымПачкам2014(Ссылка).Выбрать();
		НомерПП = 1;
		Пока ВыборкаПоПачкам.Следующий() Цикл
			ОбластьИсходныеПачкиСтрока.Параметры.Заполнить(ВыборкаПоПачкам);
			ОбластьИсходныеПачкиСтрока.Параметры.НомерПП = НомерПП;
			ОбластьИсходныеПачкиСтрока.Параметры.ИмяФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(Ссылка, ОтчетныйГод, ВыборкаПоПачкам);
			Если Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Тогда
				ДокументРезультат.Вывести(ОбластьПустаяСтрока);
				ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
				ДокументРезультат = НовыйЛистРаздела(ПечатныеФормы, НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул);
				ДокументРезультат.Вывести(ОбластьИсходныеПачкиНачало);
			КонецЕсли;
			ДокументРезультат.Вывести(ОбластьИсходныеПачкиСтрока);
			НомерПП = НомерПП + 1;
		КонецЦикла;
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьИсходныеПачкиИтого);
	
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиНачало);
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиИтого);
	ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
	
	Если Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Тогда
		ДокументРезультат.Вывести(ОбластьПустаяСтрока);
		ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
		ДокументРезультат = НовыйЛистРаздела(ПечатныеФормы, НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул);
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиНачало);
	
	Если ВыборкаПоШапкеДокумента.КолЗЛКорректирующих = 0 Тогда
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиСтрока);
		ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиИтого);
		ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
		ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
		
		Для Сч = 1 По 4 Цикл
			ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиСтрока);
			Если Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Тогда
				Прервать;	
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиСтрока);
		ВыводимыеОбласти.Добавить(ОбластьКорректирующиеПачкиИтого);
		ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
		
		ОбластьКорректирующиеПачкиИтого.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
		ВыборкаПоПачкам = ЗапросПоКорректирующимПачкам2014(Ссылка).Выбрать();
		НомерПП = 1;
		Пока ВыборкаПоПачкам.Следующий() Цикл
			ОбластьКорректирующиеПачкиСтрока.Параметры.Заполнить(ВыборкаПоПачкам);   
			ОбластьКорректирующиеПачкиСтрока.Параметры.НомерПП = НомерПП;
			ОбластьКорректирующиеПачкиСтрока.Параметры.КодКорректируемогоПериода = ПроцедурыПерсонифицированногоУчета.КодПериодаДляРасчетаРСВ1(ВыборкаПоПачкам.КорректируемыйПериод);
			ОбластьКорректирующиеПачкиСтрока.Параметры.ИмяФайла = ПроцедурыПерсонифицированногоУчета.ПолучитьИмяФайлаПФ(Ссылка, ОтчетныйГод, ВыборкаПоПачкам);
			Если Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Тогда
				ДокументРезультат.Вывести(ОбластьПустаяСтрока);
				ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
				ДокументРезультат = НовыйЛистРаздела(ПечатныеФормы, НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул);
				ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиНачало);
			КонецЕсли;
			ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиСтрока);
			НомерПП = НомерПП + 1;
		КонецЦикла;
		
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиИтого);
	
	ОбластьПустаяСтрока	= Макет.ПолучитьОбласть("ВысокаяСтрока");
	
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
	
	Пока НумероватьСтраницы И ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Цикл
		ДокументРезультат.Вывести(ОбластьПустаяСтрока);
	КонецЦикла;
	ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
	
	НомерПоследнейСтраницы = ТекущийНомерСтраницы - 1;
	
	Возврат ПечатныеФормы;
		
КонецФункции

Функция ПустойРаздел25РасчетаРСВ1(Организация, ДатаПодписи, НумероватьСтраницы = Истина, НомерСтраницы = 1) Экспорт

	Макет = ПолучитьМакет("ФормаРаздел25");
	
	ОбластьВерхнийКолонтитул	= Макет.ПолучитьОбласть("ВерхнийКолонтитул");
	ОбластьНижнийКолонтитул		= Макет.ПолучитьОбласть("НижнийКолонтитул");
	ОбластьПустаяСтрока	= Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьИсходныеПачкиНачало = Макет.ПолучитьОбласть("ИсходныеПачкиНачало");
	ОбластьИсходныеПачкиИтого = Макет.ПолучитьОбласть("ИсходныеПачкиИтого");
	ОбластьИсходныеПачкиСтрока = Макет.ПолучитьОбласть("ИсходныеПачкиСтрока");
	ОбластьКорректирующиеПачкиНачало = Макет.ПолучитьОбласть("КорректирующиеПачкиНачало");
	ОбластьКорректирующиеПачкиИтого = Макет.ПолучитьОбласть("КорректирующиеПачкиИтого");
	ОбластьКорректирующиеПачкиСтрока = Макет.ПолучитьОбласть("КорректирующиеПачкиСтрока");

	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	ВыводимыеОбласти.Добавить(ОбластьНижнийКолонтитул);
	ВыводимыеОбласти.Добавить(ОбластьПустаяСтрока);
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Раздел25РасчетаРСВ_1";
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	РегистрационныйНомерПФР = ?(ЗначениеЗаполнено(Организация),СтрЗаменить(ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Организация, "РегистрационныйНомерПФР")," ",""), "");
	РегистрационныйНомерПФР = СтрЗаменить(РегистрационныйНомерПФР,"-","");
	ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(РегистрационныйНомерПФР, ОбластьВерхнийКолонтитул, "НомРег", 12);
	ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, НомерСтраницы, ОбластьВерхнийКолонтитул);
	ОбластьНижнийКолонтитул.Параметры.ДатаПодписиПолная = Формат(ДатаПодписи, "ДФ=dd.MM.yyyy; ДП=' '");
	
	ДокументРезультат.Вывести(ОбластьВерхнийКолонтитул);
	ДокументРезультат.Вывести(ОбластьИсходныеПачкиНачало);
	Для Сч = 1 По 6 Цикл
		ДокументРезультат.Вывести(ОбластьИсходныеПачкиСтрока);
	КонецЦикла; 
	ДокументРезультат.Вывести(ОбластьИсходныеПачкиИтого);
	ДокументРезультат.Вывести(ОбластьПустаяСтрока);
	ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиНачало);
	Для Сч = 1 По 4 Цикл
		ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиСтрока);
	КонецЦикла; 
	ДокументРезультат.Вывести(ОбластьКорректирующиеПачкиИтого);
	Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти, Ложь) Цикл
		ДокументРезультат.Вывести(ОбластьПустаяСтрока);
	КонецЦикла;
	ДокументРезультат.Вывести(ОбластьНижнийКолонтитул);
	
	Возврат ДокументРезультат
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////

Функция СформироватьЗапросПоШапке2014(Ссылка) Экспорт 

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пачки.ДокументПачка КАК ДокументПачка
	|ПОМЕСТИТЬ ВТПачки
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК Пачки
	|ГДЕ
	|	Пачки.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ДанныеПачек.КоличествоИсходных) КАК КоличествоИсходных,
	|	СУММА(ДанныеПачек.КоличествоКорректирующих) КАК КоличествоКорректирующих,
	|	СУММА(ДанныеПачек.НачисленоСтраховаяИсходных) КАК НачисленоСтраховая,
	|	СУММА(ДанныеПачек.ДоначисленоСтраховая) КАК ДоначисленоСтраховая,
	|	СУММА(ДанныеПачек.ДоначисленоНакопительная) КАК ДоначисленоНакопительная,
	|	СУММА(ДанныеПачек.ДоначисленоНаОПС) КАК ДоначисленоНаОПС
	|ПОМЕСТИТЬ ВТКоличествоФизлиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		ФормыСЗВ_6_1и2.ФизЛицо КАК КоличествоФизлиц,
	|		0 КАК КоличествоИсходных,
	|		1 КАК КоличествоКорректирующих,
	|		0 КАК НачисленоСтраховаяИсходных,
	|		ФормыСЗВ_6_1и2.ДоначисленоСтраховая КАК ДоначисленоСтраховая,
	|		ФормыСЗВ_6_1и2.ДоначисленоНакопительная КАК ДоначисленоНакопительная,
	|		0 КАК ДоначисленоНаОПС
	|	ИЗ
	|		Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК ФормыСЗВ_6_1и2
	|	ГДЕ
	|		ФормыСЗВ_6_1и2.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)
	|		И ФормыСЗВ_6_1и2.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ФормыСЗВ_6_4.ФизЛицо,
	|		0,
	|		1,
	|		0,
	|		ФормыСЗВ_6_4.ДоначисленоСтраховая,
	|		ФормыСЗВ_6_4.ДоначисленоНакопительная,
	|		0
	|	ИЗ
	|		Документ.ПачкаДокументовСЗВ_6_4.РаботникиОрганизации КАК ФормыСЗВ_6_4
	|	ГДЕ
	|		ФормыСЗВ_6_4.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)
	|		И ФормыСЗВ_6_4.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Разделы6РасчетаРСВ_1.ФизЛицо,
	|		ВЫБОР
	|			КОГДА Разделы6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Разделы6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Разделы6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА Разделы6РасчетаРСВ_1.НачисленоСтраховая
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		0,
	|		0,
	|		ВЫБОР
	|			КОГДА Разделы6РасчетаРСВ_1.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|				ТОГДА 0
	|			ИНАЧЕ Разделы6РасчетаРСВ_1.ДоначисленоСтраховая
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК Разделы6РасчетаРСВ_1
	|	ГДЕ
	|		Разделы6РасчетаРСВ_1.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)) КАК ДанныеПачек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|	И ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Док.Номер,
	|	Док.Дата,
	|	Док.Организация,
	|	Док.Организация.ЮрФизЛицо,
	|	Док.Организация.ОГРН,
	|	Док.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	|	Док.Организация.НаименованиеСокращенное КАК ОрганизацияНаименованиеСокращенное,
	|	Док.Организация.Наименование,
	|	ЕСТЬNULL(Док.Организация.РегистрационныйНомерПФР, """") КАК ОрганизацияРегистрационныйНомерПФР,
	|	Док.Организация.НаименованиеОКОПФ,
	|	Док.Организация.ИНН,
	|	Док.Организация.КПП,
	|	Док.Организация.КодПоОКПО КАК ОКПО,
	|	ЕСТЬNULL(Док.РасчетРСВ1.НомерПачки, Док.НомерПачки) КАК НомерПачки,
	|	Док.ОтчетныйПериод,
	|	ЗНАЧЕНИЕ(Перечисление.ФорматФайлаПФР.Версия07) КАК ФорматФайла,
	|	ЕСТЬNULL(ДанныеПоФизлицам.КоличествоИсходных, 0) КАК КолЗЛИсходных,
	|	ЕСТЬNULL(ДанныеПоФизлицам.КоличествоКорректирующих, 0) КАК КолЗЛКорректирующих,
	|	ЕСТЬNULL(ДанныеПоФизлицам.ДоначисленоСтраховая, 0) КАК ДоначисленоСтраховая,
	|	ЕСТЬNULL(ДанныеПоФизлицам.ДоначисленоНакопительная, 0) КАК ДоначисленоНакопительная,
	|	ЕСТЬNULL(ДанныеПоФизлицам.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(ДанныеПоФизлицам.ДоначисленоНаОПС, 0) КАК ДоначисленоНаОПС,
	|	ЕСТЬNULL(Доходы.ОблагаетсяВзносамиДоПредельнойВеличины, 0) КАК ОблагаетсяВзносамиДоПредельнойВеличины
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоФизлиц КАК ДанныеПоФизлицам
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходы КАК Доходы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции 

Функция ЗапросПоИсходнымПачкам2014(Ссылка) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.НомерСтроки КАК НомерСтроки,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка.Организация.РегистрационныйНомерПФР,
	|	ПачкаРазделов6РасчетаРСВ_1.НомерПачки КАК НомерПачки
	|ПОМЕСТИТЬ ВТПачки
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
	|		ПО ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка = ПачкаРазделов6РасчетаРСВ_1.Ссылка
	|ГДЕ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка = &Ссылка
	|	И ПачкаРазделов6РасчетаРСВ_1.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ФизЛицо) КАК КоличествоЗЛ,
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка
	|ПОМЕСТИТЬ ВТВзносы
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка,
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	СУММА(ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок) КАК Заработок
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|	И ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пачки.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(Пачки.НомерПачки, """") КАК НомерПачки,
	|	ЕСТЬNULL(Пачки.ОрганизацияРегистрационныйНомерПФР, """") КАК ОрганизацияРегистрационныйНомерПФР,
	|	ЕСТЬNULL(Взносы.КоличествоЗЛ, 0) КАК КоличествоЗЛ,
	|	ЕСТЬNULL(Взносы.НачисленоСтраховая, 0) КАК НачисленоСтраховая,
	|	ЕСТЬNULL(Доходы.ОблагаетсяВзносамиДоПредельнойВеличины, 0) КАК ОблагаетсяВзносамиДоПредельнойВеличины,
	|	ЕСТЬNULL(Взносы.КоличествоЗЛ, 0) КАК КоличествоЗЛвПачке,
	|	ЕСТЬNULL(Взносы.НачисленоСтраховая, 0) КАК СтраховыхВзносовОПС,
	|	ЕСТЬNULL(Доходы.ОблагаетсяВзносамиДоПредельнойВеличины, 0) КАК БазаДляНачисленияСтраховыхВзносовНеПревышающаяПредельную,
	|	ЗНАЧЕНИЕ(Перечисление.ФорматФайлаПФР.Версия07) КАК ФорматФайла,
	|	ЕСТЬNULL(ПОДСТРОКА(АрхивДанныхРегламентированнойОтчетности.Данные, 1, 200), """") КАК ЧастьТекстаФайла,
	|	ЕСТЬNULL(Доходы.ОблагаетсяВзносамиСвышеПредельнойВеличины, 0) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины,
	|	ЕСТЬNULL(Доходы.Заработок, 0) КАК Заработок
	|ИЗ
	|	ВТПачки КАК Пачки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
	|		ПО Пачки.ДокументПачка = Взносы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходы КАК Доходы
	|		ПО Пачки.ДокументПачка = Доходы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АрхивДанныхРегламентированнойОтчетности КАК АрхивДанныхРегламентированнойОтчетности
	|		ПО Пачки.ДокументПачка = АрхивДанныхРегламентированнойОтчетности.Объект
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции 

Функция ЗапросПоКорректирующимПачкам2014(Ссылка) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка" , Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.НомерСтроки КАК НомерСтроки,
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка.Организация.РегистрационныйНомерПФР
	|ПОМЕСТИТЬ ВТПачки
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|ГДЕ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка = &Ссылка
	|	И ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ДанныеПачек.КоличествоКорректирующих) КАК КоличествоЗЛ,
	|	СУММА(ДанныеПачек.ДоначисленоСтраховая) КАК ДоначисленоСтраховая,
	|	СУММА(ДанныеПачек.ДоначисленоНакопительная) КАК ДоначисленоНакопительная,
	|	СУММА(ДанныеПачек.ДоначисленоНаОПС) КАК ДоначисленоНаОПС,
	|	ДанныеПачек.Ссылка,
	|	ДанныеПачек.КорректируемыйПериод,
	|	ДанныеПачек.НомерПачки
	|ПОМЕСТИТЬ ВТСведенияОПачках
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 КАК КоличествоКорректирующих,
	|		ФормыСЗВ_6_1и2.ДоначисленоСтраховая КАК ДоначисленоСтраховая,
	|		ФормыСЗВ_6_1и2.ДоначисленоНакопительная КАК ДоначисленоНакопительная,
	|		0 КАК ДоначисленоНаОПС,
	|		ФормыСЗВ_6_1и2.Ссылка КАК Ссылка,
	|		ФормыСЗВ_6_1и2.Ссылка.КорректируемыйПериод КАК КорректируемыйПериод,
	|		ФормыСЗВ_6_1и2.Ссылка.НомерПачки КАК НомерПачки
	|	ИЗ
	|		Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК ФормыСЗВ_6_1и2
	|	ГДЕ
	|		ФормыСЗВ_6_1и2.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1,
	|		ФормыСЗВ_6_4.ДоначисленоСтраховая,
	|		ФормыСЗВ_6_4.ДоначисленоНакопительная,
	|		0,
	|		ФормыСЗВ_6_4.Ссылка,
	|		ФормыСЗВ_6_4.Ссылка.КорректируемыйПериод,
	|		ФормыСЗВ_6_4.Ссылка.НомерПачки
	|	ИЗ
	|		Документ.ПачкаДокументовСЗВ_6_4.РаботникиОрганизации КАК ФормыСЗВ_6_4
	|	ГДЕ
	|		ФормыСЗВ_6_4.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)
	|		И ФормыСЗВ_6_4.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1,
	|		0,
	|		0,
	|		Разделы6РасчетаРСВ_1.ДоначисленоСтраховая,
	|		Разделы6РасчетаРСВ_1.Ссылка,
	|		Разделы6РасчетаРСВ_1.Ссылка.КорректируемыйПериод,
	|		Разделы6РасчетаРСВ_1.Ссылка.НомерПачки
	|	ИЗ
	|		Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК Разделы6РасчетаРСВ_1
	|	ГДЕ
	|		Разделы6РасчетаРСВ_1.Ссылка В
	|				(ВЫБРАТЬ
	|					Ссылки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Ссылки)) КАК ДанныеПачек
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПачек.Ссылка,
	|	ДанныеПачек.КорректируемыйПериод,
	|	ДанныеПачек.НомерПачки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пачки.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ФорматФайлаПФР.Версия07) КАК ФорматФайла,
	|	ЕСТЬNULL(СведенияОПачках.НомерПачки, """") КАК НомерПачки,
	|	ЕСТЬNULL(Пачки.ОрганизацияРегистрационныйНомерПФР, """") КАК ОрганизацияРегистрационныйНомерПФР,
	|	ГОД(СведенияОПачках.КорректируемыйПериод) КАК КорректируемыйГод,
	|	НАЧАЛОПЕРИОДА(СведенияОПачках.КорректируемыйПериод, КВАРТАЛ) КАК КорректируемыйПериод,
	|	ЕСТЬNULL(СведенияОПачках.КоличествоЗЛ, 0) КАК КоличествоЗЛ,
	|	ЕСТЬNULL(СведенияОПачках.ДоначисленоСтраховая, 0) КАК ДоначисленоСтраховая,
	|	ЕСТЬNULL(СведенияОПачках.ДоначисленоНакопительная, 0) КАК ДоначисленоНакопительная,
	|	ЕСТЬNULL(СведенияОПачках.ДоначисленоНаОПС, 0) КАК ДоначисленоНаОПС,
	|	ЕСТЬNULL(СведенияОПачках.КоличествоЗЛ, 0) КАК КоличествоЗЛвПачке,
	|	ЕСТЬNULL(СведенияОПачках.ДоначисленоСтраховая, 0) КАК ДоначисленоНаСтраховуюЧасть,
	|	ЕСТЬNULL(СведенияОПачках.ДоначисленоНакопительная, 0) КАК ДоначисленоНаНакопительнуюЧасть,
	|	ЕСТЬNULL(СведенияОПачках.ДоначисленоНаОПС, 0) КАК ДоначисленоСтраховыхВзносовОПС,
	|	ЕСТЬNULL(ПОДСТРОКА(АрхивДанныхРегламентированнойОтчетности.Данные, 1, 200), """") КАК ЧастьТекстаФайла
	|ИЗ
	|	ВТПачки КАК Пачки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОПачках КАК СведенияОПачках
	|		ПО Пачки.ДокументПачка = СведенияОПачках.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АрхивДанныхРегламентированнойОтчетности КАК АрхивДанныхРегламентированнойОтчетности
	|		ПО Пачки.ДокументПачка = АрхивДанныхРегламентированнойОтчетности.Объект
	|
	|УПОРЯДОЧИТЬ ПО
	|	КорректируемыйПериод,
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции 

////////////////////////////////////////////////////////////////////////////////

Функция СформироватьЗапросДляПроверкиПачек(Ссылка)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пачки.НомерСтроки КАК НомерСтроки,
	|	Пачки.ДокументПачка КАК ДокументПачка,
	|	МИНИМУМ(Пачки2.НомерСтроки) КАК НомерПовторяющийсяСтроки,
	|	МИНИМУМ(Пачки3.НомерСтроки) КАК НомерСтрокиПовторяющегосяНомераПачки,
	|	Пачки.ДокументПачка.Организация КАК Организация,
	|	Пачки.ДокументПачка.НомерПачки КАК НомерПачки,
	|	Пачки.ДокументПачка.ОтчетныйПериод КАК ОтчетныйПериод
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК Пачки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК Пачки2
	|		ПО Пачки.Ссылка = Пачки2.Ссылка
	|			И Пачки.ДокументПачка = Пачки2.ДокументПачка
	|			И Пачки.НомерСтроки < Пачки2.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК Пачки3
	|		ПО Пачки.Ссылка = Пачки3.Ссылка
	|			И Пачки.ДокументПачка <> Пачки3.ДокументПачка
	|			И Пачки.ДокументПачка.НомерПачки = Пачки3.ДокументПачка.НомерПачки
	|			И Пачки.НомерСтроки < Пачки2.НомерСтроки
	|ГДЕ
	|	Пачки.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Пачки.НомерСтроки,
	|	Пачки.ДокументПачка,
	|	Пачки.ДокументПачка.Организация,
	|	Пачки.ДокументПачка.НомерПачки,
	|	Пачки.ДокументПачка.ОтчетныйПериод";
	
	Возврат Запрос.Выполнить();

КонецФункции 

// Проверяет правильность заполнения шапки документа
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок, СообщенияРазделПроверки = Неопределено)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок,,,СообщенияРазделПроверки);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОтчетныйПериод) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан отчетный период!", Отказ, Заголовок,,,СообщенияРазделПроверки);
	ИначеЕсли ВыборкаПоШапкеДокумента.ОтчетныйПериод < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Тогда	
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаДействия) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата действия!", Отказ, Заголовок,,,СообщенияРазделПроверки);
		КонецЕсли;
	
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Ответственный) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано ответственное лицо!", Отказ, Заголовок,,,СообщенияРазделПроверки);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ПроверитьЗаполнениеПачек(ВыборкаПоПачкам,ВыборкаПоШапкеДокумента, Отказ, Заголовок = "", СообщенияРазделПроверки)
	
	Пока ВыборкаПоПачкам.Следующий() Цикл
	
		Если НЕ ЗначениеЗаполнено(ВыборкаПоПачкам.ДокументПачка) тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Строка таблицы пачек № "+ ВыборкаПоПачкам.НомерСтроки + ": Не указан документ-пачка!", Отказ, Заголовок,,,СообщенияРазделПроверки);
			Возврат;
		КонецЕсли;	 
		
		Если ВыборкаПоПачкам.ОтчетныйПериод <> ВыборкаПоШапкеДокумента.ОтчетныйПериод тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Строка таблицы пачек № "+ ВыборкаПоПачкам.НомерСтроки + ": Отчетный период документа-пачки отличается от указанного!", Отказ, Заголовок,,,СообщенияРазделПроверки);
		КонецЕсли;	 
		
		Если ВыборкаПоПачкам.Организация <> ВыборкаПоШапкеДокумента.Организация тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Строка таблицы пачек № "+ ВыборкаПоПачкам.НомерСтроки + ": " + ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Документ-пачка оформлен на другую организацию!"), Отказ, Заголовок,,,СообщенияРазделПроверки);
		КонецЕсли;	 
		
		// Проверка на уникальность номеров пачек 
		Если ВыборкаПоПачкам.НомерПачки = ВыборкаПоШапкеДокумента.НомерПачки Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Строка таблицы пачек № "+ ВыборкаПоПачкам.НомерСтроки + ": Пачка сведений перс.учета имеет тот же ""номер пачки"", что и расчет РСВ-1, рекомендуется изменить номер пачки в РСВ-1", Отказ, Заголовок,,,СообщенияРазделПроверки);
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаПоПачкам.НомерСтрокиПовторяющегосяНомераПачки) тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Строка таблицы пачек № "+ ВыборкаПоПачкам.НомерСтрокиПовторяющегосяНомераПачки+": ""Номер пачки"" этой пачки сведений перс.учета повторяется в других пачках перс.учета!", Отказ, Заголовок,,,СообщенияРазделПроверки);
		КонецЕсли;
		
		//Контроль дубля пачек документов
		Если ВыборкаПоПачкам.НомерПовторяющийсяСтроки <> NULL тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Строка таблицы пачек № "+ВыборкаПоПачкам.НомерПовторяющийсяСтроки+": Документ-пачка указан дважды!", Отказ, Заголовок,,,СообщенияРазделПроверки);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, НомерСтраницы, ОбластьКолонтитула)

	Если НумероватьСтраницы Тогда
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(НомерСтраницы,"ЧГ=0"), 6, "0", "Слева"), ОбластьКолонтитула, "НомСтр", 6);
	КонецЕсли;

КонецПроцедуры

Функция НовыйЛистРаздела(ПечатныеФормы, НумероватьСтраницы, ТекущийНомерСтраницы, НомерПервойСтраницы, ОбластьВерхнийКолонтитул)

	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Раздел25РасчетаРСВ_1";
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	СтрокаОписания = ПечатныеФормы.Добавить();
	СтрокаОписания.Представление = ДокументРезультат;
	СтрокаОписания.Описание = "Раздел 2.5";
	
	ПроставитьНомерСтраницыВЯчейках(НумероватьСтраницы, ТекущийНомерСтраницы, ОбластьВерхнийКолонтитул);
	ДокументРезультат.Вывести(ОбластьВерхнийКолонтитул);
	ТекущийНомерСтраницы = ТекущийНомерСтраницы + 1;
	
	Возврат ДокументРезультат

КонецФункции


////////////////////////////////////////////////////////////////////////////////

Функция ДочерниеКатегории(Категория, СоответствиеКатегорий)
	
	СтрокаСообщения = "";
	Для каждого ЭлементСоответствияКатегорий Из СоответствиеКатегорий Цикл
		Если Категория = ЭлементСоответствияКатегорий.Значение Тогда
			СтрокаСообщения = СтрокаСообщения + ?(ПустаяСтрока(СтрокаСообщения),"",", ") + ОбщегоНазначенияЗК.ПолучитьИмяЭлементаПеречисленияПоЗначению(ЭлементСоответствияКатегорий.Ключ)
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокаСообщения
	
КонецФункции 

Процедура ПроверитьКомплектДокументов(Ссылка, РСВ1, ИтогиДоходовИВзносов = Неопределено, ИтогиДоходовВредников = Неопределено) Экспорт
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	РазделСверкиРСВ1иПерсучета = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Разделов 1, 2.1, 2.2, 2.3 и 2.4 Расчета РСВ-1 с данными перс.учета по Разделам 6", Перечисления.ВидыСообщений.Информация);
	
	ДанныеПерсучета = ОбщегоНазначенияЗК.ПолучитьЗначенияРеквизитов(Ссылка,"Организация, ОтчетныйПериод");
	Организация = ДанныеПерсучета.Организация;
	ОтчетныйПериодПерсучета = ДанныеПерсучета.ОтчетныйПериод;
	
	ДанныеРСВ1 = ОбщегоНазначенияЗК.ПолучитьЗначенияРеквизитов(РСВ1,"Организация,ДатаОкончания,ДанныеОтчета");
	ОтчетныйПериодРСВ1 = ПроцедурыПерсонифицированногоУчета.НачалоОтчетногоПериодаПерсучета(ДанныеРСВ1.ДатаОкончания);
	
	// первичная сверка организации и отчетного периода
	Если ДанныеРСВ1.Организация <> Организация или ОтчетныйПериодРСВ1 <> ОтчетныйПериодПерсучета Тогда
		Если ДанныеРСВ1.Организация <> Организация Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Расчет РСВ-1 оформлен на " + ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("другую организацию!"), ,,,,РазделСверкиРСВ1иПерсучета);
		КонецЕсли;
		Если ОтчетныйПериодРСВ1 <> ОтчетныйПериодПерсучета Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Период Расчета РСВ-1 не соответствует отчетному периоду сведений", ,,,,РазделСверкиРСВ1иПерсучета);
		КонецЕсли;
		Возврат	
	КонецЕсли;
	
	// данные разделов 1-2.4 РСВ-1
	
	ИмяРаздела = "ПолеТабличногоДокументаТитульный";
	ИмяПоля = "НомРег1";
	Значение = Неопределено;
	ПоказателиОтчета = Неопределено;
	Данные = ДанныеРСВ1.ДанныеОтчета.Получить();
	Если ТипЗнч(Данные) = Тип("Структура") И Данные.Свойство("ПоказателиОтчета",Значение) Тогда
		ПоказателиОтчета = Значение;
		Если ТипЗнч(ПоказателиОтчета) = Тип("Структура") И ПоказателиОтчета.Свойство(ИмяРаздела,Значение) Тогда
			Если ТипЗнч(Значение) = Тип("Структура") И Значение.Свойство(ИмяПоля,Значение) Тогда
			Иначе 
				ПоказателиОтчета = Неопределено;
			КонецЕсли;	
		Иначе 
			ПоказателиОтчета = Неопределено;
		КонецЕсли;
	Иначе 
		ПоказателиОтчета = Неопределено;
	КонецЕсли;
	Если ПоказателиОтчета = Неопределено Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не удалось разобрать данные указанного Расчета РСВ-1!",,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
		Возврат	
	КонецЕсли;
	
	КоличествоЗастрахованныхРСВ1 = 0;
	ТитульныйЛист = ПоказателиОтчета.ПолеТабличногоДокументаТитульный;
	СтрокаЧисла = "";
	Для Сч = 1 По 6 Цикл
		Цифра = ТитульныйЛист["КолЗастрахованных" + Сч];
		Если ЗначениеЗаполнено(Цифра) Тогда
			СтрокаЧисла = СтрокаЧисла + Цифра
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(СтрокаЧисла) Тогда
		КоличествоЗастрахованныхРСВ1 = Число(СтрокаЧисла)
	КонецЕсли;
	
	СоответствиеКатегорий = ПроцедурыПерсонифицированногоУчета.СоответствиеКатегорийИностранцевКатегориямРоссиян();
	
	СоответствиеКодовТарифа = Новый Соответствие;
	СоответствиеКодовТарифа.Вставить("01", Перечисления.КатегорииЗастрахованныхЛицПФР.НР);
	СоответствиеКодовТарифа.Вставить("03", Перечисления.КатегорииЗастрахованныхЛицПФР.ООИ);
	СоответствиеКодовТарифа.Вставить("04", Перечисления.КатегорииЗастрахованныхЛицПФР.ЕСХН);
	СоответствиеКодовТарифа.Вставить("06", Перечисления.КатегорииЗастрахованныхЛицПФР.ОДИТ);
	СоответствиеКодовТарифа.Вставить("07", Перечисления.КатегорииЗастрахованныхЛицПФР.ПНЭД);
	СоответствиеКодовТарифа.Вставить("08", Перечисления.КатегорииЗастрахованныхЛицПФР.ХО);
	СоответствиеКодовТарифа.Вставить("09", Перечисления.КатегорииЗастрахованныхЛицПФР.СМИ);
	СоответствиеКодовТарифа.Вставить("10", Перечисления.КатегорииЗастрахованныхЛицПФР.ИЦС);
	СоответствиеКодовТарифа.Вставить("11", Перечисления.КатегорииЗастрахованныхЛицПФР.АСБ);
	СоответствиеКодовТарифа.Вставить("12", Перечисления.КатегорииЗастрахованныхЛицПФР.АСБ);
	СоответствиеКодовТарифа.Вставить("13", Перечисления.КатегорииЗастрахованныхЛицПФР.АСБ);
	СоответствиеКодовТарифа.Вставить("14", Перечисления.КатегорииЗастрахованныхЛицПФР.ИНЖУ);
	СоответствиеКодовТарифа.Вставить("15", Перечисления.КатегорииЗастрахованныхЛицПФР.ЧЭС);
	СоответствиеКодовТарифа.Вставить("16", Перечисления.КатегорииЗастрахованныхЛицПФР.ПНЭД);
	СоответствиеКодовТарифа.Вставить("18", Перечисления.КатегорииЗастрахованныхЛицПФР.СХ);
	СоответствиеКодовТарифа.Вставить("19", Перечисления.КатегорииЗастрахованныхЛицПФР.ХМН);
	СоответствиеКодовТарифа.Вставить("23", Перечисления.КатегорииЗастрахованныхЛицПФР.КРС);
	СоответствиеКодовТарифа.Вставить("24", Перечисления.КатегорииЗастрахованныхЛицПФР.ТОР);
	СоответствиеКодовТарифа.Вставить("25", Перечисления.КатегорииЗастрахованныхЛицПФР.СПВЛ);
	СоответствиеКодовТарифа.Вставить("36", Перечисления.КатегорииЗастрахованныхЛицПФР.ТВЭЗ);
	СоответствиеКодовТарифа.Вставить("52", Перечисления.КатегорииЗастрахованныхЛицПФР.НР);
	СоответствиеКодовТарифа.Вставить("53", Перечисления.КатегорииЗастрахованныхЛицПФР.НР);
	
	МассивКатегорийРСВ1 = Новый Массив;
	
	ОбъектОбложенияРСВ1_1 = 0;
	ОблагаемаяБазаРСВ1_1 = 0;
	БазаСверхПредельнойРСВ1_1 = 0;
	ОбъектОбложенияРСВ1_2 = 0;
	ОблагаемаяБазаРСВ1_2 = 0;
	БазаСверхПредельнойРСВ1_2 = 0;
	ОбъектОбложенияРСВ1_3 = 0;
	ОблагаемаяБазаРСВ1_3 = 0;
	БазаСверхПредельнойРСВ1_3 = 0;
	
	Строка20604 = 0;
	Строка20605 = 0;
	Строка20606 = 0;
	
	НачисленоВзносовРСВ1 = ПоказателиОтчета.ПолеТабличногоДокументаРаздел1.П000100011403;
	
	Для каждого ЛистДанных Из Данные.ДанныеМногостраничныхРазделов.Раздел21 Цикл
		
		ПоказателиРазделов = ЛистДанных.Данные;
		
		КодТарифа = ПоказателиРазделов.П000210001001 + ПоказателиРазделов.П000210001002;
		ЗначениеПеречисления = СоответствиеКодовТарифа[КодТарифа];
		Если ЗначениеПеречисления = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТребуютсяДанныеПерсучета = ЗначениеЗаполнено(ПоказателиРазделов.П000210020004) Или ЗначениеЗаполнено(ПоказателиРазделов.П000210020005) Или ЗначениеЗаполнено(ПоказателиРазделов.П000210020006);
		Если ТребуютсяДанныеПерсучета И МассивКатегорийРСВ1.Найти(ЗначениеПеречисления) = Неопределено Тогда
			МассивКатегорийРСВ1.Добавить(ЗначениеПеречисления);
		КонецЕсли;
		
		ОбъектОбложенияРСВ1_1 = ОбъектОбложенияРСВ1_1 + ПоказателиРазделов.П000210020004 - ПоказателиРазделов.П000210020104;
		ОблагаемаяБазаРСВ1_1 = ОблагаемаяБазаРСВ1_1 + ПоказателиРазделов.П000210020404;
		БазаСверхПредельнойРСВ1_1 = БазаСверхПредельнойРСВ1_1 + ПоказателиРазделов.П000210020304;
		ОбъектОбложенияРСВ1_2 = ОбъектОбложенияРСВ1_2 + ПоказателиРазделов.П000210020005 - ПоказателиРазделов.П000210020105;
		ОблагаемаяБазаРСВ1_2 = ОблагаемаяБазаРСВ1_2 + ПоказателиРазделов.П000210020405;
		БазаСверхПредельнойРСВ1_2 = БазаСверхПредельнойРСВ1_2 + ПоказателиРазделов.П000210020305;
		ОбъектОбложенияРСВ1_3 = ОбъектОбложенияРСВ1_3 + ПоказателиРазделов.П000210020006 - ПоказателиРазделов.П000210020106;
		ОблагаемаяБазаРСВ1_3 = ОблагаемаяБазаРСВ1_3 + ПоказателиРазделов.П000210020406;
		БазаСверхПредельнойРСВ1_3 = БазаСверхПредельнойРСВ1_3 + ПоказателиРазделов.П000210020306;
		
		Строка20604 = Строка20604 + ПоказателиРазделов.П000210020604;
		Строка20605 = Строка20605 + ПоказателиРазделов.П000210020605;
		Строка20606 = Строка20606 + ПоказателиРазделов.П000210020606;
		
	КонецЦикла; 
	
	НачисленоВзносовРСВ1 = НачисленоВзносовРСВ1 - Строка20604 - Строка20605 - Строка20606;
	
	ДоходыВредниковИсходныхПачек = ДоходыВредниковИсходныхПачек2014(Ссылка, ОтчетныйПериодПерсучета);
	ДоходыВредниковРСВ1 = ДоходыВредниковИсходныхПачек.СкопироватьКолонки();
	
	Раздел22 = ПоказателиОтчета.ПолеТабличногоДокументаРаздел22;
	НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка();
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах0 = Раздел22.П000220022303;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах1 = Раздел22.П000220022304;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах2 = Раздел22.П000220022305;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах3 = Раздел22.П000220022306;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах0 = Раздел22.П000230023303;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах1 = Раздел22.П000230023304;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах2 = Раздел22.П000230023305;
	НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах3 = Раздел22.П000230023306;
	НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный;
	НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4;
	НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3;
	НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2;
	НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
	НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1;
	
	Для каждого ЛистДанных Из Данные.ДанныеМногостраничныхРазделов.Раздел24 Цикл
		
		ПоказателиРазделов = ЛистДанных.Данные;
		Если ПоказателиРазделов.П000240001001 = "1" Тогда
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах0 = ПоказателиРазделов.П000240024303;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах1 = ПоказателиРазделов.П000240024304;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах2 = ПоказателиРазделов.П000240024305;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах3 = ПоказателиРазделов.П000240024306;
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах0 = ПоказателиРазделов.П000240024903;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах1 = ПоказателиРазделов.П000240024904;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах2 = ПоказателиРазделов.П000240024905;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах3 = ПоказателиРазделов.П000240024906;
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах0 = ПоказателиРазделов.П000240025503;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах1 = ПоказателиРазделов.П000240025504;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах2 = ПоказателиРазделов.П000240025505;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах3 = ПоказателиРазделов.П000240025506;
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах0 = ПоказателиРазделов.П000240026103;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах1 = ПоказателиРазделов.П000240026104;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах2 = ПоказателиРазделов.П000240026105;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах3 = ПоказателиРазделов.П000240026106;
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах0 = ПоказателиРазделов.П000240026703;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах1 = ПоказателиРазделов.П000240026704;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах2 = ПоказателиРазделов.П000240026705;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах3 = ПоказателиРазделов.П000240026706;
		ИначеЕсли ПоказателиРазделов.П000240001001 = "2" Тогда
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах0 = ПоказателиРазделов.П000240024303;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах1 = ПоказателиРазделов.П000240024304;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах2 = ПоказателиРазделов.П000240024305;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах3 = ПоказателиРазделов.П000240024306;
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах0 = ПоказателиРазделов.П000240024903;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах1 = ПоказателиРазделов.П000240024904;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах2 = ПоказателиРазделов.П000240024905;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах3 = ПоказателиРазделов.П000240024906;
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах0 = ПоказателиРазделов.П000240025503;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах1 = ПоказателиРазделов.П000240025504;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах2 = ПоказателиРазделов.П000240025505;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах3 = ПоказателиРазделов.П000240025506;
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах0 = ПоказателиРазделов.П000240026103;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах1 = ПоказателиРазделов.П000240026104;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах2 = ПоказателиРазделов.П000240026105;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах3 = ПоказателиРазделов.П000240026106;
			НоваяСтрока = ДоходыВредниковРСВ1.Добавить();
			НоваяСтрока.КлассУсловийТруда = Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах0 = ПоказателиРазделов.П000240026703;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах1 = ПоказателиРазделов.П000240026704;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах2 = ПоказателиРазделов.П000240026705;
			НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах3 = ПоказателиРазделов.П000240026706;
		КонецЕсли;
		
	КонецЦикла;
	
	ДоходыВредниковРСВ1.Свернуть("КлассУсловийТруда","ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах0, ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах1,"
		+ "ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах2, ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах3,"
		+ "ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах0, ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах1,"
		+ "ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах2, ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах3");
		
	ДоходыВредниковРСВ1.Сортировать("КлассУсловийТруда");
	ДоходыВредниковИсходныхПачек.Сортировать("КлассУсловийТруда");
	
	// данные перс.учета
	
	Если ИтогиДоходовИВзносов = Неопределено Тогда
		ИтогиДоходовИВзносов = ЗапросПоИсходнымПачкам2014(Ссылка).Выгрузить()
	КонецЕсли;
	
	НачисленоВзносовВПерсучете = ИтогиДоходовИВзносов.Итог("НачисленоСтраховая");
	КоличествоЗастрахованныхВПерсучете = ИтогиДоходовИВзносов.Итог("КоличествоЗЛвПачке");
	
	ДоходыИсходныхПачек = ДоходыИсходныхПачек2014(Ссылка, ОтчетныйПериодПерсучета);
	ДоходыИсходныхПачек.Колонки.Добавить("РодительскаяКатегорияЗастрахованныхЛиц", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииЗастрахованныхЛицПФР"));
	
	ОбъектОбложенияВПерсучете_1 = ДоходыИсходныхПачек.Итог("Заработок1");
	ОблагаемаяБазаВПерсучете_1 = ДоходыИсходныхПачек.Итог("ОблагаетсяВзносамиДоПредельнойВеличины1");
	БазаСверхПредельнойВПерсучете_1 = ДоходыИсходныхПачек.Итог("ОблагаетсяВзносамиСвышеПредельнойВеличины1");
	ОбъектОбложенияВПерсучете_2 = ДоходыИсходныхПачек.Итог("Заработок2");
	ОблагаемаяБазаВПерсучете_2 = ДоходыИсходныхПачек.Итог("ОблагаетсяВзносамиДоПредельнойВеличины2");
	БазаСверхПредельнойВПерсучете_2 = ДоходыИсходныхПачек.Итог("ОблагаетсяВзносамиСвышеПредельнойВеличины2");
	ОбъектОбложенияВПерсучете_3 = ДоходыИсходныхПачек.Итог("Заработок3");
	ОблагаемаяБазаВПерсучете_3 = ДоходыИсходныхПачек.Итог("ОблагаетсяВзносамиДоПредельнойВеличины3");
	БазаСверхПредельнойВПерсучете_3 = ДоходыИсходныхПачек.Итог("ОблагаетсяВзносамиСвышеПредельнойВеличины3");
	
	МассивКатегорийПерсучета = Новый Массив;
	Для каждого СтрокаТЗ Из ДоходыИсходныхПачек Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЗ.Заработок1) И Не ЗначениеЗаполнено(СтрокаТЗ.Заработок2) И Не ЗначениеЗаполнено(СтрокаТЗ.Заработок3) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТЗ.РодительскаяКатегорияЗастрахованныхЛиц = СоответствиеКатегорий[СтрокаТЗ.КатегорияЗастрахованныхЛиц];
		Если МассивКатегорийПерсучета.Найти(СтрокаТЗ.РодительскаяКатегорияЗастрахованныхЛиц) = Неопределено Тогда
			МассивКатегорийПерсучета.Добавить(СтрокаТЗ.РодительскаяКатегорияЗастрахованныхЛиц);
		КонецЕсли;
	КонецЦикла;
	
	ВсеКатегорииПерсучета = ДоходыИсходныхПачек.ВыгрузитьКолонку("КатегорияЗастрахованныхЛиц");
	
	// Сверка показателей
	
	// П. 1.5 Элемент «Количество застрахованных лиц, на которых представлены сведения о сумме выплат и иных вознаграждений и/или страховом стаже» (указывается количество больше  нуля).  Значение показателя должно быть равно значению «итого» графы 4  подраздела 2.5.1
	Если КоличествоЗастрахованныхРСВ1 <> КоличествоЗастрахованныхВПерсучете Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Количество застрахованных лиц, указанное на титульном листе Расчета РСВ-1 (" + Формат(КоличествоЗастрахованныхРСВ1, "ЧДЦ=2") + ") не совпадает с количеством лиц, на которых подаются сведения перс.учета (" + КоличествоЗастрахованныхВПерсучете + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 3.5.4 Значение, указанное в графе 3 строки «Итого» должно равняться  значению, указанному в графе 3 строки 114 раздела 1 уменьшенному на значения граф 4-6 строки 206 подраздела 2.1
	Если НачисленоВзносовРСВ1 <> НачисленоВзносовВПерсучете Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Сумма начисленных взносов на ОПС в разделе 1 Расчета РСВ-1 (" + Формат(НачисленоВзносовРСВ1, "ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(НачисленоВзносовВПерсучете, "ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 7.4.2 По всем разделам 6 по всем категориям ЗЛ  значение графы 4 строки 401 (411 и т.д.) подраздела 6.4,  должно быть больше или равно значению, указанному в графе 4 строки 200 подраздела 2.1, уменьшенной на показатели графы 4 строки 201 подраздела 2.1. по всем кодам тарифов
	Если ОбъектОбложенияВПерсучете_1 < ОбъектОбложенияРСВ1_1 Тогда 
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма выплат и иных вознаграждений, указанная за первый месяц отчетного периода в разделах 2.1 Расчета РСВ-1, уменьшенная на суммы, не подлежащие обложению, (" + Формат(ОбъектОбложенияРСВ1_1,"ЧДЦ=2") + " не может быть больше общей суммы выплат и иных вознаграждений по данным перс.учета (" + Формат(ОбъектОбложенияВПерсучете_1,"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 7.4.6 По всем разделам 6 по всем категориям ЗЛ  значение графы 5 строки 401 (411 и т.д.) подраздела 6.4 должно быть равно значению, указанному в графе 4 строки 204 подраздела 2.1 по всем кодам тарифов
	Если ОблагаемаяБазаВПерсучете_1 <> ОблагаемаяБазаРСВ1_1 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма облагаемой базы, не превышающей предельной величины, указанная за первый месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (" + Формат(ОблагаемаяБазаРСВ1_1,"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(ОблагаемаяБазаВПерсучете_1,"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 7.4.10 По всем разделам 6 по всем категориям ЗЛ  значение графы 7 строки 401 (411 и т.д.) подраздела 6.4,  должно быть равно значению, указанному в графе 4 строки 203 подраздела 2.1 по всем кодам тарифов.
	Если БазаСверхПредельнойВПерсучете_1 <> БазаСверхПредельнойРСВ1_1 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма облагаемой базы, превышающей предельную величину, указанная за первый месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (" + Формат(БазаСверхПредельнойРСВ1_1,"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(БазаСверхПредельнойВПерсучете_1,"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 7.4.3 По всем разделам 6 по всем категориям ЗЛ  значение графы 4 строки 402 (412 и т.д.) подраздела 6.4,  должно быть больше или равно значению, указанному в графе 5 строки 200 подраздела 2.1, уменьшенной на показатели графы 5 строки 201 подраздела 2.1. по всем кодам тарифов
	Если ОбъектОбложенияВПерсучете_2 < ОбъектОбложенияРСВ1_2 Тогда 
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма выплат и иных вознаграждений, указанная за второй месяц отчетного периода в разделах 2.1 Расчета РСВ-1, уменьшенная на суммы, не подлежащие обложению, (" + Формат(ОбъектОбложенияРСВ1_2,"ЧДЦ=2") + " не может быть больше общей суммы выплат и иных вознаграждений по данным перс.учета (" + Формат(ОбъектОбложенияВПерсучете_2,"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 7.4.7 По всем разделам 6 по всем категориям ЗЛ  значение графы 5 строки 402 (412 и т.д.) подраздела 6.4 должно быть равно значению, указанному в графе 5 строки 204 подраздела 2.1 по всем кодам тарифов
	Если ОблагаемаяБазаВПерсучете_2 <> ОблагаемаяБазаРСВ1_2 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма облагаемой базы, не превышающей предельной величины, указанная за второй месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (" + Формат(ОблагаемаяБазаРСВ1_2,"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(ОблагаемаяБазаВПерсучете_2,"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 7.4.11 По всем разделам 6 по всем категориям ЗЛ  значение графы 7 строки 402 (412 и т.д.) подраздела 6.4,  должно быть равно значению, указанному в графе 5 строки 203 подраздела 2.1 по всем кодам тарифов.
	Если БазаСверхПредельнойВПерсучете_2 <> БазаСверхПредельнойРСВ1_2 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма облагаемой базы, превышающей предельную величину, указанная за второй месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (" + Формат(БазаСверхПредельнойРСВ1_2,"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(БазаСверхПредельнойВПерсучете_2,"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 7.4.4 По всем разделам 6 по всем категориям ЗЛ  значение графы 4 строки 403 (413 и т.д.) подраздела 6.4,  должно быть больше или равно значению, указанному в графе 6 строки 200 подраздела 2.1, уменьшенной на показатели графы 6 строки 201 подраздела 2.1. по всем кодам тарифов
	Если ОбъектОбложенияВПерсучете_3 < ОбъектОбложенияРСВ1_3 Тогда 
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма выплат и иных вознаграждений, указанная за третий месяц отчетного периода в разделах 2.1 Расчета РСВ-1, уменьшенная на суммы, не подлежащие обложению, (" + Формат(ОбъектОбложенияРСВ1_3,"ЧДЦ=2") + " не может быть больше общей суммы выплат и иных вознаграждений по данным перс.учета (" + Формат(ОбъектОбложенияВПерсучете_3,"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 7.4.8 По всем разделам 6 по всем категориям ЗЛ  значение графы 5 строки 403 (413 и т.д.) подраздела 6.4 должно быть равно значению, указанному в графе 6 строки 204 подраздела 2.1 по всем кодам тарифов
	Если ОблагаемаяБазаВПерсучете_3 <> ОблагаемаяБазаРСВ1_3 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма облагаемой базы, не превышающей предельной величины, указанная за третий месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (" + Формат(ОблагаемаяБазаРСВ1_3,"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(ОблагаемаяБазаВПерсучете_3,"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	// П. 7.4.12 По всем разделам 6 по всем категориям ЗЛ  значение графы 7 строки 403 (413 и т.д.) подраздела 6.4,  должно быть равно значению, указанному в графе 6 строки 203 подраздела 2.1 по всем кодам тарифов.
	Если БазаСверхПредельнойВПерсучете_3 <> БазаСверхПредельнойРСВ1_3 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма облагаемой базы, превышающей предельную величину, указанная за третий месяц отчетного периода в разделах 2.1 Расчета РСВ-1 (" + Формат(БазаСверхПредельнойРСВ1_3,"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(БазаСверхПредельнойВПерсучете_3,"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	Если Не ОбщегоНазначенияЗК.ТаблицыИдентичны(ДоходыВредниковРСВ1, ДоходыВредниковИсходныхПачек) Тогда
		СоответствиеКлассовУсловийТруда = Новый Соответствие;
		СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный,"опасным (подкласс 4)");
		СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4,"вредным (подкласс 3.4)");
		СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3,"вредным (подкласс 3.3)");
		СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2,"вредным (подкласс 3.2)");
		СоответствиеКлассовУсловийТруда.Вставить(Перечисления.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1,"вредным (подкласс 3.1)");
		// П. 7.7.1-8 По всем разделам 6 значение, указанное в графе 4 строки 701(711) подраздела 6.7  при условии, что код специальной оценки условий труда не указан, должно быть равно значению, указанному в графе 4 строки 223 подраздела 2.2
		СтрокаРСВ1 = ДоходыВредниковРСВ1[0];
		СтрокаПерсучета = ДоходыВредниковИсходныхПачек[0];
		Для СчМесяцев = 1 По 3 Цикл
			ОписаниеМесяца = ?(СчМесяцев = 1, "первый", ?(СчМесяцев = 2, "второй", "третий"));
			Если СтрокаРСВ1["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + СчМесяцев] <> СтрокаПерсучета["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + СчМесяцев] Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма базы для начисления взносов, указанная за " + ОписаниеМесяца + " месяц отчетного периода в разделе 2.2 Расчета РСВ-1 (" + Формат(СтрокаРСВ1["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + СчМесяцев],"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(СтрокаПерсучета["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + СчМесяцев],"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
			КонецЕсли;
			Если СтрокаРСВ1["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + СчМесяцев] <> СтрокаПерсучета["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + СчМесяцев] Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма базы для начисления взносов, указанная за " + ОписаниеМесяца + " месяц отчетного периода в разделе 2.3 Расчета РСВ-1 (" + Формат(СтрокаРСВ1["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + СчМесяцев],"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(СтрокаПерсучета["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + СчМесяцев],"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
			КонецЕсли;
		КонецЦикла;
		// П. 7.7.9-28 По всем разделам 6 значение, указанное в графе 4 или (и) 5 строки 701 (711) при наличии кода «О4» в графе 3 подраздела 6.7  должно быть равно значению, указанному в графе 4 строки 243 подраздела 2.4  или (и) «2»  соответственно
		Для СчСтрокУсловий = 1 По 5 Цикл
			СтрокаРСВ1 = ДоходыВредниковРСВ1[СчСтрокУсловий];
			СтрокаПерсучета = ДоходыВредниковИсходныхПачек[СчСтрокУсловий];
			ОписаниеУсловийТруда = СоответствиеКлассовУсловийТруда[СтрокаРСВ1.КлассУсловийТруда];
			Для СчМесяцев = 1 По 3 Цикл
				ОписаниеМесяца = ?(СчМесяцев = 1, "первый", ?(СчМесяцев = 2, "второй", "третий"));
				Если СтрокаРСВ1["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + СчМесяцев] <> СтрокаПерсучета["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + СчМесяцев] Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма базы для начисления взносов, указанная за " + ОписаниеМесяца + " месяц отчетного периода в разделе 2.4 с кодом основания «1» по " + ОписаниеУсловийТруда + " условиям труда Расчета РСВ-1 (" + Формат(СтрокаРСВ1["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + СчМесяцев],"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(СтрокаПерсучета["ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах" + СчМесяцев],"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
				КонецЕсли;
				Если СтрокаРСВ1["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + СчМесяцев] <> СтрокаПерсучета["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + СчМесяцев] Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Общая сумма базы для начисления взносов, указанная за " + ОписаниеМесяца + " месяц отчетного периода в разделе 2.4 с кодом основания «2» по " + ОписаниеУсловийТруда + " условиям труда Расчета РСВ-1 (" + Формат(СтрокаРСВ1["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + СчМесяцев],"ЧДЦ=2") + ") не совпадает с данными перс.учета (" + Формат(СтрокаПерсучета["ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах" + СчМесяцев],"ЧДЦ=2") + ")!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла; 
	КонецЕсли;
	
	// При наличии в РСВ-1 указанных кодов тарифа обязательно должны быть формы Раздела 6 с соответствующими кодами категорий застрахованных лиц.
	СтрокаКатегорий = "";
	Для каждого Элемент Из МассивКатегорийРСВ1 Цикл
		Если ЗначениеЗаполнено(Элемент) И МассивКатегорийПерсучета.Найти(Элемент) = Неопределено Тогда
			СтрокаКатегорий = СтрокаКатегорий + ?(ПустаяСтрока(СтрокаКатегорий),"",",") + ДочерниеКатегории(Элемент, СоответствиеКатегорий)
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(СтрокаКатегорий) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Отсутствуют Разделы 6 по категориям " + СтрокаКатегорий + ", соответствующим указанным в Расчете РСВ-1 кодам тарифа!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	СтрокаКатегорий = "";
	Для каждого Значение Из МассивКатегорийПерсучета Цикл
		Если МассивКатегорийРСВ1.Найти(Значение) = Неопределено Тогда
			СтрокаКатегорий = СтрокаКатегорий + ?(ПустаяСтрока(СтрокаКатегорий),"",",") + ДочерниеКатегории(Значение, СоответствиеКатегорий);
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(СтрокаКатегорий) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("В Расчете РСВ-1 отсутствует Раздел 2 с кодом тарифа, соответствующим категориям " + СтрокаКатегорий + "!", ,,Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иПерсучета);
	КонецЕсли;
	
	ПотерянныеФизлицаСКорректировками = ПотерянныеФизлица(Ссылка);
	Если Не ПотерянныеФизлицаСКорректировками.Пустой() Тогда
		РазделСверкиПерсучета = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Раздела 2.5 Расчета РСВ-1 с данными перс.учета по Разделам 6.", Перечисления.ВидыСообщений.Информация);
		ТекстСообщения = "В пачках исходных сведений Раздела 6 отсутствуют следующие застрахованные лица, по которым корректируются данные предшествующих периодов:";
		Выборка = ПотерянныеФизлицаСКорректировками.Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = ТекстСообщения + Символы.ПС + "- " + Выборка.ФИО + ", корректируется " + ПроцедурыПерсонифицированногоУчета.ОписаниеОтчетногоПериодаДляПоказа(Выборка.КорректируемыйПериод);
		КонецЦикла;
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ТекстСообщения, , , Перечисления.ВидыСообщений.Информация, , РазделСверкиПерсучета);
	КонецЕсли;
	
КонецПроцедуры

Функция ДоходыИсходныхПачек2014(Ссылка, ОтчетныйПериод)

	МесяцНачалаОтчетногоПериода = Месяц(НачалоКвартала(ОтчетныйПериод));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Месяц1", МесяцНачалаОтчетногоПериода);
	Запрос.УстановитьПараметр("Месяц2", МесяцНачалаОтчетногоПериода + 1);
	Запрос.УстановитьПараметр("Месяц3", МесяцНачалаОтчетногоПериода + 2);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка
	|ПОМЕСТИТЬ ВТПачки
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
	|		ПО ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка = ПачкаРазделов6РасчетаРСВ_1.Ссылка
	|ГДЕ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка = &Ссылка
	|	И ПачкаРазделов6РасчетаРСВ_1.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КатегорияЗастрахованныхЛиц,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Заработок0,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиДоПредельнойВеличины0,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины0,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Заработок1,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиДоПредельнойВеличины1,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины1,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Заработок2,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиДоПредельнойВеличины2,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины2,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Заработок
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Заработок3,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиДоПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиДоПредельнойВеличины3,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.ОблагаетсяВзносамиСвышеПредельнойВеличины
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиСвышеПредельнойВеличины3
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработке КАК ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПачкаРазделов6РасчетаРСВ_1СведенияОЗаработке.КатегорияЗастрахованныхЛиц";

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

Функция ДоходыВредниковИсходныхПачек2014(Ссылка, ОтчетныйПериод)

	МесяцНачалаОтчетногоПериода = Месяц(НачалоКвартала(ОтчетныйПериод));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Месяц1", МесяцНачалаОтчетногоПериода);
	Запрос.УстановитьПараметр("Месяц2", МесяцНачалаОтчетногоПериода + 1);
	Запрос.УстановитьПараметр("Месяц3", МесяцНачалаОтчетногоПериода + 2);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка
	|ПОМЕСТИТЬ ВТПачки
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК ПередачаСЗВ4вПФРПачкиДокументов2014
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1 КАК ПачкаРазделов6РасчетаРСВ_1
	|		ПО ПередачаСЗВ4вПФРПачкиДокументов2014.ДокументПачка = ПачкаРазделов6РасчетаРСВ_1.Ссылка
	|ГДЕ
	|	ПередачаСЗВ4вПФРПачкиДокументов2014.Ссылка = &Ссылка
	|	И ПачкаРазделов6РасчетаРСВ_1.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТКлассыВредности
	|ИЗ
	|	Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки КАК КлассыУсловийТрудаПоРезультатамСпециальнойОценки
	|ГДЕ
	|	КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка <> ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый)
	|	И КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка <> ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка КАК КлассУсловийТруда,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах0,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = 0
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах0,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах1,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц1
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах1,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах2,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц2
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах2,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаПодземныхИВредныхРаботах3,
	|	СУММА(ВЫБОР
	|			КОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Месяц = &Месяц3
	|				ТОГДА ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаетсяВзносамиЗаЗанятыхНаТяжелыхИПрочихРаботах3
	|ИЗ
	|	ВТКлассыВредности КАК КлассыУсловийТрудаПоРезультатамСпециальнойОценки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПачкаРазделов6РасчетаРСВ_1.СведенияОЗаработкеНаВредныхИТяжелыхРаботах КАК ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах
	|		ПО КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка = ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.КлассУсловийТруда
	|			И (ПачкаРазделов6РасчетаСведенияОЗаработкеНаВредныхИТяжелыхРаботах.Ссылка В
	|				(ВЫБРАТЬ
	|					Пачки.ДокументПачка
	|				ИЗ
	|					ВТПачки КАК Пачки))
	|
	|СГРУППИРОВАТЬ ПО
	|	КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Ссылка
	|
	|";

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

Функция ПотерянныеФизлица(Ссылка)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пачки.ДокументПачка КАК ДокументПачка
	|ПОМЕСТИТЬ ВТПачки
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов2014 КАК Пачки
	|ГДЕ
	|	Пачки.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ФизЛицо,
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка.КорректируемыйПериод
	|ПОМЕСТИТЬ ВТЗастрахованныеКорректирующихПачек
	|ИЗ
	|	Документ.ПачкаДокументовСЗВ_6_4.РаботникиОрганизации КАК ПачкаДокументовСЗВ_6_4РаботникиОрганизации
	|ГДЕ
	|	ПачкаДокументовСЗВ_6_4РаботникиОрганизации.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|	И ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоСтраховая * ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоСтраховая + ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоНакопительная * ПачкаДокументовСЗВ_6_4РаботникиОрганизации.ДоначисленоНакопительная > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ФизЛицо,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка.КорректируемыйПериод
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоСтраховая * СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоСтраховая + СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоНакопительная * СведенияОТрудовомСтажеИЗаработкеСЗВ4РаботникиОрганизации.ДоначисленоНакопительная > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ФизЛицо,
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка.КорректируемыйПериод
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|	И ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|	И ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ДоначисленоСтраховая * ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ДоначисленоСтраховая > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.ФизЛицо
	|ПОМЕСТИТЬ ВТЗастрахованныеИсходныхПачек
	|ИЗ
	|	Документ.ПачкаРазделов6РасчетаРСВ_1.РаботникиОрганизации КАК ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации
	|ГДЕ
	|	ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка В
	|			(ВЫБРАТЬ
	|				Пачки.ДокументПачка
	|			ИЗ
	|				ВТПачки КАК Пачки)
	|	И ПачкаРазделов6РасчетаРСВ_1РаботникиОрганизации.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеКорректирующихПачек.ФизЛицо,
	|	ЗастрахованныеКорректирующихПачек.ФизЛицо.Наименование КАК ФИО,
	|	ЗастрахованныеКорректирующихПачек.КорректируемыйПериод
	|ИЗ
	|	ВТЗастрахованныеКорректирующихПачек КАК ЗастрахованныеКорректирующихПачек
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗастрахованныеИсходныхПачек КАК ЗастрахованныеИсходныхПачек
	|		ПО ЗастрахованныеКорректирующихПачек.ФизЛицо = ЗастрахованныеИсходныхПачек.ФизЛицо
	|ГДЕ
	|	ЗастрахованныеИсходныхПачек.ФизЛицо ЕСТЬ NULL ";
	
	Возврат Запрос.Выполнить();

КонецФункции // ПотерянныеФизлица()
