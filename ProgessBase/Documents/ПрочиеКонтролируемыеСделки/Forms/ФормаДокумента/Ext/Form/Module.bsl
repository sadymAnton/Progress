////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Для Каждого СтрокаСделки Из Объект.Сделки Цикл
		РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, СтрокаСделки);
	КонецЦикла;
	
	ТабличныеЧасти = Новый Структура("Сделки", Новый Структура("ИмяТабличногоПоля, ИмяГруппыКоманд", "Сделки", "ГруппаЗаполнитьСделки"));
	КонтролируемыеСделки.СоздатьКомандыЗаполненияТабличныхЧастей(ЭтаФорма, Объект.Ссылка.Метаданные(), ТабличныеЧасти);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуЗаполненияТабличнойЧасти(ИмяКоманды)
	
	КомандаДляВыполнения = ДеревоКомандЗаполненияТабличныхЧастей.Строки.Найти(ИмяКоманды, "Имя", Истина);
	ИмяТабличнойЧасти = КомандаДляВыполнения.Родитель.Имя;
	ИмяТабличногоПоля = КомандаДляВыполнения.Родитель.Расшифровка;
	
	КонтролируемыеСделки.ВыполнитьЗаполнениеТабличнойЧасти(Объект, ИмяТабличнойЧасти, Элементы[ИмяТабличногоПоля], КомандаДляВыполнения.Расшифровка.СсылкаНаВнешнююОбработку, КомандаДляВыполнения.Расшифровка.ДополнительныеПараметрыОбработки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеТабличныхЧастей_Подключаемый(Команда)
	
	ВыполнитьКомандуЗаполненияТабличнойЧасти(Команда.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ИзменениеДоговораСервер()
	
	ВалютаВзаиморасчетов = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
	Если ВалютаВзаиморасчетов <> Объект.ВалютаДокумента Тогда
		Объект.ВалютаДокумента = ВалютаВзаиморасчетов;
		Для Каждого Сделка ИЗ Объект.Сделки Цикл
			СтруктураКурсаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, Сделка.ДатаСовершенияСделки);
			Сделка.СуммаБезНДСВРублях = Сделка.СуммаБезНДСВВалютеРасчетов 
				* СтруктураКурсаДокумента.Курс / ?(СтруктураКурсаДокумента.Кратность = 0, 1, СтруктураКурсаДокумента.Кратность);
			Сделка.СуммаНДСВРублях = УчетНДС.РассчитатьСуммуНДС(Сделка.СуммаБезНДСВРублях, Истина, Ложь,
														УчетНДС.ПолучитьСтавкуНДС(Сделка.СтавкаНДС));
			РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, Сделка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзменениеПредметаСделкиСервер(ДанныеДляЗаполнения)
	
	ИзмененныеДанные = Новый Структура();
	
	Если ТипЗнч(ДанныеДляЗаполнения.ПредметСделки) = Тип("СправочникСсылка.Номенклатура") Тогда
		РеквизитыНоменклатуры = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДанныеДляЗаполнения.ПредметСделки, 
			"НаименованиеПолное, Услуга, БазоваяЕдиницаИзмерения");
		ИзмененныеДанные.Вставить("НаименованиеПредметаСделки", РеквизитыНоменклатуры.НаименованиеПолное);
		ИзмененныеДанные.Вставить("ТипПредметаСделки", ?(РеквизитыНоменклатуры.Услуга, 
														Перечисления.ТипыПредметовКонтролируемыхСделок.РаботаУслуга, 
														Перечисления.ТипыПредметовКонтролируемыхСделок.Товар));
		ИзмененныеДанные.Вставить("ЕдиницаИзмерения", РеквизитыНоменклатуры.БазоваяЕдиницаИзмерения);
	ИначеЕсли ДанныеДляЗаполнения.ПредметСделки <> Неопределено Тогда
    	РеквизитыНоменклатуры = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДанныеДляЗаполнения.ПредметСделки, 
			"Наименование");
		ИзмененныеДанные.Вставить("НаименованиеПредметаСделки", РеквизитыНоменклатуры.Наименование);
		ИзмененныеДанные.Вставить("ТипПредметаСделки", Перечисления.ТипыПредметовКонтролируемыхСделок.ИнойОбъектГражданскихПрав);
	КонецЕсли;
		
	Возврат ИзмененныеДанные;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура РасчитатьЗначенияДополнительныхКолонок(Форма, СтрокаСделки)
	
	СтрокаСделки.ВсегоВРублях = СтрокаСделки.СуммаБезНДСВРублях + СтрокаСделки.СуммаНДСВРублях;
	СтрокаСделки.ВсегоВВалютеРасчетов = СтрокаСделки.СуммаБезНДСВВалютеРасчетов + СтрокаСделки.СуммаНДСВВалютеРасчетов;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РассчитатьСуммуНДС(СуммаБезНДС, СтавкаНДС)
	Возврат УчетНДС.РассчитатьСуммуНДС(СуммаБезНДС, Истина, Ложь,
                                                 УчетНДС.ПолучитьСтавкуНДС(СтавкаНДС))
КонецФункции

&НаСервереБезКонтекста
Процедура ПересчитатьСуммыСтроки(ДанныеСтроки, ИзмененноеПоле)
	
	Если ИзмененноеПоле = "ДатаСовершенияСделки" Тогда
		СтруктураКурсаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(ДанныеСтроки.ВалютаДокумента, ДанныеСтроки.ДатаСовершенияСделки);
		ДанныеСтроки.СуммаБезНДСВРублях = ДанныеСтроки.СуммаБезНДСВВалютеРасчетов 
			* СтруктураКурсаДокумента.Курс / ?(СтруктураКурсаДокумента.Кратность = 0, 1, СтруктураКурсаДокумента.Кратность);
		ПересчитатьСуммыСтроки(ДанныеСтроки, "СуммаБезНДСВРублях");
	ИначеЕсли ИзмененноеПоле = "СуммаБезНДСВРублях" Тогда
		ДанныеСтроки.СуммаНДСВРублях = РассчитатьСуммуНДС(ДанныеСтроки.СуммаБезНДСВРублях, ДанныеСтроки.СтавкаНДС);
	ИначеЕсли ИзмененноеПоле = "СуммаБезНДСВВалютеРасчетов" Тогда
		СтруктураКурсаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(ДанныеСтроки.ВалютаДокумента, ДанныеСтроки.ДатаСовершенияСделки);
		ДанныеСтроки.СуммаНДСВВалютеРасчетов = РассчитатьСуммуНДС(ДанныеСтроки.СуммаБезНДСВВалютеРасчетов, ДанныеСтроки.СтавкаНДС);
		ДанныеСтроки.СуммаБезНДСВРублях = ДанныеСтроки.СуммаБезНДСВВалютеРасчетов 
			* СтруктураКурсаДокумента.Курс / ?(СтруктураКурсаДокумента.Кратность = 0, 1, СтруктураКурсаДокумента.Кратность);
		ПересчитатьСуммыСтроки(ДанныеСтроки, "СуммаБезНДСВРублях");
	ИначеЕсли ИзмененноеПоле = "СтавкаНДС" Тогда
		ДанныеСтроки.СуммаНДСВВалютеРасчетов = РассчитатьСуммуНДС(ДанныеСтроки.СуммаБезНДСВВалютеРасчетов, ДанныеСтроки.СтавкаНДС);
		ДанныеСтроки.СуммаНДСВРублях = РассчитатьСуммуНДС(ДанныеСтроки.СуммаБезНДСВРублях, ДанныеСтроки.СтавкаНДС);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПриИзмененииУведомленияНаСервере(Уведомление) 
	
	Если ЗначениеЗаполнено(Уведомление) Тогда 
		Возврат ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Уведомление, "Организация, Дата");
	Иначе
		Возврат Новый Структура("Организация", Неопределено);
	КонецЕсли;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого СтрокаСделки Из Объект.Сделки Цикл
		РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, СтрокаСделки);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ИЗМЕНЕНИЯ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура УведомлениеПриИзменении(Элемент)
	
	ЗаполнитьЗначенияСвойств(Объект, ПриИзмененииУведомленияНаСервере(Объект.УведомлениеОКонтролируемойСделке));
	
	Если ЗначениеЗаполнено(Объект.УведомлениеОКонтролируемойСделке) Тогда 
		ПараметрыУведомления = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Объект.УведомлениеОКонтролируемойСделке,"Организация, Дата");
		Объект.Организация = ПараметрыУведомления.Организация;
		Объект.Дата        = ПараметрыУведомления.Дата;
	Иначе
		Объект.Организация = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ ДАННЫХ В ТАБЛИЧНОЙ ЧАСТИ

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ИзменениеДоговораСервер();
	
	
КонецПроцедуры

&НаКлиенте
Процедура СделкиДатаСовершенияСделкиПриИзменении(Элемент)
	
	Если Объект.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
		СтрокаСделки = Элементы.Сделки.ТекущиеДанные;
		ДанныеОбменаССервером = Новый Структура("ДатаСовершенияСделки, ДоговорКонтрагента, СуммаБезНДСВРублях, СуммаБезНДСВВалютеРасчетов,
			|СуммаНДСВРублях, СуммаНДСВВалютеРасчетов, СтавкаНДС, ВалютаДокумента");
		ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, СтрокаСделки);
		ДанныеОбменаССервером.ВалютаДокумента = Объект.ВалютаДокумента;
		ПересчитатьСуммыСтроки(ДанныеОбменаССервером, "ДатаСовершенияСделки");
		ЗаполнитьЗначенияСвойств(СтрокаСделки, ДанныеОбменаССервером);
		РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, СтрокаСделки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СделкиСуммаБезНДСВРубляхПриИзменении(Элемент)
	
	СтрокаСделки = Элементы.Сделки.ТекущиеДанные;
	ДанныеОбменаССервером = Новый Структура("СуммаБезНДСВРублях, СуммаНДСВРублях, СтавкаНДС");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, СтрокаСделки);
	ПересчитатьСуммыСтроки(ДанныеОбменаССервером, "СуммаБезНДСВРублях");
	ЗаполнитьЗначенияСвойств(СтрокаСделки, ДанныеОбменаССервером);
	РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, СтрокаСделки);

КонецПроцедуры

&НаКлиенте
Процедура СделкиСуммаБезНДСВВалютеРасчетовПриИзменении(Элемент)
	
	СтрокаСделки = Элементы.Сделки.ТекущиеДанные;
	ДанныеОбменаССервером = Новый Структура("ДоговорКонтрагента, ДатаСовершенияСделки,
		|СуммаБезНДСВРублях, СуммаБезНДСВВалютеРасчетов, СуммаНДСВРублях, СуммаНДСВВалютеРасчетов, СтавкаНДС, ВалютаДокумента");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, СтрокаСделки);
	ДанныеОбменаССервером.ВалютаДокумента = Объект.ВалютаДокумента;
	ПересчитатьСуммыСтроки(ДанныеОбменаССервером, "СуммаБезНДСВВалютеРасчетов");
	ЗаполнитьЗначенияСвойств(СтрокаСделки, ДанныеОбменаССервером);
	РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, СтрокаСделки);

КонецПроцедуры

&НаКлиенте
Процедура СделкиСтавкаНДСПриИзменении(Элемент)
	
	СтрокаСделки = Элементы.Сделки.ТекущиеДанные;
	ДанныеОбменаССервером = Новый Структура("ДатаСовершенияСделки,
		|СуммаБезНДСВРублях, СуммаБезНДСВВалютеРасчетов, СуммаНДСВРублях, СуммаНДСВВалютеРасчетов, СтавкаНДС, ВалютаДокумента");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, СтрокаСделки);
	ДанныеОбменаССервером.ВалютаДокумента = Объект.ВалютаДокумента;
	ПересчитатьСуммыСтроки(ДанныеОбменаССервером, "СтавкаНДС");
	ЗаполнитьЗначенияСвойств(СтрокаСделки, ДанныеОбменаССервером);
	РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, СтрокаСделки);

КонецПроцедуры

&НаКлиенте
Процедура СделкиСуммаНДСВРубляхПриИзменении(Элемент)
	
	СтрокаСделки = Элементы.Сделки.ТекущиеДанные;
	РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, СтрокаСделки);
	
КонецПроцедуры

&НаКлиенте
Процедура СделкиСуммаНДСВВалютеРасчетовПриИзменении(Элемент)
	
	СтрокаСделки = Элементы.Сделки.ТекущиеДанные;
	РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, СтрокаСделки);

КонецПроцедуры

&НаКлиенте
Процедура СделкиПредметСделкиПриИзменении(Элемент)
	
	СтрокаСделки = Элементы.Сделки.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаСделки.ПредметСделки) Тогда
		ДанныеОбменаССервером = Новый Структура("ПредметСделки");
		ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, СтрокаСделки);
		ЗаполнитьЗначенияСвойств(СтрокаСделки, ИзменениеПредметаСделкиСервер(ДанныеОбменаССервером));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СделкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		СтрокаСделки = Элементы.Сделки.ТекущиеДанные;
		РасчитатьЗначенияДополнительныхКолонок(ЭтаФорма, СтрокаСделки);
	КонецЕсли;
	
КонецПроцедуры

