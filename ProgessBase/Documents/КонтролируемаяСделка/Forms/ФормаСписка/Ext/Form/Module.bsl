////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

&НаКлиенте
Процедура УведомлениеОКонтролируемыхСделкахПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено( УведомлениеОКонтролируемыхСделках) Тогда
		Список.Отбор.Элементы.Очистить();
		ОтборПоУведомлению = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоУведомлению.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УведомлениеОКонтролируемойСделке");
		ОтборПоУведомлению.ПравоеЗначение = УведомлениеОКонтролируемыхСделках;
		Элементы.УведомлениеОКонтролируемойСделке.Видимость = Ложь;
		ПроверитьКорректностьНомеров();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УведомлениеОКонтролируемыхСделкахОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Список.Отбор.Элементы.Очистить();
	УведомлениеОКонтролируемыхСделках = УведомлениеОКонтролируемыхСделках.Пустая();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(УведомлениеОКонтролируемыхСделках) И
		Параметры.Свойство("УведомлениеОКонтролируемыхСделках") Тогда
		УведомлениеОКонтролируемыхСделках = Параметры.УведомлениеОКонтролируемыхСделках;
	КонецЕсли;
	
	Элементы.ДекорацияОтборПоУведомлению.Заголовок = 
		КонтролируемыеСделки.ПредставлениеУведомления(УведомлениеОКонтролируемыхСделках, НСтр("ru = 'Листы 1А'"));
	
	УведомлениеУказано = ЗначениеЗаполнено(УведомлениеОКонтролируемыхСделках);
	
	Элементы.УведомлениеОКонтролируемыхСделках.Видимость = НЕ УведомлениеУказано;
	Элементы.УведомлениеОКонтролируемойСделке.Видимость = НЕ УведомлениеУказано;
	Элементы.ДекорацияОтборПоУведомлению.Видимость = УведомлениеУказано;
	
	Если ЗначениеЗаполнено(УведомлениеОКонтролируемыхСделках) Тогда
		Список.Порядок.Элементы.Очистить();
		ПорядокСписка = Список.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ПорядокСписка.Поле = Новый ПолеКомпоновкиДанных("Номер");
		ПорядокСписка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
		ПорядокСписка.Использование = Истина;
	КонецЕсли;
	
	ПроверитьКорректностьНомеров();
	
КонецПроцедуры

&НаСервере
Процедура ПеренумероватьДокументыНаСервере()
	
	КонтролируемыеСделки.ПеренумерацияКонтролируемыхСделокУведомления(УведомлениеОКонтролируемыхСделках);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПеренумероватьДокументы(Команда)
	
	Перенумеровать = Истина;
	ПроверитьКорректностьНомеров();
	Если НомераКонтролируемыхСделокКорректны Тогда
		ТекстВопроса = Нстр("ru = 'Нумерация листов 1А по текущему уведомлению корректна.#РазделительСтрок#Все равно перенумеровать сделки?#РазделительСтрок#(операция может занять продолжительное время)'");
		Перенумеровать = Вопрос(СтрЗаменить(ТекстВопроса, "#РазделительСтрок#", Символы.ПС), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да;	
	КонецЕсли;	
	
	Если Перенумеровать Тогда
		ПеренумероватьДокументыНаСервере();
		Предупреждение(НСтр("ru = 'Листы 1А пронумерованы'"));
		НомераКонтролируемыхСделокКорректны = Истина;
		РекомендуетсяПеренумероватьДокументы =  НСтр("ru = 'Нумерация листов 1А корректна'");
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "НомерКонтролируемойСделкиИзменился" Тогда
		Если Параметр = УведомлениеОКонтролируемыхСделках Тогда
			ПроверитьКорректностьНомеров();
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКорректностьНомеров()
	
	НомераКонтролируемыхСделокКорректны = КонтролируемыеСделки.НомераКонтролируемыхСделокУведомленияКоректны(УведомлениеОКонтролируемыхСделках);	
	РекомендуетсяПеренумероватьДокументы = ?(НЕ НомераКонтролируемыхСделокКорректны, НСтр("ru = 'Нумерация листов 1А не корректна'"), НСтр("ru = 'Нумерация листов 1А корректна'"));
	
КонецПроцедуры	
