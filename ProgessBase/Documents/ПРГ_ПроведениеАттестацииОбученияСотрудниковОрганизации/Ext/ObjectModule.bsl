Перем мУдалятьДвижения;

Процедура СформироватьДвижения()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.Ссылка.ВидОперации как ВидОперации,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.Сотрудник как Сотрудник,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ВидАттестации как ВидАттестации,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ДатаНачалаОбучения как ДатаНачалаОбучения,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ДатаОкончанияОбучения как ДатаОкончанияОбучения,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ДатаАттестации как ДатаАттестации,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ШЕ как ШЕ
	|ИЗ
	|	Документ.ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизации.Сотрудники КАК ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники
	|ГДЕ
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей       = РегистрыСведений.ПРГ_СведенияОбАттестацииСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	
	Пока Выборка.Следующий() Цикл
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = Дата;
		НоваяЗапись.Регистратор = Ссылка;
		НоваяЗапись.ВидАттестации  = ВидАттестации;
		НоваяЗапись.ВидОперацииДокумента = ВидОперации;
		НоваяЗапись.Сотрудник = Выборка.Сотрудник;
		НоваяЗапись.ШЕ = Выборка.ШЕ;
		Если ВидОперации = Перечисления.ПРГ_ВидыОперацииДокументаАттестацииСотрудниковОрганизации.Обучение Тогда
			НоваяЗапись.ДатаНОбучения = Выборка.ДатаНачалаОбучения;
			НоваяЗапись.ДатаКОбучения = Выборка.ДатаОкончанияОбучения;
		ИначеЕсли ВидОперации = Перечисления.ПРГ_ВидыОперацииДокументаАттестацииСотрудниковОрганизации.Аттестация Тогда
			НоваяЗапись.ДатаАттестации = Выборка.ДатаАттестации;
		КонецЕсли;
		
	КонецЦикла;
	НаборЗаписей.Записать();       
	Если ВидОперации = Перечисления.ПРГ_ВидыОперацииДокументаАттестацииСотрудниковОрганизации.Аттестация Тогда
		ДописатьДатуАттестацииВЛОбучении();
	КонецЕсли;
КонецПроцедуры

Процедура ДописатьДатуАттестацииВЛОбучении()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.Ссылка.ВидОперации КАК ВидОперации,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.Сотрудник КАК Сотрудник,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ВидАттестации КАК ВидАттестации,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ДатаНачалаОбучения КАК ДатаНачалаОбучения,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ДатаОкончанияОбучения КАК ДатаОкончанияОбучения,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ДатаАттестации КАК ДатаАттестации,
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ШЕ КАК ШЕ,
	|	ПРГ_СведенияОбАттестацииСотрудниковСрезПоследних.Регистратор КАК РегистраторОбучение,
	|	ПРГ_СведенияОбАттестацииСотрудниковСрезПоследних.ВидОперацииДокумента КАК ВидОбучение
	|ИЗ
	|	Документ.ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизации.Сотрудники КАК ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПРГ_СведенияОбАттестацииСотрудников.СрезПоследних(&ДатаДок, ) КАК ПРГ_СведенияОбАттестацииСотрудниковСрезПоследних
	|		ПО ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.Сотрудник = ПРГ_СведенияОбАттестацииСотрудниковСрезПоследних.Сотрудник
	|			И ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ШЕ = ПРГ_СведенияОбАттестацииСотрудниковСрезПоследних.ШЕ
	|			И ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.ВидАттестации = ПРГ_СведенияОбАттестацииСотрудниковСрезПоследних.ВидАттестации
	|ГДЕ
	|	ПРГ_ПроведениеАттестацииОбученияСотрудниковОрганизацииСотрудники.Ссылка = &Ссылка
	|	И ПРГ_СведенияОбАттестацииСотрудниковСрезПоследних.ВидОперацииДокумента = ЗНАЧЕНИЕ(Перечисление.ПРГ_ВидыОперацииДокументаАттестацииСотрудниковОрганизации.Обучение)";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ДатаДок",Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей       = РегистрыСведений.ПРГ_СведенияОбАттестацииСотрудников.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.РегистраторОбучение);
		
		НаборЗаписей.Прочитать();
		
		Для каждого ЗаписьНабора из НаборЗаписей Цикл
			Если  ЗаписьНабора.Сотрудник = Выборка.Сотрудник и ЗаписьНабора.ВидАттестации = Выборка.ВидАттестации Тогда
				ЗаписьНабора.ДатаАттестации = Выборка.ДатаАттестации;
			КонецЕсли;
		КонецЦикла;
		
		НаборЗаписей.Записать();
				
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если мУдалятьДвижения и  Движения.Количество() > 0 Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = НСтр("ru = 'Проведение документа """ + СокрЛП(Ссылка) + """: '");
	
	СтрСообщения = "";
	
	//проверим заполнение	
	Если не ЗначениеЗаполнено(ВидАттестации) Тогда
		Отказ = Истина;
		СтрСообщения = "Не указан вид аттестации!!!";
	КонецЕсли;
	Если Сотрудники.Количество() = 0 Тогда
		Отказ = Истина;
		Если не СтрСообщения = "" Тогда
			СтрСообщения = СтрСообщения+Символы.ПС + "Не заполнена таблица с данными об аттестации (обучении)!!!";
		Иначе
			СтрСообщения = "Не заполнена таблица с данными об аттестации (обучении)!!!";
		КонецЕсли;
	КонецЕсли;
	Если не Отказ тогда
		СформироватьДвижения();
	Иначе
		Сообщить("Проведение НЕВОЗМОЖНО!!!"+Символы.ПС+СтрСообщения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры

