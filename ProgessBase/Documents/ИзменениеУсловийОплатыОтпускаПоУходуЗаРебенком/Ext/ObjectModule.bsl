////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем СоответствиеВалютныеСпособыРасчета;
Перем мДлинаСуток;

// Механизм исправлений
Перем мВосстанавливатьДвижения;
Перем мСоответствиеДвижений;
Перем мИсправляемыйДокумент;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// предназначена для заполнения табличной части 
// Параметры:
//	Основание - передается объект-основание
// Возвращаемое значение: нет
//
Процедура ЗаполнитьПоОснованию(Основание) Экспорт
	
	ДокументОснование = Основание;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.ДатаИзменения), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаИзменения
	|ИЗ
	|	Документ.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком КАК ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком
	|ГДЕ
	|	ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.ДокументОснование = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование",Основание);
	Выборка = Запрос.Выполнить().Выбрать();
	ДатаПоследнегоИзменения = '00010101';
	Если Выборка.Следующий() Тогда
		ДатаПоследнегоИзменения = Выборка.ДатаИзменения
	КонецЕсли;
	
	СтрокаРеквизитов = "";
	Если Действие.Пустая() Тогда // документ заполняется впервые
		СтрокаРеквизитов = "Организация,Сотрудник,Физлицо"; 
		ДатаИзменения = Макс(ДатаПоследнегоИзменения + 86400, ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
		Действие = Перечисления.ВидыДействияСНачислением.Изменить;
	ИначеЕсли ДатаИзменения = '00010101' Тогда
		ДатаИзменения = Макс(ДатаИзменения + 86400, Дата)
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПоследнегоИзменения) Тогда
		
		СтрокаРеквизитов = СтрокаРеквизитов	+ ",ОсвобождатьСтавку";
			
	КонецЕсли;
	
	Если Действие = Перечисления.ВидыДействияСНачислением.Изменить Тогда
		СтрокаРеквизитов = СтрокаРеквизитов	
			+ ",ВыплачиватьПособиеДоПолутораЛет,ДатаОкончанияПособияДоПолутораЛет" 
			+ ",ВыплачиватьПособиеДоТрехЛет,ДатаОкончанияПособияДоТрехЛет"
			+ ",КоличествоДетей,КоличествоПервыхДетей";
	Иначе 
		ВыплачиватьПособиеДоПолутораЛет = Ложь;
		ВыплачиватьПособиеДоТрехЛет = Ложь;
		ДатаОкончанияПособияДоПолутораЛет = '00010101';
		ДатаОкончанияПособияДоТрехЛет = '00010101';
		КоличествоДетей = 0;
		КоличествоПервыхДетей = 0;
	КонецЕсли;
	
	Если Не ПустаяСтрока(СтрокаРеквизитов) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Основание, СтрокаРеквизитов);
	КонецЕсли;
	
КонецПроцедуры  // ЗаполнитьПоОснованию

// Выполняет заполнение таблицы плановых начислений и удержаний
//
Процедура ЗаполнитьПлановыеНачисленияУдержания() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", ДокументОснование);
	ОтпускаПоУходу = Новый Массив;
	ОтпускаПоУходу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты);
	ОтпускаПоУходу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет);
	ОтпускаПоУходу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет);
	Запрос.УстановитьПараметр("ОтпускаПоУходу",ОтпускаПоУходу);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник,
	|	ПлановыеНачисленияРаботниковОрганизаций.Показатель1,
	|	ПлановыеНачисленияРаботниковОрганизаций.Валюта1,
	|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1,
	|	ПлановыеНачисленияРаботниковОрганизаций.Показатель2,
	|	ПлановыеНачисленияРаботниковОрганизаций.Валюта2,
	|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд2,
	|	ПлановыеНачисленияРаботниковОрганизаций.Показатель3,
	|	ПлановыеНачисленияРаботниковОрганизаций.Валюта3,
	|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд3,
	|	ПлановыеНачисленияРаботниковОрганизаций.Показатель4,
	|	ПлановыеНачисленияРаботниковОрганизаций.Валюта4,
	|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд4,
	|	ПлановыеНачисленияРаботниковОрганизаций.Показатель5,
	|	ПлановыеНачисленияРаботниковОрганизаций.Валюта5,
	|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд5,
	|	ПлановыеНачисленияРаботниковОрганизаций.Показатель6,
	|	ПлановыеНачисленияРаботниковОрганизаций.Валюта6,
	|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд6,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять) КАК Действие
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ПлановыеНачисленияРаботниковОрганизаций.ПервичныйДокумент = &Регистратор
	|	И (НЕ ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение В (&ОтпускаПоУходу))";
	
	ОбычныеЗаписи = ОсновныеНачисления.НайтиСтроки(Новый Структура("Сторно", Ложь));
	Для Каждого ОбычнаяЗапись Из ОбычныеЗаписи Цикл
		ОсновныеНачисления.Удалить(ОбычнаяЗапись);
	КонецЦикла;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ОсновныеНачисления.Добавить(), Выборка);
	КонецЦикла;
	
	// Удержания
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СрезПлановыхУдержаний.ВидРасчета КАК ВидРасчета,
	|	СрезПлановыхУдержаний.Показатель1 КАК Показатель1,
	|	СрезПлановыхУдержаний.Валюта1 КАК Валюта1,
	|	СрезПлановыхУдержаний.Показатель2 КАК Показатель2,
	|	СрезПлановыхУдержаний.Валюта2 КАК Валюта2,
	|	СрезПлановыхУдержаний.Показатель3 КАК Показатель3,
	|	СрезПлановыхУдержаний.Валюта3 КАК Валюта3,
	|	СрезПлановыхУдержаний.Показатель4 КАК Показатель4,
	|	СрезПлановыхУдержаний.Валюта4 КАК Валюта4,
	|	СрезПлановыхУдержаний.Показатель5 КАК Показатель5,
	|	СрезПлановыхУдержаний.Валюта5 КАК Валюта5,
	|	СрезПлановыхУдержаний.Показатель6 КАК Показатель6,
	|	СрезПлановыхУдержаний.Валюта6 КАК Валюта6,
	|	СрезПлановыхУдержаний.ДокументОснование КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять) КАК Действие
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СрезПлановыхУдержаний
	|ГДЕ
	|	СрезПлановыхУдержаний.Регистратор = &Регистратор
	|	И (НЕ СрезПлановыхУдержаний.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист)";
	
	ОбычныеЗаписи = ПлановыеУдержания.НайтиСтроки(Новый Структура("Сторно", Ложь));
	Для Каждого ОбычнаяЗапись Из ОбычныеЗаписи Цикл
		ПлановыеУдержания.Удалить(ОбычнаяЗапись);
	КонецЦикла;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ПлановыеУдержания.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Неопределено;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Заполняет документ по перерассчитываемому документу
// ИсходныйДокумент - тип ДокументОбъект.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком
//
Процедура ЗаполнитьПоПерерассчитываемомуДокументу(ИсходныйДокумент, Сотрудники = Неопределено) Экспорт
	
	ПроведениеРасчетов.ЗаполнитьИсправлениеПоКадровомуДокументу(ЭтотОбъект, ИсходныйДокумент.Ссылка, Сотрудники);
	
КонецПроцедуры // ЗаполнитьПоПерерассчитываемомуДокументу()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",	ДокументОснование);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.ДатаИзменения КАК ДатаИзменения,
	|	ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.ОсвобождатьСтавку,
	|	ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.Ссылка
	|ПОМЕСТИТЬ ВТЦепочкаДокументов
	|ИЗ
	|	Документ.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком КАК ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком
	|ГДЕ
	|	ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.ДокументОснование = &ДокументОснование
	|	И ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.Проведен
	|	И ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.Ссылка <> &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.ДатаНачала,
	|	ОтпускПоУходуЗаРебенком.ОсвобождатьСтавку,
	|	ОтпускПоУходуЗаРебенком.Ссылка
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.Ссылка = &ДокументОснование";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Изменение.Дата,
	|	Изменение.Организация,
	|	ВЫБОР
	|		КОГДА Изменение.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Изменение.Организация
	|		ИНАЧЕ Изменение.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Изменение.Ответственный,
	|	Изменение.Ссылка,
	|	Изменение.ДатаИзменения,
	|	ВЫБОР
	|		КОГДА Изменение.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВнутреннийСовместитель,
	|	Изменение.ДатаОкончанияПособияДоПолутораЛет,
	|	Изменение.ДатаОкончанияПособияДоТрехЛет,
	|	Изменение.ВыплачиватьПособиеДоПолутораЛет,
	|	Изменение.ВыплачиватьПособиеДоТрехЛет,
	|	Изменение.ДокументОснование.ДатаНачала КАК ДатаНачала,
	|	Изменение.ДокументОснование.ДатаОкончания КАК ДатаОкончания,
	|	Изменение.ДокументОснование.СреднедневнойЗаработок КАК СреднедневнойЗаработок,
	|	Изменение.ДокументОснование.ДополнительныйСреднедневнойЗаработок КАК ДополнительныйСреднедневнойЗаработок,
	|	Изменение.ДокументОснование.ПрименятьЛьготыПриНачисленииПособия КАК ПрименятьЛьготыПриНачисленииПособия,
	|	Изменение.ДокументОснование.РасчетПоПравилам2010Года КАК РасчетПоПравилам2010Года,
	|	ВЫБОР
	|		КОГДА Изменение.ДокументОснование.ВыплачиватьПособиеДоПолутораЛет
	|			ТОГДА ВЫБОР
	|					КОГДА Изменение.ВыплачиватьПособиеДоПолутораЛет
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Изменить)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|				КОНЕЦ
	|		КОГДА Изменение.ВыплачиватьПособиеДоПолутораЛет
	|			ТОГДА ВЫБОР
	|					КОГДА Изменение.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Изменить)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
	|					ИНАЧЕ Изменение.Действие
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять)
	|	КОНЕЦ КАК ДействиеСПособиемДоПолутораЛет,
	|	ВЫБОР
	|		КОГДА Изменение.ДокументОснование.ВыплачиватьПособиеДоТрехЛет
	|			ТОГДА ВЫБОР
	|					КОГДА Изменение.ВыплачиватьПособиеДоТрехЛет
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Изменить)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|				КОНЕЦ
	|		КОГДА Изменение.ВыплачиватьПособиеДоТрехЛет
	|			ТОГДА ВЫБОР
	|					КОГДА Изменение.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Изменить)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
	|					ИНАЧЕ Изменение.Действие
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять)
	|	КОНЕЦ КАК ДействиеСПособиемДоТрехЛет,
	|	Изменение.Действие,
	|	Изменение.ДокументОснование,
	|	Изменение.ДокументОснование.Проведен,
	|	Изменение.КоличествоДетей,
	|	Изменение.КоличествоПервыхДетей,
	|	Изменение.Сотрудник.Физлицо КАК ФизЛицо,
	|	Изменение.ИсправляемыйДокумент.Сотрудник КАК ИсправляемыйДокументСотрудник,
	|	Изменение.Сотрудник,
	|	ВЫБОР
	|		КОГДА Изменение.Сотрудник.Организация = ВЫБОР
	|				КОГДА Изменение.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА Изменение.Организация
	|				ИНАЧЕ Изменение.Организация.ГоловнаяОрганизация
	|			КОНЕЦ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	Изменение.ОсвобождатьСтавку,
	|	ЦепочкаДокументов.ОсвобождатьСтавку КАК ПредыдущееОсвобождатьСтавку,
	|	ЦепочкаДокументов.Ссылка КАК ПредыдущийДокумент
	|ИЗ
	|	Документ.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком КАК Изменение
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(ЦепочкаДокументов.ДатаИзменения) КАК ДатаИзменения
	|		ИЗ
	|			ВТЦепочкаДокументов КАК ЦепочкаДокументов) КАК ПоследняяДата
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТЦепочкаДокументов КАК ЦепочкаДокументов
	|			ПО ПоследняяДата.ДатаИзменения = ЦепочкаДокументов.ДатаИзменения
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Изменение.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

Функция СформироватьЗапросПоРабочимМестам(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("Дата",		 ДатаИзменения);
	Запрос.УстановитьПараметр("Регистратор", ДокументОснование);

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизацииСрезПоследних.Организация,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&Дата,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					РаботникиОрганизаций.Сотрудник
	|				ИЗ
	|					РегистрСведений.СостояниеРаботниковОрганизаций КАК РаботникиОрганизаций
	|				ГДЕ
	|					РаботникиОрганизаций.Регистратор = &Регистратор)) КАК РаботникиОрганизацииСрезПоследних
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
	|					И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";
	
	Запрос.Текст = ТекстЗапроса;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРабочимМестам()

// Формирует запрос по таблице "ПлановыеНачисления" документа
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоОсновнымНачислениям(ВыборкаПоШапкеДокумента, КонтрольКоличестваСтавокШтатногоРасписания, КонтрольРазмераСтавокШтатногоРасписания)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("Дата", ДатаИзменения);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Если Действие = Перечисления.ВидыДействияСНачислением.Изменить Тогда  // данные о размерах начислений до начала отпуска возьмем из движений исходного отпуска
		
		Запрос.УстановитьПараметр("Регистратор", ДокументОснование);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлановыеНачисленияРаботниковОрганизаций.Период КАК Период,
		|	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
		|	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение,
		|	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение.Код,
		|	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаЗавершения КАК ВидРасчетаЗавершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Показатель1Завершения КАК Показатель1Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Показатель2Завершения КАК Показатель2Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Показатель3Завершения КАК Показатель3Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Показатель4Завершения КАК Показатель4Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Показатель5Завершения КАК Показатель5Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Показатель6Завершения КАК Показатель6Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Валюта1Завершения КАК Валюта1Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Валюта2Завершения КАК Валюта2Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Валюта3Завершения КАК Валюта3Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Валюта4Завершения КАК Валюта4Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Валюта5Завершения КАК Валюта5Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.Валюта6Завершения КАК Валюта6Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1Завершения КАК ТарифныйРазряд1Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд2Завершения КАК ТарифныйРазряд2Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд3Завершения КАК ТарифныйРазряд3Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд4Завершения КАК ТарифныйРазряд4Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд5Завершения КАК ТарифныйРазряд5Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд6Завершения КАК ТарифныйРазряд6Завершения,
		|	ПлановыеНачисленияРаботниковОрганизаций.ДействиеЗавершения КАК ДействиеЗавершения
		|ПОМЕСТИТЬ ВТДанныеПриУходеВОтпуск
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
		|ГДЕ
		|	ПлановыеНачисленияРаботниковОрганизаций.ПервичныйДокумент = &Регистратор
		|	И ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ВидРасчетаИзмерение";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧНачисления.Ссылка КАК Ссылка,
		|	ТЧНачисления.НомерСтроки КАК НомерСтроки,
		|	ТЧНачисления.Сотрудник КАК Сотрудник,
		|	ТЧНачисления.Ссылка.ДатаИзменения КАК Период,
		|	ТЧНачисления.Действие КАК Действие,
		|	ВЫБОР
		|		КОГДА ТЧНачисления.Ссылка.ДокументОснование.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ДОБАВИТЬКДАТЕ(ТЧНачисления.Ссылка.ДокументОснование.ДатаОкончания, ДЕНЬ, 1)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	КОНЕЦ КАК ПериодЗавершения,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.ДействиеЗавершения, ВЫБОР
		|			КОГДА ТЧНачисления.Ссылка.ДокументОснование.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ВЫБОР
		|						КОГДА ТЧНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
		|						КОГДА ТЧНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
		|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|						ИНАЧЕ ТЧНачисления.Действие
		|					КОНЕЦ
		|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.ПустаяСсылка)
		|		КОНЕЦ) КАК ДействиеЗавершения,
		|	ТЧНачисления.ВидРасчета КАК ВидРасчета,
		|	ВЫБОР
		|		КОГДА ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|			ТОГДА """"
		|		ИНАЧЕ ТЧНачисления.ВидРасчета
		|	КОНЕЦ КАК ВидРасчетаИзмерение,
		|	ТЧНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,
		|	ТЧНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
		|	ТЧНачисления.ВидРасчета.ПроизвольнаяФормулаРасчета КАК ПроизвольнаяФормулаРасчета,
		|	ТЧНачисления.Показатель1 КАК Показатель1,
		|	ТЧНачисления.Валюта1 КАК Валюта1,
		|	ТЧНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
		|	ТЧНачисления.Показатель2 КАК Показатель2,
		|	ТЧНачисления.Валюта2 КАК Валюта2,
		|	ТЧНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
		|	ТЧНачисления.Показатель3 КАК Показатель3,
		|	ТЧНачисления.Валюта3 КАК Валюта3,
		|	ТЧНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
		|	ТЧНачисления.Показатель4 КАК Показатель4,
		|	ТЧНачисления.Валюта4 КАК Валюта4,
		|	ТЧНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
		|	ТЧНачисления.Показатель5 КАК Показатель5,
		|	ТЧНачисления.Валюта5 КАК Валюта5,
		|	ТЧНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
		|	ТЧНачисления.Показатель6 КАК Показатель6,
		|	ТЧНачисления.Валюта6 КАК Валюта6,
		|	ТЧНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	Документ.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.ОсновныеНачисления КАК ТЧНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеПриУходеВОтпуск КАК ДанныеПриУходеВОтпуск
		|		ПО ТЧНачисления.Сотрудник = ДанныеПриУходеВОтпуск.Сотрудник
		|			И (ТЧНачисления.ВидРасчета = ДанныеПриУходеВОтпуск.ВидРасчетаИзмерение
		|				ИЛИ ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|					И ДанныеПриУходеВОтпуск.ВидРасчетаИзмерениеКод ЕСТЬ NULL )
		|ГДЕ
		|	ТЧНачисления.Ссылка = &ДокументСсылка
		|	И (НЕ ТЧНачисления.Сторно)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник";
		Запрос.Выполнить();
		
		// если мы меняем условия оплаты, тогда на дату окончания отпуска нужно вспомнить отмененные начисления
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.НомерСтроки,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.ВидРасчетаЗавершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.ВидРасчетаЗавершения
		|			ИНАЧЕ ПлановыеНачисления.ВидРасчета
		|		КОНЕЦ) КАК ПрежнийВидРасчета,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Показатель1Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Показатель1Завершения
		|			ИНАЧЕ ПлановыеНачисления.Показатель1
		|		КОНЕЦ) КАК ПрежнийПоказатель1,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Валюта1Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Валюта1Завершения
		|			ИНАЧЕ ПлановыеНачисления.Валюта1
		|		КОНЕЦ) КАК ПрежняяВалюта1,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.ТарифныйРазряд1Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.ТарифныйРазряд1Завершения
		|			ИНАЧЕ ПлановыеНачисления.ТарифныйРазряд1
		|		КОНЕЦ) КАК ПрежнийТарифныйРазряд1,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Показатель2Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Показатель2Завершения
		|			ИНАЧЕ ПлановыеНачисления.Показатель2
		|		КОНЕЦ) КАК ПрежнийПоказатель2,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Валюта2Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Валюта2Завершения
		|			ИНАЧЕ ПлановыеНачисления.Валюта2
		|		КОНЕЦ) КАК ПрежняяВалюта2,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.ТарифныйРазряд2Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.ТарифныйРазряд2Завершения
		|			ИНАЧЕ ПлановыеНачисления.ТарифныйРазряд2
		|		КОНЕЦ) КАК ПрежнийТарифныйРазряд2,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Показатель3Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Показатель3Завершения
		|			ИНАЧЕ ПлановыеНачисления.Показатель3
		|		КОНЕЦ) КАК ПрежнийПоказатель3,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Валюта3Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Валюта3Завершения
		|			ИНАЧЕ ПлановыеНачисления.Валюта3
		|		КОНЕЦ) КАК ПрежняяВалюта3,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.ТарифныйРазряд3Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.ТарифныйРазряд3Завершения
		|			ИНАЧЕ ПлановыеНачисления.ТарифныйРазряд3
		|		КОНЕЦ) КАК ПрежнийТарифныйРазряд3,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Показатель4Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Показатель4Завершения
		|			ИНАЧЕ ПлановыеНачисления.Показатель4
		|		КОНЕЦ) КАК ПрежнийПоказатель4,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Валюта4Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Валюта4Завершения
		|			ИНАЧЕ ПлановыеНачисления.Валюта4
		|		КОНЕЦ) КАК ПрежняяВалюта4,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.ТарифныйРазряд4Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.ТарифныйРазряд4Завершения
		|			ИНАЧЕ ПлановыеНачисления.ТарифныйРазряд4
		|		КОНЕЦ) КАК ПрежнийТарифныйРазряд4,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Показатель5Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Показатель5Завершения
		|			ИНАЧЕ ПлановыеНачисления.Показатель5
		|		КОНЕЦ) КАК ПрежнийПоказатель5,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Валюта5Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Валюта5Завершения
		|			ИНАЧЕ ПлановыеНачисления.Валюта5
		|		КОНЕЦ) КАК ПрежняяВалюта5,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.ТарифныйРазряд5Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.ТарифныйРазряд5Завершения
		|			ИНАЧЕ ПлановыеНачисления.ТарифныйРазряд5
		|		КОНЕЦ) КАК ПрежнийТарифныйРазряд5,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Показатель6Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Показатель6Завершения
		|			ИНАЧЕ ПлановыеНачисления.Показатель6
		|		КОНЕЦ) КАК ПрежнийПоказатель6,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Валюта6Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.Валюта6Завершения
		|			ИНАЧЕ ПлановыеНачисления.Валюта6
		|		КОНЕЦ) КАК ПрежняяВалюта6,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.ТарифныйРазряд6Завершения, ВЫБОР
		|			КОГДА Начисления.Период >= ПлановыеНачисления.ПериодЗавершения
		|					И ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ПлановыеНачисления.ТарифныйРазряд6Завершения
		|			ИНАЧЕ ПлановыеНачисления.ТарифныйРазряд6
		|		КОНЕЦ) КАК ПрежнийТарифныйРазряд6,
		|	ПлановыеНачисления.Регистратор КАК КонфликтныйДокумент,
		|	ЕСТЬNULL(ДанныеПриУходеВОтпуск.Период, ПлановыеНачисления.Период) КАК ДатаДвижения
		|ИЗ
		|	ВТНачисления КАК Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
		|				&Дата,
		|				Сотрудник В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						Сотрудники.Сотрудник
		|					ИЗ
		|						ВТНачисления КАК Сотрудники)) КАК ПлановыеНачисления
		|		ПО Начисления.Сотрудник = ПлановыеНачисления.Сотрудник
		|			И (Начисления.ВидРасчета = ПлановыеНачисления.ВидРасчетаИзмерение
		|				ИЛИ Начисления.ВидРасчета.ЗачетОтработанногоВремени
		|					И ПлановыеНачисления.ВидРасчетаИзмерение.Код ЕСТЬ NULL )
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеПриУходеВОтпуск КАК ДанныеПриУходеВОтпуск
		|		ПО Начисления.Сотрудник = ДанныеПриУходеВОтпуск.Сотрудник
		|			И (Начисления.ВидРасчета = ДанныеПриУходеВОтпуск.ВидРасчетаИзмерение
		|				ИЛИ Начисления.ВидРасчета.ЗачетОтработанногоВремени
		|					И ДанныеПриУходеВОтпуск.ВидРасчетаИзмерениеКод ЕСТЬ NULL )";
		
		ДанныеПлановыхНачислений = Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧНачисления.Ссылка КАК Ссылка,
		|	ТЧНачисления.НомерСтроки КАК НомерСтроки,
		|	ТЧНачисления.Сотрудник КАК Сотрудник,
		|	ТЧНачисления.Ссылка.ДатаИзменения КАК Период,
		|	ТЧНачисления.Действие КАК Действие,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодЗавершения,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.ПустаяСсылка) КАК ДействиеЗавершения,
		|	ТЧНачисления.ВидРасчета КАК ВидРасчета,
		|	ВЫБОР
		|		КОГДА ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|			ТОГДА """"
		|		ИНАЧЕ ТЧНачисления.ВидРасчета
		|	КОНЕЦ КАК ВидРасчетаИзмерение,
		|	ТЧНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,
		|	ТЧНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
		|	ТЧНачисления.ВидРасчета.ПроизвольнаяФормулаРасчета КАК ПроизвольнаяФормулаРасчета,
		|	ТЧНачисления.Показатель1 КАК Показатель1,
		|	ТЧНачисления.Валюта1 КАК Валюта1,
		|	ТЧНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
		|	ТЧНачисления.Показатель2 КАК Показатель2,
		|	ТЧНачисления.Валюта2 КАК Валюта2,
		|	ТЧНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
		|	ТЧНачисления.Показатель3 КАК Показатель3,
		|	ТЧНачисления.Валюта3 КАК Валюта3,
		|	ТЧНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
		|	ТЧНачисления.Показатель4 КАК Показатель4,
		|	ТЧНачисления.Валюта4 КАК Валюта4,
		|	ТЧНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
		|	ТЧНачисления.Показатель5 КАК Показатель5,
		|	ТЧНачисления.Валюта5 КАК Валюта5,
		|	ТЧНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
		|	ТЧНачисления.Показатель6 КАК Показатель6,
		|	ТЧНачисления.Валюта6 КАК Валюта6,
		|	ТЧНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	Документ.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.ОсновныеНачисления КАК ТЧНачисления
		|ГДЕ
		|	ТЧНачисления.Ссылка = &ДокументСсылка
		|	И (НЕ ТЧНачисления.Сторно)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник";
		Запрос.Выполнить();
		
		ДанныеПлановыхНачислений = Неопределено;
		
	КонецЕсли;
	
	Если КонтрольКоличестваСтавокШтатногоРасписания Тогда // здесь добавим данные для штатного расписания
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧНачисления.НомерСтроки КАК НомерСтроки,
		|	ТЧНачисления.Ссылка,
		|	ТЧНачисления.Сотрудник,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность
		|	КОНЕЦ КАК Должность,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.ЗанимаемыхСтавокЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ЗанимаемыхСтавок
		|	КОНЕЦ КАК ЗанимаемыхСтавок,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ГрафикРаботы
		|	КОНЕЦ КАК ГрафикРаботы,
					///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 27.10.2011 14:44 
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.AVTШтатноеРасписаниеЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.AVTШтатноеРасписание
		|	КОНЕЦ КАК AVTШтатноеРасписание,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
		|	ТЧНачисления.Период,
		|	ТЧНачисления.Действие,
		|	ТЧНачисления.ПериодЗавершения,
		|	ТЧНачисления.ДействиеЗавершения,
		|	ТЧНачисления.ВидРасчета,
		|	ТЧНачисления.ВидРасчетаИзмерение,
		|	ТЧНачисления.СпособРасчета,
		|	ТЧНачисления.ЗачетОтработанногоВремени,
		|	ТЧНачисления.ТребуетВводаТарифногоРазряда,
		|	ТЧНачисления.ПроизвольнаяФормулаРасчета,
		|	ТЧНачисления.Показатель1,
		|	ТЧНачисления.Валюта1,
		|	ТЧНачисления.ТарифныйРазряд1,
		|	ТЧНачисления.Показатель2,
		|	ТЧНачисления.Валюта2,
		|	ТЧНачисления.ТарифныйРазряд2,
		|	ТЧНачисления.Показатель3,
		|	ТЧНачисления.Валюта3,
		|	ТЧНачисления.ТарифныйРазряд3,
		|	ТЧНачисления.Показатель4,
		|	ТЧНачисления.Валюта4,
		|	ТЧНачисления.ТарифныйРазряд4,
		|	ТЧНачисления.Показатель5,
		|	ТЧНачисления.Валюта5,
		|	ТЧНачисления.ТарифныйРазряд5,
		|	ТЧНачисления.Показатель6,
		|	ТЧНачисления.Валюта6,
		|	ТЧНачисления.ТарифныйРазряд6
		|ИЗ
		|	ВТНачисления КАК ТЧНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|				&Дата,
		|				Сотрудник В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						Сотрудники.Сотрудник
		|					ИЗ
		|						ВТНачисления КАК Сотрудники)) КАК РаботникиОрганизацииСрезПоследних
		|		ПО ТЧНачисления.Сотрудник = РаботникиОрганизацииСрезПоследних.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧНачисления.НомерСтроки КАК НомерСтроки,
		|	ТЧНачисления.Ссылка,
		|	ТЧНачисления.Сотрудник,
		|	"""" КАК ПодразделениеОрганизации,
		|	"""" КАК Должность,
		|	"""" КАК ЗанимаемыхСтавок,
		|	"""" КАК ГрафикРаботы,
			///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 27.10.2011 14:45 
		|	"""" КАК AVTШтатноеРасписание,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
		|	ТЧНачисления.Период,
		|	ТЧНачисления.Действие,
		|	ТЧНачисления.ПериодЗавершения,
		|	ТЧНачисления.ДействиеЗавершения,
		|	ТЧНачисления.ВидРасчета,
		|	ТЧНачисления.ВидРасчетаИзмерение,
		|	ТЧНачисления.СпособРасчета,
		|	ТЧНачисления.ЗачетОтработанногоВремени,
		|	ТЧНачисления.ТребуетВводаТарифногоРазряда,
		|	ТЧНачисления.ПроизвольнаяФормулаРасчета,
		|	ТЧНачисления.Показатель1,
		|	ТЧНачисления.Валюта1,
		|	ТЧНачисления.ТарифныйРазряд1,
		|	ТЧНачисления.Показатель2,
		|	ТЧНачисления.Валюта2,
		|	ТЧНачисления.ТарифныйРазряд2,
		|	ТЧНачисления.Показатель3,
		|	ТЧНачисления.Валюта3,
		|	ТЧНачисления.ТарифныйРазряд3,
		|	ТЧНачисления.Показатель4,
		|	ТЧНачисления.Валюта4,
		|	ТЧНачисления.ТарифныйРазряд4,
		|	ТЧНачисления.Показатель5,
		|	ТЧНачисления.Валюта5,
		|	ТЧНачисления.ТарифныйРазряд5,
		|	ТЧНачисления.Показатель6,
		|	ТЧНачисления.Валюта6,
		|	ТЧНачисления.ТарифныйРазряд6
		|ИЗ
		|	ВТНачисления КАК ТЧНачисления
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	КонецЕсли;
	
	Возврат ПроцедурыУправленияПерсоналом.СформироватьЗапросПоПлановымНачислениям(Запрос.Выполнить().Выгрузить(), КонтрольРазмераСтавокШтатногоРасписания, ДанныеПлановыхНачислений);
	
КонецФункции // СформироватьЗапросПоОсновнымНачислениям()

// Формирует запрос по таблице "ПлановыеУдержания" документа
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоПлановымУдержаниям(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("Дата",					ДатаИзменения);
	Запрос.УстановитьПараметр("Физлицо",				Сотрудник.Физлицо);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	// получим временную таблицу с показателями начислений
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Удержания.ВидРасчета КАК ВидРасчета,
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
	|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
	|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
	|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
	|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный,
	|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
	|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях
	|ПОМЕСТИТЬ ВТПоказателиУдержаний
	|ИЗ
	|	Документ.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.ПлановыеУдержания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
	|		ПО Удержания.ВидРасчета = Показатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели1
	|		ПО Удержания.ВидРасчета = Показатели1.Ссылка
	|			И (Показатели1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели2
	|		ПО Удержания.ВидРасчета = Показатели2.Ссылка
	|			И (Показатели2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели3
	|		ПО Удержания.ВидРасчета = Показатели3.Ссылка
	|			И (Показатели3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели4
	|		ПО Удержания.ВидРасчета = Показатели4.Ссылка
	|			И (Показатели4.НомерСтроки = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели5
	|		ПО Удержания.ВидРасчета = Показатели5.Ссылка
	|			И (Показатели5.НомерСтроки = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели6
	|		ПО Удержания.ВидРасчета = Показатели6.Ссылка
	|			И (Показатели6.НомерСтроки = 6)
	|ГДЕ
	|	Удержания.Ссылка = &ДокументСсылка
	|	И (НЕ Удержания.Сторно)
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.ВидРасчета,
	|	Показатели1.Показатель,
	|	Показатели2.Показатель,
	|	Показатели3.Показатель,
	|	Показатели4.Показатель,
	|	Показатели5.Показатель,
	|	Показатели6.Показатель,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный,
	|	Показатели1.Показатель.Наименование,
	|	Показатели1.Показатель.ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный,
	|	Показатели2.Показатель.Наименование,
	|	Показатели2.Показатель.ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный,
	|	Показатели3.Показатель.Наименование,
	|	Показатели3.Показатель.ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный,
	|	Показатели4.Показатель.Наименование,
	|	Показатели4.Показатель.ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный,
	|	Показатели5.Показатель.Наименование,
	|	Показатели5.Показатель.ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный,
	|	Показатели6.Показатель.Наименование,
	|	Показатели6.Показатель.ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Удержания.НомерСтроки,
	|	Удержания.Действие,
	|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	Удержания.ВидРасчета.ПроизвольнаяФормулаРасчета КАК ПроизвольнаяФормулаРасчета,
	|	Удержания.ВидРасчета,
	|	Удержания.Показатель1,
	|	Удержания.Валюта1,
	|	Удержания.Показатель2,
	|	Удержания.Валюта2,
	|	Удержания.Показатель3,
	|	Удержания.Валюта3,
	|	Удержания.Показатель4,
	|	Удержания.Валюта4,
	|	Удержания.Показатель5,
	|	Удержания.Валюта5,
	|	Удержания.Показатель6,
	|	Удержания.Валюта6,
	|	ЕСТЬNULL(Показатели.КоличествоПоказателей, 0) КАК КоличествоПоказателей,
	|	Показатели.Показатель1Предопределенный,
	|	Показатели.Показатель1Наименование,
	|	Показатели.Показатель1ТипПоказателя,
	|	Показатели.Показатель1ВозможностьИзменения,
	|	Показатели.Показатель2Предопределенный,
	|	Показатели.Показатель2Наименование,
	|	Показатели.Показатель2ТипПоказателя,
	|	Показатели.Показатель2ВозможностьИзменения,
	|	Показатели.Показатель3Предопределенный,
	|	Показатели.Показатель3Наименование,
	|	Показатели.Показатель3ТипПоказателя,
	|	Показатели.Показатель3ВозможностьИзменения,
	|	Показатели.Показатель4Предопределенный,
	|	Показатели.Показатель4Наименование,
	|	Показатели.Показатель4ТипПоказателя,
	|	Показатели.Показатель4ВозможностьИзменения,
	|	Показатели.Показатель5Предопределенный,
	|	Показатели.Показатель5Наименование,
	|	Показатели.Показатель5ТипПоказателя,
	|	Показатели.Показатель5ВозможностьИзменения,
	|	Показатели.Показатель6Предопределенный,
	|	Показатели.Показатель6Наименование,
	|	Показатели.Показатель6ТипПоказателя,
	|	Показатели.Показатель6ВозможностьИзменения,
	|	Показатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Удержания.ДокументОснование,
	|	ЛОЖЬ КАК ТребуетВводаТарифногоРазряда,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Показатель1Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель1
	|	КОНЕЦ КАК ПрежнийПоказаетль1,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Показатель2Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель2
	|	КОНЕЦ КАК ПрежнийПоказаетль2,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Показатель3Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель3
	|	КОНЕЦ КАК ПрежнийПоказаетль3,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Показатель4Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель4
	|	КОНЕЦ КАК ПрежнийПоказаетль4,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Показатель5Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель5
	|	КОНЕЦ КАК ПрежнийПоказаетль5,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Показатель6Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель6
	|	КОНЕЦ КАК ПрежнийПоказаетль6,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Валюта1Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта1
	|	КОНЕЦ КАК ПрежняяВалюта1,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Валюта2Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта2
	|	КОНЕЦ КАК ПрежняяВалюта2,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Валюта3Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта3
	|	КОНЕЦ КАК ПрежняяВалюта3,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Валюта4Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта4
	|	КОНЕЦ КАК ПрежняяВалюта4,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Валюта5Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта5
	|	КОНЕЦ КАК ПрежняяВалюта5,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаИзменения >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ПлановыеУдержания.Валюта6Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта6
	|	КОНЕЦ КАК ПрежняяВалюта6
	|ИЗ
	|	Документ.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком.ПлановыеУдержания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|				&Дата,
	|				Физлицо = &Физлицо
	|					И Организация = &ГоловнаяОрганизация) КАК ПлановыеУдержания
	|		ПО Удержания.ВидРасчета = ПлановыеУдержания.ВидРасчета
	|			И Удержания.ДокументОснование = ПлановыеУдержания.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиУдержаний КАК Показатели
	|		ПО Удержания.ВидРасчета = Показатели.ВидРасчета
	|ГДЕ
	|	Удержания.Ссылка = &ДокументСсылка
	|	И Удержания.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять)
	|	И (НЕ Удержания.Сторно)";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоПлановымУдержаниям()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;
	
	// ФизЛицо
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	// Проверка того, что не изменили сотрудника при исправлении
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ИсправляемыйДокументСотрудник) 
		И (ВыборкаПоШапкеДокумента.ИсправляемыйДокументСотрудник <> ВыборкаПоШапкеДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("При исправлении документа нельзя изменить сотрудника!", Отказ, Заголовок);
	КонецЕсли;

	// ДокументОснование
	ЕстьДокументОснование = ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДокументОснование);
	Если Не ЕстьДокументОснование Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан документ регистрации отпуска!", Отказ, Заголовок);
	ИначеЕсли Не ВыборкаПоШапкеДокумента.ДокументОснованиеПроведен Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Указанный документ регистрации отпуска ещё не проведен!", Отказ, Заголовок);
	КонецЕсли;

	// ДатаИзменения
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаИзменения) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата изменения условий оплаты отпуска!", Отказ, Заголовок);
	ИначеЕсли ЕстьДокументОснование 
		И (ВыборкаПоШапкеДокумента.ДатаНачала >= ВыборкаПоШапкеДокумента.ДатаИзменения Или ВыборкаПоШапкеДокумента.ДатаОкончания <= ВыборкаПоШапкеДокумента.ДатаИзменения) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Указанная дата изменения условий оплаты отпуска не соответствует периоду отпуска!", Отказ, Заголовок);
	КонецЕсли;
	
	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоШапкеДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Указанный сотрудник оформлен на другую организацию!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ВыплачиватьПособиеДоПолутораЛет Тогда
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоПолутораЛет) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата окончания выплаты пособия за счет ФСС до полутора лет!", Отказ, Заголовок);
			
		ИначеЕсли ЕстьДокументОснование И ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоПолутораЛет > ВыборкаПоШапкеДокумента.ДатаОкончания Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания выплаты пособия за счет ФСС до полутора лет превышает дату окончания отпуска, будет использована дата окончания отпуска.");
			
		ИначеЕсли ЕстьДокументОснование И ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоПолутораЛет < ВыборкаПоШапкеДокумента.ДатаНачала Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания выплаты пособия за счет ФСС до полутора лет не должна быть меньше даты начала отпуска!", Отказ, Заголовок);
			
		КонецЕсли;
		Если ВыборкаПоШапкеДокумента.КоличествоДетей = 0 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано количество детей, за которыми осуществляется уход!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ВыплачиватьПособиеДоТрехЛет Тогда
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоТрехЛет) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата окончания выплаты пособия до трех лет!", Отказ, Заголовок);
			
		ИначеЕсли ЕстьДокументОснование И ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоТрехЛет > ВыборкаПоШапкеДокумента.ДатаОкончания Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания выплаты пособия до трех лет превышает дату окончания отпуска, будет использована дата окончания отпуска.");
			
		ИначеЕсли ЕстьДокументОснование И ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоТрехЛет < ВыборкаПоШапкеДокумента.ДатаНачала Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания выплаты пособия до трех лет не должна быть меньше даты начала отпуска!", Отказ, Заголовок);
			
		КонецЕсли;
	КонецЕсли;
	
	// ВнутреннийСовместитель
	Если ВыборкаПоШапкеДокумента.ВнутреннийСовместитель Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Документ не может быть оформлен на внутреннего совместителя!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "ПлановыеНачисления" документа
// Если какой-то из реквизитов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по товарам документа, 
//  Отказ 						- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеСтрокиОсновныеНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, КонтрольРазмераСтавокШтатногоРасписания, ПроверятьВалюту)
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Основные начисления"": ";

	// ВидРасчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано начисление!", Отказ, Заголовок);
		
	ИначеЕсли (ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать или ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Изменить) Тогда
		// Валюта
		Если ПроверятьВалюту И СоответствиеВалютныеСпособыРасчета[ВыборкаПоСтрокамДокумента.СпособРасчета] и НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Валюта1) и Не ВыборкаПоСтрокамДокумента.ТребуетВводаТарифногоРазряда Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана валюта начисления!", Отказ, Заголовок);
		КонецЕсли;
		// Соответствие размера "основного" начисления штатному расписанию
		Если КонтрольРазмераСтавокШтатногоРасписания и Не ВыборкаПоСтрокамДокумента.РазмерСоответствуетШТР и Не ВыборкаПоСтрокамДокумента.ТребуетВводаТарифногоРазряда Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "размер основного начисления не соответствует штатному расписанию!", Отказ, Заголовок);
		КонецЕсли;
		
	КонецЕсли;
	
	// Действие
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано действие!", Отказ, Заголовок);
	КонецЕсли;
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано рабочее место сотрудника!", Отказ, Заголовок);
	КонецЕсли;
	
	// Размер оплаты
	Если ПроведениеРасчетов.СпособРасчетаТребуетРазмер(ВыборкаПоСтрокамДокумента.ВидРасчета.СпособРасчета) Тогда	
		
		ИспользуютсяНачисленияВВалюте = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ИспользуютсяНачисленияВВалюте");
		
		СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();

		ПроведениеРасчетовПереопределяемый.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Истина, Отказ, Заголовок, ИспользуютсяНачисленияВВалюте, СоответствиеВалютныеСпособыРасчета);
		
	КонецЕсли;	
	
КонецПроцедуры

// Проверяет правильность заполнения реквизитов в строке ТЧ "ПлановыеУдержания" документа
// Если какой-то из реквизитов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по товарам документа, 
//  Отказ 						- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеСтрокиПлановыхУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок)
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Удержания"": ";

	// ВидРасчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид удержания!", Отказ, Заголовок);
	КонецЕсли;
	
	// Действие
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано действие!", Отказ, Заголовок);
	КонецЕсли;
		
	// Размер оплаты
	Если ПроведениеРасчетов.СпособРасчетаТребуетРазмер(ВыборкаПоСтрокамДокумента.ВидРасчета.СпособРасчета) И ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда	
		
		ИспользуютсяНачисленияВВалюте = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ИспользуютсяНачисленияВВалюте");
		
		СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();

		ПроведениеРасчетовПереопределяемый.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Ложь, Отказ, Заголовок, ИспользуютсяНачисленияВВалюте, СоответствиеВалютныеСпособыРасчета);
		
	КонецЕсли;
КонецПроцедуры

// По строке выборки результата запроса по документу формируем движения по регистру ПлановыеНачисленияРаботниковОрганизаций
//
// Параметры: 
//  ВыборкаПоШапкеДокумента 	- выборка из результата запроса по шапке документа,
//  ВыборкаПоРаботникиОрганизации 	- выборка из результата запроса по табличной части документа,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуОтпуска(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)
	
	Если ВыборкаПоШапкеДокумента.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		
		Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
		
		// Свойства
		Движение.Период						= ВыборкаПоШапкеДокумента.ДатаИзменения;
		
		// Измерения
		Движение.Сотрудник					= ВыборкаПоСтрокамДокумента.Сотрудник;
		Движение.Организация				= ВыборкаПоСтрокамДокумента.Организация;
		Движение.ВидРасчетаИзмерение		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты;
		
		// Ресурсы
		Движение.Действие					= Перечисления.ВидыДействияСНачислением.Прекратить;
		Движение.ВидРасчета					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты;
		
		// Реквизиты
		Движение.ПервичныйДокумент			= ВыборкаПоШапкеДокумента.Ссылка;
		
		
		Движение = Движения.СостояниеРаботниковОрганизаций.Добавить();
		
		// Свойства
		Движение.Период						= ВыборкаПоШапкеДокумента.ДатаИзменения;
		
		// Измерения
		Движение.Сотрудник					= ВыборкаПоСтрокамДокумента.Сотрудник;
		Движение.Организация				= ВыборкаПоСтрокамДокумента.Организация;
		
		// Ресурсы
		Движение.Состояние					= Перечисления.СостоянияРаботникаОрганизации.Работает;
		
		// Реквизиты
		Движение.ПервичныйДокумент			= ВыборкаПоШапкеДокумента.Ссылка;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуОтпуска

// По строке выборки результата запроса по документу формируем движения по регистру ПлановыеНачисленияРаботниковОрганизаций
//
// Параметры: 
//  ВыборкаПоШапкеДокумента 	- выборка из результата запроса по шапке документа,
//  ВыборкаПоРаботникиОрганизации 	- выборка из результата запроса по табличной части документа,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуОсновныеНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)

	Если ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		Возврат;
	КонецЕсли;
	
	// Движения по регистру "ПлановыеНачисленияРаботниковОрганизаций"
	ПроцедурыУправленияПерсоналом.СформироватьДвижениеПоПлановымНачислениям(Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить(), ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений

// По строке выборки результата запроса по документу формируем движения по регистру ПлановыеУдержанияРаботниковОрганизаций
//
// Параметры: 
//  ВыборкаПоШапкеДокумента 	- выборка из результата запроса по шапке документа,
//  ВыборкаПоРаботникиОрганизации 	- выборка из результата запроса по табличной части документа,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуПлановыхУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)

	Если ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		Возврат;
	КонецЕсли;
	
	Движение = Движения.ПлановыеУдержанияРаботниковОрганизаций.Добавить();
	
	// Свойства
	Движение.Период                     = ВыборкаПоШапкеДокумента.ДатаИзменения;

	// Измерения
	Движение.ФизЛицо                    = ВыборкаПоШапкеДокумента.ФизЛицо;
	Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ВидРасчета                 = ВыборкаПоСтрокамДокумента.ВидРасчета;
	Движение.ДокументОснование          = ВыборкаПоСтрокамДокумента.ДокументОснование;
	
	// Ресурсы
	Движение.Действие					= ВыборкаПоСтрокамДокумента.Действие;
	Если ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		Для Сч = 1 По 6 Цикл
			Движение["Показатель" + Сч]			= ВыборкаПоСтрокамДокумента["Показатель" + Сч];
			Движение["Валюта" + Сч]					= ВыборкаПоСтрокамДокумента["Валюта" + Сч];
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Если документ перенесен - движения не делаем
	Если ДанныеПрошлойВерсии Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
		
		УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации");
		
		КонтрольКоличестваСтавокШтатногоРасписания = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(УчетнаяПолитикаПоПерсоналуОрганизации, Организация, "КонтрольКоличестваСтавокШтатногоРасписания");
		КонтрольРазмераСтавокШтатногоРасписания = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(УчетнаяПолитикаПоПерсоналуОрганизации, Организация, "КонтрольРазмераСтавокШтатногоРасписания");
		ПроверятьВалюту = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(УчетнаяПолитикаПоПерсоналуОрганизации, Организация, "ИспользуютсяНачисленияВВалюте");
			
		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда
			
			Если ВыборкаПоШапкеДокумента.ДействиеСПособиемДоПолутораЛет <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
				
				Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
				
				// Свойства
				Движение.Период						= ВыборкаПоШапкеДокумента.ДатаИзменения;
				
				// Измерения
				Движение.Сотрудник					= ВыборкаПоШапкеДокумента.Сотрудник;
				Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
				Движение.ВидРасчетаИзмерение		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет;
				
				// Ресурсы
				Движение.Действие					= ВыборкаПоШапкеДокумента.ДействиеСПособиемДоПолутораЛет;
				Движение.ВидРасчета					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет;

				// Реквизиты
				Движение.ДатаНачалаСобытия			= ВыборкаПоШапкеДокумента.ДатаНачала;
				Движение.ПервичныйДокумент			= ВыборкаПоШапкеДокумента.Ссылка;
				
				Если ВыборкаПоШапкеДокумента.ДатаНачала >= ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования() Тогда
					Если ВыборкаПоШапкеДокумента.РасчетПоПравилам2010Года Тогда
						Движение.ДатаНачалаСобытия = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
					Иначе	
						Движение.ДатаНачалаСобытия = ВыборкаПоШапкеДокумента.ДатаНачала;
					КонецЕсли;
				Иначе
					Движение.ДатаНачалаСобытия = ВыборкаПоШапкеДокумента.ДатаНачала;
				КонецЕсли;
				
				Если ВыборкаПоШапкеДокумента.ДействиеСПособиемДоПолутораЛет <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
					Движение.Показатель1				= ВыборкаПоШапкеДокумента.СреднедневнойЗаработок;
					Движение.Показатель2				= ВыборкаПоШапкеДокумента.КоличествоДетей;
					Движение.Показатель3				= ВыборкаПоШапкеДокумента.КоличествоПервыхДетей;
					Движение.Показатель4				= ?(ВыборкаПоШапкеДокумента.ПрименятьЛьготыПриНачисленииПособия,2,1);
					Движение.Показатель5				= ?(ВыборкаПоШапкеДокумента.ПрименятьЛьготыПриНачисленииПособия,0.5,0);
					Движение.Показатель6				= ВыборкаПоШапкеДокумента.ДополнительныйСреднедневнойЗаработок;
					
					Движение.ПериодЗавершения			= Мин(ВыборкаПоШапкеДокумента.ДатаОкончания,ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоПолутораЛет) + 86400;
					Движение.ДействиеЗавершения			= Перечисления.ВидыДействияСНачислением.Прекратить;
					Движение.ВидРасчетаЗавершения		= Движение.ВидРасчета;
				КонецЕсли;

			КонецЕсли;
			
			Если ВыборкаПоШапкеДокумента.ДействиеСПособиемДоТрехЛет <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
				
				Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
				
				// Свойства
				Движение.Период						= ВыборкаПоШапкеДокумента.ДатаИзменения;
				
				// Измерения
				Движение.Сотрудник					= ВыборкаПоШапкеДокумента.Сотрудник;
				Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
				Движение.ВидРасчетаИзмерение		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет;
				
				// Ресурсы
				Движение.Действие					= ВыборкаПоШапкеДокумента.ДействиеСПособиемДоТрехЛет;
				Движение.ВидРасчета					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет;
				Движение.Показатель1				= 50;
				
				Если ВыборкаПоШапкеДокумента.ДействиеСПособиемДоТрехЛет <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
					Движение.ПериодЗавершения			= Мин(ВыборкаПоШапкеДокумента.ДатаОкончания,ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоТрехЛет) + 86400;
					Движение.ДействиеЗавершения			= Перечисления.ВидыДействияСНачислением.Прекратить;
					Движение.ВидРасчетаЗавершения		= Движение.ВидРасчета;
				КонецЕсли;
				
				// Реквизиты
				Движение.ПервичныйДокумент	= ВыборкаПоШапкеДокумента.Ссылка;
				
			КонецЕсли;
			
			// провести в регистр "состояние работников организаций"
			ВыборкаПоМестамРаботы = СформироватьЗапросПоРабочимМестам(ВыборкаПоШапкеДокумента).Выбрать();
			Пока ВыборкаПоМестамРаботы.Следующий() Цикл 
				ДобавитьСтрокуОтпуска(ВыборкаПоШапкеДокумента, ВыборкаПоМестамРаботы);
			КонецЦикла;
			
			// получим реквизиты табличной части
			ВыборкаПоНачислениям = СформироватьЗапросПоОсновнымНачислениям(ВыборкаПоШапкеДокумента, КонтрольКоличестваСтавокШтатногоРасписания, КонтрольРазмераСтавокШтатногоРасписания).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоНачислениям.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиОсновныеНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, Отказ, Заголовок, КонтрольРазмераСтавокШтатногоРасписания, ПроверятьВалюту);

				Если НЕ Отказ Тогда
					ДобавитьСтрокуОсновныеНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям);
				КонецЕсли;

			КонецЦикла;
			
			// получим реквизиты табличной части
			ВыборкаПоУдержаниям = СформироватьЗапросПоПлановымУдержаниям(ВыборкаПоШапкеДокумента).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоУдержаниям.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиПлановыхУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоУдержаниям, Отказ, Заголовок);

				Если НЕ Отказ Тогда
					ДобавитьСтрокуПлановыхУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоУдержаниям);
				КонецЕсли;

			КонецЦикла;

			// штатное расписание
			Если Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ДатаИзменения",       ДатаИзменения);
				Запрос.УстановитьПараметр("ФизЛицо",             ВыборкаПоШапкеДокумента.Физлицо);
				Запрос.УстановитьПараметр("ГоловнаяОрганизация", ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	СотрудникиОсвободившиеСтавкиВОрганизацияхСрезПоследних.Сотрудник,
				|	СотрудникиОсвободившиеСтавкиВОрганизацияхСрезПоследних.Организация
				|ИЗ
				|	РегистрСведений.СотрудникиОсвободившиеСтавкиВОрганизациях.СрезПоследних(
				|			&ДатаИзменения,
				|			Сотрудник.Физлицо = &Физлицо
				|				И Организация = &ГоловнаяОрганизация) КАК СотрудникиОсвободившиеСтавкиВОрганизацияхСрезПоследних
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
				|				&ДатаИзменения,
				|				Сотрудник.Физлицо = &Физлицо
				|					И Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизацийСрезПоследних
				|		ПО СотрудникиОсвободившиеСтавкиВОрганизацияхСрезПоследних.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
				|			И СотрудникиОсвободившиеСтавкиВОрганизацияхСрезПоследних.Организация = РаботникиОрганизацийСрезПоследних.Организация
				|ГДЕ
				|	ВЫБОР
				|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
				|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаИзменения
				|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
				|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
				|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";
				
				ВыборкаПоМестамРаботы = Запрос.Выполнить().Выбрать();
				Пока ВыборкаПоМестамРаботы.Следующий() Цикл
					
					Движение = Движения.СотрудникиОсвободившиеСтавкиВОрганизациях.Добавить();
					
					// Свойства
					Движение.Период					= ДатаИзменения;
					
					// Измерения
					Движение.Сотрудник				= ВыборкаПоМестамРаботы.Сотрудник;
					Движение.Организация			= ВыборкаПоМестамРаботы.Организация;
					
					// Ресурсы
					Движение.ОсвобождатьСтавку		= ложь; 
					
				КонецЦикла;
				
			Иначе
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ДатаИзменения",	        ДатаИзменения);
				Запрос.УстановитьПараметр("Физлицо",	            ВыборкаПоШапкеДокумента.Физлицо);
				Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	РаботникиОрганизацииСрезПоследних.Сотрудник КАК Сотрудник,
				|	РаботникиОрганизацииСрезПоследних.Организация КАК Организация
				|ИЗ
				|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
				|			&ДатаИзменения,
				|			Сотрудник В
				|				(ВЫБРАТЬ
				|					СотрудникиОрганизаций.Ссылка
				|				ИЗ
				|					Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
				|				ГДЕ
				|					СотрудникиОрганизаций.Физлицо = &Физлицо
				|					И СотрудникиОрганизаций.Организация = &ГоловнаяОрганизация)) КАК РаботникиОрганизацииСрезПоследних
				|ГДЕ 
				|	ВЫБОР 
				|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1,1,1) И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &ДатаИзменения
				| 			ТОГДА РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостоянияЗавершения
				|       ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостояния 
				|	КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";
				ВыборкаПоМестамРаботы = Запрос.Выполнить().Выбрать();
				Пока ВыборкаПоМестамРаботы.Следующий() Цикл
					
					Движение = Движения.СотрудникиОсвободившиеСтавкиВОрганизациях.Добавить();
					
					// Свойства
					Движение.Период					=  ДатаИзменения;
					
					// Измерения
					Движение.Сотрудник				= ВыборкаПоМестамРаботы.Сотрудник;
					Движение.Организация			= ВыборкаПоМестамРаботы.Организация;
					
					// Ресурсы
					Движение.ОсвобождатьСтавку		= ВыборкаПоШапкеДокумента.ОсвобождатьСтавку; 
					
					Если ВыборкаПоШапкеДокумента.ОсвобождатьСтавку тогда
						Движение.ПериодЗавершения	         = ВыборкаПоШапкеДокумента.ДатаОкончания + 86400;
						Движение.ОсвобождатьСтавкуЗавершения = ложь;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли; 

	КонецЕсли;

	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ОтпускПоУходуЗаРебенком") Тогда
		ЗаполнитьПоОснованию(Основание);
		ЗаполнитьПлановыеНачисленияУдержания();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеРасчетов.ИсправлениеКадровогоДокументаПередЗаписью(Отказ, РежимЗаписи, РежимПроведения, ЭтотОбъект, мВосстанавливатьДвижения, мИсправляемыйДокумент, мСоответствиеДвижений);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеРасчетов.ИсправлениеКадровогоДокументаПриЗаписи(Отказ, мВосстанавливатьДвижения, мИсправляемыйДокумент, мСоответствиеДвижений);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток = 86400;

мВосстанавливатьДвижения = Ложь;
