Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

//Налоговый режим организации
Перем мУСН;
Перем мОбъектНалогообложенияУСН;
Перем мЕНВД;
Перем мФСС_БЛ;
Перем мИП_ОСН;
Перем мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете;

Перем мДлинаСуток;

Перем мТаблицаОшибок;
Перем мТаблицаКомментированияСтраховыеВзносы;

Перем мЗаполнятьСчетаНУ; //  истина, для программ бухучета в которых НУ ведется по правилам БП1.6
Перем мЗаполнятьДанныеНУ; // ложь, когда данные по НУ не нужны, например УСН или не поддерживается программой бухучета
Перем мУчетПоПодразделениямНаСчетах; //когда учет по подразделениям ведется не на субконто

// номера субконто для счета РасчетыПоИсполнительнымДокументамРаботников, который обрабатывается специальным образом
Перем мНомерСубконтоКонтрагентыКт;
Перем мНомерСубконтоИсполнДокументыКт;

Перем мСтраховыеВзносыСОтпускныхПризнаватьРасходамиВМесяцеНачисления;
Перем мПорядокПризнанияРасходовПоОтпускам; //с 2011 года определяет порядок формирования проводок по отпускам будущих период
Перем мОценочныеОбязательстваФормироватьБУ;
Перем мОценочныеОбязательстваФормироватьНУ;
Перем мОценочныеОбязательстваПорядокРасчета;
Перем мОценочноеОбязательствоДляОтпуска;
Перем мЕстьОценочноеОбязательствоДляОтпуска;
Перем мЗаполнятьОКАТОКПП;

//////////////////////////////////////////////////////////////////////////////////
// алгоритмы по 2009 год

// Процедура формирует проводки по списанию из РБП ЕСН и взносов до 2010 года
//	Параметры
//			ПромежуточнаяТаблица - таблица значений с проводками
//			ПараметрыПолученияСубконто - структура для подмены субконто
//			ПериодыРегистрацииПредыдущихПериодов - массив периодов регистрации РБП
//			МассивСчетаИсключенияРБП - массив счетов которые не учавствуют в РБП
//			ГоловнаяОрганизация
//			ЕСНДоходыБезСкидокИнвалидов - таблица значений, которая используется в  ПолучитьПроводкиПоЕСНиВзносам
//			МассивФизлиц - массиф физлиц, по которым делаем списание из РБП
//		
Процедура СформироватьПроводкиСписанияРБПпоЕСН(ПромежуточнаяТаблица, ПараметрыПолученияСубконто, ПериодыРегистрацииПредыдущихПериодов, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, ЕСНДоходыБезСкидокИнвалидов, МассивФизлиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	РБП_ЕСН = Справочники.РасходыБудущихПериодов.РБПНаЕСН;
	РБП_ПФР = Справочники.РасходыБудущихПериодов.РБПНаПФР;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетов69)";
	
	Запрос.УстановитьПараметр("СписокСчетов69", ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	СписокСчетов69 = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_11
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаФСС_НСиПЗ,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_12
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФСС_БЛ,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_01
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФСС,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_01
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРСтраховая,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_02
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНакопительная,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_01
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_02
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ТФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_04
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФедеральныйБюджет,
	|	ДвиженияВУчете.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	ДвиженияВУчете.СубконтоДт2 КАК ФизЛицо
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ДвиженияВУчете
	|ГДЕ
	|	ДвиженияВУчете.Ссылка.ПериодРегистрации В(&ПериодыРегистрации)
	|	И ДвиженияВУчете.СчетДт = &Счет97
	|	И ДвиженияВУчете.СчетКт В(&СписокСчетов69)
	|	И ДвиженияВУчете.Ссылка.Организация = &парамОбособленноеПодразделение
	|	И ДвиженияВУчете.Ссылка.Проведен
	|	И ДвиженияВУчете.СубконтоДт2 В(&МассивФизлиц)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияВУчете.Ссылка.ПериодРегистрации,
	|	ДвиженияВУчете.СубконтоДт2";
	
	Для Каждого Период Из ПериодыРегистрацииПредыдущихПериодов Цикл  
		НачалоПериодаОтраженияВУчете = Мин(НачалоГода(Период), НачалоГода(ПериодРегистрации));
		Прервать;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ПериодыРегистрации",	ПериодыРегистрацииПредыдущихПериодов);
	Запрос.УстановитьПараметр("НачалоПериода",		НачалоПериодаОтраженияВУчете);
	Запрос.УстановитьПараметр("КонецПериода",		НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Счет69_01",			ПланыСчетов.Хозрасчетный.ФСС);
	Запрос.УстановитьПараметр("Счет69_02_01",		ПланыСчетов.Хозрасчетный.ПФР_страх);
	Запрос.УстановитьПараметр("Счет69_02_02",		ПланыСчетов.Хозрасчетный.ПФР_нак);
	Запрос.УстановитьПараметр("Счет69_03_01",		ПланыСчетов.Хозрасчетный.ФФОМС);
	Запрос.УстановитьПараметр("Счет69_03_02",		ПланыСчетов.Хозрасчетный.ТФОМС);
	Запрос.УстановитьПараметр("Счет69_11",			ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
	Запрос.УстановитьПараметр("Счет69_12",			ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы);
	Запрос.УстановитьПараметр("Счет69_04",			ПланыСчетов.Хозрасчетный.ЕСН_ФБ);
	Запрос.УстановитьПараметр("СписокСчетов69",		СписокСчетов69);
	Запрос.УстановитьПараметр("МассивФизлиц",		МассивФизлиц);
	Запрос.УстановитьПараметр("Счет97",				ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОтборПоФизлицу = Новый Структура("ПериодРегистрации,ФизЛицо");
	ОтборПоПериодуДействия = Новый Структура("ФизЛицо, ПериодРегистрации, ПериодДействия");
	ОтборПоПериодуДействия.ПериодДействия = ПериодРегистрации;
	
	ОтражениеВБУ = ПолучитьДанныеУчетаЕСН(НачалоПериодаОтраженияВУчете, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, ЕСНДоходыБезСкидокИнвалидов, МассивФизлиц);
	
	ОтражениеПредыдущихПериодовПоПериодуДействия = ОтражениеВБУ.Скопировать();
	ОтражениеПредыдущихПериодовПоПериодуДействия.Свернуть("ПериодРегистрации,ФизЛицо,ПериодДействия","БазаФедеральныйБюджет,БазаФСС,БазаФОМС,БазаПФР_НеЕНВД,БазаПФР_ЕНВД,БазаПФР_НеЕНВД_РБП,БазаПФР_ЕНВД_РБП,БазаФСС_БЛ,БазаФСС_БЛ_РБП");
	ОтражениеПредыдущихПериодовПоПериодуДействия.Сортировать("ПериодРегистрации,ФизЛицо,ПериодДействия");
	
	Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
	СчетН97 = ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		ОтборПоФизлицу.ПериодРегистрации	= Выборка.ПериодРегистрации;
		ОтборПоФизлицу.ФизЛицо				= Выборка.ФизЛицо;
		СтрокиПериодовДействия = ОтражениеПредыдущихПериодовПоПериодуДействия.НайтиСтроки(ОтборПоФизлицу);
		
		ОтборПоПериодуДействия.ФизЛицо				= Выборка.ФизЛицо;
		ОтборПоПериодуДействия.ПериодРегистрации	= Выборка.ПериодРегистрации;
		СтрокиОтражения = ОтражениеПредыдущихПериодовПоПериодуДействия.НайтиСтроки(ОтборПоПериодуДействия);
		Если СтрокиОтражения.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ВсегоДоходовФедеральныйБюджет	= 0;
		ВсегоДоходовФСС					= 0;
		ВсегоДоходовФОМС				= 0;
		ВсегоДоходовПФР_НеЕНВД			= 0;
		ВсегоДоходовПФР_ЕНВД			= 0;
		ВсегоДоходовФСС_БЛ				= 0;
		КолвоЭлементовКоллекции = СтрокиПериодовДействия.Количество(); 
		Для ОбратныйИндекс = 1 По КолвоЭлементовКоллекции Цикл 
			ЭлементКоллекции = СтрокиПериодовДействия[КолвоЭлементовКоллекции - ОбратныйИндекс]; 
			Если ЭлементКоллекции.ПериодДействия <= ЭлементКоллекции.ПериодРегистрации Тогда 
				СтрокиПериодовДействия.Удалить(КолвоЭлементовКоллекции - ОбратныйИндекс);
			Иначе
				ВсегоДоходовФедеральныйБюджет = ВсегоДоходовФедеральныйБюджет + ЭлементКоллекции.БазаФедеральныйБюджет;
				ВсегоДоходовФСС = ВсегоДоходовФСС + ЭлементКоллекции.БазаФСС;
				ВсегоДоходовФОМС = ВсегоДоходовФОМС + ЭлементКоллекции.БазаФОМС;
				ВсегоДоходовПФР_НеЕНВД = ВсегоДоходовПФР_НеЕНВД + ЭлементКоллекции.БазаПФР_НеЕНВД_РБП;
				ВсегоДоходовПФР_ЕНВД = ВсегоДоходовПФР_ЕНВД + ЭлементКоллекции.БазаПФР_ЕНВД_РБП;
				ВсегоДоходовФСС_БЛ = ВсегоДоходовФСС_БЛ + ЭлементКоллекции.БазаФСС_БЛ_РБП;
			КонецЕсли;
		КонецЦикла;
		
		// выделяем долю текущего месяца (ранее это был период действия)
		Если СтрокиПериодовДействия.Количество() > 1 Тогда
			Если ВсегоДоходовФедеральныйБюджет = 0 Тогда
				МесячнаяДоляФедеральныйБюджет = Выборка.ФедеральныйБюджет;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанее = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФедеральныйБюджет * СтрокаПериода.БазаФедеральныйБюджет / ВсегоДоходовФедеральныйБюджет,2);
				КонецЦикла;
				МесячнаяДоляФедеральныйБюджет = Выборка.ФедеральныйБюджет - БылоОтраженоРанее
			Иначе
				МесячнаяДоляФедеральныйБюджет = Окр(Выборка.ФедеральныйБюджет * СтрокиОтражения[0].БазаФедеральныйБюджет / ВсегоДоходовФедеральныйБюджет,2);
			КонецЕсли;
			Если ВсегоДоходовФСС = 0 Тогда
				МесячнаяДоляФСС = Выборка.ФСС;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанее = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС / ВсегоДоходовФСС,2);
				КонецЦикла;
				МесячнаяДоляФСС = Выборка.ФСС - БылоОтраженоРанее
			Иначе
				МесячнаяДоляФСС = Окр(Выборка.ФСС * СтрокиОтражения[0].БазаФСС / ВсегоДоходовФСС,2);
			КонецЕсли;
			Если ВсегоДоходовФОМС = 0 Тогда
				МесячнаяДоляФФОМС = Выборка.ФФОМС;
				МесячнаяДоляТФОМС = Выборка.ТФОМС;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанееФФОМС = 0;
				БылоОтраженоРанееТФОМС = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанееФФОМС = БылоОтраженоРанееФФОМС + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС / ВсегоДоходовФОМС,2);
					БылоОтраженоРанееТФОМС = БылоОтраженоРанееТФОМС + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС / ВсегоДоходовФОМС,2);
				КонецЦикла;
				МесячнаяДоляФФОМС = Выборка.ФФОМС - БылоОтраженоРанееФФОМС;
				МесячнаяДоляТФОМС = Выборка.ТФОМС - БылоОтраженоРанееТФОМС;
			Иначе
				ТекущийКоэффициент = СтрокиОтражения[0].БазаФОМС / ВсегоДоходовФОМС;
				МесячнаяДоляФФОМС = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
				МесячнаяДоляТФОМС = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
			КонецЕсли;				
			Если ВсегоДоходовФСС_БЛ = 0 Тогда
				МесячнаяДоляФСС_БЛ = Выборка.ФСС_БЛ;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанее = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС_БЛ * СтрокаПериода.БазаФСС_БЛ_РБП / ВсегоДоходовФСС_БЛ,2);
				КонецЦикла;
				МесячнаяДоляФСС_БЛ = Выборка.ФСС_БЛ - БылоОтраженоРанее
			Иначе
				МесячнаяДоляФСС_БЛ = Окр(Выборка.ФСС_БЛ * СтрокиОтражения[0].БазаФСС_БЛ / ВсегоДоходовФСС_БЛ,2);
			КонецЕсли;				
			Если ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД = 0 Тогда
				МесячнаяДоляПФРСтраховая_НеЕНВД = Выборка.ПФРСтраховая;
				МесячнаяДоляПФРНакопительная_НеЕНВД = Выборка.ПФРНакопительная;
				МесячнаяДоляПФРСтраховая_ЕНВД = -Выборка.ПФРСтраховая;
				МесячнаяДоляПФРНакопительная_ЕНВД = -Выборка.ПФРНакопительная;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанееПФРСтраховая_НеЕНВД = 0;
				БылоОтраженоРанееПФРНакопительная_НеЕНВД = 0;
				БылоОтраженоРанееПФРСтраховая_ЕНВД = 0;
				БылоОтраженоРанееПФРНакопительная_ЕНВД = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанееПФРСтраховая_НеЕНВД = БылоОтраженоРанееПФРСтраховая_НеЕНВД + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР_НеЕНВД_РБП / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
					БылоОтраженоРанееПФРНакопительная_НеЕНВД = БылоОтраженоРанееПФРНакопительная_НеЕНВД + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР_НеЕНВД_РБП / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
					БылоОтраженоРанееПФРСтраховая_ЕНВД = БылоОтраженоРанееПФРСтраховая_ЕНВД + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР_ЕНВД_РБП / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
					БылоОтраженоРанееПФРНакопительная_ЕНВД = БылоОтраженоРанееПФРНакопительная_ЕНВД + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР_ЕНВД_РБП / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
				КонецЦикла;
				Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР_ЕНВД_РБП = 0 Тогда
					МесячнаяДоляПФРСтраховая_НеЕНВД = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая_НеЕНВД - БылоОтраженоРанееПФРСтраховая_ЕНВД;
					МесячнаяДоляПФРНакопительная_НеЕНВД = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная_НеЕНВД - БылоОтраженоРанееПФРНакопительная_ЕНВД;
					МесячнаяДоляПФРСтраховая_ЕНВД = 0;
					МесячнаяДоляПФРНакопительная_ЕНВД = 0;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР_НеЕНВД_РБП = 0 Тогда
					МесячнаяДоляПФРСтраховая_ЕНВД = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая_НеЕНВД - БылоОтраженоРанееПФРСтраховая_ЕНВД;
					МесячнаяДоляПФРНакопительная_ЕНВД = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная_НеЕНВД - БылоОтраженоРанееПФРНакопительная_ЕНВД;
					МесячнаяДоляПФРСтраховая_НеЕНВД = 0;
					МесячнаяДоляПФРНакопительная_НеЕНВД = 0;
				Иначе
					МесячнаяДоляПФРСтраховая_ЕНВД = Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2) - БылоОтраженоРанееПФРСтраховая_ЕНВД;
					МесячнаяДоляПФРНакопительная_ЕНВД = Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2) - БылоОтраженоРанееПФРНакопительная_ЕНВД;
					МесячнаяДоляПФРСтраховая_НеЕНВД = Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховая_ЕНВД - БылоОтраженоРанееПФРСтраховая_ЕНВД - БылоОтраженоРанееПФРСтраховая_НеЕНВД;
					МесячнаяДоляПФРНакопительная_НеЕНВД = Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительная_ЕНВД - БылоОтраженоРанееПФРНакопительная_ЕНВД - БылоОтраженоРанееПФРНакопительная_НеЕНВД;
				КонецЕсли;
			Иначе
				СтрокаТЧ = СтрокиОтражения[0];
				ТекущийКоэффициент = СтрокаТЧ.БазаПФР_НеЕНВД_РБП / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД);
				МесячнаяДоляПФРСтраховая_НеЕНВД = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
				МесячнаяДоляПФРНакопительная_НеЕНВД = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
				ТекущийКоэффициент = СтрокаТЧ.БазаПФР_ЕНВД_РБП / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД);
				МесячнаяДоляПФРСтраховая_ЕНВД = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
				МесячнаяДоляПФРНакопительная_ЕНВД = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
			КонецЕсли;
		Иначе
			// за другие месяцы ничего в РБП не относили
			МесячнаяДоляФедеральныйБюджет		= Выборка.ФедеральныйБюджет;
			МесячнаяДоляФСС						= Выборка.ФСС;
			МесячнаяДоляФФОМС					= Выборка.ФФОМС;
			МесячнаяДоляТФОМС					= Выборка.ТФОМС;
			МесячнаяДоляФСС_БЛ					= Выборка.ФСС_БЛ;
			Если ВсегоДоходовПФР_ЕНВД = 0 Тогда
				МесячнаяДоляПФРСтраховая_НеЕНВД		= Выборка.ПФРСтраховая;
				МесячнаяДоляПФРНакопительная_НеЕНВД	= Выборка.ПФРНакопительная;
				МесячнаяДоляПФРСтраховая_ЕНВД		= 0;
				МесячнаяДоляПФРНакопительная_ЕНВД	= 0;
				
			ИначеЕсли ВсегоДоходовПФР_НеЕНВД = 0 Тогда
				МесячнаяДоляПФРСтраховая_НеЕНВД		= 0;
				МесячнаяДоляПФРНакопительная_НеЕНВД = 0;
				МесячнаяДоляПФРСтраховая_ЕНВД		= Выборка.ПФРСтраховая;
				МесячнаяДоляПФРНакопительная_ЕНВД	= Выборка.ПФРНакопительная;
				
			Иначе
				МесячнаяДоляПФРСтраховая_ЕНВД		= Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
				МесячнаяДоляПФРНакопительная_ЕНВД	= Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
				МесячнаяДоляПФРСтраховая_НеЕНВД		= Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховая_ЕНВД;
				МесячнаяДоляПФРНакопительная_НеЕНВД	= Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительная_ЕНВД;
				
			КонецЕсли;
		КонецЕсли;
		
		СтрокиОтраженияПоФизЛицу = ОтражениеВБУ.НайтиСтроки(ОтборПоПериодуДействия);
		
		// ФедеральныйБюджет
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФедеральныйБюджет");
		РезультатыФБ = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФедеральныйБюджет, Коэффициенты);
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС, Коэффициенты);
		
		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМС, Коэффициенты);
		РезультатыТФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМС, Коэффициенты);
		
		// ПФР по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_НеЕНВД");
		РезультатыПФРНакопительная_НеЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительная_НеЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_НеЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховая_НеЕНВД, Коэффициенты);
		
		// ПФР по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРНакопительная_ЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительная_ЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_ЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховая_ЕНВД, Коэффициенты);
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_БЛ");
		РезультатыФСС_БЛ = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС_БЛ, Коэффициенты);			
		
		Индекс = 0;
		Для каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			
			//////////////////////////////////////////////////////////
			// ЕСН
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ЕСН;
			Если РезультатыФБ <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт 	 = СтрокаОтражения.СчетДт_ПД;
				СтрокаТЧ.СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт2_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт3_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = Счет97;
				СтрокаТЧ.СубконтоКт1   = РБП_ЕСН;
				СтрокаТЧ.СубконтоКт2   = Выборка.ФизЛицо;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ_ПД;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ	   = ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), СчетН97);
					СтрокаТЧ.СубконтоКтНУ1 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,РБП_ЕСН);
					СтрокаТЧ.СубконтоКтНУ2 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,Выборка.ФизЛицо);
				КонецЕсли;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма = РезультатыФБ[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФСС <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт_ПД;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = Счет97;
				СтрокаТЧ.СубконтоКт1 = РБП_ЕСН;
				СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ_ПД;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ	   = ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), СчетН97);
					СтрокаТЧ.СубконтоКтНУ1 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,РБП_ЕСН);
					СтрокаТЧ.СубконтоКтНУ2 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,Выборка.ФизЛицо);
				КонецЕсли;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма = РезультатыФСС[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыФФОМС <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт_ПД;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = Счет97;
				СтрокаТЧ.СубконтоКт1 = РБП_ЕСН;
				СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ_ПД;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ	   = ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), СчетН97);
					СтрокаТЧ.СубконтоКтНУ1 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,РБП_ЕСН);
					СтрокаТЧ.СубконтоКтНУ2 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,Выборка.ФизЛицо);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				СтрокаТЧ.Сумма = РезультатыФФОМС[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыТФОМС <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт_ПД;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = Счет97;
				СтрокаТЧ.СубконтоКт1 = РБП_ЕСН;
				СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ_ПД;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ	   = ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), СчетН97);
					СтрокаТЧ.СубконтоКтНУ1 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,РБП_ЕСН);
					СтрокаТЧ.СубконтоКтНУ2 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,Выборка.ФизЛицо);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				СтрокаТЧ.Сумма = РезультатыТФОМС[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			//////////////////////////////////////////////////////////
			// ПФР
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ПФР;
			Если РезультатыПФРНакопительная_НеЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт_ПД;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = Счет97;
				СтрокаТЧ.СубконтоКт1 = РБП_ПФР;
				СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ_ПД;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ	   = ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), СчетН97);
					СтрокаТЧ.СубконтоКтНУ1 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,РБП_ПФР);
					СтрокаТЧ.СубконтоКтНУ2 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,Выборка.ФизЛицо);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				СтрокаТЧ.Сумма = РезультатыПФРНакопительная_НеЕНВД[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_НеЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт_ПД;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = Счет97;
				СтрокаТЧ.СубконтоКт1 = РБП_ПФР;
				СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ_ПД;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3_ПД, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ	   = ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), СчетН97);
					СтрокаТЧ.СубконтоКтНУ1 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,РБП_ПФР);
					СтрокаТЧ.СубконтоКтНУ2 = ?(СтрокаТЧ.СчетДтНУ.Пустая(),Неопределено,Выборка.ФизЛицо);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				СтрокаТЧ.Сумма = РезультатыПФРСтраховая_НеЕНВД[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыПФРНакопительная_ЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт_ПД;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				// ПФРНакопительная
				СтрокаТЧ.СчетКт = Счет97;
				СтрокаТЧ.СубконтоКт1 = РБП_ПФР;
				СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
				СтрокаТЧ.Сумма = РезультатыПФРНакопительная_ЕНВД[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_ЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт_ПД;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				// ПФРСтраховая
				СтрокаТЧ.СчетКт = Счет97;
				СтрокаТЧ.СубконтоКт1 = РБП_ПФР;
				СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
				СтрокаТЧ.Сумма = РезультатыПФРСтраховая_ЕНВД[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			//////////////////////////////////////////////////////////
			// ФСС_БЛ
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_БЛ;
			Если РезультатыФСС_БЛ <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт_ПД;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2_ПД, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3_ПД, ПараметрыПолученияСубконто);
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				СтрокаТЧ.СчетКт = Счет97;
				СтрокаТЧ.СубконтоКт1 = РБП_ЕСН;
				СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
				СтрокаТЧ.Сумма = РезультатыФСС_БЛ[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
				Если мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				КонецЕсли;
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
	КонецЦикла;
	
	ПериодыТекст = "";
	Для Каждого Период Из ПериодыРегистрацииПредыдущихПериодов Цикл
		КонецМесяца = КонецМесяца(Период);
		Если ПериодыТекст = "" Тогда
			// первый месяц
			ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
		Иначе
			// прибавим остальные месяцы
			ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
		КонецЕсли;
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	БУОсновныеНачисления.СчетДт КАК СчетДт,
	|	БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|	БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|	БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|	БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|	БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|	БУОсновныеНачисления.Результат КАК Результат,
	|	БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|	БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|	БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|	БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|	БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|	БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт
	|ПОМЕСТИТЬ ВТ_Начисления
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодРегистрации В(&ПериодыРегистрации)
	|	И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|	И БУОсновныеНачисления.ВидРасчета.КодДоходаФСС_НС = &Облагается
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&МассивСчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ФизЛицо В(&МассивФизлиц)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|	СведенияОбИнвалидностиФизлиц.Период КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Инвалидность
	|ПОМЕСТИТЬ ВТ_СведенияОбИнвалидности
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо В(&МассивФизлиц)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ДанныеОбИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|			И (СведенияОбИнвалидностиФизлиц.Инвалидность)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ПериодДействия,
	|	БУОсновныеНачисления.ФизЛицо,
	|	БУОсновныеНачисления.СчетДт,
	|	БУОсновныеНачисления.СубконтоДт1,
	|	БУОсновныеНачисления.СубконтоДт2,
	|	БУОсновныеНачисления.СубконтоДт3,
	|	&Счет97 КАК СчетКт,
	|	&РБП_Взносов КАК СубконтоКт1,
	|	БУОсновныеНачисления.ФизЛицо КАК СубконтоКт2,
	|	БУОсновныеНачисления.СчетДтНУ,
	|	БУОсновныеНачисления.СубконтоДтНУ1,
	|	БУОсновныеНачисления.СубконтоДтНУ2,
	|	БУОсновныеНачисления.СубконтоДтНУ3,
	|	ВЫБОР
	|		КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|			ТОГДА &СчетН97
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|	КОНЕЦ КАК СчетКтНУ,
	|	ВЫБОР
	|		КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|			ТОГДА &РБП_Взносов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоКтНУ1,
	|	ВЫБОР
	|		КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|			ТОГДА БУОсновныеНачисления.ФизЛицо
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоКтНУ2,
	|	БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|	БУОсновныеНачисления.ОтражениеВУСН,
	|	СУММА(ВЫБОР
	|			КОГДА ПравоПримененияЛьготПоЕСН.ПравоНаЛьготы
	|				ТОГДА БУОсновныеНачисления.Результат * 0.6
	|			КОГДА СведенияИнвалидность.Физлицо ЕСТЬ НЕ NULL 
	|				ТОГДА БУОсновныеНачисления.Результат * 0.6
	|			ИНАЧЕ БУОсновныеНачисления.Результат
	|		КОНЕЦ) КАК Результат,
	|	БУОсновныеНачисления.ПодразделениеДт,
	|	БУОсновныеНачисления.ПодразделениеКт
	|ИЗ
	|	ВТ_Начисления КАК БУОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеОбИнвалидности КАК СведенияИнвалидность
	|		ПО БУОсновныеНачисления.ПериодРегистрации = СведенияИнвалидность.Период
	|			И БУОсновныеНачисления.ФизЛицо = СведенияИнвалидность.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|			ЕСТЬNULL(ПравоПримененияЛьготПоЕСН.ПравоНаЛьготы, ЛОЖЬ) КАК ПравоНаЛьготы
	|		ИЗ
	|			ВТ_Периоды КАК Периоды
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравоПримененияЛьготПоЕСН КАК ПравоПримененияЛьготПоЕСН
	|				ПО (НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = ПравоПримененияЛьготПоЕСН.Период)
	|					И (ПравоПримененияЛьготПоЕСН.Организация = &парамГоловнаяОрганизация)) КАК ПравоПримененияЛьготПоЕСН
	|		ПО БУОсновныеНачисления.ПериодРегистрации = ПравоПримененияЛьготПоЕСН.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ПериодДействия,
	|	БУОсновныеНачисления.СчетДт,
	|	БУОсновныеНачисления.СубконтоДт1,
	|	БУОсновныеНачисления.СубконтоДт2,
	|	БУОсновныеНачисления.СубконтоДт3,
	|	БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|	БУОсновныеНачисления.ОтражениеВУСН,
	|	БУОсновныеНачисления.ФизЛицо,
	|	БУОсновныеНачисления.СчетДтНУ,
	|	БУОсновныеНачисления.СубконтоДтНУ1,
	|	БУОсновныеНачисления.СубконтоДтНУ2,
	|	БУОсновныеНачисления.СубконтоДтНУ3,
	|	БУОсновныеНачисления.ПодразделениеДт,
	|	БУОсновныеНачисления.ПодразделениеКт,
	|	БУОсновныеНачисления.ФизЛицо";
	
	Запрос.УстановитьПараметр("Облагается",						Перечисления.ДоходыФСС_НС.Облагается);
	Запрос.УстановитьПараметр("Счет97",							ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);
	Запрос.УстановитьПараметр("СчетН97",						ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов);
	Запрос.УстановитьПараметр("РБП_Взносов",					Справочники.РасходыБудущихПериодов.РБПНаФСС);
	Запрос.УстановитьПараметр("МассивСчетаИсключенияРБП",		МассивСчетаИсключенияРБП);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",		ГоловнаяОрганизация);
	
	ОтражениеВБУПредыдущихПериодов = Запрос.Выполнить().Выгрузить();
	ОтражениеПредыдущихПериодовПоПериодуДействия = ОтражениеВБУПредыдущихПериодов.Скопировать();
	ОтражениеПредыдущихПериодовПоПериодуДействия.Свернуть("ПериодРегистрации,ФизЛицо,ПериодДействия","Результат");
	ОтражениеПредыдущихПериодовПоПериодуДействия.Сортировать("ПериодРегистрации,ФизЛицо,ПериодДействия");
	ОтражениеПредыдущихПериодовПоПериодуРегистрации = ОтражениеПредыдущихПериодовПоПериодуДействия.Скопировать();
	ОтражениеПредыдущихПериодовПоПериодуРегистрации.Свернуть("ПериодРегистрации,ФизЛицо","Результат");
	
	ТаблицаЗапроса = РезультатЗапроса.Выгрузить(); // суммы в разрезе ПериодРегистрации+ФизЛицо
	
	ОтборПоФизлицу = Новый Структура("ПериодРегистрации,ФизЛицо");
	ОтборПоПериодуДействия = Новый Структура("ПериодРегистрации,ФизЛицо,ПериодДействия");
	ОтборПоПериодуДействия.ПериодДействия = ПериодРегистрации;
	
	// ФСС_НС
	ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
	Для Каждого СтрокаТЧ Из ТаблицаЗапроса Цикл
		
		ОтборПоФизлицу.ПериодРегистрации = СтрокаТЧ.ПериодРегистрации;
		ОтборПоФизлицу.ФизЛицо			 = СтрокаТЧ.ФизЛицо;
		СтрокиПериодовДействия = ОтражениеПредыдущихПериодовПоПериодуДействия.НайтиСтроки(ОтборПоФизлицу);
		
		ОтборПоПериодуДействия.ПериодРегистрации = СтрокаТЧ.ПериодРегистрации;
		ОтборПоПериодуДействия.ФизЛицо			 = СтрокаТЧ.ФизЛицо;
		СтрокиОтражения = ОтражениеПредыдущихПериодовПоПериодуДействия.НайтиСтроки(ОтборПоПериодуДействия);
		Если СтрокиОтражения.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// выделяем долю текущего месяца (ранее это был период действия)
		Если СтрокиПериодовДействия.Количество() > 1 Тогда
			ВсегоДоходов = ОтражениеПредыдущихПериодовПоПериодуРегистрации.НайтиСтроки(ОтборПоФизлицу)[0].Результат;
			Если ВсегоДоходов = 0 Тогда
				МесячнаяДоля = СтрокаТЧ.СуммаФСС_НСиПЗ;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанее = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанее = БылоОтраженоРанее + Окр(СтрокаТЧ.СуммаФСС_НСиПЗ * СтрокаПериода.Результат / ВсегоДоходов,2);
				КонецЦикла;
				МесячнаяДоля = СтрокаТЧ.СуммаФСС_НСиПЗ - БылоОтраженоРанее
			Иначе
				МесячнаяДоля = Окр(СтрокаТЧ.СуммаФСС_НСиПЗ * СтрокиОтражения[0].Результат / ВсегоДоходов,2);
			КонецЕсли;
		Иначе
			// за другие месяцы ничего в РБП не относили
			МесячнаяДоля = СтрокаТЧ.СуммаФСС_НСиПЗ;
		КонецЕсли;
		
		СтрокиОтраженияМесяца = ОтражениеВБУПредыдущихПериодов.НайтиСтроки(ОтборПоПериодуДействия);
		Результаты = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоля, ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияМесяца,"Результат"));
		
		Индекс = 0;
		Для каждого СтрокаОтражения Из СтрокиОтраженияМесяца Цикл
			
			Если Результаты <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт 		= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт			= СтрокаОтражения.СчетКт;
				СтрокаТЧ.СубконтоКт1	= СтрокаОтражения.СубконтоКт1;
				СтрокаТЧ.СубконтоКт2	= СтрокаОтражения.СубконтоКт2;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ		= СтрокаОтражения.СчетКтНУ;
					СтрокаТЧ.СубконтоКтНУ1	= СтрокаОтражения.СубконтоКтНУ1;
					СтрокаТЧ.СубконтоКтНУ2	= СтрокаОтражения.СубконтоКтНУ2;
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеКт;
				КонецЕсли;
				
				СтрокаТЧ.Сумма = Результаты[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Индекс = Индекс + 1
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполняет таблицу ПромежуточнаяТаблица проводками
// по ЕСН, взносам в ФСС_НС, ФСС_БЛ
// используется по 2009 год
Процедура ПолучитьПроводкиПоЕСНиВзносам(ПромежуточнаяТаблица, ГоловнаяОрганизация, МассивСчетаИсключенияРБП)
	
	НачалоПериодаОтраженияВУчете = НачалоГода(ПериодРегистрации);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	
	// коэффициенты
	ЕСНДоходыБезСкидокИнвалидов = Новый ТаблицаЗначений;
	ОтражениеВБУБезПеридовДействия = ПолучитьДанныеУчетаЕСН(НачалоПериодаОтраженияВУчете, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, ЕСНДоходыБезСкидокИнвалидов);
	ОтражениеВБУБезПеридовДействия.Индексы.Добавить("ФизЛицо, ПериодРегистрации");
	
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение исчисленного ЕСН
	//
	СписокСчетовУчетаЕСН = Новый СписокЗначений;
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ЕСН_ФБ);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ФОМС);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак);
	СписокСчетовУчетаЕСН.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетовУчетаЕСН)";
	
	Запрос.УстановитьПараметр("СписокСчетовУчетаЕСН", СписокСчетовУчетаЕСН);
	СписокСчетовУчетаЕСН = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Запрос.УстановитьПараметр("парамСписокСчетовКт", СписокСчетовУчетаЕСН);
	
	// отражение ЕСН исчисленнонго
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН,
	|	СУММА(-ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма) КАК Сумма";
	Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
		ТекстЗапроса = ТекстЗапроса +
		",
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ1,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ2,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ3";
	КонецЕсли;
	Если мУчетПоПодразделениямНаСчетах Тогда
		ТекстЗапроса = ТекстЗапроса +
		",
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеДт,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеКт";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса +"
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации >= &парамНачалоГода
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации < &парамПериодРегистрации
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация = &Организация
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В(&парамСписокСчетовКт)
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|	И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН";
	Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
		ТекстЗапроса = ТекстЗапроса +
		",
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ1,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ2,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ3";
	КонецЕсли;
	Если мУчетПоПодразделениямНаСчетах Тогда
		ТекстЗапроса = ТекстЗапроса +
		",
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеДт,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ПодразделениеКт";
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	ОтраженоРанееВНалоговомПериоде = Запрос.Выполнить().Выгрузить();
	
	//перепишем в промежуточную таблицу результаты отражения ЕСН в учете
	Для каждого СтрокаИсточник Из ОтраженоРанееВНалоговомПериоде Цикл
		СтрокаПриемник = ПромежуточнаяТаблица.Добавить();
		Для каждого Колонка Из ОтраженоРанееВНалоговомПериоде.Колонки Цикл
			СтрокаПриемник[Колонка.Имя] = СтрокаИсточник[Колонка.Имя];
		КонецЦикла;
	КонецЦикла;
	
	// Периоды
	// Таблица список периодов
	// Поля:
	//		Период
	// Описание:
	//	список периодов - первые даты месяцеы с начала года по "текущий" для запроса период
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоПериодаОтраженияВУчете);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы
	Пока КонецМесяца < КонецМесяца(ПериодРегистрации) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	// УчетнаяПолитикаНалоговыйУчет
	// Таблица УчетнаяПолитикаНалоговыйУчетУСН - это список периодов, и значения учетной политики
	// поля:
	//		УСН,
	//      ОрганизацияЯвляетсяПлательщикомЕНВД
	//	    УплачиватьДобровольныеВзносыВФСС
	//		Месяц - месяц налогового периода
	Запрос.Текст = ПолучитьТекстЗапросаУчетнаяПолитикаНалоговыйУчет();
	Запрос.Выполнить();
	
	// для заполнения данных по ЕСН нужно получить максимальные ставки ЕСН
	// и передать их в качестве параметров в запрос ЕСНИсчисленный
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОСтавкахЕСНиПФР.ФедеральныйБюджетВПроцентах КАК СтавкаФедеральныйБюджет,
	|	СведенияОСтавкахЕСНиПФР.ФССвПроцентах КАК СтавкаФСС,
	|	СведенияОСтавкахЕСНиПФР.ФФОМСвПроцентах КАК СтавкаФФОМС,
	|	СведенияОСтавкахЕСНиПФР.ТФОМСвПроцентах КАК СтавкаТФОМС,
	|	СведенияОСтавкахЕСНиПФР.ПФРНакопительная1вПроцентах КАК СтавкаПФРНакопительная1,
	|	СведенияОСтавкахЕСНиПФР.ПФРНакопительная2вПроцентах КАК СтавкаПФРНакопительная2,
	|	СведенияОСтавкахЕСНиПФР.ПФРСтраховая1вПроцентах КАК СтавкаПФРСтраховая1,
	|	СведенияОСтавкахЕСНиПФР.ПФРСтраховая2вПроцентах КАК СтавкаПФРСтраховая2
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахЕСНиПФР КАК СведенияОСтавкахЕСНиПФР
	|ГДЕ
	|	СведенияОСтавкахЕСНиПФР.Год = &Год
	|	И СведенияОСтавкахЕСНиПФР.НомерСтрокиСтавок = 1
	|	И СведенияОСтавкахЕСНиПФР.ВидСтавокЕСНиПФР = &ВидСтавокЕСНиПФР";
	
	Запрос.УстановитьПараметр("Год", Год(Дата));
	Запрос.УстановитьПараметр("ВидСтавокЕСНиПФР", Организация.ВидСтавокЕСНиПФР);
	ВыборкаЗапросПоСтавкам = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаЗапросПоСтавкам.Следующий() Тогда
		Запрос.УстановитьПараметр("СтавкаФедеральныйБюджет", ВыборкаЗапросПоСтавкам.СтавкаФедеральныйБюджет);
		Запрос.УстановитьПараметр("СтавкаФСС", ВыборкаЗапросПоСтавкам.СтавкаФСС);
		Запрос.УстановитьПараметр("СтавкаФФОМС", ВыборкаЗапросПоСтавкам.СтавкаФФОМС);
		Запрос.УстановитьПараметр("СтавкаТФОМС", ВыборкаЗапросПоСтавкам.СтавкаТФОМС);
		Запрос.УстановитьПараметр("СтавкаПФРНакопительная1", ВыборкаЗапросПоСтавкам.СтавкаПФРНакопительная1);
		Запрос.УстановитьПараметр("СтавкаПФРНакопительная2", ВыборкаЗапросПоСтавкам.СтавкаПФРНакопительная2);
		Запрос.УстановитьПараметр("СтавкаПФРСтраховая1", ВыборкаЗапросПоСтавкам.СтавкаПФРСтраховая1);
		Запрос.УстановитьПараметр("СтавкаПФРСтраховая2", ВыборкаЗапросПоСтавкам.СтавкаПФРСтраховая2);
	Иначе
		Запрос.УстановитьПараметр("СтавкаФедеральныйБюджет", 0);
		Запрос.УстановитьПараметр("СтавкаФСС", 0);
		Запрос.УстановитьПараметр("СтавкаФФОМС", 0);
		Запрос.УстановитьПараметр("СтавкаТФОМС", 0);
		Запрос.УстановитьПараметр("СтавкаПФРНакопительная1", 0);
		Запрос.УстановитьПараметр("СтавкаПФРНакопительная2", 0);
		Запрос.УстановитьПараметр("СтавкаПФРСтраховая1", 0);
		Запрос.УстановитьПараметр("СтавкаПФРСтраховая2", 0);
	КонецЕсли;
	
	// запрос по соответствиям статей затрат начислений и удержаний с ФОТ
	// для подстановки статей затрат при формировании проводок по ЕСН, ПФР, ФСС и т.п.
	// (перечисление ВидыДополнительныхСтатейЗатрат)
	Запрос.Текст = 
	"ВЫБРАТЬ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
	|ИЗ
	|   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат";
	
	ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
	ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	Запрос.Текст =                        
	"ВЫБРАТЬ
	|	ЕСНДоходыИнвалидов.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыИнвалидов.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДоходыИнвалидов.ДоходБезСкидокИнвФБ КАК ДоходБезСкидокИнвФБ,
	|	ЕСНДоходыИнвалидов.ДоходБезСкидокИнвФОМС КАК ДоходБезСкидокИнвФОМС,
	|	ЕСНДоходыИнвалидов.ДоходБезСкидокИнвФСС КАК ДоходБезСкидокИнвФСС
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыБезСкидокИнвалидов
	|ИЗ
	|	&ЕСНДоходыБезСкидокИнвалидов КАК ЕСНДоходыИнвалидов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации";
	Запрос.УстановитьПараметр("ЕСНДоходыБезСкидокИнвалидов", ЕСНДоходыБезСкидокИнвалидов);
	Запрос.Выполнить();
	
	// ЕСНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		ФедеральныйБюджет
	//		ФСС
	//		ФФОМС
	//		ТФОМС
	//		ПФРНакопительная_НеЕНВД - в части видов деятельности, не облагаемых ЕНВД
	//		ПФРСтраховая_НеЕНВД 
	//		ПФРНакопительная_ЕНВД - в части видов деятельности, облагаемых ЕНВД     
	//		ПФРСтраховая_ЕНВД
	// Описание:
	// просуммированный исчисленный ЕСН и страховые взносы в ПФР в разрезе физлиц
	//
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ЕСНПоРаботникам.ФизЛицо,
	|	ЕСНПоРаботникам.ПериодРегистрации,
	|	СУММА(ЕСНПоРаботникам.ФедеральныйБюджет) КАК ФедеральныйБюджет,
	|	СУММА(ЕСНПоРаботникам.ФСС) КАК ФСС,
	|	СУММА(ЕСНПоРаботникам.ФФОМС) КАК ФФОМС,
	|	СУММА(ЕСНПоРаботникам.ТФОМС) КАК ТФОМС,
	|	СУММА(ЕСНПоРаботникам.ПФРНакопительная - ЕСНПоРаботникам.ПФРНакопительнаяЕНВД) КАК ПФРНакопительная_НеЕНВД,
	|	СУММА(ЕСНПоРаботникам.ПФРСтраховая - ЕСНПоРаботникам.ПФРСтраховаяЕНВД) КАК ПФРСтраховая_НеЕНВД,
	|	СУММА(ЕСНПоРаботникам.ПФРНакопительнаяЕНВД) КАК ПФРНакопительная_ЕНВД,
	|	СУММА(ЕСНПоРаботникам.ПФРСтраховаяЕНВД) КАК ПФРСтраховая_ЕНВД
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНИсчисленный.ФизЛицо КАК ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ЕСНИсчисленный.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ЕСНИсчисленный.ФедеральныйБюджет - ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРСтраховая + ЕСНИсчисленный.ПФРНакопительнаяЕНВД + ЕСНИсчисленный.ПФРСтраховаяЕНВД - ЕСТЬNULL(ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФБ, 0) / 100 * (&СтавкаФедеральныйБюджет - ВЫБОР
	|						КОГДА ГОД(ЕСНИсчисленный.ФизЛицо.ДатаРождения) < 1967
	|							ТОГДА &СтавкаПФРНакопительная1 + &СтавкаПФРСтраховая1
	|						ИНАЧЕ &СтавкаПФРНакопительная2 + &СтавкаПФРСтраховая2
	|					КОНЕЦ))
	|		КОНЕЦ КАК ФедеральныйБюджет,
	|		ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ЕСНИсчисленный.ФСС - ЕСТЬNULL(ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФСС, 0) * &СтавкаФСС / 100)
	|		КОНЕЦ КАК ФСС,
	|		ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ЕСНИсчисленный.ФФОМС - ЕСТЬNULL(ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФОМС, 0) * &СтавкаФФОМС / 100)
	|		КОНЕЦ КАК ФФОМС,
	|		ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ЕСНИсчисленный.ТФОМС - ЕСТЬNULL(ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФОМС, 0) * &СтавкаТФОМС / 100)
	|		КОНЕЦ КАК ТФОМС,
	|		СУММА(ЕСНИсчисленный.ПФРНакопительная) КАК ПФРНакопительная,
	|		СУММА(ЕСНИсчисленный.ПФРСтраховая) КАК ПФРСтраховая,
	|		СУММА(ЕСНИсчисленный.ПФРНакопительнаяЕНВД) КАК ПФРНакопительнаяЕНВД,
	|		СУММА(ЕСНИсчисленный.ПФРСтраховаяЕНВД) КАК ПФРСтраховаяЕНВД
	|	ИЗ
	|		РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходыБезСкидокИнвалидов КАК ЕСНДоходыБезСкидокИнвалидов
	|			ПО ЕСНИсчисленный.Период = ЕСНДоходыБезСкидокИнвалидов.ПериодРегистрации
	|				И ЕСНИсчисленный.ФизЛицо = ЕСНДоходыБезСкидокИнвалидов.Физлицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|			ПО ЕСНИсчисленный.Период = УчетнаяПолитикаНалоговыйУчетУСН.Месяц
	|	ГДЕ
	|		ЕСНИсчисленный.Период >= &парамНачалоГода
	|		И ЕСНИсчисленный.Период <= &парамПериодРегистрации
	|		И ЕСНИсчисленный.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	
	|	СГРУППИРОВАТЬ ПО
	|		УчетнаяПолитикаНалоговыйУчетУСН.УСН,
	|		ЕСНИсчисленный.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ЕСНИсчисленный.Период, МЕСЯЦ)) КАК ЕСНПоРаботникам
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНПоРаботникам.ФизЛицо,
	|	ЕСНПоРаботникам.ПериодРегистрации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	РБП_ЕСН = Справочники.РасходыБудущихПериодов.РБПНаЕСН;
	РБП_ПФР = Справочники.РасходыБудущихПериодов.РБПНаПФР;
	
	СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	Отбор = Новый Структура("ФизЛицо, ПериодРегистрации");
	
	Пока Выборка.Следующий() Цикл
		
		Отбор.ФизЛицо = Выборка.ФизЛицо;
		Отбор.ПериодРегистрации = Выборка.ПериодРегистрации;
		
		СтрокиОтраженияПоФизЛицу = ОтражениеВБУБезПеридовДействия.НайтиСтроки(Отбор);
		
		// ФедеральныйБюджет
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФедеральныйБюджет");
		РезультатыФБ = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФедеральныйБюджет, Коэффициенты);
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФСС, Коэффициенты);
		
		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМС, Коэффициенты);
		РезультатыТФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ТФОМС, Коэффициенты);
		
		// ПФР по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_НеЕНВД");
		РезультатыПФРНакопительная_НеЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНакопительная_НеЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_НеЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСтраховая_НеЕНВД, Коэффициенты);
		
		// ПФР по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРНакопительная_ЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНакопительная_ЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_ЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСтраховая_ЕНВД, Коэффициенты);
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			//////////////////////////////////////////////////////////
			// ЕСН
			ПараметрыПолученияСубконто[ТипСтатьиЗатрат].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ЕСН;
			
			Если РезультатыФБ <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.ЕСН_ФБ;
				СтрокаТЧ.СубконтоКт1 = СубконтоКредита;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
				КонецЕсли;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ	= ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), ПланыСчетов.Налоговый.ЕСН_ФБ);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма = РезультатыФБ[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыФСС <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт			= ПланыСчетов.Хозрасчетный.ФСС;
				СтрокаТЧ.СубконтоКт1	= СубконтоКредита;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
				КонецЕсли;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ		= ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), ПланыСчетов.Налоговый.ФСС);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма			= РезультатыФСС[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыФФОМС <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт			= ПланыСчетов.Хозрасчетный.ФФОМС;
				СтрокаТЧ.СубконтоКт1	= СубконтоКредита;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
				КонецЕсли;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ		= ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), ПланыСчетов.Налоговый.ФФОМС);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма			= РезультатыФФОМС[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыТФОМС <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт			= ПланыСчетов.Хозрасчетный.ТФОМС;
				СтрокаТЧ.СубконтоКт1	= СубконтоКредита;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
				КонецЕсли;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ		= ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), ПланыСчетов.Налоговый.ТФОМС);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма			= РезультатыТФОМС[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			//////////////////////////////////////////////////////////
			// ПФР
			ПараметрыПолученияСубконто[ТипСтатьиЗатрат].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ПФР;
			
			Если РезультатыПФРНакопительная_НеЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто); 
				СтрокаТЧ.СубконтоДт1	= ?(СубконтоДт1 = РБП_ЕСН, РБП_ПФР, СубконтоДт1);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_нак;
				СтрокаТЧ.СубконтоКт1 = СубконтоКредита;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
				КонецЕсли;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СубконтоДтНУ1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ1	= ?(СубконтоДтНУ1 = РБП_ЕСН, РБП_ПФР, СубконтоДтНУ1);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ = ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), ПланыСчетов.Налоговый.ПФР_нак);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма = РезультатыПФРНакопительная_НеЕНВД[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_НеЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто); 
				СтрокаТЧ.СубконтоДт1	= ?(СтрокаОтражения.СубконтоДт1 = РБП_ЕСН, РБП_ПФР, СубконтоДт1);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_страх;
				СтрокаТЧ.СубконтоКт1 = СубконтоКредита;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
				КонецЕсли;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СубконтоДтНУ1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто); 
					СтрокаТЧ.СубконтоДтНУ1	= ?(СубконтоДтНУ1 = РБП_ЕСН, РБП_ПФР, СубконтоДтНУ1);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКтНУ			= ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), ПланыСчетов.Налоговый.ПФР_страх);
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма = РезультатыПФРСтраховая_НеЕНВД[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыПФРНакопительная_ЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт1	= ?(СубконтоДт1 = РБП_ЕСН, РБП_ПФР, СубконтоДт1);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_нак;
				СтрокаТЧ.СубконтоКт1 = СубконтоКредита;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма = РезультатыПФРНакопительная_ЕНВД[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_ЕНВД <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт1	= ?(СубконтоДт1 = РБП_ЕСН, РБП_ПФР, СубконтоДт1);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
				СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_страх;
				СтрокаТЧ.СубконтоКт1 = СубконтоКредита;
				
				Если мУчетПоПодразделениямНаСчетах Тогда
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
				КонецЕсли;
				
				СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
				СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
				
				СтрокаТЧ.Сумма = РезультатыПФРСтраховая_ЕНВД[Индекс];
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			Индекс = Индекс + 1;
			
		КонецЦикла;
	КонецЦикла;
	
	Если мФСС_БЛ Тогда
		
		Если мУСН Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЕСНСведенияОДоходах.ФизЛицо,
			|	СУММА(ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка) * &СтавкаФСС_БЛ КАК Результат
			|ИЗ
			|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
			|ГДЕ
			|	ЕСНСведенияОДоходах.Период = &парамПериодРегистрации
			|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
			|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
			|	И ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФСС
			|	И ЕСНСведенияОДоходах.Результат <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ЕСНСведенияОДоходах.ФизЛицо";
			
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЕСНСведенияОДоходах.ФизЛицо,
			|	СУММА(ВЫБОР
			|			КОГДА ЕСНСведенияОДоходах.ОблагаетсяЕНВД
			|				ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
			|			ИНАЧЕ 0
			|		КОНЕЦ) * &СтавкаФСС_БЛ КАК Результат
			|ИЗ
			|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
			|ГДЕ
			|	ЕСНСведенияОДоходах.Период = &парамПериодРегистрации
			|	И ЕСНСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
			|	И ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация
			|	И ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФСС
			|	И ЕСНСведенияОДоходах.Результат <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ЕСНСведенияОДоходах.ФизЛицо";
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("СтавкаФСС_БЛ", 0.03);
		
		Отбор = Новый Структура("ФизЛицо, ПериодРегистрации");
		Отбор.ПериодРегистрации = ПериодРегистрации;
		
		ПараметрыПолученияСубконто[ТипСтатьиЗатрат].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_БЛ;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Отбор.ФизЛицо = Выборка.ФизЛицо;
			
			СтрокиОтраженияПоФизЛицу = ОтражениеВБУБезПеридовДействия.НайтиСтроки(Отбор);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_БЛ");
			РезультатыФСС_БЛ = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.Результат, Коэффициенты);
			
			Если РезультатыФСС_БЛ <> Неопределено Тогда
				Индекс = 0;
				Для каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
					
					Если РезультатыФСС_БЛ[Индекс] <> 0 Тогда
						
						СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
						СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
						СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
						СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
						СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
						СтрокаТЧ.СчетКт			= ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы;
						СтрокаТЧ.СубконтоКт1	= СубконтоКредита;
						
						Если мУчетПоПодразделениямНаСчетах Тогда
							СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						КонецЕсли;
						
						Если мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
							СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
						КонецЕсли;
						
						СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
						СтрокаТЧ.Сумма = РезультатыФСС_БЛ[Индекс];
						Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
							СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
						КонецЕсли;
						
					КонецЕсли;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;	
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	//
	// конец отражения исчисленного ЕСН
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// формирование проводок по ФСС страхование от несчастных случаев
	//
	
	СтавкаВзноса = БухгалтерскийУчетДополнительный.ПолучитьСтавкуВзносаНаСтрахованиеОтНесчастныхСлучаев(Организация, ПериодРегистрации);
	ПроцентТарифаДляИнвалидовТекст = "0.6";
	
	// ДоходыДляФСС_НС
	//	Результат - база для уплаты взносов по ФСС НС уже учтена льготная ставка 
	//				по зарплате инвалидов
	//	СчетДт
	//	СчетДтНУ
	//	СубконтоДт1
	//	СубконтоДт2
	//	СубконтоДт3 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.ПодразделениеДт
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		БУОсновныеНачисления.Результат КАК Результат,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СчетДт
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СчетДт
	|			ИНАЧЕ &Счет97
	|		КОНЕЦ КАК СчетДт,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДт1
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДт1
	|			ИНАЧЕ &РБП_Взносов
	|		КОНЕЦ КАК СубконтоДт1,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДт2
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДт2
	|			ИНАЧЕ БУОсновныеНачисления.ФизЛицо
	|		КОНЕЦ КАК СубконтоДт2,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДт3
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДт3
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК СубконтоДт3,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СчетДтНУ
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СчетДтНУ
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СчетДтНУ
	|			ИНАЧЕ &СчетН97
	|		КОНЕЦ КАК СчетДтНУ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ1
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ1
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ1
	|			ИНАЧЕ &РБП_Взносов
	|		КОНЕЦ КАК СубконтоДтНУ1,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ2
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ2
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ2
	|			ИНАЧЕ БУОсновныеНачисления.ФизЛицо
	|		КОНЕЦ КАК СубконтоДтНУ2,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ3
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ3
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ3
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ВидРасчета.КодДоходаФСС_НС = &Облагается
	|		И БУОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.Результат,
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		БУДополнительныеНачисления.ПодразделениеДт
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		БУДополнительныеНачисления.ВидРасчета.КодДоходаФСС_НС = &Облагается
	|		И НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
	|		И БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизЛицо,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.ПодразделениеДт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Доходы.ФизЛицо
	|ПОМЕСТИТЬ ВТ_СписокФизлиц
	|ИЗ
	|	ВТ_Доходы КАК ВТ_Доходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|	СведенияОбИнвалидностиФизлиц.Период КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Инвалидность
	|ПОМЕСТИТЬ ВТ_СведенияОбИнвалидности
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо В
	|			(ВЫБРАТЬ
	|				СписокФизлиц.ФизЛицо
	|			ИЗ
	|				ВТ_СписокФизлиц КАК СписокФизлиц)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ДанныеОбИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|			И (СведенияОбИнвалидностиФизлиц.Инвалидность)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА СведенияИнвалидность.Инвалидность
	|					ИЛИ ПравоПримененияЛьготПоЕСН.ПравоНаЛьготы
	|				ТОГДА Доходы.Результат * 0.6
	|			ИНАЧЕ Доходы.Результат
	|		КОНЕЦ) КАК Результат,
	|	Доходы.СчетДт КАК СчетДт,
	|	Доходы.СубконтоДт1 КАК СубконтоДт1,
	|	Доходы.СубконтоДт2 КАК СубконтоДт2,
	|	Доходы.СубконтоДт3 КАК СубконтоДт3,
	|	Доходы.СчетДтНУ КАК СчетДтНУ,
	|	Доходы.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН КАК ОтражениеВУСН,
	|	Доходы.ПодразделениеДт
	|ИЗ
	|	ВТ_Доходы КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
	|				&парамПериодРегистрации,
	|				Физлицо В
	|					(ВЫБРАТЬ
	|						СписокФизлиц.ФизЛицо
	|					ИЗ
	|						ВТ_СписокФизлиц КАК СписокФизлиц)) КАК СведенияИнвалидность
	|		ПО Доходы.ФизЛицо = СведенияИнвалидность.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравоПримененияЛьготПоЕСН КАК ПравоПримененияЛьготПоЕСН
	|		ПО (ПравоПримененияЛьготПоЕСН.Период = &парамПериодРегистрации)
	|			И (ПравоПримененияЛьготПоЕСН.Организация = &парамГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.ПодразделениеДт
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетДт,
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3,
	|	СчетДтНУ,
	|	СубконтоДтНУ1,
	|	СубконтоДтНУ2,
	|	СубконтоДтНУ3,
	|	СпособРаспределенияЗатрат,
	|	ОтражениеВУСН
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Облагается",			Перечисления.ДоходыФСС_НС.Облагается);
	Запрос.УстановитьПараметр("СчетаИсключения",	МассивСчетаИсключенияРБП);
	Запрос.УстановитьПараметр("Счет97",				ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);
	Запрос.УстановитьПараметр("СчетН97",			ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов);
	Запрос.УстановитьПараметр("РБП_Взносов",		Справочники.РасходыБудущихПериодов.РБПНаФСС);
	
	Результаты = Запрос.Выполнить().Выгрузить();
	
	Всего = Результаты.Итог("Результат") * СтавкаВзноса;
	Коэффициенты = Результаты.ВыгрузитьКолонку("Результат");
	СуммыПоСчетам = ОбщегоНазначенияЗК.РаспределитьПропорционально(Всего, Коэффициенты);
	
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
	
	Если СуммыПоСчетам <> Неопределено Тогда
		Для Каждого СтрокаРезультата Из Результаты Цикл
			СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
			
			СтрокаТЧ.СчетДт			= СтрокаРезультата.СчетДт;
			СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаРезультата.СубконтоДт1, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаРезультата.СубконтоДт2, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаРезультата.СубконтоДт3, ПараметрыПолученияСубконто);
			
			Если мУчетПоПодразделениямНаСчетах Тогда
				СтрокаТЧ.ПодразделениеДт = СтрокаРезультата.ПодразделениеДт;
			КонецЕсли;
			
			Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
				СтрокаТЧ.СчетДтНУ		= СтрокаРезультата.СчетДтНУ;
				СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаРезультата.СубконтоДтНУ1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаРезультата.СубконтоДтНУ2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаРезультата.СубконтоДтНУ3, ПараметрыПолученияСубконто);
				Если Не СтрокаТЧ.СчетДтНУ.Пустая() Тогда
					СтрокаТЧ.СчетКтНУ	= ПланыСчетов.Налоговый.ФСС_НСиПЗ;
				КонецЕсли;
			КонецЕсли;
			
			СтрокаТЧ.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаРезультата.СпособРаспределенияЗатрат;
			СтрокаТЧ.ОтражениеВУСН	= СтрокаРезультата.ОтражениеВУСН;
			
			СтрокаТЧ.Сумма			= СуммыПоСчетам[Результаты.Индекс(СтрокаРезультата)];
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	//
	// формирование проводок по ФСС страхование от несчастных случаев
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// списание ЕСН и взносов в ФСС по страхованию от несчастных случаев
	// со счета учета расходов будущих периодов в затраты
	//
	
	// подготовим данные по РБП
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации < &парамПериодРегистрации
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключения))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	
	ТаблицаРезультата =  Запрос.Выполнить().Выгрузить();
	ПериодыРегистрацииПредыдущихПериодов = ТаблицаРезультата.ВыгрузитьКолонку("ПериодРегистрации");
	
	Если ПериодыРегистрацииПредыдущихПериодов.Количество() > 0 Тогда
		
		ТаблицаРезультата.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРезультата.ВыгрузитьКолонку("Физлицо");
		
		СформироватьПроводкиСписанияРБПпоЕСН(ПромежуточнаяТаблица, ПараметрыПолученияСубконто, ПериодыРегистрацииПредыдущихПериодов, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, ЕСНДоходыБезСкидокИнвалидов, МассивФизлиц);
		
	КонецЕсли;
	//
	// конец списания ЕСН и взносов в ФСС по страхованию от несчастных случаев
	// со счета учета расходов будущих периодов в затраты
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// вычеркнем обнулившиеся суммы
	СвернутьТаблицуПроводок(ПромежуточнаяТаблица);
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// замена счетов НУ по регистру соответствий
	//
	
	Если мЗаполнятьДанныеНУ И мЗаполнятьСчетаНУ И мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете = Перечисления.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.НаСчетахЗатратСоответствующихСчетамБухУчета Тогда
		
		Запрос.УстановитьПараметр("ТаблицаПроводок",ПромежуточнаяТаблица);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_Проводки
		|ИЗ
		|	&ТаблицаПроводок КАК ТаблицаПроводок";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт2.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт2,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт3.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт3
		|ПОМЕСТИТЬ ВТ_ТаблицаПроводок
		|ИЗ
		|	ВТ_Проводки КАК ТаблицаПроводок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетДт,
		|	СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий1
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий2
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий3
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = &ПустойСчет
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий4
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = &ПустойСчет
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1 КАК СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2 КАК СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3 КАК СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1 КАК СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2 КАК СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3 КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СчетКт В (&СчетаНалоговСФОТ)
		|				И ТаблицаПроводок.СчетДтНУ В (&СчетаНУ)
		|			ТОГДА ЕСТЬNULL(Налоговый.Ссылка, &ПустойСчетНУ)
		|		ИНАЧЕ ТаблицаПроводок.СчетДтНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ТаблицаПроводок.СчетДтНУ КАК СтарыйСчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ КАК СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3 КАК СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.Сумма КАК Сумма,
		|	ТаблицаПроводок.ОтражениеВУСН КАК ОтражениеВУСН,
		|	ТаблицаПроводок.ВидНачисленияУдержания КАК ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчете
		|ИЗ
		|	ВТ_ТаблицаПроводок КАК ТаблицаПроводок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий1 КАК ТаблицаСоответствий1
		|		ПО ТаблицаПроводок.СчетДт = ТаблицаСоответствий1.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий1.СчетКоррБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий2 КАК ТаблицаСоответствий2
		|		ПО ТаблицаПроводок.СчетДт = ТаблицаСоответствий2.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий2.СчетКоррБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий3 КАК ТаблицаСоответствий3
		|		ПО ТаблицаПроводок.СчетДт = ТаблицаСоответствий3.СчетБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий4 КАК ТаблицаСоответствий4
		|		ПО ТаблицаПроводок.СчетДт = ТаблицаСоответствий4.СчетБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый КАК Налоговый
		|		ПО (ВЫБОР
		|				КОГДА ТаблицаСоответствий1.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий1.СчетНУ
		|				КОГДА ТаблицаСоответствий2.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий2.СчетНУ
		|				КОГДА ТаблицаСоответствий3.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий3.СчетНУ
		|				КОГДА ТаблицаСоответствий4.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий4.СчетНУ
		|				ИНАЧЕ """"
		|			КОНЕЦ = Налоговый.Код)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетДтНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтражениеВУчете.СчетДт КАК СчетДт,
		|	ОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
		|	ОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
		|	ОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
		|	ОтражениеВУчете.СчетКт,
		|	ОтражениеВУчете.СубконтоКт1,
		|	ОтражениеВУчете.СубконтоКт2,
		|	ОтражениеВУчете.СубконтоКт3,
		|	ОтражениеВУчете.СчетДтНУ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ЛОЖЬ
		|		КОГДА ОтражениеВУчете.СчетДтНУ = &ПустойСчетНУ
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОбрабатыватьСубконтоНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА ОтражениеВУчете.СчетДтНУ = &ПустойСчетНУ
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто1.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто1,
		|	НалоговыйСталиВидыСубконто1.ВидСубконто.ТипЗначения КАК ТипЗначения1,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА ОтражениеВУчете.СчетДтНУ = &ПустойСчетНУ
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто2.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто2,
		|	НалоговыйСталиВидыСубконто2.ВидСубконто.ТипЗначения КАК ТипЗначения2,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		КОГДА ОтражениеВУчете.СчетДтНУ = &ПустойСчетНУ
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто3.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто3,
		|	НалоговыйСталиВидыСубконто3.ВидСубконто.ТипЗначения КАК ТипЗначения3,
		|	ОтражениеВУчете.СчетКтНУ,
		|	ОтражениеВУчете.СубконтоКтНУ1,
		|	ОтражениеВУчете.СубконтоКтНУ2,
		|	ОтражениеВУчете.СубконтоКтНУ3,
		|	ОтражениеВУчете.СпособРаспределенияЗатрат,
		|	ОтражениеВУчете.ОтражениеВУСН,
		|	ОтражениеВУчете.Сумма,
		|	ОтражениеВУчете.ВидНачисленияУдержания
		|ИЗ
		|	ВТ_ОтражениеВУчете КАК ОтражениеВУчете
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто1
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйСталиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто2
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйСталиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто3
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйСталиВидыСубконто3.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто1
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйБылиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто2
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйБылиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто3
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйБылиВидыСубконто3.НомерСтроки)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетДт,
		|	СубконтоДт1,
		|	СубконтоДт2,
		|	СубконтоДт3,
		|	СчетДтНУ,
		|	СубконтоДтНУ1,
		|	СубконтоДтНУ2,
		|	СубконтоДтНУ3
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		СчетаНалоговСФОТ = Новый СписокЗначений();
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ТФОМС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ЕСН_ФБ);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		
		СчетаНУ = Новый СписокЗначений();
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств);
		
		СчетаНУТекст = 
		"ВЫБРАТЬ
		|	Налоговый.Ссылка
		|ИЗ
		|	ПланСчетов.Налоговый КАК Налоговый
		|ГДЕ
		|	Налоговый.Ссылка В ИЕРАРХИИ(&СчетаНУ)";
		
		ЗапросСчетаНУ = Новый Запрос(СчетаНУТекст);
		ЗапросСчетаНУ.УстановитьПараметр("СчетаНУ",СчетаНУ);
		
		Запрос.УстановитьПараметр("СчетаНалоговСФОТ", 		СчетаНалоговСФОТ);
		Запрос.УстановитьПараметр("СчетаНУ", 				ЗапросСчетаНУ.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
		Запрос.УстановитьПараметр("ПустойСчет",				ПланыСчетов.Хозрасчетный.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустойСчетНУ",			ПланыСчетов.Налоговый.ПустаяСсылка());
		
		ТаблицаПослеПодмен = Запрос.Выполнить().Выгрузить();
		Для каждого СтрокаРезультата Из ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("ОбрабатыватьСубконтоНУ",Истина)) Цикл
			Если СтрокаРезультата.ЕстьСубконто1 И СтрокаРезультата.СубконтоДтНУ1 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ1 = СтрокаРезультата.ТипЗначения1.ПривестиЗначение()
			КонецЕсли;
			Если СтрокаРезультата.ЕстьСубконто2 И СтрокаРезультата.СубконтоДтНУ2 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ2 = СтрокаРезультата.ТипЗначения2.ПривестиЗначение()
			КонецЕсли;
			Если СтрокаРезультата.ЕстьСубконто3 И СтрокаРезультата.СубконтоДтНУ3 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ3 = СтрокаРезультата.ТипЗначения3.ПривестиЗначение()
			КонецЕсли;
		КонецЦикла; 
		
		ТаблицаПослеПодмен.Свернуть("СчетДт,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,СпособРаспределенияЗатрат,
		|СчетДтНУ,СчетКтНУ,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3,
		|ОтражениеВУСН,ВидНачисленияУдержания", "Сумма");
		
		НулевыеСтроки = ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("Сумма",0));
		Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
			ТаблицаПослеПодмен.Удалить(СтрокаТаблицы)
		КонецЦикла;
		
		ПромежуточнаяТаблица = ТаблицаПослеПодмен.Скопировать();
		
	КонецЕсли;
	
	//
	// замена счетов НУ по регистру соответствий
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
КонецПроцедуры //ПолучитьПроводкиПоЕСНиВзносам(

Функция ПолучитьТекстЗапросаУчетнаяПолитикаНалоговыйУчет()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	""поле УСН"" КАК УСН,
	|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД, ЛОЖЬ) КАК ОрганизацияЯвляетсяПлательщикомЕНВД,
	|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.УплачиватьДобровольныеВзносыВФСС, ЛОЖЬ) КАК УплачиватьДобровольныеВзносыВФСС
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаНалоговыйУчет
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И (УчетнаяПолитикаНалоговыйУчет.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"РегистрСведений.УчетнаяПолитикаНалоговыйУчет", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ИмяУчетнойПолитики()); 
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """поле УСН""", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ТекстПоляУСН4аФСС());
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаУчетнаяПолитикаНалоговыйУчет()

// Функция фозвращает таблицу значений с данными для вычисления коэффициентов отражения в учете ЕСН
// Параметры
//  НачалоПериодаОтраженияВУчете    - начало года с которого необходимо собирать данные, в случае РБП может быть прошлый год
//  СчетаИсключения 				- Массив счетов которые не учавствуют в РБП
//  ГоловнаяОрганизация 			– головная организация
//  МассивФизлиц					- Массив физлиц, по которым собираем данные для списания РБП
//
// Возвращаемое значение:
//   Таблица значений 
//
Функция ПолучитьДанныеУчетаЕСН(НачалоПериодаОтраженияВУчете, СчетаИсключения, ГоловнаяОрганизация, ЕСНДоходыБезСкидокИнвалидов, МассивФизлиц = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНеОтбиратьФизлиц", МассивФизлиц = Неопределено);
	
	// ПериодыРегистрации
	// Таблица список периодов
	// Поля:
	//		Период
	// Описание:
	//	список периодов регистрации, по которым собираем данные, для условия в запросах
	НачалоМесяца = НачалоМесяца(НачалоПериодаОтраженияВУчете);
	// первый месяц
	ПериодыРегистрации = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(НачалоМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК ПериодРегистрации";
	// прибавим остальные месяцы
	Пока НачалоМесяца < ПериодРегистрации Цикл
		НачалоМесяца = НачалоМесяца(КонецМесяца(НачалоМесяца)+1);
		ПериодыРегистрации = ПериодыРегистрации +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(НачалоМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	
	Запрос.Текст = ПериодыРегистрации;
	МассивПериодовРегистрации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПериодРегистрации");
	
	// Периоды
	// Таблица список периодов
	// Поля:
	//		Период
	// Описание:
	//	список периодов - первые даты месяцев с начала года по "текущий" для запроса период по учетной политике
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(НачалоПериодаОтраженияВУчете);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы
	Пока КонецМесяца < КонецМесяца(ПериодРегистрации) Цикл
		КонецМесяца = КонецМесяца(КонецМесяца+1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоПериодаОтраженияВУчете);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамСчетаИсключения", СчетаИсключения);
	Запрос.УстановитьПараметр("МассивПериодовРегистрации", МассивПериодовРегистрации);
	Запрос.УстановитьПараметр("МассивФизлиц", МассивФизлиц);
	
	// УчетнаяПолитикаНалоговыйУчет
	// Таблица УчетнаяПолитикаНалоговыйУчет - это список периодов, когда организация переходила на УСН
	// поля:
	//		УСН, 
	//		Месяц - месяц налогового периода
	// Описание:	
	//	Выбираем Из Периоды (таблица - список периодов с начала года по текущий период)
	//	Внутреннее соединение с "псевдосрезом" последних регистра УчетнаяПолитикаНалоговыйУчет
	//	по равенству периодов
	//  условие: что организация использует УСН
	
	Запрос.Текст = ПолучитьТекстЗапросаУчетнаяПолитикаНалоговыйУчет();
	Запрос.Выполнить();
	
	// ЕСНДоходы
	// Поля:
	//		Сотрудник
	//		ФизЛицо
	//		ПериодРегистрации
	//		КодДоходаЕСН
	//		ОблагаетсяЕНВД
	//		Результат
	//		
	//	
	//	Описание:
	//	Данные отражения доходов в учете ЕСН, помещаем во временную таблицу ВТ_ЕСНДоходы
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.КодДоходаЕСН КАК КодДоходаЕСН,
	|	Доходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	ГОД(Доходы.ПериодРегистрации) КАК Год
	|ПОМЕСТИТЬ ВТ_ЕСНДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		ЕСНОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНОсновныеНачисления.КодДоходаЕСН КАК КодДоходаЕСН,
	|		ЕСНОсновныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ЕСНОсновныеНачисления.Результат КАК Результат
	|	ИЗ
	|		РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
	|	ГДЕ
	|		ЕСНОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНОсновныеНачисления.ПериодРегистрации В(&МассивПериодовРегистрации) И (&парамНеОтбиратьФизлиц ИЛИ ФизЛицо В (&МассивФизлиц))
	|		И (ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|				ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|				ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.Сотрудник,
	|		ЕСНДополнительныеНачисления.ФизЛицо,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.Результат - ЕСНДополнительныеНачисления.Скидка
	|	ИЗ
	|		РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|	ГДЕ
	|		ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНДополнительныеНачисления.ПериодРегистрации В(&МассивПериодовРегистрации) И (&парамНеОтбиратьФизлиц ИЛИ ФизЛицо В (&МассивФизлиц))
	|		И (ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|				ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|				ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.КодДоходаЕСН,
	|	Доходы.ПериодРегистрации,
	|	Доходы.ОблагаетсяЕНВД,
	|	Доходы.ФизЛицо,
	|	ГОД(Доходы.ПериодРегистрации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОблагаетсяЕНВД,
	|	Сотрудник,
	|	КодДоходаЕСН,
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	Год";
	
	
	Запрос.Выполнить();
	
	// ДанныеОбИнвалидности
	//	Поля:
	//		Период
	//		Физлицо
	//
	// Описание:
	//	таблица списка периодов-физлиц которые являются инвалидами
	//
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ЕСНДоходы.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_СписокФизлиц
	|ИЗ
	|	ВТ_ЕСНДоходы КАК ВТ_ЕСНДоходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|	СведенияОбИнвалидностиФизлиц.Период КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Инвалидность
	|ПОМЕСТИТЬ ВТ_СведенияОбИнвалидности
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо В
	|			(ВЫБРАТЬ
	|				СписокФизлиц.Физлицо
	|			ИЗ
	|				ВТ_СписокФизлиц КАК СписокФизлиц)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ДанныеОбИнвалидности
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
	|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
	|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СведенияОбИнвалидностиФизлиц.Физлицо,
	|		Периоды.Период) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
	|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
	|			И (СведенияОбИнвалидностиФизлиц.Физлицо = Периоды.Физлицо)
	|			И (СведенияОбИнвалидностиФизлиц.Инвалидность)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период";
	
	Запрос.Выполнить();
	
	// ЕСНДоходыИнвалидов
	//	Поля:
	//		ФизЛицо
	//		ПериодРегистрации
	//		ДоходИнв... - доход инвалидов по каждому фонду
	//
	//	Описание:
	//	список доходов инвалидов по работникам-периодам регистрации, помещаем во временную таблицу ВТ_ЕСНДоходыИнвалидов
	//	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСНДоходыОсновная.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыОсновная.ПериодРегистрации КАК ПериодРегистрации,
	|	ГОД(ЕСНДоходыОсновная.ПериодРегистрации) КАК Год,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеОбИнвалидности.Физлицо ЕСТЬ НЕ NULL И ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|				ТОГДА ЕСНДоходыОсновная.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДоходИнвФБ,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеОбИнвалидности.Физлицо ЕСТЬ НЕ NULL И ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФОМС
	|				ТОГДА ЕСНДоходыОсновная.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДоходИнвФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеОбИнвалидности.Физлицо ЕСТЬ НЕ NULL И ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФСС
	|				ТОГДА ЕСНДоходыОсновная.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДоходИнвФСС
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыИнвалидов
	|ИЗ
	|	ВТ_ЕСНДоходы КАК ЕСНДоходыОсновная  
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеОбИнвалидности КАК ДанныеОбИнвалидности
	|		ПО ДанныеОбИнвалидности.ФизЛицо = ЕСНДоходыОсновная.ФизЛицо
	|			И ДанныеОбИнвалидности.Период = ЕСНДоходыОсновная.ПериодРегистрации
	|
	|ГДЕ
	|	НЕ (ДанныеОбИнвалидности.ФизЛицо ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНДоходыОсновная.ФизЛицо,
	|	ЕСНДоходыОсновная.ПериодРегистрации,
	|	ГОД(ЕСНДоходыОсновная.ПериодРегистрации),
	|	ДанныеОбИнвалидности.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации,
	|	Год";
	Запрос.Выполнить();
	
	// ЕСНДоходыБезСкидокИнвалидов
	//	Поля:
	//		ФизЛицо
	//		ПериодРегистрации
	//		ДоходБезСкидокИнв... - доход инвалидов по каждому фонду
	//
	//	Описание:
	//	список доходов инвалидов по работникам-периодам регистрации
	//	с учетом ограничения льготы по ст. 239 НК РФ
	//	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСНДоходыИнвалидов.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыИнвалидов.ПериодРегистрации КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФБ) ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСНДоходыИнвалидов.ДоходИнвФБ > 100000
	|						ТОГДА 100000
	|					ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФБ
	|				КОНЕЦ
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФБ) >= 100000
	|			ТОГДА 0
	|		КОГДА ЕСНДоходыИнвалидов.ДоходИнвФБ > 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФБ)
	|			ТОГДА 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФБ)
	|		ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФБ
	|	КОНЕЦ КАК ДоходБезСкидокИнвФБ,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФОМС) ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСНДоходыИнвалидов.ДоходИнвФОМС > 100000
	|						ТОГДА 100000
	|					ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФОМС
	|				КОНЕЦ
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФОМС) >= 100000
	|			ТОГДА 0
	|		КОГДА ЕСНДоходыИнвалидов.ДоходИнвФОМС > 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФОМС)
	|			ТОГДА 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФОМС)
	|		ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФОМС
	|	КОНЕЦ КАК ДоходБезСкидокИнвФОМС,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФСС) ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСНДоходыИнвалидов.ДоходИнвФСС > 100000
	|						ТОГДА 100000
	|					ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФСС
	|				КОНЕЦ
	|		КОГДА СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФСС) >= 100000
	|			ТОГДА 0
	|		КОГДА ЕСНДоходыИнвалидов.ДоходИнвФСС > 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФСС)
	|			ТОГДА 100000 - СУММА(ЕСНДоходыИнвалидовНарастающимИтогом.ДоходИнвФСС)
	|		ИНАЧЕ ЕСНДоходыИнвалидов.ДоходИнвФСС
	|	КОНЕЦ КАК ДоходБезСкидокИнвФСС
	|ИЗ
	|	ВТ_ЕСНДоходыИнвалидов КАК ЕСНДоходыИнвалидов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходыИнвалидов КАК ЕСНДоходыИнвалидовНарастающимИтогом
	|		ПО ЕСНДоходыИнвалидов.ПериодРегистрации > ЕСНДоходыИнвалидовНарастающимИтогом.ПериодРегистрации
	|			И ЕСНДоходыИнвалидов.Год = ЕСНДоходыИнвалидовНарастающимИтогом.Год
	|			И ЕСНДоходыИнвалидов.ФизЛицо = ЕСНДоходыИнвалидовНарастающимИтогом.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНДоходыИнвалидов.ФизЛицо,
	|	ЕСНДоходыИнвалидов.ДоходИнвФБ,
	|	ЕСНДоходыИнвалидов.ДоходИнвФОМС,
	|	ЕСНДоходыИнвалидов.ДоходИнвФСС,
	|	ЕСНДоходыИнвалидов.ПериодРегистрации";
	ЕСНДоходыБезСкидокИнвалидов = Запрос.Выполнить().Выгрузить();
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСНДоходыИнвалидов.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыИнвалидов.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДоходыИнвалидов.ДоходБезСкидокИнвФБ КАК ДоходБезСкидокИнвФБ,
	|	ЕСНДоходыИнвалидов.ДоходБезСкидокИнвФОМС КАК ДоходБезСкидокИнвФОМС,
	|	ЕСНДоходыИнвалидов.ДоходБезСкидокИнвФСС КАК ДоходБезСкидокИнвФСС
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыБезСкидокИнвалидов
	|ИЗ
	|	&ЕСНДоходыБезСкидокИнвалидов КАК ЕСНДоходыИнвалидов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации";
	Запрос.УстановитьПараметр("ЕСНДоходыБезСкидокИнвалидов", ЕСНДоходыБезСкидокИнвалидов);
	Запрос.Выполнить();
	
	//	ЕСНДоходыОблагаемые
	//	Поля:
	//		ФизЛицо
	//		ПериодРегистрации
	//		ДоходБезСкидок ...   по каждому фонду
	//		ДоходБезСкидокИнв ...
	//
	//	Описание:
	//	таблица облагаемых доходов за месяц с учетом ограничения доходов инвалидов
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСНДоходыБезСкидок.ФизЛицо КАК ФизЛицо,
	|	ЕСНДоходыБезСкидок.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДоходыБезСкидок.ДоходБезСкидокФБ КАК ДоходБезСкидокФБ,
	|	ЕСНДоходыБезСкидок.ДоходБезСкидокФОМС КАК ДоходБезСкидокФОМС,
	|	ЕСНДоходыБезСкидок.ДоходБезСкидокФСС КАК ДоходБезСкидокФСС,
	|	ЕСТЬNULL(ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФБ, 0) КАК ДоходБезСкидокИнвФБ,
	|	ЕСТЬNULL(ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФОМС, 0) КАК ДоходБезСкидокИнвФОМС,
	|	ЕСТЬNULL(ЕСНДоходыБезСкидокИнвалидов.ДоходБезСкидокИнвФСС, 0) КАК ДоходБезСкидокИнвФСС
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыОблагаемые
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНДоходыОсновная.ФизЛицо КАК ФизЛицо,
	|		ЕСНДоходыОсновная.ПериодРегистрации КАК ПериодРегистрации,
	|		СУММА(ВЫБОР
	|				КОГДА ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|					ТОГДА ЕСНДоходыОсновная.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ДоходБезСкидокФБ,
	|		СУММА(ВЫБОР
	|				КОГДА ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФОМС
	|					ТОГДА ЕСНДоходыОсновная.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ДоходБезСкидокФОМС,
	|		СУММА(ВЫБОР
	|				КОГДА ЕСНДоходыОсновная.КодДоходаЕСН.ВходитВБазуФСС
	|					ТОГДА ЕСНДоходыОсновная.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ДоходБезСкидокФСС
	|	ИЗ
	|		ВТ_ЕСНДоходы КАК ЕСНДоходыОсновная
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЕСНДоходыОсновная.ФизЛицо,
	|		ЕСНДоходыОсновная.ПериодРегистрации) КАК ЕСНДоходыБезСкидок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходыБезСкидокИнвалидов КАК ЕСНДоходыБезСкидокИнвалидов
	|		ПО ЕСНДоходыБезСкидок.ПериодРегистрации = ЕСНДоходыБезСкидокИнвалидов.ПериодРегистрации
	|			И ЕСНДоходыБезСкидок.ФизЛицо = ЕСНДоходыБезСкидокИнвалидов.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ПериодРегистрации";
	Запрос.Выполнить();
	
	// БУДоходыПоВР
	//	Поля:
	//		Сотрудник
	//		ВидРасчета
	//		ПериодРегистрации
	//		СчетДт
	//		СчетДтНУ
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		Результат
	//	
	//	Описание:
	//	Данные отражения начислений в бухучете
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	Доходы.СчетДт,
	//|	ВЫБОР
	//|		КОГДА ВЫБОР
	//|				КОГДА ВЫБОР
	//|						КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|							ТОГДА Доходы.СубконтоДт1_ПД
	//|						ИНАЧЕ Доходы.СубконтоДт1
	//|					КОНЕЦ ССЫЛКА Справочник.СтатьиЗатрат
	//|					ТОГДА ВЫБОР
	//|							КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|								ТОГДА Доходы.СубконтоДт1_ПД.ОтнесениеРасходовКДеятельностиЕНВД
	//|							ИНАЧЕ Доходы.СубконтоДт1.ОтнесениеРасходовКДеятельностиЕНВД
	//|						КОНЕЦ
	//|				КОГДА ВЫБОР
	//|						КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|							ТОГДА Доходы.СубконтоДт2_ПД
	//|						ИНАЧЕ Доходы.СубконтоДт2
	//|					КОНЕЦ ССЫЛКА Справочник.СтатьиЗатрат
	//|					ТОГДА ВЫБОР
	//|							КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|								ТОГДА Доходы.СубконтоДт2_ПД.ОтнесениеРасходовКДеятельностиЕНВД
	//|							ИНАЧЕ Доходы.СубконтоДт2.ОтнесениеРасходовКДеятельностиЕНВД
	//|						КОНЕЦ
	//|				КОГДА ВЫБОР
	//|						КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|							ТОГДА Доходы.СубконтоДт3_ПД
	//|						ИНАЧЕ Доходы.СубконтоДт3
	//|					КОНЕЦ ССЫЛКА Справочник.СтатьиЗатрат
	//|					ТОГДА ВЫБОР
	//|							КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|								ТОГДА Доходы.СубконтоДт3_ПД.ОтнесениеРасходовКДеятельностиЕНВД
	//|							ИНАЧЕ Доходы.СубконтоДт3.ОтнесениеРасходовКДеятельностиЕНВД
	//|						КОНЕЦ
	//|				ИНАЧЕ NULL
	//|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК ЭтоСтатьяЗатратЕНВД,
	|	ВЫБОР
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СчетДтОтноситсяКДеятельностиЕНВД,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.СчетДт_ПД,
	|	Доходы.СубконтоДт1_ПД,
	|	Доходы.СубконтоДт2_ПД,
	|	Доходы.СубконтоДт3_ПД,
	|	Доходы.СчетДтНУ_ПД,
	|	Доходы.СубконтоДтНУ1_ПД,
	|	Доходы.СубконтоДтНУ2_ПД,
	|	Доходы.СубконтоДтНУ3_ПД,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт
	|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		БУОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СчетДт
	|			КОГДА БУОсновныеНачисления.СчетДт В (&парамСчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СчетДт
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов)
	|		КОНЕЦ КАК СчетДт,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДт1
	|			КОГДА БУОсновныеНачисления.СчетДт В (&парамСчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДт1
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.РасходыБудущихПериодов.РБПНаЕСН)
	|		КОНЕЦ КАК СубконтоДт1,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДт2
	|			КОГДА БУОсновныеНачисления.СчетДт В (&парамСчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДт2
	|			ИНАЧЕ БУОсновныеНачисления.ФизЛицо
	|		КОНЕЦ КАК СубконтоДт2,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДт3
	|			КОГДА БУОсновныеНачисления.СчетДт В (&парамСчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДт3
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК СубконтоДт3,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СчетДтНУ
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СчетДтНУ
	|			КОГДА БУОсновныеНачисления.СчетДт В (&парамСчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СчетДтНУ
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов)
	|		КОНЕЦ КАК СчетДтНУ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ1
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ1
	|			КОГДА БУОсновныеНачисления.СчетДт В (&парамСчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ1
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.РасходыБудущихПериодов.РБПНаЕСН)
	|		КОНЕЦ КАК СубконтоДтНУ1,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ2
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ2
	|			КОГДА БУОсновныеНачисления.СчетДт В (&парамСчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ2
	|			ИНАЧЕ БУОсновныеНачисления.ФизЛицо
	|		КОНЕЦ КАК СубконтоДтНУ2,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ3
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ3
	|			КОГДА БУОсновныеНачисления.СчетДт В (&парамСчетаИсключения)
	|				ТОГДА БУОсновныеНачисления.СубконтоДтНУ3
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.СчетДт КАК СчетДт_ПД,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1_ПД,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2_ПД,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3_ПД,
	|		БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ_ПД,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1_ПД,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2_ПД,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3_ПД,
	|		БУОсновныеНачисления.Результат КАК Результат,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ПериодРегистрации В(&МассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУОсновныеНачисления.ФизЛицо В (&МассивФизлиц)
	|					И (НЕ БУОсновныеНачисления.СчетДт В (&парамСчетаИсключения)))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.Сотрудник,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.ВидРасчета,
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		БУДополнительныеНачисления.Результат,
	|		БУДополнительныеНачисления.ПодразделениеДт,
	|		БУДополнительныеНачисления.ПодразделениеКт
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, Месяц) В(&МассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУДополнительныеНачисления.ФизЛицо В (&МассивФизлиц)
	|					И (НЕ БУДополнительныеНачисления.СчетДт В (&парамСчетаИсключения)))) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
	|		ПО (ВЫБОР
	|				КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	|					ТОГДА Доходы.СчетДт_ПД
	|				ИНАЧЕ Доходы.СчетДт
	|			КОНЕЦ = СчетаУчетаПоДеятельностиЕНВД.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Доходы.ПериодРегистрации = УчетнаяПолитикаНалоговыйУчет.Месяц
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ПериодРегистрации,
	|	Доходы.СчетДт,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.ПериодДействия,
	|	Доходы.СчетДт_ПД,
	|	Доходы.СубконтоДт1_ПД,
	|	Доходы.СубконтоДт2_ПД,
	|	Доходы.СубконтоДт3_ПД,
	|	Доходы.СчетДтНУ_ПД,
	|	Доходы.СубконтоДтНУ1_ПД,
	|	Доходы.СубконтоДтНУ2_ПД,
	|	Доходы.СубконтоДтНУ3_ПД,
	|	Доходы.ФизЛицо,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	//|	ВЫБОР
	//|		КОГДА ВЫБОР
	//|				КОГДА ВЫБОР
	//|						КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|							ТОГДА Доходы.СубконтоДт1_ПД
	//|						ИНАЧЕ Доходы.СубконтоДт1
	//|					КОНЕЦ ССЫЛКА Справочник.СтатьиЗатрат
	//|					ТОГДА ВЫБОР
	//|							КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|								ТОГДА Доходы.СубконтоДт1_ПД.ОтнесениеРасходовКДеятельностиЕНВД
	//|							ИНАЧЕ Доходы.СубконтоДт1.ОтнесениеРасходовКДеятельностиЕНВД
	//|						КОНЕЦ
	//|				КОГДА ВЫБОР
	//|						КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|							ТОГДА Доходы.СубконтоДт2_ПД
	//|						ИНАЧЕ Доходы.СубконтоДт2
	//|					КОНЕЦ ССЫЛКА Справочник.СтатьиЗатрат
	//|					ТОГДА ВЫБОР
	//|							КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|								ТОГДА Доходы.СубконтоДт2_ПД.ОтнесениеРасходовКДеятельностиЕНВД
	//|							ИНАЧЕ Доходы.СубконтоДт2.ОтнесениеРасходовКДеятельностиЕНВД
	//|						КОНЕЦ
	//|				КОГДА ВЫБОР
	//|						КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|							ТОГДА Доходы.СубконтоДт3_ПД
	//|						ИНАЧЕ Доходы.СубконтоДт3
	//|					КОНЕЦ ССЫЛКА Справочник.СтатьиЗатрат
	//|					ТОГДА ВЫБОР
	//|							КОГДА Доходы.ПериодРегистрации < Доходы.ПериодДействия
	//|								ТОГДА Доходы.СубконтоДт3_ПД.ОтнесениеРасходовКДеятельностиЕНВД
	//|							ИНАЧЕ Доходы.СубконтоДт3.ОтнесениеРасходовКДеятельностиЕНВД
	//|						КОНЕЦ
	//|				ИНАЧЕ NULL
	//|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ
	|	ВЫБОР
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	ВидРасчета,
	|	СчетДтОтноситсяКДеятельностиЕНВД";
	
	Запрос.Выполнить();
	
	
	// ЕСНДоходыПоВР
	//	Поля:
	//		Сотрудник
	//		ВидРасчета
	//		ПериодРегистрации
	//		КодДоходаЕСН
	//		Результат
	//
	// Описание:
	//	список доходов по кодам ЕСН в разрезе видов расчета
	//
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.КодДоходаЕСН,
	|	Доходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	СУММА(Доходы.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыПоВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		ЕСНОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		ЕСНОсновныеНачисления.КодДоходаЕСН КАК КодДоходаЕСН,
	|		ЕСНОсновныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ЕСНОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		ЕСНОсновныеНачисления.Результат КАК Результат
	|	ИЗ
	|		РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
	|	ГДЕ
	|		ЕСНОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНОсновныеНачисления.ПериодРегистрации В(&МассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНОсновныеНачисления.ФизЛицо В (&МассивФизлиц))
	|		И (ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|				ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|				ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.Сотрудник,
	|		ЕСНДополнительныеНачисления.ФизЛицо,
	|		ЕСНДополнительныеНачисления.ВидРасчета,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.Результат - ЕСНДополнительныеНачисления.Скидка
	|	ИЗ
	|		РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|	ГДЕ
	|		ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНДополнительныеНачисления.ПериодРегистрации В(&МассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНДополнительныеНачисления.ФизЛицо В (&МассивФизлиц))
	|		И (ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|				ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|				ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.КодДоходаЕСН,
	|	Доходы.ПериодРегистрации,
	|	Доходы.ПериодДействия,
	|	Доходы.ОблагаетсяЕНВД,
	|	Доходы.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД";
	
	Запрос.Выполнить();
	
	//	ЕСНДоходыБУДоходы
	//	Поля:
	//		Сотрудник
	//		ВидРасчета
	//		ПериодРегистрации
	//		КодДоходаЕСН
	//		СчетДт
	//		СчетДтНУ
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		РезультатЕСН
	//		РезультатБУ
	//	Описание:
	//	соединение таблиц с доходами в разрезе кодов дохода ЕСН и в 
	//	разрезе отражения в бухучете
	//	сопоставление выполняется по видам расчета
	//
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСНДоходыПоВР.Сотрудник КАК Сотрудник,
	|	ЕСНДоходыПоВР.Физлицо,
	|	ЕСНДоходыПоВР.ВидРасчета КАК ВидРасчета,
	|	ЕСНДоходыПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДоходыПоВР.ПериодДействия КАК ПериодДействия,
	|	ЕСНДоходыПоВР.КодДоходаЕСН,
	|	ЕСНДоходыПоВР.ОблагаетсяЕНВД,
	|	ЕСНДоходыПоВР.Результат КАК РезультатЕСН,
	|	БУДоходыПоВР.СчетДт,
	|	БУДоходыПоВР.СубконтоДт1,
	|	БУДоходыПоВР.СубконтоДт2,
	|	БУДоходыПоВР.СубконтоДт3,
	|	БУДоходыПоВР.СчетДтНУ,
	|	БУДоходыПоВР.СубконтоДтНУ1,
	|	БУДоходыПоВР.СубконтоДтНУ2,
	|	БУДоходыПоВР.СубконтоДтНУ3,
	|	БУДоходыПоВР.СпособРаспределенияЗатрат,
	|	БУДоходыПоВР.ОтражениеВУСН,
	|	БУДоходыПоВР.СчетДт_ПД,
	|	БУДоходыПоВР.СубконтоДт1_ПД,
	|	БУДоходыПоВР.СубконтоДт2_ПД,
	|	БУДоходыПоВР.СубконтоДт3_ПД,
	|	БУДоходыПоВР.СчетДтНУ_ПД,
	|	БУДоходыПоВР.СубконтоДтНУ1_ПД,
	|	БУДоходыПоВР.СубконтоДтНУ2_ПД,
	|	БУДоходыПоВР.СубконтоДтНУ3_ПД,
	|	БУДоходыПоВР.ПодразделениеДт,
	|	БУДоходыПоВР.ПодразделениеКт,
	|	БУДоходыПоВР.Результат КАК РезультатБУ
	|ПОМЕСТИТЬ ВТ_ЕСНДоходыБУДоходы
	|ИЗ
	|	ВТ_ЕСНДоходыПоВР КАК ЕСНДоходыПоВР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|		ПО ЕСНДоходыПоВР.Сотрудник = БУДоходыПоВР.Сотрудник
	|			И ЕСНДоходыПоВР.ОблагаетсяЕНВД = БУДоходыПоВР.СчетДтОтноситсяКДеятельностиЕНВД
	|			И ЕСНДоходыПоВР.ВидРасчета = БУДоходыПоВР.ВидРасчета
	|			И ЕСНДоходыПоВР.ПериодДействия = БУДоходыПоВР.ПериодДействия
	|			И ЕСНДоходыПоВР.ПериодРегистрации = БУДоходыПоВР.ПериодРегистрации";
	Запрос.Выполнить();
	
	// БУДоходыСводПоВР
	//	Поля:
	//		Сотрудник
	//		ВидРасчета
	//		ПериодРегистрации
	//		Результат
	//
	// Описание:
	//	доходы, отраженные в бухучете, сведенные по видам расчета
	//
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БУДоходыПоВР.Сотрудник КАК Сотрудник,
	|	БУДоходыПоВР.ВидРасчета КАК ВидРасчета,
	|	БУДоходыПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	БУДоходыПоВР.ПериодДействия КАК ПериодДействия,
	|	СУММА(БУДоходыПоВР.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТ_БУДоходыСводПоВР
	|ИЗ
	|	ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыПоВР.Сотрудник,
	|	БУДоходыПоВР.ВидРасчета,
	|	БУДоходыПоВР.ПериодРегистрации,
	|	БУДоходыПоВР.ПериодДействия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ВидРасчета,
	|	ПериодДействия,
	|	ПериодРегистрации";
	Запрос.Выполнить();
	
	// КоэффициентыОтраженияЕСНТекст
	//	Поля:
	//		СчетДт
	//		СчетДтНУ
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		БазаФедеральныйБюджет
	//		БазаФСС
	//		БазаФОМС
	//		БазаПФР
	// Описание:
	// таблица коэффициентов отражения составных частей исчисленного ЕСН по счетам бухучета
	//
	КоэффициентыОтраженияЕСНТекст =
	"ВЫБРАТЬ
	|	ЕСНДоходыБУДоходы.ФизЛицо,
	|	ЕСНДоходыБУДоходы.ПериодРегистрации,
	|	ЕСНДоходыБУДоходы.ПериодДействия,
	|	ЕСНДоходыБУДоходы.СчетДт,
	|	ЕСНДоходыБУДоходы.СубконтоДт1,
	|	ЕСНДоходыБУДоходы.СубконтоДт2,
	|	ЕСНДоходыБУДоходы.СубконтоДт3,
	|	ЕСНДоходыБУДоходы.СчетДтНУ,
	|	ЕСНДоходыБУДоходы.СубконтоДтНУ1,
	|	ЕСНДоходыБУДоходы.СубконтоДтНУ2,
	|	ЕСНДоходыБУДоходы.СубконтоДтНУ3,
	|	ЕСНДоходыБУДоходы.СпособРаспределенияЗатрат,
	|	ЕСНДоходыБУДоходы.ОтражениеВУСН,
	|	ЕСНДоходыБУДоходы.ОблагаетсяЕНВД,
	|	ЕСНДоходыБУДоходы.СчетДт_ПД,
	|	ЕСНДоходыБУДоходы.СубконтоДт1_ПД,
	|	ЕСНДоходыБУДоходы.СубконтоДт2_ПД,
	|	ЕСНДоходыБУДоходы.СубконтоДт3_ПД,
	|	ЕСНДоходыБУДоходы.СчетДтНУ_ПД,
	|	ЕСНДоходыБУДоходы.СубконтоДтНУ1_ПД,
	|	ЕСНДоходыБУДоходы.СубконтоДтНУ2_ПД,
	|	ЕСНДоходыБУДоходы.СубконтоДтНУ3_ПД,
	|	ЕСНДоходыБУДоходы.ПодразделениеДт,
	|	ЕСНДоходыБУДоходы.ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ УчетнаяПолитикаНалоговыйУчетУСН.УСН
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ * ЕСНДоходыОблагаемые.ДоходБезСкидокФБ / ЕСНДоходыОблагаемые.ДоходБезСкидокФБ
	|	КОНЕЦ КАК БазаФедеральныйБюджет,
	|	ВЫБОР
	|		КОГДА ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ УчетнаяПолитикаНалоговыйУчетУСН.УСН
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФСС)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФСС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ * ЕСНДоходыОблагаемые.ДоходБезСкидокФСС / ЕСНДоходыОблагаемые.ДоходБезСкидокФСС
	|	КОНЕЦ КАК БазаФСС,
	|	ВЫБОР
	|		КОГДА ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ УчетнаяПолитикаНалоговыйУчетУСН.УСН
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФОМС)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФОМС = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ * ЕСНДоходыОблагаемые.ДоходБезСкидокФОМС / ЕСНДоходыОблагаемые.ДоходБезСкидокФОМС
	|	КОНЕЦ КАК БазаФОМС,
	|	ВЫБОР
	|		КОГДА (НЕ ЕСНДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ
	|	КОНЕЦ КАК БазаПФР_ЕНВД,
	|	ВЫБОР
	|		КОГДА (НЕ ЕСНДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатБУ
	|	КОНЕЦ КАК БазаПФР_ЕНВД_РБП,
	|	ВЫБОР
	|		КОГДА ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатБУ
	|	КОНЕЦ КАК БазаПФР_НеЕНВД_РБП,
	|	ВЫБОР
	|		КОГДА ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ
	|	КОНЕЦ КАК БазаПФР_НеЕНВД,
	|	ВЫБОР
	|		КОГДА (НЕ ЕСНДоходыБУДоходы.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчетУСН.УСН)
	|				ИЛИ (НЕ УчетнаяПолитикаНалоговыйУчетУСН.УплачиватьДобровольныеВзносыВФСС)
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатЕСН / БУДоходыСводПоВР.Результат * ЕСНДоходыБУДоходы.РезультатБУ
	|	КОНЕЦ КАК БазаФСС_БЛ,
	|	ВЫБОР
	|		КОГДА (НЕ ЕСНДоходыБУДоходы.ОблагаетсяЕНВД)
	|					И (НЕ УчетнаяПолитикаНалоговыйУчетУСН.УСН)
	|				ИЛИ (НЕ УчетнаяПолитикаНалоговыйУчетУСН.УплачиватьДобровольныеВзносыВФСС)
	|				ИЛИ (НЕ ЕСНДоходыБУДоходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет)
	|				ИЛИ ЕСНДоходыЗаГод.Результат = 0
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|				ИЛИ ЕСНДоходыОблагаемые.ДоходБезСкидокФБ = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСНДоходыБУДоходы.РезультатБУ
	|	КОНЕЦ КАК БазаФСС_БЛ_РБП
	|ИЗ
	|	ВТ_ЕСНДоходыБУДоходы КАК ЕСНДоходыБУДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|		ПО ЕСНДоходыБУДоходы.ПериодРегистрации = УчетнаяПолитикаНалоговыйУчетУСН.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыСводПоВР КАК БУДоходыСводПоВР
	|		ПО ЕСНДоходыБУДоходы.Сотрудник = БУДоходыСводПоВР.Сотрудник
	|			И ЕСНДоходыБУДоходы.ВидРасчета = БУДоходыСводПоВР.ВидРасчета
	|			И ЕСНДоходыБУДоходы.ПериодРегистрации = БУДоходыСводПоВР.ПериодРегистрации
	|			И ЕСНДоходыБУДоходы.ПериодДействия = БУДоходыСводПоВР.ПериодДействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходы КАК ЕСНДоходыЗаГод
	|		ПО ЕСНДоходыБУДоходы.Сотрудник = ЕСНДоходыЗаГод.Сотрудник
	|			И ЕСНДоходыБУДоходы.КодДоходаЕСН = ЕСНДоходыЗаГод.КодДоходаЕСН
	|			И ЕСНДоходыБУДоходы.ОблагаетсяЕНВД = ЕСНДоходыЗаГод.ОблагаетсяЕНВД
	|			И ЕСНДоходыБУДоходы.ПериодРегистрации = ЕСНДоходыЗаГод.ПериодРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕСНДоходыОблагаемые КАК ЕСНДоходыОблагаемые
	|		ПО ЕСНДоходыБУДоходы.ФизЛицо = ЕСНДоходыОблагаемые.ФизЛицо
	|			И ЕСНДоходыБУДоходы.ПериодРегистрации = ЕСНДоходыОблагаемые.ПериодРегистрации";
	
	
	Если Не МассивФизлиц = Неопределено Тогда
		// отражение в учете РБП
		
		КоэффициентыОтраженияЕСНТекст = КоэффициентыОтраженияЕСНТекст + "
		|УПОРЯДОЧИТЬ ПО
		|	ЕСНДоходыБУДоходы.Физлицо,
		|	ЕСНДоходыБУДоходы.ПериодРегистрации,
		|	ЕСНДоходыБУДоходы.ПериодДействия,
		|	ЕСНДоходыБУДоходы.СчетДт,
		|	ЕСНДоходыБУДоходы.СубконтоДт1,
		|	ЕСНДоходыБУДоходы.СубконтоДт2,
		|	ЕСНДоходыБУДоходы.СчетДтНУ,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ1,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ2,
		|	ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.Текст = КоэффициентыОтраженияЕСНТекст;
	Иначе
		
		// КоэффициентыОтраженияЕСНБезПДТекст
		//	Поля:
		//		СчетДт
		//		СчетДтНУ
		//		СубконтоДт1
		//		СубконтоДт2
		//		СубконтоДт3
		//		БазаФедеральныйБюджет
		//		БазаФСС
		//		БазаФОМС
		//		БазаПФР
		// Описание:
		// таблица коэффициентов отражения составных частей исчисленного ЕСН по счетам бухучета - группировка запроса ОтражениеЕСНТекст
		
		КоэффициентыОтраженияЕСНБезПДТекст = 
		"ВЫБРАТЬ
		|	ЕСНДоходыБУДоходы.ФизЛицо,
		|	ЕСНДоходыБУДоходы.ПериодРегистрации,
		|	ЕСНДоходыБУДоходы.СчетДт,
		|	ЕСНДоходыБУДоходы.СубконтоДт1,
		|	ЕСНДоходыБУДоходы.СубконтоДт2,
		|	ЕСНДоходыБУДоходы.СубконтоДт3,
		|	ЕСНДоходыБУДоходы.СчетДтНУ,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ1,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ2,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ3,
		|	ЕСНДоходыБУДоходы.СпособРаспределенияЗатрат,
		|	ЕСНДоходыБУДоходы.ОтражениеВУСН,
		|	ЕСНДоходыБУДоходы.ОблагаетсяЕНВД,
		|	ЕСНДоходыБУДоходы.СчетДт_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДт1_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДт2_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДт3_ПД,
		|	ЕСНДоходыБУДоходы.СчетДтНУ_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ1_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ2_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ3_ПД,  
		|	ЕСНДоходыБУДоходы.ПодразделениеДт,
		|	ЕСНДоходыБУДоходы.ПодразделениеКт,
		|	СУММА(ЕСНДоходыБУДоходы.БазаФедеральныйБюджет) КАК БазаФедеральныйБюджет,
		|	СУММА(ЕСНДоходыБУДоходы.БазаФСС) КАК БазаФСС,
		|	СУММА(ЕСНДоходыБУДоходы.БазаФОМС) КАК БазаФОМС,
		|	СУММА(ЕСНДоходыБУДоходы.БазаПФР_ЕНВД) КАК БазаПФР_ЕНВД,
		|	СУММА(ЕСНДоходыБУДоходы.БазаПФР_НеЕНВД) КАК БазаПФР_НеЕНВД,	
		|	СУММА(ЕСНДоходыБУДоходы.БазаФСС_БЛ) КАК БазаФСС_БЛ	
		|ИЗ
		|	("+ КоэффициентыОтраженияЕСНТекст +") КАК ЕСНДоходыБУДоходы
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСНДоходыБУДоходы.ФизЛицо,
		|	ЕСНДоходыБУДоходы.ПериодРегистрации,
		|	ЕСНДоходыБУДоходы.СчетДт,
		|	ЕСНДоходыБУДоходы.СубконтоДт1,
		|	ЕСНДоходыБУДоходы.СубконтоДт2,
		|	ЕСНДоходыБУДоходы.СубконтоДт3,
		|	ЕСНДоходыБУДоходы.СчетДтНУ,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ1,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ2,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ3,
		|	ЕСНДоходыБУДоходы.СпособРаспределенияЗатрат,
		|	ЕСНДоходыБУДоходы.ОтражениеВУСН,
		|	ЕСНДоходыБУДоходы.ОблагаетсяЕНВД,
		|	ЕСНДоходыБУДоходы.СчетДт_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДт1_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДт2_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДт3_ПД,
		|	ЕСНДоходыБУДоходы.СчетДтНУ_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ1_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ2_ПД,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ3_ПД,
		|	ЕСНДоходыБУДоходы.ПодразделениеДт,
		|	ЕСНДоходыБУДоходы.ПодразделениеКт
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЕСНДоходыБУДоходы.Физлицо,
		|	ЕСНДоходыБУДоходы.ПериодРегистрации,
		|	ЕСНДоходыБУДоходы.СчетДт,
		|	ЕСНДоходыБУДоходы.СубконтоДт1,
		|	ЕСНДоходыБУДоходы.СубконтоДт2,
		|	ЕСНДоходыБУДоходы.СчетДтНУ,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ1,
		|	ЕСНДоходыБУДоходы.СубконтоДтНУ2,
		|	ЕСНДоходыБУДоходы.ОблагаетсяЕНВД
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.Текст = КоэффициентыОтраженияЕСНБезПДТекст;
		
	КонецЕсли;
	
	Возврат  Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеУчетаЕСН()

// получение  данных для бухучета
// Параметры:
//  СписокНачислений - список начислений, которые необходимо обработать
//  ЭтоОсновныеНачисления - булево, если Истина, то получаем данные по основным начислениям иначе - по доп.
//
// Возвращаемое значение:
//  Результат запроса
// 
Функция ПолучитьДанныеУчета2009(СписокНачислений, ЭтоОсновныеНачисления, ЭтоПервичныеНачисления)
	
	Запрос = Новый Запрос;
	
	Измерения = Новый Массив(1);
	Измерения[0] = "Сотрудник";
	
	Запрос.УстановитьПараметр("парамИзмерения", Измерения);
	
	Запрос.УстановитьПараметр("парамСписокНачислений", СписокНачислений);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	
	Разрезы = Новый Массив(18);
	Разрезы[0] = "СчетДт";
	Разрезы[1] = "СубконтоДт1";
	Разрезы[2] = "СубконтоДт2";
	Разрезы[3] = "СубконтоДт3";
	Разрезы[4] = "СчетКт";
	Разрезы[5] = "СубконтоКт1";
	Разрезы[6] = "СубконтоКт2";
	Разрезы[7] = "СубконтоКт3";
	Разрезы[8] = "СчетДтНУ";
	Разрезы[9] = "СубконтоДтНУ1";
	Разрезы[10] = "СубконтоДтНУ2";
	Разрезы[11] = "СубконтоДтНУ3";
	Разрезы[12] = "СчетКтНУ";
	Разрезы[13] = "СубконтоКтНУ1";
	Разрезы[14] = "СубконтоКтНУ2";
	Разрезы[15] = "СубконтоКтНУ3";
	Разрезы[16] = "СпособРаспределенияЗатрат";
	Разрезы[17] = "ОтражениеВУСН";	
	
	Запрос.УстановитьПараметр("парамРазрезыБУ", Разрезы);
	
	СпособПоУмолчанию = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию;
	
	Запрос.УстановитьПараметр("парамСпособПоУмолчанию", СпособПоУмолчанию);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетДт", СпособПоУмолчанию.СчетДт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетКт", СпособПоУмолчанию.СчетКт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт1", СпособПоУмолчанию.СубконтоДт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт2", СпособПоУмолчанию.СубконтоДт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт3", СпособПоУмолчанию.СубконтоДт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт1", СпособПоУмолчанию.СубконтоКт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт2", СпособПоУмолчанию.СубконтоКт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт3", СпособПоУмолчанию.СубконтоКт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетНУ", СпособПоУмолчанию.СчетДтНУ);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетКтНУ", СпособПоУмолчанию.СчетКтНУ);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ1", СпособПоУмолчанию.СубконтоДтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ2", СпособПоУмолчанию.СубконтоДтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ3", СпособПоУмолчанию.СубконтоДтНУ3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ1", СпособПоУмолчанию.СубконтоКтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ2", СпособПоУмолчанию.СубконтоКтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ3", СпособПоУмолчанию.СубконтоКтНУ3);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСпособРаспределенияЗатрат", СпособПоУмолчанию.СпособРаспределенияЗатрат);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюОтражениеВУСН", СпособПоУмолчанию.ОтражениеВУСН);
	
	СпособПоУмолчанию = Справочники.СпособыОтраженияЗарплатыВРеглУчете.БольничныйЗаСчетРаботодателя;
	
	Запрос.УстановитьПараметр("парамЕстьСпособПоУмолчаниюДляБольничного", Не СпособПоУмолчанию.СчетДт.Пустая());
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСчетДт", СпособПоУмолчанию.СчетДт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСчетКт", СпособПоУмолчанию.СчетКт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДт1", СпособПоУмолчанию.СубконтоДт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДт2", СпособПоУмолчанию.СубконтоДт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДт3", СпособПоУмолчанию.СубконтоДт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКт1", СпособПоУмолчанию.СубконтоКт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКт2", СпособПоУмолчанию.СубконтоКт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКт3", СпособПоУмолчанию.СубконтоКт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСчетДтНУ", СпособПоУмолчанию.СчетДтНУ);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСчетКтНУ", СпособПоУмолчанию.СчетКтНУ);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ1", СпособПоУмолчанию.СубконтоДтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ2", СпособПоУмолчанию.СубконтоДтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ3", СпособПоУмолчанию.СубконтоДтНУ3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ1", СпособПоУмолчанию.СубконтоКтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ2", СпособПоУмолчанию.СубконтоКтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ3", СпособПоУмолчанию.СубконтоКтНУ3);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСпособРаспределенияЗатрат", СпособПоУмолчанию.СпособРаспределенияЗатрат);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоОтражениеВУСН", СпособПоУмолчанию.ОтражениеВУСН);
	
	МассивПоСреднемуЗаработку = Новый Массив;
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС);
	Запрос.УстановитьПараметр("парамПоСреднемуЗаработку", МассивПоСреднемуЗаработку);
	
	Запрос.УстановитьПараметр("парамДатаЗакона202ФЗ", '20050101');
	Запрос.УстановитьПараметр("парамДатаЗакона255ФЗ", ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006());
	
	СписокСоставляющихСреднегоЗаработка = Новый Массив(18); 
	СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
	СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;
	СписокСоставляющихСреднегоЗаработка[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;
	СписокСоставляющихСреднегоЗаработка[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;
	СписокСоставляющихСреднегоЗаработка[4] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииБЛ;
	СписокСоставляющихСреднегоЗаработка[5] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	СписокСоставляющихСреднегоЗаработка[6] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
	СписокСоставляющихСреднегоЗаработка[7] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
	СписокСоставляющихСреднегоЗаработка[8] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
	СписокСоставляющихСреднегоЗаработка[9] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии;
	СписокСоставляющихСреднегоЗаработка[10] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;
	СписокСоставляющихСреднегоЗаработка[11] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые;
	СписокСоставляющихСреднегоЗаработка[12] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;
	СписокСоставляющихСреднегоЗаработка[13] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые;
	СписокСоставляющихСреднегоЗаработка[14] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;
	СписокСоставляющихСреднегоЗаработка[15] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые;
	СписокСоставляющихСреднегоЗаработка[16] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;
	СписокСоставляющихСреднегоЗаработка[17] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;
	Запрос.УстановитьПараметр("парамСписокСоставляющихСреднегоЗаработка", СписокСоставляющихСреднегоЗаработка);
	
	// для учета особенностей расчета среднего заработка
	ОсновнойЗаработок = Новый Массив(4);
	ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	ОсновнойЗаработок[3] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;
	ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
	ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
	
	ПоФиксПремиям = Новый Массив(3);
	ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
	ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;
	ПоФиксПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий;
	
	ПоПремиям = Новый Массив(5);
	ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
	ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;
	ПоПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
	ПоПремиям[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;
	ПоПремиям[4] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;
	
	ФиксГодовыеПремии = Новый Массив(5);
	ФиксГодовыеПремии[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
	ФиксГодовыеПремии[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;
	ФиксГодовыеПремии[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий;
	ФиксГодовыеПремии[3] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;
	ФиксГодовыеПремии[4] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;
	
	Запрос.УстановитьПараметр("парамОсновнойЗаработок",	ОсновнойЗаработок);
	Запрос.УстановитьПараметр("парамОсновнойЗаработокНеиндексируемый",	ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);
	Запрос.УстановитьПараметр("парамПоПремиям",			ПоПремиям);
	Запрос.УстановитьПараметр("парамПоФиксПремиям",		ПоФиксПремиям);
	Запрос.УстановитьПараметр("парамПоФиксПремиямНеИндексируемые",	ФиксГодовыеПремии);
	
	Запрос.УстановитьПараметр("ЕстьЕНВД", мЕНВД);
	
	// для реализации Федерального закона № 180-ФЗ от 22.12.2005 г.
	ДатаЗакона180ФЗ = '20060101';
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ЭтоОсновныеНачисления Тогда
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ ОТРАЖЕНИЯ В УЧЕТЕ БАЗОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_База
		
		Если Не ЭтоПервичныеНачисления Тогда
			
			//соберем базу для зависимых начислений
			БазаТекст = 
			"ВЫБРАТЬ
			|	База.Регистратор КАК Регистратор,
			|	База.НомерСтроки КАК НомерСтроки,
			|	База.СчетДтРазрез,
			|	База.СубконтоДт1Разрез,
			|	База.СубконтоДт2Разрез,
			|	База.СубконтоДт3Разрез,
			|	База.СчетКтРазрез,
			|	База.СубконтоКт1Разрез,
			|	База.СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез,
			|	База.СчетДтНУРазрез,
			|	База.СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез,
			|	База.СчетКтНУРазрез,
			|	База.СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез,
			|	СУММА(База.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_База
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.Регистратор КАК Регистратор,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СчетДтРазрез КАК СчетДтРазрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СчетКтРазрез КАК СчетКтРазрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		ОсновныеНачисленияБазаБУОсновныеНачисления.РезультатБаза КАК РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаБУОсновныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И (НЕ Сторно)
			|					И ПериодРегистрации = &парамПериодРегистрации
			|					И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И ВидРасчета В (&парамСписокНачислений)) КАК ОсновныеНачисленияБазаБУОсновныеНачисления
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.Регистратор,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.НомерСтроки,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СчетДтРазрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоДт1Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоДт2Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоДт3Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СчетКтРазрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоКт1Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоКт2Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоКт3Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СчетДтНУРазрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоДтНУ1Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоДтНУ2Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоДтНУ3Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СчетКтНУРазрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоКтНУ1Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоКтНУ2Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СубконтоКтНУ3Разрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.СпособРаспределенияЗатратРазрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.ОтражениеВУСНРазрез,
			|		ОсновныеНачисленияБазаБУДополнительныеНачисления.РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаБУДополнительныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И (НЕ Сторно)
			|					И ПериодРегистрации = &парамПериодРегистрации
			|					И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И ВидРасчета В (&парамСписокНачислений)) КАК ОсновныеНачисленияБазаБУДополнительныеНачисления) КАК База
			|
			|СГРУППИРОВАТЬ ПО
			|	База.Регистратор,
			|	База.СчетДтНУРазрез,
			|	База.СчетКтРазрез,
			|	База.СубконтоКт1Разрез,
			|	База.СубконтоДт3Разрез,
			|	База.СубконтоДт2Разрез,
			|	База.СубконтоДт1Разрез,
			|	База.СчетДтРазрез,
			|	База.СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез,
			|	База.СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез,
			|	База.СчетКтНУРазрез,
			|	База.СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез,
			|	База.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
			
		Иначе	
			
			// для первичных начислений не собираем базу	
			БазаТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатратРазрез,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_База";
			
		КонецЕсли;	
		Запрос.Текст = БазаТекст;
		//временная таблица - ВТ_База
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ ОТРАЖЕНИЕ В УЧЕТЕ БАЗОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_УчетПлановыхНачислений
		
		УчетПлановыхНачисленийТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ВидРасчета
		|ПОМЕСТИТЬ ВТ_ОсновыеНачисленияДляПлановый
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ОсновныеНачисления.Сторно)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОНачислениях
		|ИЗ
		|	ВТ_ОсновыеНачисленияДляПлановый КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ОсновныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|			И ОсновныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.Сотрудник,
		|	ОсновныеНачисления.ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.ПустаяСсылка)
		|		ИНАЧЕ РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД
		|	КОНЕЦ КАК ОтнесениеРасходовКДеятельностиЕНВД,
		|	СведенияОНачисленияхСрез.Регистратор КАК Регистратор,
		|	СведенияОНачисленияхСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетПлановыхНачислений
		|ИЗ
		|	РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОНачислениях КАК СведенияОНачисленияхСрез
		|		ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|			И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|			И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетПлановыхНачисленийТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		
		ОсновныеНачисленияТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ПодразделениеОрганизации,
		|	ОсновныеНачисления.ОбособленноеПодразделение
		|ПОМЕСТИТЬ ВТ_ОсновыеНачисления
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И (ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ИЛИ ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия))
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ОсновныеНачисления.Сторно)";
		Запрос.Текст = ОсновныеНачисленияТекст;
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		// таблица ВТ_УчетОсновногоЗаработка
		
		УчетОсновногоЗаработкаТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(УчетЗарВРеглУчете.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОРаботниках
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ПО ОсновныеНачисления.Сотрудник = УчетЗарВРеглУчете.Сотрудник
		|			И (УчетЗарВРеглУчете.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетЗарВРеглУчете.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	СведенияОРаботникахСрез.Регистратор КАК Регистратор,
		|	СведенияОРаботникахСрез.НомерСтроки КАК НомерСтроки,
		|	УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя КАК СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработка
		|ИЗ
		|	РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОРаботниках КАК СведенияОРаботникахСрез
		|		ПО (СведенияОРаботникахСрез.Сотрудник = УчетЗарВРеглУчете.Сотрудник)
		|			И (СведенияОРаботникахСрез.Период = УчетЗарВРеглУчете.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		// таблица ВТ_УчетОсновногоЗаработкаПодразделения
		
		УчетОсновногоЗаработкаПодразделенияТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	МАКСИМУМ(УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОПодразделениях
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ОсновныеНачисления.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И (УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.ПодразделениеОрганизации,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодразделениеОрганизации,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПодразделенияхСрез.Регистратор КАК Регистратор,
		|	СведенияОПодразделенияхСрез.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя КАК СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаПодразделения
		|ИЗ
		|	ВТ_СведенияОПодразделениях КАК СведенияОПодразделенияхСрез
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО СведенияОПодразделенияхСрез.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И СведенияОПодразделенияхСрез.Период = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";		
		Запрос.Текст = УчетОсновногоЗаработкаПодразделенияТекст;
		Запрос.Выполнить();
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		// таблица ВТ_УчетОсновногоЗаработкаОрганизации
		
		УчетОсновногоЗаработкаОрганизацииТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	МАКСИМУМ(УчетОсновногоЗаработкаОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияПоОрганизации
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ОсновныеНачисления.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И (УчетОсновногоЗаработкаОрганизации.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.ОбособленноеПодразделение,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбособленноеПодразделение,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПоОрганизации.Регистратор КАК Регистратор,
		|	СведенияПоОрганизации.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя КАК СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаОрганизации
		|ИЗ
		|	ВТ_СведенияПоОрганизации КАК СведенияПоОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО СведенияПоОрганизации.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И СведенияПоОрганизации.Период = УчетОсновногоЗаработкаОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";		
		Запрос.Текст = УчетОсновногоЗаработкаОрганизацииТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для
		// пособия по уходу за ребенком и отпуск по беременности и родам
		// базу надо получать только при наличии ЕНВД
		
		ПолучатьБазу = Ложь;
		Если мЕНВД Тогда
			
			// ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком
			//
			Запрос.Текст =
			"ВЫБРАТЬ 
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	РасчетСреднегоЗаработка.ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
			|ПОМЕСТИТЬ ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай))
			|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|	И ОсновныеНачисления.Результат <> 0
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			Запрос.Выполнить();
			
			// ВТ_СотрудникиПериодыОтпускПоБеременностиИРодамПоУходуЗаРебенком
			// условия для виртуальной таблицы
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
			|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
			|ПОМЕСТИТЬ ВТ_СотрудникиПериодыОтпускПоБеременностиИРодамПоУходуЗаРебенком
			|ИЗ
			|	ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК ОсновныеНачисления
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодРегистрации,
			|	ДатаНачалаСобытия";
			Результат = Запрос.Выполнить().Выгрузить();
			ПолучатьБазу = Результат[0].Количество > 0;
		КонецЕсли;
		
		Если ПолучатьБазу Тогда
			
			Разрезы = Новый Массив(3);
			Разрезы[0] = "СубконтоДт1";
			Разрезы[1] = "СубконтоДт2";
			Разрезы[2] = "СубконтоДт3";
			
			Запрос.УстановитьПараметр("парамРазрезыБУСредний", Разрезы);
			
			БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенкомТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор КАК Регистратор,
			|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза
			|	ИЗ
			|		ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУСредний,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ПериодРегистрации,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор,
			|		ОсновныеНачисления.НомерСтроки,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ
			|	ИЗ
			|		ВТ_ОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУСредний,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ПериодРегистрации,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|				И (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенкомТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком";
			
		КонецЕсли;	
		Запрос.Текст = БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенкомТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для пособия по уходу за ребенком и отпуск по беременности и родам
		///////////////////////////////////////////////////////////////////////////////////
		
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для 
		// прочих больничных
		// базу надо получать при наличии ЕНВД и для доли БЛ за счет работодателя при УСН доходы минус расходы
		
		ПолучатьБазу = Ложь;
		ПолучатьБазуДолиБЛЗаСчетРаботодателя = Ложь;
		ПрочиеБЛТекст = "";
		Если мЕНВД и Не мУСН или мЕНВД и мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
			// ОСН+ЕНВД, ОСН+ЕНВД+Взносы, УСН доходы + ЕНВД, УСН доходы + ЕНВД + Взносы 
			// нужна доля ЕНВД
			// отбираем все записи со стратегией - по базовым начислениям, только для них нужда доля ЕНВД по базе
			
			// ВТ_ПрочиеБЛ
			//
			ПрочиеБЛТекст =
			"ВЫБРАТЬ 
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
			|ПОМЕСТИТЬ ВТ_ПрочиеБЛ
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
			|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|	И ОсновныеНачисления.Результат <> 0
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			
		ИначеЕсли мЕНВД и мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда	
			// УСН доходы минус расходы + ЕНВД, УСН доходы минус расходы + ЕНВД + Взносы
			// нужна доля ЕНВД и распределение доли БЛ за счет работодателя для УСН
			// отбираем все записи для которых не задан способ отражения доли за счет работодателя
			// или стратегия отражения в учете - по базовым начислениям
			
			ПолучатьБазуДолиБЛЗаСчетРаботодателя = Истина;
			
			// ВТ_ПрочиеБЛ
			//
			ПрочиеБЛТекст =
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	РасчетСреднегоЗаработка.ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
			|ПОМЕСТИТЬ ВТ_ПрочиеБЛ
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетОсновногоЗаработка
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработка.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработка.НомерСтроки
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаПодразделения
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаПодразделения.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаПодразделения.НомерСтроки
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|			И (УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL )
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL 
			|				И УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL 
			|				И УчетОсновногоЗаработкаОрганизации.НомерСтроки ЕСТЬ NULL 
			|			ИЛИ ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления))
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
			|	И ОсновныеНачисления.Результат <> 0
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			
		ИначеЕсли Не мФСС_БЛ и мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда				
			// УСН доходы минус расходы
			// необходимо распределение доли БЛ за счет работодателя для УСН
			// отбираем все записи для которых не задан способ отражения доли за счет работодателя
			
			ПолучатьБазуДолиБЛЗаСчетРаботодателя = Истина;
			
			// ВТ_ПрочиеБЛ
			//
			ПрочиеБЛТекст =
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	РасчетСреднегоЗаработка.ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
			|ПОМЕСТИТЬ ВТ_ПрочиеБЛ
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетОсновногоЗаработка
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработка.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработка.НомерСтроки
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаПодразделения
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаПодразделения.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаПодразделения.НомерСтроки
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|			И (УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL )
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL 
			|	И УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL 
			|	И УчетОсновногоЗаработкаОрганизации.НомерСтроки ЕСТЬ NULL 
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
			|	И ОсновныеНачисления.Результат <> 0
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(ПрочиеБЛТекст) Тогда
			// ВТ_СотрудникиПериодыПрочиеБЛ
			// условия для виртуальной таблицы
			
			Запрос.Текст = ПрочиеБЛТекст;
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
			|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
			|ПОМЕСТИТЬ ВТ_СотрудникиПериодыПрочиеБЛ
			|ИЗ
			|	ВТ_ПрочиеБЛ КАК ОсновныеНачисления
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ДатаНачалаСобытия";
			Результат = Запрос.Выполнить().Выгрузить();
			ПолучатьБазу = Результат[0].Количество > 0;	
		КонецЕсли;
		
		Если ПолучатьБазу Тогда
			
			Если ПолучатьБазуДолиБЛЗаСчетРаботодателя Тогда
				
				Разрезы = Новый Массив(9);
				Разрезы[0] = "СчетДт";
				Разрезы[1] = "СубконтоДт1";
				Разрезы[2] = "СубконтоДт2";
				Разрезы[3] = "СубконтоДт3";
				Разрезы[4] = "СчетКт";
				Разрезы[5] = "СубконтоКт1";
				Разрезы[6] = "СубконтоКт2";
				Разрезы[7] = "СубконтоКт3";
				Разрезы[8] = "ОтражениеВУСН";	
				
				Запрос.УстановитьПараметр("парамРазрезыБУСредний", Разрезы);
				
				БазаСреднегоЗаработкаПрочиеБЛТекст =
				"ВЫБРАТЬ
				|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
				|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
				|	БазаСреднегоЗаработка.СчетДтРазрез,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.СчетКтРазрез,
				|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
				|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
				|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
				|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеБЛ
				|ИЗ
				|	(ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор КАК Регистратор,
				|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
				|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
				|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
				|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
				|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
				|		ВЫБОР
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|							ТОГДА 1
				|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|					КОНЕЦ
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
				|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
				|				ТОГДА 0
				|			ИНАЧЕ ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
				|				КОНЕЦ * ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
				|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
				|					ИНАЧЕ 1
				|				КОНЕЦ
				|		КОНЕЦ КАК РезультатБаза
				|	ИЗ
				|		ВТ_ПрочиеБЛ КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
				|					&парамИзмерения,
				|					&парамИзмерения,
				|					&парамРазрезыБУСредний,
				|					Организация = &парамГоловнаяОрганизация
				|						И Результат <> 0
				|						И ПериодРегистрации = &парамПериодРегистрации
				|						И (Сотрудник, ДатаНачалаСобытия) В
				|							(ВЫБРАТЬ
				|								Список.Сотрудник,
				|								Список.ДатаНачалаСобытия
				|							ИЗ
				|								ВТ_СотрудникиПериодыПрочиеБЛ КАК Список)) КАК БазаСреднегоЗаработка
				|			ПО (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
				|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор,
				|		ОсновныеНачисления.НомерСтроки,
				|		БазаСреднегоЗаработка.СчетДтРазрез,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|		БазаСреднегоЗаработка.СчетКтРазрез,
				|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
				|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
				|		ВЫБОР
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|							ТОГДА 1
				|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|					КОНЕЦ
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
				|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
				|				ТОГДА 0
				|			ИНАЧЕ ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
				|				КОНЕЦ * ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
				|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
				|					ИНАЧЕ 1
				|				КОНЕЦ
				|		КОНЕЦ
				|	ИЗ
				|		ВТ_ПрочиеБЛ КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
				|					&парамИзмерения,
				|					&парамИзмерения,
				|					&парамРазрезыБУСредний,
				|					Организация = &парамГоловнаяОрганизация
				|						И Результат <> 0
				|						И ПериодРегистрации = &парамПериодРегистрации
				|						И (Сотрудник, ДатаНачалаСобытия) В
				|							(ВЫБРАТЬ
				|								Список.Сотрудник,
				|								Список.ДатаНачалаСобытия
				|							ИЗ
				|								ВТ_СотрудникиПериодыПрочиеБЛ КАК Список)) КАК БазаСреднегоЗаработка
				|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|				И (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК БазаСреднегоЗаработка
				|
				|СГРУППИРОВАТЬ ПО
				|	БазаСреднегоЗаработка.Регистратор,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.НомерСтроки,
				|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
				|	БазаСреднегоЗаработка.СчетДтРазрез,
				|	БазаСреднегоЗаработка.СчетКтРазрез,
				|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт3Разрез
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Регистратор,
				|	НомерСтроки";
				
			Иначе
				
				Разрезы = Новый Массив(3);
				Разрезы[0] = "СубконтоДт1";
				Разрезы[1] = "СубконтоДт2";
				Разрезы[2] = "СубконтоДт3";
				
				Запрос.УстановитьПараметр("парамРазрезыБУСредний", Разрезы);
				
				БазаСреднегоЗаработкаПрочиеБЛТекст =
				"ВЫБРАТЬ
				|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
				|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
				|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
				|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
				|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
				|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеБЛ
				|ИЗ
				|	(ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор КАК Регистратор,
				|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
				|		ВЫБОР
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|							ТОГДА 1
				|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|					КОНЕЦ
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
				|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
				|				ТОГДА 0
				|			ИНАЧЕ ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
				|				КОНЕЦ * ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
				|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
				|					ИНАЧЕ 1
				|				КОНЕЦ
				|		КОНЕЦ КАК РезультатБаза
				|	ИЗ
				|		ВТ_ПрочиеБЛ КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
				|					&парамИзмерения,
				|					&парамИзмерения,
				|					&парамРазрезыБУСредний,
				|					Организация = &парамГоловнаяОрганизация
				|						И Результат <> 0
				|						И ПериодРегистрации = &парамПериодРегистрации
				|						И (Сотрудник, ДатаНачалаСобытия) В
				|							(ВЫБРАТЬ
				|								Список.Сотрудник,
				|								Список.ДатаНачалаСобытия
				|							ИЗ
				|								ВТ_СотрудникиПериодыПрочиеБЛ КАК Список)) КАК БазаСреднегоЗаработка
				|			ПО (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
				|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор,
				|		ОсновныеНачисления.НомерСтроки,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|		ВЫБОР
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|							ТОГДА 1
				|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|					КОНЕЦ
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
				|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
				|				ТОГДА 0
				|			ИНАЧЕ ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
				|				КОНЕЦ * ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
				|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
				|					ИНАЧЕ 1
				|				КОНЕЦ
				|		КОНЕЦ
				|	ИЗ
				|		ВТ_ПрочиеБЛ КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
				|					&парамИзмерения,
				|					&парамИзмерения,
				|					&парамРазрезыБУСредний,
				|					Организация = &парамГоловнаяОрганизация
				|						И Результат <> 0
				|						И ПериодРегистрации = &парамПериодРегистрации
				|						И (Сотрудник, ДатаНачалаСобытия) В
				|							(ВЫБРАТЬ
				|								Список.Сотрудник,
				|								Список.ДатаНачалаСобытия
				|							ИЗ
				|								ВТ_СотрудникиПериодыПрочиеБЛ КАК Список)) КАК БазаСреднегоЗаработка
				|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|				И (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК БазаСреднегоЗаработка
				|
				|СГРУППИРОВАТЬ ПО
				|	БазаСреднегоЗаработка.Регистратор,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.НомерСтроки
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Регистратор,
				|	НомерСтроки";
				
			КонецЕсли;
			
		Иначе	
			
			БазаСреднегоЗаработкаПрочиеБЛТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеБЛ";
			
		КонецЕсли;	
		Запрос.Текст = БазаСреднегоЗаработкаПрочиеБЛТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаПрочиеБЛ
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для прочих больничных
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для БЛ общее заболевание
		
		ПолучатьБазу = Ложь;
		ПолучатьБазуДолиБЛЗаСчетРаботодателя = Ложь;
		ПолучатьБазуДолиБЛЗаСчетРаботодателяУСН = Ложь;
		БЛОбщееЗаболеваниеТекст = "";
		
		Если мЕНВД и мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
			// УСН доходы + ЕНВД, УСН доходы + ЕНВД + Взносы, только ЕНВД
			
			// ВТ_БЛОбщееЗаболевание
			//
			БЛОбщееЗаболеваниеТекст =
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
			|ПОМЕСТИТЬ ВТ_БЛОбщееЗаболевание
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
			|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|	И ОсновныеНачисления.Результат <> 0
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			
		ИначеЕсли Не мФСС_БЛ и Не мЕНВД и мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы 
			или Не мЕНВД и Не мУСН или мФСС_БЛ и мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
			// УСН доходы минус расходы, только доля работодателя БУ и УСН
			// ОСН, только доля работодателя БУ и НУ
			// УСН расходы +Взносы, доля работодателя БУ и УСН когда ДатаНачалаСобытия < ДатаЗакона180ФЗ
			// отбираем записи для которых не задан способ отражения доли БЛ за счет работодателя
			
			// условие для УСН расходы +Взносы, доля работодателя БУ и УСН когда ДатаНачалаСобытия < ДатаЗакона180ФЗ
			Запрос.УстановитьПараметр("парамНеУчитыватьДатуСобытия", Не (мФСС_БЛ и мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы));
			
			ПолучатьБазуДолиБЛЗаСчетРаботодателя = Истина;
			ПолучатьБазуДолиБЛЗаСчетРаботодателяУСН = мУСН;
			
			БЛОбщееЗаболеваниеТекст =
			"ВЫБРАТЬ 
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
			|ПОМЕСТИТЬ ВТ_БЛОбщееЗаболевание
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетОсновногоЗаработка
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработка.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработка.НомерСтроки
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаПодразделения
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаПодразделения.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаПодразделения.НомерСтроки
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|			И (УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL )
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
			|	И ОсновныеНачисления.Результат <> 0
			|	И УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL 
			|	И УчетОсновногоЗаработкаОрганизации.НомерСтроки ЕСТЬ NULL 
			|	И УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL 
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			
			
		ИначеЕсли мЕНВД и мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы 
			или Не мУСН  Тогда	
			// УСН доходы минус расходы + ЕНВД, УСН доходы минус расходы + ЕНВД + Взносы, доля ЕНВД доля работодателя БУ и УСН
			// ОСН+ЕНВД, ОСН+ЕНВД+Взносы, доля ЕНВД и доля работодателя БУ и НУ
			// отбираем все записи для которых не задан способ отражения доли за счет работодателя
			// или стратегия отражения в учете - по базовым начислениям
			
			// условие для УСН расходы+ЕНВД+Взносы, доля ЕНВД и доля работодателя БУ и УСН когда ДатаНачалаСобытия < ДатаЗакона180ФЗ
			Запрос.УстановитьПараметр("парамНеУчитыватьДатуСобытия", Не (мФСС_БЛ и мУСН и мЕНВД и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы));
			
			ПолучатьБазуДолиБЛЗаСчетРаботодателя = Истина;
			ПолучатьБазуДолиБЛЗаСчетРаботодателяУСН = мУСН;
			
			БЛОбщееЗаболеваниеТекст =
			"ВЫБРАТЬ 
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
			|ПОМЕСТИТЬ ВТ_БЛОбщееЗаболевание
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетОсновногоЗаработка
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработка.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработка.НомерСтроки
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаПодразделения
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаПодразделения.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаПодразделения.НомерСтроки
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
			|		ПО (ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаПодразделения.Регистратор)
			|			И (ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаПодразделения.НомерСтроки)
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|			И (УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL )
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
			|	И ОсновныеНачисления.Результат <> 0
			|	И (&парамНеУчитыватьДатуСобытия
			|			ИЛИ ОсновныеНачисления.ДатаНачалаСобытия < &парамДатаЗакона180ФЗ)
			|	И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL 
			|				И УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL 
			|				И УчетОсновногоЗаработкаОрганизации.НомерСтроки ЕСТЬ NULL 
			|			ИЛИ ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления))
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(БЛОбщееЗаболеваниеТекст) Тогда
			// ВТ_СотрудникиПериодыБЛОбщееЗаболевание
			// условия для виртуальной таблицы
			
			Запрос.УстановитьПараметр("парамДатаЗакона180ФЗ", ДатаЗакона180ФЗ);
			Запрос.Текст = БЛОбщееЗаболеваниеТекст;
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
			|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
			|ПОМЕСТИТЬ ВТ_СотрудникиПериодыБЛОбщееЗаболевание
			|ИЗ
			|	ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ДатаНачалаСобытия";
			Результат = Запрос.Выполнить().Выгрузить();
			ПолучатьБазу = Результат[0].Количество > 0;	
		КонецЕсли;
		
		Если ПолучатьБазу Тогда
			
			Если ПолучатьБазуДолиБЛЗаСчетРаботодателя Тогда
				
				Если ПолучатьБазуДолиБЛЗаСчетРаботодателяУСН Тогда
					// получаем разрезы БУ и УСН	
					
					Разрезы = Новый Массив(10);
					Разрезы[0] = "СчетДт";
					Разрезы[1] = "СубконтоДт1";
					Разрезы[2] = "СубконтоДт2";
					Разрезы[3] = "СубконтоДт3";
					Разрезы[4] = "СчетКт";
					Разрезы[5] = "СубконтоКт1";
					Разрезы[6] = "СубконтоКт2";
					Разрезы[7] = "СубконтоКт3";
					Разрезы[8] = "СпособРаспределенияЗатрат";	
					Разрезы[9] = "ОтражениеВУСН";	
					
					Запрос.УстановитьПараметр("парамРазрезыБУСредний", Разрезы);
					
					БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст =
					"ВЫБРАТЬ
					|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
					|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
					|	БазаСреднегоЗаработка.СчетДтРазрез,
					|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
					|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
					|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
					|	БазаСреднегоЗаработка.СчетКтРазрез,
					|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
					|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
					|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
					|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
					|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
					|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
					|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
					|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
					|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
					|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
					|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
					|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
					|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание
					|ИЗ
					|	(ВЫБРАТЬ
					|		ОсновныеНачисления.Регистратор КАК Регистратор,
					|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
					|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
					|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
					|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
					|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
					|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
					|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
					|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
					|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
					|		ВЫБОР
					|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
					|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|							ТОГДА 1
					|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|					КОНЕЦ
					|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
					|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
					|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
					|				ТОГДА 0
					|			ИНАЧЕ ВЫБОР
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|									ТОГДА 1
					|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|							КОНЕЦ
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|									ТОГДА 1
					|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|							КОНЕЦ * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
					|									ТОГДА 0
					|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
					|							КОНЕЦ
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
					|									ТОГДА 0
					|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
					|							КОНЕЦ
					|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
					|				КОНЕЦ * ВЫБОР
					|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
					|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
					|					ИНАЧЕ 1
					|				КОНЕЦ
					|		КОНЕЦ КАК РезультатБаза
					|	ИЗ
					|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
					|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
					|					&парамИзмерения,
					|					&парамИзмерения,
					|					&парамРазрезыБУСредний,
					|					Организация = &парамГоловнаяОрганизация
					|						И Результат <> 0
					|						И ПериодРегистрации = &парамПериодРегистрации
					|						И (Сотрудник, ДатаНачалаСобытия) В
					|							(ВЫБРАТЬ
					|								Список.Сотрудник,
					|								Список.ДатаНачалаСобытия
					|							ИЗ
					|								ВТ_СотрудникиПериодыБЛОбщееЗаболевание КАК Список)) КАК БазаСреднегоЗаработка
					|			ПО (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
					|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
					|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
					|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
					|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
					|	
					|	ОБЪЕДИНИТЬ ВСЕ
					|	
					|	ВЫБРАТЬ
					|		ОсновныеНачисления.Регистратор,
					|		ОсновныеНачисления.НомерСтроки,
					|		БазаСреднегоЗаработка.СчетДтРазрез,
					|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
					|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
					|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
					|		БазаСреднегоЗаработка.СчетКтРазрез,
					|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
					|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
					|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
					|		ВЫБОР
					|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
					|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|							ТОГДА 1
					|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|					КОНЕЦ
					|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
					|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
					|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
					|				ТОГДА 0
					|			ИНАЧЕ ВЫБОР
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|									ТОГДА 1
					|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|							КОНЕЦ
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|									ТОГДА 1
					|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|							КОНЕЦ * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
					|									ТОГДА 0
					|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
					|							КОНЕЦ
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
					|									ТОГДА 0
					|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
					|							КОНЕЦ
					|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
					|				КОНЕЦ * ВЫБОР
					|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
					|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
					|					ИНАЧЕ 1
					|				КОНЕЦ
					|		КОНЕЦ
					|	ИЗ
					|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
					|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
					|					&парамИзмерения,
					|					&парамИзмерения,
					|					&парамРазрезыБУСредний,
					|					Организация = &парамГоловнаяОрганизация
					|						И Результат <> 0
					|						И ПериодРегистрации = &парамПериодРегистрации
					|						И (Сотрудник, ДатаНачалаСобытия) В
					|							(ВЫБРАТЬ
					|								Список.Сотрудник,
					|								Список.ДатаНачалаСобытия
					|							ИЗ
					|								ВТ_СотрудникиПериодыБЛОбщееЗаболевание КАК Список)) КАК БазаСреднегоЗаработка
					|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
					|				И (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
					|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
					|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
					|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК БазаСреднегоЗаработка
					|
					|СГРУППИРОВАТЬ ПО
					|	БазаСреднегоЗаработка.Регистратор,
					|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
					|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
					|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
					|	БазаСреднегоЗаработка.НомерСтроки,
					|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
					|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
					|	БазаСреднегоЗаработка.СчетДтРазрез,
					|	БазаСреднегоЗаработка.СчетКтРазрез,
					|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт3Разрез
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	Регистратор,
					|	НомерСтроки";
					
				Иначе
					// получаем разрезы БУ и НУ
					
					Разрезы = Новый Массив(17);
					Разрезы[0] = "СчетДт";
					Разрезы[1] = "СубконтоДт1";
					Разрезы[2] = "СубконтоДт2";
					Разрезы[3] = "СубконтоДт3";
					Разрезы[4] = "СчетКт";
					Разрезы[5] = "СубконтоКт1";
					Разрезы[6] = "СубконтоКт2";
					Разрезы[7] = "СубконтоКт3";
					Разрезы[8] = "СчетДтНУ";
					Разрезы[9] = "СубконтоДтНУ1";
					Разрезы[10] = "СубконтоДтНУ2";
					Разрезы[11] = "СубконтоДтНУ3";
					Разрезы[12] = "СчетКтНУ";
					Разрезы[13] = "СубконтоКтНУ1";
					Разрезы[14] = "СубконтоКтНУ2";
					Разрезы[15] = "СубконтоКтНУ3";
					Разрезы[16] = "СпособРаспределенияЗатрат";
					
					
					Запрос.УстановитьПараметр("парамРазрезыБУСредний", Разрезы);
					
					БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст =
					"ВЫБРАТЬ
					|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
					|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
					|	БазаСреднегоЗаработка.СчетДтРазрез,
					|	БазаСреднегоЗаработка.СчетКтРазрез,
					|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
					|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
					|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
					|	БазаСреднегоЗаработка.СчетДтНУРазрез,
					|	БазаСреднегоЗаработка.СчетКтНУРазрез,
					|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
					|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
					|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
					|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
					|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
					|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
					|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
					|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
					|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
					|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание
					|ИЗ
					|	(ВЫБРАТЬ
					|		ОсновныеНачисления.Регистратор КАК Регистратор,
					|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
					|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
					|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
					|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
					|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
					|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
					|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
					|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
					|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
					|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
					|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
					|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
					|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
					|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
					|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
					|		ВЫБОР
					|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
					|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|							ТОГДА 1
					|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|					КОНЕЦ
					|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
					|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
					|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
					|				ТОГДА 0
					|			ИНАЧЕ ВЫБОР
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|									ТОГДА 1
					|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|							КОНЕЦ
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|									ТОГДА 1
					|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|							КОНЕЦ * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
					|									ТОГДА 0
					|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
					|							КОНЕЦ
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
					|									ТОГДА 0
					|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
					|							КОНЕЦ
					|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
					|				КОНЕЦ * ВЫБОР
					|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
					|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
					|					ИНАЧЕ 1
					|				КОНЕЦ
					|		КОНЕЦ КАК РезультатБаза
					|	ИЗ
					|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
					|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
					|					&парамИзмерения,
					|					&парамИзмерения,
					|					&парамРазрезыБУСредний,
					|					Организация = &парамГоловнаяОрганизация
					|						И Результат <> 0
					|						И ПериодРегистрации = &парамПериодРегистрации
					|						И (Сотрудник, ДатаНачалаСобытия) В
					|							(ВЫБРАТЬ
					|								Список.Сотрудник,
					|								Список.ДатаНачалаСобытия
					|							ИЗ
					|								ВТ_СотрудникиПериодыБЛОбщееЗаболевание КАК Список)) КАК БазаСреднегоЗаработка
					|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
					|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
					|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
					|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
					|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
					|	
					|	ОБЪЕДИНИТЬ ВСЕ
					|	
					|	ВЫБРАТЬ
					|		ОсновныеНачисления.Регистратор,
					|		ОсновныеНачисления.НомерСтроки,
					|		БазаСреднегоЗаработка.СчетДтРазрез,
					|		БазаСреднегоЗаработка.СчетКтРазрез,
					|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
					|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
					|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
					|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
					|		БазаСреднегоЗаработка.СчетДтНУРазрез,
					|		БазаСреднегоЗаработка.СчетКтНУРазрез,
					|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
					|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
					|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
					|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
					|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
					|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
					|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
					|		ВЫБОР
					|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
					|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|							ТОГДА 1
					|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|					КОНЕЦ
					|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
					|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
					|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
					|				ТОГДА 0
					|			ИНАЧЕ ВЫБОР
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|									ТОГДА 1
					|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|							КОНЕЦ
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
					|									ТОГДА 1
					|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
					|							КОНЕЦ * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
					|									ТОГДА 0
					|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
					|							КОНЕЦ
					|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
					|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
					|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
					|									ТОГДА 0
					|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
					|							КОНЕЦ
					|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
					|				КОНЕЦ * ВЫБОР
					|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
					|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
					|					ИНАЧЕ 1
					|				КОНЕЦ
					|		КОНЕЦ
					|	ИЗ
					|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
					|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
					|					&парамИзмерения,
					|					&парамИзмерения,
					|					&парамРазрезыБУСредний,
					|					Организация = &парамГоловнаяОрганизация
					|						И Результат <> 0
					|						И ПериодРегистрации = &парамПериодРегистрации
					|						И (Сотрудник, ДатаНачалаСобытия) В
					|							(ВЫБРАТЬ
					|								Список.Сотрудник,
					|								Список.ДатаНачалаСобытия
					|							ИЗ
					|								ВТ_СотрудникиПериодыБЛОбщееЗаболевание КАК Список)) КАК БазаСреднегоЗаработка
					|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
					|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
					|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
					|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
					|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
					|
					|СГРУППИРОВАТЬ ПО
					|	БазаСреднегоЗаработка.СчетКтРазрез,
					|	БазаСреднегоЗаработка.СчетДтРазрез,
					|	БазаСреднегоЗаработка.Регистратор,
					|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
					|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
					|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
					|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
					|	БазаСреднегоЗаработка.СчетДтНУРазрез,
					|	БазаСреднегоЗаработка.СчетКтНУРазрез,
					|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
					|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
					|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
					|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
					|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
					|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
					|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
					|	БазаСреднегоЗаработка.НомерСтроки
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	Регистратор,
					|	НомерСтроки";
					
				КонецЕсли;	
				
			Иначе
				
				Разрезы = Новый Массив(3);
				Разрезы[0] = "СубконтоДт1";
				Разрезы[1] = "СубконтоДт2";
				Разрезы[2] = "СубконтоДт3";
				
				Запрос.УстановитьПараметр("парамРазрезыБУСредний", Разрезы);
				
				БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст =
				"ВЫБРАТЬ
				|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
				|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
				|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
				|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
				|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
				|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
				|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
				|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание
				|ИЗ
				|	(ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор КАК Регистратор,
				|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
				|		ВЫБОР
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|							ТОГДА 1
				|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|					КОНЕЦ
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
				|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
				|				ТОГДА 0
				|			ИНАЧЕ ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
				|				КОНЕЦ * ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
				|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
				|					ИНАЧЕ 1
				|				КОНЕЦ
				|		КОНЕЦ КАК РезультатБаза
				|	ИЗ
				|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
				|					&парамИзмерения,
				|					&парамИзмерения,
				|					&парамРазрезыБУСредний,
				|					Организация = &парамГоловнаяОрганизация
				|						И Результат <> 0
				|						И ПериодРегистрации = &парамПериодРегистрации
				|						И (Сотрудник, ДатаНачалаСобытия) В
				|							(ВЫБРАТЬ
				|								Список.Сотрудник,
				|								Список.ДатаНачалаСобытия
				|							ИЗ
				|								ВТ_СотрудникиПериодыБЛОбщееЗаболевание КАК Список)) КАК БазаСреднегоЗаработка
				|			ПО (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
				|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор,
				|		ОсновныеНачисления.НомерСтроки,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|		ВЫБОР
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|							ТОГДА 1
				|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|					КОНЕЦ
				|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
				|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
				|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
				|				ТОГДА 0
				|			ИНАЧЕ ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
				|									ТОГДА 1
				|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
				|							КОНЕЦ * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
				|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
				|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
				|									ТОГДА 0
				|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
				|							КОНЕЦ
				|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
				|				КОНЕЦ * ВЫБОР
				|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
				|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
				|					ИНАЧЕ 1
				|				КОНЕЦ
				|		КОНЕЦ
				|	ИЗ
				|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
				|					&парамИзмерения,
				|					&парамИзмерения,
				|					&парамРазрезыБУСредний,
				|					Организация = &парамГоловнаяОрганизация
				|						И Результат <> 0
				|						И ПериодРегистрации = &парамПериодРегистрации
				|						И (Сотрудник, ДатаНачалаСобытия) В
				|							(ВЫБРАТЬ
				|								Список.Сотрудник,
				|								Список.ДатаНачалаСобытия
				|							ИЗ
				|								ВТ_СотрудникиПериодыБЛОбщееЗаболевание КАК Список)) КАК БазаСреднегоЗаработка
				|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|				И (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК БазаСреднегоЗаработка
				|
				|СГРУППИРОВАТЬ ПО
				|	БазаСреднегоЗаработка.Регистратор,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.НомерСтроки
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Регистратор,
				|	НомерСтроки";
				
			КонецЕсли;
			
		Иначе	
			
			БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатратРазрез,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание";
			
		КонецЕсли;	
		Запрос.Текст = БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для для БЛ общее заболевание
		///////////////////////////////////////////////////////////////////////////////////
		
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для прочих начислений
		
		ПолучатьБазу = Ложь;
		
		// ВТ_ПрочиеНачисления
		//
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Сотрудник,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
		|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|		ИНАЧЕ ОсновныеНачисления.ВидРасчета.СпособРасчета
		|	КОНЕЦ КАК СпособРасчета
		|ПОМЕСТИТЬ ВТ_ПрочиеНачисления
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
		|	И (НЕ ОсновныеНачисления.Сторно)
		|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
		|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
		Запрос.Выполнить();
		
		// ВТ_СотрудникиПериодыПрочиеНачисления
		// условия для виртуальной таблицы
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТ_СотрудникиПериодыПрочиеНачисления
		|ИЗ
		|	ВТ_ПрочиеНачисления КАК ОсновныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия";
		Результат = Запрос.Выполнить().Выгрузить();
		ПолучатьБазу = Результат[0].Количество > 0;
		
		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаПрочиеНачисленияТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеНачисления
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор КАК Регистратор,
			|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор,
			|		ОсновныеНачисления.НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	БазаСреднегоЗаработка.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаПрочиеНачисленияТекст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеНачисления";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаСреднегоЗаработкаПрочиеНачисленияТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаПрочиеНачисления
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для прочих начислений
		///////////////////////////////////////////////////////////////////////////////////
		
		// объединим базы среднего в одну временную таблицу
		БазаСреднегоЗаработкаТекст = 
		"ВЫБРАТЬ
		|	БазаСреднегоЗаработкаПрочиеНачисления.Регистратор КАК Регистратор,
		|	БазаСреднегоЗаработкаПрочиеНачисления.НомерСтроки КАК НомерСтроки,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СчетДтРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СчетКтРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СчетДтНУРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СчетКтНУРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКтНУ3Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.РезультатБаза
		|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаПрочиеНачисления КАК БазаСреднегоЗаработкаПрочиеНачисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.Регистратор,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.НомерСтроки,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СчетДтРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СчетКтРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СчетДтНУРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СчетКтНУРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.РезультатБаза
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание КАК БазаСреднегоЗаработкаБЛОбщееЗаболевание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.Регистратор,
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.НомерСтроки,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.СубконтоДт3Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка),
		|	БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком.РезультатБаза
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком КАК БазаСреднегоЗаработкаОтпускПоБеременностиИРодамПоУходуЗаРебенком
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БазаСреднегоЗаработкаПрочиеБЛ.Регистратор,
		|	БазаСреднегоЗаработкаПрочиеБЛ.НомерСтроки,
		|	БазаСреднегоЗаработкаПрочиеБЛ.СчетДтРазрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.СчетКтРазрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.СубконтоКт3Разрез,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка),
		|	БазаСреднегоЗаработкаПрочиеБЛ.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработкаПрочиеБЛ.РезультатБаза
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаПрочиеБЛ КАК БазаСреднегоЗаработкаПрочиеБЛ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = БазаСреднегоЗаработкаТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработка
		Запрос.Выполнить();
		
		
		///////////////////////////////////////////////////////////////////////////////////
		//получим отражение в учете сторно записей
		
		ОсновныеНачисленияСторноТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТ_ОсновныеНачисленияСторно
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.Сторно";
		
		Запрос.Текст = ОсновныеНачисленияСторноТекст;
		//временная таблица - ВТ_ОсновныеНачисленияСторно
		Результат = Запрос.Выполнить().Выгрузить();
		КоличествоСторноЗаписей = Результат[0].Количество;
		
		Если КоличествоСторноЗаписей <> 0 Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОсновныеНачисленияСторно.Сотрудник КАК Сотрудник,
			|	ОсновныеНачисленияСторно.ВидРасчета КАК ВидРасчета,
			|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТ_СторноСотрудники
			|ИЗ
			|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисленияСторно
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ПО ОсновныеНачисленияСторно.СторнируемыйДокумент = ОсновныеНачисления.Регистратор
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодРегистрации,
			|	ВидРасчета";
			
			//временная таблица - ВТ_СторноСотрудники
			Запрос.Выполнить();
			
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор КАК Регистратор,
			|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|	БУОсновныеНачисления.СчетДт,
			|	БУОсновныеНачисления.СубконтоДт1,
			|	БУОсновныеНачисления.СубконтоДт2,
			|	БУОсновныеНачисления.СубконтоДт3,
			|	БУОсновныеНачисления.СчетКт,
			|	БУОсновныеНачисления.СубконтоКт1,
			|	БУОсновныеНачисления.СубконтоКт2,
			|	БУОсновныеНачисления.СубконтоКт3,
			|	БУОсновныеНачисления.СчетДтНУ,
			|	БУОсновныеНачисления.СубконтоДтНУ1,
			|	БУОсновныеНачисления.СубконтоДтНУ2,
			|	БУОсновныеНачисления.СубконтоДтНУ3,
			|	БУОсновныеНачисления.СчетКтНУ,
			|	БУОсновныеНачисления.СубконтоКтНУ1,
			|	БУОсновныеНачисления.СубконтоКтНУ2,
			|	БУОсновныеНачисления.СубконтоКтНУ3,
			|	БУОсновныеНачисления.СпособРаспределенияЗатрат,
			|	БУОсновныеНачисления.ОтражениеВУСН,
			|	БУОсновныеНачисления.Результат,
			|	БУОсновныеНачисления.ПериодДействияНачало,
			|	БУОсновныеНачисления.ПериодДействияКонец
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно
			|ИЗ
			|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
			|			БУОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
			|			БУОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
			|			БУОсновныеНачисления.Сотрудник КАК Сотрудник,
			|			БУОсновныеНачисления.Результат КАК Результат,
			|			БУОсновныеНачисления.СчетДт КАК СчетДт,
			|			БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
			|			БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
			|			БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
			|			БУОсновныеНачисления.СчетКт КАК СчетКт,
			|			БУОсновныеНачисления.СубконтоКт1 КАК СубконтоКт1,
			|			БУОсновныеНачисления.СубконтоКт2 КАК СубконтоКт2,
			|			БУОсновныеНачисления.СубконтоКт3 КАК СубконтоКт3,
			|			БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
			|			БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
			|			БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
			|			БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
			|			БУОсновныеНачисления.СчетКтНУ КАК СчетКтНУ,
			|			БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
			|			БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
			|			БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
			|			БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
			|			БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
			|			БУОсновныеНачисления.ДокументОснование КАК ДокументОснование
			|		ИЗ
			|			РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
			|		ГДЕ
			|			(БУОсновныеНачисления.ПериодРегистрации, БУОсновныеНачисления.Сотрудник, БУОсновныеНачисления.ВидРасчета) В
			|					(ВЫБРАТЬ
			|						ОсновныеНачисления.ПериодРегистрации,
			|						ОсновныеНачисления.Сотрудник,
			|						ОсновныеНачисления.ВидРасчета
			|					ИЗ
			|						ВТ_СторноСотрудники КАК ОсновныеНачисления)
			|			И (НЕ БУОсновныеНачисления.Сторно)) КАК БУОсновныеНачисления
			|		ПО ОсновныеНачисления.ВидРасчета = БУОсновныеНачисления.ВидРасчета
			|			И ОсновныеНачисления.Сотрудник = БУОсновныеНачисления.Сотрудник
			|			И ОсновныеНачисления.СторнируемыйДокумент = БУОсновныеНачисления.ДокументОснование
			|			И (БУОсновныеНачисления.ПериодДействияНачало МЕЖДУ ОсновныеНачисления.ПериодДействияНачало И ОсновныеНачисления.ПериодДействияКонец
			|				ИЛИ ОсновныеНачисления.ПериодДействияНачало МЕЖДУ БУОсновныеНачисления.ПериодДействияНачало И БУОсновныеНачисления.ПериодДействияКонец)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДт,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
			|	НЕОПРЕДЕЛЕНО КАК СчетКт,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУ,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУ,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатрат,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСН,
			|	НЕОПРЕДЕЛЕНО КАК ПериодДействияНачало,
			|	НЕОПРЕДЕЛЕНО КАК ПериодДействияКонец,
			|	0 КАК Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно";
			
		КонецЕсли;
		
		Запрос.Текст = ОтражениеВУчетеСторноТекст;
		//временная таблица - ВТ_ОтражениеВУчетеСторно
		Запрос.Выполнить();
		
		//получили отражение в учете сторно записей
		///////////////////////////////////////////////////////////////////////////////////
		
		
		ДанныеУчетаТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ &парамЕстьСпособПоУмолчаниюДляБольничного
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УказанСпособОтраженияВБухучетеЗаСчетРаботодателя,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДт
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДт
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДт
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДт
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСчетДт
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДт
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетДт
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКт
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКт
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКт
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКт
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСчетКт
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКт
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКт
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт1
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт1
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт1
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт1
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДт1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт2
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт2
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт2
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт2
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДт2
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт3
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт3
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт3
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт3
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДт3
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт1
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт1
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт1
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт1
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКт1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт2
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт2
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт2
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт2
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКт2
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт3
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт3
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт3
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт3
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКт3
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДтНУ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДтНУ
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДтНУ
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДтНУ
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСчетДтНУ
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКтНУ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКтНУ
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКтНУ
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКтНУ
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСчетКтНУ
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКтНУ
		|	КОНЕЦ КАК СчетКтНУ,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ1
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ1
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ1
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ1
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ1
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ2
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ2
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ2
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ2
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ2
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ2
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ3
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ3
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ3
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ3
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ3
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ3
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ1
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ1
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ1
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ1
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ1
		|	КОНЕЦ КАК СубконтоКтНУ1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ2
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ2
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ2
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ2
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ2
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ2
		|	КОНЕЦ КАК СубконтоКтНУ2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ3
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ3
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ3
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ3
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ3
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ3
		|	КОНЕЦ КАК СубконтоКтНУ3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СпособРаспределенияЗатрат
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СпособРаспределенияЗатрат
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СпособРаспределенияЗатрат
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СпособРаспределенияЗатрат
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСпособРаспределенияЗатрат
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		ИНАЧЕ &парамСпособПоУмолчаниюСпособРаспределенияЗатрат
		|	КОНЕЦ КАК СпособРаспределенияЗатрат,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ОтражениеВУСН
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.ОтражениеВУСН
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.ОтражениеВУСН
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.ОтражениеВУСН
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоОтражениеВУСН
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		ИНАЧЕ &парамСпособПоУмолчаниюОтражениеВУСН
		|	КОНЕЦ КАК ОтражениеВУСН,
		|	ВЫБОР
		|		КОГДА (НЕ &ЕстьЕНВД)
		|			ТОГДА 0
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|			ТОГДА 100
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|			ТОГДА 0
		|		КОГДА ОсновныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 100
		|		КОГДА ОсновныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 0
		|		КОГДА Распределение.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА Распределение.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА ЕНВДПроцент.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
		|		КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		КОГДА УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентЕНВД,
		|	ЕНВДПроцент.СчетДт КАК СчетЕНВД,
		|	ЕНВДПроцент.Субконто1 КАК Субконто1ЕНВД,
		|	ЕНВДПроцент.Субконто2 КАК Субконто2ЕНВД,
		|	ЕНВДПроцент.Субконто3 КАК Субконто3ЕНВД,
		|	ЕНВДПроцент.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатратЕНВД,
		|	Распределение.ДоляСпособаОтражения КАК ДоляСпособаОтражения,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ОсновныеНачисления.Результат КАК Результат,
		|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	ОсновныеНачисления.Сторно КАК Сторно,
		|	ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ОсновныеНачисления.ВидРасчета.ВидНачисленияПоСт255НК КАК ВидНачисленияПоСт255НК,
		|	ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете КАК СтратегияОтраженияВУчете,
		|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ОтражениеВУчетеСторно.ПериодДействияНачало КАК ПериодДействияНачалоСторно,
		|	ОтражениеВУчетеСторно.ПериодДействияКонец КАК ПериодДействияКонецСторно,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий)
		|		ИНАЧЕ ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете
		|	КОНЕЦ КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ОсновныеНачисления.Сотрудник.Наименование КАК СотрудникНаименование
		|ПОМЕСТИТЬ ДанныеУчета
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетПлановыхНачислений КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ОсновныеНачисления.Регистратор = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = РеглУчетПлановыхНачисленийРаботниковОрганизаций.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетЗарВРеглУчете
		|		ПО ОсновныеНачисления.Регистратор = УчетЗарВРеглУчете.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетЗарВРеглУчете.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|		ПО ОсновныеНачисления.Сотрудник = Распределение.Сотрудник
		|			И (НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ) = Распределение.ПериодРегистрации)
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете ЕСТЬ NULL )
		|			И (ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия))
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|			И (Распределение.ДоляСпособаОтражения <> 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентДеятельностиЕНВДСотрудников КАК ЕНВДПроцент
		|		ПО ОсновныеНачисления.Сотрудник = ЕНВДПроцент.Сотрудник
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|			И (ВЫБОР
		|				КОГДА ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия)
		|					ТОГДА ВЫБОР
		|							КОГДА НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ) > ОсновныеНачисления.ПериодРегистрации
		|								ТОГДА ОсновныеНачисления.ПериодРегистрации
		|							ИНАЧЕ НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ)
		|						КОНЕЦ
		|				КОГДА ОсновныеНачисления.ПериодДействия > ОсновныеНачисления.ПериодРегистрации
		|					ТОГДА ОсновныеНачисления.ПериодРегистрации
		|				ИНАЧЕ ОсновныеНачисления.ПериодДействия
		|			КОНЕЦ = ЕНВДПроцент.ПериодРегистрации)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
		|		ПО ОсновныеНачисления.Сотрудник = БУОсновныеНачисления.Сотрудник
		|			И ОсновныеНачисления.ВидРасчета = БУОсновныеНачисления.ВидРасчета
		|			И (БУОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации)
		|			И (БУОсновныеНачисления.ПериодДействияНачало >= ОсновныеНачисления.ПериодДействияНачало)
		|			И (БУОсновныеНачисления.ПериодДействияКонец <= ОсновныеНачисления.ПериодДействияКонец)
		|			И (БУОсновныеНачисления.ДокументОснование = ОсновныеНачисления.Регистратор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ОсновныеНачисления.Регистратор = ОтражениеВУчетеСторно.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ВЫБОР
		|			КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете
		|			КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете
		|			КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА Распределение.СпособОтраженияВБухучете
		|			КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете
		|			ИНАЧЕ &парамСпособПоУмолчанию
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
		|	И БУОсновныеНачисления.Сотрудник ЕСТЬ NULL 
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";	
		
		Запрос.Текст = ДанныеУчетаТекст;
		//временная таблица - ДанныеУчета
		Запрос.Выполнить();
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&парамГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДанныеУчета.Регистратор КАК Регистратор,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.СотрудникНаименование КАК СотрудникНаименование,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.СчетДт КАК СчетДт,
		|	ДанныеУчета.СчетКт КАК СчетКт,
		|	ДанныеУчета.СубконтоДт1,
		|	ДанныеУчета.СубконтоДт2,
		|	ДанныеУчета.СубконтоДт3,
		|	ДанныеУчета.СубконтоКт1,
		|	ДанныеУчета.СубконтоКт2,
		|	ДанныеУчета.СубконтоКт3,
		|	ДанныеУчета.СчетДтНУ,
		|	ДанныеУчета.СчетКтНУ,
		|	ДанныеУчета.СубконтоДтНУ1,
		|	ДанныеУчета.СубконтоДтНУ2,
		|	ДанныеУчета.СубконтоДтНУ3,
		|	ДанныеУчета.СубконтоКтНУ1,
		|	ДанныеУчета.СубконтоКтНУ2,
		|	ДанныеУчета.СубконтоКтНУ3,
		|	ДанныеУчета.СпособРаспределенияЗатрат,
		|	ДанныеУчета.ОтражениеВУСН,
		|	ДанныеУчета.ПроцентЕНВД,
		|	ДанныеУчета.СчетЕНВД,
		|	ДанныеУчета.Субконто1ЕНВД,
		|	ДанныеУчета.Субконто2ЕНВД,
		|	ДанныеУчета.Субконто3ЕНВД,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.Сторно,
		|	ДанныеУчета.СпособРасчета,
		|	ДанныеУчета.ВидНачисленияПоСт255НК,
		|	ДанныеУчета.СтратегияОтраженияВУчете,
		|	ДанныеУчета.ПодразделениеОрганизации,
		|	ДанныеУчета.Результат,
		|	ДанныеУчета.ПериодДействияНачало,
		|	ДанныеУчета.ПериодДействияКонец,
		|	ДанныеУчета.ГрафикРаботы,
		|	ДанныеУчета.ВидУчетаВремени,
		|	ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя,
		|	ДанныеУчета.ДатаНачалаСобытия,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДт.НомерСтроки, 0) КАК НомерСубконтоРаботникиДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКт.НомерСтроки, 0) КАК НомерСубконтоРаботникиКт,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДт.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиКтНУ,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДтНУ.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДт.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДт,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДтНУ.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДтНУ,
		|	ЕСТЬNULL(СубконтоСт255НК.НомерСтроки, 0) КАК НомерСубконтоСт255НК,
		|	ЕСТЬNULL(База.СчетДтРазрез, БазаСреднегоЗаработка.СчетДтРазрез) КАК СчетДтРазрез,
		|	ЕСТЬNULL(База.СчетКтРазрез, БазаСреднегоЗаработка.СчетКтРазрез) КАК СчетКтРазрез,
		//|	ВЫБОР
		//|		КОГДА БазаСреднегоЗаработка.СубконтоДт1Разрез ЕСТЬ NULL 
		//|			ТОГДА NULL
		//|		КОГДА БазаСреднегоЗаработка.СубконтоДт1Разрез ССЫЛКА Справочник.СтатьиЗатрат
		//|			ТОГДА БазаСреднегоЗаработка.СубконтоДт1Разрез.ОтнесениеРасходовКДеятельностиЕНВД
		//|		КОГДА БазаСреднегоЗаработка.СубконтоДт2Разрез ССЫЛКА Справочник.СтатьиЗатрат
		//|			ТОГДА БазаСреднегоЗаработка.СубконтоДт2Разрез.ОтнесениеРасходовКДеятельностиЕНВД
		//|		КОГДА БазаСреднегоЗаработка.СубконтоДт3Разрез ССЫЛКА Справочник.СтатьиЗатрат
		//|			ТОГДА БазаСреднегоЗаработка.СубконтоДт3Разрез.ОтнесениеРасходовКДеятельностиЕНВД
		//|		ИНАЧЕ NULL
		//|	КОНЕЦ КАК БазаСреднегоЗаработкаСтатьяЗатратЕНВД,
		|	ВЫБОР
		|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК БазаСреднегоЗаработкаЕНВД,
		|	ЕСТЬNULL(База.СубконтоДт1Разрез, БазаСреднегоЗаработка.СубконтоДт1Разрез) КАК СубконтоДт1Разрез,
		|	ЕСТЬNULL(База.СубконтоДт2Разрез, БазаСреднегоЗаработка.СубконтоДт2Разрез) КАК СубконтоДт2Разрез,
		|	ЕСТЬNULL(База.СубконтоДт3Разрез, БазаСреднегоЗаработка.СубконтоДт3Разрез) КАК СубконтоДт3Разрез,
		|	ЕСТЬNULL(База.СубконтоКт1Разрез, БазаСреднегоЗаработка.СубконтоКт1Разрез) КАК СубконтоКт1Разрез,
		|	ЕСТЬNULL(База.СубконтоКт2Разрез, БазаСреднегоЗаработка.СубконтоКт2Разрез) КАК СубконтоКт2Разрез,
		|	ЕСТЬNULL(База.СубконтоКт3Разрез, БазаСреднегоЗаработка.СубконтоКт3Разрез) КАК СубконтоКт3Разрез,
		|	ЕСТЬNULL(База.СчетДтНУРазрез, БазаСреднегоЗаработка.СчетДтНУРазрез) КАК СчетДтНУРазрез,
		|	ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) КАК СчетКтНУРазрез,
		|	ЕСТЬNULL(СубконтоСт255НКБазы.НомерСтроки, 0) КАК НомерСубконтоСт255НКБазы,
		|	ЕСТЬNULL(База.СубконтоДтНУ1Разрез, БазаСреднегоЗаработка.СубконтоДтНУ1Разрез) КАК СубконтоДтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ2Разрез, БазаСреднегоЗаработка.СубконтоДтНУ2Разрез) КАК СубконтоДтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ3Разрез, БазаСреднегоЗаработка.СубконтоДтНУ3Разрез) КАК СубконтоДтНУ3Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ1Разрез, БазаСреднегоЗаработка.СубконтоКтНУ1Разрез) КАК СубконтоКтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ2Разрез, БазаСреднегоЗаработка.СубконтоКтНУ2Разрез) КАК СубконтоКтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ3Разрез, БазаСреднегоЗаработка.СубконтоКтНУ3Разрез) КАК СубконтоКтНУ3Разрез,
		|	ЕСТЬNULL(База.СпособРаспределенияЗатратРазрез, БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез) КАК СпособРаспределенияЗатратРазрез,
		|	ЕСТЬNULL(База.ОтражениеВУСНРазрез, БазаСреднегоЗаработка.ОтражениеВУСНРазрез) КАК ОтражениеВУСНРазрез,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ДоляСпособаОтражения ЕСТЬ НЕ NULL 
		|			ТОГДА ДанныеУчета.ДоляСпособаОтражения
		|		КОГДА База.РезультатБаза ЕСТЬ НЕ NULL 
		|			ТОГДА База.РезультатБаза
		|		ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|	КОНЕЦ КАК РезультатБаза,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ПериодДействия >= &парамДатаЗакона255ФЗ
		|			ТОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(РазмерыММОТ.Размер, 0) / ДЕНЬ(КОНЕЦПЕРИОДА(ДанныеУчета.ПериодДействия, МЕСЯЦ)) КАК ЧИСЛО(10, 2))) * ЕСТЬNULL(ДанныеФПД.КалендарныхДней, 0)
		|		КОГДА ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеПериодДействия, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(РазмерыММОТ.Размер, 0) / ДанныеГрафика.ОсновноеЗначениеПериодДействия КАК ЧИСЛО(10, 2))) * ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия, 0)
		|	КОНЕЦ КАК ВПределахММОТ,
		|	ЕСТЬNULL(ДанныеУчетаБЛ.ДоляБЛЗаСчетРаботодателя, 0) КАК ДоляБЛЗаСчетРаботодателя,
		|	ДанныеУчета.ДоляСпособаОтражения,
		|	ДанныеУчета.РезультатСторно КАК РезультатСторно,
		|	ДанныеУчета.ПериодДействияНачалоСторно КАК ПериодДействияНачалоСторно,
		|	ДанныеУчета.ПериодДействияКонецСторно КАК ПериодДействияКонецСторно,
		|	ЛОЖЬ КАК ЭтоЕдиновременноеПособиеФСС,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоПособияФСС
		|ИЗ
		|	ДанныеУчета КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоРаботникиДт.Ссылка
		|			И (ВидыСубконтоРаботникиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиКт
		|		ПО (ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетКт = ВидыСубконтоРаботникиКт.Ссылка
		|			И (ВидыСубконтоРаботникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоПодразделенияДт.Ссылка
		|			И (ВидыСубконтоПодразделенияДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоСтатьиЗатратДт.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоСтатьиЗатратДтНУ.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НК
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = СубконтоСт255НК.Ссылка
		|			И (СубконтоСт255НК.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоРаботникиДтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиКтНУ
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = ВидыСубконтоРаботникиКтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиКтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоПодразделенияДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоПодразделенияДтНУ.Ссылка
		|			И (ВидыСубконтоПодразделенияДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_База КАК База
		|		ПО ДанныеУчета.Регистратор = База.Регистратор
		|			И ДанныеУчета.НомерСтроки = База.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.Регистратор = БазаСреднегоЗаработка.Регистратор
		|			И ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НКБазы
		|		ПО (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) = СубконтоСт255НКБазы.Ссылка)
		|			И (СубконтоСт255НКБазы.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
		|		ПО БазаСреднегоЗаработка.СчетДтРазрез = СчетаУчетаПоДеятельностиЕНВД.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДатыАктуальностиММОТ.Регистратор КАК Регистратор,
		|			ДатыАктуальностиММОТ.НомерСтроки КАК ОсновнойНомерСтроки,
		|			МинимальнаяОплатаТрудаРФ.Размер КАК Размер
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ОсновныеНачисления.Регистратор КАК Регистратор,
		|				ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|				МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
		|			ИЗ
		|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|					ПО (МинимальнаяОплатаТрудаРФ.Период <= ОсновныеНачисления.ПериодДействияНачало)
		|			ГДЕ
		|				ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|				И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|				И ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|				И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|				И ОсновныеНачисления.Результат <> 0
		|				И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ОсновныеНачисления.НомерСтроки,
		|				ОсновныеНачисления.Регистратор) КАК ДатыАктуальностиММОТ
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
		|				ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)) КАК РазмерыММОТ
		|		ПО ДанныеУчета.Регистратор = РазмерыММОТ.Регистратор
		|			И ДанныеУчета.НомерСтроки = РазмерыММОТ.ОсновнойНомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
		|				ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|					И ОбособленноеПодразделение = &парамОрганизация
		|					И ВидРасчета В (&парамСписокНачислений)
		|					И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|					И ПериодДействия < &парамДатаЗакона255ФЗ
		|					И ПериодРегистрации = &парамПериодРегистрации) КАК ДанныеГрафика
		|		ПО ДанныеУчета.Регистратор = ДанныеГрафика.Регистратор
		|			И ДанныеУчета.НомерСтроки = ДанныеГрафика.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ФактическийПериодДействияЗаписей.Регистратор КАК Регистратор,
		|			ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|			СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|		ИЗ
		|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|					ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|						И ВидРасчета В (&парамСписокНачислений)
		|						И ОбособленноеПодразделение = &парамОрганизация
		|						И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|						И ПериодДействия >= &парамДатаЗакона255ФЗ
		|						И ПериодРегистрации = &парамПериодРегистрации) КАК ФактическийПериодДействияЗаписей
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ФактическийПериодДействияЗаписей.Регистратор,
		|			ФактическийПериодДействияЗаписей.НомерСтроки) КАК ДанныеФПД
		|		ПО ДанныеУчета.Регистратор = ДанныеФПД.Регистратор
		|			И ДанныеУчета.НомерСтроки = ДанныеФПД.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОсновныеНачисления.Регистратор КАК Регистратор,
		|			ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|			ЕСТЬNULL(ВЫБОР
		|					КОГДА ОсновныеНачисления.ДатаНачалаСобытия >= &парамДатаЗакона255ФЗ
		|						ТОГДА ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя / ФактическийПериодДействияЗаписей.КалендарныхДней
		|					КОГДА ВЫБОР
		|							КОГДА ОсновныеНачисления.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
		|								ТОГДА ОсновныеНачисления.НормаДней
		|							ИНАЧЕ ОсновныеНачисления.НормаЧасов
		|						КОНЕЦ = 0
		|						ТОГДА 0
		|					ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение) / ВЫБОР
		|							КОГДА ОсновныеНачисления.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
		|								ТОГДА ОсновныеНачисления.НормаДней
		|							ИНАЧЕ ОсновныеНачисления.НормаЧасов
		|						КОНЕЦ
		|				КОНЕЦ, 0) КАК ДоляБЛЗаСчетРаботодателя
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ОсновныеНачисления.Регистратор КАК Регистратор,
		|				ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|				ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|				ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|				ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|				ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|				ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|				ОсновныеНачисления.НормаДней КАК НормаДней,
		|				ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|				ОсновныеНачисления.НормаЧасов КАК НормаЧасов
		|			ИЗ
		|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|			ГДЕ
		|				ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|				И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|				И ОсновныеНачисления.Результат <> 0
		|				И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|				И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
		|				И РАЗНОСТЬДАТ(ОсновныеНачисления.ДатаНачалаСобытия, ОсновныеНачисления.ПериодДействияНачало, ДЕНЬ) < 2
		|				И ОсновныеНачисления.ДатаНачалаСобытия >= &парамДатаЗакона202ФЗ) КАК ОсновныеНачисления
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
		|				ПО ОсновныеНачисления.ГрафикРаботы = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
		|					И ОсновныеНачисления.ВидУчетаВремени = ГрафикиРаботыПоВидамВремени.ВидУчетаВремени
		|					И (ОсновныеНачисления.ПериодДействия < &парамДатаЗакона255ФЗ)
		|					И (ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ ОсновныеНачисления.ПериодДействияНачало И ДОБАВИТЬКДАТЕ(ОсновныеНачисления.ДатаНачалаСобытия, ДЕНЬ, 1))
		|					И (ГрафикиРаботыПоВидамВремени.Дата <= ОсновныеНачисления.ПериодДействияКонец)
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ФактическийПериодДействияЗаписей.Регистратор КАК Регистратор,
		|					ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|					СУММА(ВЫБОР
		|							КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало = ФактическийПериодДействияЗаписей.ДатаНачалаСобытия
		|								ТОГДА ВЫБОР
		|										КОГДА ФактическийПериодДействияЗаписей.ПериодДействияКонец >= ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|											ТОГДА 2
		|										ИНАЧЕ 1
		|									КОНЕЦ
		|							КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало > ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|								ТОГДА 0
		|							ИНАЧЕ 1
		|						КОНЕЦ) КАК ДнейЗаСчетРаботодателя,
		|					СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|				ИЗ
		|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|							ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|								И ВидРасчета В (&парамСписокНачислений)
		|								И ОбособленноеПодразделение = &парамОрганизация
		|								И ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
		|								И ПериодДействия >= &парамДатаЗакона255ФЗ
		|								И ПериодРегистрации = &парамПериодРегистрации) КАК ФактическийПериодДействияЗаписей
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ФактическийПериодДействияЗаписей.Регистратор,
		|					ФактическийПериодДействияЗаписей.НомерСтроки) КАК ФактическийПериодДействияЗаписей
		|				ПО ОсновныеНачисления.Регистратор = ФактическийПериодДействияЗаписей.Регистратор
		|					И ОсновныеНачисления.НомерСтроки = ФактическийПериодДействияЗаписей.НомерСтроки
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОсновныеНачисления.Регистратор,
		|			ОсновныеНачисления.ВидУчетаВремени,
		|			ОсновныеНачисления.ДатаНачалаСобытия,
		|			ОсновныеНачисления.ПериодДействияНачало,
		|			ОсновныеНачисления.ПериодДействияКонец,
		|			ОсновныеНачисления.НормаЧасов,
		|			ОсновныеНачисления.НормаДней,
		|			ОсновныеНачисления.НомерСтроки,
		|			ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя,
		|			ФактическийПериодДействияЗаписей.КалендарныхДней) КАК ДанныеУчетаБЛ
		|		ПО ДанныеУчета.Регистратор = ДанныеУчетаБЛ.Регистратор
		|			И ДанныеУчета.НомерСтроки = ДанныеУчетаБЛ.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Регистратор,
		|	НомерСтроки,
		|	СчетДтРазрез,
		|	СчетДтНУРазрез,
		|	СубконтоДт1Разрез,
		|	СубконтоДт2Разрез,
		|	СубконтоДтНУ1Разрез,
		|	СубконтоДтНУ2Разрез,
		|	ОтражениеВУСНРазрез
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	Иначе // Дополнительные начисления
		
		Если Не ЭтоПервичныеНачисления Тогда
			
			//соберем базу для зависимых начислений
			БазаТекст = 
			"ВЫБРАТЬ
			|	База.Регистратор КАК Регистратор,
			|	База.НомерСтроки КАК НомерСтроки,
			|	База.СчетДтРазрез КАК СчетДтРазрез,
			|	База.СчетКтРазрез КАК СчетКтРазрез,
			|	База.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|	База.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|	База.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|	База.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|	База.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|	База.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|	База.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|	База.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|	База.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|	СУММА(База.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ База
			|ИЗ
			|	(ВЫБРАТЬ
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.Регистратор КАК Регистратор,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СчетДтРазрез КАК СчетДтРазрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СчетКтРазрез КАК СчетКтРазрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		ДополнительныеНачисленияБазаБУДополнительныеНачисления.РезультатБаза КАК РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаБУДополнительныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И НАЧАЛОПЕРИОДА(ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета В (&парамСписокНачислений)
			|					И (НЕ Сторно)) КАК ДополнительныеНачисленияБазаБУДополнительныеНачисления
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.Регистратор,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.НомерСтроки,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СчетДтРазрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СчетКтРазрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоДт1Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоДт2Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоДт3Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоКт1Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоКт2Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоКт3Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СчетДтНУРазрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СчетКтНУРазрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоДтНУ1Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоДтНУ2Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоДтНУ3Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоКтНУ1Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоКтНУ2Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СубконтоКтНУ3Разрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.СпособРаспределенияЗатратРазрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.ОтражениеВУСНРазрез,
			|		ДополнительныеНачисленияБазаБУОсновныеНачисления.РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаБУОсновныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И НАЧАЛОПЕРИОДА(ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета В (&парамСписокНачислений)
			|					И (НЕ Сторно)) КАК ДополнительныеНачисленияБазаБУОсновныеНачисления) КАК База
			|
			|СГРУППИРОВАТЬ ПО
			|	База.Регистратор,
			|	База.НомерСтроки,
			|	База.СчетДтРазрез,
			|	База.СчетКтРазрез,
			|	База.СубконтоДт1Разрез,
			|	База.СубконтоДт2Разрез,
			|	База.СубконтоДт3Разрез,
			|	База.СубконтоКт1Разрез,
			|	База.СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез,
			|	База.СчетДтНУРазрез,
			|	База.СчетКтНУРазрез,
			|	База.СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез,
			|	База.СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе
			
			БазаТекст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ База";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаТекст;
		//временная таблица - База
		Запрос.Выполнить();
		
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для доп. начислений
		
		ПолучатьБазу = Ложь;
		
		// ВТ_НачисленияПоСреднемуЗаработку
		//
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Сотрудник,
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.ДатаНачалаСобытия,
		|	ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
		|	ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
		|ПОМЕСТИТЬ ВТ_НачисленияПоСреднемуЗаработку
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
		|	И (НЕ ДополнительныеНачисления.Сторно)
		|	И ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)";
		Запрос.Выполнить();
		
		// ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку
		// условия для виртуальной таблицы
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку
		|ИЗ
		|	ВТ_НачисленияПоСреднемуЗаработку КАК ДополнительныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия";
		Результат = Запрос.Выполнить().Выгрузить();
		ПолучатьБазу = Результат[0].Количество > 0;
		
		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка
			|ИЗ
			|	(ВЫБРАТЬ
			|		ДополнительныеНачисления.Регистратор КАК Регистратор,
			|		ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза
			|	ИЗ
			|		ВТ_НачисленияПоСреднемуЗаработку КАК ДополнительныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ДополнительныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ДополнительныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ДополнительныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДополнительныеНачисления.Регистратор,
			|		ДополнительныеНачисления.НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ
			|	ИЗ
			|		ВТ_НачисленияПоСреднемуЗаработку КАК ДополнительныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ДополнительныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ДополнительныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ДополнительныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	БазаСреднегоЗаработка.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаТекст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
			|   ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаСреднегоЗаработкаТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработка
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для доп. начислений
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		//получим отражение в учете сторно записей
		
		ДополнительныеНачисленияСторноТекст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета,
		|	ДополнительныеНачисления.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисленияСторно
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.Сторно";
		
		Запрос.Текст = ДополнительныеНачисленияСторноТекст;
		//временная таблица - ВТ_ДополнительныеНачисленияСторно
		Результат = Запрос.Выполнить().Выгрузить();
		КоличествоСторноЗаписей = Результат[0].Количество; 
		
		Если КоличествоСторноЗаписей <> 0 Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДополнительныеНачисленияСторно.Регистратор КАК Регистратор,
			|	ДополнительныеНачисленияСторно.НомерСтроки КАК НомерСтроки,
			|	ДополнительныеНачисленияСторно.Сотрудник КАК Сотрудник,
			|	ДополнительныеНачисленияСторно.ВидРасчета КАК ВидРасчета,
			|	ДополнительныеНачисленияСторно.СторнируемыйДокумент КАК СторнируемыйДокумент,
			|	НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТ_СторноСотрудники
			|ИЗ
			|	ВТ_ДополнительныеНачисленияСторно КАК ДополнительныеНачисленияСторно
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
			|		ПО ДополнительныеНачисленияСторно.СторнируемыйДокумент = ДополнительныеНачисления.Регистратор
			|ГДЕ
			|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодРегистрации,
			|	ВидРасчета";
			
			//временная таблица - ВТ_СторноСотрудники
			Запрос.Выполнить();
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	ДополнительныеНачисления.Регистратор КАК Регистратор,
			|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|	БУДополнительныеНачисления.СчетДт,
			|	БУДополнительныеНачисления.СубконтоДт1,
			|	БУДополнительныеНачисления.СубконтоДт2,
			|	БУДополнительныеНачисления.СубконтоДт3,
			|	БУДополнительныеНачисления.СчетКт,
			|	БУДополнительныеНачисления.СубконтоКт1,
			|	БУДополнительныеНачисления.СубконтоКт2,
			|	БУДополнительныеНачисления.СубконтоКт3,
			|	БУДополнительныеНачисления.СчетДтНУ,
			|	БУДополнительныеНачисления.СубконтоДтНУ1,
			|	БУДополнительныеНачисления.СубконтоДтНУ2,
			|	БУДополнительныеНачисления.СубконтоДтНУ3,
			|	БУДополнительныеНачисления.СчетКтНУ,
			|	БУДополнительныеНачисления.СубконтоКтНУ1,
			|	БУДополнительныеНачисления.СубконтоКтНУ2,
			|	БУДополнительныеНачисления.СубконтоКтНУ3,
			|	БУДополнительныеНачисления.СпособРаспределенияЗатрат,
			|	БУДополнительныеНачисления.ОтражениеВУСН,
			|	БУДополнительныеНачисления.Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно
			|ИЗ
			|	ВТ_СторноСотрудники КАК ДополнительныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			БУДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
			|			БУДополнительныеНачисления.Сотрудник КАК Сотрудник,
			|			БУДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
			|			БУДополнительныеНачисления.Организация КАК Организация,
			|			БУДополнительныеНачисления.Результат КАК Результат,
			|			БУДополнительныеНачисления.СчетДт КАК СчетДт,
			|			БУДополнительныеНачисления.СубконтоДт1 КАК СубконтоДт1,
			|			БУДополнительныеНачисления.СубконтоДт2 КАК СубконтоДт2,
			|			БУДополнительныеНачисления.СубконтоДт3 КАК СубконтоДт3,
			|			БУДополнительныеНачисления.СчетКт КАК СчетКт,
			|			БУДополнительныеНачисления.СубконтоКт1 КАК СубконтоКт1,
			|			БУДополнительныеНачисления.СубконтоКт2 КАК СубконтоКт2,
			|			БУДополнительныеНачисления.СубконтоКт3 КАК СубконтоКт3,
			|			БУДополнительныеНачисления.СчетДтНУ КАК СчетДтНУ,
			|			БУДополнительныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
			|			БУДополнительныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
			|			БУДополнительныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
			|			БУДополнительныеНачисления.СчетКтНУ КАК СчетКтНУ,
			|			БУДополнительныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
			|			БУДополнительныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
			|			БУДополнительныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
			|			БУДополнительныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
			|			БУДополнительныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
			|			БУДополнительныеНачисления.ДокументОснование КАК ДокументОснование
			|		ИЗ
			|			РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
			|		ГДЕ
			|			(НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ), БУДополнительныеНачисления.Сотрудник, БУДополнительныеНачисления.ВидРасчета) В
			|					(ВЫБРАТЬ
			|						ДополнительныеНачисления.ПериодРегистрации,
			|						ДополнительныеНачисления.Сотрудник,
			|						ДополнительныеНачисления.ВидРасчета
			|					ИЗ
			|						ВТ_СторноСотрудники КАК ДополнительныеНачисления)
			|			И (НЕ БУДополнительныеНачисления.Сторно)) КАК БУДополнительныеНачисления
			|		ПО ДополнительныеНачисления.ВидРасчета = БУДополнительныеНачисления.ВидРасчета
			|			И ДополнительныеНачисления.Сотрудник = БУДополнительныеНачисления.Сотрудник
			|			И ДополнительныеНачисления.СторнируемыйДокумент = БУДополнительныеНачисления.ДокументОснование
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДт,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
			|	НЕОПРЕДЕЛЕНО КАК СчетКт,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУ,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУ,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатрат,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСН,
			|	0 КАК Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно";
			
		КонецЕсли;
		
		Запрос.Текст = ОтражениеВУчетеСторноТекст;
		//временная таблица - ВТ_ОтражениеВУчетеСторно
		Запрос.Выполнить();
		
		//получили отражение в учете сторно записей
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_УчетПлановыхНачислений
		
		УчетПлановыхНачисленийТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ДополнительныеНачисления.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачислениДляПлановый
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ДополнительныеНачисления.Сторно)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период,
		|	ДополнительныеНачисления.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_СведенияОНачислениях
		|ИЗ
		|	ВТ_ДополнительныеНачислениДляПлановый КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ДополнительныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|			И ДополнительныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|			И ДополнительныеНачисления.ДокументОснование = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ДокументОснование
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета,
		|	ДополнительныеНачисления.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.ПустаяСсылка)
		|		ИНАЧЕ РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД
		|	КОНЕЦ КАК ОтнесениеРасходовКДеятельностиЕНВД,
		|	СведенияОНачисленияхСрез.Регистратор КАК Регистратор,
		|	СведенияОНачисленияхСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетПлановыхНачислений
		|ИЗ
		|	РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОНачислениях КАК СведенияОНачисленияхСрез
		|		ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|			И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|			И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|			И (СведенияОНачисленияхСрез.ДокументОснование = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ДокументОснование)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетПлановыхНачисленийТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		ДополнительныеНачисленияТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ПериодРегистрации,
		|	ДополнительныеНачисления.ПодразделениеОрганизации,
		|	ДополнительныеНачисления.ОбособленноеПодразделение
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия)
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ДополнительныеНачисления.Сторно)";
		Запрос.Текст = ДополнительныеНачисленияТекст;
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		// таблица ВТ_УчетОсновногоЗаработка
		
		УчетОсновногоЗаработкаТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(УчетЗарВРеглУчете.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОРаботниках
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ПО ДополнительныеНачисления.Сотрудник = УчетЗарВРеглУчете.Сотрудник
		|			И (УчетЗарВРеглУчете.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетЗарВРеглУчете.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА NULL
		|		ИНАЧЕ УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	СведенияОРаботникахСрез.Регистратор КАК Регистратор,
		|	СведенияОРаботникахСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработка
		|ИЗ
		|	РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОРаботниках КАК СведенияОРаботникахСрез
		|		ПО (СведенияОРаботникахСрез.Сотрудник = УчетЗарВРеглУчете.Сотрудник)
		|			И (СведенияОРаботникахСрез.Период = УчетЗарВРеглУчете.Период)";
		Запрос.Текст = УчетОсновногоЗаработкаТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		// таблица ВТ_УчетОсновногоЗаработкаПодразделения
		
		УчетОсновногоЗаработкаПодразделенияТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	МАКСИМУМ(УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОПодразделениях
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ДополнительныеНачисления.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И (УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.ПодразделениеОрганизации,
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПодразделенияхСрез.Регистратор КАК Регистратор,
		|	СведенияОПодразделенияхСрез.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаПодразделения
		|ИЗ
		|	ВТ_СведенияОПодразделениях КАК СведенияОПодразделенияхСрез
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО СведенияОПодразделенияхСрез.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И СведенияОПодразделенияхСрез.Период = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаПодразделенияТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		// таблица ВТ_УчетОсновногоЗаработкаОрганизации
		
		УчетОсновногоЗаработкаОрганизацииТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	МАКСИМУМ(УчетОсновногоЗаработкаОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияПоОрганизации
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ДополнительныеНачисления.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И (УчетОсновногоЗаработкаОрганизации.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.ОбособленноеПодразделение,
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПоОрганизации.Регистратор КАК Регистратор,
		|	СведенияПоОрганизации.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаОрганизации
		|ИЗ
		|	ВТ_СведенияПоОрганизации КАК СведенияПоОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО СведенияПоОрганизации.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И СведенияПоОрганизации.Период = УчетОсновногоЗаработкаОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаОрганизацииТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		///////////////////////////////////////////////////////////////////////////////////
		
		ДанныеУчетаТекст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ДополнительныеНачисления.ВидРасчета.ВидНачисленияПоСт255НК КАК ВидНачисленияПоСт255НК,
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете КАК СтратегияОтраженияВУчете,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДт
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДт
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетДт
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКт
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКт
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКт
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДтНУ
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКтНУ
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКтНУ
		|	КОНЕЦ КАК СчетКтНУ,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ1
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ2
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ3
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ1
		|	КОНЕЦ КАК СубконтоКтНУ1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ2
		|	КОНЕЦ КАК СубконтоКтНУ2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ3
		|	КОНЕЦ КАК СубконтоКтНУ3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СпособРаспределенияЗатрат
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		ИНАЧЕ &парамСпособПоУмолчаниюСпособРаспределенияЗатрат
		|	КОНЕЦ КАК СпособРаспределенияЗатрат,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ОтражениеВУСН
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		ИНАЧЕ &парамСпособПоУмолчаниюОтражениеВУСН
		|	КОНЕЦ КАК ОтражениеВУСН,
		|	ВЫБОР
		|		КОГДА (НЕ &ЕстьЕНВД)
		|			ТОГДА 0
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|			ТОГДА 100
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|			ТОГДА 0
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 100
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 0
		|		КОГДА Распределение.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА Распределение.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА ЕНВДПроцент.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
		|		КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		КОГДА УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентЕНВД,
		|	ЕНВДПроцент.СчетДт КАК СчетЕНВД,
		|	ЕНВДПроцент.Субконто1 КАК Субконто1ЕНВД,
		|	ЕНВДПроцент.Субконто2 КАК Субконто2ЕНВД,
		|	ЕНВДПроцент.Субконто3 КАК Субконто3ЕНВД,
		|	ЕНВДПроцент.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатратЕНВД,
		|	Распределение.ДоляСпособаОтражения КАК ДоляСпособаОтражения,
		|	ДополнительныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ДополнительныеНачисления.Результат КАК Результат,
		|	ДополнительныеНачисления.Сторно КАК Сторно,
		|	ДополнительныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЕдиновременноеПособиеФСС,
		|	ДополнительныеНачисления.Сотрудник.Наименование КАК СотрудникНаименование
		|ПОМЕСТИТЬ ДанныеУчета
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетПлановыхНачислений КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ДополнительныеНачисления.Регистратор = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = РеглУчетПлановыхНачисленийРаботниковОрганизаций.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|		ПО ДополнительныеНачисления.Сотрудник = Распределение.Сотрудник
		|			И (НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = Распределение.ПериодРегистрации)
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете ЕСТЬ NULL )
		|			И (ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия))
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|			И (Распределение.ДоляСпособаОтражения <> 0)
		|			И (ВЫБОР
		|				КОГДА ДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетЗарВРеглУчете
		|		ПО ДополнительныеНачисления.Регистратор = УчетЗарВРеглУчете.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетЗарВРеглУчете.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ДополнительныеНачисления.Регистратор = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ДополнительныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентДеятельностиЕНВДСотрудников КАК ЕНВДПроцент
		|		ПО ДополнительныеНачисления.Сотрудник = ЕНВДПроцент.Сотрудник
		|			И (ЕНВДПроцент.ПериодРегистрации = НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ))
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
		|		ПО (БУДополнительныеНачисления.Сотрудник = ДополнительныеНачисления.Сотрудник)
		|			И (БУДополнительныеНачисления.ВидРасчета = ДополнительныеНачисления.ВидРасчета)
		|			И (НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации)
		|			И (БУДополнительныеНачисления.ДокументОснование = ДополнительныеНачисления.Регистратор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ДополнительныеНачисления.Регистратор = ОтражениеВУчетеСторно.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|ГДЕ
		|	БУДополнительныеНачисления.Сотрудник ЕСТЬ NULL 
		|	И ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ВЫБОР
		|			КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете
		|			КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете
		|			КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете
		|			ИНАЧЕ &парамСпособПоУмолчанию
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)";
		
		Запрос.Текст = ДанныеУчетаТекст;
		//временная таблица - ДанныеУчета
		Запрос.Выполнить();
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&парамГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДанныеУчета.Регистратор КАК Регистратор,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.СотрудникНаименование КАК СотрудникНаименование,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.СчетДт КАК СчетДт,
		|	ДанныеУчета.СчетКт КАК СчетКт,
		|	ДанныеУчета.СубконтоДт1,
		|	ДанныеУчета.СубконтоДт2,
		|	ДанныеУчета.СубконтоДт3,
		|	ДанныеУчета.СубконтоКт1,
		|	ДанныеУчета.СубконтоКт2,
		|	ДанныеУчета.СубконтоКт3,
		|	ДанныеУчета.СчетДтНУ,
		|	ДанныеУчета.СчетКтНУ,
		|	ДанныеУчета.СубконтоДтНУ1,
		|	ДанныеУчета.СубконтоДтНУ2,
		|	ДанныеУчета.СубконтоДтНУ3,
		|	ДанныеУчета.СубконтоКтНУ1,
		|	ДанныеУчета.СубконтоКтНУ2,
		|	ДанныеУчета.СубконтоКтНУ3,
		|	ДанныеУчета.СпособРаспределенияЗатрат,
		|	ДанныеУчета.ОтражениеВУСН,
		|	ДанныеУчета.ПроцентЕНВД,
		|	ДанныеУчета.СчетЕНВД,
		|	ДанныеУчета.Субконто1ЕНВД,
		|	ДанныеУчета.Субконто2ЕНВД,
		|	ДанныеУчета.Субконто3ЕНВД,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.СпособРасчета,
		|	ДанныеУчета.ВидНачисленияПоСт255НК,
		|	ДанныеУчета.СтратегияОтраженияВУчете,
		|	ДанныеУчета.ПодразделениеОрганизации,
		|	ДанныеУчета.Результат,
		|	ДанныеУчета.ПериодРегистрации,
		|	ЛОЖЬ КАК УказанСпособОтраженияВБухучетеЗаСчетРаботодателя,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка) КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДт.НомерСтроки, 0) КАК НомерСубконтоРаботникиДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКт.НомерСтроки, 0) КАК НомерСубконтоРаботникиКт,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДт.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиКтНУ,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДтНУ.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДт.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДт,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДтНУ.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДтНУ,
		|	ЕСТЬNULL(СубконтоСт255НК.НомерСтроки, 0) КАК НомерСубконтоСт255НК,
		|	ЕСТЬNULL(База.СчетДтРазрез, БазаСреднегоЗаработка.СчетДтРазрез) КАК СчетДтРазрез,
		|	ЕСТЬNULL(База.СчетКтРазрез, БазаСреднегоЗаработка.СчетКтРазрез) КАК СчетКтРазрез,
		|	ЕСТЬNULL(База.СубконтоДт1Разрез, БазаСреднегоЗаработка.СубконтоДт1Разрез) КАК СубконтоДт1Разрез,
		|	ЕСТЬNULL(База.СубконтоДт2Разрез, БазаСреднегоЗаработка.СубконтоДт2Разрез) КАК СубконтоДт2Разрез,
		|	ЕСТЬNULL(База.СубконтоДт3Разрез, БазаСреднегоЗаработка.СубконтоДт3Разрез) КАК СубконтоДт3Разрез,
		|	ЕСТЬNULL(База.СубконтоКт1Разрез, БазаСреднегоЗаработка.СубконтоКт1Разрез) КАК СубконтоКт1Разрез,
		|	ЕСТЬNULL(База.СубконтоКт2Разрез, БазаСреднегоЗаработка.СубконтоКт2Разрез) КАК СубконтоКт2Разрез,
		|	ЕСТЬNULL(База.СубконтоКт3Разрез, БазаСреднегоЗаработка.СубконтоКт3Разрез) КАК СубконтоКт3Разрез,
		|	ЕСТЬNULL(База.СчетДтНУРазрез, БазаСреднегоЗаработка.СчетДтНУРазрез) КАК СчетДтНУРазрез,
		|	ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) КАК СчетКтНУРазрез,
		|	ЕСТЬNULL(СубконтоСт255НКБазы.НомерСтроки, 0) КАК НомерСубконтоСт255НКБазы,
		|	ЕСТЬNULL(База.СубконтоДтНУ1Разрез, БазаСреднегоЗаработка.СубконтоДтНУ1Разрез) КАК СубконтоДтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ2Разрез, БазаСреднегоЗаработка.СубконтоДтНУ2Разрез) КАК СубконтоДтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ3Разрез, БазаСреднегоЗаработка.СубконтоДтНУ3Разрез) КАК СубконтоДтНУ3Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ1Разрез, БазаСреднегоЗаработка.СубконтоКтНУ1Разрез) КАК СубконтоКтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ2Разрез, БазаСреднегоЗаработка.СубконтоКтНУ2Разрез) КАК СубконтоКтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ3Разрез, БазаСреднегоЗаработка.СубконтоКтНУ3Разрез) КАК СубконтоКтНУ3Разрез,
		|	ЕСТЬNULL(База.СпособРаспределенияЗатратРазрез, БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез) КАК СпособРаспределенияЗатратРазрез,
		|	ЕСТЬNULL(База.ОтражениеВУСНРазрез, БазаСреднегоЗаработка.ОтражениеВУСНРазрез) КАК ОтражениеВУСНРазрез,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ДоляСпособаОтражения ЕСТЬ НЕ NULL 
		|			ТОГДА ДанныеУчета.ДоляСпособаОтражения
		|		КОГДА База.РезультатБаза ЕСТЬ НЕ NULL 
		|			ТОГДА База.РезультатБаза
		|		ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|	КОНЕЦ КАК РезультатБаза,
		|	ДанныеУчета.Сторно КАК Сторно,
		|	ДанныеУчета.ДоляСпособаОтражения,
		|	ДанныеУчета.ДатаНачалаСобытия,
		|	ДанныеУчета.РезультатСторно КАК РезультатСторно,
		|	ДанныеУчета.ЭтоЕдиновременноеПособиеФСС КАК ЭтоЕдиновременноеПособиеФСС,
		|	ЛОЖЬ КАК ЭтоПособияФСС
		|ИЗ
		|	ДанныеУчета КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоРаботникиДт.Ссылка
		|			И (ВидыСубконтоРаботникиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиКт
		|		ПО (ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетКт = ВидыСубконтоРаботникиКт.Ссылка
		|			И (ВидыСубконтоРаботникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоПодразделенияДт.Ссылка
		|			И (ВидыСубконтоПодразделенияДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоСтатьиЗатратДт.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоСтатьиЗатратДтНУ.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НК
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = СубконтоСт255НК.Ссылка
		|			И (СубконтоСт255НК.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоРаботникиДтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиКтНУ
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = ВидыСубконтоРаботникиКтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиКтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоПодразделенияДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоПодразделенияДтНУ.Ссылка
		|			И (ВидыСубконтоПодразделенияДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ База КАК База
		|		ПО ДанныеУчета.Регистратор = База.Регистратор
		|			И ДанныеУчета.НомерСтроки = База.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.Регистратор = БазаСреднегоЗаработка.Регистратор
		|			И ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НКБазы
		|		ПО (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) = СубконтоСт255НКБазы.Ссылка)
		|			И (СубконтоСт255НКБазы.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Регистратор,
		|	НомерСтроки,
		|	СчетДтРазрез,
		|	СчетДтНУРазрез,
		|	СубконтоДт1Разрез,
		|	СубконтоДт2Разрез,
		|	СубконтоДтНУ1Разрез,
		|	СубконтоДтНУ2Разрез,
		|	ОтражениеВУСНРазрез
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	КонецЕсли;                   
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции  // ПолучитьДанныеУчета

// Заполняет строку промежуточной таблицы проводками по страховым взносам
Процедура ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СчетКт, СчетКтНУ, Результат, СтатьяРБП, ДополнительнаяСтрока = Ложь)
	
	Если ДополнительнаяСтрока Тогда
		
		// дополнительная строка, отражение в НУ разниц
		Если СтрокаОтражения.ЭтоСчет84 Тогда
			СтрокаТЧ.СчетДт 	 = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаОтражения.ОблагаетсяЕНВД);
			СтрокаТЧ.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");///Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;///Вадим
		Иначе                   
			СтрокаТЧ.СчетДт		 = СтрокаОтражения.СчетДт;
			СтрокаТЧ.СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДт2 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДт3 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
		КонецЕсли;
		СтрокаТЧ.СчетКт			= СчетКт;
		СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
		СтрокаТЧ.Сумма			= 0;
		Если СтрокаОтражения.ПодменятьСчетДтНаРБП Тогда
			СтрокаТЧ.СуммаВР = -1*Результат;
		ИначеЕсли СтрокаОтражения.ЭтоСчет84 Тогда
			СтрокаТЧ.СуммаПР = -1*Результат;
		КонецЕсли;
		СтрокаТЧ.СуммаНУ        = Результат;
		
		СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
		СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
		КонецЕсли;
		
	Иначе
		
		Если СтрокаОтражения.ЭтоСчет84 Тогда
			СчетДт = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаОтражения.ОблагаетсяЕНВД);
			СубконтоДт1 =  Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");///Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;///Вадим
			СубконтоДт2 = Неопределено;
			СубконтоДт3 = Неопределено;
		Иначе
			СчетДт      = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов, СтрокаОтражения.СчетДт);
			СубконтоДт1 = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, СтатьяРБП, ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто));
			СубконтоДт2 = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, СтрокаОтражения.Физлицо, ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто));
			СубконтоДт3 = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, Неопределено, ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто));
			СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		КонецЕсли;
		
		СтрокаТЧ.СчетДт			= СчетДт;
		СтрокаТЧ.СубконтоДт1	= СубконтоДт1;
		СтрокаТЧ.СубконтоДт2	= СубконтоДт2;
		СтрокаТЧ.СубконтоДт3	= СубконтоДт3;
		СтрокаТЧ.СчетКт			= СчетКт;
		СтрокаТЧ.СубконтоКт1	= СубконтоКт1;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
		КонецЕсли;
		
		Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и Не СтрокаОтражения.ОблагаетсяЕНВД Тогда
			
			Если СтрокаОтражения.ПодменятьСчетДтНаРБП 
				И НЕ мСтраховыеВзносыСОтпускныхПризнаватьРасходамиВМесяцеНачисления Тогда
				// как в БУ
				СтрокаТЧ.СчетДтНУ		= ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов;
				СтрокаТЧ.СубконтоДтНУ1	= СтатьяРБП;
				СтрокаТЧ.СубконтоДтНУ2	= СтрокаОтражения.Физлицо;
				СтрокаТЧ.СубконтоДтНУ3	= Неопределено;
			Иначе
				// на расходы - в месяце начисления
				СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
				СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
				СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
			КонецЕсли;
			СтрокаТЧ.СчетКтНУ		= ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), СчетКтНУ);
			
			// по РБПСчетДтБУ будем делать подмену счета НУ из соответсвия
			СтрокаТЧ.РБПСчетДтБУ = СтрокаОтражения.СчетДт;
			
		КонецЕсли;
		
		СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
		СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
		
		СтрокаТЧ.Сумма			= Результат;
		Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
			Если СтрокаОтражения.ПодменятьСчетДтНаРБП Тогда
				СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
			ИначеЕсли Не СтрокаОтражения.ЭтоСчет84 Тогда
				СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура формирует проводки по списанию из РБП в 2010 году
//	Параметры
//			ПромежуточнаяТаблица - таблица значений с проводками
//			ПараметрыПолученияСубконто - структура для подмены субконто
//			ПериодыРегистрацииПредыдущихПериодов - массив периодов регистрации РБП
//			МассивСчетаИсключенияРБП - массив счетов которые не учавствуют в РБП
//			ГоловнаяОрганизация
//			МассивФизлиц - массиф физлиц, по которым делаем списание из РБП
//		
Процедура СформироватьПроводкиСписанияРБПВзносам2010(ПромежуточнаяТаблица, ПараметрыПолученияСубконто, МассивПериодовРегистрации, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, МассивФизлиц)
	
	РБП_Взносы = Справочники.РасходыБудущихПериодов.РБПНаСтраховыеВзносы;
	РБП_ФСС_НС = Справочники.РасходыБудущихПериодов.РБПНаФСС;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета69
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетов69)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_11
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФСС_НС,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_01
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФСС,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_01
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРСтраховая,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_02
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНакопительная,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_01
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_02
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ТФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_03
	|				ТОГДА ДвиженияВУчете.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДопТариф,
	|	ДвиженияВУчете.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|	ДвиженияВУчете.СубконтоДт2 КАК ФизЛицо
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ДвиженияВУчете
	|ГДЕ
	|	ДвиженияВУчете.Ссылка.ПериодРегистрации В(&ПериодыРегистрации)
	|	И ДвиженияВУчете.СчетДт = &Счет97
	|	И ДвиженияВУчете.СчетКт В
	|			(ВЫБРАТЬ
	|				ВТ_Счета69.Счет
	|			ИЗ
	|				ВТ_Счета69)
	|	И ДвиженияВУчете.Ссылка.Организация = &парамОбособленноеПодразделение
	|	И ДвиженияВУчете.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияВУчете.Ссылка.ПериодРегистрации,
	|	ДвиженияВУчете.СубконтоДт2";
	
	Запрос.УстановитьПараметр("СписокСчетов69", ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	Запрос.УстановитьПараметр("ПериодыРегистрации",	МассивПериодовРегистрации);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("Счет69_01",			ПланыСчетов.Хозрасчетный.ФСС);
	Запрос.УстановитьПараметр("Счет69_02_01",		ПланыСчетов.Хозрасчетный.ПФР_страх);
	Запрос.УстановитьПараметр("Счет69_02_02",		ПланыСчетов.Хозрасчетный.ПФР_нак);
	Запрос.УстановитьПараметр("Счет69_02_03",		ПланыСчетов.Хозрасчетный.ПФР_доп);
	Запрос.УстановитьПараметр("Счет69_03_01",		ПланыСчетов.Хозрасчетный.ФФОМС);
	Запрос.УстановитьПараметр("Счет69_03_02",		ПланыСчетов.Хозрасчетный.ТФОМС);
	Запрос.УстановитьПараметр("Счет69_11",			ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
	Запрос.УстановитьПараметр("Счет97",				ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);		
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// получим таблицу с детализацией по периоду действия
	ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2010(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП, МассивФизлиц, Ложь);
	ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
	
	ОтборПоФизлицу = Новый Структура("ПериодРегистрации,ФизЛицо");
	ОтборПоПериодуДействия = Новый Структура("ФизЛицо, ПериодРегистрации, ПериодДействия");
	ОтборПоПериодуДействия.ПериодДействия = ПериодРегистрации;
	
	ТаблицаКоэффициентовПоПериодуДействия = ТаблицаКоэффициентов.Скопировать();
	ТаблицаКоэффициентовПоПериодуДействия.Свернуть("ПериодРегистрации,ФизЛицо,ПериодДействия","БазаПФР_НеЕНВД,БазаФСС,БазаФОМС,БазаПФР_ЕНВД,БазаДопТариф,БазаФСС_НС");
	ТаблицаКоэффициентовПоПериодуДействия.Сортировать("ПериодРегистрации,ФизЛицо,ПериодДействия");
	
	Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
	СчетН97 = ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		ОтборПоФизлицу.ПериодРегистрации	= Выборка.ПериодРегистрации;
		ОтборПоФизлицу.ФизЛицо				= Выборка.ФизЛицо;
		СтрокиПериодовДействия = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоФизлицу);
		
		ОтборПоПериодуДействия.ФизЛицо				= Выборка.ФизЛицо;
		ОтборПоПериодуДействия.ПериодРегистрации	= Выборка.ПериодРегистрации;
		СтрокиОтражения = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоПериодуДействия);
		Если СтрокиОтражения.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(ОтборПоПериодуДействия);
		ДоляСтавкиЕНВД = СтрокиОтраженияПоФизЛицу[0].ТарифЕНВД/СтрокиОтраженияПоФизЛицу[0].ОсновнойТариф;
		
		ВсегоДоходовФСС					= 0;
		ВсегоДоходовФОМС				= 0;
		ВсегоДоходовПФР_НеЕНВД			= 0;
		ВсегоДоходовПФР_ЕНВД			= 0;
		ВсегоДоходовДопТариф			= 0;
		ВсегоДоходовФСС_НС				= 0;
		
		КолвоЭлементовКоллекции = СтрокиПериодовДействия.Количество(); 
		Для ОбратныйИндекс = 1 По КолвоЭлементовКоллекции Цикл 
			ЭлементКоллекции = СтрокиПериодовДействия[КолвоЭлементовКоллекции - ОбратныйИндекс]; 
			Если ЭлементКоллекции.ПериодДействия <= ЭлементКоллекции.ПериодРегистрации Тогда 
				СтрокиПериодовДействия.Удалить(КолвоЭлементовКоллекции - ОбратныйИндекс);
			Иначе
				ВсегоДоходовФСС = ВсегоДоходовФСС + ЭлементКоллекции.БазаФСС;
				ВсегоДоходовФОМС = ВсегоДоходовФОМС + ЭлементКоллекции.БазаФОМС;
				ВсегоДоходовПФР_НеЕНВД = ВсегоДоходовПФР_НеЕНВД + ЭлементКоллекции.БазаПФР_НеЕНВД;
				ВсегоДоходовПФР_ЕНВД = ВсегоДоходовПФР_ЕНВД + ЭлементКоллекции.БазаПФР_ЕНВД;
				ВсегоДоходовДопТариф = ВсегоДоходовДопТариф + ЭлементКоллекции.БазаДопТариф;
				ВсегоДоходовФСС_НС   = ВсегоДоходовФСС_НС + ЭлементКоллекции.БазаФСС_НС;
			КонецЕсли;
		КонецЦикла;
		
		// выделяем долю текущего месяца (ранее это был период действия)
		Если СтрокиПериодовДействия.Количество() > 1 Тогда
			
			Если ВсегоДоходовФСС = 0 Тогда
				МесячнаяДоляФСС = Выборка.ФСС;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанее = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС / ВсегоДоходовФСС,2);
				КонецЦикла;
				МесячнаяДоляФСС = Выборка.ФСС - БылоОтраженоРанее
			Иначе
				МесячнаяДоляФСС = Окр(Выборка.ФСС * СтрокиОтражения[0].БазаФСС / ВсегоДоходовФСС,2);
			КонецЕсли;
			
			Если ВсегоДоходовФОМС = 0 Тогда
				МесячнаяДоляФФОМС = Выборка.ФФОМС;
				МесячнаяДоляТФОМС = Выборка.ТФОМС;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанееФФОМС = 0;
				БылоОтраженоРанееТФОМС = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанееФФОМС = БылоОтраженоРанееФФОМС + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС / ВсегоДоходовФОМС,2);
					БылоОтраженоРанееТФОМС = БылоОтраженоРанееТФОМС + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС / ВсегоДоходовФОМС,2);
				КонецЦикла;
				МесячнаяДоляФФОМС = Выборка.ФФОМС - БылоОтраженоРанееФФОМС;
				МесячнаяДоляТФОМС = Выборка.ТФОМС - БылоОтраженоРанееТФОМС;
			Иначе
				ТекущийКоэффициент = СтрокиОтражения[0].БазаФОМС / ВсегоДоходовФОМС;
				МесячнаяДоляФФОМС = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
				МесячнаяДоляТФОМС = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
			КонецЕсли;				
			
			Если ВсегоДоходовДопТариф = 0 Тогда
				МесячнаяДоляДопТариф = Выборка.ДопТариф;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанее = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТариф * СтрокаПериода.БазаДопТариф / ВсегоДоходовДопТариф,2);
				КонецЦикла;
				МесячнаяДоляДопТариф = Выборка.ДопТариф - БылоОтраженоРанее
			Иначе
				МесячнаяДоляДопТариф = Окр(Выборка.ДопТариф * СтрокиОтражения[0].БазаДопТариф / ВсегоДоходовДопТариф,2);
			КонецЕсли;				
			
			Если ВсегоДоходовФСС_НС = 0 Тогда
				МесячнаяДоляФСС_НС = Выборка.ФСС_НС;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанее = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС_НС * СтрокаПериода.БазаФСС_НС / ВсегоДоходовФСС_НС,2);
				КонецЦикла;
				МесячнаяДоляФСС_НС = Выборка.ФСС_НС - БылоОтраженоРанее
			Иначе
				МесячнаяДоляФСС_НС = Окр(Выборка.ФСС_НС * СтрокиОтражения[0].БазаФСС_НС / ВсегоДоходовФСС_НС,2);
			КонецЕсли;				
			
			Если ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД = 0 Тогда
				МесячнаяДоляПФРСтраховая_НеЕНВД = Выборка.ПФРСтраховая;
				МесячнаяДоляПФРНакопительная_НеЕНВД = Выборка.ПФРНакопительная;
				МесячнаяДоляПФРСтраховая_ЕНВД = -Выборка.ПФРСтраховая;
				МесячнаяДоляПФРНакопительная_ЕНВД = -Выборка.ПФРНакопительная;
			ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
				// это оказался последний из затронутых тогда периодов действия
				БылоОтраженоРанееПФРСтраховая_НеЕНВД = 0;
				БылоОтраженоРанееПФРНакопительная_НеЕНВД = 0;
				БылоОтраженоРанееПФРСтраховая_ЕНВД = 0;
				БылоОтраженоРанееПФРНакопительная_ЕНВД = 0;
				Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
					Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
						Продолжить;
					КонецЕсли;
					БылоОтраженоРанееПФРСтраховая_НеЕНВД = БылоОтраженоРанееПФРСтраховая_НеЕНВД + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР_НеЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
					БылоОтраженоРанееПФРНакопительная_НеЕНВД = БылоОтраженоРанееПФРНакопительная_НеЕНВД + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР_НеЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
					БылоОтраженоРанееПФРСтраховая_ЕНВД = БылоОтраженоРанееПФРСтраховая_ЕНВД + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
					БылоОтраженоРанееПФРНакопительная_ЕНВД = БылоОтраженоРанееПФРНакопительная_ЕНВД + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
				КонецЦикла;
				Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР_ЕНВД = 0 Тогда
					МесячнаяДоляПФРСтраховая_НеЕНВД = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая_НеЕНВД - БылоОтраженоРанееПФРСтраховая_ЕНВД;
					МесячнаяДоляПФРНакопительная_НеЕНВД = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная_НеЕНВД - БылоОтраженоРанееПФРНакопительная_ЕНВД;
					МесячнаяДоляПФРСтраховая_ЕНВД = 0;
					МесячнаяДоляПФРНакопительная_ЕНВД = 0;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР_НеЕНВД = 0 Тогда
					МесячнаяДоляПФРСтраховая_ЕНВД = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая_НеЕНВД - БылоОтраженоРанееПФРСтраховая_ЕНВД;
					МесячнаяДоляПФРНакопительная_ЕНВД = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная_НеЕНВД - БылоОтраженоРанееПФРНакопительная_ЕНВД;
					МесячнаяДоляПФРСтраховая_НеЕНВД = 0;
					МесячнаяДоляПФРНакопительная_НеЕНВД = 0;
				Иначе
					МесячнаяДоляПФРСтраховая_ЕНВД = Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2) - БылоОтраженоРанееПФРСтраховая_ЕНВД;
					МесячнаяДоляПФРНакопительная_ЕНВД = Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2) - БылоОтраженоРанееПФРНакопительная_ЕНВД;
					МесячнаяДоляПФРСтраховая_НеЕНВД = Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховая_ЕНВД - БылоОтраженоРанееПФРСтраховая_ЕНВД - БылоОтраженоРанееПФРСтраховая_НеЕНВД;
					МесячнаяДоляПФРНакопительная_НеЕНВД = Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительная_ЕНВД - БылоОтраженоРанееПФРНакопительная_ЕНВД - БылоОтраженоРанееПФРНакопительная_НеЕНВД;
				КонецЕсли;
			Иначе
				СтрокаТЧ = СтрокиОтражения[0];
				ТекущийКоэффициент = СтрокаТЧ.БазаПФР_НеЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД);
				МесячнаяДоляПФРСтраховая_НеЕНВД = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
				МесячнаяДоляПФРНакопительная_НеЕНВД = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
				ТекущийКоэффициент = СтрокаТЧ.БазаПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД);
				МесячнаяДоляПФРСтраховая_ЕНВД = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
				МесячнаяДоляПФРНакопительная_ЕНВД = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
			КонецЕсли;
			
		Иначе
			// за другие месяцы ничего в РБП не относили
			МесячнаяДоляФСС						= Выборка.ФСС;
			МесячнаяДоляФФОМС					= Выборка.ФФОМС;
			МесячнаяДоляТФОМС					= Выборка.ТФОМС;
			МесячнаяДоляДопТариф				= Выборка.ДопТариф;
			МесячнаяДоляФСС_НС					= Выборка.ФСС_НС;
			
			Если ВсегоДоходовПФР_ЕНВД = 0 Тогда
				МесячнаяДоляПФРСтраховая_НеЕНВД		= Выборка.ПФРСтраховая;
				МесячнаяДоляПФРНакопительная_НеЕНВД	= Выборка.ПФРНакопительная;
				МесячнаяДоляПФРСтраховая_ЕНВД		= 0;
				МесячнаяДоляПФРНакопительная_ЕНВД	= 0;
				
			ИначеЕсли ВсегоДоходовПФР_НеЕНВД = 0 Тогда
				МесячнаяДоляПФРСтраховая_НеЕНВД		= 0;
				МесячнаяДоляПФРНакопительная_НеЕНВД = 0;
				МесячнаяДоляПФРСтраховая_ЕНВД		= Выборка.ПФРСтраховая;
				МесячнаяДоляПФРНакопительная_ЕНВД	= Выборка.ПФРНакопительная;
				
			Иначе
				МесячнаяДоляПФРСтраховая_ЕНВД		= Окр(Выборка.ПФРСтраховая * ДоляСтавкиЕНВД * ВсегоДоходовПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ДоляСтавкиЕНВД * ВсегоДоходовПФР_ЕНВД),2);
				МесячнаяДоляПФРНакопительная_ЕНВД	= Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФР_ЕНВД / (ВсегоДоходовПФР_НеЕНВД + ВсегоДоходовПФР_ЕНВД),2);
				МесячнаяДоляПФРСтраховая_НеЕНВД		= Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховая_ЕНВД;
				МесячнаяДоляПФРНакопительная_НеЕНВД	= Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительная_ЕНВД;
			КонецЕсли;
		КонецЕсли;
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС, Коэффициенты);
		
		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМС, Коэффициенты);
		РезультатыТФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМС, Коэффициенты);
		
		// ПФР по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_НеЕНВД");
		РезультатыПФРНакопительная_НеЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительная_НеЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_НеЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховая_НеЕНВД, Коэффициенты);
		
		// ПФР по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРНакопительная_ЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительная_ЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_ЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховая_ЕНВД, Коэффициенты);
		
		// ДопТариф
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
		РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляДопТариф, Коэффициенты);
		
		// ФСС_НС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
		РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС_НС, Коэффициенты);			
		
		Индекс = 0;
		Для каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			
			ДобавитьСтрокуСписанияСтраховыхВзносовРБП(РезультатыФСС,                     Индекс, Ложь,   ПромежуточнаяТаблица, СтрокаОтражения, РБП_Взносы, Выборка.ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто);
			ДобавитьСтрокуСписанияСтраховыхВзносовРБП(РезультатыТФОМС,                   Индекс, Ложь,   ПромежуточнаяТаблица, СтрокаОтражения, РБП_Взносы, Выборка.ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто);
			ДобавитьСтрокуСписанияСтраховыхВзносовРБП(РезультатыФФОМС,                   Индекс, Ложь,   ПромежуточнаяТаблица, СтрокаОтражения, РБП_Взносы, Выборка.ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто);
			ДобавитьСтрокуСписанияСтраховыхВзносовРБП(РезультатыПФРНакопительная_НеЕНВД, Индекс, Ложь,   ПромежуточнаяТаблица, СтрокаОтражения, РБП_Взносы, Выборка.ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто);
			ДобавитьСтрокуСписанияСтраховыхВзносовРБП(РезультатыПФРСтраховая_НеЕНВД,     Индекс, Ложь,   ПромежуточнаяТаблица, СтрокаОтражения, РБП_Взносы, Выборка.ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто);
			ДобавитьСтрокуСписанияСтраховыхВзносовРБП(РезультатыПФРНакопительная_ЕНВД,   Индекс, Истина, ПромежуточнаяТаблица, СтрокаОтражения, РБП_Взносы, Выборка.ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто);
			ДобавитьСтрокуСписанияСтраховыхВзносовРБП(РезультатыПФРСтраховая_ЕНВД,       Индекс, Истина, ПромежуточнаяТаблица, СтрокаОтражения, РБП_Взносы, Выборка.ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто);
			ДобавитьСтрокуСписанияСтраховыхВзносовРБП(РезультатыДопТариф,                Индекс, Ложь,   ПромежуточнаяТаблица, СтрокаОтражения, РБП_Взносы, Выборка.ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто);
			
			//////////////////////////////////////////////////////////
			// ФСС_НС
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат         = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			ДобавитьСтрокуСписанияСтраховыхВзносовРБП(РезультатыФСС_НС,                  Индекс, Ложь,   ПромежуточнаяТаблица, СтрокаОтражения, РБП_ФСС_НС, Выборка.ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто);
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры //СформироватьПроводкиСписанияРБПВзносам2010

// Процедура заполняет таблицу ПромежуточнаяТаблица проводками
// по страховым взносам
// используется с 2010 год
Процедура ПолучитьПроводкиПоСтраховымВзносам2010(ПромежуточнаяТаблица, ГоловнаяОрганизация, МассивСчетаИсключенияРБП)
	
	ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	
	// добавим колонку СчДтБУ, в которой будет счет Дт БУ после подмены его на 97 счет
	// по этому значению будем производить замену счета НУ из соответсвия. Действует с 2010 года
	ПромежуточнаяТаблица.Колонки.Добавить("РБПСчетДтБУ", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("СчетаИсключенияРБП", МассивСчетаИсключенияРБП);
	Запрос.УстановитьПараметр("ДатаЗакона213ФЗ", ДатаЗакона213ФЗ);
	
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение исчисленных страховых взносов в текущем месяце
	
	// Получение коэффициентов отражения страховых взносов  
	МассивПериодовРегистрации = Новый Массив;
	МассивПериодовРегистрации.Добавить(ПериодРегистрации);
	ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2010(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
	
	// запрос по соответствиям статей затрат начислений 
	// для подстановки статей затрат при формировании проводок страховым взносам
	// (перечисление ВидыДополнительныхСтатейЗатрат)
	Запрос.Текст = 
	"ВЫБРАТЬ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
	|ИЗ
	|   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат";
	
	ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
	ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	ТипСтатьиЗатрат = Тип("СправочникСсылка.ПрочиеДоходыИРасходы");
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	// Исчисленные страховые взносы в текущем месяце
	//	Поля:
	//		ФизЛицо
	//		ФСС
	//		ФФОМС
	//		ТФОМС
	//		ПФРНакопительная_НеЕНВД - в части видов деятельности, не облагаемых ЕНВД
	//		ПФРСтраховая_НеЕНВД 
	//		ПФРНакопительная_ЕНВД - в части видов деятельности, облагаемых ЕНВД     
	//		ПФРСтраховая_ЕНВД
	//		ФССНесчастныеСлучаи
	//		ПФРПоДополнительномуТарифу
	// Описание:
	// просуммированный исчисленные страховые взносы в разрезе физлиц
	//
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизЛицо,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховая) КАК ПФРСтраховая_НеЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД) КАК ПФРСтраховая_ЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительная) КАК ПФРНакопительная_НеЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД) КАК ПФРНакопительная_ЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФСС) КАК ФСС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМС) КАК ФФОМС,
	|	СУММА(СтраховыеВзносыИсчисленные.ТФОМС) КАК ТФОМС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу) КАК ПФРПоДополнительномуТарифу
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Период = &парамПериодРегистрации
	|	И СтраховыеВзносыИсчисленные.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыИсчисленные.ФизЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	РБП_Взносы = Справочники.РасходыБудущихПериодов.РБПНаСтраховыеВзносы;
	РБП_ФСС_НС = Справочники.РасходыБудущихПериодов.РБПНаФСС;
	РБП_ОплатаТруда = Справочники.РасходыБудущихПериодов.РБПНаОплатуТруда;
	Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
	
	СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	Отбор = Новый Структура("ФизЛицо");
	
	// в этой таблице соберем физлиц и суммы взносов, для которых нет базы в текущем месяце
	ТаблицаНетБазы = Новый ТаблицаЗначений;
	ТаблицаНетБазы.Колонки.Добавить("Физлицо");
	ТаблицаНетБазы.Колонки.Добавить("ВидБазы");
	ТаблицаНетБазы.Колонки.Добавить("СуммаВзноса");
	ТаблицаНетБазы.Колонки.Добавить("СчетКт");
	ТаблицаНетБазы.Колонки.Добавить("СчетКтНУ");
	ТаблицаНетБазы.Колонки.Добавить("СтатьяРБП");
	
	Пока Выборка.Следующий() Цикл
		
		Отбор.ФизЛицо = Выборка.ФизЛицо;
		СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		
		Если СтрокиОтраженияПоФизЛицу.Количество() = 0 Тогда
			
			Если Выборка.ФСС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС";
				НоваяСтрока.СуммаВзноса = Выборка.ФСС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФФОМС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ТФОМС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС";
				НоваяСтрока.СуммаВзноса = Выборка.ТФОМС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ТФОМС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРНакопительная_НеЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_НеЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_нак;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРСтраховая_НеЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_НеЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_страх;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРНакопительная_ЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_ЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРСтраховая_ЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_ЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТариф";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФССНесчастныеСлучаи <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_НС";
				НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
				НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
			КонецЕсли;	
			
			Продолжить;		
		КонецЕсли;		
		
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФСС, Коэффициенты);
		
		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМС, Коэффициенты);
		РезультатыТФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ТФОМС, Коэффициенты);
		
		// ПФР по видам деятельности, не облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_НеЕНВД");
		РезультатыПФРНакопительная_НеЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНакопительная_НеЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_НеЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСтраховая_НеЕНВД, Коэффициенты);
		
		// ПФР по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРНакопительная_ЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНакопительная_ЕНВД, Коэффициенты);
		РезультатыПФРСтраховая_ЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСтраховая_ЕНВД, Коэффициенты);
		
		// доп тариф
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
		РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоДополнительномуТарифу, Коэффициенты);
		
		// ФСС_НС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
		РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФССНесчастныеСлучаи, Коэффициенты);
		
		Если РезультатыФСС = Неопределено и Выборка.ФСС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС";
			НоваяСтрока.СуммаВзноса = Выборка.ФСС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФФОМС = Неопределено и Выборка.ФФОМС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыТФОМС = Неопределено и Выборка.ТФОМС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС";
			НоваяСтрока.СуммаВзноса = Выборка.ТФОМС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ТФОМС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРНакопительная_НеЕНВД = Неопределено и Выборка.ПФРНакопительная_НеЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_НеЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_нак;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРСтраховая_НеЕНВД = Неопределено и Выборка.ПФРСтраховая_НеЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_НеЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_НеЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_страх;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРНакопительная_ЕНВД = Неопределено и Выборка.ПФРНакопительная_ЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная_ЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРСтраховая_ЕНВД = Неопределено и Выборка.ПФРСтраховая_ЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая_ЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТариф = Неопределено и Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТариф";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФСС_НС = Неопределено и Выборка.ФССНесчастныеСлучаи <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_НС";
			НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
			НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			//////////////////////////////////////////////////////////
			// страховые взносы
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			
			Если РезультатыФСС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФФОМС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыТФОМС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ТФОМС, ПланыСчетов.Налоговый.ТФОМС, РезультатыТФОМС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ТФОМС, ПланыСчетов.Налоговый.ТФОМС, РезультатыТФОМС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРНакопительная_НеЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, ПланыСчетов.Налоговый.ПФР_нак, РезультатыПФРНакопительная_НеЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, ПланыСчетов.Налоговый.ПФР_нак, РезультатыПФРНакопительная_НеЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_НеЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, ПланыСчетов.Налоговый.ПФР_страх, РезультатыПФРСтраховая_НеЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, ПланыСчетов.Налоговый.ПФР_страх, РезультатыПФРСтраховая_НеЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРНакопительная_ЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, ПланыСчетов.Налоговый.ПФР_нак, РезультатыПФРНакопительная_ЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, ПланыСчетов.Налоговый.ПФР_нак, РезультатыПФРНакопительная_ЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРСтраховая_ЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, ПланыСчетов.Налоговый.ПФР_страх, РезультатыПФРСтраховая_ЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, ПланыСчетов.Налоговый.ПФР_страх, РезультатыПФРСтраховая_ЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТариф <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			//////////////////////////////////////////////////////////
			// ФСС_НС
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			
			Если РезультатыФСС_НС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ТаблицаНетБазы.Количество() > 0 и Не Месяц(ПериодРегистрации) = 1 Тогда
		// есть суммы взносов, которые не отразили в учете из-за отсутствия базы в текущем месяце
		// получим коэффициенты по данным с начала года без текущего месяца
		
		ВремТаблица = ТаблицаНетБазы.Скопировать();
		ВремТаблица.Свернуть("Физлицо");
		МассивФизлиц = ВремТаблица.ВыгрузитьКолонку("Физлицо");
		
		МассивПериодовРегистрации = Новый Массив;
		ДатаНачалаМесяца = НачалоГода(ПериодРегистрации);
		МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		Пока ДатаНачалаМесяца < НачалоМесяца(ПериодРегистрации-1) Цикл
			ДатаНачалаМесяца = НачалоМесяца(КонецМесяца(ДатаНачалаМесяца)+1);
			МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		КонецЦикла;
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2010(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП,МассивФизлиц);
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		МассивСтрокКУдалению = Новый Массив;
		
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			Отбор.ФизЛицо = СтрокаТЗ.ФизЛицо;
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,СтрокаТЗ.ВидБазы);
			Результаты = ОбщегоНазначенияЗК.РаспределитьПропорционально(СтрокаТЗ.СуммаВзноса, Коэффициенты);
			
			Если Результаты <> Неопределено Тогда
				МассивСтрокКУдалению.Добавить(СтрокаТЗ); 
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП);
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
						и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
						// добавим еще одну строку
						СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
						ЗаполнитьСтрокуПромежуточнойТаблицы2010(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП, Истина);
					КонецЕсли;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого СтрокаТаблицы Из МассивСтрокКУдалению Цикл
			ТаблицаНетБазы.Удалить(СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;	
	
	Если ТаблицаНетБазы.Количество() > 0 Тогда
		//нет базы и с начала года, отразим взносы в Дт 91 счета
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
			 /////Вадим 19.03.2013 14:08:59
			Если не ЗначениеЗаполнено(СтрокаТЧ.ПодразделениеДт) тогда
            	СтрокаТЧ.ПодразделениеДт = ПРГ_ПолучитьПодразделениеФизЛица(СтрокаТЗ.физЛицо);
			Конецесли;
            ////ВадимКонец
			СтрокаТЧ.СчетДт			= ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаТЗ.ВидБазы = "БазаПФР_ЕНВД");
			СтрокаТЧ.СчетКт			= СтрокаТЗ.СчетКт;
			СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ЗначениеЗаполнено(СтрокаТЗ.СчетКт) Тогда
				СтрокаТЧ.СчетДтНУ		= ПланыСчетов.Налоговый.ПрочиеКосвенныеРасходы;
				СтрокаТЧ.СчетКтНУ		= СтрокаТЗ.СчетКтНУ;
			КонецЕсли;
			
			СтрокаТЧ.Сумма			= СтрокаТЗ.СуммаВзноса;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;	
	
	// отражение исчисленных страховых взносов в текущем месяце
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Списание РБП
	
	// подготовим данные по РБП
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА БУОсновныеНачисления.ПериодРегистрации < &ДатаЗакона213ФЗ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СобиратьДанныеПоЕСН
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации < &парамПериодРегистрации
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо,
	|	ВЫБОР
	|		КОГДА БУОсновныеНачисления.ПериодРегистрации < &ДатаЗакона213ФЗ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	
	ТаблицаРБПОбщий =  Запрос.Выполнить().Выгрузить();
	
	Отбор = Новый Структура("СобиратьДанныеПоЕСН", Ложь);
	ТаблицаРБП = ТаблицаРБПОбщий.Скопировать(Отбор);
	Отбор = Новый Структура("СобиратьДанныеПоЕСН", Истина);
	ТаблицаРБПЕСН = ТаблицаРБПОбщий.Скопировать(Отбор);
	
	Если ТаблицаРБП.Количество()>0 Тогда
		// списание из РБП страховых взносов
		
		ВремТаблица = ТаблицаРБП.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБП.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБП.ВыгрузитьКолонку("Физлицо");
		
		СформироватьПроводкиСписанияРБПВзносам2010(ПромежуточнаяТаблица, ПараметрыПолученияСубконто, МассивПериодовРегистрации, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, МассивФизлиц);
		
	КонецЕсли;
	
	Если ТаблицаРБПЕСН.Количество()>0 Тогда
		// необходимо списать из РБП остатки ЕСН
		
		ВремТаблица = ТаблицаРБПЕСН.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБПЕСН.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБПЕСН.ВыгрузитьКолонку("Физлицо");
		
		ЕСНДоходыБезСкидокИнвалидов = Новый ТаблицаЗначений;
		СформироватьПроводкиСписанияРБПпоЕСН(ПромежуточнаяТаблица, ПараметрыПолученияСубконто, МассивПериодовРегистрации, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, ЕСНДоходыБезСкидокИнвалидов, МассивФизлиц);
		
	КонецЕсли;
	
	// конец списания РБП
	// со счета учета расходов будущих периодов в затраты
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// вычеркнем обнулившиеся суммы
	СвернутьТаблицуПроводок(ПромежуточнаяТаблица,",РБПСчетДтБУ");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// замена счетов НУ по регистру соответствий
	//
	
	Если мЗаполнятьДанныеНУ И мЗаполнятьСчетаНУ И мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете = Перечисления.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.НаСчетахЗатратСоответствующихСчетамБухУчета Тогда
		
		СчетаНУ = Новый Массив;
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств);
		Запрос.УстановитьПараметр("СчетаНУ",СчетаНУ);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Налоговый.Ссылка
		|ИЗ
		|	ПланСчетов.Налоговый КАК Налоговый
		|ГДЕ
		|	Налоговый.Ссылка В ИЕРАРХИИ(&СчетаНУ)";
		МассивСчетаНУ = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		СчетаНалоговСФОТ = Новый Массив;
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ТФОМС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ЕСН_ФБ);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		
		Запрос.УстановитьПараметр("СчетаНалоговСФОТ", СчетаНалоговСФОТ);
		Запрос.УстановитьПараметр("СчетаНУ", МассивСчетаНУ);
		Запрос.УстановитьПараметр("ТаблицаПроводок", ПромежуточнаяТаблица);  
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_Проводки
		|ИЗ
		|	&ТаблицаПроводок КАК ТаблицаПроводок";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт2.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт2,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт3.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт3
		|ПОМЕСТИТЬ ВТ_ТаблицаПроводок
		|ИЗ
		|	ВТ_Проводки КАК ТаблицаПроводок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РБПСчетДтБУ,
		|	СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий1
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий2
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий3
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий4
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1 КАК СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2 КАК СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3 КАК СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1 КАК СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2 КАК СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3 КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СчетКт В (&СчетаНалоговСФОТ)
		|				И ТаблицаПроводок.СчетДтНУ В (&СчетаНУ)
		|			ТОГДА ЕСТЬNULL(Налоговый.Ссылка, ТаблицаПроводок.СчетДтНУ)
		|		ИНАЧЕ ТаблицаПроводок.СчетДтНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ТаблицаПроводок.СчетДтНУ КАК СтарыйСчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ КАК СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3 КАК СубконтоКтНУ3,
		|	ТаблицаПроводок.Сумма КАК Сумма,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН КАК ОтражениеВУСН,
		|	ТаблицаПроводок.ВидНачисленияУдержания КАК ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчете
		|ИЗ
		|	ВТ_ТаблицаПроводок КАК ТаблицаПроводок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий1 КАК ТаблицаСоответствий1
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий1.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий1.СчетКоррБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий2 КАК ТаблицаСоответствий2
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий2.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий2.СчетКоррБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий3 КАК ТаблицаСоответствий3
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий3.СчетБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий4 КАК ТаблицаСоответствий4
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий4.СчетБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый КАК Налоговый
		|		ПО (ВЫБОР
		|				КОГДА ТаблицаСоответствий1.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий1.СчетНУ
		|				КОГДА ТаблицаСоответствий2.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий2.СчетНУ
		|				КОГДА ТаблицаСоответствий3.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий3.СчетНУ
		|				КОГДА ТаблицаСоответствий4.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий4.СчетНУ
		|				ИНАЧЕ """"
		|			КОНЕЦ = Налоговый.Код)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетДтНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтражениеВУчете.СчетДт КАК СчетДт,
		|	ОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
		|	ОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
		|	ОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
		|	ОтражениеВУчете.СчетКт,
		|	ОтражениеВУчете.СубконтоКт1,
		|	ОтражениеВУчете.СубконтоКт2,
		|	ОтражениеВУчете.СубконтоКт3,
		|	ОтражениеВУчете.СчетДтНУ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ЛОЖЬ
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОбрабатыватьСубконтоНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто1.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто1,
		|	НалоговыйСталиВидыСубконто1.ВидСубконто.ТипЗначения КАК ТипЗначения1,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто2.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто2,
		|	НалоговыйСталиВидыСубконто2.ВидСубконто.ТипЗначения КАК ТипЗначения2,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто3.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто3,
		|	НалоговыйСталиВидыСубконто3.ВидСубконто.ТипЗначения КАК ТипЗначения3,
		|	ОтражениеВУчете.СчетКтНУ,
		|	ОтражениеВУчете.СубконтоКтНУ1,
		|	ОтражениеВУчете.СубконтоКтНУ2,
		|	ОтражениеВУчете.СубконтоКтНУ3,
		|	ОтражениеВУчете.СпособРаспределенияЗатрат,
		|	ОтражениеВУчете.ОтражениеВУСН,
		|	ОтражениеВУчете.Сумма,
		|	ОтражениеВУчете.ВидНачисленияУдержания
		|ИЗ
		|	ВТ_ОтражениеВУчете КАК ОтражениеВУчете
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто1
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйСталиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто2
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйСталиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто3
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйСталиВидыСубконто3.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто1
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйБылиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто2
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйБылиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто3
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйБылиВидыСубконто3.НомерСтроки)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетДт,
		|	СубконтоДт1,
		|	СубконтоДт2,
		|	СубконтоДт3,
		|	СчетДтНУ,
		|	СубконтоДтНУ1,
		|	СубконтоДтНУ2,
		|	СубконтоДтНУ3
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		ТаблицаПослеПодмен = Запрос.Выполнить().Выгрузить();
		Для каждого СтрокаРезультата Из ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("ОбрабатыватьСубконтоНУ",Истина)) Цикл
			Если СтрокаРезультата.ЕстьСубконто1 И СтрокаРезультата.СубконтоДтНУ1 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ1 = СтрокаРезультата.ТипЗначения1.ПривестиЗначение()
			КонецЕсли;
			Если СтрокаРезультата.ЕстьСубконто2 И СтрокаРезультата.СубконтоДтНУ2 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ2 = СтрокаРезультата.ТипЗначения2.ПривестиЗначение()
			КонецЕсли;
			Если СтрокаРезультата.ЕстьСубконто3 И СтрокаРезультата.СубконтоДтНУ3 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ3 = СтрокаРезультата.ТипЗначения3.ПривестиЗначение()
			КонецЕсли;
		КонецЦикла; 
		
		ТаблицаПослеПодмен.Свернуть("СчетДт,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,СпособРаспределенияЗатрат,
		|СчетДтНУ,СчетКтНУ,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3,
		|ОтражениеВУСН,ВидНачисленияУдержания", "Сумма");
		
		НулевыеСтроки = ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("Сумма",0));
		Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
			ТаблицаПослеПодмен.Удалить(СтрокаТаблицы)
		КонецЦикла;
		
		ПромежуточнаяТаблица = ТаблицаПослеПодмен.Скопировать();
		
	КонецЕсли;
	
	//
	// замена счетов НУ по регистру соответствий
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
КонецПроцедуры //ПолучитьПроводкиПоСтраховымВзносам2010()

// Функция распределяет скидку по доходам сотрудника
//
// Параметры
//  РезультатЗапроса  - резултат запроса 
//
// Возвращаемое значение:
//   Таблица значений  
//
Функция ПолучитьТаблицуСкидокКДоходам(РезультатЗапроса)
	
	ТаблицаСкидок = Новый ТаблицаЗначений;
	ТаблицаСкидок.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"));
	ТаблицаСкидок.Колонки.Добавить("ВидРасчета", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций"));
	ТаблицаСкидок.Колонки.Добавить("КодДоходаЕСН", Новый ОписаниеТипов("СправочникСсылка.ДоходыПоСтраховымВзносам"));
	ТаблицаСкидок.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	ТаблицаСкидок.Колонки.Добавить("ОблагаетсяПоДополнительномуТарифу", Новый ОписаниеТипов("Булево"));
	ТаблицаСкидок.Колонки.Добавить("ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам", Новый ОписаниеТипов("Булево"));
	ТаблицаСкидок.Колонки.Добавить("ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией"));
	ТаблицаСкидок.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	ТаблицаСкидок.Колонки.Добавить("Скидка", Новый ОписаниеТипов("Число")); 
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТаблицаСкидок;
	КонецЕсли;
	
	ТаблицаРаспределения = ТаблицаСкидок.СкопироватьКолонки();
	ТаблицаРаспределения.Колонки.Добавить("Результат", Новый ОписаниеТипов("Число"));
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			
			СкидкаКРаспределению = Выборка.Скидка;
			
			ТаблицаРаспределения.Очистить();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаРаспределения.Добавить(),Выборка);
			КонецЦикла;
			
			МассивКоэффициентов = ТаблицаРаспределения.ВыгрузитьКолонку("Результат");
			МассивСуммКНачислению = ОбщегоНазначенияЗК.РаспределитьПропорционально(СкидкаКРаспределению,МассивКоэффициентов);
			
			Если МассивСуммКНачислению <> Неопределено Тогда
				
				Для каждого СтрокаТЗ Из ТаблицаРаспределения Цикл
					
					НоваяСтрока = ТаблицаСкидок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
					НоваяСтрока.Скидка = МассивСуммКНачислению[ТаблицаРаспределения.Индекс(СтрокаТЗ)];
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаСкидок;
	
КонецФункции 

// Функция фозвращает таблицу значений с данными для вычисления коэффициентов отражения в учете Страховых взносов
// Параметры
//  МассивПериодовРегистрации   - массив с периодами регистрации, по которым собираем данные
//  ГоловнаяОрганизация 		– головная организация
//  МассивСчетаИсключенияРБП 	- массив счетов по которым расходы не относим на РБП
//  МассивФизлиц				- Массив физлиц, по которым собираем данные для списания РБП или получения базы с начала года
//  СворачиватьПериодДействия 	- Результат формируем без периода действия
//
// Возвращаемое значение:
//   Таблица значений 
//
Функция ПолучитьДанныеУчетаСтраховыхВзносов2010(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП, МассивФизлиц = Неопределено, СворачиватьПериодДействия = Истина)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Периоды
	// Таблица список периодов, для получения учетной политики
	// Поля:
	//		Период, конец месяца
	// Описание:
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(МассивПериодовРегистрации[0]);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы
	Для Индекс = 1 По МассивПериодовРегистрации.Количество()-1 Цикл
		КонецМесяца = КонецМесяца(МассивПериодовРегистрации[Индекс]);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамНеОтбиратьФизлиц", МассивФизлиц = Неопределено);
	Запрос.УстановитьПараметр("парамМассивПериодовРегистрации", МассивПериодовРегистрации);
	Запрос.УстановитьПараметр("парамМассивФизлиц", МассивФизлиц);
	Запрос.УстановитьПараметр("парамСчетаИсключенияРБП", МассивСчетаИсключенияРБП);
	Запрос.УстановитьПараметр("парамКонецГода", КонецГода(МассивПериодовРегистрации[0]));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Регистратор,
	|	СтраховыеВзносыСведенияОДоходах.НомерСтроки,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидРасчета КАК ВидРасчета,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК КодДоходаЕСН,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СтраховыеВзносыСведенияОДоходах.Скидка
	|ПОМЕСТИТЬ ВТ_Скидки
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|	И СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И (&парамНеОтбиратьФизлиц
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.ФизЛицо В (&парамМассивФизлиц))
	|	И СтраховыеВзносыСведенияОДоходах.Скидка <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СкидкиКДоходам.Регистратор КАК Регистратор,
	|	СкидкиКДоходам.НомерСтроки КАК НомерСтроки,
	|	ЕСНДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|	СкидкиКДоходам.ВидРасчета КАК ВидРасчета,
	|	СкидкиКДоходам.КодДоходаЕСН КАК КодДоходаЕСН,
	|	СкидкиКДоходам.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	СкидкиКДоходам.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДополнительныеНачисления.Результат КАК Результат,
	|	СкидкиКДоходам.Скидка
	|ИЗ
	|	ВТ_Скидки КАК СкидкиКДоходам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|		ПО (ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение)
	|			И СкидкиКДоходам.ФизЛицо = ЕСНДополнительныеНачисления.ФизЛицо
	|			И СкидкиКДоходам.ВидРасчета = ЕСНДополнительныеНачисления.ВидРасчета
	|			И СкидкиКДоходам.КодДоходаЕСН = ЕСНДополнительныеНачисления.КодДоходаЕСН
	|			И СкидкиКДоходам.ОблагаетсяЕНВД = ЕСНДополнительныеНачисления.ОблагаетсяЕНВД
	|			И СкидкиКДоходам.ПериодРегистрации = ЕСНДополнительныеНачисления.ПериодРегистрации
	|			И СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу = ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	Сотрудник,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу";
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаСкидок = ПолучитьТаблицуСкидокКДоходам(РезультатЗапроса);
	Запрос.УстановитьПараметр("ТаблицаСкидок", ТаблицаСкидок);
	
	МассивСчет84 = Новый Массив();
	МассивСчет84.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	Запрос.УстановитьПараметр("СчетаИсключения", МассивСчет84);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД,
	|	УчетнаяПолитика.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитика
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|			ПО Периоды.Период >= УчетнаяПолитика.Период
	|				И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитика.Период
	|			И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСкидок.Сотрудник КАК Сотрудник,
	|	ТаблицаСкидок.ВидРасчета КАК ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН КАК КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаСкидок.Скидка
	|ПОМЕСТИТЬ ВТ_СкидкиКДоходам
	|ИЗ
	|	&ТаблицаСкидок КАК ТаблицаСкидок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	Сотрудник,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ВидДохода.ВходитВБазуПФР КАК ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС КАК ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
	|	СУММА(Доходы.РезультатФССНС) КАК РезультатФССНС
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыПоВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		ЕСНОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		ЕСНОсновныеНачисления.КодДоходаЕСН КАК ВидДохода,
	|		ЕСНОсновныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНОсновныеНачисления.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ЕСНОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		ВЫБОР
	|			КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Результат,
	|		ВЫБОР
	|			КОГДА ЕСНОсновныеНачисления.ВидРасчета.КодДоходаФСС_НС = ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|				ТОГДА ЕСНОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК РезультатФССНС
	|	ИЗ
	|		РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
	|	ГДЕ
	|		ЕСНОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.Сотрудник,
	|		ЕСНДополнительныеНачисления.ФизЛицо,
	|		ЕСНДополнительныеНачисления.ВидРасчета,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|		ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНДополнительныеНачисления.Результат - ЕСТЬNULL(ВТ_СкидкиКДоходам.Скидка, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ЕСНДополнительныеНачисления.ВидРасчета.КодДоходаФСС_НС = ЗНАЧЕНИЕ(Перечисление.ДоходыФСС_НС.Облагается)
	|				ТОГДА ЕСНДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкидкиКДоходам КАК ВТ_СкидкиКДоходам
	|			ПО ЕСНДополнительныеНачисления.Сотрудник = ВТ_СкидкиКДоходам.Сотрудник
	|				И ЕСНДополнительныеНачисления.ВидРасчета = ВТ_СкидкиКДоходам.ВидРасчета
	|				И ЕСНДополнительныеНачисления.КодДоходаЕСН = ВТ_СкидкиКДоходам.КодДоходаЕСН
	|				И ЕСНДополнительныеНачисления.ОблагаетсяЕНВД = ВТ_СкидкиКДоходам.ОблагаетсяЕНВД
	|				И ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу = ВТ_СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу
	|				И ЕСНДополнительныеНачисления.ПериодРегистрации = ВТ_СкидкиКДоходам.ПериодРегистрации
	|	ГДЕ
	|		ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНДополнительныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ПериодРегистрации,
	|	Доходы.ПериодДействия,
	|	Доходы.ОблагаетсяЕНВД,
	|	Доходы.ФизЛицо,
	|	Доходы.ВидДохода.ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84
	|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		БУОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		БУОсновныеНачисления.СчетДт КАК СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.Результат КАК Результат,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт,
	|		ВЫБОР
	|			КОГДА (НЕ БУОсновныеНачисления.СчетДт В (&парамСчетаИсключенияРБП))
	|					И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПодменятьСчетДтНаРБП
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.Сотрудник,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.ВидРасчета,
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		БУДополнительныеНачисления.Результат,
	|		БУДополнительныеНачисления.ПодразделениеДт,
	|		БУДополнительныеНачисления.ПодразделениеКт,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Доходы.ПериодРегистрации = УчетнаяПолитикаНалоговыйУчет.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
	|		ПО Доходы.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО Доходы.СчетДт = ВТ_Счета84.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ПериодРегистрации,
	|	Доходы.СчетДт,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.ПериодДействия,
	|	Доходы.ФизЛицо,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзносыДоходыПоВР.Сотрудник,
	|	ВзносыДоходыПоВР.ФизЛицо,
	|	ВзносыДоходыПоВР.ВидРасчета,
	|	ВзносыДоходыПоВР.ОблагаетсяЕНВД,
	|	ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	ВзносыДоходыПоВР.ПериодРегистрации,
	|	ВзносыДоходыПоВР.ПериодДействия,
	|	ВзносыДоходыПоВР.Результат,
	|	ВзносыДоходыПоВР.РезультатФССНС,
	|	БУДоходыПоВР.СчетДт,
	|	БУДоходыПоВР.СубконтоДт1,
	|	БУДоходыПоВР.СубконтоДт2,
	|	БУДоходыПоВР.СубконтоДт3,
	|	БУДоходыПоВР.СчетДтНУ,
	|	БУДоходыПоВР.СубконтоДтНУ1,
	|	БУДоходыПоВР.СубконтоДтНУ2,
	|	БУДоходыПоВР.СубконтоДтНУ3,
	|	БУДоходыПоВР.СпособРаспределенияЗатрат,
	|	БУДоходыПоВР.ОтражениеВУСН,
	|	БУДоходыПоВР.Результат КАК РезультатБУ,
	|	БУДоходыПоВР.ПодразделениеДт,
	|	БУДоходыПоВР.ПодразделениеКт,
	|	БУДоходыПоВР.ПодменятьСчетДтНаРБП,
	|	ВзносыДоходыПоВР.ВходитВБазуПФР,
	|	ВзносыДоходыПоВР.ВходитВБазуФСС,
	|	ВзносыДоходыПоВР.ВходитВБазуФОМС,
	|	БУДоходыПоВР.ЭтоСчет84
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыБУДоходы
	|ИЗ
	|	ВТ_ВзносыДоходыПоВР КАК ВзносыДоходыПоВР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|		ПО ВзносыДоходыПоВР.Сотрудник = БУДоходыПоВР.Сотрудник
	|			И ВзносыДоходыПоВР.ВидРасчета = БУДоходыПоВР.ВидРасчета
	|			И ВзносыДоходыПоВР.ПериодРегистрации = БУДоходыПоВР.ПериодРегистрации
	|			И ВзносыДоходыПоВР.ПериодДействия = БУДоходыПоВР.ПериодДействия
	|			И ВзносыДоходыПоВР.ОблагаетсяЕНВД = БУДоходыПоВР.ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.Сотрудник КАК Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета КАК ВидРасчета,
	|	БУДоходыСводПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия КАК ПериодДействия,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СУММА(БУДоходыСводПоВР.Результат) КАК Результат,
	|	БУДоходыСводПоВР.ПодразделениеДт,
	|	БУДоходыСводПоВР.ПодразделениеКт
	|ПОМЕСТИТЬ ВТ_БУДоходыСводПоВР
	|ИЗ
	|	ВТ_БУДоходыПоВР КАК БУДоходыСводПоВР
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыСводПоВР.Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета,
	|	БУДоходыСводПоВР.ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД,
	|	БУДоходыСводПоВР.ПодразделениеДт,
	|	БУДоходыСводПоВР.ПодразделениеКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.ФизЛицо,
	|	ВзносыДоходыБУДоходы.СчетДт,
	|	ВзносыДоходыБУДоходы.СубконтоДт1,
	|	ВзносыДоходыБУДоходы.СубконтоДт2,
	|	ВзносыДоходыБУДоходы.СубконтоДт3,
	|	ВзносыДоходыБУДоходы.СчетДтНУ,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ1,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ2,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ3,
	|	ВзносыДоходыБУДоходы.СпособРаспределенияЗатрат,
	|	ВзносыДоходыБУДоходы.ОтражениеВУСН,
	|	ВзносыДоходыБУДоходы.ПодразделениеДт,
	|	ВзносыДоходыБУДоходы.ПодразделениеКт,
	|	ВзносыДоходыБУДоходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР_НеЕНВД,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФОМС,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР_ЕНВД,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаДопТариф,
	|	ВЫБОР
	|		КОГДА БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.РезультатФССНС * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС_НС,
	|	ВзносыДоходыБУДоходы.ПериодРегистрации,
	|	ВзносыДоходыБУДоходы.ПериодДействия,
	|	ВзносыДоходыБУДоходы.ОблагаетсяЕНВД,
	|	ВзносыДоходыБУДоходы.ЭтоСчет84
	|ПОМЕСТИТЬ ВТ_Коэффициенты
	|ИЗ
	|	ВТ_ВзносыДоходыБУДоходы КАК ВзносыДоходыБУДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыСводПоВР КАК БУДоходыСводПоВР
	|		ПО ВзносыДоходыБУДоходы.Сотрудник = БУДоходыСводПоВР.Сотрудник
	|			И ВзносыДоходыБУДоходы.ПериодРегистрации = БУДоходыСводПоВР.ПериодРегистрации
	|			И ВзносыДоходыБУДоходы.ПериодДействия = БУДоходыСводПоВР.ПериодДействия
	|			И ВзносыДоходыБУДоходы.ОблагаетсяЕНВД = БУДоходыСводПоВР.ОблагаетсяЕНВД
	|			И ВзносыДоходыБУДоходы.ВидРасчета = БУДоходыСводПоВР.ВидРасчета";
	
	Запрос.Выполнить();
	
	Если СворачиватьПериодДействия Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	СУММА(Коэффициенты.БазаПФР_НеЕНВД) КАК БазаПФР_НеЕНВД,
		|	СУММА(Коэффициенты.БазаФСС) КАК БазаФСС,
		|	СУММА(Коэффициенты.БазаФОМС) КАК БазаФОМС,
		|	СУММА(Коэффициенты.БазаПФР_ЕНВД) КАК БазаПФР_ЕНВД,
		|	СУММА(Коэффициенты.БазаДопТариф) КАК БазаДопТариф,
		|	СУММА(Коэффициенты.БазаФСС_НС) КАК БазаФСС_НС,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ЭтоСчет84
		|ИЗ
		|	ВТ_Коэффициенты КАК Коэффициенты
		|
		|СГРУППИРОВАТЬ ПО
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.ЭтоСчет84";
		
	Иначе // для списания РБП в расходы нужен период действия
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
		|	СведенияОбИнвалидностиФизлиц.Период КАК Период,
		|	СведенияОбИнвалидностиФизлиц.Инвалидность
		|ПОМЕСТИТЬ ВТ_СведенияОбИнвалидности
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.Физлицо В(&парамМассивФизлиц)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
		|	СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо
		|ПОМЕСТИТЬ ВТДанныеОбИнвалидности
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Период КАК Период,
		|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
		|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК ПериодРегистра
		|	ИЗ
		|		ВТ_Периоды КАК Периоды
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
		|			ПО Периоды.Период >= СведенияОбИнвалидностиФизлиц.Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СведенияОбИнвалидностиФизлиц.Физлицо,
		|		Периоды.Период) КАК Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОбИнвалидности КАК СведенияОбИнвалидностиФизлиц
		|		ПО (СведенияОбИнвалидностиФизлиц.Период = Периоды.ПериодРегистра)
		|			И Периоды.Физлицо = СведенияОбИнвалидностиФизлиц.Физлицо
		|			И (СведенияОбИнвалидностиФизлиц.Инвалидность)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо,
		|	Месяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТарифСтраховыхВзносовСрезПоследних.ВидТарифа КАК ВидТарифа,
		|	ТарифСтраховыхВзносовСрезПоследних.ПФР,
		|	ТарифСтраховыхВзносовСрезПоследних.ПФРНакопительная,
		|	ТарифСтраховыхВзносовСрезПоследних.ФСС,
		|	ТарифСтраховыхВзносовСрезПоследних.ФФОМС,
		|	ТарифСтраховыхВзносовСрезПоследних.ТФОМС
		|ПОМЕСТИТЬ ВТТарифы
		|ИЗ
		|	РегистрСведений.ТарифСтраховыхВзносов.СрезПоследних(&парамКонецГода, ) КАК ТарифСтраховыхВзносовСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидТарифа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	СУММА(Коэффициенты.БазаПФР_НеЕНВД) КАК БазаПФР_НеЕНВД,
		|	СУММА(Коэффициенты.БазаФСС) КАК БазаФСС,
		|	СУММА(Коэффициенты.БазаФОМС) КАК БазаФОМС,
		|	СУММА(Коэффициенты.БазаПФР_ЕНВД) КАК БазаПФР_ЕНВД,
		|	СУММА(Коэффициенты.БазаДопТариф) КАК БазаДопТариф,
		|	СУММА(Коэффициенты.БазаФСС_НС) КАК БазаФСС_НС,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПериодДействия,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ЭтоСчет84,
		|	ВЫБОР
		|		КОГДА ГОД(Коэффициенты.ФизЛицо.ДатаРождения) < 1967
		|			ТОГДА ВТТарифы.ПФР
		|		ИНАЧЕ ВТТарифы.ПФР - ВТТарифы.ПФРНакопительная
		|	КОНЕЦ КАК ОсновнойТариф,
		|	ВЫБОР
		|		КОГДА ГОД(Коэффициенты.ФизЛицо.ДатаРождения) < 1967
		|			ТОГДА ЕСТЬNULL(ВТТарифЕНВД.ПФР, 0)
		|		ИНАЧЕ ЕСТЬNULL(ВТТарифЕНВД.ПФР, 0) - ЕСТЬNULL(ВТТарифЕНВД.ПФРНакопительная, 0)
		|	КОНЕЦ КАК ТарифЕНВД
		|ИЗ
		|	ВТ_Коэффициенты КАК Коэффициенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК ВТ_УчетнаяПолитика
		|		ПО Коэффициенты.ПериодРегистрации = ВТ_УчетнаяПолитика.Месяц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбИнвалидности КАК ВТДанныеОбИнвалидности
		|		ПО Коэффициенты.ФизЛицо = ВТДанныеОбИнвалидности.Физлицо
		|			И Коэффициенты.ПериодРегистрации = ВТДанныеОбИнвалидности.Месяц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифы КАК ВТТарифЕНВД
		|		ПО (ВТТарифЕНВД.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифы КАК ВТТарифы
		|		ПО (ВЫБОР
		|				КОГДА ВТДанныеОбИнвалидности.Месяц ЕСТЬ NULL 
		|					ТОГДА ЕСТЬNULL(ВТ_УчетнаяПолитика.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)) = ВТТарифы.ВидТарифа
		|				ИНАЧЕ ВТТарифы.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
		|			КОНЕЦ)
		|ГДЕ
		|	Коэффициенты.ПодменятьСчетДтНаРБП
		|
		|СГРУППИРОВАТЬ ПО
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПериодДействия,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.ЭтоСчет84,
		|	ВЫБОР
		|		КОГДА ГОД(Коэффициенты.ФизЛицо.ДатаРождения) < 1967
		|			ТОГДА ВТТарифы.ПФР
		|		ИНАЧЕ ВТТарифы.ПФР - ВТТарифы.ПФРНакопительная
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ГОД(Коэффициенты.ФизЛицо.ДатаРождения) < 1967
		|			ТОГДА ЕСТЬNULL(ВТТарифЕНВД.ПФР, 0)
		|		ИНАЧЕ ЕСТЬNULL(ВТТарифЕНВД.ПФР, 0) - ЕСТЬNULL(ВТТарифЕНВД.ПФРНакопительная, 0)
		|	КОНЕЦ";
		
	КонецЕсли;	
	
	Возврат  Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеУчетаСтраховыхВзносов2010()

// Возвращает текст запроса для получения скидок к доходам, которые частично входят в средний для БЛ
//
Функция ПолучитьТекстЗапросаКоэффициентыСкидокДляБЛ()
	
	ЗапросКоэффициентыСкидокТекст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК ВидДохода,
	|	СУММА(СтраховыеВзносыСведенияОДоходах.Скидка) КАК СкидкаОборот,
	|	Физлица.Физлицо
	|ПОМЕСТИТЬ ВТДанныеУчетаСкидок
	|ИЗ
	|	ВТ_ФизлицаПособия КАК Физлица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|		ПО (СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ Физлица.ПериодРасчетаСреднегоЗаработкаНачало И Физлица.ПериодРасчетаСреднегоЗаработкаОкончание)
	|			И Физлица.Физлицо = СтраховыеВзносыСведенияОДоходах.ФизЛицо
	|			И (СтраховыеВзносыСведенияОДоходах.Организация = &парамГоловнаяОрганизация)
	|			И (СтраховыеВзносыСведенияОДоходах.ВидДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка)))
	|			И (СтраховыеВзносыСведенияОДоходах.Период >= &ДатаЗакона213ФЗ)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	|	Физлица.Физлицо,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ),
	|	ЕСНСведенияОДоходах.КодДоходаЕСН,
	|	СУММА(ЕСНСведенияОДоходах.Скидка),
	|	Физлица.Физлицо
	|ИЗ
	|	ВТ_ФизлицаПособия КАК Физлица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|		ПО (ЕСНСведенияОДоходах.Период МЕЖДУ Физлица.ПериодРасчетаСреднегоЗаработкаНачало И Физлица.ПериодРасчетаСреднегоЗаработкаОкончание)
	|			И Физлица.Физлицо = ЕСНСведенияОДоходах.ФизЛицо
	|			И (ЕСНСведенияОДоходах.Организация = &парамГоловнаяОрганизация)
	|			И (ЕСНСведенияОДоходах.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.МатпомощьПриРожденииРебенка)))
	|			И (ЕСНСведенияОДоходах.Период < &ДатаЗакона213ФЗ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.КодДоходаЕСН,
	|	НАЧАЛОПЕРИОДА(ЕСНСведенияОДоходах.Период, МЕСЯЦ),
	|	Физлица.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БазаДополнительныеНачисления.Регистратор,
	|	БазаДополнительныеНачисления.НомерСтроки,
	|	СУММА(БазаДополнительныеНачисления.РезультатБаза) КАК РезультатБаза,
	|	ВЫБОР
	|		КОГДА БазаДополнительныеНачисления.БазовыйПериодНачало < &ДатаЗакона213ФЗ
	|			ТОГДА БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаЕСН
	|		ИНАЧЕ БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
	|	КОНЕЦ КАК КодДоходаСтраховыеВзносы,
	|	НАЧАЛОПЕРИОДА(БазаДополнительныеНачисления.БазовыйПериодНачало, МЕСЯЦ) КАК БазовыйПериодНачало,
	|	БазаДополнительныеНачисления.ФизЛицо
	|ПОМЕСТИТЬ ВТБазаДопНачисленийПоБЛ
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка.БазаДополнительныеНачисленияРаботниковОрганизаций(
	|			&парамИзмерения,
	|			&парамИзмерения,
	|			&парамРазрезыБЛ,
	|			Организация = &парамГоловнаяОрганизация
	|				И Результат <> 0
	|				И (НЕ Сторно)
	|				И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|				И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
	|					(ВЫБРАТЬ
	|						Список.Сотрудник,
	|						Список.ПериодРегистрации,
	|						Список.ДатаНачалаСобытия
	|					ИЗ
	|						ВТ_СотрудникиПериодыПособия КАК Список)
	|				И ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))) КАК БазаДополнительныеНачисления
	|ГДЕ
	|	ВЫБОР
	|			КОГДА БазаДополнительныеНачисления.БазовыйПериодНачало < &ДатаЗакона213ФЗ
	|				ТОГДА БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаЕСН
	|			ИНАЧЕ БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
	|		КОНЕЦ В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.МатпомощьПриРожденииРебенка))
	|
	|СГРУППИРОВАТЬ ПО
	|	БазаДополнительныеНачисления.НомерСтроки,
	|	НАЧАЛОПЕРИОДА(БазаДополнительныеНачисления.БазовыйПериодНачало, МЕСЯЦ),
	|	ВЫБОР
	|		КОГДА БазаДополнительныеНачисления.БазовыйПериодНачало < &ДатаЗакона213ФЗ
	|			ТОГДА БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаЕСН
	|		ИНАЧЕ БазаДополнительныеНачисления.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
	|	КОНЕЦ,
	|	БазаДополнительныеНачисления.Регистратор,
	|	БазаДополнительныеНачисления.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(БазаДополнительныеНачисления.РезультатБаза) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	БазовыйПериодНачало,
	|	КодДоходаСтраховыеВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БазаДопНачисленийПоВР.Регистратор КАК Регистратор,
	|	БазаДопНачисленийПоВР.НомерСтроки КАК НомерСтроки,
	|	БазаДопНачисленийПоВР.КодДоходаСтраховыеВзносы КАК КодДоходаСтраховыеВзносы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеУчетаСкидок.СкидкаОборот, 0) > БазаДопНачисленийПоВР.РезультатБаза
	|			ТОГДА 0
	|		ИНАЧЕ 1 - ЕСТЬNULL(ДанныеУчетаСкидок.СкидкаОборот, 0) / БазаДопНачисленийПоВР.РезультатБаза
	|	КОНЕЦ КАК КоэффициентУчетаСкидки
	|ПОМЕСТИТЬ ВТКоэффициентыСкидок
	|ИЗ
	|	ВТБазаДопНачисленийПоБЛ КАК БазаДопНачисленийПоВР
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеУчетаСкидок КАК ДанныеУчетаСкидок
	|		ПО БазаДопНачисленийПоВР.КодДоходаСтраховыеВзносы = ДанныеУчетаСкидок.ВидДохода
	|			И БазаДопНачисленийПоВР.БазовыйПериодНачало = ДанныеУчетаСкидок.Период
	|			И БазаДопНачисленийПоВР.ФизЛицо = ДанныеУчетаСкидок.Физлицо
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЕСТЬNULL(ДанныеУчетаСкидок.СкидкаОборот, 0) > БазаДопНачисленийПоВР.РезультатБаза
	|				ТОГДА 0
	|			ИНАЧЕ 1 - ЕСТЬNULL(ДанныеУчетаСкидок.СкидкаОборот, 0) / БазаДопНачисленийПоВР.РезультатБаза
	|		КОНЕЦ < 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки,
	|	КодДоходаСтраховыеВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДанныеУчетаСкидок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБазаДопНачисленийПоБЛ";
	
	Возврат ЗапросКоэффициентыСкидокТекст;
	
КонецФункции // ПолучитьТекстЗапросаКоэффициентыСкидокДляБЛ()

// получение  данных для бухучета
// Параметры:
//  СписокНачислений - список начислений, которые необходимо обработать
//  ЭтоОсновныеНачисления - булево, если Истина, то получаем данные по основным начислениям иначе - по доп.
//
// Возвращаемое значение:
//  Результат запроса
// 
Функция ПолучитьДанныеУчета2010(СписокНачислений, ЭтоОсновныеНачисления, ЭтоПервичныеНачисления)
	
	Запрос = Новый Запрос;
	
	Измерения = Новый Массив(1);
	Измерения[0] = "Сотрудник";
	
	Запрос.УстановитьПараметр("парамИзмерения", Измерения);
	
	Запрос.УстановитьПараметр("парамСписокНачислений", СписокНачислений);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаЗакона213ФЗ",ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	
	Разрезы = Новый Массив(18);
	Разрезы[0] = "СчетДт";
	Разрезы[1] = "СубконтоДт1";
	Разрезы[2] = "СубконтоДт2";
	Разрезы[3] = "СубконтоДт3";
	Разрезы[4] = "СчетКт";
	Разрезы[5] = "СубконтоКт1";
	Разрезы[6] = "СубконтоКт2";
	Разрезы[7] = "СубконтоКт3";
	Разрезы[8] = "СчетДтНУ";
	Разрезы[9] = "СубконтоДтНУ1";
	Разрезы[10] = "СубконтоДтНУ2";
	Разрезы[11] = "СубконтоДтНУ3";
	Разрезы[12] = "СчетКтНУ";
	Разрезы[13] = "СубконтоКтНУ1";
	Разрезы[14] = "СубконтоКтНУ2";
	Разрезы[15] = "СубконтоКтНУ3";
	Разрезы[16] = "СпособРаспределенияЗатрат";
	Разрезы[17] = "ОтражениеВУСН";	
	
	Запрос.УстановитьПараметр("парамРазрезыБУ", Разрезы);
	
	СпособПоУмолчанию = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию;
	
	Запрос.УстановитьПараметр("парамСпособПоУмолчанию", СпособПоУмолчанию);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетДт", СпособПоУмолчанию.СчетДт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетКт", СпособПоУмолчанию.СчетКт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт1", СпособПоУмолчанию.СубконтоДт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт2", СпособПоУмолчанию.СубконтоДт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт3", СпособПоУмолчанию.СубконтоДт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт1", СпособПоУмолчанию.СубконтоКт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт2", СпособПоУмолчанию.СубконтоКт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт3", СпособПоУмолчанию.СубконтоКт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетНУ", СпособПоУмолчанию.СчетДтНУ);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетКтНУ", СпособПоУмолчанию.СчетКтНУ);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ1", СпособПоУмолчанию.СубконтоДтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ2", СпособПоУмолчанию.СубконтоДтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ3", СпособПоУмолчанию.СубконтоДтНУ3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ1", СпособПоУмолчанию.СубконтоКтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ2", СпособПоУмолчанию.СубконтоКтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ3", СпособПоУмолчанию.СубконтоКтНУ3);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСпособРаспределенияЗатрат", СпособПоУмолчанию.СпособРаспределенияЗатрат);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюОтражениеВУСН", СпособПоУмолчанию.ОтражениеВУСН);
	
	СпособПоУмолчанию = Справочники.СпособыОтраженияЗарплатыВРеглУчете.БольничныйЗаСчетРаботодателя;
	
	Запрос.УстановитьПараметр("парамЕстьСпособПоУмолчаниюДляБольничного", Не СпособПоУмолчанию.СчетДт.Пустая());
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСчетДт", СпособПоУмолчанию.СчетДт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСчетКт", СпособПоУмолчанию.СчетКт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДт1", СпособПоУмолчанию.СубконтоДт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДт2", СпособПоУмолчанию.СубконтоДт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДт3", СпособПоУмолчанию.СубконтоДт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКт1", СпособПоУмолчанию.СубконтоКт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКт2", СпособПоУмолчанию.СубконтоКт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКт3", СпособПоУмолчанию.СубконтоКт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСчетДтНУ", СпособПоУмолчанию.СчетДтНУ);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСчетКтНУ", СпособПоУмолчанию.СчетКтНУ);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ1", СпособПоУмолчанию.СубконтоДтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ2", СпособПоУмолчанию.СубконтоДтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ3", СпособПоУмолчанию.СубконтоДтНУ3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ1", СпособПоУмолчанию.СубконтоКтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ2", СпособПоУмолчанию.СубконтоКтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ3", СпособПоУмолчанию.СубконтоКтНУ3);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоСпособРаспределенияЗатрат", СпособПоУмолчанию.СпособРаспределенияЗатрат);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюДляБольничногоОтражениеВУСН", СпособПоУмолчанию.ОтражениеВУСН);
	
	МассивПоСреднемуЗаработку = Новый Массив;
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС);
	Запрос.УстановитьПараметр("парамПоСреднемуЗаработку", МассивПоСреднемуЗаработку);
	
	СписокСоставляющихСреднегоЗаработка = Новый Массив; 
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиям);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые);
	Запрос.УстановитьПараметр("парамСписокСоставляющихСреднегоЗаработка", СписокСоставляющихСреднегоЗаработка);
	
	// для учета особенностей расчета среднего заработка
	ОсновнойЗаработок = Новый Массив(5);
	ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	ОсновнойЗаработок[3] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;
	ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
	ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
	ОсновнойЗаработок[4] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010;
	
	ПоФиксПремиям = Новый Массив(3);
	ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
	ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;
	ПоФиксПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий;
	
	ПоПремиям = Новый Массив(6);
	ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
	ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;
	ПоПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
	ПоПремиям[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;
	ПоПремиям[4] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;
	ПоПремиям[5] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010;
	
	ФиксГодовыеПремии = Новый Массив(5);
	ФиксГодовыеПремии[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
	ФиксГодовыеПремии[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;
	ФиксГодовыеПремии[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий;
	ФиксГодовыеПремии[3] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;
	ФиксГодовыеПремии[4] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;
	
	Запрос.УстановитьПараметр("парамОсновнойЗаработок",	ОсновнойЗаработок);
	Запрос.УстановитьПараметр("парамОсновнойЗаработокНеиндексируемый",	ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);
	Запрос.УстановитьПараметр("парамПоПремиям",			ПоПремиям);
	Запрос.УстановитьПараметр("парамПоФиксПремиям",		ПоФиксПремиям);
	Запрос.УстановитьПараметр("парамПоФиксПремиямНеИндексируемые",	ФиксГодовыеПремии);
	
	Запрос.УстановитьПараметр("ЕстьЕНВД", мЕНВД);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ЭтоОсновныеНачисления Тогда
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ ОТРАЖЕНИЯ В УЧЕТЕ БАЗОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_База
		
		Если Не ЭтоПервичныеНачисления Тогда
			
			//соберем базу для зависимых начислений
			БазаТекст = 
			"ВЫБРАТЬ
			|	База.Регистратор КАК Регистратор,
			|	База.НомерСтроки КАК НомерСтроки,
			|	База.СчетДтРазрез,
			|	База.СубконтоДт1Разрез,
			|	База.СубконтоДт2Разрез,
			|	База.СубконтоДт3Разрез,
			|	База.СчетКтРазрез,
			|	База.СубконтоКт1Разрез,
			|	База.СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез,
			|	База.СчетДтНУРазрез,
			|	База.СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез,
			|	База.СчетКтНУРазрез,
			|	База.СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез,
			|	СУММА(База.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_База
			|ИЗ
			|	(ВЫБРАТЬ
			|		БазаБУОсновныеНачисления.Регистратор КАК Регистратор,
			|		БазаБУОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаБУОсновныеНачисления.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаБУОсновныеНачисления.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаБУОсновныеНачисления.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаБУОсновныеНачисления.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаБУОсновныеНачисления.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаБУОсновныеНачисления.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаБУОсновныеНачисления.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
			|		БазаБУОсновныеНачисления.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		БазаБУОсновныеНачисления.РезультатБаза КАК РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаБУОсновныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И (НЕ Сторно)
			|					И ПериодРегистрации = &парамПериодРегистрации
			|					И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И ВидРасчета В (&парамСписокНачислений)) КАК БазаБУОсновныеНачисления
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		БазаБУДополнительныеНачисления.Регистратор,
			|		БазаБУДополнительныеНачисления.НомерСтроки,
			|		БазаБУДополнительныеНачисления.СчетДтРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт3Разрез,
			|		БазаБУДополнительныеНачисления.СчетКтРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт3Разрез,
			|		БазаБУДополнительныеНачисления.СчетДтНУРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ3Разрез,
			|		БазаБУДополнительныеНачисления.СчетКтНУРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ3Разрез,
			|		БазаБУДополнительныеНачисления.СпособРаспределенияЗатратРазрез,
			|		БазаБУДополнительныеНачисления.ОтражениеВУСНРазрез,
			|		БазаБУДополнительныеНачисления.РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаБУДополнительныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И (НЕ Сторно)
			|					И ПериодРегистрации = &парамПериодРегистрации
			|					И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И ВидРасчета В (&парамСписокНачислений)) КАК БазаБУДополнительныеНачисления) КАК База
			|
			|СГРУППИРОВАТЬ ПО
			|	База.Регистратор,
			|	База.СчетДтНУРазрез,
			|	База.СчетКтРазрез,
			|	База.СубконтоКт1Разрез,
			|	База.СубконтоДт3Разрез,
			|	База.СубконтоДт2Разрез,
			|	База.СубконтоДт1Разрез,
			|	База.СчетДтРазрез,
			|	База.СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез,
			|	База.СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез,
			|	База.СчетКтНУРазрез,
			|	База.СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез,
			|	База.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
			
		Иначе	
			
			// для первичных начислений не собираем базу	
			БазаТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатратРазрез,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_База";
			
		КонецЕсли;	
		Запрос.Текст = БазаТекст;
		//временная таблица - ВТ_База
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ ОТРАЖЕНИЕ В УЧЕТЕ БАЗОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_УчетПлановыхНачислений
		
		УчетПлановыхНачисленийТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ВидРасчета
		|ПОМЕСТИТЬ ВТ_ОсновыеНачисленияДляПлановый
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ОсновныеНачисления.Сторно)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОНачислениях
		|ИЗ
		|	ВТ_ОсновыеНачисленияДляПлановый КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ОсновныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|			И ОсновныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.Сотрудник,
		|	ОсновныеНачисления.ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.ПустаяСсылка)
		|		ИНАЧЕ РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД
		|	КОНЕЦ КАК ОтнесениеРасходовКДеятельностиЕНВД,
		|	СведенияОНачисленияхСрез.Регистратор КАК Регистратор,
		|	СведенияОНачисленияхСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетПлановыхНачислений
		|ИЗ
		|	РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОНачислениях КАК СведенияОНачисленияхСрез
		|		ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|			И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|			И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетПлановыхНачисленийТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		
		ОсновныеНачисленияТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ПодразделениеОрганизации,
		|	ОсновныеНачисления.ОбособленноеПодразделение
		|ПОМЕСТИТЬ ВТ_ОсновыеНачисления
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И (ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ИЛИ ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия))
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ОсновныеНачисления.Сторно)";
		Запрос.Текст = ОсновныеНачисленияТекст;
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		// таблица ВТ_УчетОсновногоЗаработка
		
		УчетОсновногоЗаработкаТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(УчетЗарВРеглУчете.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОРаботниках
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ПО ОсновныеНачисления.Сотрудник = УчетЗарВРеглУчете.Сотрудник
		|			И (УчетЗарВРеглУчете.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетЗарВРеглУчете.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	СведенияОРаботникахСрез.Регистратор КАК Регистратор,
		|	СведенияОРаботникахСрез.НомерСтроки КАК НомерСтроки,
		|	УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя КАК СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработка
		|ИЗ
		|	РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОРаботниках КАК СведенияОРаботникахСрез
		|		ПО (СведенияОРаботникахСрез.Сотрудник = УчетЗарВРеглУчете.Сотрудник)
		|			И (СведенияОРаботникахСрез.Период = УчетЗарВРеглУчете.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		// таблица ВТ_УчетОсновногоЗаработкаПодразделения
		
		УчетОсновногоЗаработкаПодразделенияТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	МАКСИМУМ(УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОПодразделениях
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ОсновныеНачисления.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И (УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.ПодразделениеОрганизации,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодразделениеОрганизации,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПодразделенияхСрез.Регистратор КАК Регистратор,
		|	СведенияОПодразделенияхСрез.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя КАК СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаПодразделения
		|ИЗ
		|	ВТ_СведенияОПодразделениях КАК СведенияОПодразделенияхСрез
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО СведенияОПодразделенияхСрез.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И СведенияОПодразделенияхСрез.Период = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";		
		Запрос.Текст = УчетОсновногоЗаработкаПодразделенияТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		// таблица ВТ_УчетОсновногоЗаработкаОрганизации
		
		УчетОсновногоЗаработкаОрганизацииТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	МАКСИМУМ(УчетОсновногоЗаработкаОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияПоОрганизации
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ОсновныеНачисления.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И (УчетОсновногоЗаработкаОрганизации.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.ОбособленноеПодразделение,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбособленноеПодразделение,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПоОрганизации.Регистратор КАК Регистратор,
		|	СведенияПоОрганизации.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя КАК СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаОрганизации
		|ИЗ
		|	ВТ_СведенияПоОрганизации КАК СведенияПоОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО СведенияПоОрганизации.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И СведенияПоОрганизации.Период = УчетОсновногоЗаработкаОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";		
		Запрос.Текст = УчетОсновногоЗаработкаОрганизацииТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА 
		// базу надо получать только при наличии ЕНВД, для всех пособий, кроме Общее заблоевание
		// Отпуск по беременности и родам,
		// по уходу за ребенком (все варианты),
		// пособие при карантине,
		// по уходу за взрослым членом семьи и др. (без заболевания работника)
		
		ПолучатьБазу = Ложь;
		Если мЕНВД Тогда
			
			// ВТ_ПрочиеПособия
			//
			// ВТ_СотрудникиПериодыПособия
			// условия для виртуальной таблицы
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	РасчетСреднегоЗаработка.ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
			|	ОсновныеНачисления.ФизЛицо
			|ПОМЕСТИТЬ ВТ_ПрочиеПособия
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И (НЕ ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай)))
			|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|	И ОсновныеНачисления.Результат <> 0
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
			|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
			|	ОсновныеНачисления.ФизЛицо
			|ПОМЕСТИТЬ ВТ_СотрудникиПериодыПособия
			|ИЗ
			|	ВТ_ПрочиеПособия КАК ОсновныеНачисления
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодРегистрации,
			|	ДатаНачалаСобытия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТ_ПрочиеПособия.ФизЛицо КАК ФизЛицо,
			|	ВТ_ПрочиеПособия.ПериодРасчетаСреднегоЗаработкаНачало КАК ПериодРасчетаСреднегоЗаработкаНачало,
			|	ВТ_ПрочиеПособия.ПериодРасчетаСреднегоЗаработкаОкончание КАК ПериодРасчетаСреднегоЗаработкаОкончание
			|ПОМЕСТИТЬ ВТ_ФизлицаПособия
			|ИЗ
			|	ВТ_ПрочиеПособия КАК ВТ_ПрочиеПособия
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо,
			|	ПериодРасчетаСреднегоЗаработкаНачало,
			|	ПериодРасчетаСреднегоЗаработкаОкончание";
			Результат = Запрос.Выполнить().Выгрузить();
			ПолучатьБазу = Результат[0].Количество > 0;
			
		КонецЕсли;
		
		Если ПолучатьБазу Тогда
			
			Разрезы = Новый Массив;
			Разрезы.Добавить("СубконтоДт1");
			Разрезы.Добавить("СубконтоДт2");
			Разрезы.Добавить("СубконтоДт3");
			Запрос.УстановитьПараметр("парамРазрезыБУСредний", Разрезы);
			
			Разрезы = Новый Массив;
			Разрезы.Добавить("СубконтоДт1");
			Разрезы.Добавить("СубконтоДт2");
			Разрезы.Добавить("СубконтоДт3");
			Разрезы.Добавить("ВидРасчета");
			Запрос.УстановитьПараметр("парамРазрезыДопБУСредний", Разрезы);
			
			//временная таблица - ВТКоэффициентыСкидок
			РазрезыДляБЛ = Новый Массив;
			РазрезыДляБЛ.Добавить("ВидРасчета");
			Запрос.УстановитьПараметр("парамРазрезыБЛ",	РазрезыДляБЛ);
			Запрос.Текст = ПолучитьТекстЗапросаКоэффициентыСкидокДляБЛ();
			Запрос.Выполнить();
			
			БазаСреднегоЗаработкаПрочиеПособияТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.СпособРасчета,
			|	БазаСреднегоЗаработка.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
			|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
			|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
			|	БазаСреднегоЗаработка.Сотрудник КАК Сотрудник,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаБУОсновныеНачисления
			|ИЗ
			|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
			|			&парамИзмерения,
			|			&парамИзмерения,
			|			&парамРазрезыБУСредний,
			|			Организация = &парамГоловнаяОрганизация
			|				И Результат <> 0
			|				И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
			|					(ВЫБРАТЬ
			|						Список.Сотрудник,
			|						Список.ПериодРегистрации,
			|						Список.ДатаНачалаСобытия
			|					ИЗ
			|						ВТ_СотрудникиПериодыПособия КАК Список)) КАК БазаСреднегоЗаработка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ДатаНачалаСобытия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БазаСреднегоЗаработка.СпособРасчета,
			|	БазаСреднегоЗаработка.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
			|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
			|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
			|	БазаСреднегоЗаработка.Сотрудник КАК Сотрудник,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза,
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|		КОГДА БазаСреднегоЗаработка.БазовыйПериодНачало < &ДатаЗакона213ФЗ
			|			ТОГДА БазаСреднегоЗаработка.ВидРасчетаРазрез.КодДоходаЕСН
			|		ИНАЧЕ БазаСреднегоЗаработка.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
			|	КОНЕЦ КАК КодДоходаСтраховыеВзносы
			|ПОМЕСТИТЬ ВТ_БазаБУДополнительныеНачисления
			|ИЗ
			|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
			|			&парамИзмерения,
			|			&парамИзмерения,
			|			&парамРазрезыДопБУСредний,
			|			Организация = &парамГоловнаяОрганизация
			|				И Результат <> 0
			|				И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
			|					(ВЫБРАТЬ
			|						Список.Сотрудник,
			|						Список.ПериодРегистрации,
			|						Список.ДатаНачалаСобытия
			|					ИЗ
			|						ВТ_СотрудникиПериодыПособия КАК Список)) КАК БазаСреднегоЗаработка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ДатаНачалаСобытия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеПособия
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор КАК Регистратор,
			|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза
			|	ИЗ
			|		ВТ_ПрочиеПособия КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУОсновныеНачисления КАК БазаСреднегоЗаработка
			|			ПО (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор,
			|		ОсновныеНачисления.НомерСтроки,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.РезультатБаза * ЕСТЬNULL(КоэффициентыСкидок.КоэффициентУчетаСкидки, 1)
			|	ИЗ
			|		ВТ_ПрочиеПособия КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУДополнительныеНачисления КАК БазаСреднегоЗаработка
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыСкидок КАК КоэффициентыСкидок
			|				ПО БазаСреднегоЗаработка.НомерСтроки = КоэффициентыСкидок.НомерСтроки
			|					И БазаСреднегоЗаработка.Регистратор = КоэффициентыСкидок.Регистратор
			|					И БазаСреднегоЗаработка.КодДоходаСтраховыеВзносы = КоэффициентыСкидок.КодДоходаСтраховыеВзносы
			|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|				И (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК БазаСреднегоЗаработка
			|ГДЕ
			|	БазаСреднегоЗаработка.РезультатБаза <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.НомерСтроки,
			|	БазаСреднегоЗаработка.РезультатБаза
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_ФизлицаПособия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_СотрудникиПериодыПособия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТКоэффициентыСкидок
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_БазаБУОсновныеНачисления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_БазаБУДополнительныеНачисления";
			
		ИначеЕсли мЕНВД Тогда	
			
			БазаСреднегоЗаработкаПрочиеПособияТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеПособия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_ФизлицаПособия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_СотрудникиПериодыПособия";
			
		Иначе	
			
			БазаСреднегоЗаработкаПрочиеПособияТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеПособия";
			
		КонецЕсли;	
		Запрос.Текст = БазаСреднегоЗаработкаПрочиеПособияТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаПрочиеПособия
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для прочих пособий
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для БЛ общее заболевание
		
		ПолучатьБазу = Ложь;
		ПолучатьБазуДолиБЛЗаСчетРаботодателя = Ложь;
		БЛОбщееЗаболеваниеТекст = "";
		
		// УСН доходы + ЕНВД: нужна база для доли ЕНВД
		// УСН расходы: нужна база для доли БЛ за 2 календарных дня
		// УСН расходы + ЕНВД: нужна база для доли ЕНВД и для доли БЛ за 2 календарных дня
		// ОСН: нужна база для доли БЛ за 2 календарных дня
		// ОСН + ЕНВД: нужна база для доли ЕНВД и для доли БЛ за 2 календарных дня
		
		// Базу для доли ЕНВД получаем при стратегии отражения в учете КакБазовыеНачисления
		// Базу для 2 календарных дней получаем если не задан способ отражения доли БЛ за счет работодателя
		
		// получим записи, для которых необходима база
		Если мЕНВД и мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
			// УСН доходы + ЕНВД: нужна только база для доли ЕНВД
			
			// ВТ_БЛОбщееЗаболевание
			//
			БЛОбщееЗаболеваниеТекст =
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	РасчетСреднегоЗаработка.ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
			|	ОсновныеНачисления.ФизЛицо
			|ПОМЕСТИТЬ ВТ_БЛОбщееЗаболевание
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
			|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|	И ОсновныеНачисления.Результат <> 0
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			
		ИначеЕсли Не мУСН или мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
			// УСН расходы: нужна база для доли БЛ за 2 календарных дня
			// УСН расходы + ЕНВД: нужна база для доли ЕНВД и для доли БЛ за 2 календарных дня
			// ОСН: нужна база для доли БЛ за 2 календарных дня
			// ОСН + ЕНВД: нужна база для доли ЕНВД и для доли БЛ за 2 календарных дня
			// отбираем все записи для которых не задан способ отражения доли за счет работодателя
			// или стратегия отражения в учете - по базовым начислениям
			
			ПолучатьБазуДолиБЛЗаСчетРаботодателя = Истина;
			
			БЛОбщееЗаболеваниеТекст =
			"ВЫБРАТЬ
			|	ОсновныеНачисления.Регистратор,
			|	ОсновныеНачисления.НомерСтроки,
			|	РасчетСреднегоЗаработка.Сотрудник,
			|	РасчетСреднегоЗаработка.ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
			|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
			|	ОсновныеНачисления.ФизЛицо
			|ПОМЕСТИТЬ ВТ_БЛОбщееЗаболевание
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетОсновногоЗаработка
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработка.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработка.НомерСтроки
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаПодразделения
			|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаПодразделения.Регистратор
			|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаПодразделения.НомерСтроки
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
			|		ПО (ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаПодразделения.Регистратор)
			|			И (ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаПодразделения.НомерСтроки)
			|			И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL )
			|			И (УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL )
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
			|		ПО ОсновныеНачисления.ВидРасчета.СпособРасчета = РасчетСреднегоЗаработка.СпособРасчета
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|			И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|			И ОсновныеНачисления.ДатаНачалаСобытия = РасчетСреднегоЗаработка.ДатаНачалаСобытия
			|			И (ОсновныеНачисления.Сотрудник = ВЫБОР
			|				КОГДА РасчетСреднегоЗаработка.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
			|						И РасчетСреднегоЗаработка.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет))
			|					ТОГДА ЕСТЬNULL(РасчетСреднегоЗаработка.Регистратор.Сотрудник, РасчетСреднегоЗаработка.Сотрудник)
			|				ИНАЧЕ РасчетСреднегоЗаработка.Сотрудник
			|			КОНЕЦ)
			|			И (РасчетСреднегоЗаработка.Организация = &парамГоловнаяОрганизация)
			|ГДЕ
			|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
			|	И (НЕ ОсновныеНачисления.Сторно)
			|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
			|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
			|	И ОсновныеНачисления.Результат <> 0
			|	И (УчетОсновногоЗаработка.НомерСтроки ЕСТЬ NULL 
			|				И УчетОсновногоЗаработкаПодразделения.НомерСтроки ЕСТЬ NULL 
			|				И УчетОсновногоЗаработкаОрганизации.НомерСтроки ЕСТЬ NULL 
			|			ИЛИ ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления))
			|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(БЛОбщееЗаболеваниеТекст) Тогда
			// ВТ_СотрудникиПериодыБЛОбщееЗаболевание
			// условия для виртуальной таблицы
			
			Запрос.Текст = БЛОбщееЗаболеваниеТекст;
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
			|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
			|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
			|ПОМЕСТИТЬ ВТ_СотрудникиПериодыПособия
			|ИЗ
			|	ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодРегистрации,
			|	ДатаНачалаСобытия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТ_БЛОбщееЗаболевание.ФизЛицо КАК ФизЛицо,
			|	ВТ_БЛОбщееЗаболевание.ПериодРасчетаСреднегоЗаработкаНачало КАК ПериодРасчетаСреднегоЗаработкаНачало,
			|	ВТ_БЛОбщееЗаболевание.ПериодРасчетаСреднегоЗаработкаОкончание КАК ПериодРасчетаСреднегоЗаработкаОкончание
			|ПОМЕСТИТЬ ВТ_ФизлицаПособия
			|ИЗ
			|	ВТ_БЛОбщееЗаболевание КАК ВТ_БЛОбщееЗаболевание
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо,
			|	ПериодРасчетаСреднегоЗаработкаНачало,
			|	ПериодРасчетаСреднегоЗаработкаОкончание";
			Результат = Запрос.Выполнить().Выгрузить();
			ПолучатьБазу = Результат[0].Количество > 0;	
			
		КонецЕсли;
		
		Если ПолучатьБазу Тогда
			
			//временная таблица - ВТКоэффициентыСкидок
			РазрезыДляБЛ = Новый Массив;
			РазрезыДляБЛ.Добавить("ВидРасчета");
			Запрос.УстановитьПараметр("парамРазрезыБЛ",	РазрезыДляБЛ);
			Запрос.Текст = ПолучитьТекстЗапросаКоэффициентыСкидокДляБЛ();
			Запрос.Выполнить();
			
			Если ПолучатьБазуДолиБЛЗаСчетРаботодателя Тогда
				
				// получаем разрезы БУ и НУ
				
				Разрезы = Новый Массив();
				Разрезы.Добавить("СчетДт");
				Разрезы.Добавить("СубконтоДт1");
				Разрезы.Добавить("СубконтоДт2");
				Разрезы.Добавить("СубконтоДт3");
				Разрезы.Добавить("СчетКт");
				Разрезы.Добавить("СубконтоКт1");
				Разрезы.Добавить("СубконтоКт2");
				Разрезы.Добавить("СубконтоКт3");
				Разрезы.Добавить("СчетДтНУ");
				Разрезы.Добавить("СубконтоДтНУ1");
				Разрезы.Добавить("СубконтоДтНУ2");
				Разрезы.Добавить("СубконтоДтНУ3");
				Разрезы.Добавить("СчетКтНУ");
				Разрезы.Добавить("СубконтоКтНУ1");
				Разрезы.Добавить("СубконтоКтНУ2");
				Разрезы.Добавить("СубконтоКтНУ3");
				Разрезы.Добавить("ОтражениеВУСН");
				Разрезы.Добавить("СпособРаспределенияЗатрат");
				Запрос.УстановитьПараметр("парамРазрезыБУСредний", Разрезы);
				
				Разрезы = Новый Массив();
				Разрезы.Добавить("СчетДт");
				Разрезы.Добавить("СубконтоДт1");
				Разрезы.Добавить("СубконтоДт2");
				Разрезы.Добавить("СубконтоДт3");
				Разрезы.Добавить("СчетКт");
				Разрезы.Добавить("СубконтоКт1");
				Разрезы.Добавить("СубконтоКт2");
				Разрезы.Добавить("СубконтоКт3");
				Разрезы.Добавить("СчетДтНУ");
				Разрезы.Добавить("СубконтоДтНУ1");
				Разрезы.Добавить("СубконтоДтНУ2");
				Разрезы.Добавить("СубконтоДтНУ3");
				Разрезы.Добавить("СчетКтНУ");
				Разрезы.Добавить("СубконтоКтНУ1");
				Разрезы.Добавить("СубконтоКтНУ2");
				Разрезы.Добавить("СубконтоКтНУ3");
				Разрезы.Добавить("ОтражениеВУСН");
				Разрезы.Добавить("СпособРаспределенияЗатрат");
				Разрезы.Добавить("ВидРасчета");
				Запрос.УстановитьПараметр("парамРазрезыДопБУСредний", Разрезы);
				
				БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст =
				"ВЫБРАТЬ
				|	БазаСреднегоЗаработка.СпособРасчета,
				|	БазаСреднегоЗаработка.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
				|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
				|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
				|	БазаСреднегоЗаработка.Сотрудник КАК Сотрудник,
				|	БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
				|	БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
				|	БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
				|	БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
				|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
				|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
				|	БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза
				|ПОМЕСТИТЬ ВТ_БазаБУОсновныеНачисления
				|ИЗ
				|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
				|			&парамИзмерения,
				|			&парамИзмерения,
				|			&парамРазрезыБУСредний,
				|			Организация = &парамГоловнаяОрганизация
				|				И Результат <> 0
				|				И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
				|					(ВЫБРАТЬ
				|						Список.Сотрудник,
				|						Список.ПериодРегистрации,
				|						Список.ДатаНачалаСобытия
				|					ИЗ
				|						ВТ_СотрудникиПериодыПособия КАК Список)) КАК БазаСреднегоЗаработка
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Сотрудник,
				|	ДатаНачалаСобытия
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	БазаСреднегоЗаработка.СпособРасчета,
				|	БазаСреднегоЗаработка.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
				|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
				|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
				|	БазаСреднегоЗаработка.Сотрудник КАК Сотрудник,
				|	БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
				|	БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
				|	БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
				|	БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
				|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
				|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
				|	БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза,
				|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
				|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР
				|		КОГДА БазаСреднегоЗаработка.БазовыйПериодНачало < &ДатаЗакона213ФЗ
				|			ТОГДА БазаСреднегоЗаработка.ВидРасчетаРазрез.КодДоходаЕСН
				|		ИНАЧЕ БазаСреднегоЗаработка.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
				|	КОНЕЦ КАК КодДоходаСтраховыеВзносы
				|ПОМЕСТИТЬ ВТ_БазаБУДополнительныеНачисления
				|ИЗ
				|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
				|			&парамИзмерения,
				|			&парамИзмерения,
				|			&парамРазрезыДопБУСредний,
				|			Организация = &парамГоловнаяОрганизация
				|				И Результат <> 0
				|				И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
				|					(ВЫБРАТЬ
				|						Список.Сотрудник,
				|						Список.ПериодРегистрации,
				|						Список.ДатаНачалаСобытия
				|					ИЗ
				|						ВТ_СотрудникиПериодыПособия КАК Список)) КАК БазаСреднегоЗаработка
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Сотрудник,
				|	ДатаНачалаСобытия
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
				|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
				|	БазаСреднегоЗаработка.СчетДтРазрез,
				|	БазаСреднегоЗаработка.СчетКтРазрез,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
				|	БазаСреднегоЗаработка.СчетДтНУРазрез,
				|	БазаСреднегоЗаработка.СчетКтНУРазрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
				|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
				|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
				|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
				|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание
				|ИЗ
				|	(ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор КАК Регистратор,
				|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
				|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
				|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
				|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
				|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
				|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
				|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
				|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
				|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
				|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
				|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
				|		БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза
				|	ИЗ
				|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУОсновныеНачисления КАК БазаСреднегоЗаработка
				|			ПО (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
				|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор,
				|		ОсновныеНачисления.НомерСтроки,
				|		БазаСреднегоЗаработка.СчетДтРазрез,
				|		БазаСреднегоЗаработка.СчетКтРазрез,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
				|		БазаСреднегоЗаработка.СчетДтНУРазрез,
				|		БазаСреднегоЗаработка.СчетКтНУРазрез,
				|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
				|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
				|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
				|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
				|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
				|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
				|		БазаСреднегоЗаработка.РезультатБаза * ЕСТЬNULL(КоэффициентыСкидок.КоэффициентУчетаСкидки, 1)
				|	ИЗ
				|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУДополнительныеНачисления КАК БазаСреднегоЗаработка
				|				ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыСкидок КАК КоэффициентыСкидок
				|				ПО БазаСреднегоЗаработка.НомерСтроки = КоэффициентыСкидок.НомерСтроки
				|					И БазаСреднегоЗаработка.Регистратор = КоэффициентыСкидок.Регистратор
				|					И БазаСреднегоЗаработка.КодДоходаСтраховыеВзносы = КоэффициентыСкидок.КодДоходаСтраховыеВзносы
				|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|				И (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК БазаСреднегоЗаработка
				|ГДЕ
				|	БазаСреднегоЗаработка.РезультатБаза <> 0
				|
				|СГРУППИРОВАТЬ ПО
				|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
				|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.НомерСтроки,
				|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
				|	БазаСреднегоЗаработка.СчетДтНУРазрез,
				|	БазаСреднегоЗаработка.СчетКтНУРазрез,
				|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
				|	БазаСреднегоЗаработка.СчетКтРазрез,
				|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
				|	БазаСреднегоЗаработка.СчетДтРазрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.Регистратор,
				|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
				|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Регистратор,
				|	НомерСтроки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_ФизлицаПособия
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_СотрудникиПериодыПособия
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТКоэффициентыСкидок
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_БазаБУОсновныеНачисления
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_БазаБУДополнительныеНачисления";
				
			Иначе // база только для ЕНВД
				
				Разрезы = Новый Массив;
				Разрезы.Добавить("СубконтоДт1");
				Разрезы.Добавить("СубконтоДт2");
				Разрезы.Добавить("СубконтоДт3");
				Запрос.УстановитьПараметр("парамРазрезыБУСредний", Разрезы);
				
				Разрезы = Новый Массив;
				Разрезы.Добавить("СубконтоДт1");
				Разрезы.Добавить("СубконтоДт2");
				Разрезы.Добавить("СубконтоДт3");
				Разрезы.Добавить("ВидРасчета");
				Запрос.УстановитьПараметр("парамРазрезыДопБУСредний", Разрезы);
				
				БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст =
				"ВЫБРАТЬ
				|	БазаСреднегоЗаработка.СпособРасчета,
				|	БазаСреднегоЗаработка.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
				|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
				|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
				|	БазаСреднегоЗаработка.Сотрудник КАК Сотрудник,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза
				|ПОМЕСТИТЬ ВТ_БазаБУОсновныеНачисления
				|ИЗ
				|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
				|			&парамИзмерения,
				|			&парамИзмерения,
				|			&парамРазрезыБУСредний,
				|			Организация = &парамГоловнаяОрганизация
				|				И Результат <> 0
				|				И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
				|					(ВЫБРАТЬ
				|						Список.Сотрудник,
				|						Список.ПериодРегистрации,
				|						Список.ДатаНачалаСобытия
				|					ИЗ
				|						ВТ_СотрудникиПериодыПособия КАК Список)) КАК БазаСреднегоЗаработка
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Сотрудник,
				|	ДатаНачалаСобытия
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	БазаСреднегоЗаработка.СпособРасчета,
				|	БазаСреднегоЗаработка.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
				|	БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
				|	БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода,
				|	БазаСреднегоЗаработка.Сотрудник КАК Сотрудник,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза,
				|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
				|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
				|	ВЫБОР
				|		КОГДА БазаСреднегоЗаработка.БазовыйПериодНачало < &ДатаЗакона213ФЗ
				|			ТОГДА БазаСреднегоЗаработка.ВидРасчетаРазрез.КодДоходаЕСН
				|		ИНАЧЕ БазаСреднегоЗаработка.ВидРасчетаРазрез.КодДоходаСтраховыеВзносы
				|	КОНЕЦ КАК КодДоходаСтраховыеВзносы
				|ПОМЕСТИТЬ ВТ_БазаБУДополнительныеНачисления
				|ИЗ
				|	РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
				|			&парамИзмерения,
				|			&парамИзмерения,
				|			&парамРазрезыДопБУСредний,
				|			Организация = &парамГоловнаяОрганизация
				|				И Результат <> 0
				|				И (Сотрудник, ПериодРегистрации, ДатаНачалаСобытия) В
				|					(ВЫБРАТЬ
				|						Список.Сотрудник,
				|						Список.ПериодРегистрации,
				|						Список.ДатаНачалаСобытия
				|					ИЗ
				|						ВТ_СотрудникиПериодыПособия КАК Список)) КАК БазаСреднегоЗаработка
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Сотрудник,
				|	ДатаНачалаСобытия
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
				|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
				|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
				|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
				|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
				|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
				|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
				|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
				|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание
				|ИЗ
				|	(ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор КАК Регистратор,
				|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
				|		БазаСреднегоЗаработка.РезультатБаза КАК РезультатБаза
				|	ИЗ
				|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУОсновныеНачисления КАК БазаСреднегоЗаработка
				|			ПО (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
				|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ОсновныеНачисления.Регистратор,
				|		ОсновныеНачисления.НомерСтроки,
				|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|		БазаСреднегоЗаработка.РезультатБаза * ЕСТЬNULL(КоэффициентыСкидок.КоэффициентУчетаСкидки, 1)
				|	ИЗ
				|		ВТ_БЛОбщееЗаболевание КАК ОсновныеНачисления
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазаБУДополнительныеНачисления КАК БазаСреднегоЗаработка
				|				ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыСкидок КАК КоэффициентыСкидок
				|				ПО БазаСреднегоЗаработка.НомерСтроки = КоэффициентыСкидок.НомерСтроки
				|					И БазаСреднегоЗаработка.Регистратор = КоэффициентыСкидок.Регистратор
				|					И БазаСреднегоЗаработка.КодДоходаСтраховыеВзносы = КоэффициентыСкидок.КодДоходаСтраховыеВзносы
				|			ПО ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
				|				И (БазаСреднегоЗаработка.СпособРасчета = ОсновныеНачисления.СпособРасчета)
				|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
				|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) КАК БазаСреднегоЗаработка
				|ГДЕ
				|	БазаСреднегоЗаработка.РезультатБаза <> 0
				|
				|СГРУППИРОВАТЬ ПО
				|	БазаСреднегоЗаработка.Регистратор,
				|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
				|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
				|	БазаСреднегоЗаработка.НомерСтроки
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Регистратор,
				|	НомерСтроки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_ФизлицаПособия
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_СотрудникиПериодыПособия
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТКоэффициентыСкидок
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_БазаБУОсновныеНачисления
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_БазаБУДополнительныеНачисления";
				
			КонецЕсли;
			
		ИначеЕсли Не ПустаяСтрока(БЛОбщееЗаболеваниеТекст) Тогда	
			
			БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатратРазрез,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_ФизлицаПособия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_СотрудникиПериодыПособия";
			
		Иначе	
			
			БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатратРазрез,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание";
			
		КонецЕсли;	
		Запрос.Текст = БазаСреднегоЗаработкаБЛОбщееЗаболеваниеТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для для БЛ общее заболевание
		///////////////////////////////////////////////////////////////////////////////////
		
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для прочих начислений
		
		ПолучатьБазу = Ложь;
		
		// ВТ_ПрочиеНачисления
		//
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Сотрудник,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
		|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|		ИНАЧЕ ОсновныеНачисления.ВидРасчета.СпособРасчета
		|	КОНЕЦ КАК СпособРасчета
		|ПОМЕСТИТЬ ВТ_ПрочиеНачисления
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
		|	И (НЕ ОсновныеНачисления.Сторно)
		|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
		|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
		Запрос.Выполнить();
		
		// ВТ_СотрудникиПериодыПрочиеНачисления
		// условия для виртуальной таблицы
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТ_СотрудникиПериодыПрочиеНачисления
		|ИЗ
		|	ВТ_ПрочиеНачисления КАК ОсновныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия";
		Результат = Запрос.Выполнить().Выгрузить();
		ПолучатьБазу = Результат[0].Количество > 0;
		
		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаПрочиеНачисленияТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеНачисления
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор КАК Регистратор,
			|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор,
			|		ОсновныеНачисления.НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	БазаСреднегоЗаработка.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаПрочиеНачисленияТекст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработкаПрочиеНачисления";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаСреднегоЗаработкаПрочиеНачисленияТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработкаПрочиеНачисления
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для прочих начислений
		///////////////////////////////////////////////////////////////////////////////////
		
		// объединим базы среднего в одну временную таблицу
		БазаСреднегоЗаработкаТекст = 
		"ВЫБРАТЬ
		|	БазаСреднегоЗаработкаПрочиеНачисления.Регистратор КАК Регистратор,
		|	БазаСреднегоЗаработкаПрочиеНачисления.НомерСтроки КАК НомерСтроки,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СчетДтРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СчетКтРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СчетДтНУРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СчетКтНУРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.СубконтоКтНУ3Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработкаПрочиеНачисления.РезультатБаза
		|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаПрочиеНачисления КАК БазаСреднегоЗаработкаПрочиеНачисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.Регистратор,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.НомерСтроки,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СчетДтРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СчетКтРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СчетДтНУРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СчетКтНУРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработкаБЛОбщееЗаболевание.РезультатБаза
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаБЛОбщееЗаболевание КАК БазаСреднегоЗаработкаБЛОбщееЗаболевание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БазаСреднегоЗаработкаПрочиеПособия.Регистратор,
		|	БазаСреднегоЗаработкаПрочиеПособия.НомерСтроки,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
		|	БазаСреднегоЗаработкаПрочиеПособия.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработкаПрочиеПособия.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработкаПрочиеПособия.СубконтоДт3Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка),
		|	БазаСреднегоЗаработкаПрочиеПособия.РезультатБаза
		|ИЗ
		|	ВТ_БазаСреднегоЗаработкаПрочиеПособия КАК БазаСреднегоЗаработкаПрочиеПособия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = БазаСреднегоЗаработкаТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработка
		Запрос.Выполнить();
		
		
		///////////////////////////////////////////////////////////////////////////////////
		//получим отражение в учете сторно записей
		
		//временная таблица - ВТ_ОтражениеВУчетеСторно
		Запрос.Текст = ПолучитьТекстЗапросаОтражениеСторноЗаписей(); 
		Запрос.Выполнить();
		
		//получили отражение в учете сторно записей
		///////////////////////////////////////////////////////////////////////////////////
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ &парамЕстьСпособПоУмолчаниюДляБольничного
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УказанСпособОтраженияВБухучетеЗаСчетРаботодателя,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДт
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДт
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДт
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДт
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСчетДт
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДт
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетДт
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКт
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКт
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКт
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКт
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСчетКт
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКт
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКт
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт1
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт1
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт1
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт1
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДт1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт2
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт2
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт2
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт2
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДт2
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт3
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт3
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт3
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДт3
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДт3
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт1
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт1
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт1
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт1
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКт1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт2
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт2
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт2
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт2
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКт2
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт3
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт3
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт3
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКт3
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКт3
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДтНУ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДтНУ
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДтНУ
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетДтНУ
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСчетДтНУ
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКтНУ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКтНУ
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКтНУ
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СчетКтНУ
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСчетКтНУ
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКтНУ
		|	КОНЕЦ КАК СчетКтНУ,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ1
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ1
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ1
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ1
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ1
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ2
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ2
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ2
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ2
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ2
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ2
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ3
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ3
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ3
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоДтНУ3
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоДтНУ3
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ3
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ1
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ1
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ1
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ1
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ1
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ1
		|	КОНЕЦ КАК СубконтоКтНУ1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ2
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ2
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ2
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ2
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ2
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ2
		|	КОНЕЦ КАК СубконтоКтНУ2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ3
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ3
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ3
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СубконтоКтНУ3
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСубконтоКтНУ3
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ3
		|	КОНЕЦ КАК СубконтоКтНУ3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СпособРаспределенияЗатрат
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СпособРаспределенияЗатрат
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СпособРаспределенияЗатрат
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.СпособРаспределенияЗатрат
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоСпособРаспределенияЗатрат
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		ИНАЧЕ &парамСпособПоУмолчаниюСпособРаспределенияЗатрат
		|	КОНЕЦ КАК СпособРаспределенияЗатрат,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ОтражениеВУСН
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.ОтражениеВУСН
		|					КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.ОтражениеВУСН
		|					КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя.ОтражениеВУСН
		|					ИНАЧЕ &парамСпособПоУмолчаниюДляБольничногоОтражениеВУСН
		|				КОНЕЦ
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА NULL
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		ИНАЧЕ &парамСпособПоУмолчаниюОтражениеВУСН
		|	КОНЕЦ КАК ОтражениеВУСН,
		|	ВЫБОР
		|		КОГДА (НЕ &ЕстьЕНВД)
		|			ТОГДА 0
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|			ТОГДА 100
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|			ТОГДА 0
		|		КОГДА ОсновныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 100
		|		КОГДА ОсновныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 0
		|		КОГДА Распределение.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА Распределение.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА ЕНВДПроцент.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
		|		КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		КОГДА УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентЕНВД,
		|	ЕНВДПроцент.СчетДт КАК СчетЕНВД,
		|	ЕНВДПроцент.Субконто1 КАК Субконто1ЕНВД,
		|	ЕНВДПроцент.Субконто2 КАК Субконто2ЕНВД,
		|	ЕНВДПроцент.Субконто3 КАК Субконто3ЕНВД,
		|	ЕНВДПроцент.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатратЕНВД,
		|	Распределение.ДоляСпособаОтражения КАК ДоляСпособаОтражения,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ОсновныеНачисления.Результат КАК Результат,
		|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	ОсновныеНачисления.Сторно КАК Сторно,
		|	ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ОсновныеНачисления.ВидРасчета.ВидНачисленияПоСт255НК КАК ВидНачисленияПоСт255НК,
		|	ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете КАК СтратегияОтраженияВУчете,
		|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ОтражениеВУчетеСторно.ПериодДействияНачало КАК ПериодДействияНачалоСторно,
		|	ОтражениеВУчетеСторно.ПериодДействияКонец КАК ПериодДействияКонецСторно,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий)
		|		ИНАЧЕ ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете
		|	КОНЕЦ КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ОсновныеНачисления.Сотрудник.Наименование КАК СотрудникНаименование
		|ПОМЕСТИТЬ ДанныеУчета
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетПлановыхНачислений КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ОсновныеНачисления.Регистратор = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = РеглУчетПлановыхНачисленийРаботниковОрганизаций.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетЗарВРеглУчете
		|		ПО ОсновныеНачисления.Регистратор = УчетЗарВРеглУчете.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетЗарВРеглУчете.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|		ПО ОсновныеНачисления.Сотрудник = Распределение.Сотрудник
		|			И (НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ) = Распределение.ПериодРегистрации)
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете ЕСТЬ NULL )
		|			И (ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия))
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|			И (Распределение.ДоляСпособаОтражения <> 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентДеятельностиЕНВДСотрудников КАК ЕНВДПроцент
		|		ПО ОсновныеНачисления.Сотрудник = ЕНВДПроцент.Сотрудник
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|			И (ВЫБОР
		|				КОГДА ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия)
		|					ТОГДА ВЫБОР
		|							КОГДА НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ) > ОсновныеНачисления.ПериодРегистрации
		|								ТОГДА ОсновныеНачисления.ПериодРегистрации
		|							ИНАЧЕ НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ)
		|						КОНЕЦ
		|				КОГДА ОсновныеНачисления.ПериодДействия > ОсновныеНачисления.ПериодРегистрации
		|					ТОГДА ОсновныеНачисления.ПериодРегистрации
		|				ИНАЧЕ ОсновныеНачисления.ПериодДействия
		|			КОНЕЦ = ЕНВДПроцент.ПериодРегистрации)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
		|		ПО ОсновныеНачисления.Сотрудник = БУОсновныеНачисления.Сотрудник
		|			И ОсновныеНачисления.ВидРасчета = БУОсновныеНачисления.ВидРасчета
		|			И (БУОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации)
		|			И (БУОсновныеНачисления.ПериодДействияНачало >= ОсновныеНачисления.ПериодДействияНачало)
		|			И (БУОсновныеНачисления.ПериодДействияКонец <= ОсновныеНачисления.ПериодДействияКонец)
		|			И (БУОсновныеНачисления.ДокументОснование = ОсновныеНачисления.Регистратор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ОсновныеНачисления.Регистратор = ОтражениеВУчетеСторно.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ВЫБОР
		|			КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете
		|			КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете
		|			КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА Распределение.СпособОтраженияВБухучете
		|			КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете
		|			ИНАЧЕ &парамСпособПоУмолчанию
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
		|	И БУОсновныеНачисления.Сотрудник ЕСТЬ NULL 
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФактическийПериодДействияЗаписей.Регистратор КАК Регистратор,
		|	ФактическийПериодДействияЗаписей.НомерСтроки КАК НомерСтроки,
		|	СУММА(ВЫБОР
		|			КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало = ФактическийПериодДействияЗаписей.ДатаНачалаСобытия
		|				ТОГДА ВЫБОР
		|						КОГДА ФактическийПериодДействияЗаписей.ПериодДействияКонец >= ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|							ТОГДА 2
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОГДА ФактическийПериодДействияЗаписей.ПериодДействияНачало > ДОБАВИТЬКДАТЕ(ФактическийПериодДействияЗаписей.ДатаНачалаСобытия, ДЕНЬ, 1)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК ДнейЗаСчетРаботодателя,
		|	СУММА(РАЗНОСТЬДАТ(ФактическийПериодДействияЗаписей.ПериодДействияНачало, НАЧАЛОПЕРИОДА(ФактическийПериодДействияЗаписей.ПериодДействияКонец, ДЕНЬ), ДЕНЬ) + 1) КАК КалендарныхДней
		|ПОМЕСТИТЬ ВТ_ФактическийПериодДействияЗаписей
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
		|			ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|				И ВидРасчета В (&парамСписокНачислений)
		|				И ОбособленноеПодразделение = &парамОрганизация
		|				И ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
		|				И ПериодРегистрации = &парамПериодРегистрации) КАК ФактическийПериодДействияЗаписей
		|
		|СГРУППИРОВАТЬ ПО
		|	ФактическийПериодДействияЗаписей.Регистратор,
		|	ФактическийПериодДействияЗаписей.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	СУММА(ЕСТЬNULL(ФактическийПериодДействияЗаписей.ДнейЗаСчетРаботодателя / ФактическийПериодДействияЗаписей.КалендарныхДней, 0)) КАК ДоляБЛЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_ДанныеУчетаБЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсновныеНачисления.Регистратор КАК Регистратор,
		|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|	ГДЕ
		|		ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|		И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|		И ОсновныеНачисления.Результат <> 0
		|		И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|		И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
		|		И РАЗНОСТЬДАТ(ОсновныеНачисления.ДатаНачалаСобытия, ОсновныеНачисления.ПериодДействияНачало, ДЕНЬ) < 2) КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФактическийПериодДействияЗаписей КАК ФактическийПериодДействияЗаписей
		|		ПО ОсновныеНачисления.Регистратор = ФактическийПериодДействияЗаписей.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = ФактическийПериодДействияЗаписей.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&парамГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДанныеУчета.Регистратор КАК Регистратор,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.СотрудникНаименование КАК СотрудникНаименование,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.СчетДт КАК СчетДт,
		|	ДанныеУчета.СчетКт КАК СчетКт,
		|	ДанныеУчета.СубконтоДт1,
		|	ДанныеУчета.СубконтоДт2,
		|	ДанныеУчета.СубконтоДт3,
		|	ДанныеУчета.СубконтоКт1,
		|	ДанныеУчета.СубконтоКт2,
		|	ДанныеУчета.СубконтоКт3,
		|	ДанныеУчета.СчетДтНУ,
		|	ДанныеУчета.СчетКтНУ,
		|	ДанныеУчета.СубконтоДтНУ1,
		|	ДанныеУчета.СубконтоДтНУ2,
		|	ДанныеУчета.СубконтоДтНУ3,
		|	ДанныеУчета.СубконтоКтНУ1,
		|	ДанныеУчета.СубконтоКтНУ2,
		|	ДанныеУчета.СубконтоКтНУ3,
		|	ДанныеУчета.СпособРаспределенияЗатрат,
		|	ДанныеУчета.ОтражениеВУСН,
		|	ДанныеУчета.ПроцентЕНВД,
		|	ДанныеУчета.СчетЕНВД,
		|	ДанныеУчета.Субконто1ЕНВД,
		|	ДанныеУчета.Субконто2ЕНВД,
		|	ДанныеУчета.Субконто3ЕНВД,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.Сторно,
		|	ДанныеУчета.СпособРасчета,
		|	ДанныеУчета.ВидНачисленияПоСт255НК,
		|	ДанныеУчета.СтратегияОтраженияВУчете,
		|	ДанныеУчета.ПодразделениеОрганизации,
		|	ДанныеУчета.Результат,
		|	ДанныеУчета.ПериодДействияНачало,
		|	ДанныеУчета.ПериодДействияКонец,
		|	ДанныеУчета.ГрафикРаботы,
		|	ДанныеУчета.ВидУчетаВремени,
		|	ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя,
		|	ДанныеУчета.ДатаНачалаСобытия,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДт.НомерСтроки, 0) КАК НомерСубконтоРаботникиДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКт.НомерСтроки, 0) КАК НомерСубконтоРаботникиКт,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДт.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиКтНУ,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДтНУ.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДт.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДт,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДтНУ.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДтНУ,
		|	ЕСТЬNULL(СубконтоСт255НК.НомерСтроки, 0) КАК НомерСубконтоСт255НК,
		|	ЕСТЬNULL(База.СчетДтРазрез, БазаСреднегоЗаработка.СчетДтРазрез) КАК СчетДтРазрез,
		|	ЕСТЬNULL(База.СчетКтРазрез, БазаСреднегоЗаработка.СчетКтРазрез) КАК СчетКтРазрез,
		|	ВЫБОР
		|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК БазаСреднегоЗаработкаЕНВД,
		|	ЕСТЬNULL(База.СубконтоДт1Разрез, БазаСреднегоЗаработка.СубконтоДт1Разрез) КАК СубконтоДт1Разрез,
		|	ЕСТЬNULL(База.СубконтоДт2Разрез, БазаСреднегоЗаработка.СубконтоДт2Разрез) КАК СубконтоДт2Разрез,
		|	ЕСТЬNULL(База.СубконтоДт3Разрез, БазаСреднегоЗаработка.СубконтоДт3Разрез) КАК СубконтоДт3Разрез,
		|	ЕСТЬNULL(База.СубконтоКт1Разрез, БазаСреднегоЗаработка.СубконтоКт1Разрез) КАК СубконтоКт1Разрез,
		|	ЕСТЬNULL(База.СубконтоКт2Разрез, БазаСреднегоЗаработка.СубконтоКт2Разрез) КАК СубконтоКт2Разрез,
		|	ЕСТЬNULL(База.СубконтоКт3Разрез, БазаСреднегоЗаработка.СубконтоКт3Разрез) КАК СубконтоКт3Разрез,
		|	ЕСТЬNULL(База.СчетДтНУРазрез, БазаСреднегоЗаработка.СчетДтНУРазрез) КАК СчетДтНУРазрез,
		|	ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) КАК СчетКтНУРазрез,
		|	ЕСТЬNULL(СубконтоСт255НКБазы.НомерСтроки, 0) КАК НомерСубконтоСт255НКБазы,
		|	ЕСТЬNULL(База.СубконтоДтНУ1Разрез, БазаСреднегоЗаработка.СубконтоДтНУ1Разрез) КАК СубконтоДтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ2Разрез, БазаСреднегоЗаработка.СубконтоДтНУ2Разрез) КАК СубконтоДтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ3Разрез, БазаСреднегоЗаработка.СубконтоДтНУ3Разрез) КАК СубконтоДтНУ3Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ1Разрез, БазаСреднегоЗаработка.СубконтоКтНУ1Разрез) КАК СубконтоКтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ2Разрез, БазаСреднегоЗаработка.СубконтоКтНУ2Разрез) КАК СубконтоКтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ3Разрез, БазаСреднегоЗаработка.СубконтоКтНУ3Разрез) КАК СубконтоКтНУ3Разрез,
		|	ЕСТЬNULL(База.СпособРаспределенияЗатратРазрез, БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез) КАК СпособРаспределенияЗатратРазрез,
		|	ЕСТЬNULL(База.ОтражениеВУСНРазрез, БазаСреднегоЗаработка.ОтражениеВУСНРазрез) КАК ОтражениеВУСНРазрез,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ДоляСпособаОтражения ЕСТЬ НЕ NULL 
		|			ТОГДА ДанныеУчета.ДоляСпособаОтражения
		|		КОГДА База.РезультатБаза ЕСТЬ НЕ NULL 
		|			ТОГДА База.РезультатБаза
		|		ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|	КОНЕЦ КАК РезультатБаза,
		|	ЕСТЬNULL(ДанныеУчетаБЛ.ДоляБЛЗаСчетРаботодателя, 0) КАК ДоляБЛЗаСчетРаботодателя,
		|	ДанныеУчета.ДоляСпособаОтражения,
		|	ДанныеУчета.РезультатСторно КАК РезультатСторно,
		|	ДанныеУчета.ПериодДействияНачалоСторно КАК ПериодДействияНачалоСторно,
		|	ДанныеУчета.ПериодДействияКонецСторно КАК ПериодДействияКонецСторно,
		|	ЛОЖЬ КАК ЭтоЕдиновременноеПособиеФСС,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоПособияФСС
		|ИЗ
		|	ДанныеУчета КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоРаботникиДт.Ссылка
		|			И (ВидыСубконтоРаботникиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиКт
		|		ПО (ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетКт = ВидыСубконтоРаботникиКт.Ссылка
		|			И (ВидыСубконтоРаботникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоПодразделенияДт.Ссылка
		|			И (ВидыСубконтоПодразделенияДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоСтатьиЗатратДт.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоСтатьиЗатратДтНУ.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НК
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = СубконтоСт255НК.Ссылка
		|			И (СубконтоСт255НК.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоРаботникиДтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиКтНУ
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = ВидыСубконтоРаботникиКтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиКтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоПодразделенияДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоПодразделенияДтНУ.Ссылка
		|			И (ВидыСубконтоПодразделенияДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_База КАК База
		|		ПО ДанныеУчета.Регистратор = База.Регистратор
		|			И ДанныеУчета.НомерСтроки = База.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.Регистратор = БазаСреднегоЗаработка.Регистратор
		|			И ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НКБазы
		|		ПО (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) = СубконтоСт255НКБазы.Ссылка)
		|			И (СубконтоСт255НКБазы.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеУчетаБЛ КАК ДанныеУчетаБЛ
		|		ПО ДанныеУчета.Регистратор = ДанныеУчетаБЛ.Регистратор
		|			И ДанныеУчета.НомерСтроки = ДанныеУчетаБЛ.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
		|		ПО ДанныеУчета.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Регистратор,
		|	НомерСтроки,
		|	СчетДтРазрез,
		|	СчетДтНУРазрез,
		|	СубконтоДт1Разрез,
		|	СубконтоДт2Разрез,
		|	СубконтоДтНУ1Разрез,
		|	СубконтоДтНУ2Разрез,
		|	ОтражениеВУСНРазрез,
		|	СчетДт
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	Иначе // Дополнительные начисления
		
		Если Не ЭтоПервичныеНачисления Тогда
			
			//соберем базу для зависимых начислений
			БазаТекст = 
			"ВЫБРАТЬ
			|	База.Регистратор КАК Регистратор,
			|	База.НомерСтроки КАК НомерСтроки,
			|	База.СчетДтРазрез КАК СчетДтРазрез,
			|	База.СчетКтРазрез КАК СчетКтРазрез,
			|	База.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|	База.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|	База.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|	База.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|	База.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|	База.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|	База.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|	База.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|	База.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|	СУММА(База.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ База
			|ИЗ
			|	(ВЫБРАТЬ
			|		БазаБУДополнительныеНачисления.Регистратор КАК Регистратор,
			|		БазаБУДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаБУДополнительныеНачисления.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаБУДополнительныеНачисления.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаБУДополнительныеНачисления.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаБУДополнительныеНачисления.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаБУДополнительныеНачисления.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
			|		БазаБУДополнительныеНачисления.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		БазаБУДополнительныеНачисления.РезультатБаза КАК РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаБУДополнительныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И НАЧАЛОПЕРИОДА(ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета В (&парамСписокНачислений)
			|					И (НЕ Сторно)) КАК БазаБУДополнительныеНачисления
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		БазаБУОсновныеНачисления.Регистратор,
			|		БазаБУОсновныеНачисления.НомерСтроки,
			|		БазаБУОсновныеНачисления.СчетДтРазрез,
			|		БазаБУОсновныеНачисления.СчетКтРазрез,
			|		БазаБУОсновныеНачисления.СубконтоДт1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДт2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДт3Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт3Разрез,
			|		БазаБУОсновныеНачисления.СчетДтНУРазрез,
			|		БазаБУОсновныеНачисления.СчетКтНУРазрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ3Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ3Разрез,
			|		БазаБУОсновныеНачисления.СпособРаспределенияЗатратРазрез,
			|		БазаБУОсновныеНачисления.ОтражениеВУСНРазрез,
			|		БазаБУОсновныеНачисления.РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаБУОсновныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И НАЧАЛОПЕРИОДА(ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета В (&парамСписокНачислений)
			|					И (НЕ Сторно)) КАК БазаБУОсновныеНачисления) КАК База
			|
			|СГРУППИРОВАТЬ ПО
			|	База.Регистратор,
			|	База.НомерСтроки,
			|	База.СчетДтРазрез,
			|	База.СчетКтРазрез,
			|	База.СубконтоДт1Разрез,
			|	База.СубконтоДт2Разрез,
			|	База.СубконтоДт3Разрез,
			|	База.СубконтоКт1Разрез,
			|	База.СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез,
			|	База.СчетДтНУРазрез,
			|	База.СчетКтНУРазрез,
			|	База.СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез,
			|	База.СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе
			
			БазаТекст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ База";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаТекст;
		//временная таблица - База
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для доп. начислений
		
		ПолучатьБазу = Ложь;
		
		// ВТ_НачисленияПоСреднемуЗаработку
		//
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Сотрудник,
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.ДатаНачалаСобытия,
		|	ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
		|	ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
		|ПОМЕСТИТЬ ВТ_НачисленияПоСреднемуЗаработку
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
		|	И (НЕ ДополнительныеНачисления.Сторно)
		|	И ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)";
		Запрос.Выполнить();
		
		// ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку
		// условия для виртуальной таблицы
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку
		|ИЗ
		|	ВТ_НачисленияПоСреднемуЗаработку КАК ДополнительныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия";
		Результат = Запрос.Выполнить().Выгрузить();
		ПолучатьБазу = Результат[0].Количество > 0;
		
		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка
			|ИЗ
			|	(ВЫБРАТЬ
			|		ДополнительныеНачисления.Регистратор КАК Регистратор,
			|		ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза
			|	ИЗ
			|		ВТ_НачисленияПоСреднемуЗаработку КАК ДополнительныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ДополнительныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ДополнительныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ДополнительныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДополнительныеНачисления.Регистратор,
			|		ДополнительныеНачисления.НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ
			|	ИЗ
			|		ВТ_НачисленияПоСреднемуЗаработку КАК ДополнительныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ДополнительныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ДополнительныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ДополнительныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	БазаСреднегоЗаработка.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаТекст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
			|   ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаСреднегоЗаработкаТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработка
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для доп. начислений
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		//получим отражение в учете сторно записей
		
		ДополнительныеНачисленияСторноТекст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета,
		|	ДополнительныеНачисления.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисленияСторно
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.Сторно";
		
		Запрос.Текст = ДополнительныеНачисленияСторноТекст;
		//временная таблица - ВТ_ДополнительныеНачисленияСторно
		Результат = Запрос.Выполнить().Выгрузить();
		КоличествоСторноЗаписей = Результат[0].Количество; 
		
		Если КоличествоСторноЗаписей <> 0 Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДополнительныеНачисленияСторно.Регистратор КАК Регистратор,
			|	ДополнительныеНачисленияСторно.НомерСтроки КАК НомерСтроки,
			|	ДополнительныеНачисленияСторно.Сотрудник КАК Сотрудник,
			|	ДополнительныеНачисленияСторно.ВидРасчета КАК ВидРасчета,
			|	ДополнительныеНачисленияСторно.СторнируемыйДокумент КАК СторнируемыйДокумент,
			|	НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТ_СторноСотрудники
			|ИЗ
			|	ВТ_ДополнительныеНачисленияСторно КАК ДополнительныеНачисленияСторно
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
			|		ПО ДополнительныеНачисленияСторно.СторнируемыйДокумент = ДополнительныеНачисления.Регистратор
			|ГДЕ
			|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодРегистрации,
			|	ВидРасчета";
			
			//временная таблица - ВТ_СторноСотрудники
			Запрос.Выполнить();
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	ДополнительныеНачисления.Регистратор КАК Регистратор,
			|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|	БУДополнительныеНачисления.СчетДт,
			|	БУДополнительныеНачисления.СубконтоДт1,
			|	БУДополнительныеНачисления.СубконтоДт2,
			|	БУДополнительныеНачисления.СубконтоДт3,
			|	БУДополнительныеНачисления.СчетКт,
			|	БУДополнительныеНачисления.СубконтоКт1,
			|	БУДополнительныеНачисления.СубконтоКт2,
			|	БУДополнительныеНачисления.СубконтоКт3,
			|	БУДополнительныеНачисления.СчетДтНУ,
			|	БУДополнительныеНачисления.СубконтоДтНУ1,
			|	БУДополнительныеНачисления.СубконтоДтНУ2,
			|	БУДополнительныеНачисления.СубконтоДтНУ3,
			|	БУДополнительныеНачисления.СчетКтНУ,
			|	БУДополнительныеНачисления.СубконтоКтНУ1,
			|	БУДополнительныеНачисления.СубконтоКтНУ2,
			|	БУДополнительныеНачисления.СубконтоКтНУ3,
			|	БУДополнительныеНачисления.СпособРаспределенияЗатрат,
			|	БУДополнительныеНачисления.ОтражениеВУСН,
			|	БУДополнительныеНачисления.Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно
			|ИЗ
			|	ВТ_СторноСотрудники КАК ДополнительныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			БУДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
			|			БУДополнительныеНачисления.Сотрудник КАК Сотрудник,
			|			БУДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
			|			БУДополнительныеНачисления.Организация КАК Организация,
			|			БУДополнительныеНачисления.Результат КАК Результат,
			|			БУДополнительныеНачисления.СчетДт КАК СчетДт,
			|			БУДополнительныеНачисления.СубконтоДт1 КАК СубконтоДт1,
			|			БУДополнительныеНачисления.СубконтоДт2 КАК СубконтоДт2,
			|			БУДополнительныеНачисления.СубконтоДт3 КАК СубконтоДт3,
			|			БУДополнительныеНачисления.СчетКт КАК СчетКт,
			|			БУДополнительныеНачисления.СубконтоКт1 КАК СубконтоКт1,
			|			БУДополнительныеНачисления.СубконтоКт2 КАК СубконтоКт2,
			|			БУДополнительныеНачисления.СубконтоКт3 КАК СубконтоКт3,
			|			БУДополнительныеНачисления.СчетДтНУ КАК СчетДтНУ,
			|			БУДополнительныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
			|			БУДополнительныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
			|			БУДополнительныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
			|			БУДополнительныеНачисления.СчетКтНУ КАК СчетКтНУ,
			|			БУДополнительныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
			|			БУДополнительныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
			|			БУДополнительныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
			|			БУДополнительныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
			|			БУДополнительныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
			|			БУДополнительныеНачисления.ДокументОснование КАК ДокументОснование
			|		ИЗ
			|			РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
			|		ГДЕ
			|			(НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ), БУДополнительныеНачисления.Сотрудник, БУДополнительныеНачисления.ВидРасчета) В
			|					(ВЫБРАТЬ
			|						ДополнительныеНачисления.ПериодРегистрации,
			|						ДополнительныеНачисления.Сотрудник,
			|						ДополнительныеНачисления.ВидРасчета
			|					ИЗ
			|						ВТ_СторноСотрудники КАК ДополнительныеНачисления)
			|			И (НЕ БУДополнительныеНачисления.Сторно)) КАК БУДополнительныеНачисления
			|		ПО ДополнительныеНачисления.ВидРасчета = БУДополнительныеНачисления.ВидРасчета
			|			И ДополнительныеНачисления.Сотрудник = БУДополнительныеНачисления.Сотрудник
			|			И ДополнительныеНачисления.СторнируемыйДокумент = БУДополнительныеНачисления.ДокументОснование
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДт,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
			|	НЕОПРЕДЕЛЕНО КАК СчетКт,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУ,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУ,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатрат,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСН,
			|	0 КАК Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно";
			
		КонецЕсли;
		
		Запрос.Текст = ОтражениеВУчетеСторноТекст;
		//временная таблица - ВТ_ОтражениеВУчетеСторно
		Запрос.Выполнить();
		
		//получили отражение в учете сторно записей
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_УчетПлановыхНачислений
		
		УчетПлановыхНачисленийТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ДополнительныеНачисления.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачислениДляПлановый
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ДополнительныеНачисления.Сторно)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период,
		|	ДополнительныеНачисления.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_СведенияОНачислениях
		|ИЗ
		|	ВТ_ДополнительныеНачислениДляПлановый КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ДополнительныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|			И ДополнительныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|			И ДополнительныеНачисления.ДокументОснование = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ДокументОснование
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета,
		|	ДополнительныеНачисления.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.ПустаяСсылка)
		|		ИНАЧЕ РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД
		|	КОНЕЦ КАК ОтнесениеРасходовКДеятельностиЕНВД,
		|	СведенияОНачисленияхСрез.Регистратор КАК Регистратор,
		|	СведенияОНачисленияхСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетПлановыхНачислений
		|ИЗ
		|	РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОНачислениях КАК СведенияОНачисленияхСрез
		|		ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|			И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|			И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|			И (СведенияОНачисленияхСрез.ДокументОснование = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ДокументОснование)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетПлановыхНачисленийТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		ДополнительныеНачисленияТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ПериодРегистрации,
		|	ДополнительныеНачисления.ПодразделениеОрганизации,
		|	ДополнительныеНачисления.ОбособленноеПодразделение
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия)
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ДополнительныеНачисления.Сторно)";
		Запрос.Текст = ДополнительныеНачисленияТекст;
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		// таблица ВТ_УчетОсновногоЗаработка
		
		УчетОсновногоЗаработкаТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(УчетЗарВРеглУчете.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОРаботниках
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ПО ДополнительныеНачисления.Сотрудник = УчетЗарВРеглУчете.Сотрудник
		|			И (УчетЗарВРеглУчете.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетЗарВРеглУчете.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА NULL
		|		ИНАЧЕ УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	СведенияОРаботникахСрез.Регистратор КАК Регистратор,
		|	СведенияОРаботникахСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработка
		|ИЗ
		|	РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОРаботниках КАК СведенияОРаботникахСрез
		|		ПО (СведенияОРаботникахСрез.Сотрудник = УчетЗарВРеглУчете.Сотрудник)
		|			И (СведенияОРаботникахСрез.Период = УчетЗарВРеглУчете.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		// таблица ВТ_УчетОсновногоЗаработкаПодразделения
		
		УчетОсновногоЗаработкаПодразделенияТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	МАКСИМУМ(УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОПодразделениях
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ДополнительныеНачисления.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И (УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.ПодразделениеОрганизации,
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодразделениеОрганизации,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПодразделенияхСрез.Регистратор КАК Регистратор,
		|	СведенияОПодразделенияхСрез.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаПодразделения
		|ИЗ
		|	ВТ_СведенияОПодразделениях КАК СведенияОПодразделенияхСрез
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО СведенияОПодразделенияхСрез.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И СведенияОПодразделенияхСрез.Период = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаПодразделенияТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		// таблица ВТ_УчетОсновногоЗаработкаОрганизации
		
		УчетОсновногоЗаработкаОрганизацииТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	МАКСИМУМ(УчетОсновногоЗаработкаОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияПоОрганизации
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ДополнительныеНачисления.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И (УчетОсновногоЗаработкаОрганизации.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.ОбособленноеПодразделение,
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПоОрганизации.Регистратор КАК Регистратор,
		|	СведенияПоОрганизации.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаОрганизации
		|ИЗ
		|	ВТ_СведенияПоОрганизации КАК СведенияПоОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО СведенияПоОрганизации.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И СведенияПоОрганизации.Период = УчетОсновногоЗаработкаОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаОрганизацииТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		///////////////////////////////////////////////////////////////////////////////////
		
		
		ДанныеУчетаТекст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ДополнительныеНачисления.ВидРасчета.ВидНачисленияПоСт255НК КАК ВидНачисленияПоСт255НК,
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете КАК СтратегияОтраженияВУчете,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДт
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДт
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетДт
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКт
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКт
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКт
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДтНУ
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКтНУ
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКтНУ
		|	КОНЕЦ КАК СчетКтНУ,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ1
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ2
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ3
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ1
		|	КОНЕЦ КАК СубконтоКтНУ1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ2
		|	КОНЕЦ КАК СубконтоКтНУ2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ3
		|	КОНЕЦ КАК СубконтоКтНУ3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СпособРаспределенияЗатрат
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		ИНАЧЕ &парамСпособПоУмолчаниюСпособРаспределенияЗатрат
		|	КОНЕЦ КАК СпособРаспределенияЗатрат,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ОтражениеВУСН
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		ИНАЧЕ &парамСпособПоУмолчаниюОтражениеВУСН
		|	КОНЕЦ КАК ОтражениеВУСН,
		|	ВЫБОР
		|		КОГДА (НЕ &ЕстьЕНВД)
		|			ТОГДА 0
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|			ТОГДА 100
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|			ТОГДА 0
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 100
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 0
		|		КОГДА Распределение.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА Распределение.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА ЕНВДПроцент.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
		|		КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		КОГДА УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентЕНВД,
		|	ЕНВДПроцент.СчетДт КАК СчетЕНВД,
		|	ЕНВДПроцент.Субконто1 КАК Субконто1ЕНВД,
		|	ЕНВДПроцент.Субконто2 КАК Субконто2ЕНВД,
		|	ЕНВДПроцент.Субконто3 КАК Субконто3ЕНВД,
		|	ЕНВДПроцент.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатратЕНВД,
		|	Распределение.ДоляСпособаОтражения КАК ДоляСпособаОтражения,
		|	ДополнительныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ДополнительныеНачисления.Результат КАК Результат,
		|	ДополнительныеНачисления.Сторно КАК Сторно,
		|	ДополнительныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЕдиновременноеПособиеФСС,
		|	ДополнительныеНачисления.Сотрудник.Наименование КАК СотрудникНаименование
		|ПОМЕСТИТЬ ДанныеУчета
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетПлановыхНачислений КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ДополнительныеНачисления.Регистратор = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = РеглУчетПлановыхНачисленийРаботниковОрганизаций.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|		ПО ДополнительныеНачисления.Сотрудник = Распределение.Сотрудник
		|			И (НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = Распределение.ПериодРегистрации)
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете ЕСТЬ NULL )
		|			И (ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия))
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|			И (Распределение.ДоляСпособаОтражения <> 0)
		|			И (ВЫБОР
		|				КОГДА ДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетЗарВРеглУчете
		|		ПО ДополнительныеНачисления.Регистратор = УчетЗарВРеглУчете.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетЗарВРеглУчете.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ДополнительныеНачисления.Регистратор = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ДополнительныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентДеятельностиЕНВДСотрудников КАК ЕНВДПроцент
		|		ПО ДополнительныеНачисления.Сотрудник = ЕНВДПроцент.Сотрудник
		|			И (ЕНВДПроцент.ПериодРегистрации = НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ))
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
		|		ПО (БУДополнительныеНачисления.Сотрудник = ДополнительныеНачисления.Сотрудник)
		|			И (БУДополнительныеНачисления.ВидРасчета = ДополнительныеНачисления.ВидРасчета)
		|			И (НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации)
		|			И (БУДополнительныеНачисления.ДокументОснование = ДополнительныеНачисления.Регистратор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ДополнительныеНачисления.Регистратор = ОтражениеВУчетеСторно.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|ГДЕ
		|	БУДополнительныеНачисления.Сотрудник ЕСТЬ NULL 
		|	И ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ВЫБОР
		|			КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете
		|			КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете
		|			КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете
		|			ИНАЧЕ &парамСпособПоУмолчанию
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)";
		
		Запрос.Текст = ДанныеУчетаТекст;
		//временная таблица - ДанныеУчета
		Запрос.Выполнить();
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&парамГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДанныеУчета.Регистратор КАК Регистратор,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.СотрудникНаименование КАК СотрудникНаименование,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.СчетДт КАК СчетДт,
		|	ДанныеУчета.СчетКт КАК СчетКт,
		|	ДанныеУчета.СубконтоДт1,
		|	ДанныеУчета.СубконтоДт2,
		|	ДанныеУчета.СубконтоДт3,
		|	ДанныеУчета.СубконтоКт1,
		|	ДанныеУчета.СубконтоКт2,
		|	ДанныеУчета.СубконтоКт3,
		|	ДанныеУчета.СчетДтНУ,
		|	ДанныеУчета.СчетКтНУ,
		|	ДанныеУчета.СубконтоДтНУ1,
		|	ДанныеУчета.СубконтоДтНУ2,
		|	ДанныеУчета.СубконтоДтНУ3,
		|	ДанныеУчета.СубконтоКтНУ1,
		|	ДанныеУчета.СубконтоКтНУ2,
		|	ДанныеУчета.СубконтоКтНУ3,
		|	ДанныеУчета.СпособРаспределенияЗатрат,
		|	ДанныеУчета.ОтражениеВУСН,
		|	ДанныеУчета.ПроцентЕНВД,
		|	ДанныеУчета.СчетЕНВД,
		|	ДанныеУчета.Субконто1ЕНВД,
		|	ДанныеУчета.Субконто2ЕНВД,
		|	ДанныеУчета.Субконто3ЕНВД,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.СпособРасчета,
		|	ДанныеУчета.ВидНачисленияПоСт255НК,
		|	ДанныеУчета.СтратегияОтраженияВУчете,
		|	ДанныеУчета.ПодразделениеОрганизации,
		|	ДанныеУчета.Результат,
		|	ДанныеУчета.ПериодРегистрации,
		|	ЛОЖЬ КАК УказанСпособОтраженияВБухучетеЗаСчетРаботодателя,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка) КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДт.НомерСтроки, 0) КАК НомерСубконтоРаботникиДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКт.НомерСтроки, 0) КАК НомерСубконтоРаботникиКт,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДт.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиКтНУ,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДтНУ.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДт.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДт,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДтНУ.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДтНУ,
		|	ЕСТЬNULL(СубконтоСт255НК.НомерСтроки, 0) КАК НомерСубконтоСт255НК,
		|	ЕСТЬNULL(База.СчетДтРазрез, БазаСреднегоЗаработка.СчетДтРазрез) КАК СчетДтРазрез,
		|	ЕСТЬNULL(База.СчетКтРазрез, БазаСреднегоЗаработка.СчетКтРазрез) КАК СчетКтРазрез,
		|	ЕСТЬNULL(База.СубконтоДт1Разрез, БазаСреднегоЗаработка.СубконтоДт1Разрез) КАК СубконтоДт1Разрез,
		|	ЕСТЬNULL(База.СубконтоДт2Разрез, БазаСреднегоЗаработка.СубконтоДт2Разрез) КАК СубконтоДт2Разрез,
		|	ЕСТЬNULL(База.СубконтоДт3Разрез, БазаСреднегоЗаработка.СубконтоДт3Разрез) КАК СубконтоДт3Разрез,
		|	ЕСТЬNULL(База.СубконтоКт1Разрез, БазаСреднегоЗаработка.СубконтоКт1Разрез) КАК СубконтоКт1Разрез,
		|	ЕСТЬNULL(База.СубконтоКт2Разрез, БазаСреднегоЗаработка.СубконтоКт2Разрез) КАК СубконтоКт2Разрез,
		|	ЕСТЬNULL(База.СубконтоКт3Разрез, БазаСреднегоЗаработка.СубконтоКт3Разрез) КАК СубконтоКт3Разрез,
		|	ЕСТЬNULL(База.СчетДтНУРазрез, БазаСреднегоЗаработка.СчетДтНУРазрез) КАК СчетДтНУРазрез,
		|	ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) КАК СчетКтНУРазрез,
		|	ЕСТЬNULL(СубконтоСт255НКБазы.НомерСтроки, 0) КАК НомерСубконтоСт255НКБазы,
		|	ЕСТЬNULL(База.СубконтоДтНУ1Разрез, БазаСреднегоЗаработка.СубконтоДтНУ1Разрез) КАК СубконтоДтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ2Разрез, БазаСреднегоЗаработка.СубконтоДтНУ2Разрез) КАК СубконтоДтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ3Разрез, БазаСреднегоЗаработка.СубконтоДтНУ3Разрез) КАК СубконтоДтНУ3Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ1Разрез, БазаСреднегоЗаработка.СубконтоКтНУ1Разрез) КАК СубконтоКтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ2Разрез, БазаСреднегоЗаработка.СубконтоКтНУ2Разрез) КАК СубконтоКтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ3Разрез, БазаСреднегоЗаработка.СубконтоКтНУ3Разрез) КАК СубконтоКтНУ3Разрез,
		|	ЕСТЬNULL(База.СпособРаспределенияЗатратРазрез, БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез) КАК СпособРаспределенияЗатратРазрез,
		|	ЕСТЬNULL(База.ОтражениеВУСНРазрез, БазаСреднегоЗаработка.ОтражениеВУСНРазрез) КАК ОтражениеВУСНРазрез,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ДоляСпособаОтражения ЕСТЬ НЕ NULL 
		|			ТОГДА ДанныеУчета.ДоляСпособаОтражения
		|		КОГДА База.РезультатБаза ЕСТЬ НЕ NULL 
		|			ТОГДА База.РезультатБаза
		|		ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|	КОНЕЦ КАК РезультатБаза,
		|	ДанныеУчета.Сторно КАК Сторно,
		|	ДанныеУчета.ДоляСпособаОтражения,
		|	ДанныеУчета.ДатаНачалаСобытия,
		|	ДанныеУчета.РезультатСторно КАК РезультатСторно,
		|	ДанныеУчета.ЭтоЕдиновременноеПособиеФСС КАК ЭтоЕдиновременноеПособиеФСС,
		|	ЛОЖЬ КАК ЭтоПособияФСС
		|ИЗ
		|	ДанныеУчета КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоРаботникиДт.Ссылка
		|			И (ВидыСубконтоРаботникиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиКт
		|		ПО (ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетКт = ВидыСубконтоРаботникиКт.Ссылка
		|			И (ВидыСубконтоРаботникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоПодразделенияДт.Ссылка
		|			И (ВидыСубконтоПодразделенияДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоСтатьиЗатратДт.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоСтатьиЗатратДтНУ.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НК
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = СубконтоСт255НК.Ссылка
		|			И (СубконтоСт255НК.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоРаботникиДтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиКтНУ
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = ВидыСубконтоРаботникиКтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиКтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоПодразделенияДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоПодразделенияДтНУ.Ссылка
		|			И (ВидыСубконтоПодразделенияДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ База КАК База
		|		ПО ДанныеУчета.Регистратор = База.Регистратор
		|			И ДанныеУчета.НомерСтроки = База.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.Регистратор = БазаСреднегоЗаработка.Регистратор
		|			И ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НКБазы
		|		ПО (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) = СубконтоСт255НКБазы.Ссылка)
		|			И (СубконтоСт255НКБазы.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Регистратор,
		|	НомерСтроки,
		|	СчетДтРазрез,
		|	СчетДтНУРазрез,
		|	СубконтоДт1Разрез,
		|	СубконтоДт2Разрез,
		|	СубконтоДтНУ1Разрез,
		|	СубконтоДтНУ2Разрез,
		|	ОтражениеВУСНРазрез
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	КонецЕсли;                   
	
	Запрос.УстановитьПараметр("Счет9602", ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов);
	Запрос.УстановитьПараметр("Счет9601", ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов);
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции  // ПолучитьДанныеУчета2010

//////////////////////////////////////////////////////////////////////////////////
// алгоритмы с 2011 год

// Заполняет строку промежуточной таблицы проводками по страховым взносам
Процедура ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СчетКт, СчетКтНУ, Результат, СтатьяРБП, ДополнительнаяСтрока = Ложь)
	
	Если СтрокаОтражения.ЭтоСчет69 Тогда
		
		НоваяСтрока = мТаблицаКомментированияСтраховыеВзносы.Добавить();
		
		НоваяСтрока.Физлицо = СтрокаОтражения.Физлицо;
		НоваяСтрока.Режим = 2;
		
		Если СчетКт = ПланыСчетов.Хозрасчетный.ФСС Тогда
			НоваяСтрока.ВзносыФСС = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ФФОМС Тогда
			НоваяСтрока.ВзносыФФОМС = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ТФОМС Тогда
			НоваяСтрока.ВзносыТФОМС = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_нак Тогда
			НоваяСтрока.ВзносыПФРНакопительная = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_страх Тогда
			НоваяСтрока.ВзносыПФРСтраховая = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп Тогда
			НоваяСтрока.ВзносыДопТариф = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры Тогда
			НоваяСтрока.ВзносыДопТарифШахтеры = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда Тогда
			НоваяСтрока.ВзносыДопТарифТяжелыеИПрочиеРаботы = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда Тогда
			НоваяСтрока.ВзносыДопТарифПодземныеИВредныеРаботы = Результат;	
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ Тогда
			НоваяСтрока.ВзносыФСС_НС = Результат;
		КонецЕсли; 
		
	КонецЕсли;
	
	ОтпускЗаСчетОО = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьБУ и мЕстьОценочноеОбязательствоДляОтпуска;
	ОтпускЗаСчетРезервов = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьНУ и мЕстьОценочноеОбязательствоДляОтпуска;
	
	Если ДополнительнаяСтрока Тогда
		
		// дополнительная строка, отражение в НУ разниц
		Если СтрокаОтражения.ЭтоСчет84 Тогда
			СтрокаТЧ.СчетДт 	 = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаОтражения.ОблагаетсяЕНВД);
			СтрокаТЧ.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");///Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;///Вадим
			СубконтоДт2 = Неопределено;
			СубконтоДт3 = Неопределено;
		Иначе                   
			СтрокаТЧ.СчетДт		 = СтрокаОтражения.СчетДт;
			СтрокаТЧ.СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДт2 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДт3 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
		КонецЕсли;
		СтрокаТЧ.СчетКт			= СчетКт;
		СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
		СтрокаТЧ.Сумма			= 0;
		
		Если ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов Тогда
			СтрокаТЧ.СуммаВР = -1*Результат;
		ИначеЕсли СтрокаОтражения.ПодменятьСчетДтНаРБП Тогда
			СтрокаТЧ.СуммаВР = -1*Результат;
		КонецЕсли;
		СтрокаТЧ.СуммаНУ        = Результат;
		
		СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
		СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
		КонецЕсли;
		
	Иначе
		
		Если СтрокаОтражения.ЭтоСчет84 Тогда
			СчетДт = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаОтражения.ОблагаетсяЕНВД);
			СубконтоДт1 =  Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");///Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;///Вадим;
			СубконтоДт2 = Неопределено;
			СубконтоДт3 = Неопределено;
		ИначеЕсли ОтпускЗаСчетОО Тогда
			СчетДт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
			СубконтоДт1 = мОценочноеОбязательствоДляОтпуска;
			СубконтоДт2 = Неопределено;
			СубконтоДт3 = Неопределено;
		Иначе
			СчетДт      = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов, СтрокаОтражения.СчетДт);
			СубконтоДт1 = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, СтатьяРБП, ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто));
			СубконтоДт2 = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, СтрокаОтражения.Физлицо, ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто));
			СубконтоДт3 = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, Неопределено, ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто));
		КонецЕсли;
		
		СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		
		СтрокаТЧ.СчетДт			= СчетДт;
		СтрокаТЧ.СубконтоДт1	= СубконтоДт1;
		СтрокаТЧ.СубконтоДт2	= СубконтоДт2;
		СтрокаТЧ.СубконтоДт3	= СубконтоДт3;
		СтрокаТЧ.СчетКт			= СчетКт;
		СтрокаТЧ.СубконтоКт1	= СубконтоКт1;
		
		СтрокаТЧ.Сумма			= Результат;
		СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
		СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
		КонецЕсли;
		
		Если мЗаполнятьДанныеНУ Тогда
			
			Если мЗаполнятьСчетаНУ и Не СтрокаОтражения.ОблагаетсяЕНВД Тогда
				
				Если ОтпускЗаСчетРезервов Тогда
					
					СтрокаТЧ.СчетДтНУ		= ПланыСчетов.Налоговый.РезервыПредстоящихРасходов;
					СтрокаТЧ.СубконтоДтНУ1	= мОценочноеОбязательствоДляОтпуска;
					СтрокаТЧ.СубконтоДтНУ2	= Неопределено;
					СтрокаТЧ.СубконтоДтНУ3	= Неопределено;
					
				Иначе	
					
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
					
				КонецЕсли;
				
				СтрокаТЧ.СчетКтНУ		= ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), СчетКтНУ);
				// по РБПСчетДтБУ будем делать подмену счета НУ из соответсвия
				СтрокаТЧ.РБПСчетДтБУ = СтрокаОтражения.СчетДт;
				
			КонецЕсли;
			
			Если Не мЗаполнятьСчетаНУ Тогда
				
				Если ОтпускЗаСчетОО и ОтпускЗаСчетрезервов Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				ИначеЕсли ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов Тогда
					СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
				ИначеЕсли СтрокаОтражения.ПодменятьСчетДтНаРБП Тогда
					СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
				ИначеЕсли Не СтрокаОтражения.ЭтоСчет84 Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет таблицу ПромежуточнаяТаблица проводками
// по страховым взносам
// используется с 2010 год
Процедура ПолучитьПроводкиПоСтраховымВзносам2011(ПромежуточнаяТаблица, ГоловнаяОрганизация, МассивСчетаИсключенияРБП)
	
	// добавим колонку СчДтБУ, в которой будет счет Дт БУ после подмены его на 97 счет
	// по этому значению будем производить замену счета НУ из соответсвия. Действует с 2010 года
	ПромежуточнаяТаблица.Колонки.Добавить("РБПСчетДтБУ", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	мТаблицаКомментированияСтраховыеВзносы = СоздатьТаблицуКомментированияСтраховыхВзносов();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("СчетаИсключенияРБП", МассивСчетаИсключенияРБП);
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение исчисленных страховых взносов в текущем месяце
	
	// Получение коэффициентов отражения страховых взносов  
	МассивПериодовРегистрации = Новый Массив;
	МассивПериодовРегистрации.Добавить(ПериодРегистрации);
	ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2011(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
	
	// запрос по соответствиям статей затрат начислений 
	// для подстановки статей затрат при формировании проводок страховым взносам
	// (перечисление ВидыДополнительныхСтатейЗатрат)
	Запрос.Текст = 
	"ВЫБРАТЬ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
	|ИЗ
	|   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат";
	
	ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
	ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	ТипСтатьиЗатрат = Тип("СправочникСсылка.ПрочиеДоходыИРасходы");
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	// Исчисленные страховые взносы в текущем месяце
	//
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизЛицо,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховая) КАК ПФРСтраховая,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительная) КАК ПФРНакопительная,
	|	СУММА(СтраховыеВзносыИсчисленные.ФСС) КАК ФСС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМС) КАК ФФОМС,
	|	СУММА(СтраховыеВзносыИсчисленные.ТФОМС) КАК ТФОМС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу) КАК ПФРПоДополнительномуТарифу,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНаДоплатуКПенсииШахтерам) КАК ПФРНаДоплатуКПенсииШахтерам,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД) КАК ПФРСтраховаяЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД) КАК ПФРНакопительнаяЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССЕНВД) КАК ФССЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМСЕНВД) КАК ФФОМСЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ТФОМСЕНВД) КАК ТФОМСЕНВД
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Период = &парамПериодРегистрации
	|	И СтраховыеВзносыИсчисленные.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыИсчисленные.ФизЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	РБП_Взносы = Справочники.РасходыБудущихПериодов.РБПНаСтраховыеВзносы;
	РБП_ФСС_НС = Справочники.РасходыБудущихПериодов.РБПНаФСС;
	РБП_ОплатаТруда = Справочники.РасходыБудущихПериодов.РБПНаОплатуТруда;
	Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
	
	СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	Отбор = Новый Структура("ФизЛицо");
	
	// в этой таблице соберем физлиц и суммы взносов, для которых нет базы в текущем месяце
	ТаблицаНетБазы = Новый ТаблицаЗначений;
	ТаблицаНетБазы.Колонки.Добавить("Физлицо");
	ТаблицаНетБазы.Колонки.Добавить("ВидБазы");
	ТаблицаНетБазы.Колонки.Добавить("СуммаВзноса");
	ТаблицаНетБазы.Колонки.Добавить("СчетКт");
	ТаблицаНетБазы.Колонки.Добавить("СчетКтНУ");
	ТаблицаНетБазы.Колонки.Добавить("СтатьяРБП");
	
	Пока Выборка.Следующий() Цикл
		
		Отбор.ФизЛицо = Выборка.ФизЛицо;
		СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		
		Если СтрокиОтраженияПоФизЛицу.Количество() = 0 Тогда
			
			Если Выборка.ФСС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС";
				НоваяСтрока.СуммаВзноса = Выборка.ФСС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФФОМС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ТФОМС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС";
				НоваяСтрока.СуммаВзноса = Выборка.ТФОМС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ТФОМС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРНакопительная <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_нак;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРСтраховая <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_страх;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТариф";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_шахтеры;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифПодземныеИВредныеРаботы";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифТяжелыеИПрочиеРаботы";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФССНесчастныеСлучаи <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_НС";
				НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
				НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
			КонецЕсли;	
			
			Если Выборка.ПФРНакопительнаяЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительнаяЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРСтраховаяЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховаяЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФССЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФССЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФФОМСЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМСЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ТФОМСЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ТФОМСЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Продолжить;		
		КонецЕсли;		
		
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФСС, Коэффициенты);
		
		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМС, Коэффициенты);
		РезультатыТФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ТФОМС, Коэффициенты);
		
		// ПФР 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР");
		РезультатыПФРНакопительная = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНакопительная, Коэффициенты);
		РезультатыПФРСтраховая     = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСтраховая, Коэффициенты);
		
		// доп тариф летчики
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
		РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоДополнительномуТарифу, Коэффициенты);
		
		// доп тариф шахтеры
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифШахтеры");
		РезультатыДопТарифШахтеры = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНаДоплатуКПенсииШахтерам, Коэффициенты);
		
		// доп тариф Работы с вредными условиями 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифПодземныеИВредныеРаботы");
		РезультатыДопТарифПодземныеИВредныеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах, Коэффициенты);
		
		// доп тариф Работы с тяжелыми условиями 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифТяжелыеИПрочиеРаботы");
		РезультатыДопТарифТяжелыеИПрочиеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах, Коэффициенты);
		
		// ФСС_НС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
		РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФССНесчастныеСлучаи, Коэффициенты);
		
		
		// по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРНакопительнаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНакопительнаяЕНВД, Коэффициенты);
		РезультатыПФРСтраховаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСтраховаяЕНВД, Коэффициенты);
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_ЕНВД");
		РезультатыФССЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФССЕНВД, Коэффициенты);
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
		РезультатыФФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМСЕНВД, Коэффициенты);
		РезультатыТФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ТФОМСЕНВД, Коэффициенты);
		
		Если РезультатыФСС = Неопределено и Выборка.ФСС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС";
			НоваяСтрока.СуммаВзноса = Выборка.ФСС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФФОМС = Неопределено и Выборка.ФФОМС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыТФОМС = Неопределено и Выборка.ТФОМС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС";
			НоваяСтрока.СуммаВзноса = Выборка.ТФОМС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ТФОМС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРНакопительная = Неопределено и Выборка.ПФРНакопительная <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительная;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_нак;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРСтраховая = Неопределено и Выборка.ПФРСтраховая <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховая;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_страх;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТариф = Неопределено и Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТариф";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифШахтеры = Неопределено и Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_шахтеры;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифПодземныеИВредныеРаботы = Неопределено и Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифПодземныеИВредныеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифТяжелыеИПрочиеРаботы = Неопределено и Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифТяжелыеИПрочиеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФСС_НС = Неопределено и Выборка.ФССНесчастныеСлучаи <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_НС";
			НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
			НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
		КонецЕсли;
		
		Если РезультатыПФРНакопительнаяЕНВД = Неопределено и Выборка.ПФРНакопительнаяЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНакопительнаяЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_нак;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРСтраховаяЕНВД = Неопределено и Выборка.ПФРСтраховаяЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСтраховаяЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_страх;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФССЕНВД = Неопределено и Выборка.ФССЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФССЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФФОМСЕНВД = Неопределено и Выборка.ФФОМСЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМСЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыТФОМСЕНВД = Неопределено и Выборка.ТФОМСЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ТФОМСЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ТФОМС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			
			ОтпускЗаСчетОО = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьБУ и мЕстьОценочноеОбязательствоДляОтпуска;
			ОтпускЗаСчетРезервов = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьНУ и мЕстьОценочноеОбязательствоДляОтпуска;
			
			//////////////////////////////////////////////////////////
			// страховые взносы
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			////Вадим
			Если не ЗначениеЗаполнено(СтрокаОтражения.ПодразделениеДт) тогда
				СтрокаОтражения.ПодразделениеДт=ПРГ_ПолучитьПодразделениеФизЛица(СтрокаОтражения.ФизЛицо);
			Конецесли;
			///ВадимКонец
			Если РезультатыФСС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФФОМС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыТФОМС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ТФОМС, ПланыСчетов.Налоговый.ТФОМС, РезультатыТФОМС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ТФОМС, ПланыСчетов.Налоговый.ТФОМС, РезультатыТФОМС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРНакопительная <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, ПланыСчетов.Налоговый.ПФР_нак, РезультатыПФРНакопительная[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, ПланыСчетов.Налоговый.ПФР_нак, РезультатыПФРНакопительная[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРСтраховая <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, ПланыСчетов.Налоговый.ПФР_страх, РезультатыПФРСтраховая[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, ПланыСчетов.Налоговый.ПФР_страх, РезультатыПФРСтраховая[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТариф <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТарифШахтеры <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры, ПланыСчетов.Налоговый.ПФР_доп_шахтеры, РезультатыДопТарифШахтеры[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры, ПланыСчетов.Налоговый.ПФР_доп_шахтеры, РезультатыДопТарифШахтеры[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТарифПодземныеИВредныеРаботы <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
							РезультатыДопТарифПодземныеИВредныеРаботы[Индекс], РБП_Взносы);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
								РезультатыДопТарифПодземныеИВредныеРаботы[Индекс], РБП_Взносы, Истина);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыДопТарифТяжелыеИПрочиеРаботы <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
							РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс], РБП_Взносы);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
								РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс], РБП_Взносы, Истина);
					
				КонецЕсли;
				
			КонецЕсли;
			
			// ЕНВД
			Если РезультатыПФРНакопительнаяЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, ПланыСчетов.Налоговый.ПФР_нак, РезультатыПФРНакопительнаяЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_нак, ПланыСчетов.Налоговый.ПФР_нак, РезультатыПФРНакопительнаяЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРСтраховаяЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, ПланыСчетов.Налоговый.ПФР_страх, РезультатыПФРСтраховаяЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_страх, ПланыСчетов.Налоговый.ПФР_страх, РезультатыПФРСтраховаяЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФССЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФССЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФССЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФФОМСЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМСЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМСЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыТФОМСЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ТФОМС, ПланыСчетов.Налоговый.ТФОМС, РезультатыТФОМСЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ТФОМС, ПланыСчетов.Налоговый.ТФОМС, РезультатыТФОМСЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			//////////////////////////////////////////////////////////
			// ФСС_НС
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			
			Если РезультатыФСС_НС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Создадим таблицу в которой соберем информацию по взносам, которые не отражены в учете
	
	Если ТаблицаНетБазы.Количество() > 0 и Не Месяц(ПериодРегистрации) = 1 Тогда
		// есть суммы взносов, которые не отразили в учете из-за отсутствия базы в текущем месяце
		// получим коэффициенты по данным с начала года без текущего месяца
		
		ВремТаблица = ТаблицаНетБазы.Скопировать();
		ВремТаблица.Свернуть("Физлицо");
		МассивФизлиц = ВремТаблица.ВыгрузитьКолонку("Физлицо");
		
		МассивПериодовРегистрации = Новый Массив;
		ДатаНачалаМесяца = НачалоГода(ПериодРегистрации);
		МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		Пока ДатаНачалаМесяца < НачалоМесяца(ПериодРегистрации-1) Цикл
			ДатаНачалаМесяца = НачалоМесяца(КонецМесяца(ДатаНачалаМесяца)+1);
			МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		КонецЦикла;
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2011(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП,МассивФизлиц);
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		МассивСтрокКУдалению = Новый Массив;
		
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			Отбор.ФизЛицо = СтрокаТЗ.ФизЛицо;
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,СтрокаТЗ.ВидБазы);
			Результаты = ОбщегоНазначенияЗК.РаспределитьПропорционально(СтрокаТЗ.СуммаВзноса, Коэффициенты);
			
			Если СтрокаТЗ.ВидБазы = "БазаФСС_НС" Тогда
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			Иначе
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			КонецЕсли;
			
			Если Результаты <> Неопределено Тогда
				МассивСтрокКУдалению.Добавить(СтрокаТЗ); 
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП);
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
						и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
						// добавим еще одну строку
						СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
						ЗаполнитьСтрокуПромежуточнойТаблицы2011(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП, Истина);
					КонецЕсли;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого СтрокаТаблицы Из МассивСтрокКУдалению Цикл
			
			// Добавим строку для комментирования
			ДобавитьСтрокуДляКомментирования(СтрокаТаблицы, 0);
			
			ТаблицаНетБазы.Удалить(СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;	
	
	Если ТаблицаНетБазы.Количество() > 0 Тогда
		//нет базы и с начала года, отразим взносы в Дт 91 счета
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
			 /////Вадим 19.03.2013 14:08:59
			Если не ЗначениеЗаполнено(СтрокаТЧ.ПодразделениеДт) тогда
				СтрокаТЧ.ПодразделениеДт = ПРГ_ПолучитьПодразделениеФизЛица(СтрокаТЗ.физЛицо);
			Конецесли;
            ////ВадимКонец
			СтрокаТЧ.СчетДт			= ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаТЗ.ВидБазы = "БазаПФР_ЕНВД");
			СтрокаТЧ.СубконтоДт1 	= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");///Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;///Вадим;
			СтрокаТЧ.СчетКт			= СтрокаТЗ.СчетКт;
			СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ЗначениеЗаполнено(СтрокаТЗ.СчетКт) Тогда
				СтрокаТЧ.СчетДтНУ		= ПланыСчетов.Налоговый.ПрочиеКосвенныеРасходы;
				СтрокаТЧ.СубконтоДтНУ1 	= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");///Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;///Вадим;
				СтрокаТЧ.СчетКтНУ		= СтрокаТЗ.СчетКтНУ;
			КонецЕсли;
			
			СтрокаТЧ.Сумма			= СтрокаТЗ.СуммаВзноса;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
			КонецЕсли;
			
			// Добавим строку для комментирования
			ДобавитьСтрокуДляКомментирования(СтрокаТЗ, 1);
			
		КонецЦикла;
	КонецЕсли;	
	
	// отражение исчисленных страховых взносов в текущем месяце
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Списание РБП
	
	// подготовим данные по РБП
	// необходимо списать из РБП остатки взносов от 2010 года
	ДатаДействияПриказа186Н = ОтражениеЗарплатыВРеглУчетеДополнительный.ДатаДействияПриказа186Н();
	
	Запрос.УстановитьПараметр("ДатаДействияПриказа186Н",ДатаДействияПриказа186Н);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации < &ДатаДействияПриказа186Н
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	
	ТаблицаРБП =  Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРБП.Количество()>0 Тогда
		
		ВремТаблица = ТаблицаРБП.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБП.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБП.ВыгрузитьКолонку("Физлицо");
		
		СформироватьПроводкиСписанияРБПВзносам2010(ПромежуточнаяТаблица, ПараметрыПолученияСубконто, МассивПериодовРегистрации, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, МассивФизлиц);
		
	КонецЕсли;
	
	// подготовим данные по РБП
	// необходимо списать из РБП взносы того периода с 2011 года в котором мПорядокПризнанияРасходовПоОтпускам  =  Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска
	
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ДатаДействияПриказа186Н,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы до ПериоРегистрации
	ОчереднойПериод = ДобавитьМесяц(ДатаДействияПриказа186Н,1);
	Пока ОчереднойПериод < ПериодРегистрации Цикл
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ОчереднойПериод,"ДФ=гггг,М,д,Ч,м,с") + ")";
		ОчереднойПериод = ДобавитьМесяц(ОчереднойПериод,1);

	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить(); 
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	МАКСИМУМ(УчетнаяПолитикаПоРБП.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТ_ПериодыРБП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_Периоды.Период >= УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыРБП.Период КАК Период
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаПоРБП
	|ИЗ
	|	ВТ_ПериодыРБП КАК ВТ_ПериодыРБП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_ПериодыРБП.ПериодРегистра = УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|			И (УчетнаяПолитикаПоРБП.РасходыПоОтпускам = ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска))
	|ГДЕ
	|	(НЕ УчетнаяПолитикаПоРБП.Период ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации В
	|			(ВЫБРАТЬ
	|				ВТ_УчетнаяПолитикаПоРБП.Период
	|			ИЗ
	|				ВТ_УчетнаяПолитикаПоРБП)
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	ТаблицаРБП =  Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРБП.Количество()>0 Тогда
		
		ВремТаблица = ТаблицаРБП.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБП.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБП.ВыгрузитьКолонку("Физлицо");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТ_Счета69
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетов69)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_11
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФСС_НС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФСС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРСтраховая,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_02
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРНакопительная,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФФОМС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_02
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТФОМС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_03
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТариф,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_04
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифШахтеры,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_05
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифВредныеУсловияТруда,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_06
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифТяжелыеУсловияТруда,
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
		|	ДвиженияВУчете.СубконтоДт2 КАК ФизЛицо
		|ИЗ
		|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ДвиженияВУчете
		|ГДЕ
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации В(&ПериодыРегистрации)
		|	И ДвиженияВУчете.СчетДт = &Счет97
		|	И ДвиженияВУчете.СчетКт В
		|			(ВЫБРАТЬ
		|				ВТ_Счета69.Счет
		|			ИЗ
		|				ВТ_Счета69)
		|	И ДвиженияВУчете.Ссылка.Организация = &парамОбособленноеПодразделение
		|	И ДвиженияВУчете.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации,
		|	ДвиженияВУчете.СубконтоДт2";
		
		Запрос.УстановитьПараметр("СписокСчетов69", ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
		Запрос.УстановитьПараметр("ПериодыРегистрации",	МассивПериодовРегистрации);
		Запрос.УстановитьПараметр("Счет69_01",			ПланыСчетов.Хозрасчетный.ФСС);
		Запрос.УстановитьПараметр("Счет69_02_01",		ПланыСчетов.Хозрасчетный.ПФР_страх);
		Запрос.УстановитьПараметр("Счет69_02_02",		ПланыСчетов.Хозрасчетный.ПФР_нак);   
		Запрос.УстановитьПараметр("Счет69_02_03",		ПланыСчетов.Хозрасчетный.ПФР_доп);
		Запрос.УстановитьПараметр("Счет69_02_04",		ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
		Запрос.УстановитьПараметр("Счет69_02_05",		ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
		Запрос.УстановитьПараметр("Счет69_02_06",		ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
		Запрос.УстановитьПараметр("Счет69_03_01",		ПланыСчетов.Хозрасчетный.ФФОМС);
		Запрос.УстановитьПараметр("Счет69_03_02",		ПланыСчетов.Хозрасчетный.ТФОМС);
		Запрос.УстановитьПараметр("Счет69_11",			ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		Запрос.УстановитьПараметр("Счет97",				ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);		
		
		РезультатЗапроса = Запрос.Выполнить();
		
		// получим таблицу с детализацией по периоду действия
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2011(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП, МассивФизлиц, Ложь);
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		ОтборПоФизлицу = Новый Структура("ПериодРегистрации,ФизЛицо");
		ОтборПоПериодуДействия = Новый Структура("ФизЛицо, ПериодРегистрации, ПериодДействия");
		ОтборПоПериодуДействия.ПериодДействия = ПериодРегистрации;
		
		ТаблицаКоэффициентовПоПериодуДействия = ТаблицаКоэффициентов.Скопировать();
		ТаблицаКоэффициентовПоПериодуДействия.Свернуть("ПериодРегистрации,ФизЛицо,ПериодДействия","БазаПФР,БазаФСС,БазаФОМС,БазаПФР_ЕНВД,БазаФСС_ЕНВД,БазаФОМС_ЕНВД,БазаДопТариф,БазаДопТарифШахтеры,БазаФСС_НС,БазаДопТарифПодземныеИВредныеРаботы,БазаДопТарифТяжелыеИПрочиеРаботы");
		ТаблицаКоэффициентовПоПериодуДействия.Сортировать("ПериодРегистрации,ФизЛицо,ПериодДействия");
		
		Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
		СчетН97 = ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			ОтборПоФизлицу.ПериодРегистрации	= Выборка.ПериодРегистрации;
			ОтборПоФизлицу.ФизЛицо				= Выборка.ФизЛицо;
			СтрокиПериодовДействия = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоФизлицу);
			
			ОтборПоПериодуДействия.ФизЛицо				= Выборка.ФизЛицо;
			ОтборПоПериодуДействия.ПериодРегистрации	= Выборка.ПериодРегистрации;
			СтрокиОтражения = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоПериодуДействия);
			Если СтрокиОтражения.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(ОтборПоПериодуДействия);
			ВсегоДоходовФСС				= 0;
			ВсегоДоходовФОМС			= 0;
			ВсегоДоходовПФР				= 0;
			ВсегоДоходовДопТариф		= 0;
			ВсегоДоходовДопТарифШахтеры = 0;
			ВсегоДоходовВредныеУсловияТруда = 0;
			ВсегоДоходовТяжелыеУсловияТруда = 0;
			ВсегоДоходовФСС_НС			= 0;
			ВсегоДоходовФССЕНВД			= 0;
			ВсегоДоходовФОМСЕНВД		= 0;
			ВсегоДоходовПФРЕНВД			= 0;
			
			КолвоЭлементовКоллекции = СтрокиПериодовДействия.Количество(); 
			Для ОбратныйИндекс = 1 По КолвоЭлементовКоллекции Цикл 
				ЭлементКоллекции = СтрокиПериодовДействия[КолвоЭлементовКоллекции - ОбратныйИндекс]; 
				Если ЭлементКоллекции.ПериодДействия <= ЭлементКоллекции.ПериодРегистрации Тогда 
					СтрокиПериодовДействия.Удалить(КолвоЭлементовКоллекции - ОбратныйИндекс);
				Иначе
					ВсегоДоходовФСС  = ВсегоДоходовФСС + ЭлементКоллекции.БазаФСС;
					ВсегоДоходовФОМС = ВсегоДоходовФОМС + ЭлементКоллекции.БазаФОМС;
					ВсегоДоходовПФР  = ВсегоДоходовПФР + ЭлементКоллекции.БазаПФР;
					ВсегоДоходовДопТариф = ВсегоДоходовДопТариф + ЭлементКоллекции.БазаДопТариф;
					ВсегоДоходовДопТарифШахтеры = ВсегоДоходовДопТарифШахтеры + ЭлементКоллекции.БазаДопТарифШахтеры;
					ВсегоДоходовВредныеУсловияТруда = ВсегоДоходовВредныеУсловияТруда + ЭлементКоллекции.БазаДопТарифПодземныеИВредныеРаботы;
					ВсегоДоходовТяжелыеУсловияТруда = ВсегоДоходовТяжелыеУсловияТруда + ЭлементКоллекции.БазаДопТарифТяжелыеИПрочиеРаботы;
					ВсегоДоходовФСС_НС   = ВсегоДоходовФСС_НС + ЭлементКоллекции.БазаФСС_НС;
					ВсегоДоходовФССЕНВД  = ВсегоДоходовФССЕНВД + ЭлементКоллекции.БазаФСС_ЕНВД;
					ВсегоДоходовФОМСЕНВД = ВсегоДоходовФОМСЕНВД + ЭлементКоллекции.БазаФОМС_ЕНВД;
					ВсегоДоходовПФРЕНВД  = ВсегоДоходовПФРЕНВД + ЭлементКоллекции.БазаПФР_ЕНВД;
				КонецЕсли;
			КонецЦикла;
			
			// выделяем долю текущего месяца (ранее это был период действия)
			Если СтрокиПериодовДействия.Количество() > 1 Тогда
				
				Если ВсегоДоходовДопТариф = 0 Тогда
					МесячнаяДоляДопТариф = Выборка.ДопТариф;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТариф * СтрокаПериода.БазаДопТариф / ВсегоДоходовДопТариф,2);
					КонецЦикла;
					МесячнаяДоляДопТариф = Выборка.ДопТариф - БылоОтраженоРанее
				Иначе
					МесячнаяДоляДопТариф = Окр(Выборка.ДопТариф * СтрокиОтражения[0].БазаДопТариф / ВсегоДоходовДопТариф,2);
				КонецЕсли;
				
				Если ВсегоДоходовДопТарифШахтеры = 0 Тогда
					МесячнаяДоляДопТарифШахтеры = Выборка.ДопТарифШахтеры;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифШахтеры * СтрокаПериода.БазаДопТарифШахтеры / ВсегоДоходовДопТарифШахтеры,2);
					КонецЦикла;
					МесячнаяДоляДопТарифШахтеры = Выборка.ДопТарифШахтеры - БылоОтраженоРанее
				Иначе
					МесячнаяДоляДопТарифШахтеры = Окр(Выборка.ДопТарифШахтеры * СтрокиОтражения[0].БазаДопТарифШахтеры / ВсегоДоходовДопТарифШахтеры,2);
				КонецЕсли;
				
				Если ВсегоДоходовВредныеУсловияТруда = 0 Тогда
					МесячнаяДоляВредныеУсловияТруда = Выборка.ДопТарифВредныеУсловияТруда;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифВредныеУсловияТруда * СтрокаПериода.БазаДопТарифПодземныеИВредныеРаботы / ВсегоДоходовВредныеУсловияТруда,2);
					КонецЦикла;
					МесячнаяДоляВредныеУсловияТруда = Выборка.ДопТарифВредныеУсловияТруда - БылоОтраженоРанее
				Иначе
					МесячнаяДоляВредныеУсловияТруда = Окр(Выборка.ДопТарифВредныеУсловияТруда * СтрокиОтражения[0].БазаДопТарифПодземныеИВредныеРаботы / ВсегоДоходовВредныеУсловияТруда,2);
				КонецЕсли;
				
				Если ВсегоДоходовТяжелыеУсловияТруда = 0 Тогда
					МесячнаяДоляТяжелыеУсловияТруда = Выборка.ДопТарифТяжелыеУсловияТруда;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифТяжелыеУсловияТруда * СтрокаПериода.БазаДопТарифТяжелыеИПрочиеРаботы / ВсегоДоходовТяжелыеУсловияТруда,2);
					КонецЦикла;
					МесячнаяДоляТяжелыеУсловияТруда = Выборка.ДопТарифТяжелыеУсловияТруда - БылоОтраженоРанее
				Иначе
					МесячнаяДоляТяжелыеУсловияТруда = Окр(Выборка.ДопТарифТяжелыеУсловияТруда * СтрокиОтражения[0].БазаДопТарифТяжелыеИПрочиеРаботы / ВсегоДоходовТяжелыеУсловияТруда,2);
				КонецЕсли;
				
				Если ВсегоДоходовФСС_НС = 0 Тогда
					МесячнаяДоляФСС_НС = Выборка.ФСС_НС;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС_НС * СтрокаПериода.БазаФСС_НС / ВсегоДоходовФСС_НС,2);
					КонецЦикла;
					МесячнаяДоляФСС_НС = Выборка.ФСС_НС - БылоОтраженоРанее
				Иначе
					МесячнаяДоляФСС_НС = Окр(Выборка.ФСС_НС * СтрокиОтражения[0].БазаФСС_НС / ВсегоДоходовФСС_НС,2);
				КонецЕсли;				
				
				Если ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД = 0 Тогда
					МесячнаяДоляПФРСтраховая = Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная;
					МесячнаяДоляПФРСтраховаяЕНВД = -Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительнаяЕНВД = -Выборка.ПФРНакопительная;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанееПФРСтраховая = 0;
					БылоОтраженоРанееПФРНакопительная = 0;
					БылоОтраженоРанееПФРСтраховаяЕНВД = 0;
					БылоОтраженоРанееПФРНакопительнаяЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанееПФРСтраховая = БылоОтраженоРанееПФРСтраховая + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРНакопительная = БылоОтраженоРанееПФРНакопительная + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСтраховаяЕНВД = БылоОтраженоРанееПФРСтраховаяЕНВД + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРНакопительнаяЕНВД = БылоОтраженоРанееПФРНакопительнаяЕНВД + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР_ЕНВД = 0 Тогда
						МесячнаяДоляПФРСтраховая = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховаяЕНВД = 0;
						МесячнаяДоляПФРНакопительнаяЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР = 0 Тогда
						МесячнаяДоляПФРСтраховаяЕНВД = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительнаяЕНВД = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховая = 0;
						МесячнаяДоляПФРНакопительная = 0;
					Иначе
						МесячнаяДоляПФРСтраховаяЕНВД     = Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительнаяЕНВД = Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховая     = Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховаяЕНВД - БылоОтраженоРанееПФРСтраховаяЕНВД - БылоОтраженоРанееПФРСтраховая;
						МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительнаяЕНВД - БылоОтраженоРанееПФРНакопительнаяЕНВД - БылоОтраженоРанееПФРНакопительная;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД);
					МесячнаяДоляПФРСтраховая = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
					МесячнаяДоляПФРНакопительная = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД);
					МесячнаяДоляПФРСтраховаяЕНВД = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
					МесячнаяДоляПФРНакопительнаяЕНВД = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
				КонецЕсли;
				
				Если ВсегоДоходовФСС + ВсегоДоходовФССЕНВД = 0 Тогда
					МесячнаяДоляФСС     = Выборка.ФСС;
					МесячнаяДоляФССЕНВД = -Выборка.ФСС;

				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					БылоОтраженоРанееЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
						БылоОтраженоРанееЕНВД = БылоОтраженоРанееЕНВД + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС_ЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФСС_ЕНВД = 0 Тогда
						МесячнаяДоляФСС = Выборка.ФСС - БылоОтраженоРанее - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФССЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФСС = 0 Тогда
						МесячнаяДоляФССЕНВД = Выборка.ФСС - БылоОтраженоРанее - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФСС = 0;
					Иначе
						МесячнаяДоляФССЕНВД = Окр(Выборка.ФСС * ВсегоДоходовФССЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2) - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФСС     = Выборка.ФСС - МесячнаяДоляФССЕНВД - БылоОтраженоРанееЕНВД - БылоОтраженоРанее;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаФСС / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД);
					МесячнаяДоляФСС = Окр(Выборка.ФСС * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаФСС_ЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД);
					МесячнаяДоляФССЕНВД = Окр(Выборка.ФСС * ТекущийКоэффициент,2);
				КонецЕсли;
				
				Если ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД = 0 Тогда
					МесячнаяДоляФФОМС = Выборка.ФФОМС;
					МесячнаяДоляТФОМС = Выборка.ТФОМС;
					МесячнаяДоляФФОМСЕНВД = -Выборка.ФФОМС;
					МесячнаяДоляТФОМСЕНВД = -Выборка.ТФОМС;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанееФФОМС = 0;
					БылоОтраженоРанееТФОМС = 0;
					БылоОтраженоРанееФФОМСЕНВД = 0;
					БылоОтраженоРанееТФОМСЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанееФФОМС = БылоОтраженоРанееФФОМС + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееТФОМС = БылоОтраженоРанееТФОМС + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееФФОМСЕНВД = БылоОтраженоРанееФФОМСЕНВД + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееТФОМСЕНВД = БылоОтраженоРанееТФОМСЕНВД + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФОМС_ЕНВД = 0 Тогда
						МесячнаяДоляФФОМС = Выборка.ФФОМС - БылоОтраженоРанееФФОМС - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМС = Выборка.ТФОМС - БылоОтраженоРанееТФОМС - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМСЕНВД = 0;
						МесячнаяДоляТФОМСЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФОМС = 0 Тогда
						МесячнаяДоляФФОМСЕНВД = Выборка.ФФОМС - БылоОтраженоРанееФФОМС - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМСЕНВД = Выборка.ТФОМС - БылоОтраженоРанееТФОМС - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМС = 0;
						МесячнаяДоляТФОМС = 0;
					Иначе
						МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2) - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2) - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМС     = Выборка.ФФОМС - МесячнаяДоляФФОМСЕНВД - БылоОтраженоРанееФФОМСЕНВД - БылоОтраженоРанееФФОМС;
						МесячнаяДоляТФОМС     = Выборка.ТФОМС - МесячнаяДоляТФОМСЕНВД - БылоОтраженоРанееТФОМСЕНВД - БылоОтраженоРанееТФОМС;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД);
					МесячнаяДоляФФОМС = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
					МесячнаяДоляТФОМС = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД);
					МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
					МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
				КонецЕсли;
				
			Иначе
				// за другие месяцы ничего в РБП не относили
				МесячнаяДоляДопТариф			= Выборка.ДопТариф;
				МесячнаяДоляДопТарифШахтеры		= Выборка.ДопТарифШахтеры;
				МесячнаяДоляВредныеУсловияТруда			= Выборка.ДопТарифВредныеУсловияТруда;
				МесячнаяДоляТяжелыеУсловияТруда			= Выборка.ДопТарифТяжелыеУсловияТруда;
				МесячнаяДоляФСС_НС				= Выборка.ФСС_НС;
				
				Если ВсегоДоходовПФРЕНВД = 0 Тогда
					МесячнаяДоляПФРСтраховая		= Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительная	= Выборка.ПФРНакопительная;
					МесячнаяДоляПФРСтраховаяЕНВД		= 0;
					МесячнаяДоляПФРНакопительнаяЕНВД	= 0;
				ИначеЕсли ВсегоДоходовПФР = 0 Тогда
					МесячнаяДоляПФРСтраховая		= 0;
					МесячнаяДоляПФРНакопительная    = 0;
					МесячнаяДоляПФРСтраховаяЕНВД		= Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительнаяЕНВД	= Выборка.ПФРНакопительная;
				Иначе
					МесячнаяДоляПФРСтраховаяЕНВД		= Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРНакопительнаяЕНВД	= Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРСтраховая		= Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховаяЕНВД;
					МесячнаяДоляПФРНакопительная	= Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительнаяЕНВД;
				КонецЕсли;
				
				Если ВсегоДоходовФССЕНВД = 0 Тогда
					МесячнаяДоляФСС		= Выборка.ФСС;
					МесячнаяДоляФССЕНВД	= 0;
				ИначеЕсли ВсегоДоходовФСС = 0 Тогда
					МесячнаяДоляФСС		= 0;
					МесячнаяДоляФССЕНВД	= Выборка.ФСС;
				Иначе
					МесячнаяДоляФССЕНВД	= Окр(Выборка.ФСС * ВсегоДоходовФССЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
					МесячнаяДоляФСС		= Выборка.ФСС - МесячнаяДоляФССЕНВД;
				КонецЕсли;
				
				Если ВсегоДоходовФОМСЕНВД = 0 Тогда
					МесячнаяДоляФФОМС = Выборка.ФФОМС;
					МесячнаяДоляТФОМС = Выборка.ТФОМС;
					МесячнаяДоляФФОМСЕНВД = 0;
					МесячнаяДоляТФОМСЕНВД = 0;
				ИначеЕсли ВсегоДоходовФОМС = 0 Тогда
					МесячнаяДоляФФОМСЕНВД = Выборка.ФФОМС;
					МесячнаяДоляТФОМСЕНВД = Выборка.ТФОМС;
					МесячнаяДоляФФОМС = 0;
					МесячнаяДоляТФОМС = 0;
				Иначе
					МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					МесячнаяДоляФФОМС     = Выборка.ФФОМС - МесячнаяДоляФФОМСЕНВД;
					МесячнаяДоляТФОМС     = Выборка.ТФОМС - МесячнаяДоляТФОМСЕНВД;
				КонецЕсли;
				
			КонецЕсли;
			
			// ФСС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
			РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_ЕНВД");
			РезультатыФССЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФССЕНВД, Коэффициенты);
			
			// ФОМС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
			РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМС, Коэффициенты);
			РезультатыТФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМС, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
			РезультатыФФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМСЕНВД, Коэффициенты);
			РезультатыТФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМСЕНВД, Коэффициенты);
			
			// ПФР
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР");
			РезультатыПФРНакопительная = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительная, Коэффициенты);
			РезультатыПФРСтраховая = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховая, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
			РезультатыПФРНакопительнаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительнаяЕНВД, Коэффициенты);
			РезультатыПФРСтраховаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховаяЕНВД, Коэффициенты);
			
			// ДопТариф летчики
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
			РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляДопТариф, Коэффициенты);
			
			// ДопТариф шахтеры
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифШахтеры");
			РезультатыДопТарифШахтеры = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляДопТарифШахтеры, Коэффициенты);
			
			// доп тариф Работы с вредными условиями 
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифПодземныеИВредныеРаботы");
			РезультатыДопТарифПодземныеИВредныеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляВредныеУсловияТруда, Коэффициенты);
		
			// доп тариф Работы с тяжелыми условиями 
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифТяжелыеИПрочиеРаботы");
			РезультатыДопТарифТяжелыеИПрочиеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТяжелыеУсловияТруда, Коэффициенты);
			
			// ФСС_НС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
			РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС_НС, Коэффициенты);			
			
			Индекс = 0;
			Для каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
				
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				
				Если РезультатыФСС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт			= Счет97;
					СтрокаТЧ.СубконтоКт1 	= РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 	= Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФСС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыТФОМС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт 		= Счет97;
					СтрокаТЧ.СубконтоКт1	= РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 	= Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыТФОМС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФФОМС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт 		= Счет97;
					СтрокаТЧ.СубконтоКт1 	= РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 	= Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФФОМС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРНакопительная <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт 		= Счет97;
					СтрокаТЧ.СубконтоКт1 	= РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 	= Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРНакопительная[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСтраховая <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт 		= Счет97;
					СтрокаТЧ.СубконтоКт1 	= РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 	= Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСтраховая[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРНакопительнаяЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРНакопительнаяЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСтраховаяЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСтраховаяЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФССЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФССЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыТФОМСЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыТФОМСЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФФОМСЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФФОМСЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТариф <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт 		= Счет97;
					СтрокаТЧ.СубконтоКт1 	= РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 	= Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТариф[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТарифШахтеры <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт 		= Счет97;
					СтрокаТЧ.СубконтоКт1 	= РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 	= Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифШахтеры[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТарифПодземныеИВредныеРаботы <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифПодземныеИВредныеРаботы[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТарифТяжелыеИПрочиеРаботы <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				//////////////////////////////////////////////////////////
				// ФСС_НС
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				Если РезультатыФСС_НС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт 		= Счет97;
					СтрокаТЧ.СубконтоКт1 	= РБП_ФСС_НС;
					СтрокаТЧ.СубконтоКт2 	= Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФСС_НС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;	// конец списания РБП
	// со счета учета расходов будущих периодов в затраты
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// вычеркнем обнулившиеся суммы
	СвернутьТаблицуПроводок(ПромежуточнаяТаблица,",РБПСчетДтБУ");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// замена счетов НУ по регистру соответствий
	//
	
	Если мЗаполнятьДанныеНУ И мЗаполнятьСчетаНУ И мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете = Перечисления.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.НаСчетахЗатратСоответствующихСчетамБухУчета Тогда
		
		СчетаНУ = Новый Массив;
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств);
		Запрос.УстановитьПараметр("СчетаНУ",СчетаНУ);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Налоговый.Ссылка
		|ИЗ
		|	ПланСчетов.Налоговый КАК Налоговый
		|ГДЕ
		|	Налоговый.Ссылка В ИЕРАРХИИ(&СчетаНУ)";
		МассивСчетаНУ = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		СчетаНалоговСФОТ = Новый Массив;
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак); 
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ТФОМС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ЕСН_ФБ);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		
		Запрос.УстановитьПараметр("СчетаНалоговСФОТ", СчетаНалоговСФОТ);
		Запрос.УстановитьПараметр("СчетаНУ", МассивСчетаНУ);
		Запрос.УстановитьПараметр("ТаблицаПроводок", ПромежуточнаяТаблица);  
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания
				/////Вадим 18.10.2012 10:37:57
        | 	,ТаблицаПроводок.ПодразделениеДт
  		////ВадимКонец
		|ПОМЕСТИТЬ ВТ_Проводки
		|ИЗ
		|	&ТаблицаПроводок КАК ТаблицаПроводок";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт2.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт2,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт3.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт3
			/////Вадим 18.10.2012 10:37:57
        | 	,ТаблицаПроводок.ПодразделениеДт
  		////ВадимКонец
		|ПОМЕСТИТЬ ВТ_ТаблицаПроводок
		|ИЗ
		|	ВТ_Проводки КАК ТаблицаПроводок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РБПСчетДтБУ,
		|	СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий1
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий2
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий3
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий4
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1 КАК СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2 КАК СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3 КАК СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1 КАК СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2 КАК СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3 КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СчетКт В (&СчетаНалоговСФОТ)
		|				И ТаблицаПроводок.СчетДтНУ В (&СчетаНУ)
		|			ТОГДА ЕСТЬNULL(Налоговый.Ссылка, ТаблицаПроводок.СчетДтНУ)
		|		ИНАЧЕ ТаблицаПроводок.СчетДтНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ТаблицаПроводок.СчетДтНУ КАК СтарыйСчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ КАК СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3 КАК СубконтоКтНУ3,
		|	ТаблицаПроводок.Сумма КАК Сумма,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН КАК ОтражениеВУСН,
		|	ТаблицаПроводок.ВидНачисленияУдержания КАК ВидНачисленияУдержания
			/////Вадим 18.10.2012 10:37:57
        | 	,ТаблицаПроводок.ПодразделениеДт
  		////ВадимКонец
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчете
		|ИЗ
		|	ВТ_ТаблицаПроводок КАК ТаблицаПроводок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий1 КАК ТаблицаСоответствий1
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий1.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий1.СчетКоррБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий2 КАК ТаблицаСоответствий2
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий2.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий2.СчетКоррБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий3 КАК ТаблицаСоответствий3
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий3.СчетБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий4 КАК ТаблицаСоответствий4
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий4.СчетБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый КАК Налоговый
		|		ПО (ВЫБОР
		|				КОГДА ТаблицаСоответствий1.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий1.СчетНУ
		|				КОГДА ТаблицаСоответствий2.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий2.СчетНУ
		|				КОГДА ТаблицаСоответствий3.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий3.СчетНУ
		|				КОГДА ТаблицаСоответствий4.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий4.СчетНУ
		|				ИНАЧЕ """"
		|			КОНЕЦ = Налоговый.Код)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетДтНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтражениеВУчете.СчетДт КАК СчетДт,
		|	ОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
		|	ОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
		|	ОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
		|	ОтражениеВУчете.СчетКт,
		|	ОтражениеВУчете.СубконтоКт1,
		|	ОтражениеВУчете.СубконтоКт2,
		|	ОтражениеВУчете.СубконтоКт3,
		|	ОтражениеВУчете.СчетДтНУ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ЛОЖЬ
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОбрабатыватьСубконтоНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто1.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто1,
		|	НалоговыйСталиВидыСубконто1.ВидСубконто.ТипЗначения КАК ТипЗначения1,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто2.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто2,
		|	НалоговыйСталиВидыСубконто2.ВидСубконто.ТипЗначения КАК ТипЗначения2,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто3.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто3,
		|	НалоговыйСталиВидыСубконто3.ВидСубконто.ТипЗначения КАК ТипЗначения3,
		|	ОтражениеВУчете.СчетКтНУ,
		|	ОтражениеВУчете.СубконтоКтНУ1,
		|	ОтражениеВУчете.СубконтоКтНУ2,
		|	ОтражениеВУчете.СубконтоКтНУ3,
		|	ОтражениеВУчете.СпособРаспределенияЗатрат,
		|	ОтражениеВУчете.ОтражениеВУСН,
		|	ОтражениеВУчете.Сумма,
		|	ОтражениеВУчете.ВидНачисленияУдержания
			/////Вадим 18.10.2012 10:37:57
        | 	,ОтражениеВУчете.ПодразделениеДт
  		////ВадимКонец
		|ИЗ
		|	ВТ_ОтражениеВУчете КАК ОтражениеВУчете
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто1
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйСталиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто2
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйСталиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто3
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйСталиВидыСубконто3.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто1
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйБылиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто2
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйБылиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто3
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйБылиВидыСубконто3.НомерСтроки)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетДт,
		|	СубконтоДт1,
		|	СубконтоДт2,
		|	СубконтоДт3,
		|	СчетДтНУ,
		|	СубконтоДтНУ1,
		|	СубконтоДтНУ2,
		|	СубконтоДтНУ3
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		ТаблицаПослеПодмен = Запрос.Выполнить().Выгрузить();
		Для каждого СтрокаРезультата Из ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("ОбрабатыватьСубконтоНУ",Истина)) Цикл
			Если СтрокаРезультата.ЕстьСубконто1 И СтрокаРезультата.СубконтоДтНУ1 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ1 = СтрокаРезультата.ТипЗначения1.ПривестиЗначение()
			КонецЕсли;
			Если СтрокаРезультата.ЕстьСубконто2 И СтрокаРезультата.СубконтоДтНУ2 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ2 = СтрокаРезультата.ТипЗначения2.ПривестиЗначение()
			КонецЕсли;
			Если СтрокаРезультата.ЕстьСубконто3 И СтрокаРезультата.СубконтоДтНУ3 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ3 = СтрокаРезультата.ТипЗначения3.ПривестиЗначение()
			КонецЕсли;
		КонецЦикла; 
		
		ТаблицаПослеПодмен.Свернуть("СчетДт,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,СпособРаспределенияЗатрат,
		|СчетДтНУ,СчетКтНУ,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3,
		|ОтражениеВУСН,ВидНачисленияУдержания
		/////Вадим 18.10.2012 10:29:46
        |,ПодразделениеДт
  
  		////ВадимКонец
		|", "Сумма");
		
		НулевыеСтроки = ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("Сумма",0));
		Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
			ТаблицаПослеПодмен.Удалить(СтрокаТаблицы)
		КонецЦикла;
		
		ПромежуточнаяТаблица = ТаблицаПослеПодмен.Скопировать();
		
	КонецЕсли;
	
	//
	// замена счетов НУ по регистру соответствий
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// заменим счет Дт 69 на счет 91
	ПроверитьИСкорректироватьПроводкиПоВзносам(ПромежуточнаяТаблица);
	
	// Если есть что прокомментировать - сделаем это
	Если мТаблицаКомментированияСтраховыеВзносы.Количество() > 0 Тогда
		
		//Режим 0 - взносы распределены по базе с начала года
		//		1 - нет базы по взносам, все отправили на счет 91
		//		2 - взносы в Дт 91, исчисленные с начислений отнесенных в дт 69 счета
		
		ПараметрыОтбора = Новый Структура;
		
		// Соберем строки относящиеся к распределнию по базе с начала года
		ПараметрыОтбора.Вставить("Режим", 0);
		МассивСтрокСНачалаГода = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу распределенных по базе с начала года
		ТаблицаКомментированияСНачалаГода = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокСНачалаГода);
		ТаблицаКомментированияСНачалаГода.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыТФОМС, ВзносыПФРНакопительная, ВзносыПФРСтраховая,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");
		
		// Получим таблицу распределенных по базе с начала года (в части ЕНВД)
		ТаблицаКомментированияСНачалаГодаЕНВД = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокСНачалаГода);
		ТаблицаКомментированияСНачалаГодаЕНВД.Свернуть("Физлицо", "ВзносыПФРНакопительная_ЕНВД, ВзносыПФРСтраховая_ЕНВД, ВзносыФСС_ЕНВД,"
			+ "ВзносыФФОМС_ЕНВД, ВзносыТФОМС_ЕНВД");
			
		// Соберем строки относящиеся к отсутствию базы
		ПараметрыОтбора.Вставить("Режим", 1);
		МассивСтрокНетБазы = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу для которых не нашлось базы
		ТаблицаКомментированияНетБазы = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНетБазы.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыТФОМС, ВзносыПФРНакопительная, ВзносыПФРСтраховая,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");
		
		// Получим таблицу для которых не нашлось базы (в части ЕНВД)
		ТаблицаКомментированияНетБазыЕНВД = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНетБазыЕНВД.Свернуть("Физлицо", "ВзносыПФРНакопительная_ЕНВД, ВзносыПФРСтраховая_ЕНВД, ВзносыФСС_ЕНВД,"
			+ "ВзносыФФОМС_ЕНВД, ВзносыТФОМС_ЕНВД");
			
		// Соберем строки относящиеся к начислениям в Дт 69 счета
		ПараметрыОтбора.Вставить("Режим", 2);
		МассивСтрокНетБазы = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу для которых не нашлось базы
		ТаблицаКомментированияНачисления69 = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНачисления69.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыТФОМС, ВзносыПФРНакопительная, ВзносыПФРСтраховая,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");	
			
			
		// Удалим колонки по шахтерам
		Если НЕ Константы.ИспользуетсяТрудШахтеров.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифШахтеры"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифШахтеры"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифШахтеры"));
		
		КонецЕсли; 
		
		// Удалим колонки по летчикам
		Если НЕ Константы.ИспользуетсяТрудЧленовЛетныхЭкипажей.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТариф"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТариф"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТариф"));
		
		КонецЕсли; 
		
		// Удалим колонки по работам с досрочной пенсией
		Если НЕ Константы.ИспользуютсяРаботыСДосрочнойПенсией.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
		
		КонецЕсли;
		
		// Удалим пустые строки, если таковые образовались полсе разбиени таблицы комментрования
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияСНачалаГода);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияСНачалаГодаЕНВД);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНетБазы);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНетБазыЕНВД);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНачисления69);
		
		// Подключаем обработку комментирования
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		
		РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Внимание! При формировании проводок обнаружены сотрудники, по которым нет данных для формирования проводок по страховым взносам.", Перечисления.ВидыСообщений.Информация);
		
		Если ТаблицаКомментированияСНачалаГода.Количество() > 0 Тогда
		
			РазделДокументаСНачалаГода = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники по которым сформированы проводки по страховым взносам по начислениям нарастающим итогом с начала года.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияСНачалаГода, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаСНачалаГода, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНетБазы.Количество() > 0 Тогда
		
			РазделДокументаНетБазы = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНетБазы, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНетБазы, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияСНачалаГодаЕНВД.Количество() > 0 Тогда
		
			РазделДокументаСНачалаГодаЕНВД = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники по которым сформированы проводки по страховым взносам в части ЕНВД по начислениям нарастающим итогом с начала года.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияСНачалаГодаЕНВД, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаСНачалаГодаЕНВД, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНетБазыЕНВД.Количество() > 0 Тогда
		
			РазделДокументаНетБазыЕНВД = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91 (в части ЕНВД).", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНетБазыЕНВД, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНетБазыЕНВД, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНачисления69.Количество() > 0 Тогда
			
			РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Внимание! При формировании проводок часть страховых взносов отражена в дебет счета 91. Есть начисления, отражаемые на счетах расчетов по социальному страхованию и обеспечению, с которых исчислены страховые взносы.", Перечисления.ВидыСообщений.Информация);
			
			РазделДокументаНачисления69 = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНачисления69, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНачисления69, Ложь);
		
		КонецЕсли;
		
		ОбработкаКомментариев.ПоказатьСообщения();
	
	КонецЕсли; 
	
КонецПроцедуры

// Функция фозвращает таблицу значений с данными для вычисления коэффициентов отражения в учете Страховых взносов
// Параметры
//  МассивПериодовРегистрации   - массив с периодами регистрации, по которым собираем данные
//  ГоловнаяОрганизация 		– головная организация
//  МассивСчетаИсключенияРБП 	- массив счетов по которым расходы не относим на РБП
//  МассивФизлиц				- Массив физлиц, по которым собираем данные для списания РБП или получения базы с начала года
//  СворачиватьПериодДействия 	- Результат формируем без периода действия
//
// Возвращаемое значение:
//   Таблица значений 
//
Функция ПолучитьДанныеУчетаСтраховыхВзносов2011(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП, МассивФизлиц = Неопределено, СворачиватьПериодДействия = Истина)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Периоды
	// Таблица список периодов, для получения учетной политики
	// Поля:
	//		Период, конец месяца
	// Описание:
	
	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(МассивПериодовРегистрации[0]);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы
	Для Индекс = 1 По МассивПериодовРегистрации.Количество()-1 Цикл
		КонецМесяца = КонецМесяца(МассивПериодовРегистрации[Индекс]);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамНеОтбиратьФизлиц", МассивФизлиц = Неопределено);
	Запрос.УстановитьПараметр("парамМассивПериодовРегистрации", МассивПериодовРегистрации);
	Запрос.УстановитьПараметр("парамМассивФизлиц", МассивФизлиц);
	Запрос.УстановитьПараметр("парамСчетаИсключенияРБП", МассивСчетаИсключенияРБП);
	Запрос.УстановитьПараметр("парамКонецГода", КонецГода(МассивПериодовРегистрации[0]));
	Запрос.УстановитьПараметр("парамФормироватьРБП", мПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска и Не мОценочныеОбязательстваФормироватьБУ);
	
	МассивПоСреднемуЗаработкуОтпуска = Новый Массив;
	МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	Запрос.УстановитьПараметр("парамПоСреднемуЗаработкуОтпуска", МассивПоСреднемуЗаработкуОтпуска);

	ИспользуетсяТрудЧленовЛетныхЭкипажей = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудЧленовЛетныхЭкипажей");
	ИспользуетсяТрудШахтеров = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудШахтеров");
	ИспользуютсяРаботыСДосрочнойПенсией = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуютсяРаботыСДосрочнойПенсией");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Регистратор,
	|	СтраховыеВзносыСведенияОДоходах.НомерСтроки,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидРасчета КАК ВидРасчета,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК КодДоходаЕСН,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СтраховыеВзносыСведенияОДоходах.Скидка
	|ПОМЕСТИТЬ ВТ_Скидки
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|	И СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И (&парамНеОтбиратьФизлиц
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.ФизЛицо В (&парамМассивФизлиц))
	|	И СтраховыеВзносыСведенияОДоходах.Скидка <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СкидкиКДоходам.Регистратор КАК Регистратор,
	|	СкидкиКДоходам.НомерСтроки КАК НомерСтроки,
	|	ЕСНДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|	СкидкиКДоходам.ВидРасчета КАК ВидРасчета,
	|	СкидкиКДоходам.КодДоходаЕСН КАК КодДоходаЕСН,
	|	СкидкиКДоходам.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	СкидкиКДоходам.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	СкидкиКДоходам.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДополнительныеНачисления.Результат КАК Результат,
	|	СкидкиКДоходам.Скидка
	|ИЗ
	|	ВТ_Скидки КАК СкидкиКДоходам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|		ПО (ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение)
	|			И СкидкиКДоходам.ФизЛицо = ЕСНДополнительныеНачисления.ФизЛицо
	|			И СкидкиКДоходам.ВидРасчета = ЕСНДополнительныеНачисления.ВидРасчета
	|			И СкидкиКДоходам.КодДоходаЕСН = ЕСНДополнительныеНачисления.КодДоходаЕСН
	|			И СкидкиКДоходам.ОблагаетсяЕНВД = ЕСНДополнительныеНачисления.ОблагаетсяЕНВД
	|			И СкидкиКДоходам.ПериодРегистрации = ЕСНДополнительныеНачисления.ПериодРегистрации
	|			И СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу = ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу
	|			И СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|			И СкидкиКДоходам.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	Сотрудник,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией";
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаСкидок = ПолучитьТаблицуСкидокКДоходам(РезультатЗапроса);
	Запрос.УстановитьПараметр("ТаблицаСкидок", ТаблицаСкидок);
	
	МассивСчет84 = Новый Массив();
	МассивСчет84.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	Запрос.УстановитьПараметр("СчетаИсключения", МассивСчет84);
	
	МассивСчет69 = Новый Массив();
	МассивСчет69.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	Запрос.УстановитьПараметр("Счета69", МассивСчет69);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета69
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счета69)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД,
	|	УчетнаяПолитика.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитика
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|			ПО Периоды.Период >= УчетнаяПолитика.Период
	|				И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитика.Период
	|			И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСкидок.Сотрудник КАК Сотрудник,
	|	ТаблицаСкидок.ВидРасчета КАК ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН КАК КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ТаблицаСкидок.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаСкидок.Скидка
	|ПОМЕСТИТЬ ВТ_СкидкиКДоходам
	|ИЗ
	|	&ТаблицаСкидок КАК ТаблицаСкидок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	Сотрудник,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	Доходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ВидДохода.ВходитВБазуПФР КАК ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС КАК ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС КАК ВходитВБазуФОМС
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыПоВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		ЕСНОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		ЕСНОсновныеНачисления.КодДоходаЕСН КАК ВидДохода,
	|		ЕСНОсновныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНОсновныеНачисления.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНОсновныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНОсновныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		ЕСНОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ЕСНОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		ВЫБОР
	|			КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Результат
	|	ИЗ
	|		РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
	|	ГДЕ
	|		ЕСНОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.Сотрудник,
	|		ЕСНДополнительныеНачисления.ФизЛицо,
	|		ЕСНДополнительныеНачисления.ВидРасчета,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|		ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНДополнительныеНачисления.Результат - ЕСТЬNULL(ВТ_СкидкиКДоходам.Скидка, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкидкиКДоходам КАК ВТ_СкидкиКДоходам
	|			ПО ЕСНДополнительныеНачисления.Сотрудник = ВТ_СкидкиКДоходам.Сотрудник
	|				И ЕСНДополнительныеНачисления.ВидРасчета = ВТ_СкидкиКДоходам.ВидРасчета
	|				И ЕСНДополнительныеНачисления.КодДоходаЕСН = ВТ_СкидкиКДоходам.КодДоходаЕСН
	|				И ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу = ВТ_СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу
	|				И ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = ВТ_СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|				И ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ВТ_СкидкиКДоходам.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|				И ЕСНДополнительныеНачисления.ПериодРегистрации = ВТ_СкидкиКДоходам.ПериодРегистрации
	|				И ЕСНДополнительныеНачисления.ОблагаетсяЕНВД = ВТ_СкидкиКДоходам.ОблагаетсяЕНВД
	|	ГДЕ
	|		ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНДополнительныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК Доходы
	|ГДЕ
	|	Доходы.Результат <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ПериодРегистрации,
	|	Доходы.ПериодДействия,
	|	Доходы.ОблагаетсяЕНВД,
	|	Доходы.ФизЛицо,
	|	Доходы.ВидДохода.ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	Доходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84,
	|	ВЫБОР
	|		КОГДА ВТ_Счета69.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет69,
	|	Доходы.ЭтоОтпуск,
	|	Доходы.ДатаНачала КАК ДатаАктуальности
	|ПОМЕСТИТЬ ВТ_БУДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		БУОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		БУОсновныеНачисления.СчетДт КАК СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.Результат КАК Результат,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт,
	|		ВЫБОР
	|			КОГДА &парамФормироватьРБП
	|				ТОГДА ВЫБОР
	|						КОГДА (НЕ БУОсновныеНачисления.СчетДт В (&парамСчетаИсключенияРБП))
	|								И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПодменятьСчетДтНаРБП,
	|		БУОсновныеНачисления.ВидРасчета.ЕжегодныйОтпускДляРезервов КАК ЭтоОтпуск,
	|		БУОсновныеНачисления.ПериодДействияНачало КАК ДатаНачала
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.Сотрудник,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.ВидРасчета,
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		БУДополнительныеНачисления.Результат,
	|		БУДополнительныеНачисления.ПодразделениеДт,
	|		БУДополнительныеНачисления.ПодразделениеКт,
	|		ЛОЖЬ,
	|		БУДополнительныеНачисления.ВидРасчета.ЕжегодныйОтпускДляРезервов,
	|		БУДополнительныеНачисления.ПериодРегистрации
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Доходы.ПериодРегистрации = УчетнаяПолитикаНалоговыйУчет.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
	|		ПО Доходы.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО Доходы.СчетДт = ВТ_Счета84.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета69 КАК ВТ_Счета69
	|		ПО Доходы.СчетДт = ВТ_Счета69.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ПериодРегистрации,
	|	Доходы.СчетДт,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.ПериодДействия,
	|	Доходы.ФизЛицо,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Счета69.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Доходы.ЭтоОтпуск,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Доходы.ДатаНачала
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаАктуальности";
	Запрос.Выполнить();
	
	Если ИспользуетсяТрудЧленовЛетныхЭкипажей или ИспользуетсяТрудШахтеров или ИспользуютсяРаботыСДосрочнойПенсией Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ДатаАктуальности КАК ДатаАктуальности
		|ПОМЕСТИТЬ ВТ_СотрудникиДаты
		|ИЗ
		|	ВТ_БУДоходы КАК БУДоходы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаАктуальности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	Сотрудники.ДатаАктуальности
		|ПОМЕСТИТЬ ВТСтрокиРегистра
		|ИЗ
		|	ВТ_СотрудникиДаты КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|		ПО Сотрудники.Сотрудник = РаботникиОрганизаций.Сотрудник
		|			И Сотрудники.ДатаАктуальности >= РаботникиОрганизаций.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	Сотрудники.Сотрудник,
		|	Сотрудники.ДатаАктуальности
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиРегистра.Сотрудник,   
		|	СтрокиРегистра.ДатаАктуальности,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА Работники.ПериодЗавершения <= СтрокиРегистра.ДатаАктуальности
		|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА Работники.ДолжностьЗавершения.ЯвляетсяДолжностьюЛетногоЭкипажа
		|			ИНАЧЕ Работники.Должность.ЯвляетсяДолжностьюЛетногоЭкипажа
		|		КОНЕЦ, ЛОЖЬ) КАК ОблагаетсяПоДополнительномуТарифу,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА Работники.ПериодЗавершения <= СтрокиРегистра.ДатаАктуальности
		|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА Работники.ДолжностьЗавершения.ЯвляетсяШахтерскойДолжностью
		|			ИНАЧЕ Работники.Должность.ЯвляетсяШахтерскойДолжностью
		|		КОНЕЦ, ЛОЖЬ) КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА Работники.ПериодЗавершения <= СтрокиРегистра.ДатаАктуальности
		|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА Работники.ДолжностьЗавершения.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией
		|			ИНАЧЕ Работники.Должность.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией
		|		КОНЕЦ, ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТСтрокиРегистра КАК СтрокиРегистра
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
		|		ПО СтрокиРегистра.Сотрудник = Работники.Сотрудник
		|			И СтрокиРегистра.Период = Работники.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ФизЛицо,
		|	БУДоходы.ВидРасчета КАК ВидРасчета,
		|	БУДоходы.ПериодРегистрации КАК ПериодРегистрации,
		|	БУДоходы.ПериодДействия КАК ПериодДействия,
		|	БУДоходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БУДоходы.СчетДт,
		|	БУДоходы.СубконтоДт1,
		|	БУДоходы.СубконтоДт2,
		|	БУДоходы.СубконтоДт3,
		|	БУДоходы.СчетДтНУ,
		|	БУДоходы.СубконтоДтНУ1,
		|	БУДоходы.СубконтоДтНУ2,
		|	БУДоходы.СубконтоДтНУ3,
		|	БУДоходы.СпособРаспределенияЗатрат,
		|	БУДоходы.ОтражениеВУСН,
		|	БУДоходы.Результат,
		|	БУДоходы.ПодразделениеДт,
		|	БУДоходы.ПодразделениеКт,
		|	БУДоходы.ПодменятьСчетДтНаРБП,
		|	БУДоходы.ЭтоСчет84,
		|	БУДоходы.ЭтоСчет69,
		|	БУДоходы.ЭтоОтпуск,
		|	ЕСТЬNULL(СотрудникиДопДанные.ОблагаетсяПоДополнительномуТарифу, ЛОЖЬ) КАК ОблагаетсяПоДополнительномуТарифу,
		|	ЕСТЬNULL(СотрудникиДопДанные.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам, ЛОЖЬ) КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ЕСТЬNULL(СотрудникиДопДанные.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией, ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	БУДоходы.ДатаАктуальности КАК ПериодДействияНачало
		|ИЗ
		|	ВТ_БУДоходы КАК БУДоходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиДопДанные
		|		ПО БУДоходы.Сотрудник = СотрудникиДопДанные.Сотрудник
		|			И БУДоходы.ДатаАктуальности = СотрудникиДопДанные.ДатаАктуальности";
		ТаблицаУчета = Запрос.Выполнить().Выгрузить();
		
		ДополнительныйЗапрос = Новый Запрос;
		ДополнительныйЗапрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета,
		|	ОсновныеНачисленияОрганизаций.ВидСтажаСЗВ4,
		|	ВЫБОР
		|		КОГДА НЕ ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
		|				И ОсновныеНачисленияОрганизаций.НачисляетсяВЦеломЗаМесяц
		|				И ОсновныеНачисленияОрганизаций.ВидСтажаСЗВ4 <> ЗНАЧЕНИЕ(Перечисление.ВидыСтажаСЗВ4.ВключаетсяВСтажДляДосрочногоНазначенияПенсии)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК РаспределяетсяВоВсехСлучаях
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнительныеНачисленияОрганизаций.Ссылка,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаСЗВ4.ПустаяСсылка),
		|	ИСТИНА
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций";
		Выборка = ДополнительныйЗапрос.Выполнить().Выбрать();
		ОписаниеНачислений = Новый Соответствие;
		Пока Выборка.Следующий() Цикл
			ОписаниеНачислений.Вставить(Выборка.ВидРасчета, Новый Структура("ВидСтажаСЗВ4,РаспределяетсяВоВсехСлучаях",Выборка.ВидСтажаСЗВ4,Выборка.РаспределяетсяВоВсехСлучаях))
		КонецЦикла;
		
		РасчетСтраховыхВзносов.УточнитьДанныеОРаботахСДосрочнойПенсией(
			ТаблицаУчета, 
			РасчетСтраховыхВзносов.ДолиДляРаспределенияВредности(Запрос.МенеджерВременныхТаблиц, ПериодРегистрации), 
			Истина, 
			ПериодРегистрации, 
			ОписаниеНачислений);
	
	 	Запрос.УстановитьПараметр("БУДоходы",ТаблицаУчета);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ФизЛицо,
		|	БУДоходы.ВидРасчета КАК ВидРасчета,
		|	БУДоходы.ПериодРегистрации КАК ПериодРегистрации,
		|	БУДоходы.ПериодДействия КАК ПериодДействия,
		|	БУДоходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БУДоходы.СчетДт,
		|	БУДоходы.СубконтоДт1,
		|	БУДоходы.СубконтоДт2,
		|	БУДоходы.СубконтоДт3,
		|	БУДоходы.СчетДтНУ,
		|	БУДоходы.СубконтоДтНУ1,
		|	БУДоходы.СубконтоДтНУ2,
		|	БУДоходы.СубконтоДтНУ3,
		|	БУДоходы.СпособРаспределенияЗатрат,
		|	БУДоходы.ОтражениеВУСН,
		|	БУДоходы.Результат,
		|	БУДоходы.ПодразделениеДт,
		|	БУДоходы.ПодразделениеКт,
		|	БУДоходы.ПодменятьСчетДтНаРБП,
		|	БУДоходы.ЭтоСчет84,
		|	БУДоходы.ЭтоСчет69,
		|	БУДоходы.ЭтоОтпуск,
		|	БУДоходы.ОблагаетсяПоДополнительномуТарифу,
		|	БУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	БУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТВременная
		|ИЗ
		|	&БУДоходы КАК БУДоходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Временная.Сотрудник,
		|	Временная.ФизЛицо,
		|	Временная.ВидРасчета,
		|	Временная.ПериодРегистрации,
		|	Временная.ПериодДействия,
		|	Временная.ОблагаетсяЕНВД,
		|	Временная.СчетДт,
		|	Временная.СубконтоДт1,
		|	Временная.СубконтоДт2,
		|	Временная.СубконтоДт3,
		|	Временная.СчетДтНУ,
		|	Временная.СубконтоДтНУ1,
		|	Временная.СубконтоДтНУ2,
		|	Временная.СубконтоДтНУ3,
		|	Временная.СпособРаспределенияЗатрат,
		|	Временная.ОтражениеВУСН,
		|	СУММА(Временная.Результат) КАК Результат,
		|	Временная.ПодразделениеДт,
		|	Временная.ПодразделениеКт,
		|	Временная.ПодменятьСчетДтНаРБП,
		|	Временная.ЭтоСчет84,
		|	Временная.ЭтоСчет69,
		|	Временная.ЭтоОтпуск,
		|	Временная.ОблагаетсяПоДополнительномуТарифу,
		|	Временная.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
		|ИЗ
		|	ВТВременная КАК Временная
		|
		|СГРУППИРОВАТЬ ПО
		|	Временная.Сотрудник,
		|	Временная.ФизЛицо,
		|	Временная.ВидРасчета,
		|	Временная.ПериодРегистрации,
		|	Временная.ПериодДействия,
		|	Временная.ОблагаетсяЕНВД,
		|	Временная.СчетДт,
		|	Временная.СубконтоДт1,
		|	Временная.СубконтоДт2,
		|	Временная.СубконтоДт3,
		|	Временная.СчетДтНУ,
		|	Временная.СубконтоДтНУ1,
		|	Временная.СубконтоДтНУ2,
		|	Временная.СубконтоДтНУ3,
		|	Временная.СпособРаспределенияЗатрат,
		|	Временная.ОтражениеВУСН,
		|	Временная.ПодразделениеДт,
		|	Временная.ПодразделениеКт,
		|	Временная.ПодменятьСчетДтНаРБП,
		|	Временная.ЭтоСчет84,
		|	Временная.ЭтоСчет69,
		|	Временная.ЭтоОтпуск,
		|	Временная.ОблагаетсяПоДополнительномуТарифу,
		|	Временная.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Временная.ПериодРегистрации,
		|	Временная.ПериодДействия,
		|	Временная.Сотрудник,
		|	Временная.ВидРасчета,
		|	Временная.ОблагаетсяЕНВД,
		|	Временная.ОблагаетсяПоДополнительномуТарифу,
		|	Временная.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВременная";
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ФизЛицо,
		|	БУДоходы.ВидРасчета КАК ВидРасчета,
		|	БУДоходы.ПериодРегистрации КАК ПериодРегистрации,
		|	БУДоходы.ПериодДействия КАК ПериодДействия,
		|	БУДоходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БУДоходы.СчетДт,
		|	БУДоходы.СубконтоДт1,
		|	БУДоходы.СубконтоДт2,
		|	БУДоходы.СубконтоДт3,
		|	БУДоходы.СчетДтНУ,
		|	БУДоходы.СубконтоДтНУ1,
		|	БУДоходы.СубконтоДтНУ2,
		|	БУДоходы.СубконтоДтНУ3,
		|	БУДоходы.СпособРаспределенияЗатрат,
		|	БУДоходы.ОтражениеВУСН,
		|	БУДоходы.Результат,
		|	БУДоходы.ПодразделениеДт,
		|	БУДоходы.ПодразделениеКт,
		|	БУДоходы.ПодменятьСчетДтНаРБП,
		|	БУДоходы.ЭтоСчет84,
		|	БУДоходы.ЭтоСчет69,
		|	БУДоходы.ЭтоОтпуск,
		|	ЛОЖЬ КАК ОблагаетсяПоДополнительномуТарифу,
		|	ЛОЖЬ КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
		|ИЗ
		|	ВТ_БУДоходы КАК БУДоходы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодРегистрации,
		|	ПериодДействия,
		|	Сотрудник,
		|	ВидРасчета,
		|	ОблагаетсяЕНВД,
		|	ОблагаетсяПоДополнительномуТарифу,
		|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзносыДоходыПоВР.Сотрудник,
	|	ВзносыДоходыПоВР.ФизЛицо,
	|	ВзносыДоходыПоВР.ВидРасчета,
	|	БУДоходыПоВР.ОблагаетсяЕНВД,
	|	ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	ВзносыДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ВзносыДоходыПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ВзносыДоходыПоВР.ПериодРегистрации,
	|	ВзносыДоходыПоВР.ПериодДействия,
	|	ВзносыДоходыПоВР.Результат,
	|	БУДоходыПоВР.СчетДт,
	|	БУДоходыПоВР.СубконтоДт1,
	|	БУДоходыПоВР.СубконтоДт2,
	|	БУДоходыПоВР.СубконтоДт3,
	|	БУДоходыПоВР.СчетДтНУ,
	|	БУДоходыПоВР.СубконтоДтНУ1,
	|	БУДоходыПоВР.СубконтоДтНУ2,
	|	БУДоходыПоВР.СубконтоДтНУ3,
	|	БУДоходыПоВР.СпособРаспределенияЗатрат,
	|	БУДоходыПоВР.ОтражениеВУСН,
	|	БУДоходыПоВР.Результат КАК РезультатБУ,
	|	БУДоходыПоВР.ПодразделениеДт,
	|	БУДоходыПоВР.ПодразделениеКт,
	|	БУДоходыПоВР.ПодменятьСчетДтНаРБП,
	|	ВзносыДоходыПоВР.ВходитВБазуПФР,
	|	ВзносыДоходыПоВР.ВходитВБазуФСС,
	|	ВзносыДоходыПоВР.ВходитВБазуФОМС,
	|	БУДоходыПоВР.ЭтоСчет84,
	|	БУДоходыПоВР.ЭтоСчет69,
	|	БУДоходыПоВР.ЭтоОтпуск
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыБУДоходы
	|ИЗ
	|	ВТ_ВзносыДоходыПоВР КАК ВзносыДоходыПоВР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|		ПО ВзносыДоходыПоВР.Сотрудник = БУДоходыПоВР.Сотрудник
	|			И ВзносыДоходыПоВР.ВидРасчета = БУДоходыПоВР.ВидРасчета
	|			И ВзносыДоходыПоВР.ПериодРегистрации = БУДоходыПоВР.ПериодРегистрации
	|			И ВзносыДоходыПоВР.ПериодДействия = БУДоходыПоВР.ПериодДействия
	|			И ВзносыДоходыПоВР.ОблагаетсяЕНВД = БУДоходыПоВР.ОблагаетсяЕНВД
	|			И ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу = БУДоходыПоВР.ОблагаетсяПоДополнительномуТарифу
	|			И ВзносыДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = БУДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|			И ВзносыДоходыПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = БУДоходыПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.Сотрудник КАК Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета КАК ВидРасчета,
	|	БУДоходыСводПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия КАК ПериодДействия,
	|	СУММА(БУДоходыСводПоВР.Результат) КАК Результат,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БУДоходыСводПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|ПОМЕСТИТЬ ВТ_БУДоходыСводПоВР
	|ИЗ
	|	ВТ_БУДоходыПоВР КАК БУДоходыСводПоВР
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыСводПоВР.Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД,
	|	БУДоходыСводПоВР.ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия,
	|	БУДоходыСводПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.ФизЛицо,
	|	ВзносыДоходыБУДоходы.СчетДт,
	|	ВзносыДоходыБУДоходы.СубконтоДт1,
	|	ВзносыДоходыБУДоходы.СубконтоДт2,
	|	ВзносыДоходыБУДоходы.СубконтоДт3,
	|	ВзносыДоходыБУДоходы.СчетДтНУ,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ1,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ2,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ3,
	|	ВзносыДоходыБУДоходы.СпособРаспределенияЗатрат,
	|	ВзносыДоходыБУДоходы.ОтражениеВУСН,
	|	ВзносыДоходыБУДоходы.ПодразделениеДт,
	|	ВзносыДоходыБУДоходы.ПодразделениеКт,
	|	ВзносыДоходыБУДоходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР_ЕНВД,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС_ЕНВД,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФОМС,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФОМС_ЕНВД,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаДопТариф,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаДопТарифШахтеры,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПодземныеИВредныеРаботы)
	|				И ВзносыДоходыБУДоходы.ВходитВБазуПФР
	|				И БУДоходыСводПоВР.Результат <> 0
	|			ТОГДА ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДопТарифПодземныеИВредныеРаботы,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы)
	|				И ВзносыДоходыБУДоходы.ВходитВБазуПФР
	|				И БУДоходыСводПоВР.Результат <> 0
	|			ТОГДА ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДопТарифТяжелыеИПрочиеРаботы,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС_НС,
	|	ВзносыДоходыБУДоходы.ПериодРегистрации,
	|	ВзносыДоходыБУДоходы.ПериодДействия,
	|	ВзносыДоходыБУДоходы.ОблагаетсяЕНВД,
	|	ВзносыДоходыБУДоходы.ЭтоСчет84,
	|	ВзносыДоходыБУДоходы.ЭтоСчет69,
	|	ВзносыДоходыБУДоходы.ЭтоОтпуск
	|ПОМЕСТИТЬ ВТ_Коэффициенты
	|ИЗ
	|	ВТ_ВзносыДоходыБУДоходы КАК ВзносыДоходыБУДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыСводПоВР КАК БУДоходыСводПоВР
	|		ПО ВзносыДоходыБУДоходы.Сотрудник = БУДоходыСводПоВР.Сотрудник
	|			И ВзносыДоходыБУДоходы.ПериодРегистрации = БУДоходыСводПоВР.ПериодРегистрации
	|			И ВзносыДоходыБУДоходы.ПериодДействия = БУДоходыСводПоВР.ПериодДействия
	|			И ВзносыДоходыБУДоходы.ОблагаетсяЕНВД = БУДоходыСводПоВР.ОблагаетсяЕНВД
	|			И ВзносыДоходыБУДоходы.ВидРасчета = БУДоходыСводПоВР.ВидРасчета
	|			И ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу = БУДоходыСводПоВР.ОблагаетсяПоДополнительномуТарифу
	|			И ВзносыДоходыБУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = БУДоходыСводПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|			И ВзносыДоходыБУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = БУДоходыСводПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией";
	
	Запрос.Выполнить();
	
	Если СворачиватьПериодДействия Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	СУММА(Коэффициенты.БазаПФР) КАК БазаПФР,
		|	СУММА(Коэффициенты.БазаПФР_ЕНВД) КАК БазаПФР_ЕНВД,
		|	СУММА(Коэффициенты.БазаФСС) КАК БазаФСС,
		|	СУММА(Коэффициенты.БазаФСС_ЕНВД) КАК БазаФСС_ЕНВД,
		|	СУММА(Коэффициенты.БазаФОМС) КАК БазаФОМС,
		|	СУММА(Коэффициенты.БазаФОМС_ЕНВД) КАК БазаФОМС_ЕНВД,
		|	СУММА(Коэффициенты.БазаДопТариф) КАК БазаДопТариф,
		|	СУММА(Коэффициенты.БазаДопТарифШахтеры) КАК БазаДопТарифШахтеры,
		|	СУММА(Коэффициенты.БазаДопТарифПодземныеИВредныеРаботы) КАК БазаДопТарифПодземныеИВредныеРаботы,
		|	СУММА(Коэффициенты.БазаДопТарифТяжелыеИПрочиеРаботы) КАК БазаДопТарифТяжелыеИПрочиеРаботы,
		|	СУММА(Коэффициенты.БазаФСС_НС) КАК БазаФСС_НС,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69
		|ИЗ
		|	ВТ_Коэффициенты КАК Коэффициенты
		|
		|СГРУППИРОВАТЬ ПО
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69";
		
	Иначе // для списания РБП в расходы нужен период действия
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	СУММА(Коэффициенты.БазаПФР) КАК БазаПФР,
		|	СУММА(Коэффициенты.БазаПФР_ЕНВД) КАК БазаПФР_ЕНВД,
		|	СУММА(Коэффициенты.БазаФСС) КАК БазаФСС,
		|	СУММА(Коэффициенты.БазаФСС_ЕНВД) КАК БазаФСС_ЕНВД,
		|	СУММА(Коэффициенты.БазаФОМС) КАК БазаФОМС,
		|	СУММА(Коэффициенты.БазаФОМС_ЕНВД) КАК БазаФОМС_ЕНВД,
		|	СУММА(Коэффициенты.БазаДопТариф) КАК БазаДопТариф,
		|	СУММА(Коэффициенты.БазаДопТарифШахтеры) КАК БазаДопТарифШахтеры,
		|	СУММА(Коэффициенты.БазаДопТарифПодземныеИВредныеРаботы) КАК БазаДопТарифПодземныеИВредныеРаботы,
		|	СУММА(Коэффициенты.БазаДопТарифТяжелыеИПрочиеРаботы) КАК БазаДопТарифТяжелыеИПрочиеРаботы,
		|	СУММА(Коэффициенты.БазаФСС_НС) КАК БазаФСС_НС,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПериодДействия,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69
		|ИЗ
		|	ВТ_Коэффициенты КАК Коэффициенты
		|ГДЕ
		|	(НЕ Коэффициенты.СчетДт В (&парамСчетаИсключенияРБП))
		|
		|СГРУППИРОВАТЬ ПО
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПериодДействия,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69";
		
	КонецЕсли;	
	
	Возврат  Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеУчетаСтраховыхВзносов2011()

// получение  данных для бухучета
// Параметры:
//  СписокНачислений - список начислений, которые необходимо обработать
//  ЭтоОсновныеНачисления - булево, если Истина, то получаем данные по основным начислениям иначе - по доп.
//
// Возвращаемое значение:
//  Результат запроса
// 
Функция ПолучитьДанныеУчета2011(СписокНачислений, ЭтоОсновныеНачисления, ЭтоПервичныеНачисления)
	
	Запрос = Новый Запрос;
	
	Измерения = Новый Массив(1);
	Измерения[0] = "Сотрудник";
	
	Запрос.УстановитьПараметр("парамИзмерения", Измерения);
	
	Запрос.УстановитьПараметр("парамСписокНачислений", СписокНачислений);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
	// Измайлова Полина 13.12.2011 13:51 
	Запрос.УстановитьПараметр("парамЗаменятьСтатьюЗатрат", Истина);
	////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
	Разрезы = Новый Массив(20);
	Разрезы[0] = "СчетДт";
	Разрезы[1] = "СубконтоДт1";
	Разрезы[2] = "СубконтоДт2";
	Разрезы[3] = "СубконтоДт3";
	Разрезы[4] = "СчетКт";
	Разрезы[5] = "СубконтоКт1";
	Разрезы[6] = "СубконтоКт2";
	Разрезы[7] = "СубконтоКт3";
	Разрезы[8] = "СчетДтНУ";
	Разрезы[9] = "СубконтоДтНУ1";
	Разрезы[10] = "СубконтоДтНУ2";
	Разрезы[11] = "СубконтоДтНУ3";
	Разрезы[12] = "СчетКтНУ";
	Разрезы[13] = "СубконтоКтНУ1";
	Разрезы[14] = "СубконтоКтНУ2";
	Разрезы[15] = "СубконтоКтНУ3";
	Разрезы[16] = "СпособРаспределенияЗатрат";
	Разрезы[17] = "ОтражениеВУСН";
	Разрезы[18] = "ПодразделениеДт";
	Разрезы[19] = "ПодразделениеКт";
	
	Запрос.УстановитьПараметр("парамРазрезыБУ", Разрезы);
	
	СпособПоУмолчанию = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию;
	
	Запрос.УстановитьПараметр("парамСпособПоУмолчанию", СпособПоУмолчанию);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетДт", СпособПоУмолчанию.СчетДт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетКт", СпособПоУмолчанию.СчетКт);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт1", СпособПоУмолчанию.СубконтоДт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт2", СпособПоУмолчанию.СубконтоДт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДт3", СпособПоУмолчанию.СубконтоДт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт1", СпособПоУмолчанию.СубконтоКт1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт2", СпособПоУмолчанию.СубконтоКт2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКт3", СпособПоУмолчанию.СубконтоКт3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетНУ", СпособПоУмолчанию.СчетДтНУ);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСчетКтНУ", СпособПоУмолчанию.СчетКтНУ);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ1", СпособПоУмолчанию.СубконтоДтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ2", СпособПоУмолчанию.СубконтоДтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоДтНУ3", СпособПоУмолчанию.СубконтоДтНУ3);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ1", СпособПоУмолчанию.СубконтоКтНУ1);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ2", СпособПоУмолчанию.СубконтоКтНУ2);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСубконтоКтНУ3", СпособПоУмолчанию.СубконтоКтНУ3);	
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюСпособРаспределенияЗатрат", СпособПоУмолчанию.СпособРаспределенияЗатрат);
	Запрос.УстановитьПараметр("парамСпособПоУмолчаниюОтражениеВУСН", СпособПоУмолчанию.ОтражениеВУСН);
	
	МассивПоСреднемуЗаработку = Новый Массив;
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС);
	Запрос.УстановитьПараметр("парамПоСреднемуЗаработку", МассивПоСреднемуЗаработку);
	
	СписокСоставляющихСреднегоЗаработка = Новый Массив; 
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииБЛ);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиям);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые);
	СписокСоставляющихСреднегоЗаработка.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые);
	Запрос.УстановитьПараметр("парамСписокСоставляющихСреднегоЗаработка", СписокСоставляющихСреднегоЗаработка);
	
	// для учета особенностей расчета среднего заработка
	ОсновнойЗаработок = Новый Массив(5);
	ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	ОсновнойЗаработок[3] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые;
	ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
	ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
	ОсновнойЗаработок[4] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010;
	
	ПоФиксПремиям = Новый Массив(3);
	ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
	ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБЛ;
	ПоФиксПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямПособий;
	
	ПоПремиям = Новый Массив(6);
	ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
	ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБЛ;
	ПоПремиям[2] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
	ПоПремиям[3] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;
	ПоПремиям[4] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;
	ПоПремиям[5] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010;
	
	ФиксГодовыеПремии = Новый Массив(5);
	ФиксГодовыеПремии[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии;
	ФиксГодовыеПремии[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииБЛ;
	ФиксГодовыеПремии[2] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииПособий;
	ФиксГодовыеПремии[3] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;
	ФиксГодовыеПремии[4] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;
	
	Запрос.УстановитьПараметр("парамОсновнойЗаработок",	ОсновнойЗаработок);
	Запрос.УстановитьПараметр("парамОсновнойЗаработокНеиндексируемый",	ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые);
	Запрос.УстановитьПараметр("парамПоПремиям",			ПоПремиям);
	Запрос.УстановитьПараметр("парамПоФиксПремиям",		ПоФиксПремиям);
	Запрос.УстановитьПараметр("парамПоФиксПремиямНеИндексируемые",	ФиксГодовыеПремии);
	
	Запрос.УстановитьПараметр("ЕстьЕНВД", мЕНВД);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ЭтоОсновныеНачисления Тогда
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ ОТРАЖЕНИЯ В УЧЕТЕ БАЗОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_База
		
		Если Не ЭтоПервичныеНачисления Тогда
			
			//соберем базу для зависимых начислений
			БазаТекст = 
			"ВЫБРАТЬ
			|	База.Регистратор КАК Регистратор,
			|	База.НомерСтроки КАК НомерСтроки,
			|	База.СчетДтРазрез,
			|	База.СубконтоДт1Разрез,
			|	База.СубконтоДт2Разрез,
			|	База.СубконтоДт3Разрез,
			|	База.СчетКтРазрез,
			|	База.СубконтоКт1Разрез,
			|	База.СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез,
			|	База.СчетДтНУРазрез,
			|	База.СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез,
			|	База.СчетКтНУРазрез,
			|	База.СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез,
			|	База.ПодразделениеДтРазрез,
			|	База.ПодразделениеКтРазрез,
			|	СУММА(База.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_База
			|ИЗ
			|	(ВЫБРАТЬ
			|		БазаБУОсновныеНачисления.Регистратор КАК Регистратор,
			|		БазаБУОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаБУОсновныеНачисления.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаБУОсновныеНачисления.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаБУОсновныеНачисления.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаБУОсновныеНачисления.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаБУОсновныеНачисления.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаБУОсновныеНачисления.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаБУОсновныеНачисления.ПодразделениеДтРазрез КАК ПодразделениеДтРазрез,
			|		БазаБУОсновныеНачисления.ПодразделениеКтРазрез КАК ПодразделениеКтРазрез,
			|		БазаБУОсновныеНачисления.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
			|		БазаБУОсновныеНачисления.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		БазаБУОсновныеНачисления.РезультатБаза КАК РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаБУОсновныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И (НЕ Сторно)
			|					И ПериодРегистрации = &парамПериодРегистрации
			|					И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И ВидРасчета В (&парамСписокНачислений)) КАК БазаБУОсновныеНачисления
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		БазаБУДополнительныеНачисления.Регистратор,
			|		БазаБУДополнительныеНачисления.НомерСтроки,
			|		БазаБУДополнительныеНачисления.СчетДтРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт3Разрез,
			|		БазаБУДополнительныеНачисления.СчетКтРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт3Разрез,
			|		БазаБУДополнительныеНачисления.СчетДтНУРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ3Разрез,
			|		БазаБУДополнительныеНачисления.СчетКтНУРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ3Разрез,
			|		БазаБУДополнительныеНачисления.ПодразделениеДтРазрез,
			|		БазаБУДополнительныеНачисления.ПодразделениеКтРазрез,
			|		БазаБУДополнительныеНачисления.СпособРаспределенияЗатратРазрез,
			|		БазаБУДополнительныеНачисления.ОтражениеВУСНРазрез,
			|		БазаБУДополнительныеНачисления.РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаБУДополнительныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И (НЕ Сторно)
			|					И ПериодРегистрации = &парамПериодРегистрации
			|					И ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И ВидРасчета В (&парамСписокНачислений)) КАК БазаБУДополнительныеНачисления) КАК База
			|
			|СГРУППИРОВАТЬ ПО
			|	База.Регистратор,
			|	База.СчетДтНУРазрез,
			|	База.СчетКтРазрез,
			|	База.СубконтоКт1Разрез,
			|	База.СубконтоДт3Разрез,
			|	База.СубконтоДт2Разрез,
			|	База.СубконтоДт1Разрез,
			|	База.СчетДтРазрез,
			|	База.СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез,
			|	База.СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез,
			|	База.СчетКтНУРазрез,
			|	База.СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез,
			|	База.НомерСтроки,
			|	База.ПодразделениеДтРазрез,
			|	База.ПодразделениеКтРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
			
		Иначе	
			
			// для первичных начислений не собираем базу	
			БазаТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУРазрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3Разрез,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатратРазрез,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСНРазрез,
			|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДтРазрез,
			|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКтРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_База";
			
		КонецЕсли;	
		Запрос.Текст = БазаТекст;
		//временная таблица - ВТ_База
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ ОТРАЖЕНИЕ В УЧЕТЕ БАЗОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_УчетПлановыхНачислений
		
		УчетПлановыхНачисленийТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ВидРасчета
		|ПОМЕСТИТЬ ВТ_ОсновыеНачисленияДляПлановый
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ОсновныеНачисления.Сторно)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОНачислениях
		|ИЗ
		|	ВТ_ОсновыеНачисленияДляПлановый КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ОсновныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|			И ОсновныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.Сотрудник,
		|	ОсновныеНачисления.ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.ПустаяСсылка)
		|		ИНАЧЕ РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД
		|	КОНЕЦ КАК ОтнесениеРасходовКДеятельностиЕНВД,
		|	СведенияОНачисленияхСрез.Регистратор КАК Регистратор,
		|	СведенияОНачисленияхСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетПлановыхНачислений
		|ИЗ
		|	РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОНачислениях КАК СведенияОНачисленияхСрез
		|		ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|			И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|			И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетПлановыхНачисленийТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		
		ОсновныеНачисленияТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ПодразделениеОрганизации,
		|	ОсновныеНачисления.ОбособленноеПодразделение
		|ПОМЕСТИТЬ ВТ_ОсновыеНачисления
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ОсновныеНачисления.Сторно)";
		Запрос.Текст = ОсновныеНачисленияТекст;
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		// таблица ВТ_УчетОсновногоЗаработка
		
		УчетОсновногоЗаработкаТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(УчетЗарВРеглУчете.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОРаботниках
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ПО ОсновныеНачисления.Сотрудник = УчетЗарВРеглУчете.Сотрудник
		|			И (УчетЗарВРеглУчете.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетЗарВРеглУчете.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	СведенияОРаботникахСрез.Регистратор КАК Регистратор,
		|	СведенияОРаботникахСрез.НомерСтроки КАК НомерСтроки,
		|	УчетЗарВРеглУчете.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя КАК СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработка
		|ИЗ
		|	РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОРаботниках КАК СведенияОРаботникахСрез
		|		ПО (СведенияОРаботникахСрез.Сотрудник = УчетЗарВРеглУчете.Сотрудник)
		|			И (СведенияОРаботникахСрез.Период = УчетЗарВРеглУчете.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		// таблица ВТ_УчетОсновногоЗаработкаПодразделения
		
		УчетОсновногоЗаработкаПодразделенияТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	МАКСИМУМ(УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОПодразделениях
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ОсновныеНачисления.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И (УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.ПодразделениеОрганизации,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодразделениеОрганизации,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПодразделенияхСрез.Регистратор КАК Регистратор,
		|	СведенияОПодразделенияхСрез.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя КАК СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаПодразделения
		|ИЗ
		|	ВТ_СведенияОПодразделениях КАК СведенияОПодразделенияхСрез
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО СведенияОПодразделенияхСрез.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И СведенияОПодразделенияхСрез.Период = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";		
		Запрос.Текст = УчетОсновногоЗаработкаПодразделенияТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		// таблица ВТ_УчетОсновногоЗаработкаОрганизации
		
		УчетОсновногоЗаработкаОрганизацииТекст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	МАКСИМУМ(УчетОсновногоЗаработкаОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияПоОрганизации
		|ИЗ
		|	ВТ_ОсновыеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ОсновныеНачисления.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И (УчетОсновногоЗаработкаОрганизации.Период <= ОсновныеНачисления.ДатаНачалаСобытия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.ОбособленноеПодразделение,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбособленноеПодразделение,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПоОрганизации.Регистратор КАК Регистратор,
		|	СведенияПоОрганизации.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя КАК СпособОтраженияВБухучетеБольничногоЗаСчетРаботодателя
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаОрганизации
		|ИЗ
		|	ВТ_СведенияПоОрганизации КАК СведенияПоОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО СведенияПоОрганизации.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И СведенияПоОрганизации.Период = УчетОсновногоЗаработкаОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";		
		Запрос.Текст = УчетОсновногоЗаработкаОрганизацииТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для прочих начислений
		
		ПолучатьБазу = Ложь;
		
		// ВТ_ПрочиеНачисления
		//
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Сотрудник,
		|	ОсновныеНачисления.Регистратор,
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.ДатаНачалаСобытия,
		|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
		|	ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС)
		|		ИНАЧЕ ОсновныеНачисления.ВидРасчета.СпособРасчета
		|	КОНЕЦ КАК СпособРасчета
		|ПОМЕСТИТЬ ВТ_ПрочиеНачисления
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
		|	И (НЕ ОсновныеНачисления.Сторно)
		|	И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка)
		|	И ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)";
		Запрос.Выполнить();
		
		// ВТ_СотрудникиПериодыПрочиеНачисления
		// условия для виртуальной таблицы
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТ_СотрудникиПериодыПрочиеНачисления
		|ИЗ
		|	ВТ_ПрочиеНачисления КАК ОсновныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия";
		Результат = Запрос.Выполнить().Выгрузить();
		ПолучатьБазу = Результат[0].Количество > 0;
		
		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	БазаСреднегоЗаработка.ПодразделениеДтРазрез,
			|	БазаСреднегоЗаработка.ПодразделениеКтРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор КАК Регистратор,
			|		ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		БазаСреднегоЗаработка.ПодразделениеДтРазрез КАК ПодразделениеДтРазрез,
			|		БазаСреднегоЗаработка.ПодразделениеКтРазрез КАК ПодразделениеКтРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ОсновныеНачисления.Регистратор,
			|		ОсновныеНачисления.НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|		БазаСреднегоЗаработка.ПодразделениеДтРазрез,
			|		БазаСреднегоЗаработка.ПодразделениеКтРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ
			|	ИЗ
			|		ВТ_ПрочиеНачисления КАК ОсновныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыПрочиеНачисления КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ОсновныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ОсновныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ОсновныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ОсновныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	БазаСреднегоЗаработка.НомерСтроки,
			|	БазаСреднегоЗаработка.ПодразделениеДтРазрез,
			|	БазаСреднегоЗаработка.ПодразделениеКтРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаТекст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
			|   ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
			|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеДтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеКтРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаСреднегоЗаработкаТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработка
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для прочих начислений
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		//получим отражение в учете сторно записей
		
		//временная таблица - ВТ_ОтражениеВУчетеСторно
		Запрос.Текст = ПолучитьТекстЗапросаОтражениеСторноЗаписей(); 
		Запрос.Выполнить();
		
		//получили отражение в учете сторно записей
		///////////////////////////////////////////////////////////////////////////////////
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДт
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДт
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетДт
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКт
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКт
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКт
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ПодразделениеДт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеДт,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ПодразделениеКт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеКт,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДтНУ
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКтНУ
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКтНУ
		|	КОНЕЦ КАК СчетКтНУ,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ1
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ2
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ3
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ1
		|	КОНЕЦ КАК СубконтоКтНУ1,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ2
		|	КОНЕЦ КАК СубконтоКтНУ2,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ3
		|	КОНЕЦ КАК СубконтоКтНУ3,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СпособРаспределенияЗатрат
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		ИНАЧЕ &парамСпособПоУмолчаниюСпособРаспределенияЗатрат
		|	КОНЕЦ КАК СпособРаспределенияЗатрат,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ОтражениеВУСН
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		ИНАЧЕ &парамСпособПоУмолчаниюОтражениеВУСН
		|	КОНЕЦ КАК ОтражениеВУСН,
		|	ВЫБОР
		|		КОГДА (НЕ &ЕстьЕНВД)
		|			ТОГДА 0
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|			ТОГДА 100
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|			ТОГДА 0
		|		КОГДА ОсновныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 100
		|		КОГДА ОсновныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 0
		|		КОГДА Распределение.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА Распределение.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА ЕНВДПроцент.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
		|		КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		КОГДА УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентЕНВД,
		|	ЕНВДПроцент.СчетДт КАК СчетЕНВД,
		|	ЕНВДПроцент.Субконто1 КАК Субконто1ЕНВД,
		|	ЕНВДПроцент.Субконто2 КАК Субконто2ЕНВД,
		|	ЕНВДПроцент.Субконто3 КАК Субконто3ЕНВД,
		|	ЕНВДПроцент.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатратЕНВД,
		|	Распределение.ДоляСпособаОтражения КАК ДоляСпособаОтражения,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ОсновныеНачисления.Результат КАК Результат,
		|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
		|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	ОсновныеНачисления.Сторно КАК Сторно,
		|	ОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	ОсновныеНачисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|	ОсновныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ОсновныеНачисления.ВидРасчета.ВидНачисленияПоСт255НК КАК ВидНачисленияПоСт255НК,
		|	ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете КАК СтратегияОтраженияВУчете,
		|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ОтражениеВУчетеСторно.ПериодДействияНачало КАК ПериодДействияНачалоСторно,
		|	ОтражениеВУчетеСторно.ПериодДействияКонец КАК ПериодДействияКонецСторно,
		|	ВЫБОР
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий)
		|		КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателяНовыйСтраховойСлучай))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя)
		|		ИНАЧЕ ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете
		|	КОНЕЦ КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ОсновныеНачисления.Сотрудник.Наименование КАК СотрудникНаименование
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 13.12.2011 11:47 
		|	,ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ОсновныеНачисления.Сторно
		|					ТОГДА ЛОЖЬ
		|				КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболеваниеНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочийНовыйСтраховойСлучай))
		|					ТОГДА ЛОЖЬ
		|				КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенкомНовыйСтраховойСлучай), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводствеНовыйСтраховойСлучай))
		|					ТОГДА ЛОЖЬ
		|				КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ВЫБОР
		|							КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям)
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ИСТИНА
		|						КОНЕЦ
		|				КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ &парамЗаменятьСтатьюЗатрат
		|			КОНЕЦ
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЗаменятьСтатьюЗатрат
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
		|ПОМЕСТИТЬ ДанныеУчета
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетПлановыхНачислений КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ОсновныеНачисления.Регистратор = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = РеглУчетПлановыхНачисленийРаботниковОрганизаций.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетЗарВРеглУчете
		|		ПО ОсновныеНачисления.Регистратор = УчетЗарВРеглУчете.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетЗарВРеглУчете.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ОсновныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|		ПО ОсновныеНачисления.Сотрудник = Распределение.Сотрудник
		|			И (НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ) = Распределение.ПериодРегистрации)
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете ЕСТЬ NULL )
		|			И (ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия))
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|			И (Распределение.ДоляСпособаОтражения <> 0)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентДеятельностиЕНВДСотрудников КАК ЕНВДПроцент
		|		ПО ОсновныеНачисления.Сотрудник = ЕНВДПроцент.Сотрудник
		|			И ((НЕ ОсновныеНачисления.Сторно))
		|			И (ВЫБОР
		|				КОГДА ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателяНовыйСтраховойСлучай))
		|					ТОГДА ОсновныеНачисления.ПериодРегистрации
		|				КОГДА ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия)
		|					ТОГДА ВЫБОР
		|							КОГДА НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ) > ОсновныеНачисления.ПериодРегистрации
		|								ТОГДА ОсновныеНачисления.ПериодРегистрации
		|							ИНАЧЕ НАЧАЛОПЕРИОДА(ОсновныеНачисления.ДатаНачалаСобытия, МЕСЯЦ)
		|						КОНЕЦ
		|				КОГДА ОсновныеНачисления.ПериодДействия > ОсновныеНачисления.ПериодРегистрации
		|					ТОГДА ОсновныеНачисления.ПериодРегистрации
		|				ИНАЧЕ ОсновныеНачисления.ПериодДействия
		|			КОНЕЦ = ЕНВДПроцент.ПериодРегистрации)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
		|		ПО ОсновныеНачисления.Сотрудник = БУОсновныеНачисления.Сотрудник
		|			И ОсновныеНачисления.ВидРасчета = БУОсновныеНачисления.ВидРасчета
		|			И (БУОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации)
		|			И (БУОсновныеНачисления.ПериодДействияНачало >= ОсновныеНачисления.ПериодДействияНачало)
		|			И (БУОсновныеНачисления.ПериодДействияКонец <= ОсновныеНачисления.ПериодДействияКонец)
		|			И (БУОсновныеНачисления.ДокументОснование = ОсновныеНачисления.Регистратор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ОсновныеНачисления.Регистратор = ОтражениеВУчетеСторно.Регистратор
		|			И ОсновныеНачисления.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|ГДЕ
		|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
		|	И ОсновныеНачисления.Результат <> 0
		|	И ВЫБОР
		|			КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете
		|			КОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете
		|			КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА Распределение.СпособОтраженияВБухучете
		|			КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете
		|			ИНАЧЕ &парамСпособПоУмолчанию
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
		|	И БУОсновныеНачисления.Сотрудник ЕСТЬ NULL 
		|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&парамГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДанныеУчета.Регистратор КАК Регистратор,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.СотрудникНаименование КАК СотрудникНаименование,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.СчетДт КАК СчетДт,
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ИЗМЕНЕНИЕ
		// Измайлова Полина 13.12.2011 11:44 
		//|	ДанныеУчета.СубконтоДт1,
		//|	ДанныеУчета.СубконтоДт2,
		//|	ДанныеУчета.СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДт1)
		|		ИНАЧЕ ДанныеУчета.СубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДт2)
		|		ИНАЧЕ ДанныеУчета.СубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДт3)
		|		ИНАЧЕ ДанныеУчета.СубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ИЗМЕНЕНИЕ} 
		|	ДанныеУчета.СчетКт КАК СчетКт,
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ИЗМЕНЕНИЕ
		// Измайлова Полина 13.12.2011 11:45 
		//|	ДанныеУчета.СубконтоКт1,
		//|	ДанныеУчета.СубконтоКт2,
		//|	ДанныеУчета.СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКт1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКт1)
		|		ИНАЧЕ ДанныеУчета.СубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКт2)
		|		ИНАЧЕ ДанныеУчета.СубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКт3)
		|		ИНАЧЕ ДанныеУчета.СубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ИЗМЕНЕНИЕ} 
		|	ДанныеУчета.СчетДтНУ,
		|	ДанныеУчета.СчетКтНУ,
///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ИЗМЕНЕНИЕ
		// Измайлова Полина 13.12.2011 13:44 
		//|	ДанныеУчета.СубконтоДтНУ1,
		//|	ДанныеУчета.СубконтоДтНУ2,
		//|	ДанныеУчета.СубконтоДтНУ3,
		//|	ДанныеУчета.СубконтоКтНУ1,
		//|	ДанныеУчета.СубконтоКтНУ2,
		//|	ДанныеУчета.СубконтоКтНУ3,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДтНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДтНУ1)
		|		ИНАЧЕ ДанныеУчета.СубконтоДтНУ1
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДтНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДтНУ2)
		|		ИНАЧЕ ДанныеУчета.СубконтоДтНУ2
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДтНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДтНУ3)
		|		ИНАЧЕ ДанныеУчета.СубконтоДтНУ3
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКтНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКтНУ1)
		|		ИНАЧЕ ДанныеУчета.СубконтоКтНУ1
		|	КОНЕЦ КАК СубконтоКтНУ1,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКтНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКтНУ2)
		|		ИНАЧЕ ДанныеУчета.СубконтоКтНУ2
		|	КОНЕЦ КАК СубконтоКтНУ2,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКтНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКтНУ3)
		|		ИНАЧЕ ДанныеУчета.СубконтоКтНУ3
		|	КОНЕЦ КАК СубконтоКтНУ3,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ИЗМЕНЕНИЕ}
		|	ДанныеУчета.СпособРаспределенияЗатрат,
		|	ДанныеУчета.ОтражениеВУСН,
		|	ДанныеУчета.ПроцентЕНВД,
		|	ДанныеУчета.СчетЕНВД,
		|	ДанныеУчета.Субконто1ЕНВД,
		|	ДанныеУчета.Субконто2ЕНВД,
		|	ДанныеУчета.Субконто3ЕНВД,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.Сторно,
		|	ДанныеУчета.СпособРасчета,
		|	ДанныеУчета.ВидНачисленияПоСт255НК,
		|	ДанныеУчета.СтратегияОтраженияВУчете,
		|	ДанныеУчета.ПодразделениеОрганизации,
		|	ДанныеУчета.Результат,
		|	ДанныеУчета.ПериодДействияНачало,
		|	ДанныеУчета.ПериодДействияКонец,
		|	ДанныеУчета.ГрафикРаботы,
		|	ДанныеУчета.ВидУчетаВремени,
		|	ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ДанныеУчета.ДатаНачалаСобытия,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДт.НомерСтроки, 0) КАК НомерСубконтоРаботникиДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКт.НомерСтроки, 0) КАК НомерСубконтоРаботникиКт,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДт.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиКтНУ,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДтНУ.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДт.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДт,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДтНУ.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДтНУ,
		|	ЕСТЬNULL(СубконтоСт255НК.НомерСтроки, 0) КАК НомерСубконтоСт255НК,
		|	ЕСТЬNULL(База.СчетДтРазрез, БазаСреднегоЗаработка.СчетДтРазрез) КАК СчетДтРазрез,
		|	ЕСТЬNULL(База.СчетКтРазрез, БазаСреднегоЗаработка.СчетКтРазрез) КАК СчетКтРазрез,
		|	ВЫБОР
		|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК БазаСреднегоЗаработкаЕНВД,
		|	ЕСТЬNULL(База.СубконтоДт1Разрез, БазаСреднегоЗаработка.СубконтоДт1Разрез) КАК СубконтоДт1Разрез,
		|	ЕСТЬNULL(База.СубконтоДт2Разрез, БазаСреднегоЗаработка.СубконтоДт2Разрез) КАК СубконтоДт2Разрез,
		|	ЕСТЬNULL(База.СубконтоДт3Разрез, БазаСреднегоЗаработка.СубконтоДт3Разрез) КАК СубконтоДт3Разрез,
		|	ЕСТЬNULL(База.СубконтоКт1Разрез, БазаСреднегоЗаработка.СубконтоКт1Разрез) КАК СубконтоКт1Разрез,
		|	ЕСТЬNULL(База.СубконтоКт2Разрез, БазаСреднегоЗаработка.СубконтоКт2Разрез) КАК СубконтоКт2Разрез,
		|	ЕСТЬNULL(База.СубконтоКт3Разрез, БазаСреднегоЗаработка.СубконтоКт3Разрез) КАК СубконтоКт3Разрез,
		|	ЕСТЬNULL(База.СчетДтНУРазрез, БазаСреднегоЗаработка.СчетДтНУРазрез) КАК СчетДтНУРазрез,
		|	ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) КАК СчетКтНУРазрез,
		|	ЕСТЬNULL(СубконтоСт255НКБазы.НомерСтроки, 0) КАК НомерСубконтоСт255НКБазы,
		|	ЕСТЬNULL(База.СубконтоДтНУ1Разрез, БазаСреднегоЗаработка.СубконтоДтНУ1Разрез) КАК СубконтоДтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ2Разрез, БазаСреднегоЗаработка.СубконтоДтНУ2Разрез) КАК СубконтоДтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ3Разрез, БазаСреднегоЗаработка.СубконтоДтНУ3Разрез) КАК СубконтоДтНУ3Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ1Разрез, БазаСреднегоЗаработка.СубконтоКтНУ1Разрез) КАК СубконтоКтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ2Разрез, БазаСреднегоЗаработка.СубконтоКтНУ2Разрез) КАК СубконтоКтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ3Разрез, БазаСреднегоЗаработка.СубконтоКтНУ3Разрез) КАК СубконтоКтНУ3Разрез,
		|	ЕСТЬNULL(База.СпособРаспределенияЗатратРазрез, БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез) КАК СпособРаспределенияЗатратРазрез,
		|	ЕСТЬNULL(База.ОтражениеВУСНРазрез, БазаСреднегоЗаработка.ОтражениеВУСНРазрез) КАК ОтражениеВУСНРазрез,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ДоляСпособаОтражения ЕСТЬ НЕ NULL 
		|			ТОГДА ДанныеУчета.ДоляСпособаОтражения
		|		КОГДА База.РезультатБаза ЕСТЬ НЕ NULL 
		|			ТОГДА База.РезультатБаза
		|		ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|	КОНЕЦ КАК РезультатБаза,
		|	ДанныеУчета.ДоляСпособаОтражения,
		|	ДанныеУчета.РезультатСторно КАК РезультатСторно,
		|	ДанныеУчета.ПериодДействияНачалоСторно КАК ПериодДействияНачалоСторно,
		|	ДанныеУчета.ПериодДействияКонецСторно КАК ПериодДействияКонецСторно,
		|	ЛОЖЬ КАК ЭтоЕдиновременноеПособиеФСС,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание), ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоПособияФСС,
		|	ДанныеУчета.ПодразделениеДт,
		|	ДанныеУчета.ПодразделениеКт,
		|	ЕСТЬNULL(База.ПодразделениеДтРазрез, БазаСреднегоЗаработка.ПодразделениеДтРазрез) КАК ПодразделениеДтРазрез,
		|	ЕСТЬNULL(База.ПодразделениеКтРазрез, БазаСреднегоЗаработка.ПодразделениеКтРазрез) КАК ПодразделениеКтРазрез
		|ИЗ
		|	ДанныеУчета КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоРаботникиДт.Ссылка
		|			И (ВидыСубконтоРаботникиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиКт
		|		ПО (ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетКт = ВидыСубконтоРаботникиКт.Ссылка
		|			И (ВидыСубконтоРаботникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоПодразделенияДт.Ссылка
		|			И (ВидыСубконтоПодразделенияДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоСтатьиЗатратДт.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоСтатьиЗатратДтНУ.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НК
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = СубконтоСт255НК.Ссылка
		|			И (СубконтоСт255НК.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоРаботникиДтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиКтНУ
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = ВидыСубконтоРаботникиКтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиКтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоПодразделенияДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоПодразделенияДтНУ.Ссылка
		|			И (ВидыСубконтоПодразделенияДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_База КАК База
		|		ПО ДанныеУчета.Регистратор = База.Регистратор
		|			И ДанныеУчета.НомерСтроки = База.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.Регистратор = БазаСреднегоЗаработка.Регистратор
		|			И ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НКБазы
		|		ПО (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) = СубконтоСт255НКБазы.Ссылка)
		|			И (СубконтоСт255НКБазы.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
		|		ПО ДанныеУчета.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 13.12.2011 11:39 
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.AVT_СоответствиеВидовРасчетаИСтатейЗатрат КАК СоответствиеВидовРасчетаИСтатейЗатратДт
		|		ПО (ВЫБОР
		|				КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|						И (ДанныеУчета.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|							ИЛИ ДанныеУчета.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|							ИЛИ ДанныеУчета.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат)
		|					ТОГДА ДанныеУчета.ВидРасчета = СоответствиеВидовРасчетаИСтатейЗатратДт.ВидРасчета
		|							И ДанныеУчета.СчетДт = СоответствиеВидовРасчетаИСтатейЗатратДт.Счет
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.AVT_СоответствиеВидовРасчетаИСтатейЗатрат КАК СоответствиеВидовРасчетаИСтатейЗатратКт
		|		ПО (ВЫБОР
		|				КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|						И (ДанныеУчета.СубконтоКт1 ССЫЛКА Справочник.СтатьиЗатрат
		|							ИЛИ ДанныеУчета.СубконтоКт2 ССЫЛКА Справочник.СтатьиЗатрат
		|							ИЛИ ДанныеУчета.СубконтоКт3 ССЫЛКА Справочник.СтатьиЗатрат)
		|					ТОГДА ДанныеУчета.ВидРасчета = СоответствиеВидовРасчетаИСтатейЗатратКт.ВидРасчета
		|							И ДанныеУчета.СчетКт = СоответствиеВидовРасчетаИСтатейЗатратКт.Счет
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ) 
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Регистратор,
		|	НомерСтроки,
		|	СчетДтРазрез,
		|	СчетДтНУРазрез,
		|	СубконтоДт1Разрез,
		|	СубконтоДт2Разрез,
		|	СубконтоДтНУ1Разрез,
		|	СубконтоДтНУ2Разрез,
		|	ОтражениеВУСНРазрез,
		|	СчетДт
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	Иначе // Дополнительные начисления
		
		Если Не ЭтоПервичныеНачисления Тогда
			
			//соберем базу для зависимых начислений
			БазаТекст = 
			"ВЫБРАТЬ
			|	База.Регистратор КАК Регистратор,
			|	База.НомерСтроки КАК НомерСтроки,
			|	База.СчетДтРазрез КАК СчетДтРазрез,
			|	База.СчетКтРазрез КАК СчетКтРазрез,
			|	База.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|	База.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|	База.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|	База.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|	База.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|	База.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|	База.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|	База.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|	База.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|	СУММА(База.РезультатБаза) КАК РезультатБаза,
			|	База.ПодразделениеДтРазрез,
			|	База.ПодразделениеКтРазрез
			|ПОМЕСТИТЬ База
			|ИЗ
			|	(ВЫБРАТЬ
			|		БазаБУДополнительныеНачисления.Регистратор КАК Регистратор,
			|		БазаБУДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаБУДополнительныеНачисления.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаБУДополнительныеНачисления.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаБУДополнительныеНачисления.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаБУДополнительныеНачисления.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаБУДополнительныеНачисления.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаБУДополнительныеНачисления.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
			|		БазаБУДополнительныеНачисления.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		БазаБУДополнительныеНачисления.ПодразделениеДтРазрез КАК ПодразделениеДтРазрез,
			|		БазаБУДополнительныеНачисления.ПодразделениеКтРазрез КАК ПодразделениеКтРазрез,
			|		БазаБУДополнительныеНачисления.РезультатБаза КАК РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаБУДополнительныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И НАЧАЛОПЕРИОДА(ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета В (&парамСписокНачислений)
			|					И (НЕ Сторно)) КАК БазаБУДополнительныеНачисления
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		БазаБУОсновныеНачисления.Регистратор,
			|		БазаБУОсновныеНачисления.НомерСтроки,
			|		БазаБУОсновныеНачисления.СчетДтРазрез,
			|		БазаБУОсновныеНачисления.СчетКтРазрез,
			|		БазаБУОсновныеНачисления.СубконтоДт1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДт2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДт3Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКт3Разрез,
			|		БазаБУОсновныеНачисления.СчетДтНУРазрез,
			|		БазаБУОсновныеНачисления.СчетКтНУРазрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоДтНУ3Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ1Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ2Разрез,
			|		БазаБУОсновныеНачисления.СубконтоКтНУ3Разрез,
			|		БазаБУОсновныеНачисления.СпособРаспределенияЗатратРазрез,
			|		БазаБУОсновныеНачисления.ОтражениеВУСНРазрез,
			|		БазаБУОсновныеНачисления.ПодразделениеДтРазрез,
			|		БазаБУОсновныеНачисления.ПодразделениеКтРазрез,
			|		БазаБУОсновныеНачисления.РезультатБаза
			|	ИЗ
			|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаБУОсновныеНачисления(
			|				&парамИзмерения,
			|				&парамИзмерения,
			|				&парамРазрезыБУ,
			|				ОбособленноеПодразделение = &парамОрганизация
			|					И НАЧАЛОПЕРИОДА(ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
			|					И ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
			|					И (НЕ ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработку))
			|					И ВидРасчета В (&парамСписокНачислений)
			|					И (НЕ Сторно)) КАК БазаБУОсновныеНачисления) КАК База
			|
			|СГРУППИРОВАТЬ ПО
			|	База.Регистратор,
			|	База.НомерСтроки,
			|	База.СчетДтРазрез,
			|	База.СчетКтРазрез,
			|	База.СубконтоДт1Разрез,
			|	База.СубконтоДт2Разрез,
			|	База.СубконтоДт3Разрез,
			|	База.СубконтоКт1Разрез,
			|	База.СубконтоКт2Разрез,
			|	База.СубконтоКт3Разрез,
			|	База.СчетДтНУРазрез,
			|	База.СчетКтНУРазрез,
			|	База.СубконтоДтНУ1Разрез,
			|	База.СубконтоДтНУ2Разрез,
			|	База.СубконтоДтНУ3Разрез,
			|	База.СубконтоКтНУ1Разрез,
			|	База.СубконтоКтНУ2Разрез,
			|	База.СубконтоКтНУ3Разрез,
			|	База.СпособРаспределенияЗатратРазрез,
			|	База.ОтражениеВУСНРазрез,
			|	База.ПодразделениеДтРазрез,
			|	База.ПодразделениеКтРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе
			
			БазаТекст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
			|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеДтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеКтРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ База";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаТекст;
		//временная таблица - База
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ БАЗЫ СРЕДНЕГО ЗАРАБОТКА для доп. начислений
		
		ПолучатьБазу = Ложь;
		
		// ВТ_НачисленияПоСреднемуЗаработку
		//
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Сотрудник,
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.ДатаНачалаСобытия,
		|	ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало,
		|	ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание,
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
		|ПОМЕСТИТЬ ВТ_НачисленияПоСреднемуЗаработку
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
		|	И (НЕ ДополнительныеНачисления.Сторно)
		|	И ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)";
		Запрос.Выполнить();
		
		// ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку
		// условия для виртуальной таблицы
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия
		|ПОМЕСТИТЬ ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку
		|ИЗ
		|	ВТ_НачисленияПоСреднемуЗаработку КАК ДополнительныеНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия";
		Результат = Запрос.Выполнить().Выгрузить();
		ПолучатьБазу = Результат[0].Количество > 0;
		
		Если ПолучатьБазу Тогда
			
			БазаСреднегоЗаработкаТекст =
			"ВЫБРАТЬ
			|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
			|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	БазаСреднегоЗаработка.ПодразделениеДтРазрез,
			|	БазаСреднегоЗаработка.ПодразделениеКтРазрез,
			|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка
			|ИЗ
			|	(ВЫБРАТЬ
			|		ДополнительныеНачисления.Регистратор КАК Регистратор,
			|		ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
			|		БазаСреднегоЗаработка.ПодразделениеДтРазрез КАК ПодразделениеДтРазрез,
			|		БазаСреднегоЗаработка.ПодразделениеКтРазрез КАК ПодразделениеКтРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ КАК РезультатБаза
			|	ИЗ
			|		ВТ_НачисленияПоСреднемуЗаработку КАК ДополнительныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ДополнительныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ДополнительныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ДополнительныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДополнительныеНачисления.Регистратор,
			|		ДополнительныеНачисления.НомерСтроки,
			|		БазаСреднегоЗаработка.СчетДтРазрез,
			|		БазаСреднегоЗаработка.СчетКтРазрез,
			|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|		БазаСреднегоЗаработка.СчетДтНУРазрез,
			|		БазаСреднегоЗаработка.СчетКтНУРазрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|		БазаСреднегоЗаработка.ПодразделениеДтРазрез,
			|		БазаСреднегоЗаработка.ПодразделениеКтРазрез,
			|		ВЫБОР
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработок)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|							ТОГДА 1
			|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|					КОНЕЦ
			|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамОсновнойЗаработокНеиндексируемый)
			|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
			|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиям)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
			|									ТОГДА 1
			|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
			|							КОНЕЦ * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (&парамПоФиксПремиямНеИндексируемые)
			|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
			|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
			|									ТОГДА 0
			|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
			|							КОНЕЦ
			|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
			|				КОНЕЦ * ВЫБОР
			|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
			|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
			|					ИНАЧЕ 1
			|				КОНЕЦ
			|		КОНЕЦ
			|	ИЗ
			|		ВТ_НачисленияПоСреднемуЗаработку КАК ДополнительныеНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
			|					&парамИзмерения,
			|					&парамИзмерения,
			|					&парамРазрезыБУ,
			|					Организация = &парамГоловнаяОрганизация
			|						И Результат <> 0
			|						И ПериодРегистрации = &парамПериодРегистрации
			|						И (Сотрудник, ДатаНачалаСобытия) В
			|							(ВЫБРАТЬ
			|								Список.Сотрудник,
			|								Список.ДатаНачалаСобытия
			|							ИЗ
			|								ВТ_СотрудникиПериодыНачисленияПоСреднемуЗаработку КАК Список)) КАК БазаСреднегоЗаработка
			|			ПО ДополнительныеНачисления.СпособРасчета = БазаСреднегоЗаработка.СпособРасчета
			|				И ДополнительныеНачисления.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаНачало = БазаСреднегоЗаработка.ДатаНачалаРасчетногоПериода
			|				И ДополнительныеНачисления.ПериодРасчетаСреднегоЗаработкаОкончание = БазаСреднегоЗаработка.ДатаОкончанияРасчетногоПериода
			|				И ДополнительныеНачисления.Сотрудник = БазаСреднегоЗаработка.Сотрудник) КАК БазаСреднегоЗаработка
			|
			|СГРУППИРОВАТЬ ПО
			|	БазаСреднегоЗаработка.СчетКтРазрез,
			|	БазаСреднегоЗаработка.СчетДтРазрез,
			|	БазаСреднегоЗаработка.Регистратор,
			|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
			|	БазаСреднегоЗаработка.СчетДтНУРазрез,
			|	БазаСреднегоЗаработка.СчетКтНУРазрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
			|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
			|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
			|	БазаСреднегоЗаработка.НомерСтроки,
			|	БазаСреднегоЗаработка.ПодразделениеДтРазрез,
			|	БазаСреднегоЗаработка.ПодразделениеКтРазрез
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе	
			
			БазаСреднегоЗаработкаТекст = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
			|	0 КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
			|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
			|   ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
			|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
			|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеДтРазрез,
			|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеКтРазрез,
			|	0 КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка";
			
		КонецЕсли;	
		
		Запрос.Текст = БазаСреднегоЗаработкаТекст;
		//временная таблица - ВТ_БазаСреднегоЗаработка
		Запрос.Выполнить();
		
		// Закончили получение базы среднего заработка для доп. начислений
		///////////////////////////////////////////////////////////////////////////////////
		
		
		///////////////////////////////////////////////////////////////////////////////////
		//получим отражение в учете сторно записей
		
		ДополнительныеНачисленияСторноТекст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета,
		|	ДополнительныеНачисления.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисленияСторно
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.Сторно";
		
		Запрос.Текст = ДополнительныеНачисленияСторноТекст;
		//временная таблица - ВТ_ДополнительныеНачисленияСторно
		Результат = Запрос.Выполнить().Выгрузить();
		КоличествоСторноЗаписей = Результат[0].Количество; 
		
		Если КоличествоСторноЗаписей <> 0 Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДополнительныеНачисленияСторно.Регистратор КАК Регистратор,
			|	ДополнительныеНачисленияСторно.НомерСтроки КАК НомерСтроки,
			|	ДополнительныеНачисленияСторно.Сотрудник КАК Сотрудник,
			|	ДополнительныеНачисленияСторно.ВидРасчета КАК ВидРасчета,
			|	ДополнительныеНачисленияСторно.СторнируемыйДокумент КАК СторнируемыйДокумент,
			|	НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТ_СторноСотрудники
			|ИЗ
			|	ВТ_ДополнительныеНачисленияСторно КАК ДополнительныеНачисленияСторно
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
			|		ПО ДополнительныеНачисленияСторно.СторнируемыйДокумент = ДополнительныеНачисления.Регистратор
			|ГДЕ
			|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	ПериодРегистрации,
			|	ВидРасчета";
			
			//временная таблица - ВТ_СторноСотрудники
			Запрос.Выполнить();
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	ДополнительныеНачисления.Регистратор КАК Регистратор,
			|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
			|	БУДополнительныеНачисления.СчетДт,
			|	БУДополнительныеНачисления.СубконтоДт1,
			|	БУДополнительныеНачисления.СубконтоДт2,
			|	БУДополнительныеНачисления.СубконтоДт3,
			|	БУДополнительныеНачисления.СчетКт,
			|	БУДополнительныеНачисления.СубконтоКт1,
			|	БУДополнительныеНачисления.СубконтоКт2,
			|	БУДополнительныеНачисления.СубконтоКт3,
			|	БУДополнительныеНачисления.СчетДтНУ,
			|	БУДополнительныеНачисления.СубконтоДтНУ1,
			|	БУДополнительныеНачисления.СубконтоДтНУ2,
			|	БУДополнительныеНачисления.СубконтоДтНУ3,
			|	БУДополнительныеНачисления.СчетКтНУ,
			|	БУДополнительныеНачисления.СубконтоКтНУ1,
			|	БУДополнительныеНачисления.СубконтоКтНУ2,
			|	БУДополнительныеНачисления.СубконтоКтНУ3,
			|	БУДополнительныеНачисления.СпособРаспределенияЗатрат,
			|	БУДополнительныеНачисления.ОтражениеВУСН,
			|	БУДополнительныеНачисления.ПодразделениеДт,
			|	БУДополнительныеНачисления.ПодразделениеКт,
			|	БУДополнительныеНачисления.Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно
			|ИЗ
			|	ВТ_СторноСотрудники КАК ДополнительныеНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			БУДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
			|			БУДополнительныеНачисления.Сотрудник КАК Сотрудник,
			|			БУДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
			|			БУДополнительныеНачисления.Организация КАК Организация,
			|			БУДополнительныеНачисления.Результат КАК Результат,
			|			БУДополнительныеНачисления.СчетДт КАК СчетДт,
			|			БУДополнительныеНачисления.СубконтоДт1 КАК СубконтоДт1,
			|			БУДополнительныеНачисления.СубконтоДт2 КАК СубконтоДт2,
			|			БУДополнительныеНачисления.СубконтоДт3 КАК СубконтоДт3,
			|			БУДополнительныеНачисления.СчетКт КАК СчетКт,
			|			БУДополнительныеНачисления.СубконтоКт1 КАК СубконтоКт1,
			|			БУДополнительныеНачисления.СубконтоКт2 КАК СубконтоКт2,
			|			БУДополнительныеНачисления.СубконтоКт3 КАК СубконтоКт3,
			|			БУДополнительныеНачисления.СчетДтНУ КАК СчетДтНУ,
			|			БУДополнительныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
			|			БУДополнительныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
			|			БУДополнительныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
			|			БУДополнительныеНачисления.СчетКтНУ КАК СчетКтНУ,
			|			БУДополнительныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
			|			БУДополнительныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
			|			БУДополнительныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
			|			БУДополнительныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
			|			БУДополнительныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
			|			БУДополнительныеНачисления.ДокументОснование КАК ДокументОснование,
			|			БУДополнительныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
			|			БУДополнительныеНачисления.ПодразделениеКт КАК ПодразделениеКт
			|		ИЗ
			|			РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
			|		ГДЕ
			|			(НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ), БУДополнительныеНачисления.Сотрудник, БУДополнительныеНачисления.ВидРасчета) В
			|					(ВЫБРАТЬ
			|						ДополнительныеНачисления.ПериодРегистрации,
			|						ДополнительныеНачисления.Сотрудник,
			|						ДополнительныеНачисления.ВидРасчета
			|					ИЗ
			|						ВТ_СторноСотрудники КАК ДополнительныеНачисления)
			|			И (НЕ БУДополнительныеНачисления.Сторно)) КАК БУДополнительныеНачисления
			|		ПО ДополнительныеНачисления.ВидРасчета = БУДополнительныеНачисления.ВидРасчета
			|			И ДополнительныеНачисления.Сотрудник = БУДополнительныеНачисления.Сотрудник
			|			И ДополнительныеНачисления.СторнируемыйДокумент = БУДополнительныеНачисления.ДокументОснование
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки";
			
		Иначе
			
			ОтражениеВУчетеСторноТекст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК Регистратор,
			|	НЕОПРЕДЕЛЕНО КАК НомерСтроки,
			|	НЕОПРЕДЕЛЕНО КАК СчетДт,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
			|	НЕОПРЕДЕЛЕНО КАК СчетКт,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
			|	НЕОПРЕДЕЛЕНО КАК СчетДтНУ,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоДтНУ3,
			|	НЕОПРЕДЕЛЕНО КАК СчетКтНУ,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ1,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ2,
			|	НЕОПРЕДЕЛЕНО КАК СубконтоКтНУ3,
			|	НЕОПРЕДЕЛЕНО КАК СпособРаспределенияЗатрат,
			|	НЕОПРЕДЕЛЕНО КАК ОтражениеВУСН,
			|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
			|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
			|	0 КАК Результат
			|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно";
			
		КонецЕсли;
		
		Запрос.Текст = ОтражениеВУчетеСторноТекст;
		//временная таблица - ВТ_ОтражениеВУчетеСторно
		Запрос.Выполнить();
		
		//получили отражение в учете сторно записей
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		// таблица ВТ_УчетПлановыхНачислений
		
		УчетПлановыхНачисленийТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ДополнительныеНачисления.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачислениДляПлановый
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ДополнительныеНачисления.Сторно)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	МАКСИМУМ(РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период) КАК Период,
		|	ДополнительныеНачисления.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_СведенияОНачислениях
		|ИЗ
		|	ВТ_ДополнительныеНачислениДляПлановый КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ДополнительныеНачисления.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|			И ДополнительныеНачисления.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник
		|			И ДополнительныеНачисления.ДокументОснование = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ДокументОснование
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник,
		|	ДополнительныеНачисления.ВидРасчета,
		|	ДополнительныеНачисления.ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.ПустаяСсылка)
		|		ИНАЧЕ РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД
		|	КОНЕЦ КАК ОтнесениеРасходовКДеятельностиЕНВД,
		|	СведенияОНачисленияхСрез.Регистратор КАК Регистратор,
		|	СведенияОНачисленияхСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетПлановыхНачислений
		|ИЗ
		|	РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОНачислениях КАК СведенияОНачисленияхСрез
		|		ПО (СведенияОНачисленияхСрез.Сотрудник = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Сотрудник)
		|			И (СведенияОНачисленияхСрез.ВидРасчета = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ВидРасчета)
		|			И (СведенияОНачисленияхСрез.Период = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Период)
		|			И (СведенияОНачисленияхСрез.ДокументОснование = РеглУчетПлановыхНачисленийРаботниковОрганизаций.ДокументОснование)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетПлановыхНачисленийТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ПЛАНОВЫХ НАЧИСЛЕНИЙ
		///////////////////////////////////////////////////////////////////////////////////
		
		ДополнительныеНачисленияТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ПериодРегистрации,
		|	ДополнительныеНачисления.ПодразделениеОрганизации,
		|	ДополнительныеНачисления.ОбособленноеПодразделение
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия)
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)
		|	И (НЕ ДополнительныеНачисления.Сторно)";
		Запрос.Текст = ДополнительныеНачисленияТекст;
		Запрос.Выполнить();
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		// таблица ВТ_УчетОсновногоЗаработка
		
		УчетОсновногоЗаработкаТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(УчетЗарВРеглУчете.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОРаботниках
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ПО ДополнительныеНачисления.Сотрудник = УчетЗарВРеглУчете.Сотрудник
		|			И (УчетЗарВРеглУчете.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетЗарВРеглУчете.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА NULL
		|		ИНАЧЕ УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД,
		|	СведенияОРаботникахСрез.Регистратор КАК Регистратор,
		|	СведенияОРаботникахСрез.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработка
		|ИЗ
		|	РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетЗарВРеглУчете
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОРаботниках КАК СведенияОРаботникахСрез
		|		ПО (СведенияОРаботникахСрез.Сотрудник = УчетЗарВРеглУчете.Сотрудник)
		|			И (СведенияОРаботникахСрез.Период = УчетЗарВРеглУчете.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА РАБОТНИКОВ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		// таблица ВТ_УчетОсновногоЗаработкаПодразделения
		
		УчетОсновногоЗаработкаПодразделенияТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	МАКСИМУМ(УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияОПодразделениях
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ДополнительныеНачисления.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И (УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.ПодразделениеОрганизации,
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодразделениеОрганизации,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПодразделенияхСрез.Регистратор КАК Регистратор,
		|	СведенияОПодразделенияхСрез.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаПодразделения
		|ИЗ
		|	ВТ_СведенияОПодразделениях КАК СведенияОПодразделенияхСрез
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО СведенияОПодразделенияхСрез.ПодразделениеОрганизации = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
		|			И СведенияОПодразделенияхСрез.Период = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаПодразделенияТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ПОДРАЗДЕЛЕНИЯ
		///////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////
		// ПОЛУЧЕНИЕ СПОСОБОВ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		// таблица ВТ_УчетОсновногоЗаработкаОрганизации
		
		УчетОсновногоЗаработкаОрганизацииТекст =
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	МАКСИМУМ(УчетОсновногоЗаработкаОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_СведенияПоОрганизации
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ДополнительныеНачисления.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И (УчетОсновногоЗаработкаОрганизации.Период <= ДополнительныеНачисления.ПериодРегистрации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.ОбособленноеПодразделение,
		|	ДополнительныеНачисления.Регистратор,
		|	ДополнительныеНачисления.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПоОрганизации.Регистратор КАК Регистратор,
		|	СведенияПоОрганизации.НомерСтроки КАК НомерСтроки,
		|	УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
		|	ВЫБОР
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|	КОНЕЦ КАК ПодпадаетПодЕНВД
		|ПОМЕСТИТЬ ВТ_УчетОсновногоЗаработкаОрганизации
		|ИЗ
		|	ВТ_СведенияПоОрганизации КАК СведенияПоОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО СведенияПоОрганизации.ОбособленноеПодразделение = УчетОсновногоЗаработкаОрганизации.Организация
		|			И СведенияПоОрганизации.Период = УчетОсновногоЗаработкаОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		Запрос.Текст = УчетОсновногоЗаработкаОрганизацииТекст;
		Запрос.Выполнить();
		
		// ПОЛУЧИЛИ СПОСОБЫ ОТРАЖЕНИЯ В УЧЕТЕ ОСНОВНОГО ЗАРАБОТКА ОРГАНИЗАЦИИ
		///////////////////////////////////////////////////////////////////////////////////
		
		
		ДанныеУчетаТекст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Регистратор КАК Регистратор,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ДополнительныеНачисления.ВидРасчета.ВидНачисленияПоСт255НК КАК ВидНачисленияПоСт255НК,
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете КАК СтратегияОтраженияВУчете,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДт
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДт
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетДт
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКт
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКт
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКт
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКт
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКт
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ПодразделениеДт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеДт,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ПодразделениеКт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеКт,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДт3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКт3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКт3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетДтНУ
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетДтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СчетКтНУ
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СчетКтНУ
		|		ИНАЧЕ &парамСпособПоУмолчаниюСчетКтНУ
		|	КОНЕЦ КАК СчетКтНУ,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ1
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ2
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоДтНУ3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоДтНУ3
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ1
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ1
		|	КОНЕЦ КАК СубконтоКтНУ1,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ2
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ2
		|	КОНЕЦ КАК СубконтоКтНУ2,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СубконтоКтНУ3
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
		|		ИНАЧЕ &парамСпособПоУмолчаниюСубконтоКтНУ3
		|	КОНЕЦ КАК СубконтоКтНУ3,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.СпособРаспределенияЗатрат
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
		|		ИНАЧЕ &парамСпособПоУмолчаниюСпособРаспределенияЗатрат
		|	КОНЕЦ КАК СпособРаспределенияЗатрат,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.Сторно
		|			ТОГДА ОтражениеВУчетеСторно.ОтражениеВУСН
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Распределение.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете.ОтражениеВУСН
		|		ИНАЧЕ &парамСпособПоУмолчаниюОтражениеВУСН
		|	КОНЕЦ КАК ОтражениеВУСН,
		|	ВЫБОР
		|		КОГДА (НЕ &ЕстьЕНВД)
		|			ТОГДА 0
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|			ТОГДА 100
		|		КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|			ТОГДА 0
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 100
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ОтнесениеРасходовКДеятельностиЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|				И ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяССылка)
		|			ТОГДА 0
		|		КОГДА Распределение.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА Распределение.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА ЕНВДПроцент.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ЕНВДПроцент.ПодпадаетПодЕНВД
		|		КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД ЕСТЬ НЕ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА УчетЗарВРеглУчете.ПодпадаетПодЕНВД
		|						ТОГДА 100
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		КОГДА УчетОсновногоЗаработкаОрганизации.ПодпадаетПодЕНВД
		|			ТОГДА 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентЕНВД,
		|	ЕНВДПроцент.СчетДт КАК СчетЕНВД,
		|	ЕНВДПроцент.Субконто1 КАК Субконто1ЕНВД,
		|	ЕНВДПроцент.Субконто2 КАК Субконто2ЕНВД,
		|	ЕНВДПроцент.Субконто3 КАК Субконто3ЕНВД,
		|	ЕНВДПроцент.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатратЕНВД,
		|	Распределение.ДоляСпособаОтражения КАК ДоляСпособаОтражения,
		|	ДополнительныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ДополнительныеНачисления.Результат КАК Результат,
		|	ДополнительныеНачисления.Сторно КАК Сторно,
		|	ДополнительныеНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	ДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ОтражениеВУчетеСторно.Результат КАК РезультатСторно,
		|	ВЫБОР
		|		КОГДА ДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЕдиновременноеПособиеФСС,
		|	ДополнительныеНачисления.Сотрудник.Наименование КАК СотрудникНаименование
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 13.12.2011 13:55 
		|	,ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ДополнительныеНачисления.Сторно
		|					ТОГДА ЛОЖЬ
		|				КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ВЫБОР
		|							КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям)
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ИСТИНА
		|						КОНЕЦ
		|				КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				КОГДА УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				КОГДА УчетОсновногоЗаработкаОрганизации.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И &парамЗаменятьСтатьюЗатрат
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ &парамЗаменятьСтатьюЗатрат
		|			КОНЕЦ
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЗаменятьСтатьюЗатрат
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
		|ПОМЕСТИТЬ ДанныеУчета
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетПлановыхНачислений КАК РеглУчетПлановыхНачисленийРаботниковОрганизаций
		|		ПО ДополнительныеНачисления.Регистратор = РеглУчетПлановыхНачисленийРаботниковОрганизаций.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = РеглУчетПлановыхНачисленийРаботниковОрганизаций.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|		ПО ДополнительныеНачисления.Сотрудник = Распределение.Сотрудник
		|			И (НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = Распределение.ПериодРегистрации)
		|			И (РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете ЕСТЬ NULL )
		|			И (ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакЗаданоНаНачалоСобытия))
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|			И (Распределение.ДоляСпособаОтражения <> 0)
		|			И (ВЫБОР
		|				КОГДА ДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПриУсыновленииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ВСвязиСоСмертью))
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработка КАК УчетЗарВРеглУчете
		|		ПО ДополнительныеНачисления.Регистратор = УчетЗарВРеглУчете.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетЗарВРеглУчете.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаПодразделения КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
		|		ПО ДополнительныеНачисления.Регистратор = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетОсновногоЗаработкаОрганизации КАК УчетОсновногоЗаработкаОрганизации
		|		ПО ДополнительныеНачисления.Регистратор = УчетОсновногоЗаработкаОрганизации.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = УчетОсновногоЗаработкаОрганизации.НомерСтроки
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентДеятельностиЕНВДСотрудников КАК ЕНВДПроцент
		|		ПО ДополнительныеНачисления.Сотрудник = ЕНВДПроцент.Сотрудник
		|			И (ЕНВДПроцент.ПериодРегистрации = НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ))
		|			И ((НЕ ДополнительныеНачисления.Сторно))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
		|		ПО (БУДополнительныеНачисления.Сотрудник = ДополнительныеНачисления.Сотрудник)
		|			И (БУДополнительныеНачисления.ВидРасчета = ДополнительныеНачисления.ВидРасчета)
		|			И (НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации)
		|			И (БУДополнительныеНачисления.ДокументОснование = ДополнительныеНачисления.Регистратор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтражениеВУчетеСторно КАК ОтражениеВУчетеСторно
		|		ПО ДополнительныеНачисления.Регистратор = ОтражениеВУчетеСторно.Регистратор
		|			И ДополнительныеНачисления.НомерСтроки = ОтражениеВУчетеСторно.НомерСтроки
		|ГДЕ
		|	БУДополнительныеНачисления.Сотрудник ЕСТЬ NULL 
		|	И ДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|	И ВЫБОР
		|			КОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА РеглУчетПлановыхНачисленийРаботниковОрганизаций.СпособОтраженияВБухучете
		|			КОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА ДополнительныеНачисления.ВидРасчета.СпособОтраженияВБухучете
		|			КОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|				ТОГДА УчетЗарВРеглУчете.СпособОтраженияВБухучете
		|			ИНАЧЕ &парамСпособПоУмолчанию
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
		|	И ДополнительныеНачисления.Результат <> 0
		|	И ДополнительныеНачисления.ВидРасчета В(&парамСписокНачислений)";
		
		Запрос.Текст = ДанныеУчетаТекст;
		//временная таблица - ДанныеУчета
		Запрос.Выполнить();
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&парамГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДанныеУчета.Регистратор КАК Регистратор,
		|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
		|	ДанныеУчета.Сотрудник,
		|	ДанныеУчета.СотрудникНаименование КАК СотрудникНаименование,
		|	ДанныеУчета.ФизЛицо,
		|	ДанныеУчета.СчетДт КАК СчетДт,
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ИЗМЕНЕНИЕ
		// Измайлова Полина 13.12.2011 13:40 
		//|	ДанныеУчета.СубконтоДт1,
		//|	ДанныеУчета.СубконтоДт2,
		//|	ДанныеУчета.СубконтоДт3,
        |	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДт1)
		|		ИНАЧЕ ДанныеУчета.СубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДт2)
		|		ИНАЧЕ ДанныеУчета.СубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДт3)
		|		ИНАЧЕ ДанныеУчета.СубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ИЗМЕНЕНИЕ}                                          
		|	ДанныеУчета.СчетКт КАК СчетКт,
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ИЗМЕНЕНИЕ
		// Измайлова Полина 13.12.2011 13:41 
		//|	ДанныеУчета.СубконтоКт1,
		//|	ДанныеУчета.СубконтоКт2,
		//|	ДанныеУчета.СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКт1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКт1)
		|		ИНАЧЕ ДанныеУчета.СубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКт2)
		|		ИНАЧЕ ДанныеУчета.СубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКт3)
		|		ИНАЧЕ ДанныеУчета.СубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ИЗМЕНЕНИЕ} 
		|	ДанныеУчета.СчетДтНУ,
		|	ДанныеУчета.СчетКтНУ,
		///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ИЗМЕНЕНИЕ
		// Измайлова Полина 13.12.2011 13:43 
		//|	ДанныеУчета.СубконтоДтНУ1,
		//|	ДанныеУчета.СубконтоДтНУ2,
		//|	ДанныеУчета.СубконтоДтНУ3,
		//|	ДанныеУчета.СубконтоКтНУ1,
		//|	ДанныеУчета.СубконтоКтНУ2,
		//|	ДанныеУчета.СубконтоКтНУ3,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДтНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДтНУ1)
		|		ИНАЧЕ ДанныеУчета.СубконтоДтНУ1
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДтНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДтНУ2)
		|		ИНАЧЕ ДанныеУчета.СубконтоДтНУ2
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоДтНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратДт.СтатьяЗатрат, ДанныеУчета.СубконтоДтНУ3)
		|		ИНАЧЕ ДанныеУчета.СубконтоДтНУ3
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКтНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКтНУ1)
		|		ИНАЧЕ ДанныеУчета.СубконтоКтНУ1
		|	КОНЕЦ КАК СубконтоКтНУ1,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКтНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКтНУ2)
		|		ИНАЧЕ ДанныеУчета.СубконтоКтНУ2
		|	КОНЕЦ КАК СубконтоКтНУ2,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|				И ДанныеУчета.СубконтоКтНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ЕСТЬNULL(СоответствиеВидовРасчетаИСтатейЗатратКт.СтатьяЗатрат, ДанныеУчета.СубконтоКтНУ3)
		|		ИНАЧЕ ДанныеУчета.СубконтоКтНУ3
		|	КОНЕЦ КАК СубконтоКтНУ3,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ИЗМЕНЕНИЕ}
		|	ДанныеУчета.СпособРаспределенияЗатрат,
		|	ДанныеУчета.ОтражениеВУСН,
		|	ДанныеУчета.ПроцентЕНВД,
		|	ДанныеУчета.СчетЕНВД,
		|	ДанныеУчета.Субконто1ЕНВД,
		|	ДанныеУчета.Субконто2ЕНВД,
		|	ДанныеУчета.Субконто3ЕНВД,
		|	ДанныеУчета.ВидРасчета,
		|	ДанныеУчета.СпособРасчета,
		|	ДанныеУчета.ВидНачисленияПоСт255НК,
		|	ДанныеУчета.СтратегияОтраженияВУчете,
		|	ДанныеУчета.ПодразделениеОрганизации,
		|	ДанныеУчета.Результат,
		|	ДанныеУчета.ПериодРегистрации,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ПустаяСсылка) КАК ВариантОбработкиЗаписиПриОтраженииВРеглУчете,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДт.НомерСтроки, 0) КАК НомерСубконтоРаботникиДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКт.НомерСтроки, 0) КАК НомерСубконтоРаботникиКт,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДт.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДт,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиДтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоРаботникиКтНУ.НомерСтроки, 0) КАК НомерСубконтоРаботникиКтНУ,
		|	ЕСТЬNULL(ВидыСубконтоПодразделенияДтНУ.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДтНУ,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДт.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДт,
		|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДтНУ.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДтНУ,
		|	ЕСТЬNULL(СубконтоСт255НК.НомерСтроки, 0) КАК НомерСубконтоСт255НК,
		|	ЕСТЬNULL(База.СчетДтРазрез, БазаСреднегоЗаработка.СчетДтРазрез) КАК СчетДтРазрез,
		|	ЕСТЬNULL(База.СчетКтРазрез, БазаСреднегоЗаработка.СчетКтРазрез) КАК СчетКтРазрез,
		|	ЕСТЬNULL(База.СубконтоДт1Разрез, БазаСреднегоЗаработка.СубконтоДт1Разрез) КАК СубконтоДт1Разрез,
		|	ЕСТЬNULL(База.СубконтоДт2Разрез, БазаСреднегоЗаработка.СубконтоДт2Разрез) КАК СубконтоДт2Разрез,
		|	ЕСТЬNULL(База.СубконтоДт3Разрез, БазаСреднегоЗаработка.СубконтоДт3Разрез) КАК СубконтоДт3Разрез,
		|	ЕСТЬNULL(База.СубконтоКт1Разрез, БазаСреднегоЗаработка.СубконтоКт1Разрез) КАК СубконтоКт1Разрез,
		|	ЕСТЬNULL(База.СубконтоКт2Разрез, БазаСреднегоЗаработка.СубконтоКт2Разрез) КАК СубконтоКт2Разрез,
		|	ЕСТЬNULL(База.СубконтоКт3Разрез, БазаСреднегоЗаработка.СубконтоКт3Разрез) КАК СубконтоКт3Разрез,
		|	ЕСТЬNULL(База.СчетДтНУРазрез, БазаСреднегоЗаработка.СчетДтНУРазрез) КАК СчетДтНУРазрез,
		|	ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) КАК СчетКтНУРазрез,
		|	ЕСТЬNULL(СубконтоСт255НКБазы.НомерСтроки, 0) КАК НомерСубконтоСт255НКБазы,
		|	ЕСТЬNULL(База.СубконтоДтНУ1Разрез, БазаСреднегоЗаработка.СубконтоДтНУ1Разрез) КАК СубконтоДтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ2Разрез, БазаСреднегоЗаработка.СубконтоДтНУ2Разрез) КАК СубконтоДтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоДтНУ3Разрез, БазаСреднегоЗаработка.СубконтоДтНУ3Разрез) КАК СубконтоДтНУ3Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ1Разрез, БазаСреднегоЗаработка.СубконтоКтНУ1Разрез) КАК СубконтоКтНУ1Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ2Разрез, БазаСреднегоЗаработка.СубконтоКтНУ2Разрез) КАК СубконтоКтНУ2Разрез,
		|	ЕСТЬNULL(База.СубконтоКтНУ3Разрез, БазаСреднегоЗаработка.СубконтоКтНУ3Разрез) КАК СубконтоКтНУ3Разрез,
		|	ЕСТЬNULL(База.СпособРаспределенияЗатратРазрез, БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез) КАК СпособРаспределенияЗатратРазрез,
		|	ЕСТЬNULL(База.ОтражениеВУСНРазрез, БазаСреднегоЗаработка.ОтражениеВУСНРазрез) КАК ОтражениеВУСНРазрез,
		|	ДанныеУчета.ПодразделениеДт КАК ПодразделениеДт,
		|	ДанныеУчета.ПодразделениеКт КАК ПодразделениеКт,
		|	ЕСТЬNULL(База.ПодразделениеДтРазрез, БазаСреднегоЗаработка.ПодразделениеДтРазрез) КАК ПодразделениеДтРазрез,
		|	ЕСТЬNULL(База.ПодразделениеКтРазрез, БазаСреднегоЗаработка.ПодразделениеКтРазрез) КАК ПодразделениеКтРазрез,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ДоляСпособаОтражения ЕСТЬ НЕ NULL 
		|			ТОГДА ДанныеУчета.ДоляСпособаОтражения
		|		КОГДА База.РезультатБаза ЕСТЬ НЕ NULL 
		|			ТОГДА База.РезультатБаза
		|		ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|	КОНЕЦ КАК РезультатБаза,
		|	ДанныеУчета.Сторно КАК Сторно,
		|	ДанныеУчета.ДоляСпособаОтражения,
		|	ДанныеУчета.ДатаНачалаСобытия,
		|	ДанныеУчета.РезультатСторно КАК РезультатСторно,
		|	ДанныеУчета.ЭтоЕдиновременноеПособиеФСС КАК ЭтоЕдиновременноеПособиеФСС,
		|	ЛОЖЬ КАК ЭтоПособияФСС
		|ИЗ
		|	ДанныеУчета КАК ДанныеУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоРаботникиДт.Ссылка
		|			И (ВидыСубконтоРаботникиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиКт
		|		ПО (ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетКт = ВидыСубконтоРаботникиКт.Ссылка
		|			И (ВидыСубконтоРаботникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоПодразделенияДт.Ссылка
		|			И (ВидыСубконтоПодразделенияДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДт
		|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|			И ДанныеУчета.СчетДт = ВидыСубконтоСтатьиЗатратДт.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоСтатьиЗатратДтНУ.Ссылка
		|			И (ВидыСубконтоСтатьиЗатратДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НК
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = СубконтоСт255НК.Ссылка
		|			И (СубконтоСт255НК.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоРаботникиДтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоРаботникиКтНУ
		|		ПО (ДанныеУчета.СчетКтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетКтНУ = ВидыСубконтоРаботникиКтНУ.Ссылка
		|			И (ВидыСубконтоРаботникиКтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоПодразделенияДтНУ
		|		ПО (ДанныеУчета.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоПодразделенияДтНУ.Ссылка
		|			И (ВидыСубконтоПодразделенияДтНУ.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
		|		ЛЕВОЕ СОЕДИНЕНИЕ База КАК База
		|		ПО ДанныеУчета.Регистратор = База.Регистратор
		|			И ДанныеУчета.НомерСтроки = База.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
		|		ПО ДанныеУчета.Регистратор = БазаСреднегоЗаработка.Регистратор
		|			И ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоСт255НКБазы
		|		ПО (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка))
		|			И (ЕСТЬNULL(База.СчетКтНУРазрез, БазаСреднегоЗаработка.СчетКтНУРазрез) = СубконтоСт255НКБазы.Ссылка)
		|			И (СубконтоСт255НКБазы.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
			///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 13.12.2011 11:41 
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.AVT_СоответствиеВидовРасчетаИСтатейЗатрат КАК СоответствиеВидовРасчетаИСтатейЗатратДт
		|		ПО (ВЫБОР
		|				КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|						И (ДанныеУчета.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|							ИЛИ ДанныеУчета.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|							ИЛИ ДанныеУчета.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат)
		|					ТОГДА ДанныеУчета.ВидРасчета = СоответствиеВидовРасчетаИСтатейЗатратДт.ВидРасчета
		|							И ДанныеУчета.СчетДт = СоответствиеВидовРасчетаИСтатейЗатратДт.Счет
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.AVT_СоответствиеВидовРасчетаИСтатейЗатрат КАК СоответствиеВидовРасчетаИСтатейЗатратКт
		|		ПО (ВЫБОР
		|				КОГДА ДанныеУчета.ЗаменятьСтатьюЗатрат
		|						И (ДанныеУчета.СубконтоКт1 ССЫЛКА Справочник.СтатьиЗатрат
		|							ИЛИ ДанныеУчета.СубконтоКт2 ССЫЛКА Справочник.СтатьиЗатрат
		|							ИЛИ ДанныеУчета.СубконтоКт3 ССЫЛКА Справочник.СтатьиЗатрат)
		|					ТОГДА ДанныеУчета.ВидРасчета = СоответствиеВидовРасчетаИСтатейЗатратКт.ВидРасчета
		|							И ДанныеУчета.СчетКт = СоответствиеВидовРасчетаИСтатейЗатратКт.Счет
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}                                          
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Регистратор,
		|	НомерСтроки,
		|	СчетДтРазрез,
		|	СчетДтНУРазрез,
		|	СубконтоДт1Разрез,
		|	СубконтоДт2Разрез,
		|	СубконтоДтНУ1Разрез,
		|	СубконтоДтНУ2Разрез,
		|	ОтражениеВУСНРазрез
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	КонецЕсли;                   
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции  // ПолучитьДанныеУчета2011

//////////////////////////////////////////////////////////////////////////////////
// алгоритмы с 2014 года

// Заполняет строку промежуточной таблицы проводками по страховым взносам
Процедура ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СчетКт, СчетКтНУ, Результат, СтатьяРБП, ДополнительнаяСтрока = Ложь, СубконтоКт1 = Неопределено)
	
	Если СтрокаОтражения.ЭтоСчет69  И СтрокаОтражения.ПериодРегистрации < РасчетСтраховыхВзносов.ДатаВозмещенияФССВзносовСОплаты4ДнейУходаЗаДетьмиИнвалидами() Тогда
		
		НоваяСтрока = мТаблицаКомментированияСтраховыеВзносы.Добавить();
		
		НоваяСтрока.Физлицо = СтрокаОтражения.Физлицо;
		НоваяСтрока.Режим = 2;
		
		Если СчетКт = ПланыСчетов.Хозрасчетный.ФСС Тогда
			НоваяСтрока.ВзносыФСС = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ФФОМС Тогда
			НоваяСтрока.ВзносыФФОМС = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_ОПС Тогда
			НоваяСтрока.ВзносыПФРПоСуммарномуТарифу = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп Тогда
			НоваяСтрока.ВзносыДопТариф = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры Тогда
			НоваяСтрока.ВзносыДопТарифШахтеры = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда Тогда
			НоваяСтрока.ВзносыДопТарифТяжелыеИПрочиеРаботы = Результат;
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда Тогда
			НоваяСтрока.ВзносыДопТарифПодземныеИВредныеРаботы = Результат;	
		ИначеЕсли СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ Тогда
			НоваяСтрока.ВзносыФСС_НС = Результат;
		КонецЕсли; 
		
	КонецЕсли;
	
	ОтпускЗаСчетОО = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьБУ и мЕстьОценочноеОбязательствоДляОтпуска;
	ОтпускЗаСчетРезервов = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьНУ и мЕстьОценочноеОбязательствоДляОтпуска;
	
	Если СубконтоКт1 = Неопределено Тогда
		СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	КонецЕсли;
	
	Если ДополнительнаяСтрока Тогда
		
		// дополнительная строка, отражение в НУ разниц
		Если СтрокаОтражения.ЭтоСчет84 Тогда
			СтрокаТЧ.СчетДт 	 = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаОтражения.ОблагаетсяЕНВД);
			СтрокаТЧ.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");//Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов; //blik 080215 48782
			СубконтоДт2 = Неопределено;
			СубконтоДт3 = Неопределено;
		Иначе                   
			СтрокаТЧ.СчетДт		 = СтрокаОтражения.СчетДт;
			СтрокаТЧ.СубконтоДт1 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДт2 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДт3 = ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
		КонецЕсли;
		СтрокаТЧ.СчетКт			= СчетКт;
		СтрокаТЧ.СубконтоКт1	= СубконтоКт1;//Перечисления.ВидыПлатежейВГосБюджет.Налог;
		СтрокаТЧ.Сумма			= 0;
		Если ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов Тогда
			СтрокаТЧ.СуммаВР = -1*Результат;
		ИначеЕсли СтрокаОтражения.ПодменятьСчетДтНаРБП Тогда
			СтрокаТЧ.СуммаВР = -1*Результат;
		КонецЕсли;
		СтрокаТЧ.СуммаНУ        = Результат;
		
		СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
		СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
		КонецЕсли;
		
	Иначе
		
		Если СтрокаОтражения.ЭтоСчет84 Тогда
			СчетДт = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаОтражения.ОблагаетсяЕНВД);
			СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");//Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов; //blik 080215 48782
			СубконтоДт2 = Неопределено;
			СубконтоДт3 = Неопределено;
		ИначеЕсли ОтпускЗаСчетОО Тогда
			СчетДт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
			СубконтоДт1 = мОценочноеОбязательствоДляОтпуска;
			СубконтоДт2 = Неопределено;
			СубконтоДт3 = Неопределено;
		Иначе
			СчетДт      = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов, СтрокаОтражения.СчетДт);
			СубконтоДт1 = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, СтатьяРБП, ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто));
			СубконтоДт2 = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, СтрокаОтражения.Физлицо, ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто));
			СубконтоДт3 = ?(СтрокаОтражения.ПодменятьСчетДтНаРБП, Неопределено, ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто));
		КонецЕсли;
		
		СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		
		СтрокаТЧ.СчетДт			= СчетДт;
		СтрокаТЧ.СубконтоДт1	= СубконтоДт1;
		СтрокаТЧ.СубконтоДт2	= СубконтоДт2;
		СтрокаТЧ.СубконтоДт3	= СубконтоДт3;
		СтрокаТЧ.СчетКт			= СчетКт;
		СтрокаТЧ.СубконтоКт1	= СубконтоКт1;
		
		СтрокаТЧ.Сумма			= Результат;
		СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
		СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
		КонецЕсли;
		
		Если мЗаполнятьДанныеНУ Тогда
			
			Если мЗаполнятьСчетаНУ и Не СтрокаОтражения.ОблагаетсяЕНВД Тогда
				
				Если ОтпускЗаСчетРезервов Тогда
					
					СтрокаТЧ.СчетДтНУ		= ПланыСчетов.Налоговый.РезервыПредстоящихРасходов;
					СтрокаТЧ.СубконтоДтНУ1	= мОценочноеОбязательствоДляОтпуска;
					СтрокаТЧ.СубконтоДтНУ2	= Неопределено;
					СтрокаТЧ.СубконтоДтНУ3	= Неопределено;
					
				Иначе	
					
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто);
					
				КонецЕсли;
				
				СтрокаТЧ.СчетКтНУ		= ?(СтрокаТЧ.СчетДтНУ.Пустая(),ПланыСчетов.Налоговый.ПустаяСсылка(), СчетКтНУ);
				// по РБПСчетДтБУ будем делать подмену счета НУ из соответсвия
				СтрокаТЧ.РБПСчетДтБУ = СтрокаОтражения.СчетДт;
				
			КонецЕсли;
			
			Если Не мЗаполнятьСчетаНУ Тогда
				
				Если ОтпускЗаСчетОО и ОтпускЗаСчетрезервов Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				ИначеЕсли ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов Тогда
					СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
				ИначеЕсли СтрокаОтражения.ПодменятьСчетДтНаРБП Тогда
					СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
				ИначеЕсли Не СтрокаОтражения.ЭтоСчет84 Тогда
					СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет таблицу ПромежуточнаяТаблица проводками
// по страховым взносам
// используется с 2010 год
Процедура ПолучитьПроводкиПоСтраховымВзносам2014(ПромежуточнаяТаблица, ГоловнаяОрганизация, МассивСчетаИсключенияРБП)

	// добавим колонку СчДтБУ, в которой будет счет Дт БУ после подмены его на 97 счет
	// по этому значению будем производить замену счета НУ из соответсвия. Действует с 2010 года
	ПромежуточнаяТаблица.Колонки.Добавить("РБПСчетДтБУ", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	мТаблицаКомментированияСтраховыеВзносы = СоздатьТаблицуКомментированияСтраховыхВзносов();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("СчетаИсключенияРБП", МассивСчетаИсключенияРБП);

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение исчисленных страховых взносов в текущем месяце
	
	// Получение коэффициентов отражения страховых взносов  
	МассивПериодовРегистрации = Новый Массив;
	МассивПериодовРегистрации.Добавить(ПериодРегистрации);
	ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2014(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
	///вадим
	ПРГсч69=ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию;
	ПРГсч91021=ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД;
	для каждого стр из ТаблицаКоэффициентов цикл
		
		Если не ЗначениеЗаполнено(стр.ПодразделениеДт) тогда
			подр=ПРГ_ПолучитьПодразделениеФизЛица(стр.ФизЛицо);
			стр.ПодразделениеДт=подр;
			стр.ПодразделениеКт=подр;
		Конецесли;	
		
		если стр.СчетДт.ПринадлежитЭлементу(ПРГсч69) тогда
			подр=ПРГ_ПолучитьПодразделениеФизЛица(стр.ФизЛицо);
			стр.СубконтоДт3=подр;
		Конецесли;	
		если стр.СчетДт=ПРГсч91021 тогда
			подр=ПРГ_ПолучитьПодразделениеФизЛица(стр.ФизЛицо);
			стр.СубконтоДт2=подр;
		Конецесли;	
	Конеццикла;	
	
	///вадимКонец
	// запрос по соответствиям статей затрат начислений 
	// для подстановки статей затрат при формировании проводок страховым взносам
    // (перечисление ВидыДополнительныхСтатейЗатрат)
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
    |ИЗ
    |   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
    |ГДЕ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат";
    
    ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
    ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	ТипСтатьиЗатрат = Тип("СправочникСсылка.ПрочиеДоходыИРасходы");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
    // Исчисленные страховые взносы в текущем месяце
	//
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизЛицо,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу,
	|	СУММА(СтраховыеВзносыИсчисленные.ФСС) КАК ФСС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМС) КАК ФФОМС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу) КАК ПФРПоДополнительномуТарифу,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНаДоплатуКПенсииШахтерам) КАК ПФРНаДоплатуКПенсииШахтерам,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД) КАК ПФРПоСуммарномуТарифуЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССЕНВД) КАК ФССЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМСЕНВД) КАК ФФОМСЕНВД
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Период = &парамПериодРегистрации
	|	И СтраховыеВзносыИсчисленные.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыИсчисленные.ФизЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();

	РБП_Взносы = Справочники.РасходыБудущихПериодов.РБПНаСтраховыеВзносы;
	РБП_ФСС_НС = Справочники.РасходыБудущихПериодов.РБПНаФСС;
	РБП_ОплатаТруда = Справочники.РасходыБудущихПериодов.РБПНаОплатуТруда;
	Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
	
    СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	Отбор = Новый Структура("ФизЛицо");
	
	// в этой таблице соберем физлиц и суммы взносов, для которых нет базы в текущем месяце
	ТаблицаНетБазы = Новый ТаблицаЗначений;
	ТаблицаНетБазы.Колонки.Добавить("Физлицо");
	ТаблицаНетБазы.Колонки.Добавить("ВидБазы");
	ТаблицаНетБазы.Колонки.Добавить("СуммаВзноса");
	ТаблицаНетБазы.Колонки.Добавить("СчетКт");
	ТаблицаНетБазы.Колонки.Добавить("СчетКтНУ");
	ТаблицаНетБазы.Колонки.Добавить("СтатьяРБП");
	
	Пока Выборка.Следующий() Цикл

		Отбор.ФизЛицо = Выборка.ФизЛицо;
		СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		
		Если СтрокиОтраженияПоФизЛицу.Количество() = 0 Тогда
			
			Если Выборка.ФСС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС";
				НоваяСтрока.СуммаВзноса = Выборка.ФСС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФФОМС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			///вадим
			Если Выборка.ПФРПоСуммарномуТарифу <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифу;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_ОПС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТариф";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_шахтеры;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифПодземныеИВредныеРаботы";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифТяжелыеИПрочиеРаботы";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФССНесчастныеСлучаи <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_НС";
				НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
				НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
			КонецЕсли;	
			 ///вадим
			Если Выборка.ПФРПоСуммарномуТарифуЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифуЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФССЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФССЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФФОМСЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМСЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			
			Продолжить;
			
		КонецЕсли;		
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФСС, Коэффициенты);

		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМС, Коэффициенты);

		// ПФР 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР");
		РезультатыПФРПоСуммарномуТарифу     = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоСуммарномуТарифу, Коэффициенты);
		
		// доп тариф летчики
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
		РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоДополнительномуТарифу, Коэффициенты);
		
		// доп тариф шахтеры
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифШахтеры");
		РезультатыДопТарифШахтеры = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНаДоплатуКПенсииШахтерам, Коэффициенты);
		
		// доп тариф Работы с вредными условиями 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифПодземныеИВредныеРаботы");
		РезультатыДопТарифПодземныеИВредныеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах, Коэффициенты);
		
		// доп тариф Работы с тяжелыми условиями 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифТяжелыеИПрочиеРаботы");
		РезультатыДопТарифТяжелыеИПрочиеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах, Коэффициенты);
		
		// ФСС_НС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
		РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФССНесчастныеСлучаи, Коэффициенты);
		
		
		// по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРПоСуммарномуТарифуЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоСуммарномуТарифуЕНВД, Коэффициенты);
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_ЕНВД");
		РезультатыФССЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФССЕНВД, Коэффициенты);
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
		РезультатыФФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМСЕНВД, Коэффициенты);
		
		Если РезультатыФСС = Неопределено и Выборка.ФСС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС";
			НоваяСтрока.СуммаВзноса = Выборка.ФСС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФФОМС = Неопределено и Выборка.ФФОМС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		 //вадим
		Если РезультатыПФРПоСуммарномуТарифу = Неопределено и Выборка.ПФРПоСуммарномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_ОПС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТариф = Неопределено и Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТариф";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифШахтеры = Неопределено и Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_шахтеры;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифПодземныеИВредныеРаботы = Неопределено и Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифПодземныеИВредныеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифТяжелыеИПрочиеРаботы = Неопределено и Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифТяжелыеИПрочиеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФСС_НС = Неопределено и Выборка.ФССНесчастныеСлучаи <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_НС";
			НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
			НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
		КонецЕсли;
		//вадим
		Если РезультатыПФРПоСуммарномуТарифуЕНВД = Неопределено и Выборка.ПФРПоСуммарномуТарифуЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифуЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФССЕНВД = Неопределено и Выборка.ФССЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФССЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФФОМСЕНВД = Неопределено и Выборка.ФФОМСЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМСЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			
			
			ОтпускЗаСчетОО = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьБУ и мЕстьОценочноеОбязательствоДляОтпуска;
			ОтпускЗаСчетРезервов = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьНУ и мЕстьОценочноеОбязательствоДляОтпуска;
			
			//////////////////////////////////////////////////////////
			// страховые взносы
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			
			Если РезультатыФСС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФФОМС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			//вадим
			Если РезультатыПФРПоСуммарномуТарифу <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифу[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифу[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			//
			Если РезультатыДопТариф <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТарифШахтеры <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры, ПланыСчетов.Налоговый.ПФР_доп_шахтеры, РезультатыДопТарифШахтеры[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры, ПланыСчетов.Налоговый.ПФР_доп_шахтеры, РезультатыДопТарифШахтеры[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТарифПодземныеИВредныеРаботы <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
							РезультатыДопТарифПодземныеИВредныеРаботы[Индекс], РБП_Взносы);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
								РезультатыДопТарифПодземныеИВредныеРаботы[Индекс], РБП_Взносы, Истина);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыДопТарифТяжелыеИПрочиеРаботы <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
							РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс], РБП_Взносы);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
								РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс], РБП_Взносы, Истина);
					
				КонецЕсли;
				
			КонецЕсли;
			
			// ЕНВД
			Если РезультатыПФРПоСуммарномуТарифуЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифуЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифуЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			//
			Если РезультатыФССЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФССЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФССЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФФОМСЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМСЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМСЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			//////////////////////////////////////////////////////////
			// ФСС_НС
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			
			Если РезультатыФСС_НС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Создадим таблицу в которой соберем информацию по взносам, которые не отражены в учете
	
	Если ТаблицаНетБазы.Количество() > 0 и Не Месяц(ПериодРегистрации) = 1 Тогда
		// есть суммы взносов, которые не отразили в учете из-за отсутствия базы в текущем месяце
		// получим коэффициенты по данным с начала года без текущего месяца
		
		ВремТаблица = ТаблицаНетБазы.Скопировать();
		ВремТаблица.Свернуть("Физлицо");
		МассивФизлиц = ВремТаблица.ВыгрузитьКолонку("Физлицо");
		
		МассивПериодовРегистрации = Новый Массив;
		ДатаНачалаМесяца = НачалоГода(ПериодРегистрации);
		МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		Пока ДатаНачалаМесяца < НачалоМесяца(ПериодРегистрации-1) Цикл
			ДатаНачалаМесяца = НачалоМесяца(КонецМесяца(ДатаНачалаМесяца)+1);
			МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		КонецЦикла;
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2014(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП,МассивФизлиц);
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		///вадим
		ПРГсч69=ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию;
		ПРГсч91021=ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД;
		для каждого стр из ТаблицаКоэффициентов цикл
			
			Если не ЗначениеЗаполнено(стр.ПодразделениеДт) тогда
				подр=ПРГ_ПолучитьПодразделениеФизЛица(стр.ФизЛицо);
				стр.ПодразделениеДт=подр;
				стр.ПодразделениеКт=подр;
			Конецесли;	
			
			если стр.СчетДт.ПринадлежитЭлементу(ПРГсч69) тогда
				подр=ПРГ_ПолучитьПодразделениеФизЛица(стр.ФизЛицо);
				стр.СубконтоДт3=подр;
			Конецесли;	
			если стр.СчетДт=ПРГсч91021 тогда
				подр=ПРГ_ПолучитьПодразделениеФизЛица(стр.ФизЛицо);
				стр.СубконтоДт2=подр;
			Конецесли;	
		Конеццикла;	
		
		///вадимКонец

		МассивСтрокКУдалению = Новый Массив;
		
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			Отбор.ФизЛицо = СтрокаТЗ.ФизЛицо;
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,СтрокаТЗ.ВидБазы);
			Результаты = ОбщегоНазначенияЗК.РаспределитьПропорционально(СтрокаТЗ.СуммаВзноса, Коэффициенты);
			
			Если СтрокаТЗ.ВидБазы = "БазаФСС_НС" Тогда
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			Иначе
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			КонецЕсли;
			
			Если Результаты <> Неопределено Тогда
				МассивСтрокКУдалению.Добавить(СтрокаТЗ); 
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
					//СтрокаОтражения.СчетДт=ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД и не ЗначениеЗаполнено(СтрокаОтражения.СубконтоДт2)
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП);
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
						и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
						// добавим еще одну строку
						СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
						ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП, Истина);
					КонецЕсли;
					
					Индекс = Индекс +1;
					
				КонецЦикла;
			КонецЕсли;
		
		КонецЦикла;
		
		Для каждого СтрокаТаблицы Из МассивСтрокКУдалению Цикл
			
			// Добавим строку для комментирования
			ДобавитьСтрокуДляКомментирования(СтрокаТаблицы, 0);
			
			ТаблицаНетБазы.Удалить(СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;	

	Если ТаблицаНетБазы.Количество() > 0 Тогда
		//нет базы и с начала года, отразим взносы в Дт 91 счета
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
			
			СтрокаТЧ.СчетДт			= ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаТЗ.ВидБазы = "БазаПФР_ЕНВД");
			СтрокаТЧ.СубконтоДт1 	= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");///Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;
			СтрокаТЧ.СубконтоДт2    = ПРГ_ПолучитьПодразделениеФизЛица(СтрокаТЗ.Физлицо);
			СтрокаТЧ.СчетКт			= СтрокаТЗ.СчетКт;
			СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ЗначениеЗаполнено(СтрокаТЗ.СчетКт) Тогда
				СтрокаТЧ.СчетДтНУ		= БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СтрокаТЧ.СчетДт), , ТекущаяДата()); //Blik 111115 45968 //ПланыСчетов.Налоговый.ПрочиеКосвенныеРасходы;
				СтрокаТЧ.СубконтоДтНУ1 	= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");//Blik 111115 45968 ///Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов;
				СтрокаТЧ.СчетКтНУ		= СтрокаТЗ.СчетКтНУ;
			КонецЕсли;
			
			СтрокаТЧ.Сумма			= СтрокаТЗ.СуммаВзноса;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
			КонецЕсли;
			
			// Добавим строку для комментирования
			ДобавитьСтрокуДляКомментирования(СтрокаТЗ, 1);
			
		КонецЦикла;
	КонецЕсли;	
	
	// отражение исчисленных страховых взносов в текущем месяце
    //////////////////////////////////////////////////////////////////////////////////////////////////
	
    //////////////////////////////////////////////////////////////////////////////////////////////////
	// Списание РБП
	
	// подготовим данные по РБП
	// необходимо списать из РБП остатки взносов от 2010 года
	ДатаДействияПриказа186Н = ОтражениеЗарплатыВРеглУчетеДополнительный.ДатаДействияПриказа186Н();
	
	Запрос.УстановитьПараметр("ДатаДействияПриказа186Н",ДатаДействияПриказа186Н);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации < &ДатаДействияПриказа186Н
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	
	ТаблицаРБП =  Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРБП.Количество()>0 Тогда
		
		ВремТаблица = ТаблицаРБП.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБП.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБП.ВыгрузитьКолонку("Физлицо");

		СформироватьПроводкиСписанияРБПВзносам2010(ПромежуточнаяТаблица, ПараметрыПолученияСубконто, МассивПериодовРегистрации, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, МассивФизлиц);
		
	КонецЕсли;
	
	// подготовим данные по РБП
	// необходимо списать из РБП взносы того периода с 2011 года в котором мПорядокПризнанияРасходовПоОтпускам  =  Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска
	
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ДатаДействияПриказа186Н,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы до ПериоРегистрации
	ОчереднойПериод = ДобавитьМесяц(ДатаДействияПриказа186Н,1);
	Пока ОчереднойПериод < ПериодРегистрации Цикл
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ОчереднойПериод,"ДФ=гггг,М,д,Ч,м,с") + ")";
		ОчереднойПериод = ДобавитьМесяц(ОчереднойПериод,1);
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить(); 
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	МАКСИМУМ(УчетнаяПолитикаПоРБП.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТ_ПериодыРБП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_Периоды.Период >= УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыРБП.Период КАК Период
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаПоРБП
	|ИЗ
	|	ВТ_ПериодыРБП КАК ВТ_ПериодыРБП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_ПериодыРБП.ПериодРегистра = УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|			И (УчетнаяПолитикаПоРБП.РасходыПоОтпускам = ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска))
	|ГДЕ
	|	(НЕ УчетнаяПолитикаПоРБП.Период ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации В
	|			(ВЫБРАТЬ
	|				ВТ_УчетнаяПолитикаПоРБП.Период
	|			ИЗ
	|				ВТ_УчетнаяПолитикаПоРБП)
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	ТаблицаРБП =  Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРБП.Количество()>0 Тогда
		
		ВремТаблица = ТаблицаРБП.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБП.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБП.ВыгрузитьКолонку("Физлицо");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТ_Счета69
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетов69)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_11
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФСС_НС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФСС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРСтраховая,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_07
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРПоСуммарномуТарифу,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_02
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРНакопительная,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФФОМС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_02
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТФОМС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_03
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТариф,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_04
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифШахтеры,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_05
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифВредныеУсловияТруда,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_06
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифТяжелыеУсловияТруда,
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
		|	ДвиженияВУчете.СубконтоДт2 КАК ФизЛицо
		|ИЗ
		|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ДвиженияВУчете
		|ГДЕ
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации В(&ПериодыРегистрации)
		|	И ДвиженияВУчете.СчетДт = &Счет97
		|	И ДвиженияВУчете.СчетКт В
		|			(ВЫБРАТЬ
		|				ВТ_Счета69.Счет
		|			ИЗ
		|				ВТ_Счета69)
		|	И ДвиженияВУчете.Ссылка.Организация = &парамОбособленноеПодразделение
		|	И ДвиженияВУчете.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации,
		|	ДвиженияВУчете.СубконтоДт2";
		
		Запрос.УстановитьПараметр("СписокСчетов69", ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
		Запрос.УстановитьПараметр("ПериодыРегистрации",	МассивПериодовРегистрации);
		Запрос.УстановитьПараметр("Счет69_01",			ПланыСчетов.Хозрасчетный.ФСС);
		Запрос.УстановитьПараметр("Счет69_02_07",		ПланыСчетов.Хозрасчетный.ПФР_ОПС);   
		Запрос.УстановитьПараметр("Счет69_02_01",		ПланыСчетов.Хозрасчетный.ПФР_страх);
		Запрос.УстановитьПараметр("Счет69_02_02",		ПланыСчетов.Хозрасчетный.ПФР_нак);   
		Запрос.УстановитьПараметр("Счет69_02_03",		ПланыСчетов.Хозрасчетный.ПФР_доп);
		Запрос.УстановитьПараметр("Счет69_02_04",		ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
		Запрос.УстановитьПараметр("Счет69_02_05",		ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
		Запрос.УстановитьПараметр("Счет69_02_06",		ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
		Запрос.УстановитьПараметр("Счет69_03_01",		ПланыСчетов.Хозрасчетный.ФФОМС);
		Запрос.УстановитьПараметр("Счет69_03_02",		ПланыСчетов.Хозрасчетный.ТФОМС);
		Запрос.УстановитьПараметр("Счет69_11",			ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		Запрос.УстановитьПараметр("Счет97",				ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);		
		
		РезультатЗапроса = Запрос.Выполнить();

		// получим таблицу с детализацией по периоду действия
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2014(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП, МассивФизлиц, Ложь);
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		ОтборПоФизлицу = Новый Структура("ПериодРегистрации,ФизЛицо");
		ОтборПоПериодуДействия = Новый Структура("ФизЛицо, ПериодРегистрации, ПериодДействия");
		ОтборПоПериодуДействия.ПериодДействия = ПериодРегистрации;

		ТаблицаКоэффициентовПоПериодуДействия = ТаблицаКоэффициентов.Скопировать();
		ТаблицаКоэффициентовПоПериодуДействия.Свернуть("ПериодРегистрации,ФизЛицо,ПериодДействия","БазаПФР,БазаФСС,БазаФОМС,БазаПФР_ЕНВД,БазаФСС_ЕНВД,БазаФОМС_ЕНВД,БазаДопТариф,БазаДопТарифШахтеры,БазаФСС_НС,БазаДопТарифПодземныеИВредныеРаботы,БазаДопТарифТяжелыеИПрочиеРаботы");
		ТаблицаКоэффициентовПоПериодуДействия.Сортировать("ПериодРегистрации,ФизЛицо,ПериодДействия");
		
		Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
		СчетН97 = ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			ОтборПоФизлицу.ПериодРегистрации	= Выборка.ПериодРегистрации;
			ОтборПоФизлицу.ФизЛицо				= Выборка.ФизЛицо;
			СтрокиПериодовДействия = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоФизлицу);
			
			ОтборПоПериодуДействия.ФизЛицо				= Выборка.ФизЛицо;
			ОтборПоПериодуДействия.ПериодРегистрации	= Выборка.ПериодРегистрации;
			СтрокиОтражения = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоПериодуДействия);
			Если СтрокиОтражения.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(ОтборПоПериодуДействия);
			ВсегоДоходовФСС				= 0;
			ВсегоДоходовФОМС			= 0;
			ВсегоДоходовПФР				= 0;
			ВсегоДоходовДопТариф		= 0;
			ВсегоДоходовДопТарифШахтеры = 0;
			ВсегоДоходовВредныеУсловияТруда = 0;
			ВсегоДоходовТяжелыеУсловияТруда = 0;
			ВсегоДоходовФСС_НС			= 0;
			ВсегоДоходовФССЕНВД			= 0;
			ВсегоДоходовФОМСЕНВД		= 0;
			ВсегоДоходовПФРЕНВД			= 0;
			
			КолвоЭлементовКоллекции = СтрокиПериодовДействия.Количество(); 
			Для ОбратныйИндекс = 1 По КолвоЭлементовКоллекции Цикл 
				ЭлементКоллекции = СтрокиПериодовДействия[КолвоЭлементовКоллекции - ОбратныйИндекс]; 
				Если ЭлементКоллекции.ПериодДействия <= ЭлементКоллекции.ПериодРегистрации Тогда 
					СтрокиПериодовДействия.Удалить(КолвоЭлементовКоллекции - ОбратныйИндекс);
				Иначе
					ВсегоДоходовФСС  = ВсегоДоходовФСС + ЭлементКоллекции.БазаФСС;
					ВсегоДоходовФОМС = ВсегоДоходовФОМС + ЭлементКоллекции.БазаФОМС;
					ВсегоДоходовПФР  = ВсегоДоходовПФР + ЭлементКоллекции.БазаПФР;
					ВсегоДоходовДопТариф = ВсегоДоходовДопТариф + ЭлементКоллекции.БазаДопТариф;
					ВсегоДоходовДопТарифШахтеры = ВсегоДоходовДопТарифШахтеры + ЭлементКоллекции.БазаДопТарифШахтеры;
					ВсегоДоходовВредныеУсловияТруда = ВсегоДоходовВредныеУсловияТруда + ЭлементКоллекции.БазаДопТарифПодземныеИВредныеРаботы;
					ВсегоДоходовТяжелыеУсловияТруда = ВсегоДоходовТяжелыеУсловияТруда + ЭлементКоллекции.БазаДопТарифТяжелыеИПрочиеРаботы;
					ВсегоДоходовФСС_НС   = ВсегоДоходовФСС_НС + ЭлементКоллекции.БазаФСС_НС;
					ВсегоДоходовФССЕНВД  = ВсегоДоходовФССЕНВД + ЭлементКоллекции.БазаФСС_ЕНВД;
					ВсегоДоходовФОМСЕНВД = ВсегоДоходовФОМСЕНВД + ЭлементКоллекции.БазаФОМС_ЕНВД;
					ВсегоДоходовПФРЕНВД  = ВсегоДоходовПФРЕНВД + ЭлементКоллекции.БазаПФР_ЕНВД;
				КонецЕсли;
			КонецЦикла;
			
			// выделяем долю текущего месяца (ранее это был период действия)
			Если СтрокиПериодовДействия.Количество() > 1 Тогда
				
				Если ВсегоДоходовДопТариф = 0 Тогда
					МесячнаяДоляДопТариф = Выборка.ДопТариф;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТариф * СтрокаПериода.БазаДопТариф / ВсегоДоходовДопТариф,2);
					КонецЦикла;
					МесячнаяДоляДопТариф = Выборка.ДопТариф - БылоОтраженоРанее
				Иначе
					МесячнаяДоляДопТариф = Окр(Выборка.ДопТариф * СтрокиОтражения[0].БазаДопТариф / ВсегоДоходовДопТариф,2);
				КонецЕсли;
				
				Если ВсегоДоходовДопТарифШахтеры = 0 Тогда
					МесячнаяДоляДопТарифШахтеры = Выборка.ДопТарифШахтеры;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифШахтеры * СтрокаПериода.БазаДопТарифШахтеры / ВсегоДоходовДопТарифШахтеры,2);
					КонецЦикла;
					МесячнаяДоляДопТарифШахтеры = Выборка.ДопТарифШахтеры - БылоОтраженоРанее
				Иначе
					МесячнаяДоляДопТарифШахтеры = Окр(Выборка.ДопТарифШахтеры * СтрокиОтражения[0].БазаДопТарифШахтеры / ВсегоДоходовДопТарифШахтеры,2);
				КонецЕсли;
				
				Если ВсегоДоходовВредныеУсловияТруда = 0 Тогда
					МесячнаяДоляВредныеУсловияТруда = Выборка.ДопТарифВредныеУсловияТруда;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифВредныеУсловияТруда * СтрокаПериода.БазаДопТарифПодземныеИВредныеРаботы / ВсегоДоходовВредныеУсловияТруда,2);
					КонецЦикла;
					МесячнаяДоляВредныеУсловияТруда = Выборка.ДопТарифВредныеУсловияТруда - БылоОтраженоРанее
				Иначе
					МесячнаяДоляВредныеУсловияТруда = Окр(Выборка.ДопТарифВредныеУсловияТруда * СтрокиОтражения[0].БазаДопТарифПодземныеИВредныеРаботы / ВсегоДоходовВредныеУсловияТруда,2);
				КонецЕсли;
				
				Если ВсегоДоходовТяжелыеУсловияТруда = 0 Тогда
					МесячнаяДоляТяжелыеУсловияТруда = Выборка.ДопТарифТяжелыеУсловияТруда;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифТяжелыеУсловияТруда * СтрокаПериода.БазаДопТарифТяжелыеИПрочиеРаботы / ВсегоДоходовТяжелыеУсловияТруда,2);
					КонецЦикла;
					МесячнаяДоляТяжелыеУсловияТруда = Выборка.ДопТарифТяжелыеУсловияТруда - БылоОтраженоРанее
				Иначе
					МесячнаяДоляТяжелыеУсловияТруда = Окр(Выборка.ДопТарифТяжелыеУсловияТруда * СтрокиОтражения[0].БазаДопТарифТяжелыеИПрочиеРаботы / ВсегоДоходовТяжелыеУсловияТруда,2);
				КонецЕсли;
				
				Если ВсегоДоходовФСС_НС = 0 Тогда
					МесячнаяДоляФСС_НС = Выборка.ФСС_НС;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС_НС * СтрокаПериода.БазаФСС_НС / ВсегоДоходовФСС_НС,2);
					КонецЦикла;
					МесячнаяДоляФСС_НС = Выборка.ФСС_НС - БылоОтраженоРанее
				Иначе
					МесячнаяДоляФСС_НС = Окр(Выборка.ФСС_НС * СтрокиОтражения[0].БазаФСС_НС / ВсегоДоходовФСС_НС,2);
				КонецЕсли;				
				
				Если ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД = 0 Тогда
					МесячнаяДоляПФРПоСуммарномуТарифу = Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = -Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРСтраховая = Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная;
					МесячнаяДоляПФРСтраховаяЕНВД = -Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительнаяЕНВД = -Выборка.ПФРНакопительная;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанееПФРСтраховая = 0;
					БылоОтраженоРанееПФРПоСуммарномуТарифу = 0;
					БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД = 0;
					БылоОтраженоРанееПФРНакопительная = 0;
					БылоОтраженоРанееПФРСтраховаяЕНВД = 0;
					БылоОтраженоРанееПФРНакопительнаяЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанееПФРПоСуммарномуТарифу = БылоОтраженоРанееПФРПоСуммарномуТарифу + Окр(Выборка.ПФРПоСуммарномуТарифу * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД = БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД + Окр(Выборка.ПФРПоСуммарномуТарифу * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСтраховая = БылоОтраженоРанееПФРСтраховая + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРНакопительная = БылоОтраженоРанееПФРНакопительная + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСтраховаяЕНВД = БылоОтраженоРанееПФРСтраховаяЕНВД + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРНакопительнаяЕНВД = БылоОтраженоРанееПФРНакопительнаяЕНВД + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР_ЕНВД = 0 Тогда
						МесячнаяДоляПФРПоСуммарномуТарифу = Выборка.ПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД;
						МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = 0;
						МесячнаяДоляПФРСтраховая = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховаяЕНВД = 0;
						МесячнаяДоляПФРНакопительнаяЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР = 0 Тогда
						МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = Выборка.ПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД;
						МесячнаяДоляПФРПоСуммарномуТарифу = 0;
						МесячнаяДоляПФРСтраховаяЕНВД = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительнаяЕНВД = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховая = 0;
						МесячнаяДоляПФРНакопительная = 0;
					Иначе
						МесячнаяДоляПФРПоСуммарномуТарифуЕНВД     = Окр(Выборка.ПФРПоСуммарномуТарифу * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД;
						МесячнаяДоляПФРПоСуммарномуТарифу     = Выборка.ПФРПоСуммарномуТарифу - МесячнаяДоляПФРПоСуммарномуТарифуЕНВД - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД - БылоОтраженоРанееПФРПоСуммарномуТарифу;
						МесячнаяДоляПФРСтраховаяЕНВД     = Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительнаяЕНВД = Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховая     = Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховаяЕНВД - БылоОтраженоРанееПФРСтраховаяЕНВД - БылоОтраженоРанееПФРСтраховая;
						МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительнаяЕНВД - БылоОтраженоРанееПФРНакопительнаяЕНВД - БылоОтраженоРанееПФРНакопительная;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД);
					МесячнаяДоляПФРПоСуммарномуТарифу = Окр(Выборка.ПФРПоСуммарномуТарифу * ТекущийКоэффициент,2);
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = Окр(Выборка.ПФРПоСуммарномуТарифу * ТекущийКоэффициент,2);
					МесячнаяДоляПФРСтраховая = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
					МесячнаяДоляПФРНакопительная = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД);
					МесячнаяДоляПФРСтраховаяЕНВД = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
					МесячнаяДоляПФРНакопительнаяЕНВД = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
				КонецЕсли;
				
				Если ВсегоДоходовФСС + ВсегоДоходовФССЕНВД = 0 Тогда
					МесячнаяДоляФСС     = Выборка.ФСС;
					МесячнаяДоляФССЕНВД = -Выборка.ФСС;

				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					БылоОтраженоРанееЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
						БылоОтраженоРанееЕНВД = БылоОтраженоРанееЕНВД + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС_ЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФСС_ЕНВД = 0 Тогда
						МесячнаяДоляФСС = Выборка.ФСС - БылоОтраженоРанее - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФССЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФСС = 0 Тогда
						МесячнаяДоляФССЕНВД = Выборка.ФСС - БылоОтраженоРанее - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФСС = 0;
					Иначе
						МесячнаяДоляФССЕНВД = Окр(Выборка.ФСС * ВсегоДоходовФССЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2) - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФСС     = Выборка.ФСС - МесячнаяДоляФССЕНВД - БылоОтраженоРанееЕНВД - БылоОтраженоРанее;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаФСС / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД);
					МесячнаяДоляФСС = Окр(Выборка.ФСС * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаФСС_ЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД);
					МесячнаяДоляФССЕНВД = Окр(Выборка.ФСС * ТекущийКоэффициент,2);
				КонецЕсли;
				
				Если ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД = 0 Тогда
					МесячнаяДоляФФОМС = Выборка.ФФОМС;
					МесячнаяДоляТФОМС = Выборка.ТФОМС;
					МесячнаяДоляФФОМСЕНВД = -Выборка.ФФОМС;
					МесячнаяДоляТФОМСЕНВД = -Выборка.ТФОМС;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанееФФОМС = 0;
					БылоОтраженоРанееТФОМС = 0;
					БылоОтраженоРанееФФОМСЕНВД = 0;
					БылоОтраженоРанееТФОМСЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанееФФОМС = БылоОтраженоРанееФФОМС + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееТФОМС = БылоОтраженоРанееТФОМС + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееФФОМСЕНВД = БылоОтраженоРанееФФОМСЕНВД + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееТФОМСЕНВД = БылоОтраженоРанееТФОМСЕНВД + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФОМС_ЕНВД = 0 Тогда
						МесячнаяДоляФФОМС = Выборка.ФФОМС - БылоОтраженоРанееФФОМС - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМС = Выборка.ТФОМС - БылоОтраженоРанееТФОМС - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМСЕНВД = 0;
						МесячнаяДоляТФОМСЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФОМС = 0 Тогда
						МесячнаяДоляФФОМСЕНВД = Выборка.ФФОМС - БылоОтраженоРанееФФОМС - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМСЕНВД = Выборка.ТФОМС - БылоОтраженоРанееТФОМС - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМС = 0;
						МесячнаяДоляТФОМС = 0;
					Иначе
						МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2) - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2) - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМС     = Выборка.ФФОМС - МесячнаяДоляФФОМСЕНВД - БылоОтраженоРанееФФОМСЕНВД - БылоОтраженоРанееФФОМС;
						МесячнаяДоляТФОМС     = Выборка.ТФОМС - МесячнаяДоляТФОМСЕНВД - БылоОтраженоРанееТФОМСЕНВД - БылоОтраженоРанееТФОМС;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД);
					МесячнаяДоляФФОМС = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
					МесячнаяДоляТФОМС = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД);
					МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
					МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
				КонецЕсли;
				
			Иначе
				// за другие месяцы ничего в РБП не относили
				МесячнаяДоляДопТариф			= Выборка.ДопТариф;
				МесячнаяДоляДопТарифШахтеры		= Выборка.ДопТарифШахтеры;
				МесячнаяДоляВредныеУсловияТруда			= Выборка.ДопТарифВредныеУсловияТруда;
				МесячнаяДоляТяжелыеУсловияТруда			= Выборка.ДопТарифТяжелыеУсловияТруда;
				МесячнаяДоляФСС_НС				= Выборка.ФСС_НС;
				
				Если ВсегоДоходовПФРЕНВД = 0 Тогда
					МесячнаяДоляПФРПоСуммарномуТарифу		= Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД		= 0;
					МесячнаяДоляПФРСтраховая		= Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительная	= Выборка.ПФРНакопительная;
					МесячнаяДоляПФРСтраховаяЕНВД		= 0;
					МесячнаяДоляПФРНакопительнаяЕНВД	= 0;
				ИначеЕсли ВсегоДоходовПФР = 0 Тогда
					МесячнаяДоляПФРПоСуммарномуТарифу		= 0;
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД		= Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРСтраховая		= 0;
					МесячнаяДоляПФРНакопительная    = 0;
					МесячнаяДоляПФРСтраховаяЕНВД		= Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительнаяЕНВД	= Выборка.ПФРНакопительная;
				Иначе
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД		= Окр(Выборка.ПФРПоСуммарномуТарифу * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРПоСуммарномуТарифу		= Выборка.ПФРПоСуммарномуТарифу - МесячнаяДоляПФРПоСуммарномуТарифуЕНВД;
					МесячнаяДоляПФРСтраховаяЕНВД		= Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРНакопительнаяЕНВД	= Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРСтраховая		= Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховаяЕНВД;
					МесячнаяДоляПФРНакопительная	= Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительнаяЕНВД;
				КонецЕсли;
				
				Если ВсегоДоходовФССЕНВД = 0 Тогда
					МесячнаяДоляФСС		= Выборка.ФСС;
					МесячнаяДоляФССЕНВД	= 0;
				ИначеЕсли ВсегоДоходовФСС = 0 Тогда
					МесячнаяДоляФСС		= 0;
					МесячнаяДоляФССЕНВД	= Выборка.ФСС;
				Иначе
					МесячнаяДоляФССЕНВД	= Окр(Выборка.ФСС * ВсегоДоходовФССЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
					МесячнаяДоляФСС		= Выборка.ФСС - МесячнаяДоляФССЕНВД;
				КонецЕсли;
				
				Если ВсегоДоходовФОМСЕНВД = 0 Тогда
					МесячнаяДоляФФОМС = Выборка.ФФОМС;
					МесячнаяДоляТФОМС = Выборка.ТФОМС;
					МесячнаяДоляФФОМСЕНВД = 0;
					МесячнаяДоляТФОМСЕНВД = 0;
				ИначеЕсли ВсегоДоходовФОМС = 0 Тогда
					МесячнаяДоляФФОМСЕНВД = Выборка.ФФОМС;
					МесячнаяДоляТФОМСЕНВД = Выборка.ТФОМС;
					МесячнаяДоляФФОМС = 0;
					МесячнаяДоляТФОМС = 0;
				Иначе
					МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					МесячнаяДоляФФОМС     = Выборка.ФФОМС - МесячнаяДоляФФОМСЕНВД;
					МесячнаяДоляТФОМС     = Выборка.ТФОМС - МесячнаяДоляТФОМСЕНВД;
				КонецЕсли;
					
			КонецЕсли;
			
			// ФСС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
			РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_ЕНВД");
			РезультатыФССЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФССЕНВД, Коэффициенты);
			
			// ФОМС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
			РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМС, Коэффициенты);
			РезультатыТФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМС, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
			РезультатыФФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМСЕНВД, Коэффициенты);
			РезультатыТФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМСЕНВД, Коэффициенты);
			
			// ПФР
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР");
			РезультатыПФРНакопительная = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительная, Коэффициенты);
			РезультатыПФРСтраховая = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховая, Коэффициенты);
			РезультатыПФРПоСуммарномуТарифу = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРПоСуммарномуТарифу, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
			РезультатыПФРНакопительнаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительнаяЕНВД, Коэффициенты);
			РезультатыПФРСтраховаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховаяЕНВД, Коэффициенты);
			РезультатыПФРПоСуммарномуТарифуЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРПоСуммарномуТарифуЕНВД, Коэффициенты);
			
			// ДопТариф летчики
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
			РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляДопТариф, Коэффициенты);
			
			// ДопТариф шахтеры
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифШахтеры");
			РезультатыДопТарифШахтеры = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляДопТарифШахтеры, Коэффициенты);
			
			// доп тариф Работы с вредными условиями 
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифПодземныеИВредныеРаботы");
			РезультатыДопТарифПодземныеИВредныеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляВредныеУсловияТруда, Коэффициенты);
		
			// доп тариф Работы с тяжелыми условиями 
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифТяжелыеИПрочиеРаботы");
			РезультатыДопТарифТяжелыеИПрочиеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТяжелыеУсловияТруда, Коэффициенты);
			
			// ФСС_НС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
			РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС_НС, Коэффициенты);			
			
			Индекс = 0;
			Для каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
				
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				
				Если РезультатыФСС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФСС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыТФОМС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыТФОМС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФФОМС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФФОМС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРНакопительная <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРНакопительная[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСтраховая <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСтраховая[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРПоСуммарномуТарифу <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРПоСуммарномуТарифу[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРНакопительнаяЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРНакопительнаяЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСтраховаяЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСтраховаяЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРПоСуммарномуТарифуЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРПоСуммарномуТарифуЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФССЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФССЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыТФОМСЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыТФОМСЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФФОМСЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФФОМСЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТариф <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТариф[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТарифШахтеры <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифШахтеры[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТарифПодземныеИВредныеРаботы <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифПодземныеИВредныеРаботы[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				
				Если РезультатыДопТарифТяжелыеИПрочиеРаботы <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				//////////////////////////////////////////////////////////
				// ФСС_НС
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				
				Если РезультатыФСС_НС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_ФСС_НС;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФСС_НС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Индекс = Индекс + 1;
			
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// конец списания РБП
	// со счета учета расходов будущих периодов в затраты
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// вычеркнем обнулившиеся суммы
	СвернутьТаблицуПроводок(ПромежуточнаяТаблица,",РБПСчетДтБУ");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// замена счетов НУ по регистру соответствий
	//
	
	Если мЗаполнятьДанныеНУ И мЗаполнятьСчетаНУ И мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете = Перечисления.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.НаСчетахЗатратСоответствующихСчетамБухУчета Тогда
		
		СчетаНУ = Новый Массив;
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств);
        Запрос.УстановитьПараметр("СчетаНУ",СчетаНУ);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Налоговый.Ссылка
		|ИЗ
		|	ПланСчетов.Налоговый КАК Налоговый
		|ГДЕ
		|	Налоговый.Ссылка В ИЕРАРХИИ(&СчетаНУ)";
		МассивСчетаНУ = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				
		СчетаНалоговСФОТ = Новый Массив;
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		
		Запрос.УстановитьПараметр("СчетаНалоговСФОТ", СчетаНалоговСФОТ);
		Запрос.УстановитьПараметр("СчетаНУ", МассивСчетаНУ);
		Запрос.УстановитьПараметр("ТаблицаПроводок", ПромежуточнаяТаблица);  
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_Проводки
		|ИЗ
		|	&ТаблицаПроводок КАК ТаблицаПроводок";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт2.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт2,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт3.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт3
		|ПОМЕСТИТЬ ВТ_ТаблицаПроводок
		|ИЗ
		|	ВТ_Проводки КАК ТаблицаПроводок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РБПСчетДтБУ,
		|	СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий1
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий2
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий3
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий4
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1 КАК СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2 КАК СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3 КАК СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1 КАК СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2 КАК СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3 КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СчетКт В (&СчетаНалоговСФОТ)
		|				И ТаблицаПроводок.СчетДтНУ В (&СчетаНУ)
		|			ТОГДА ЕСТЬNULL(Налоговый.Ссылка, ТаблицаПроводок.СчетДтНУ)
		|		ИНАЧЕ ТаблицаПроводок.СчетДтНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ТаблицаПроводок.СчетДтНУ КАК СтарыйСчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ КАК СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3 КАК СубконтоКтНУ3,
		|	ТаблицаПроводок.Сумма КАК Сумма,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН КАК ОтражениеВУСН,
		|	ТаблицаПроводок.ВидНачисленияУдержания КАК ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчете
		|ИЗ
		|	ВТ_ТаблицаПроводок КАК ТаблицаПроводок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий1 КАК ТаблицаСоответствий1
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий1.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий1.СчетКоррБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий2 КАК ТаблицаСоответствий2
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий2.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий2.СчетКоррБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий3 КАК ТаблицаСоответствий3
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий3.СчетБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий4 КАК ТаблицаСоответствий4
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий4.СчетБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый КАК Налоговый
		|		ПО (ВЫБОР
		|				КОГДА ТаблицаСоответствий1.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий1.СчетНУ
		|				КОГДА ТаблицаСоответствий2.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий2.СчетНУ
		|				КОГДА ТаблицаСоответствий3.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий3.СчетНУ
		|				КОГДА ТаблицаСоответствий4.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий4.СчетНУ
		|				ИНАЧЕ """"
		|			КОНЕЦ = Налоговый.Код)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетДтНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтражениеВУчете.СчетДт КАК СчетДт,
		|	ОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
		|	ОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
		|	ОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
		|	ОтражениеВУчете.СчетКт,
		|	ОтражениеВУчете.СубконтоКт1,
		|	ОтражениеВУчете.СубконтоКт2,
		|	ОтражениеВУчете.СубконтоКт3,
		|	ОтражениеВУчете.СчетДтНУ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ЛОЖЬ
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОбрабатыватьСубконтоНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто1.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто1,
		|	НалоговыйСталиВидыСубконто1.ВидСубконто.ТипЗначения КАК ТипЗначения1,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто2.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто2,
		|	НалоговыйСталиВидыСубконто2.ВидСубконто.ТипЗначения КАК ТипЗначения2,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто3.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто3,
		|	НалоговыйСталиВидыСубконто3.ВидСубконто.ТипЗначения КАК ТипЗначения3,
		|	ОтражениеВУчете.СчетКтНУ,
		|	ОтражениеВУчете.СубконтоКтНУ1,
		|	ОтражениеВУчете.СубконтоКтНУ2,
		|	ОтражениеВУчете.СубконтоКтНУ3,
		|	ОтражениеВУчете.СпособРаспределенияЗатрат,
		|	ОтражениеВУчете.ОтражениеВУСН,
		|	ОтражениеВУчете.Сумма,
		|	ОтражениеВУчете.ВидНачисленияУдержания
		|ИЗ
		|	ВТ_ОтражениеВУчете КАК ОтражениеВУчете
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто1
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйСталиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто2
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйСталиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто3
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйСталиВидыСубконто3.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто1
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйБылиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто2
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйБылиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто3
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйБылиВидыСубконто3.НомерСтроки)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетДт,
		|	СубконтоДт1,
		|	СубконтоДт2,
		|	СубконтоДт3,
		|	СчетДтНУ,
		|	СубконтоДтНУ1,
		|	СубконтоДтНУ2,
		|	СубконтоДтНУ3
		|АВТОУПОРЯДОЧИВАНИЕ";
				
		ТаблицаПослеПодмен = Запрос.Выполнить().Выгрузить();
		Для каждого СтрокаРезультата Из ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("ОбрабатыватьСубконтоНУ",Истина)) Цикл
		    Если СтрокаРезультата.ЕстьСубконто1 И СтрокаРезультата.СубконтоДтНУ1 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ1 = СтрокаРезультата.ТипЗначения1.ПривестиЗначение()
			КонецЕсли;
		    Если СтрокаРезультата.ЕстьСубконто2 И СтрокаРезультата.СубконтоДтНУ2 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ2 = СтрокаРезультата.ТипЗначения2.ПривестиЗначение()
			КонецЕсли;
		    Если СтрокаРезультата.ЕстьСубконто3 И СтрокаРезультата.СубконтоДтНУ3 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ3 = СтрокаРезультата.ТипЗначения3.ПривестиЗначение()
			КонецЕсли;
		КонецЦикла; 
		
		ТаблицаПослеПодмен.Свернуть("СчетДт,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,
		|СчетДтНУ,СчетКтНУ,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3,
		|СпособРаспределенияЗатрат,ОтражениеВУСН,ВидНачисленияУдержания", "Сумма");
		
		НулевыеСтроки = ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("Сумма",0));
		Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
			ТаблицаПослеПодмен.Удалить(СтрокаТаблицы)
		КонецЦикла;
		
		ПромежуточнаяТаблица = ТаблицаПослеПодмен.Скопировать();
		
	КонецЕсли;
	
    //
	// замена счетов НУ по регистру соответствий
    //////////////////////////////////////////////////////////////////////////////////////////////////
	
	// заменим счет Дт 69 на счет 91
	ПроверитьИСкорректироватьПроводкиПоВзносам(ПромежуточнаяТаблица);
	
	// Если есть что прокомментировать - сделаем это
	Если мТаблицаКомментированияСтраховыеВзносы.Количество() > 0 Тогда
		
		//Режим 0 - взносы распределены по базе с начала года
		//		1 - нет базы по взносам, все отправили на счет 91
		//		2 - взносы в Дт 91, исчисленные с начислений отнесенных в дт 69 счета
		
		ПараметрыОтбора = Новый Структура;
		
		// Соберем строки относящиеся к распределнию по базе с начала года
		ПараметрыОтбора.Вставить("Режим", 0);
		МассивСтрокСНачалаГода = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу распределенных по базе с начала года
		ТаблицаКомментированияСНачалаГода = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокСНачалаГода);
		ТаблицаКомментированияСНачалаГода.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыПФРПоСуммарномуТарифу,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");
		
		// Получим таблицу распределенных по базе с начала года (в части ЕНВД)
		ТаблицаКомментированияСНачалаГодаЕНВД = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокСНачалаГода);
		ТаблицаКомментированияСНачалаГодаЕНВД.Свернуть("Физлицо", "ВзносыПФРПоСуммарномуТарифу_ЕНВД, ВзносыФСС_ЕНВД,"
			+ "ВзносыФФОМС_ЕНВД");
			
		// Соберем строки относящиеся к отсутствию базы
		ПараметрыОтбора.Вставить("Режим", 1);
		МассивСтрокНетБазы = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу для которых не нашлось базы
		ТаблицаКомментированияНетБазы = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНетБазы.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыПФРПоСуммарномуТарифу,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");
		
		// Получим таблицу для которых не нашлось базы (в части ЕНВД)
		ТаблицаКомментированияНетБазыЕНВД = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНетБазыЕНВД.Свернуть("Физлицо", "ВзносыПФРПоСуммарномуТарифу_ЕНВД, ВзносыФСС_ЕНВД,"
			+ "ВзносыФФОМС_ЕНВД");
			
		// Соберем строки относящиеся к начислениям в Дт 69 счета
		ПараметрыОтбора.Вставить("Режим", 2);
		МассивСтрокНетБазы = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу для которых не нашлось базы
		ТаблицаКомментированияНачисления69 = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНачисления69.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыПФРПоСуммарномуТарифу,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");	
			
			
		// Удалим колонки по шахтерам
		Если НЕ Константы.ИспользуетсяТрудШахтеров.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифШахтеры"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифШахтеры"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифШахтеры"));
		
		КонецЕсли; 
		
		// Удалим колонки по летчикам
		Если НЕ Константы.ИспользуетсяТрудЧленовЛетныхЭкипажей.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТариф"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТариф"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТариф"));
		
		КонецЕсли; 
		
		// Удалим колонки по работам с досрочной пенсией
		Если НЕ Константы.ИспользуютсяРаботыСДосрочнойПенсией.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
		
		КонецЕсли;
		
		// Удалим пустые строки, если таковые образовались полсе разбиени таблицы комментрования
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияСНачалаГода);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияСНачалаГодаЕНВД);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНетБазы);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНетБазыЕНВД);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНачисления69);
		
		// Подключаем обработку комментирования
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		
		РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Внимание! При формировании проводок обнаружены сотрудники, по которым нет данных для формирования проводок по страховым взносам.", Перечисления.ВидыСообщений.Информация);
		
		Если ТаблицаКомментированияСНачалаГода.Количество() > 0 Тогда
		
			РазделДокументаСНачалаГода = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники по которым сформированы проводки по страховым взносам по начислениям нарастающим итогом с начала года.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияСНачалаГода, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаСНачалаГода, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНетБазы.Количество() > 0 Тогда
		
			РазделДокументаНетБазы = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНетБазы, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНетБазы, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияСНачалаГодаЕНВД.Количество() > 0 Тогда
		
			РазделДокументаСНачалаГодаЕНВД = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники по которым сформированы проводки по страховым взносам в части ЕНВД по начислениям нарастающим итогом с начала года.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияСНачалаГодаЕНВД, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаСНачалаГодаЕНВД, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНетБазыЕНВД.Количество() > 0 Тогда
		
			РазделДокументаНетБазыЕНВД = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91 (в части ЕНВД).", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНетБазыЕНВД, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНетБазыЕНВД, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНачисления69.Количество() > 0 Тогда
			
			РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Внимание! При формировании проводок часть страховых взносов отражена в дебет счета 91. Есть начисления, отражаемые на счетах расчетов по социальному страхованию и обеспечению, с которых исчислены страховые взносы.", Перечисления.ВидыСообщений.Информация);
			
			РазделДокументаНачисления69 = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНачисления69, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНачисления69, Ложь);
		
		КонецЕсли;
		
		ОбработкаКомментариев.ПоказатьСообщения();
	
	КонецЕсли; 
	
КонецПроцедуры

// Функция фозвращает таблицу значений с данными для вычисления коэффициентов отражения в учете Страховых взносов
// Параметры
//  МассивПериодовРегистрации   - массив с периодами регистрации, по которым собираем данные
//  ГоловнаяОрганизация 		– головная организация
//  МассивСчетаИсключенияРБП 	- массив счетов по которым расходы не относим на РБП
//  МассивФизлиц				- Массив физлиц, по которым собираем данные для списания РБП или получения базы с начала года
//  СворачиватьПериодДействия 	- Результат формируем без периода действия
//
// Возвращаемое значение:
//   Таблица значений 
//
Функция ПолучитьДанныеУчетаСтраховыхВзносов2014(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП, МассивФизлиц = Неопределено, СворачиватьПериодДействия = Истина)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Периоды
	// Таблица список периодов, для получения учетной политики
	// Поля:
	//		Период, конец месяца
	// Описание:

	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(МассивПериодовРегистрации[0]);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы
	Для Индекс = 1 По МассивПериодовРегистрации.Количество()-1 Цикл
		КонецМесяца = КонецМесяца(МассивПериодовРегистрации[Индекс]);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамНеОтбиратьФизлиц", МассивФизлиц = Неопределено);
	Запрос.УстановитьПараметр("парамМассивПериодовРегистрации", МассивПериодовРегистрации);
	Запрос.УстановитьПараметр("парамМассивФизлиц", МассивФизлиц);
	Запрос.УстановитьПараметр("парамСчетаИсключенияРБП", МассивСчетаИсключенияРБП);
	Запрос.УстановитьПараметр("парамКонецГода", КонецГода(МассивПериодовРегистрации[0]));
	Запрос.УстановитьПараметр("парамФормироватьРБП", мПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска и Не мОценочныеОбязательстваФормироватьБУ);
	
	МассивПоСреднемуЗаработкуОтпуска = Новый Массив;
	МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	Запрос.УстановитьПараметр("парамПоСреднемуЗаработкуОтпуска", МассивПоСреднемуЗаработкуОтпуска);

	ИспользуетсяТрудЧленовЛетныхЭкипажей = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудЧленовЛетныхЭкипажей");
	ИспользуетсяТрудШахтеров = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудШахтеров");
	ИспользуютсяРаботыСДосрочнойПенсией = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуютсяРаботыСДосрочнойПенсией");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Регистратор,
	|	СтраховыеВзносыСведенияОДоходах.НомерСтроки,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидРасчета КАК ВидРасчета,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК КодДоходаЕСН,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СтраховыеВзносыСведенияОДоходах.Скидка
	|ПОМЕСТИТЬ ВТ_Скидки
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|	И СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И (&парамНеОтбиратьФизлиц
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.ФизЛицо В (&парамМассивФизлиц))
	|	И СтраховыеВзносыСведенияОДоходах.Скидка <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СкидкиКДоходам.Регистратор КАК Регистратор,
	|	СкидкиКДоходам.НомерСтроки КАК НомерСтроки,
	|	ЕСНДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|	СкидкиКДоходам.ВидРасчета КАК ВидРасчета,
	|	СкидкиКДоходам.КодДоходаЕСН КАК КодДоходаЕСН,
	|	СкидкиКДоходам.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	СкидкиКДоходам.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	СкидкиКДоходам.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДополнительныеНачисления.Результат КАК Результат,
	|	СкидкиКДоходам.Скидка
	|ИЗ
	|	ВТ_Скидки КАК СкидкиКДоходам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|		ПО (ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение)
	|			И СкидкиКДоходам.ФизЛицо = ЕСНДополнительныеНачисления.ФизЛицо
	|			И СкидкиКДоходам.ВидРасчета = ЕСНДополнительныеНачисления.ВидРасчета
	|			И СкидкиКДоходам.КодДоходаЕСН = ЕСНДополнительныеНачисления.КодДоходаЕСН
	|			И СкидкиКДоходам.ОблагаетсяЕНВД = ЕСНДополнительныеНачисления.ОблагаетсяЕНВД
	|			И СкидкиКДоходам.ПериодРегистрации = ЕСНДополнительныеНачисления.ПериодРегистрации
	|			И СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу = ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу
	|			И СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|			И СкидкиКДоходам.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	Сотрудник,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией";
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаСкидок = ПолучитьТаблицуСкидокКДоходам(РезультатЗапроса);
	Запрос.УстановитьПараметр("ТаблицаСкидок", ТаблицаСкидок);
	
	МассивСчет84 = Новый Массив();
	МассивСчет84.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	Запрос.УстановитьПараметр("СчетаИсключения", МассивСчет84);
	
	МассивСчет69 = Новый Массив();
	МассивСчет69.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	Запрос.УстановитьПараметр("Счета69", МассивСчет69);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета69
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счета69)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД,
	|	УчетнаяПолитика.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитика
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|			ПО Периоды.Период >= УчетнаяПолитика.Период
	|				И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитика.Период
	|			И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСкидок.Сотрудник КАК Сотрудник,
	|	ТаблицаСкидок.ВидРасчета КАК ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН КАК КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ТаблицаСкидок.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаСкидок.Скидка КАК Скидка
	|ПОМЕСТИТЬ ВТ_СкидкиКДоходамВрем
	|ИЗ
	|	&ТаблицаСкидок КАК ТаблицаСкидок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	Сотрудник,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСкидок.Сотрудник,
	|	ТаблицаСкидок.ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ТаблицаСкидок.ПериодРегистрации,
	|	СУММА(ТаблицаСкидок.Скидка) КАК Скидка
	|ПОМЕСТИТЬ ВТ_СкидкиКДоходам
	|ИЗ
	|	ВТ_СкидкиКДоходамВрем КАК ТаблицаСкидок
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСкидок.Сотрудник,
	|	ТаблицаСкидок.ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ТаблицаСкидок.ПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаСкидок.ПериодРегистрации,
	|	ТаблицаСкидок.Сотрудник,
	|	ТаблицаСкидок.ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСНДополнительныеНачисления.Сотрудник,
	|	ЕСНДополнительныеНачисления.ФизЛицо,
	|	ЕСНДополнительныеНачисления.ВидРасчета,
	|	ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|	ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|	ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|	ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ЕСНДополнительныеНачисления.ПериодРегистрации,
	|	СУММА(ЕСНДополнительныеНачисления.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТ_ЕСНДополнительныеНачисления
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|		ЕСНДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН КАК КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.Результат КАК Результат
	|	ИЗ
	|		РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|	ГДЕ
	|		ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНДополнительныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК ЕСНДополнительныеНачисления
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНДополнительныеНачисления.ФизЛицо,
	|	ЕСНДополнительныеНачисления.Сотрудник,
	|	ЕСНДополнительныеНачисления.ВидРасчета,
	|	ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|	ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|	ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|	ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ЕСНДополнительныеНачисления.ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	Доходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ВидДохода.ВходитВБазуПФР КАК ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС КАК ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС КАК ВходитВБазуФОМС
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыПоВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		ЕСНОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		ЕСНОсновныеНачисления.КодДоходаЕСН КАК ВидДохода,
	|		ЕСНОсновныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНОсновныеНачисления.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНОсновныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНОсновныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		ЕСНОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ЕСНОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		ВЫБОР
	|			КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Результат
	|	ИЗ
	|		РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
	|	ГДЕ
	|		ЕСНОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.Сотрудник,
	|		ЕСНДополнительныеНачисления.ФизЛицо,
	|		ЕСНДополнительныеНачисления.ВидРасчета,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|		ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНДополнительныеНачисления.Результат - ЕСТЬNULL(ВТ_СкидкиКДоходам.Скидка, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|    Из
	|		ВТ_ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкидкиКДоходам КАК ВТ_СкидкиКДоходам
	|			ПО ЕСНДополнительныеНачисления.Сотрудник = ВТ_СкидкиКДоходам.Сотрудник
	|				И ЕСНДополнительныеНачисления.ВидРасчета = ВТ_СкидкиКДоходам.ВидРасчета
	|				И ЕСНДополнительныеНачисления.КодДоходаЕСН = ВТ_СкидкиКДоходам.КодДоходаЕСН
	|				И ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу = ВТ_СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу
	|				И ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = ВТ_СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|				И ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ВТ_СкидкиКДоходам.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|				И ЕСНДополнительныеНачисления.ПериодРегистрации = ВТ_СкидкиКДоходам.ПериодРегистрации
	|				И ЕСНДополнительныеНачисления.ОблагаетсяЕНВД = ВТ_СкидкиКДоходам.ОблагаетсяЕНВД) КАК Доходы
	|ГДЕ
	|	Доходы.Результат <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ПериодРегистрации,
	|	Доходы.ПериодДействия,
	|	Доходы.ОблагаетсяЕНВД,
	|	Доходы.ФизЛицо,
	|	Доходы.ВидДохода.ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	Доходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84,
	|	ВЫБОР
	|		КОГДА ВТ_Счета69.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет69,
	|	Доходы.ЭтоОтпуск,
	|	Доходы.ДатаНачала КАК ДатаАктуальности
	|ПОМЕСТИТЬ ВТ_БУДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		БУОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		БУОсновныеНачисления.СчетДт КАК СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.Результат КАК Результат,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт,
	|		ВЫБОР
	|			КОГДА &парамФормироватьРБП
	|				ТОГДА ВЫБОР
	|						КОГДА (НЕ БУОсновныеНачисления.СчетДт В (&парамСчетаИсключенияРБП))
	|								И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПодменятьСчетДтНаРБП,
	|		БУОсновныеНачисления.ВидРасчета.ЕжегодныйОтпускДляРезервов КАК ЭтоОтпуск,
	|		БУОсновныеНачисления.ПериодДействияНачало КАК ДатаНачала
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.Сотрудник,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.ВидРасчета,
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		БУДополнительныеНачисления.Результат,
	|		БУДополнительныеНачисления.ПодразделениеДт,
	|		БУДополнительныеНачисления.ПодразделениеКт,
	|		ЛОЖЬ,
	|		БУДополнительныеНачисления.ВидРасчета.ЕжегодныйОтпускДляРезервов,
	|		БУДополнительныеНачисления.ПериодРегистрации
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Доходы.ПериодРегистрации = УчетнаяПолитикаНалоговыйУчет.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
	|		ПО Доходы.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО Доходы.СчетДт = ВТ_Счета84.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета69 КАК ВТ_Счета69
	|		ПО Доходы.СчетДт = ВТ_Счета69.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ПериодРегистрации,
	|	Доходы.СчетДт,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.ПериодДействия,
	|	Доходы.ФизЛицо,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Счета69.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Доходы.ЭтоОтпуск,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Доходы.ДатаНачала
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаАктуальности";
	Запрос.Выполнить();
	
	Если ИспользуетсяТрудЧленовЛетныхЭкипажей или ИспользуетсяТрудШахтеров или ИспользуютсяРаботыСДосрочнойПенсией Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ДатаАктуальности КАК ДатаАктуальности
		|ПОМЕСТИТЬ ВТ_СотрудникиДаты
		|ИЗ
		|	ВТ_БУДоходы КАК БУДоходы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаАктуальности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	Сотрудники.ДатаАктуальности
		|ПОМЕСТИТЬ ВТСтрокиРегистра
		|ИЗ
		|	ВТ_СотрудникиДаты КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|		ПО Сотрудники.Сотрудник = РаботникиОрганизаций.Сотрудник
		|			И Сотрудники.ДатаАктуальности >= РаботникиОрганизаций.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	Сотрудники.Сотрудник,
		|	Сотрудники.ДатаАктуальности
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиРегистра.Сотрудник,
		|	СтрокиРегистра.ДатаАктуальности,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА Работники.ПериодЗавершения <= СтрокиРегистра.ДатаАктуальности
		|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА Работники.ДолжностьЗавершения.ЯвляетсяДолжностьюЛетногоЭкипажа
		|			ИНАЧЕ Работники.Должность.ЯвляетсяДолжностьюЛетногоЭкипажа
		|		КОНЕЦ, ЛОЖЬ) КАК ОблагаетсяПоДополнительномуТарифу,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА Работники.ПериодЗавершения <= СтрокиРегистра.ДатаАктуальности
		|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА Работники.ДолжностьЗавершения.ЯвляетсяШахтерскойДолжностью
		|			ИНАЧЕ Работники.Должность.ЯвляетсяШахтерскойДолжностью
		|		КОНЕЦ, ЛОЖЬ) КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА Работники.ПериодЗавершения <= СтрокиРегистра.ДатаАктуальности
		|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА Работники.ДолжностьЗавершения.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией
		|			ИНАЧЕ Работники.Должность.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией
		|		КОНЕЦ, ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТСтрокиРегистра КАК СтрокиРегистра
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
		|		ПО СтрокиРегистра.Сотрудник = Работники.Сотрудник
		|			И СтрокиРегистра.Период = Работники.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ФизЛицо,
		|	БУДоходы.ВидРасчета КАК ВидРасчета,
		|	БУДоходы.ПериодРегистрации КАК ПериодРегистрации,
		|	БУДоходы.ПериодДействия КАК ПериодДействия,
		|	БУДоходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БУДоходы.СчетДт,
		|	БУДоходы.СубконтоДт1,
		|	БУДоходы.СубконтоДт2,
		|	БУДоходы.СубконтоДт3,
		|	БУДоходы.СчетДтНУ,
		|	БУДоходы.СубконтоДтНУ1,
		|	БУДоходы.СубконтоДтНУ2,
		|	БУДоходы.СубконтоДтНУ3,
		|	БУДоходы.СпособРаспределенияЗатрат,
		|	БУДоходы.ОтражениеВУСН,
		|	БУДоходы.Результат,
		|	БУДоходы.ПодразделениеДт,
		|	БУДоходы.ПодразделениеКт,
		|	БУДоходы.ПодменятьСчетДтНаРБП,
		|	БУДоходы.ЭтоСчет84,
		|	БУДоходы.ЭтоСчет69,
		|	БУДоходы.ЭтоОтпуск,
		|	ЕСТЬNULL(СотрудникиДопДанные.ОблагаетсяПоДополнительномуТарифу, ЛОЖЬ) КАК ОблагаетсяПоДополнительномуТарифу,
		|	ЕСТЬNULL(СотрудникиДопДанные.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам, ЛОЖЬ) КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ЕСТЬNULL(СотрудникиДопДанные.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией, ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	БУДоходы.ДатаАктуальности КАК ПериодДействияНачало
		|ИЗ
		|	ВТ_БУДоходы КАК БУДоходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиДопДанные
		|		ПО БУДоходы.Сотрудник = СотрудникиДопДанные.Сотрудник
		|			И БУДоходы.ДатаАктуальности = СотрудникиДопДанные.ДатаАктуальности";
		ТаблицаУчета = Запрос.Выполнить().Выгрузить();
		
		ДополнительныйЗапрос = Новый Запрос;
		ДополнительныйЗапрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета,
		|	ОсновныеНачисленияОрганизаций.ВидСтажаСЗВ4,
		|	ВЫБОР
		|		КОГДА НЕ ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
		|				И ОсновныеНачисленияОрганизаций.НачисляетсяВЦеломЗаМесяц
		|				И ОсновныеНачисленияОрганизаций.ВидСтажаСЗВ4 <> ЗНАЧЕНИЕ(Перечисление.ВидыСтажаСЗВ4.ВключаетсяВСтажДляДосрочногоНазначенияПенсии)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК РаспределяетсяВоВсехСлучаях
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнительныеНачисленияОрганизаций.Ссылка,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаСЗВ4.ПустаяСсылка),
		|	ИСТИНА
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций";
		Выборка = ДополнительныйЗапрос.Выполнить().Выбрать();
		ОписаниеНачислений = Новый Соответствие;
		Пока Выборка.Следующий() Цикл
			ОписаниеНачислений.Вставить(Выборка.ВидРасчета, Новый Структура("ВидСтажаСЗВ4,РаспределяетсяВоВсехСлучаях",Выборка.ВидСтажаСЗВ4,Выборка.РаспределяетсяВоВсехСлучаях))
		КонецЦикла;
		
		РасчетСтраховыхВзносов.УточнитьДанныеОРаботахСДосрочнойПенсией(
			ТаблицаУчета, 
			РасчетСтраховыхВзносов.ДолиДляРаспределенияВредности(Запрос.МенеджерВременныхТаблиц, ПериодРегистрации), 
			Истина, 
			ПериодРегистрации, 
			ОписаниеНачислений);
	
	 	Запрос.УстановитьПараметр("БУДоходы",ТаблицаУчета);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ФизЛицо,
		|	БУДоходы.ВидРасчета КАК ВидРасчета,
		|	БУДоходы.ПериодРегистрации КАК ПериодРегистрации,
		|	БУДоходы.ПериодДействия КАК ПериодДействия,
		|	БУДоходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БУДоходы.СчетДт,
		|	БУДоходы.СубконтоДт1,
		|	БУДоходы.СубконтоДт2,
		|	БУДоходы.СубконтоДт3,
		|	БУДоходы.СчетДтНУ,
		|	БУДоходы.СубконтоДтНУ1,
		|	БУДоходы.СубконтоДтНУ2,
		|	БУДоходы.СубконтоДтНУ3,
		|	БУДоходы.СпособРаспределенияЗатрат,
		|	БУДоходы.ОтражениеВУСН,
		|	БУДоходы.Результат,
		|	БУДоходы.ПодразделениеДт,
		|	БУДоходы.ПодразделениеКт,
		|	БУДоходы.ПодменятьСчетДтНаРБП,
		|	БУДоходы.ЭтоСчет84,
		|	БУДоходы.ЭтоСчет69,
		|	БУДоходы.ЭтоОтпуск,
		|	БУДоходы.ОблагаетсяПоДополнительномуТарифу,
		|	БУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	БУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТВременная
		|ИЗ
		|	&БУДоходы КАК БУДоходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Временная.Сотрудник,
		|	Временная.ФизЛицо,
		|	Временная.ВидРасчета,
		|	Временная.ПериодРегистрации,
		|	Временная.ПериодДействия,
		|	Временная.ОблагаетсяЕНВД,
		|	Временная.СчетДт,
		|	Временная.СубконтоДт1,
		|	Временная.СубконтоДт2,
		|	Временная.СубконтоДт3,
		|	Временная.СчетДтНУ,
		|	Временная.СубконтоДтНУ1,
		|	Временная.СубконтоДтНУ2,
		|	Временная.СубконтоДтНУ3,
		|	Временная.СпособРаспределенияЗатрат,
		|	Временная.ОтражениеВУСН,
		|	СУММА(Временная.Результат) КАК Результат,
		|	Временная.ПодразделениеДт,
		|	Временная.ПодразделениеКт,
		|	Временная.ПодменятьСчетДтНаРБП,
		|	Временная.ЭтоСчет84,
		|	Временная.ЭтоСчет69,
		|	Временная.ЭтоОтпуск,
		|	Временная.ОблагаетсяПоДополнительномуТарифу,
		|	Временная.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
		|ИЗ
		|	ВТВременная КАК Временная
		|
		|СГРУППИРОВАТЬ ПО
		|	Временная.Сотрудник,
		|	Временная.ФизЛицо,
		|	Временная.ВидРасчета,
		|	Временная.ПериодРегистрации,
		|	Временная.ПериодДействия,
		|	Временная.ОблагаетсяЕНВД,
		|	Временная.СчетДт,
		|	Временная.СубконтоДт1,
		|	Временная.СубконтоДт2,
		|	Временная.СубконтоДт3,
		|	Временная.СчетДтНУ,
		|	Временная.СубконтоДтНУ1,
		|	Временная.СубконтоДтНУ2,
		|	Временная.СубконтоДтНУ3,
		|	Временная.СпособРаспределенияЗатрат,
		|	Временная.ОтражениеВУСН,
		|	Временная.ПодразделениеДт,
		|	Временная.ПодразделениеКт,
		|	Временная.ПодменятьСчетДтНаРБП,
		|	Временная.ЭтоСчет84,
		|	Временная.ЭтоСчет69,
		|	Временная.ЭтоОтпуск,
		|	Временная.ОблагаетсяПоДополнительномуТарифу,
		|	Временная.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Временная.ПериодРегистрации,
		|	Временная.ПериодДействия,
		|	Временная.Сотрудник,
		|	Временная.ВидРасчета,
		|	Временная.ОблагаетсяЕНВД,
		|	Временная.ОблагаетсяПоДополнительномуТарифу,
		|	Временная.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВременная";
		
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ФизЛицо,
		|	БУДоходы.ВидРасчета КАК ВидРасчета,
		|	БУДоходы.ПериодРегистрации КАК ПериодРегистрации,
		|	БУДоходы.ПериодДействия КАК ПериодДействия,
		|	БУДоходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БУДоходы.СчетДт,
		|	БУДоходы.СубконтоДт1,
		|	БУДоходы.СубконтоДт2,
		|	БУДоходы.СубконтоДт3,
		|	БУДоходы.СчетДтНУ,
		|	БУДоходы.СубконтоДтНУ1,
		|	БУДоходы.СубконтоДтНУ2,
		|	БУДоходы.СубконтоДтНУ3,
		|	БУДоходы.СпособРаспределенияЗатрат,
		|	БУДоходы.ОтражениеВУСН,
		|	БУДоходы.Результат,
		|	БУДоходы.ПодразделениеДт,
		|	БУДоходы.ПодразделениеКт,
		|	БУДоходы.ПодменятьСчетДтНаРБП,
		|	БУДоходы.ЭтоСчет84,
		|	БУДоходы.ЭтоСчет69,
		|	БУДоходы.ЭтоОтпуск,
		|	ЛОЖЬ КАК ОблагаетсяПоДополнительномуТарифу,
		|	ЛОЖЬ КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
		|ИЗ
		|	ВТ_БУДоходы КАК БУДоходы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодРегистрации,
		|	ПериодДействия,
		|	Сотрудник,
		|	ВидРасчета,
		|	ОблагаетсяЕНВД,
		|	ОблагаетсяПоДополнительномуТарифу,
		|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзносыДоходыПоВР.Сотрудник,
	|	ВзносыДоходыПоВР.ФизЛицо,
	|	ВзносыДоходыПоВР.ВидРасчета,
	|	БУДоходыПоВР.ОблагаетсяЕНВД,
	|	ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	ВзносыДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ВзносыДоходыПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ВзносыДоходыПоВР.ПериодРегистрации,
	|	ВзносыДоходыПоВР.ПериодДействия,
	|	ВзносыДоходыПоВР.Результат,
	|	БУДоходыПоВР.СчетДт,
	|	БУДоходыПоВР.СубконтоДт1,
	|	БУДоходыПоВР.СубконтоДт2,
	|	БУДоходыПоВР.СубконтоДт3,
	|	БУДоходыПоВР.СчетДтНУ,
	|	БУДоходыПоВР.СубконтоДтНУ1,
	|	БУДоходыПоВР.СубконтоДтНУ2,
	|	БУДоходыПоВР.СубконтоДтНУ3,
	|	БУДоходыПоВР.СпособРаспределенияЗатрат,
	|	БУДоходыПоВР.ОтражениеВУСН,
	|	БУДоходыПоВР.Результат КАК РезультатБУ,
	|	БУДоходыПоВР.ПодразделениеДт,
	|	БУДоходыПоВР.ПодразделениеКт,
	|	БУДоходыПоВР.ПодменятьСчетДтНаРБП,
	|	ВзносыДоходыПоВР.ВходитВБазуПФР,
	|	ВзносыДоходыПоВР.ВходитВБазуФСС,
	|	ВзносыДоходыПоВР.ВходитВБазуФОМС,
	|	БУДоходыПоВР.ЭтоСчет84,
	|	БУДоходыПоВР.ЭтоСчет69,
	|	БУДоходыПоВР.ЭтоОтпуск
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыБУДоходы
	|ИЗ
	|	ВТ_ВзносыДоходыПоВР КАК ВзносыДоходыПоВР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|		ПО ВзносыДоходыПоВР.Сотрудник = БУДоходыПоВР.Сотрудник
	|			И ВзносыДоходыПоВР.ВидРасчета = БУДоходыПоВР.ВидРасчета
	|			И ВзносыДоходыПоВР.ПериодРегистрации = БУДоходыПоВР.ПериодРегистрации
	|			И ВзносыДоходыПоВР.ПериодДействия = БУДоходыПоВР.ПериодДействия
	|			И ВзносыДоходыПоВР.ОблагаетсяЕНВД = БУДоходыПоВР.ОблагаетсяЕНВД
	|			И ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу = БУДоходыПоВР.ОблагаетсяПоДополнительномуТарифу
	|			И ВзносыДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = БУДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|			И ВзносыДоходыПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = БУДоходыПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.Сотрудник КАК Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета КАК ВидРасчета,
	|	БУДоходыСводПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия КАК ПериодДействия,
	|	СУММА(БУДоходыСводПоВР.Результат) КАК Результат,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БУДоходыСводПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|ПОМЕСТИТЬ ВТ_БУДоходыСводПоВР
	|ИЗ
	|	ВТ_БУДоходыПоВР КАК БУДоходыСводПоВР
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыСводПоВР.Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД,
	|	БУДоходыСводПоВР.ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия,
	|	БУДоходыСводПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.ФизЛицо,
	|	ВзносыДоходыБУДоходы.СчетДт,
	|	ВзносыДоходыБУДоходы.СубконтоДт1,
	|	ВзносыДоходыБУДоходы.СубконтоДт2,
	|	ВзносыДоходыБУДоходы.СубконтоДт3,
	|	ВзносыДоходыБУДоходы.СчетДтНУ,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ1,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ2,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ3,
	|	ВзносыДоходыБУДоходы.СпособРаспределенияЗатрат,
	|	ВзносыДоходыБУДоходы.ОтражениеВУСН,
	|	ВзносыДоходыБУДоходы.ПодразделениеДт,
	|	ВзносыДоходыБУДоходы.ПодразделениеКт,
	|	ВзносыДоходыБУДоходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР_ЕНВД,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС_ЕНВД,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФОМС,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФОМС_ЕНВД,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаДопТариф,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаДопТарифШахтеры,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПодземныеИВредныеРаботы)
	|				И ВзносыДоходыБУДоходы.ВходитВБазуПФР
	|				И БУДоходыСводПоВР.Результат <> 0
	|			ТОГДА ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДопТарифПодземныеИВредныеРаботы,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы)
	|				И ВзносыДоходыБУДоходы.ВходитВБазуПФР
	|				И БУДоходыСводПоВР.Результат <> 0
	|			ТОГДА ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДопТарифТяжелыеИПрочиеРаботы,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС_НС,
	|	ВзносыДоходыБУДоходы.ПериодРегистрации,
	|	ВзносыДоходыБУДоходы.ПериодДействия,
	|	ВзносыДоходыБУДоходы.ОблагаетсяЕНВД,
	|	ВзносыДоходыБУДоходы.ЭтоСчет84,
	|	ВзносыДоходыБУДоходы.ЭтоСчет69,
	|	ВзносыДоходыБУДоходы.ЭтоОтпуск
	|ПОМЕСТИТЬ ВТ_Коэффициенты
	|ИЗ
	|	ВТ_ВзносыДоходыБУДоходы КАК ВзносыДоходыБУДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыСводПоВР КАК БУДоходыСводПоВР
	|		ПО ВзносыДоходыБУДоходы.Сотрудник = БУДоходыСводПоВР.Сотрудник
	|			И ВзносыДоходыБУДоходы.ПериодРегистрации = БУДоходыСводПоВР.ПериодРегистрации
	|			И ВзносыДоходыБУДоходы.ПериодДействия = БУДоходыСводПоВР.ПериодДействия
	|			И ВзносыДоходыБУДоходы.ОблагаетсяЕНВД = БУДоходыСводПоВР.ОблагаетсяЕНВД
	|			И ВзносыДоходыБУДоходы.ВидРасчета = БУДоходыСводПоВР.ВидРасчета
	|			И ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу = БУДоходыСводПоВР.ОблагаетсяПоДополнительномуТарифу
	|			И ВзносыДоходыБУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = БУДоходыСводПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|			И ВзносыДоходыБУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = БУДоходыСводПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией";
	
	Запрос.Выполнить();
	
	Если СворачиватьПериодДействия Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	СУММА(Коэффициенты.БазаПФР) КАК БазаПФР,
		|	СУММА(Коэффициенты.БазаПФР_ЕНВД) КАК БазаПФР_ЕНВД,
		|	СУММА(Коэффициенты.БазаФСС) КАК БазаФСС,
		|	СУММА(Коэффициенты.БазаФСС_ЕНВД) КАК БазаФСС_ЕНВД,
		|	СУММА(Коэффициенты.БазаФОМС) КАК БазаФОМС,
		|	СУММА(Коэффициенты.БазаФОМС_ЕНВД) КАК БазаФОМС_ЕНВД,
		|	СУММА(Коэффициенты.БазаДопТариф) КАК БазаДопТариф,
		|	СУММА(Коэффициенты.БазаДопТарифШахтеры) КАК БазаДопТарифШахтеры,
		|	СУММА(Коэффициенты.БазаДопТарифПодземныеИВредныеРаботы) КАК БазаДопТарифПодземныеИВредныеРаботы,
		|	СУММА(Коэффициенты.БазаДопТарифТяжелыеИПрочиеРаботы) КАК БазаДопТарифТяжелыеИПрочиеРаботы,
		|	СУММА(Коэффициенты.БазаФСС_НС) КАК БазаФСС_НС,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69
		|ИЗ
		|	ВТ_Коэффициенты КАК Коэффициенты
		|
		|СГРУППИРОВАТЬ ПО
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69";
		
	Иначе // для списания РБП в расходы нужен период действия
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	СУММА(Коэффициенты.БазаПФР) КАК БазаПФР,
		|	СУММА(Коэффициенты.БазаПФР_ЕНВД) КАК БазаПФР_ЕНВД,
		|	СУММА(Коэффициенты.БазаФСС) КАК БазаФСС,
		|	СУММА(Коэффициенты.БазаФСС_ЕНВД) КАК БазаФСС_ЕНВД,
		|	СУММА(Коэффициенты.БазаФОМС) КАК БазаФОМС,
		|	СУММА(Коэффициенты.БазаФОМС_ЕНВД) КАК БазаФОМС_ЕНВД,
		|	СУММА(Коэффициенты.БазаДопТариф) КАК БазаДопТариф,
		|	СУММА(Коэффициенты.БазаДопТарифШахтеры) КАК БазаДопТарифШахтеры,
		|	СУММА(Коэффициенты.БазаДопТарифПодземныеИВредныеРаботы) КАК БазаДопТарифПодземныеИВредныеРаботы,
		|	СУММА(Коэффициенты.БазаДопТарифТяжелыеИПрочиеРаботы) КАК БазаДопТарифТяжелыеИПрочиеРаботы,
		|	СУММА(Коэффициенты.БазаФСС_НС) КАК БазаФСС_НС,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПериодДействия,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69
		|ИЗ
		|	ВТ_Коэффициенты КАК Коэффициенты
		|ГДЕ
		|	(НЕ Коэффициенты.СчетДт В (&парамСчетаИсключенияРБП))
		|
		|СГРУППИРОВАТЬ ПО
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПериодДействия,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69";
		
	КонецЕсли;	
	
	Возврат  Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеУчетаСтраховыхВзносов2014()
// алгоритмы с 2014 года
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// алгоритмы с 2016 года

// Процедура заполняет таблицу ПромежуточнаяТаблица проводками
// по страховым взносам
// используется с 2010 год
Процедура ПолучитьПроводкиПоСтраховымВзносам2016(ПромежуточнаяТаблица, ГоловнаяОрганизация, МассивСчетаИсключенияРБП)

	// добавим колонку СчДтБУ, в которой будет счет Дт БУ после подмены его на 97 счет
	// по этому значению будем производить замену счета НУ из соответсвия. Действует с 2010 года
	ПромежуточнаяТаблица.Колонки.Добавить("РБПСчетДтБУ", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	мТаблицаКомментированияСтраховыеВзносы = СоздатьТаблицуКомментированияСтраховыхВзносов();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("СчетаИсключенияРБП", МассивСчетаИсключенияРБП);

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение исчисленных страховых взносов в текущем месяце
	
	// Получение коэффициентов отражения страховых взносов  
	МассивПериодовРегистрации = Новый Массив;
	МассивПериодовРегистрации.Добавить(ПериодРегистрации);
	ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2014(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
	
	// запрос по соответствиям статей затрат начислений 
	// для подстановки статей затрат при формировании проводок страховым взносам
    // (перечисление ВидыДополнительныхСтатейЗатрат)
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
    |ИЗ
    |   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
    |ГДЕ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат";
    
    ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
    ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	ТипСтатьиЗатрат = Тип("СправочникСсылка.ПрочиеДоходыИРасходы");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
    // Исчисленные страховые взносы в текущем месяце
	//
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизЛицо,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличины + СтраховыеВзносыИсчисленные.ПФРСПревышения) КАК ПФРПоСуммарномуТарифу,
	|	0 КАК ПФРСПревышения,
	|	СУММА(СтраховыеВзносыИсчисленные.ФСС) КАК ФСС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМС) КАК ФФОМС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу) КАК ПФРПоДополнительномуТарифу,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНаДоплатуКПенсииШахтерам) КАК ПФРНаДоплатуКПенсииШахтерам,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличиныЕНВД) КАК ПФРПоСуммарномуТарифуЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСПревышенияЕНВД) КАК ПФРСПревышенияЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССЕНВД) КАК ФССЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМСЕНВД) КАК ФФОМСЕНВД
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Период = &парамПериодРегистрации
	|	И СтраховыеВзносыИсчисленные.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыИсчисленные.ФизЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();

	РБП_Взносы = Справочники.РасходыБудущихПериодов.РБПНаСтраховыеВзносы;
	РБП_ФСС_НС = Справочники.РасходыБудущихПериодов.РБПНаФСС;
	РБП_ОплатаТруда = Справочники.РасходыБудущихПериодов.РБПНаОплатуТруда;
	Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
	
    СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	Отбор = Новый Структура("ФизЛицо");
	
	// в этой таблице соберем физлиц и суммы взносов, для которых нет базы в текущем месяце
	ТаблицаНетБазы = Новый ТаблицаЗначений;
	ТаблицаНетБазы.Колонки.Добавить("Физлицо");
	ТаблицаНетБазы.Колонки.Добавить("ВидБазы");
	ТаблицаНетБазы.Колонки.Добавить("СуммаВзноса");
	ТаблицаНетБазы.Колонки.Добавить("СчетКт");
	ТаблицаНетБазы.Колонки.Добавить("СчетКтНУ");
	ТаблицаНетБазы.Колонки.Добавить("СтатьяРБП");
	
	Пока Выборка.Следующий() Цикл

		Отбор.ФизЛицо = Выборка.ФизЛицо;
		СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		
		Если СтрокиОтраженияПоФизЛицу.Количество() = 0 Тогда
			
			Если Выборка.ФСС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС";
				НоваяСтрока.СуммаВзноса = Выборка.ФСС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФФОМС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРПоСуммарномуТарифу + Выборка.ПФРСПревышения <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифу + Выборка.ПФРСПревышения;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_ОПС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТариф";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_шахтеры;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифПодземныеИВредныеРаботы";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифТяжелыеИПрочиеРаботы";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФССНесчастныеСлучаи <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_НС";
				НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
				НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
			КонецЕсли;	
			
			Если Выборка.ПФРПоСуммарномуТарифуЕНВД + Выборка.ПФРСПревышенияЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифуЕНВД + Выборка.ПФРСПревышенияЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФССЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФССЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФФОМСЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМСЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			
			Продолжить;
			
		КонецЕсли;		
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФСС, Коэффициенты);

		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМС, Коэффициенты);

		// ПФР 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР");
		РезультатыПФРПоСуммарномуТарифу = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоСуммарномуТарифу, Коэффициенты);
		РезультатыПФРСПревышения = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСПревышения, Коэффициенты);
		
		// доп тариф летчики
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
		РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоДополнительномуТарифу, Коэффициенты);
		
		// доп тариф шахтеры
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифШахтеры");
		РезультатыДопТарифШахтеры = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНаДоплатуКПенсииШахтерам, Коэффициенты);
		
		// доп тариф Работы с вредными условиями 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифПодземныеИВредныеРаботы");
		РезультатыДопТарифПодземныеИВредныеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах, Коэффициенты);
		
		// доп тариф Работы с тяжелыми условиями 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифТяжелыеИПрочиеРаботы");
		РезультатыДопТарифТяжелыеИПрочиеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах, Коэффициенты);
		
		// ФСС_НС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
		РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФССНесчастныеСлучаи, Коэффициенты);
		
		
		// по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРПоСуммарномуТарифуЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоСуммарномуТарифуЕНВД, Коэффициенты);
		РезультатыПФРСПревышенияЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСПревышенияЕНВД, Коэффициенты);
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_ЕНВД");
		РезультатыФССЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФССЕНВД, Коэффициенты);
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
		РезультатыФФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМСЕНВД, Коэффициенты);
		
		Если РезультатыФСС = Неопределено и Выборка.ФСС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС";
			НоваяСтрока.СуммаВзноса = Выборка.ФСС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФФОМС = Неопределено и Выборка.ФФОМС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРПоСуммарномуТарифу = Неопределено и Выборка.ПФРПоСуммарномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_ОПС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРСПревышения = Неопределено и Выборка.ПФРСПревышения <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСПревышения;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_ОПС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТариф = Неопределено и Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТариф";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифШахтеры = Неопределено и Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_шахтеры;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифПодземныеИВредныеРаботы = Неопределено и Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифПодземныеИВредныеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифТяжелыеИПрочиеРаботы = Неопределено и Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифТяжелыеИПрочиеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФСС_НС = Неопределено и Выборка.ФССНесчастныеСлучаи <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_НС";
			НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
			НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
		КонецЕсли;
		
		Если РезультатыПФРПоСуммарномуТарифуЕНВД = Неопределено и Выборка.ПФРПоСуммарномуТарифуЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифуЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРСПревышенияЕНВД = Неопределено и Выборка.ПФРСПревышенияЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСПревышенияЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФССЕНВД = Неопределено и Выборка.ФССЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФССЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФФОМСЕНВД = Неопределено и Выборка.ФФОМСЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМСЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			
			
			ОтпускЗаСчетОО = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьБУ и мЕстьОценочноеОбязательствоДляОтпуска;
			ОтпускЗаСчетРезервов = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьНУ и мЕстьОценочноеОбязательствоДляОтпуска;
			
			//////////////////////////////////////////////////////////
			// страховые взносы
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			
			Если РезультатыФСС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФФОМС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРПоСуммарномуТарифу <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифу[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифу[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРСПревышения <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРСПревышения[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРСПревышения[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТариф <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТарифШахтеры <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры, ПланыСчетов.Налоговый.ПФР_доп_шахтеры, РезультатыДопТарифШахтеры[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры, ПланыСчетов.Налоговый.ПФР_доп_шахтеры, РезультатыДопТарифШахтеры[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТарифПодземныеИВредныеРаботы <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
							РезультатыДопТарифПодземныеИВредныеРаботы[Индекс], РБП_Взносы);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
								РезультатыДопТарифПодземныеИВредныеРаботы[Индекс], РБП_Взносы, Истина);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыДопТарифТяжелыеИПрочиеРаботы <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
							РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс], РБП_Взносы);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
								РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс], РБП_Взносы, Истина);
					
				КонецЕсли;
				
			КонецЕсли;
			
			// ЕНВД
			Если РезультатыПФРПоСуммарномуТарифуЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифуЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифуЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРСПревышенияЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРСПревышенияЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРСПревышенияЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФССЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФССЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФССЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФФОМСЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМСЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМСЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			//////////////////////////////////////////////////////////
			// ФСС_НС
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			
			Если РезультатыФСС_НС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Создадим таблицу в которой соберем информацию по взносам, которые не отражены в учете
	
	Если ТаблицаНетБазы.Количество() > 0 и Не Месяц(ПериодРегистрации) = 1 Тогда
		// есть суммы взносов, которые не отразили в учете из-за отсутствия базы в текущем месяце
		// получим коэффициенты по данным с начала года без текущего месяца
		
		ВремТаблица = ТаблицаНетБазы.Скопировать();
		ВремТаблица.Свернуть("Физлицо");
		МассивФизлиц = ВремТаблица.ВыгрузитьКолонку("Физлицо");
		
		МассивПериодовРегистрации = Новый Массив;
		ДатаНачалаМесяца = НачалоГода(ПериодРегистрации);
		МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		Пока ДатаНачалаМесяца < НачалоМесяца(ПериодРегистрации-1) Цикл
			ДатаНачалаМесяца = НачалоМесяца(КонецМесяца(ДатаНачалаМесяца)+1);
			МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		КонецЦикла;
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2014(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП,МассивФизлиц);
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		МассивСтрокКУдалению = Новый Массив;
		
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			Отбор.ФизЛицо = СтрокаТЗ.ФизЛицо;
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,СтрокаТЗ.ВидБазы);
			Результаты = ОбщегоНазначенияЗК.РаспределитьПропорционально(СтрокаТЗ.СуммаВзноса, Коэффициенты);
			
			Если СтрокаТЗ.ВидБазы = "БазаФСС_НС" Тогда
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			Иначе
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			КонецЕсли;
			
			Если Результаты <> Неопределено Тогда
				МассивСтрокКУдалению.Добавить(СтрокаТЗ); 
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП);
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
						и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
						// добавим еще одну строку
						СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
						ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП, Истина);
					КонецЕсли;
					
					Индекс = Индекс +1;
					
				КонецЦикла;
			КонецЕсли;
		
		КонецЦикла;
		
		Для каждого СтрокаТаблицы Из МассивСтрокКУдалению Цикл
			
			// Добавим строку для комментирования
			ДобавитьСтрокуДляКомментирования(СтрокаТаблицы, 0);
			
			ТаблицаНетБазы.Удалить(СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;	

	Если ТаблицаНетБазы.Количество() > 0 Тогда
		//нет базы и с начала года, отразим взносы в Дт 91 счета
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
			
			СтрокаТЧ.СчетДт			= ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаТЗ.ВидБазы = "БазаПФР_ЕНВД");
			СтрокаТЧ.СубконтоДт1 	= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");//Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов; //blik 080215 48782
			СтрокаТЧ.СубконтоДт2    = ПРГ_ПолучитьПодразделениеФизЛица(СтрокаТЗ.Физлицо);//blik 080215 48782
			СтрокаТЧ.СчетКт			= СтрокаТЗ.СчетКт;
			СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ЗначениеЗаполнено(СтрокаТЗ.СчетКт) Тогда
				СтрокаТЧ.СчетДтНУ		= ПланыСчетов.Налоговый.ПрочиеКосвенныеРасходы;
				СтрокаТЧ.СубконтоДтНУ1 	= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");//Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов; //blik 080215 48782
				СтрокаТЧ.СубконтоДтНУ2    = ПРГ_ПолучитьПодразделениеФизЛица(СтрокаТЗ.Физлицо);//blik 080215 48782
				СтрокаТЧ.СчетКтНУ		= СтрокаТЗ.СчетКтНУ;
			КонецЕсли;
			
			СтрокаТЧ.Сумма			= СтрокаТЗ.СуммаВзноса;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
			КонецЕсли;
			
			// Добавим строку для комментирования
			ДобавитьСтрокуДляКомментирования(СтрокаТЗ, 1);
			
		КонецЦикла;
	КонецЕсли;	
	
	// отражение исчисленных страховых взносов в текущем месяце
    //////////////////////////////////////////////////////////////////////////////////////////////////
	
    //////////////////////////////////////////////////////////////////////////////////////////////////
	// Списание РБП
	
	// подготовим данные по РБП
	// необходимо списать из РБП остатки взносов от 2010 года
	ДатаДействияПриказа186Н = ОтражениеЗарплатыВРеглУчетеДополнительный.ДатаДействияПриказа186Н();
	
	Запрос.УстановитьПараметр("ДатаДействияПриказа186Н",ДатаДействияПриказа186Н);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации < &ДатаДействияПриказа186Н
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	
	ТаблицаРБП =  Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРБП.Количество()>0 Тогда
		
		ВремТаблица = ТаблицаРБП.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБП.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБП.ВыгрузитьКолонку("Физлицо");

		СформироватьПроводкиСписанияРБПВзносам2010(ПромежуточнаяТаблица, ПараметрыПолученияСубконто, МассивПериодовРегистрации, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, МассивФизлиц);
		
	КонецЕсли;
	
	// подготовим данные по РБП
	// необходимо списать из РБП взносы того периода с 2011 года в котором мПорядокПризнанияРасходовПоОтпускам  =  Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска
	
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ДатаДействияПриказа186Н,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы до ПериоРегистрации
	ОчереднойПериод = ДобавитьМесяц(ДатаДействияПриказа186Н,1);
	Пока ОчереднойПериод < ПериодРегистрации Цикл
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ОчереднойПериод,"ДФ=гггг,М,д,Ч,м,с") + ")";
		ОчереднойПериод = ДобавитьМесяц(ОчереднойПериод,1);
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить(); 
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	МАКСИМУМ(УчетнаяПолитикаПоРБП.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТ_ПериодыРБП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_Периоды.Период >= УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыРБП.Период КАК Период
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаПоРБП
	|ИЗ
	|	ВТ_ПериодыРБП КАК ВТ_ПериодыРБП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_ПериодыРБП.ПериодРегистра = УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|			И (УчетнаяПолитикаПоРБП.РасходыПоОтпускам = ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска))
	|ГДЕ
	|	(НЕ УчетнаяПолитикаПоРБП.Период ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации В
	|			(ВЫБРАТЬ
	|				ВТ_УчетнаяПолитикаПоРБП.Период
	|			ИЗ
	|				ВТ_УчетнаяПолитикаПоРБП)
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	ТаблицаРБП =  Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРБП.Количество()>0 Тогда
		
		ВремТаблица = ТаблицаРБП.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБП.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБП.ВыгрузитьКолонку("Физлицо");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТ_Счета69
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетов69)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_11
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФСС_НС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФСС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРСтраховая,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_07
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРПоСуммарномуТарифу,
		|	0 КАК ПФРСПревышения,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_02
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРНакопительная,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФФОМС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_02
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТФОМС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_03
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТариф,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_04
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифШахтеры,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_05
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифВредныеУсловияТруда,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_06
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифТяжелыеУсловияТруда,
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
		|	ДвиженияВУчете.СубконтоДт2 КАК ФизЛицо
		|ИЗ
		|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ДвиженияВУчете
		|ГДЕ
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации В(&ПериодыРегистрации)
		|	И ДвиженияВУчете.СчетДт = &Счет97
		|	И ДвиженияВУчете.СчетКт В
		|			(ВЫБРАТЬ
		|				ВТ_Счета69.Счет
		|			ИЗ
		|				ВТ_Счета69)
		|	И ДвиженияВУчете.Ссылка.Организация = &парамОбособленноеПодразделение
		|	И ДвиженияВУчете.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации,
		|	ДвиженияВУчете.СубконтоДт2";
		
		Запрос.УстановитьПараметр("СписокСчетов69", ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
		Запрос.УстановитьПараметр("ПериодыРегистрации",	МассивПериодовРегистрации);
		Запрос.УстановитьПараметр("Счет69_01",			ПланыСчетов.Хозрасчетный.ФСС);
		Запрос.УстановитьПараметр("Счет69_02_07",		ПланыСчетов.Хозрасчетный.ПФР_ОПС); 
		Запрос.УстановитьПараметр("Счет69_02_01",		ПланыСчетов.Хозрасчетный.ПФР_страх);
		Запрос.УстановитьПараметр("Счет69_02_02",		ПланыСчетов.Хозрасчетный.ПФР_нак);   
		Запрос.УстановитьПараметр("Счет69_02_03",		ПланыСчетов.Хозрасчетный.ПФР_доп);
		Запрос.УстановитьПараметр("Счет69_02_04",		ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
		Запрос.УстановитьПараметр("Счет69_02_05",		ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
		Запрос.УстановитьПараметр("Счет69_02_06",		ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
		Запрос.УстановитьПараметр("Счет69_03_01",		ПланыСчетов.Хозрасчетный.ФФОМС);
		Запрос.УстановитьПараметр("Счет69_03_02",		ПланыСчетов.Хозрасчетный.ТФОМС);
		Запрос.УстановитьПараметр("Счет69_11",			ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		Запрос.УстановитьПараметр("Счет97",				ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);		
		
		РезультатЗапроса = Запрос.Выполнить();

		// получим таблицу с детализацией по периоду действия
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2014(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП, МассивФизлиц, Ложь);
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		ОтборПоФизлицу = Новый Структура("ПериодРегистрации,ФизЛицо");
		ОтборПоПериодуДействия = Новый Структура("ФизЛицо, ПериодРегистрации, ПериодДействия");
		ОтборПоПериодуДействия.ПериодДействия = ПериодРегистрации;

		ТаблицаКоэффициентовПоПериодуДействия = ТаблицаКоэффициентов.Скопировать();
		ТаблицаКоэффициентовПоПериодуДействия.Свернуть("ПериодРегистрации,ФизЛицо,ПериодДействия","БазаПФР,БазаФСС,БазаФОМС,БазаПФР_ЕНВД,БазаФСС_ЕНВД,БазаФОМС_ЕНВД,БазаДопТариф,БазаДопТарифШахтеры,БазаФСС_НС,БазаДопТарифПодземныеИВредныеРаботы,БазаДопТарифТяжелыеИПрочиеРаботы");
		ТаблицаКоэффициентовПоПериодуДействия.Сортировать("ПериодРегистрации,ФизЛицо,ПериодДействия");
		
		Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
		СчетН97 = ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			ОтборПоФизлицу.ПериодРегистрации	= Выборка.ПериодРегистрации;
			ОтборПоФизлицу.ФизЛицо				= Выборка.ФизЛицо;
			СтрокиПериодовДействия = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоФизлицу);
			
			ОтборПоПериодуДействия.ФизЛицо				= Выборка.ФизЛицо;
			ОтборПоПериодуДействия.ПериодРегистрации	= Выборка.ПериодРегистрации;
			СтрокиОтражения = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоПериодуДействия);
			Если СтрокиОтражения.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(ОтборПоПериодуДействия);
			ВсегоДоходовФСС				= 0;
			ВсегоДоходовФОМС			= 0;
			ВсегоДоходовПФР				= 0;
			ВсегоДоходовДопТариф		= 0;
			ВсегоДоходовДопТарифШахтеры = 0;
			ВсегоДоходовВредныеУсловияТруда = 0;
			ВсегоДоходовТяжелыеУсловияТруда = 0;
			ВсегоДоходовФСС_НС			= 0;
			ВсегоДоходовФССЕНВД			= 0;
			ВсегоДоходовФОМСЕНВД		= 0;
			ВсегоДоходовПФРЕНВД			= 0;
			
			КолвоЭлементовКоллекции = СтрокиПериодовДействия.Количество(); 
			Для ОбратныйИндекс = 1 По КолвоЭлементовКоллекции Цикл 
				ЭлементКоллекции = СтрокиПериодовДействия[КолвоЭлементовКоллекции - ОбратныйИндекс]; 
				Если ЭлементКоллекции.ПериодДействия <= ЭлементКоллекции.ПериодРегистрации Тогда 
					СтрокиПериодовДействия.Удалить(КолвоЭлементовКоллекции - ОбратныйИндекс);
				Иначе
					ВсегоДоходовФСС  = ВсегоДоходовФСС + ЭлементКоллекции.БазаФСС;
					ВсегоДоходовФОМС = ВсегоДоходовФОМС + ЭлементКоллекции.БазаФОМС;
					ВсегоДоходовПФР  = ВсегоДоходовПФР + ЭлементКоллекции.БазаПФР;
					ВсегоДоходовДопТариф = ВсегоДоходовДопТариф + ЭлементКоллекции.БазаДопТариф;
					ВсегоДоходовДопТарифШахтеры = ВсегоДоходовДопТарифШахтеры + ЭлементКоллекции.БазаДопТарифШахтеры;
					ВсегоДоходовВредныеУсловияТруда = ВсегоДоходовВредныеУсловияТруда + ЭлементКоллекции.БазаДопТарифПодземныеИВредныеРаботы;
					ВсегоДоходовТяжелыеУсловияТруда = ВсегоДоходовТяжелыеУсловияТруда + ЭлементКоллекции.БазаДопТарифТяжелыеИПрочиеРаботы;
					ВсегоДоходовФСС_НС   = ВсегоДоходовФСС_НС + ЭлементКоллекции.БазаФСС_НС;
					ВсегоДоходовФССЕНВД  = ВсегоДоходовФССЕНВД + ЭлементКоллекции.БазаФСС_ЕНВД;
					ВсегоДоходовФОМСЕНВД = ВсегоДоходовФОМСЕНВД + ЭлементКоллекции.БазаФОМС_ЕНВД;
					ВсегоДоходовПФРЕНВД  = ВсегоДоходовПФРЕНВД + ЭлементКоллекции.БазаПФР_ЕНВД;
				КонецЕсли;
			КонецЦикла;
			
			// выделяем долю текущего месяца (ранее это был период действия)
			Если СтрокиПериодовДействия.Количество() > 1 Тогда
				
				Если ВсегоДоходовДопТариф = 0 Тогда
					МесячнаяДоляДопТариф = Выборка.ДопТариф;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТариф * СтрокаПериода.БазаДопТариф / ВсегоДоходовДопТариф,2);
					КонецЦикла;
					МесячнаяДоляДопТариф = Выборка.ДопТариф - БылоОтраженоРанее
				Иначе
					МесячнаяДоляДопТариф = Окр(Выборка.ДопТариф * СтрокиОтражения[0].БазаДопТариф / ВсегоДоходовДопТариф,2);
				КонецЕсли;
				
				Если ВсегоДоходовДопТарифШахтеры = 0 Тогда
					МесячнаяДоляДопТарифШахтеры = Выборка.ДопТарифШахтеры;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифШахтеры * СтрокаПериода.БазаДопТарифШахтеры / ВсегоДоходовДопТарифШахтеры,2);
					КонецЦикла;
					МесячнаяДоляДопТарифШахтеры = Выборка.ДопТарифШахтеры - БылоОтраженоРанее
				Иначе
					МесячнаяДоляДопТарифШахтеры = Окр(Выборка.ДопТарифШахтеры * СтрокиОтражения[0].БазаДопТарифШахтеры / ВсегоДоходовДопТарифШахтеры,2);
				КонецЕсли;
				
				Если ВсегоДоходовВредныеУсловияТруда = 0 Тогда
					МесячнаяДоляВредныеУсловияТруда = Выборка.ДопТарифВредныеУсловияТруда;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифВредныеУсловияТруда * СтрокаПериода.БазаДопТарифПодземныеИВредныеРаботы / ВсегоДоходовВредныеУсловияТруда,2);
					КонецЦикла;
					МесячнаяДоляВредныеУсловияТруда = Выборка.ДопТарифВредныеУсловияТруда - БылоОтраженоРанее
				Иначе
					МесячнаяДоляВредныеУсловияТруда = Окр(Выборка.ДопТарифВредныеУсловияТруда * СтрокиОтражения[0].БазаДопТарифПодземныеИВредныеРаботы / ВсегоДоходовВредныеУсловияТруда,2);
				КонецЕсли;
				
				Если ВсегоДоходовТяжелыеУсловияТруда = 0 Тогда
					МесячнаяДоляТяжелыеУсловияТруда = Выборка.ДопТарифТяжелыеУсловияТруда;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифТяжелыеУсловияТруда * СтрокаПериода.БазаДопТарифТяжелыеИПрочиеРаботы / ВсегоДоходовТяжелыеУсловияТруда,2);
					КонецЦикла;
					МесячнаяДоляТяжелыеУсловияТруда = Выборка.ДопТарифТяжелыеУсловияТруда - БылоОтраженоРанее
				Иначе
					МесячнаяДоляТяжелыеУсловияТруда = Окр(Выборка.ДопТарифТяжелыеУсловияТруда * СтрокиОтражения[0].БазаДопТарифТяжелыеИПрочиеРаботы / ВсегоДоходовТяжелыеУсловияТруда,2);
				КонецЕсли;
				
				Если ВсегоДоходовФСС_НС = 0 Тогда
					МесячнаяДоляФСС_НС = Выборка.ФСС_НС;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС_НС * СтрокаПериода.БазаФСС_НС / ВсегоДоходовФСС_НС,2);
					КонецЦикла;
					МесячнаяДоляФСС_НС = Выборка.ФСС_НС - БылоОтраженоРанее
				Иначе
					МесячнаяДоляФСС_НС = Окр(Выборка.ФСС_НС * СтрокиОтражения[0].БазаФСС_НС / ВсегоДоходовФСС_НС,2);
				КонецЕсли;				
				
				Если ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД = 0 Тогда
					МесячнаяДоляПФРПоСуммарномуТарифу = Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = -Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРСПревышения = Выборка.ПФРСПревышения;
					МесячнаяДоляПФРСПревышенияЕНВД = -Выборка.ПФРСПревышения;
					МесячнаяДоляПФРСтраховая = Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная;
					МесячнаяДоляПФРСтраховаяЕНВД = -Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительнаяЕНВД = -Выборка.ПФРНакопительная;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанееПФРСтраховая = 0;
					БылоОтраженоРанееПФРПоСуммарномуТарифу = 0;
					БылоОтраженоРанееПФРСПревышения = 0;
					БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД = 0;
					БылоОтраженоРанееПФРСПревышенияЕНВД = 0;
					БылоОтраженоРанееПФРНакопительная = 0;
					БылоОтраженоРанееПФРСтраховаяЕНВД = 0;
					БылоОтраженоРанееПФРНакопительнаяЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанееПФРПоСуммарномуТарифу = БылоОтраженоРанееПФРПоСуммарномуТарифу + Окр(Выборка.ПФРПоСуммарномуТарифу * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД = БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД + Окр(Выборка.ПФРПоСуммарномуТарифу * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСПревышения = БылоОтраженоРанееПФРСПревышения + Окр(Выборка.ПФРСПревышения * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСПревышенияЕНВД = БылоОтраженоРанееПФРСПревышенияЕНВД + Окр(Выборка.ПФРСПревышения * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСтраховая = БылоОтраженоРанееПФРСтраховая + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРНакопительная = БылоОтраженоРанееПФРНакопительная + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСтраховаяЕНВД = БылоОтраженоРанееПФРСтраховаяЕНВД + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРНакопительнаяЕНВД = БылоОтраженоРанееПФРНакопительнаяЕНВД + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР_ЕНВД = 0 Тогда
						МесячнаяДоляПФРПоСуммарномуТарифу = Выборка.ПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД;
						МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = 0;
						МесячнаяДоляПФРСПревышения = Выборка.ПФРСПревышения - БылоОтраженоРанееПФРСПревышения - БылоОтраженоРанееПФРСПревышенияЕНВД;
						МесячнаяДоляПФРСПревышенияЕНВД = 0;
						МесячнаяДоляПФРСтраховая = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховаяЕНВД = 0;
						МесячнаяДоляПФРНакопительнаяЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР = 0 Тогда
						МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = Выборка.ПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД;
						МесячнаяДоляПФРПоСуммарномуТарифу = 0;
						МесячнаяДоляПФРСПревышенияЕНВД = Выборка.ПФРСПревышения - БылоОтраженоРанееПФРСПревышения - БылоОтраженоРанееПФРСПревышенияЕНВД;
						МесячнаяДоляПФРСПревышения = 0;
						МесячнаяДоляПФРСтраховаяЕНВД = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительнаяЕНВД = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховая = 0;
						МесячнаяДоляПФРНакопительная = 0;
					Иначе
						МесячнаяДоляПФРПоСуммарномуТарифуЕНВД     = Окр(Выборка.ПФРПоСуммарномуТарифу * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД;
						МесячнаяДоляПФРПоСуммарномуТарифу     = Выборка.ПФРПоСуммарномуТарифу - МесячнаяДоляПФРПоСуммарномуТарифуЕНВД - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД - БылоОтраженоРанееПФРПоСуммарномуТарифу;
						МесячнаяДоляПФРСПревышенияЕНВД     = Окр(Выборка.ПФРСПревышения * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРСПревышенияЕНВД;
						МесячнаяДоляПФРСПревышения     = Выборка.ПФРСПревышения - МесячнаяДоляПФРСПревышенияЕНВД - БылоОтраженоРанееПФРСПревышенияЕНВД - БылоОтраженоРанееПФРСПревышения;
						МесячнаяДоляПФРСтраховаяЕНВД     = Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительнаяЕНВД = Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховая     = Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховаяЕНВД - БылоОтраженоРанееПФРСтраховаяЕНВД - БылоОтраженоРанееПФРСтраховая;
						МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительнаяЕНВД - БылоОтраженоРанееПФРНакопительнаяЕНВД - БылоОтраженоРанееПФРНакопительная;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД);
					МесячнаяДоляПФРПоСуммарномуТарифу = Окр(Выборка.ПФРПоСуммарномуТарифу * ТекущийКоэффициент,2);
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = Окр(Выборка.ПФРПоСуммарномуТарифу * ТекущийКоэффициент,2);
					МесячнаяДоляПФРСПревышения = Окр(Выборка.ПФРСПревышения * ТекущийКоэффициент,2);
					МесячнаяДоляПФРСПревышенияЕНВД = Окр(Выборка.ПФРСПревышения * ТекущийКоэффициент,2);
					МесячнаяДоляПФРСтраховая = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
					МесячнаяДоляПФРНакопительная = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД);
					МесячнаяДоляПФРСтраховаяЕНВД = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
					МесячнаяДоляПФРНакопительнаяЕНВД = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
				КонецЕсли;
				
				Если ВсегоДоходовФСС + ВсегоДоходовФССЕНВД = 0 Тогда
					МесячнаяДоляФСС     = Выборка.ФСС;
					МесячнаяДоляФССЕНВД = -Выборка.ФСС;

				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					БылоОтраженоРанееЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
						БылоОтраженоРанееЕНВД = БылоОтраженоРанееЕНВД + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС_ЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФСС_ЕНВД = 0 Тогда
						МесячнаяДоляФСС = Выборка.ФСС - БылоОтраженоРанее - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФССЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФСС = 0 Тогда
						МесячнаяДоляФССЕНВД = Выборка.ФСС - БылоОтраженоРанее - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФСС = 0;
					Иначе
						МесячнаяДоляФССЕНВД = Окр(Выборка.ФСС * ВсегоДоходовФССЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2) - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФСС     = Выборка.ФСС - МесячнаяДоляФССЕНВД - БылоОтраженоРанееЕНВД - БылоОтраженоРанее;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаФСС / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД);
					МесячнаяДоляФСС = Окр(Выборка.ФСС * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаФСС_ЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД);
					МесячнаяДоляФССЕНВД = Окр(Выборка.ФСС * ТекущийКоэффициент,2);
				КонецЕсли;
				
				Если ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД = 0 Тогда
					МесячнаяДоляФФОМС = Выборка.ФФОМС;
					МесячнаяДоляТФОМС = Выборка.ТФОМС;
					МесячнаяДоляФФОМСЕНВД = -Выборка.ФФОМС;
					МесячнаяДоляТФОМСЕНВД = -Выборка.ТФОМС;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанееФФОМС = 0;
					БылоОтраженоРанееТФОМС = 0;
					БылоОтраженоРанееФФОМСЕНВД = 0;
					БылоОтраженоРанееТФОМСЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанееФФОМС = БылоОтраженоРанееФФОМС + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееТФОМС = БылоОтраженоРанееТФОМС + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееФФОМСЕНВД = БылоОтраженоРанееФФОМСЕНВД + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееТФОМСЕНВД = БылоОтраженоРанееТФОМСЕНВД + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФОМС_ЕНВД = 0 Тогда
						МесячнаяДоляФФОМС = Выборка.ФФОМС - БылоОтраженоРанееФФОМС - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМС = Выборка.ТФОМС - БылоОтраженоРанееТФОМС - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМСЕНВД = 0;
						МесячнаяДоляТФОМСЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФОМС = 0 Тогда
						МесячнаяДоляФФОМСЕНВД = Выборка.ФФОМС - БылоОтраженоРанееФФОМС - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМСЕНВД = Выборка.ТФОМС - БылоОтраженоРанееТФОМС - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМС = 0;
						МесячнаяДоляТФОМС = 0;
					Иначе
						МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2) - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2) - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМС     = Выборка.ФФОМС - МесячнаяДоляФФОМСЕНВД - БылоОтраженоРанееФФОМСЕНВД - БылоОтраженоРанееФФОМС;
						МесячнаяДоляТФОМС     = Выборка.ТФОМС - МесячнаяДоляТФОМСЕНВД - БылоОтраженоРанееТФОМСЕНВД - БылоОтраженоРанееТФОМС;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД);
					МесячнаяДоляФФОМС = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
					МесячнаяДоляТФОМС = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД);
					МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
					МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
				КонецЕсли;
				
			Иначе
				// за другие месяцы ничего в РБП не относили
				МесячнаяДоляДопТариф			= Выборка.ДопТариф;
				МесячнаяДоляДопТарифШахтеры		= Выборка.ДопТарифШахтеры;
				МесячнаяДоляВредныеУсловияТруда			= Выборка.ДопТарифВредныеУсловияТруда;
				МесячнаяДоляТяжелыеУсловияТруда			= Выборка.ДопТарифТяжелыеУсловияТруда;
				МесячнаяДоляФСС_НС				= Выборка.ФСС_НС;
				
				Если ВсегоДоходовПФРЕНВД = 0 Тогда
					МесячнаяДоляПФРПоСуммарномуТарифу		= Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД		= 0;
					МесячнаяДоляПФРСПревышения		= Выборка.ПФРСПревышения;
					МесячнаяДоляПФРСПревышенияЕНВД		= 0;
					МесячнаяДоляПФРСтраховая		= Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительная	= Выборка.ПФРНакопительная;
					МесячнаяДоляПФРСтраховаяЕНВД		= 0;
					МесячнаяДоляПФРНакопительнаяЕНВД	= 0;
				ИначеЕсли ВсегоДоходовПФР = 0 Тогда
					МесячнаяДоляПФРПоСуммарномуТарифу		= 0;
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД		= Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРСПревышения		= 0;
					МесячнаяДоляПФРСПревышенияЕНВД		= Выборка.ПФРСПревышения;
					МесячнаяДоляПФРСтраховая		= 0;
					МесячнаяДоляПФРНакопительная    = 0;
					МесячнаяДоляПФРСтраховаяЕНВД		= Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительнаяЕНВД	= Выборка.ПФРНакопительная;
				Иначе
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД		= Окр(Выборка.ПФРПоСуммарномуТарифу * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРПоСуммарномуТарифу		= Выборка.ПФРПоСуммарномуТарифу - МесячнаяДоляПФРПоСуммарномуТарифуЕНВД;
					МесячнаяДоляПФРСПревышенияЕНВД		= Окр(Выборка.ПФРСПревышения * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРСПревышения		= Выборка.ПФРСПревышения - МесячнаяДоляПФРСПревышенияЕНВД;
					МесячнаяДоляПФРСтраховаяЕНВД		= Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРНакопительнаяЕНВД	= Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРСтраховая		= Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховаяЕНВД;
					МесячнаяДоляПФРНакопительная	= Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительнаяЕНВД;
				КонецЕсли;
				
				Если ВсегоДоходовФССЕНВД = 0 Тогда
					МесячнаяДоляФСС		= Выборка.ФСС;
					МесячнаяДоляФССЕНВД	= 0;
				ИначеЕсли ВсегоДоходовФСС = 0 Тогда
					МесячнаяДоляФСС		= 0;
					МесячнаяДоляФССЕНВД	= Выборка.ФСС;
				Иначе
					МесячнаяДоляФССЕНВД	= Окр(Выборка.ФСС * ВсегоДоходовФССЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
					МесячнаяДоляФСС		= Выборка.ФСС - МесячнаяДоляФССЕНВД;
				КонецЕсли;
				
				Если ВсегоДоходовФОМСЕНВД = 0 Тогда
					МесячнаяДоляФФОМС = Выборка.ФФОМС;
					МесячнаяДоляТФОМС = Выборка.ТФОМС;
					МесячнаяДоляФФОМСЕНВД = 0;
					МесячнаяДоляТФОМСЕНВД = 0;
				ИначеЕсли ВсегоДоходовФОМС = 0 Тогда
					МесячнаяДоляФФОМСЕНВД = Выборка.ФФОМС;
					МесячнаяДоляТФОМСЕНВД = Выборка.ТФОМС;
					МесячнаяДоляФФОМС = 0;
					МесячнаяДоляТФОМС = 0;
				Иначе
					МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					МесячнаяДоляФФОМС     = Выборка.ФФОМС - МесячнаяДоляФФОМСЕНВД;
					МесячнаяДоляТФОМС     = Выборка.ТФОМС - МесячнаяДоляТФОМСЕНВД;
				КонецЕсли;
					
			КонецЕсли;
			
			// ФСС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
			РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_ЕНВД");
			РезультатыФССЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФССЕНВД, Коэффициенты);
			
			// ФОМС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
			РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМС, Коэффициенты);
			РезультатыТФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМС, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
			РезультатыФФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМСЕНВД, Коэффициенты);
			РезультатыТФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМСЕНВД, Коэффициенты);
			
			// ПФР
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР");
			РезультатыПФРНакопительная = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительная, Коэффициенты);
			РезультатыПФРСтраховая = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховая, Коэффициенты);
			РезультатыПФРПоСуммарномуТарифу = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРПоСуммарномуТарифу, Коэффициенты);
			РезультатыПФРСПревышения = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСПревышения, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
			РезультатыПФРНакопительнаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительнаяЕНВД, Коэффициенты);
			РезультатыПФРСтраховаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховаяЕНВД, Коэффициенты);
			РезультатыПФРПоСуммарномуТарифуЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРПоСуммарномуТарифуЕНВД, Коэффициенты);
			РезультатыПФРСПревышенияЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСПревышенияЕНВД, Коэффициенты);
			
			// ДопТариф летчики
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
			РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляДопТариф, Коэффициенты);
			
			// ДопТариф шахтеры
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифШахтеры");
			РезультатыДопТарифШахтеры = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляДопТарифШахтеры, Коэффициенты);
			
			// доп тариф Работы с вредными условиями 
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифПодземныеИВредныеРаботы");
			РезультатыДопТарифПодземныеИВредныеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляВредныеУсловияТруда, Коэффициенты);
		
			// доп тариф Работы с тяжелыми условиями 
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифТяжелыеИПрочиеРаботы");
			РезультатыДопТарифТяжелыеИПрочиеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТяжелыеУсловияТруда, Коэффициенты);
			
			// ФСС_НС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
			РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС_НС, Коэффициенты);			
			
			Индекс = 0;
			Для каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
				
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				
				Если РезультатыФСС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФСС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыТФОМС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыТФОМС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФФОМС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФФОМС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРНакопительная <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРНакопительная[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСтраховая <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСтраховая[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРПоСуммарномуТарифу <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРПоСуммарномуТарифу[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСПревышения <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСПревышения[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРНакопительнаяЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРНакопительнаяЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСтраховаяЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСтраховаяЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРПоСуммарномуТарифуЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРПоСуммарномуТарифуЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСПревышенияЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСПревышенияЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФССЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФССЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыТФОМСЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыТФОМСЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФФОМСЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФФОМСЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТариф <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТариф[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТарифШахтеры <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифШахтеры[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТарифПодземныеИВредныеРаботы <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифПодземныеИВредныеРаботы[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				
				Если РезультатыДопТарифТяжелыеИПрочиеРаботы <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				//////////////////////////////////////////////////////////
				// ФСС_НС
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				
				Если РезультатыФСС_НС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_ФСС_НС;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФСС_НС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Индекс = Индекс + 1;
			
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// конец списания РБП
	// со счета учета расходов будущих периодов в затраты
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// вычеркнем обнулившиеся суммы
	СвернутьТаблицуПроводок(ПромежуточнаяТаблица,",РБПСчетДтБУ");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// замена счетов НУ по регистру соответствий
	//
	
	Если мЗаполнятьДанныеНУ И мЗаполнятьСчетаНУ И мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете = Перечисления.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.НаСчетахЗатратСоответствующихСчетамБухУчета Тогда
		
		СчетаНУ = Новый Массив;
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств);
        Запрос.УстановитьПараметр("СчетаНУ",СчетаНУ);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Налоговый.Ссылка
		|ИЗ
		|	ПланСчетов.Налоговый КАК Налоговый
		|ГДЕ
		|	Налоговый.Ссылка В ИЕРАРХИИ(&СчетаНУ)";
		МассивСчетаНУ = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				
		СчетаНалоговСФОТ = Новый Массив;
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		
		Запрос.УстановитьПараметр("СчетаНалоговСФОТ", СчетаНалоговСФОТ);
		Запрос.УстановитьПараметр("СчетаНУ", МассивСчетаНУ);
		Запрос.УстановитьПараметр("ТаблицаПроводок", ПромежуточнаяТаблица);  
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_Проводки
		|ИЗ
		|	&ТаблицаПроводок КАК ТаблицаПроводок";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт2.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт2,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт3.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт3
		|ПОМЕСТИТЬ ВТ_ТаблицаПроводок
		|ИЗ
		|	ВТ_Проводки КАК ТаблицаПроводок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РБПСчетДтБУ,
		|	СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий1
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий2
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий3
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий4
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1 КАК СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2 КАК СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3 КАК СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1 КАК СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2 КАК СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3 КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СчетКт В (&СчетаНалоговСФОТ)
		|				И ТаблицаПроводок.СчетДтНУ В (&СчетаНУ)
		|			ТОГДА ЕСТЬNULL(Налоговый.Ссылка, ТаблицаПроводок.СчетДтНУ)
		|		ИНАЧЕ ТаблицаПроводок.СчетДтНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ТаблицаПроводок.СчетДтНУ КАК СтарыйСчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ КАК СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3 КАК СубконтоКтНУ3,
		|	ТаблицаПроводок.Сумма КАК Сумма,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН КАК ОтражениеВУСН,
		|	ТаблицаПроводок.ВидНачисленияУдержания КАК ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчете
		|ИЗ
		|	ВТ_ТаблицаПроводок КАК ТаблицаПроводок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий1 КАК ТаблицаСоответствий1
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий1.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий1.СчетКоррБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий2 КАК ТаблицаСоответствий2
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий2.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий2.СчетКоррБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий3 КАК ТаблицаСоответствий3
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий3.СчетБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий4 КАК ТаблицаСоответствий4
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий4.СчетБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый КАК Налоговый
		|		ПО (ВЫБОР
		|				КОГДА ТаблицаСоответствий1.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий1.СчетНУ
		|				КОГДА ТаблицаСоответствий2.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий2.СчетНУ
		|				КОГДА ТаблицаСоответствий3.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий3.СчетНУ
		|				КОГДА ТаблицаСоответствий4.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий4.СчетНУ
		|				ИНАЧЕ """"
		|			КОНЕЦ = Налоговый.Код)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетДтНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтражениеВУчете.СчетДт КАК СчетДт,
		|	ОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
		|	ОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
		|	ОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
		|	ОтражениеВУчете.СчетКт,
		|	ОтражениеВУчете.СубконтоКт1,
		|	ОтражениеВУчете.СубконтоКт2,
		|	ОтражениеВУчете.СубконтоКт3,
		|	ОтражениеВУчете.СчетДтНУ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ЛОЖЬ
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОбрабатыватьСубконтоНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто1.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто1,
		|	НалоговыйСталиВидыСубконто1.ВидСубконто.ТипЗначения КАК ТипЗначения1,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто2.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто2,
		|	НалоговыйСталиВидыСубконто2.ВидСубконто.ТипЗначения КАК ТипЗначения2,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто3.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто3,
		|	НалоговыйСталиВидыСубконто3.ВидСубконто.ТипЗначения КАК ТипЗначения3,
		|	ОтражениеВУчете.СчетКтНУ,
		|	ОтражениеВУчете.СубконтоКтНУ1,
		|	ОтражениеВУчете.СубконтоКтНУ2,
		|	ОтражениеВУчете.СубконтоКтНУ3,
		|	ОтражениеВУчете.СпособРаспределенияЗатрат,
		|	ОтражениеВУчете.ОтражениеВУСН,
		|	ОтражениеВУчете.Сумма,
		|	ОтражениеВУчете.ВидНачисленияУдержания
		|ИЗ
		|	ВТ_ОтражениеВУчете КАК ОтражениеВУчете
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто1
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйСталиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто2
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйСталиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто3
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйСталиВидыСубконто3.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто1
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйБылиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто2
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйБылиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто3
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйБылиВидыСубконто3.НомерСтроки)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетДт,
		|	СубконтоДт1,
		|	СубконтоДт2,
		|	СубконтоДт3,
		|	СчетДтНУ,
		|	СубконтоДтНУ1,
		|	СубконтоДтНУ2,
		|	СубконтоДтНУ3
		|АВТОУПОРЯДОЧИВАНИЕ";
				
		ТаблицаПослеПодмен = Запрос.Выполнить().Выгрузить();
		Для каждого СтрокаРезультата Из ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("ОбрабатыватьСубконтоНУ",Истина)) Цикл
		    Если СтрокаРезультата.ЕстьСубконто1 И СтрокаРезультата.СубконтоДтНУ1 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ1 = СтрокаРезультата.ТипЗначения1.ПривестиЗначение()
			КонецЕсли;
		    Если СтрокаРезультата.ЕстьСубконто2 И СтрокаРезультата.СубконтоДтНУ2 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ2 = СтрокаРезультата.ТипЗначения2.ПривестиЗначение()
			КонецЕсли;
		    Если СтрокаРезультата.ЕстьСубконто3 И СтрокаРезультата.СубконтоДтНУ3 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ3 = СтрокаРезультата.ТипЗначения3.ПривестиЗначение()
			КонецЕсли;
		КонецЦикла; 
		
		ТаблицаПослеПодмен.Свернуть("СчетДт,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,
		|СчетДтНУ,СчетКтНУ,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3,
		|СпособРаспределенияЗатрат,ОтражениеВУСН,ВидНачисленияУдержания", "Сумма");
		
		НулевыеСтроки = ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("Сумма",0));
		Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
			ТаблицаПослеПодмен.Удалить(СтрокаТаблицы)
		КонецЦикла;
		
		ПромежуточнаяТаблица = ТаблицаПослеПодмен.Скопировать();
		
	КонецЕсли;
	
    //
	// замена счетов НУ по регистру соответствий
    //////////////////////////////////////////////////////////////////////////////////////////////////
	
	// заменим счет Дт 69 на счет 91
	ПроверитьИСкорректироватьПроводкиПоВзносам(ПромежуточнаяТаблица);
	
	// Если есть что прокомментировать - сделаем это
	Если мТаблицаКомментированияСтраховыеВзносы.Количество() > 0 Тогда
		
		//Режим 0 - взносы распределены по базе с начала года
		//		1 - нет базы по взносам, все отправили на счет 91
		//		2 - взносы в Дт 91, исчисленные с начислений отнесенных в дт 69 счета
		
		ПараметрыОтбора = Новый Структура;
		
		// Соберем строки относящиеся к распределнию по базе с начала года
		ПараметрыОтбора.Вставить("Режим", 0);
		МассивСтрокСНачалаГода = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу распределенных по базе с начала года
		ТаблицаКомментированияСНачалаГода = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокСНачалаГода);
		ТаблицаКомментированияСНачалаГода.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыПФРПоСуммарномуТарифу, ВзносыПФРСПревышения,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");
		
		// Получим таблицу распределенных по базе с начала года (в части ЕНВД)
		ТаблицаКомментированияСНачалаГодаЕНВД = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокСНачалаГода);
		ТаблицаКомментированияСНачалаГодаЕНВД.Свернуть("Физлицо", "ВзносыПФРПоСуммарномуТарифу_ЕНВД, ВзносыПФРСПревышения_ЕНВД, ВзносыФСС_ЕНВД,"
			+ "ВзносыФФОМС_ЕНВД");
			
		// Соберем строки относящиеся к отсутствию базы
		ПараметрыОтбора.Вставить("Режим", 1);
		МассивСтрокНетБазы = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу для которых не нашлось базы
		ТаблицаКомментированияНетБазы = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНетБазы.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыПФРПоСуммарномуТарифу, ВзносыПФРСПревышения,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");
		
		// Получим таблицу для которых не нашлось базы (в части ЕНВД)
		ТаблицаКомментированияНетБазыЕНВД = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНетБазыЕНВД.Свернуть("Физлицо", "ВзносыПФРПоСуммарномуТарифу_ЕНВД, ВзносыПФРСПревышения_ЕНВД, ВзносыФСС_ЕНВД,"
			+ "ВзносыФФОМС_ЕНВД");
			
		// Соберем строки относящиеся к начислениям в Дт 69 счета
		ПараметрыОтбора.Вставить("Режим", 2);
		МассивСтрокНетБазы = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу для которых не нашлось базы
		ТаблицаКомментированияНачисления69 = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНачисления69.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыПФРПоСуммарномуТарифу, ВзносыПФРСПревышения,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");	
			
			
		// Удалим колонки по шахтерам
		Если НЕ Константы.ИспользуетсяТрудШахтеров.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифШахтеры"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифШахтеры"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифШахтеры"));
		
		КонецЕсли; 
		
		// Удалим колонки по летчикам
		Если НЕ Константы.ИспользуетсяТрудЧленовЛетныхЭкипажей.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТариф"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТариф"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТариф"));
		
		КонецЕсли; 
		
		// Удалим колонки по работам с досрочной пенсией
		Если НЕ Константы.ИспользуютсяРаботыСДосрочнойПенсией.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
		
		КонецЕсли;
		
		// Удалим пустые строки, если таковые образовались полсе разбиени таблицы комментрования
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияСНачалаГода);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияСНачалаГодаЕНВД);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНетБазы);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНетБазыЕНВД);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНачисления69);
		
		// Подключаем обработку комментирования
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		
		РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Внимание! При формировании проводок обнаружены сотрудники, по которым нет данных для формирования проводок по страховым взносам.", Перечисления.ВидыСообщений.Информация);
		
		Если ТаблицаКомментированияСНачалаГода.Количество() > 0 Тогда
		
			РазделДокументаСНачалаГода = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники по которым сформированы проводки по страховым взносам по начислениям нарастающим итогом с начала года.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияСНачалаГода, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаСНачалаГода, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНетБазы.Количество() > 0 Тогда
		
			РазделДокументаНетБазы = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНетБазы, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНетБазы, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияСНачалаГодаЕНВД.Количество() > 0 Тогда
		
			РазделДокументаСНачалаГодаЕНВД = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники по которым сформированы проводки по страховым взносам в части ЕНВД по начислениям нарастающим итогом с начала года.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияСНачалаГодаЕНВД, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаСНачалаГодаЕНВД, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНетБазыЕНВД.Количество() > 0 Тогда
		
			РазделДокументаНетБазыЕНВД = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91 (в части ЕНВД).", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНетБазыЕНВД, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНетБазыЕНВД, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНачисления69.Количество() > 0 Тогда
			
			РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Внимание! При формировании проводок часть страховых взносов отражена в дебет счета 91. Есть начисления, отражаемые на счетах расчетов по социальному страхованию и обеспечению, с которых исчислены страховые взносы.", Перечисления.ВидыСообщений.Информация);
			
			РазделДокументаНачисления69 = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНачисления69, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНачисления69, Ложь);
		
		КонецЕсли;
		
		ОбработкаКомментариев.ПоказатьСообщения();
	
	КонецЕсли; 
	
КонецПроцедуры

// алгоритмы с 2016 года
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
// алгоритмы с 2017 года

// Процедура заполняет таблицу ПромежуточнаяТаблица проводками
// по страховым взносам
// используется с 2010 год
Процедура ПолучитьПроводкиПоСтраховымВзносам2017(ПромежуточнаяТаблица, ГоловнаяОрганизация, МассивСчетаИсключенияРБП)

	// добавим колонку СчДтБУ, в которой будет счет Дт БУ после подмены его на 97 счет
	// по этому значению будем производить замену счета НУ из соответсвия. Действует с 2010 года
	ПромежуточнаяТаблица.Колонки.Добавить("РБПСчетДтБУ", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	мТаблицаКомментированияСтраховыеВзносы = СоздатьТаблицуКомментированияСтраховыхВзносов();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("СчетаИсключенияРБП", МассивСчетаИсключенияРБП);

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение исчисленных страховых взносов в текущем месяце
	
	// Получение коэффициентов отражения страховых взносов  
	МассивПериодовРегистрации = Новый Массив;
	МассивПериодовРегистрации.Добавить(ПериодРегистрации);
	ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2014(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
	
	// запрос по соответствиям статей затрат начислений 
	// для подстановки статей затрат при формировании проводок страховым взносам
    // (перечисление ВидыДополнительныхСтатейЗатрат)
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
    |ИЗ
    |   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
    |ГДЕ
    |   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат";
    
    ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
    ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	ТипСтатьиЗатрат = Тип("СправочникСсылка.ПрочиеДоходыИРасходы");
    ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
    // Исчисленные страховые взносы в текущем месяце
	//
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизЛицо,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличины + СтраховыеВзносыИсчисленные.ПФРСПревышения) КАК ПФРПоСуммарномуТарифу,
	|	0 КАК ПФРСПревышения,
	|	СУММА(СтраховыеВзносыИсчисленные.ФСС) КАК ФСС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМС) КАК ФФОМС,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу) КАК ПФРПоДополнительномуТарифу,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРНаДоплатуКПенсииШахтерам) КАК ПФРНаДоплатуКПенсииШахтерам,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3 + СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецоценки,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецоценки,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличиныЕНВД) КАК ПФРПоСуммарномуТарифуЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ПФРСПревышенияЕНВД) КАК ПФРСПревышенияЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФССЕНВД) КАК ФССЕНВД,
	|	СУММА(СтраховыеВзносыИсчисленные.ФФОМСЕНВД) КАК ФФОМСЕНВД
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Период = &парамПериодРегистрации
	|	И СтраховыеВзносыИсчисленные.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыИсчисленные.ФизЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();

	РБП_Взносы = Справочники.РасходыБудущихПериодов.РБПНаСтраховыеВзносы;
	РБП_ФСС_НС = Справочники.РасходыБудущихПериодов.РБПНаФСС;
	РБП_ОплатаТруда = Справочники.РасходыБудущихПериодов.РБПНаОплатуТруда;
	Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
	
    СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	Отбор = Новый Структура("ФизЛицо");
	
	// в этой таблице соберем физлиц и суммы взносов, для которых нет базы в текущем месяце
	ТаблицаНетБазы = Новый ТаблицаЗначений;
	ТаблицаНетБазы.Колонки.Добавить("Физлицо");
	ТаблицаНетБазы.Колонки.Добавить("ВидБазы");
	ТаблицаНетБазы.Колонки.Добавить("СуммаВзноса");
	ТаблицаНетБазы.Колонки.Добавить("СчетКт");
	ТаблицаНетБазы.Колонки.Добавить("СчетКтНУ");
	ТаблицаНетБазы.Колонки.Добавить("СтатьяРБП");
	
	Пока Выборка.Следующий() Цикл

		Отбор.ФизЛицо = Выборка.ФизЛицо;
		СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		
		Если СтрокиОтраженияПоФизЛицу.Количество() = 0 Тогда
			
			Если Выборка.ФСС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС";
				НоваяСтрока.СуммаВзноса = Выборка.ФСС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФФОМС <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРПоСуммарномуТарифу + Выборка.ПФРСПревышения <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифу + Выборка.ПФРСПревышения;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_ОПС;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТариф";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_шахтеры;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах + Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецоценки <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифПодземныеИВредныеРаботы";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах + Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецоценки;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах + Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецоценки <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаДопТарифТяжелыеИПрочиеРаботы";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах + Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецоценки;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФССНесчастныеСлучаи <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_НС";
				НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
				НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
				НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
			КонецЕсли;	
			
			Если Выборка.ПФРПоСуммарномуТарифуЕНВД + Выборка.ПФРСПревышенияЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифуЕНВД + Выборка.ПФРСПревышенияЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФССЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФССЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			Если Выборка.ФФОМСЕНВД <> 0 Тогда
				НоваяСтрока = ТаблицаНетБазы.Добавить();
				НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
				НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
				НоваяСтрока.СуммаВзноса = Выборка.ФФОМСЕНВД;
				НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
				НоваяСтрока.СчетКтНУ    = Неопределено;
				НоваяСтрока.СтатьяРБП   = РБП_Взносы;
			КонецЕсли;
			
			Продолжить;
			
		КонецЕсли;		
		
		// ФСС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
		РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФСС, Коэффициенты);

		// ФОМС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
		РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМС, Коэффициенты);

		// ПФР 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР");
		РезультатыПФРПоСуммарномуТарифу = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоСуммарномуТарифу, Коэффициенты);
		РезультатыПФРСПревышения = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСПревышения, Коэффициенты);
		
		// доп тариф летчики
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
		РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоДополнительномуТарифу, Коэффициенты);
		
		// доп тариф шахтеры
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифШахтеры");
		РезультатыДопТарифШахтеры = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРНаДоплатуКПенсииШахтерам, Коэффициенты);
		
		// доп тариф Работы с вредными условиями 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифПодземныеИВредныеРаботы");
		РезультатыДопТарифПодземныеИВредныеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах, Коэффициенты);
		РезультатыДопТарифПодземныеИВредныеРаботыБезСпецоценки = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецоценки, Коэффициенты);
		
		// доп тариф Работы с тяжелыми условиями 
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифТяжелыеИПрочиеРаботы");
		РезультатыДопТарифТяжелыеИПрочиеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах, Коэффициенты);
		РезультатыДопТарифТяжелыеИПрочиеРаботыБезСпецоценки = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецоценки, Коэффициенты);
		
		// ФСС_НС
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
		РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФССНесчастныеСлучаи, Коэффициенты);
		
		
		// по видам деятельности, облагаемым ЕНВД
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
		РезультатыПФРПоСуммарномуТарифуЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРПоСуммарномуТарифуЕНВД, Коэффициенты);
		РезультатыПФРСПревышенияЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ПФРСПревышенияЕНВД, Коэффициенты);
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_ЕНВД");
		РезультатыФССЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФССЕНВД, Коэффициенты);
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
		РезультатыФФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.ФФОМСЕНВД, Коэффициенты);
		
		Если РезультатыФСС = Неопределено и Выборка.ФСС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС";
			НоваяСтрока.СуммаВзноса = Выборка.ФСС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФФОМС = Неопределено и Выборка.ФФОМС <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМС;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФФОМС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРПоСуммарномуТарифу = Неопределено и Выборка.ПФРПоСуммарномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_ОПС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРСПревышения = Неопределено и Выборка.ПФРСПревышения <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСПревышения;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_ОПС;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТариф = Неопределено и Выборка.ПФРПоДополнительномуТарифу <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТариф";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоДополнительномуТарифу;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифШахтеры = Неопределено и Выборка.ПФРНаДоплатуКПенсииШахтерам <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифШахтеры";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРНаДоплатуКПенсииШахтерам;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_шахтеры;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифПодземныеИВредныеРаботы = Неопределено и Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифПодземныеИВредныеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифТяжелыеИПрочиеРаботы = Неопределено и Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифТяжелыеИПрочиеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифПодземныеИВредныеРаботыБезСпецоценки = Неопределено и Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецоценки <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифПодземныеИВредныеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецоценки;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыДопТарифТяжелыеИПрочиеРаботыБезСпецоценки = Неопределено и Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецоценки <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаДопТарифТяжелыеИПрочиеРаботы";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецоценки;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФСС_НС = Неопределено и Выборка.ФССНесчастныеСлучаи <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_НС";
			НоваяСтрока.СуммаВзноса = Выборка.ФССНесчастныеСлучаи;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			НоваяСтрока.СчетКтНУ    = ПланыСчетов.Налоговый.ФСС_НСиПЗ;
			НоваяСтрока.СтатьяРБП   = РБП_ФСС_НС;
		КонецЕсли;
		
		Если РезультатыПФРПоСуммарномуТарифуЕНВД = Неопределено и Выборка.ПФРПоСуммарномуТарифуЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРПоСуммарномуТарифуЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыПФРСПревышенияЕНВД = Неопределено и Выборка.ПФРСПревышенияЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаПФР_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ПФРСПревышенияЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ПФР_ОПС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФССЕНВД = Неопределено и Выборка.ФССЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФСС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФССЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФСС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Если РезультатыФФОМСЕНВД = Неопределено и Выборка.ФФОМСЕНВД <> 0 Тогда
			НоваяСтрока = ТаблицаНетБазы.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.ВидБазы = "БазаФОМС_ЕНВД";
			НоваяСтрока.СуммаВзноса = Выборка.ФФОМСЕНВД;
			НоваяСтрока.СчетКт      = ПланыСчетов.Хозрасчетный.ФФОМС;
			НоваяСтрока.СчетКтНУ    = Неопределено;
			НоваяСтрока.СтатьяРБП   = РБП_Взносы;
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
			
			
			ОтпускЗаСчетОО = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьБУ и мЕстьОценочноеОбязательствоДляОтпуска;
			ОтпускЗаСчетРезервов = СтрокаОтражения.ЭтоОтпуск и мОценочныеОбязательстваФормироватьНУ и мЕстьОценочноеОбязательствоДляОтпуска;
			
			//////////////////////////////////////////////////////////
			// страховые взносы
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			
			Если РезультатыФСС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФСС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФФОМС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМС[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРПоСуммарномуТарифу <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифу[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифу[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРСПревышения <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРСПревышения[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРСПревышения[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТариф <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп, ПланыСчетов.Налоговый.ПФР_доп, РезультатыДопТариф[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТарифШахтеры <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры, ПланыСчетов.Налоговый.ПФР_доп_шахтеры, РезультатыДопТарифШахтеры[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры, ПланыСчетов.Налоговый.ПФР_доп_шахтеры, РезультатыДопТарифШахтеры[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыДопТарифПодземныеИВредныеРаботы <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
							РезультатыДопТарифПодземныеИВредныеРаботы[Индекс], РБП_Взносы);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
								РезультатыДопТарифПодземныеИВредныеРаботы[Индекс], РБП_Взносы, Истина);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыДопТарифТяжелыеИПрочиеРаботы <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
							РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс], РБП_Взносы);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
								РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс], РБП_Взносы, Истина);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыДопТарифПодземныеИВредныеРаботыБезСпецоценки <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
							РезультатыДопТарифПодземныеИВредныеРаботыБезСпецоценки[Индекс], РБП_Взносы, , Перечисления.ВидыПлатежейВГосБюджет.ВзносыБезСпецоценки);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ВредныеУсловияТруда,
								РезультатыДопТарифПодземныеИВредныеРаботыБезСпецоценки[Индекс], РБП_Взносы, Истина, Перечисления.ВидыПлатежейВГосБюджет.ВзносыБезСпецоценки);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если РезультатыДопТарифТяжелыеИПрочиеРаботыБезСпецоценки <> Неопределено Тогда
				
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
							ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
							РезультатыДопТарифТяжелыеИПрочиеРаботыБезСпецоценки[Индекс], РБП_Взносы, , Перечисления.ВидыПлатежейВГосБюджет.ВзносыБезСпецоценки);
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто,
								ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда, ПланыСчетов.Налоговый.ПФР_доп_ТяжелыеУсловияТруда,
								РезультатыДопТарифТяжелыеИПрочиеРаботыБезСпецоценки[Индекс], РБП_Взносы, Истина, Перечисления.ВидыПлатежейВГосБюджет.ВзносыБезСпецоценки);
					
				КонецЕсли;
				
			КонецЕсли;
			
			// ЕНВД
			Если РезультатыПФРПоСуммарномуТарифуЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифуЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРПоСуммарномуТарифуЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыПФРСПревышенияЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРСПревышенияЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ПФР_ОПС, ПланыСчетов.Налоговый.ПФР_ОПС, РезультатыПФРСПревышенияЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФССЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФССЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС, ПланыСчетов.Налоговый.ФСС, РезультатыФССЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатыФФОМСЕНВД <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМСЕНВД[Индекс], РБП_Взносы);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФФОМС, ПланыСчетов.Налоговый.ФФОМС, РезультатыФФОМСЕНВД[Индекс], РБП_Взносы, Истина);
				КонецЕсли;
			КонецЕсли;
			
			//////////////////////////////////////////////////////////
			// ФСС_НС
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			
			Если РезультатыФСС_НС <> Неопределено Тогда
				СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС);
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
					и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84 или (ОтпускЗаСчетОО и Не ОтпускЗаСчетРезервов)) Тогда
					// добавим еще одну строку
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ, ПланыСчетов.Налоговый.ФСС_НСиПЗ, РезультатыФСС_НС[Индекс], РБП_ФСС_НС, Истина);
				КонецЕсли;
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Создадим таблицу в которой соберем информацию по взносам, которые не отражены в учете
	
	Если ТаблицаНетБазы.Количество() > 0 и Не Месяц(ПериодРегистрации) = 1 Тогда
		// есть суммы взносов, которые не отразили в учете из-за отсутствия базы в текущем месяце
		// получим коэффициенты по данным с начала года без текущего месяца
		
		ВремТаблица = ТаблицаНетБазы.Скопировать();
		ВремТаблица.Свернуть("Физлицо");
		МассивФизлиц = ВремТаблица.ВыгрузитьКолонку("Физлицо");
		
		МассивПериодовРегистрации = Новый Массив;
		ДатаНачалаМесяца = НачалоГода(ПериодРегистрации);
		МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		Пока ДатаНачалаМесяца < НачалоМесяца(ПериодРегистрации-1) Цикл
			ДатаНачалаМесяца = НачалоМесяца(КонецМесяца(ДатаНачалаМесяца)+1);
			МассивПериодовРегистрации.Добавить(ДатаНачалаМесяца);
		КонецЦикла;
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2014(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП,МассивФизлиц);
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		МассивСтрокКУдалению = Новый Массив;
		
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			Отбор.ФизЛицо = СтрокаТЗ.ФизЛицо;
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,СтрокаТЗ.ВидБазы);
			Результаты = ОбщегоНазначенияЗК.РаспределитьПропорционально(СтрокаТЗ.СуммаВзноса, Коэффициенты);
			
			Если СтрокаТЗ.ВидБазы = "БазаФСС_НС" Тогда
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
			Иначе
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
			КонецЕсли;
			
			Если Результаты <> Неопределено Тогда
				МассивСтрокКУдалению.Добавить(СтрокаТЗ); 
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП);
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ 
						и (СтрокаОтражения.ПодменятьСчетДтНаРБП или СтрокаОтражения.ЭтоСчет84) Тогда
						// добавим еще одну строку
						СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
						ЗаполнитьСтрокуПромежуточнойТаблицы2014(СтрокаТЧ, СтрокаОтражения, ПараметрыПолученияСубконто, СтрокаТЗ.СчетКт, СтрокаТЗ.СчетКтНУ, Результаты[Индекс], СтрокаТЗ.СтатьяРБП, Истина);
					КонецЕсли;
					
					Индекс = Индекс +1;
					
				КонецЦикла;
			КонецЕсли;
		
		КонецЦикла;
		
		Для каждого СтрокаТаблицы Из МассивСтрокКУдалению Цикл
			
			// Добавим строку для комментирования
			ДобавитьСтрокуДляКомментирования(СтрокаТаблицы, 0);
			
			ТаблицаНетБазы.Удалить(СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;	

	Если ТаблицаНетБазы.Количество() > 0 Тогда
		//нет базы и с начала года, отразим взносы в Дт 91 счета
		Для каждого СтрокаТЗ Из ТаблицаНетБазы Цикл
			
			СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
			
			СтрокаТЧ.СчетДт			= ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(СтрокаТЗ.ВидБазы = "БазаПФР_ЕНВД");
			СтрокаТЧ.СубконтоДт1 	= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");//Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов; //blik 080215 48782
			СтрокаТЧ.СубконтоДт2    = ПРГ_ПолучитьПодразделениеФизЛица(СтрокаТЗ.Физлицо);//blik 080215 48782
			СтрокаТЧ.СчетКт			= СтрокаТЗ.СчетКт;
			СтрокаТЧ.СубконтоКт1	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ЗначениеЗаполнено(СтрокаТЗ.СчетКт) Тогда
				СтрокаТЧ.СчетДтНУ		= ПланыСчетов.Налоговый.ПрочиеКосвенныеРасходы;
				СтрокаТЧ.СубконтоДтНУ1 	= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");//Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов; //blik 080215 48782
				СтрокаТЧ.СубконтоДтНУ2    = ПРГ_ПолучитьПодразделениеФизЛица(СтрокаТЗ.Физлицо);//blik 080215 48782
				СтрокаТЧ.СчетКтНУ		= СтрокаТЗ.СчетКтНУ;
			КонецЕсли;
			
			СтрокаТЧ.Сумма			= СтрокаТЗ.СуммаВзноса;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
			КонецЕсли;
			
			// Добавим строку для комментирования
			ДобавитьСтрокуДляКомментирования(СтрокаТЗ, 1);
			
		КонецЦикла;
	КонецЕсли;	
	
	// отражение исчисленных страховых взносов в текущем месяце
    //////////////////////////////////////////////////////////////////////////////////////////////////
	
    //////////////////////////////////////////////////////////////////////////////////////////////////
	// Списание РБП
	
	// подготовим данные по РБП
	// необходимо списать из РБП остатки взносов от 2010 года
	ДатаДействияПриказа186Н = ОтражениеЗарплатыВРеглУчетеДополнительный.ДатаДействияПриказа186Н();
	
	Запрос.УстановитьПараметр("ДатаДействияПриказа186Н",ДатаДействияПриказа186Н);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации < &ДатаДействияПриказа186Н
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	
	ТаблицаРБП =  Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРБП.Количество()>0 Тогда
		
		ВремТаблица = ТаблицаРБП.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБП.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБП.ВыгрузитьКолонку("Физлицо");

		СформироватьПроводкиСписанияРБПВзносам2010(ПромежуточнаяТаблица, ПараметрыПолученияСубконто, МассивПериодовРегистрации, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, МассивФизлиц);
		
	КонецЕсли;
	
	// подготовим данные по РБП
	// необходимо списать из РБП взносы того периода с 2011 года в котором мПорядокПризнанияРасходовПоОтпускам  =  Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска
	
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ДатаДействияПриказа186Н,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы до ПериоРегистрации
	ОчереднойПериод = ДобавитьМесяц(ДатаДействияПриказа186Н,1);
	Пока ОчереднойПериод < ПериодРегистрации Цикл
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ОчереднойПериод,"ДФ=гггг,М,д,Ч,м,с") + ")";
		ОчереднойПериод = ДобавитьМесяц(ОчереднойПериод,1);
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить(); 
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	МАКСИМУМ(УчетнаяПолитикаПоРБП.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТ_ПериодыРБП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_Периоды.Период >= УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыРБП.Период КАК Период
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаПоРБП
	|ИЗ
	|	ВТ_ПериодыРБП КАК ВТ_ПериодыРБП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_ПериодыРБП.ПериодРегистра = УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|			И (УчетнаяПолитикаПоРБП.РасходыПоОтпускам = ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска))
	|ГДЕ
	|	(НЕ УчетнаяПолитикаПоРБП.Период ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|	И БУОсновныеНачисления.ПериодРегистрации В
	|			(ВЫБРАТЬ
	|				ВТ_УчетнаяПолитикаПоРБП.Период
	|			ИЗ
	|				ВТ_УчетнаяПолитикаПоРБП)
	|	И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|	И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	БУОсновныеНачисления.ПериодРегистрации,
	|	БУОсновныеНачисления.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	ТаблицаРБП =  Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРБП.Количество()>0 Тогда
		
		ВремТаблица = ТаблицаРБП.Скопировать();
		ВремТаблица.Свернуть("ПериодРегистрации");
		МассивПериодовРегистрации = ВремТаблица.ВыгрузитьКолонку("ПериодРегистрации");
		ТаблицаРБП.Свернуть("Физлицо");
		МассивФизлиц = ТаблицаРБП.ВыгрузитьКолонку("Физлицо");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТ_Счета69
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетов69)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_11
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФСС_НС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФСС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРСтраховая,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_07
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРПоСуммарномуТарифу,
		|	0 КАК ПФРСПревышения,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_02
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПФРНакопительная,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_01
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ФФОМС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_03_02
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ТФОМС,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_03
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТариф,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_04
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифШахтеры,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_05
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифВредныеУсловияТруда,
		|	СУММА(ВЫБОР
		|			КОГДА ДвиженияВУчете.СчетКт = &Счет69_02_06
		|				ТОГДА ДвиженияВУчете.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДопТарифТяжелыеУсловияТруда,
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
		|	ДвиженияВУчете.СубконтоДт2 КАК ФизЛицо
		|ИЗ
		|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ДвиженияВУчете
		|ГДЕ
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации В(&ПериодыРегистрации)
		|	И ДвиженияВУчете.СчетДт = &Счет97
		|	И ДвиженияВУчете.СчетКт В
		|			(ВЫБРАТЬ
		|				ВТ_Счета69.Счет
		|			ИЗ
		|				ВТ_Счета69)
		|	И ДвиженияВУчете.Ссылка.Организация = &парамОбособленноеПодразделение
		|	И ДвиженияВУчете.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ДвиженияВУчете.Ссылка.ПериодРегистрации,
		|	ДвиженияВУчете.СубконтоДт2";
		
		Запрос.УстановитьПараметр("СписокСчетов69", ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
		Запрос.УстановитьПараметр("ПериодыРегистрации",	МассивПериодовРегистрации);
		Запрос.УстановитьПараметр("Счет69_01",			ПланыСчетов.Хозрасчетный.ФСС);
		Запрос.УстановитьПараметр("Счет69_02_07",		ПланыСчетов.Хозрасчетный.ПФР_ОПС);   
		Запрос.УстановитьПараметр("Счет69_02_01",		ПланыСчетов.Хозрасчетный.ПФР_страх);
		Запрос.УстановитьПараметр("Счет69_02_02",		ПланыСчетов.Хозрасчетный.ПФР_нак);   
		Запрос.УстановитьПараметр("Счет69_02_03",		ПланыСчетов.Хозрасчетный.ПФР_доп);
		Запрос.УстановитьПараметр("Счет69_02_04",		ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
		Запрос.УстановитьПараметр("Счет69_02_05",		ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
		Запрос.УстановитьПараметр("Счет69_02_06",		ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
		Запрос.УстановитьПараметр("Счет69_03_01",		ПланыСчетов.Хозрасчетный.ФФОМС);
		Запрос.УстановитьПараметр("Счет69_03_02",		ПланыСчетов.Хозрасчетный.ТФОМС);
		Запрос.УстановитьПараметр("Счет69_11",			ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		Запрос.УстановитьПараметр("Счет97",				ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);		
		
		РезультатЗапроса = Запрос.Выполнить();

		// получим таблицу с детализацией по периоду действия
		ТаблицаКоэффициентов = ПолучитьДанныеУчетаСтраховыхВзносов2017(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП, МассивФизлиц, Ложь);
		ТаблицаКоэффициентов.Индексы.Добавить("ФизЛицо");
		
		ОтборПоФизлицу = Новый Структура("ПериодРегистрации,ФизЛицо");
		ОтборПоПериодуДействия = Новый Структура("ФизЛицо, ПериодРегистрации, ПериодДействия");
		ОтборПоПериодуДействия.ПериодДействия = ПериодРегистрации;

		ТаблицаКоэффициентовПоПериодуДействия = ТаблицаКоэффициентов.Скопировать();
		ТаблицаКоэффициентовПоПериодуДействия.Свернуть("ПериодРегистрации,ФизЛицо,ПериодДействия","БазаПФР,БазаФСС,БазаФОМС,БазаПФР_ЕНВД,БазаФСС_ЕНВД,БазаФОМС_ЕНВД,БазаДопТариф,БазаДопТарифШахтеры,БазаФСС_НС,БазаДопТарифПодземныеИВредныеРаботы,БазаДопТарифТяжелыеИПрочиеРаботы");
		ТаблицаКоэффициентовПоПериодуДействия.Сортировать("ПериодРегистрации,ФизЛицо,ПериодДействия");
		
		Счет97 = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
		СчетН97 = ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			ОтборПоФизлицу.ПериодРегистрации	= Выборка.ПериодРегистрации;
			ОтборПоФизлицу.ФизЛицо				= Выборка.ФизЛицо;
			СтрокиПериодовДействия = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоФизлицу);
			
			ОтборПоПериодуДействия.ФизЛицо				= Выборка.ФизЛицо;
			ОтборПоПериодуДействия.ПериодРегистрации	= Выборка.ПериодРегистрации;
			СтрокиОтражения = ТаблицаКоэффициентовПоПериодуДействия.НайтиСтроки(ОтборПоПериодуДействия);
			Если СтрокиОтражения.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(ОтборПоПериодуДействия);
			ВсегоДоходовФСС				= 0;
			ВсегоДоходовФОМС			= 0;
			ВсегоДоходовПФР				= 0;
			ВсегоДоходовДопТариф		= 0;
			ВсегоДоходовДопТарифШахтеры = 0;
			ВсегоДоходовВредныеУсловияТруда = 0;
			ВсегоДоходовТяжелыеУсловияТруда = 0;
			ВсегоДоходовФСС_НС			= 0;
			ВсегоДоходовФССЕНВД			= 0;
			ВсегоДоходовФОМСЕНВД		= 0;
			ВсегоДоходовПФРЕНВД			= 0;
			
			КолвоЭлементовКоллекции = СтрокиПериодовДействия.Количество(); 
			Для ОбратныйИндекс = 1 По КолвоЭлементовКоллекции Цикл 
				ЭлементКоллекции = СтрокиПериодовДействия[КолвоЭлементовКоллекции - ОбратныйИндекс]; 
				Если ЭлементКоллекции.ПериодДействия <= ЭлементКоллекции.ПериодРегистрации Тогда 
					СтрокиПериодовДействия.Удалить(КолвоЭлементовКоллекции - ОбратныйИндекс);
				Иначе
					ВсегоДоходовФСС  = ВсегоДоходовФСС + ЭлементКоллекции.БазаФСС;
					ВсегоДоходовФОМС = ВсегоДоходовФОМС + ЭлементКоллекции.БазаФОМС;
					ВсегоДоходовПФР  = ВсегоДоходовПФР + ЭлементКоллекции.БазаПФР;
					ВсегоДоходовДопТариф = ВсегоДоходовДопТариф + ЭлементКоллекции.БазаДопТариф;
					ВсегоДоходовДопТарифШахтеры = ВсегоДоходовДопТарифШахтеры + ЭлементКоллекции.БазаДопТарифШахтеры;
					ВсегоДоходовВредныеУсловияТруда = ВсегоДоходовВредныеУсловияТруда + ЭлементКоллекции.БазаДопТарифПодземныеИВредныеРаботы;
					ВсегоДоходовТяжелыеУсловияТруда = ВсегоДоходовТяжелыеУсловияТруда + ЭлементКоллекции.БазаДопТарифТяжелыеИПрочиеРаботы;
					ВсегоДоходовФСС_НС   = ВсегоДоходовФСС_НС + ЭлементКоллекции.БазаФСС_НС;
					ВсегоДоходовФССЕНВД  = ВсегоДоходовФССЕНВД + ЭлементКоллекции.БазаФСС_ЕНВД;
					ВсегоДоходовФОМСЕНВД = ВсегоДоходовФОМСЕНВД + ЭлементКоллекции.БазаФОМС_ЕНВД;
					ВсегоДоходовПФРЕНВД  = ВсегоДоходовПФРЕНВД + ЭлементКоллекции.БазаПФР_ЕНВД;
				КонецЕсли;
			КонецЦикла;
			
			// выделяем долю текущего месяца (ранее это был период действия)
			Если СтрокиПериодовДействия.Количество() > 1 Тогда
				
				Если ВсегоДоходовДопТариф = 0 Тогда
					МесячнаяДоляДопТариф = Выборка.ДопТариф;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТариф * СтрокаПериода.БазаДопТариф / ВсегоДоходовДопТариф,2);
					КонецЦикла;
					МесячнаяДоляДопТариф = Выборка.ДопТариф - БылоОтраженоРанее
				Иначе
					МесячнаяДоляДопТариф = Окр(Выборка.ДопТариф * СтрокиОтражения[0].БазаДопТариф / ВсегоДоходовДопТариф,2);
				КонецЕсли;
				
				Если ВсегоДоходовДопТарифШахтеры = 0 Тогда
					МесячнаяДоляДопТарифШахтеры = Выборка.ДопТарифШахтеры;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифШахтеры * СтрокаПериода.БазаДопТарифШахтеры / ВсегоДоходовДопТарифШахтеры,2);
					КонецЦикла;
					МесячнаяДоляДопТарифШахтеры = Выборка.ДопТарифШахтеры - БылоОтраженоРанее
				Иначе
					МесячнаяДоляДопТарифШахтеры = Окр(Выборка.ДопТарифШахтеры * СтрокиОтражения[0].БазаДопТарифШахтеры / ВсегоДоходовДопТарифШахтеры,2);
				КонецЕсли;
				
				Если ВсегоДоходовВредныеУсловияТруда = 0 Тогда
					МесячнаяДоляВредныеУсловияТруда = Выборка.ДопТарифВредныеУсловияТруда;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифВредныеУсловияТруда * СтрокаПериода.БазаДопТарифПодземныеИВредныеРаботы / ВсегоДоходовВредныеУсловияТруда,2);
					КонецЦикла;
					МесячнаяДоляВредныеУсловияТруда = Выборка.ДопТарифВредныеУсловияТруда - БылоОтраженоРанее
				Иначе
					МесячнаяДоляВредныеУсловияТруда = Окр(Выборка.ДопТарифВредныеУсловияТруда * СтрокиОтражения[0].БазаДопТарифПодземныеИВредныеРаботы / ВсегоДоходовВредныеУсловияТруда,2);
				КонецЕсли;
				
				Если ВсегоДоходовТяжелыеУсловияТруда = 0 Тогда
					МесячнаяДоляТяжелыеУсловияТруда = Выборка.ДопТарифТяжелыеУсловияТруда;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ДопТарифТяжелыеУсловияТруда * СтрокаПериода.БазаДопТарифТяжелыеИПрочиеРаботы / ВсегоДоходовТяжелыеУсловияТруда,2);
					КонецЦикла;
					МесячнаяДоляТяжелыеУсловияТруда = Выборка.ДопТарифТяжелыеУсловияТруда - БылоОтраженоРанее
				Иначе
					МесячнаяДоляТяжелыеУсловияТруда = Окр(Выборка.ДопТарифТяжелыеУсловияТруда * СтрокиОтражения[0].БазаДопТарифТяжелыеИПрочиеРаботы / ВсегоДоходовТяжелыеУсловияТруда,2);
				КонецЕсли;
				
				Если ВсегоДоходовФСС_НС = 0 Тогда
					МесячнаяДоляФСС_НС = Выборка.ФСС_НС;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС_НС * СтрокаПериода.БазаФСС_НС / ВсегоДоходовФСС_НС,2);
					КонецЦикла;
					МесячнаяДоляФСС_НС = Выборка.ФСС_НС - БылоОтраженоРанее
				Иначе
					МесячнаяДоляФСС_НС = Окр(Выборка.ФСС_НС * СтрокиОтражения[0].БазаФСС_НС / ВсегоДоходовФСС_НС,2);
				КонецЕсли;				
				
				Если ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД = 0 Тогда
					МесячнаяДоляПФРПоСуммарномуТарифу = Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = -Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРСПревышения = Выборка.ПФРСПревышения;
					МесячнаяДоляПФРСПревышенияЕНВД = -Выборка.ПФРСПревышения;
					МесячнаяДоляПФРСтраховая = Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная;
					МесячнаяДоляПФРСтраховаяЕНВД = -Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительнаяЕНВД = -Выборка.ПФРНакопительная;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанееПФРСтраховая = 0;
					БылоОтраженоРанееПФРПоСуммарномуТарифу = 0;
					БылоОтраженоРанееПФРСПревышения = 0;
					БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД = 0;
					БылоОтраженоРанееПФРСПревышенияЕНВД = 0;
					БылоОтраженоРанееПФРНакопительная = 0;
					БылоОтраженоРанееПФРСтраховаяЕНВД = 0;
					БылоОтраженоРанееПФРНакопительнаяЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанееПФРПоСуммарномуТарифу = БылоОтраженоРанееПФРПоСуммарномуТарифу + Окр(Выборка.ПФРПоСуммарномуТарифу * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД = БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД + Окр(Выборка.ПФРПоСуммарномуТарифу * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСПревышения = БылоОтраженоРанееПФРСПревышения + Окр(Выборка.ПФРСПревышения * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСПревышенияЕНВД = БылоОтраженоРанееПФРСПревышенияЕНВД + Окр(Выборка.ПФРСПревышения * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСтраховая = БылоОтраженоРанееПФРСтраховая + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРНакопительная = БылоОтраженоРанееПФРНакопительная + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРСтраховаяЕНВД = БылоОтраженоРанееПФРСтраховаяЕНВД + Окр(Выборка.ПФРСтраховая * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
						БылоОтраженоРанееПФРНакопительнаяЕНВД = БылоОтраженоРанееПФРНакопительнаяЕНВД + Окр(Выборка.ПФРНакопительная * СтрокаПериода.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР_ЕНВД = 0 Тогда
						МесячнаяДоляПФРПоСуммарномуТарифу = Выборка.ПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД;
						МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = 0;
						МесячнаяДоляПФРСПревышения = Выборка.ПФРСПревышения - БылоОтраженоРанееПФРСПревышения - БылоОтраженоРанееПФРСПревышенияЕНВД;
						МесячнаяДоляПФРСПревышенияЕНВД = 0;
						МесячнаяДоляПФРСтраховая = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховаяЕНВД = 0;
						МесячнаяДоляПФРНакопительнаяЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаПФР = 0 Тогда
						МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = Выборка.ПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифу - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД;
						МесячнаяДоляПФРПоСуммарномуТарифу = 0;
						МесячнаяДоляПФРСПревышенияЕНВД = Выборка.ПФРСПревышения - БылоОтраженоРанееПФРСПревышения - БылоОтраженоРанееПФРСПревышенияЕНВД;
						МесячнаяДоляПФРСПревышения = 0;
						МесячнаяДоляПФРСтраховаяЕНВД = Выборка.ПФРСтраховая - БылоОтраженоРанееПФРСтраховая - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительнаяЕНВД = Выборка.ПФРНакопительная - БылоОтраженоРанееПФРНакопительная - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховая = 0;
						МесячнаяДоляПФРНакопительная = 0;
					Иначе
						МесячнаяДоляПФРПоСуммарномуТарифуЕНВД     = Окр(Выборка.ПФРПоСуммарномуТарифу * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД;
						МесячнаяДоляПФРПоСуммарномуТарифу     = Выборка.ПФРПоСуммарномуТарифу - МесячнаяДоляПФРПоСуммарномуТарифуЕНВД - БылоОтраженоРанееПФРПоСуммарномуТарифуЕНВД - БылоОтраженоРанееПФРПоСуммарномуТарифу;
						МесячнаяДоляПФРСПревышенияЕНВД     = Окр(Выборка.ПФРСПревышения * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРСПревышенияЕНВД;
						МесячнаяДоляПФРСПревышения     = Выборка.ПФРСПревышения - МесячнаяДоляПФРСПревышенияЕНВД - БылоОтраженоРанееПФРСПревышенияЕНВД - БылоОтраженоРанееПФРСПревышения;
						МесячнаяДоляПФРСтраховаяЕНВД     = Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРСтраховаяЕНВД;
						МесячнаяДоляПФРНакопительнаяЕНВД = Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2) - БылоОтраженоРанееПФРНакопительнаяЕНВД;
						МесячнаяДоляПФРСтраховая     = Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховаяЕНВД - БылоОтраженоРанееПФРСтраховаяЕНВД - БылоОтраженоРанееПФРСтраховая;
						МесячнаяДоляПФРНакопительная = Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительнаяЕНВД - БылоОтраженоРанееПФРНакопительнаяЕНВД - БылоОтраженоРанееПФРНакопительная;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаПФР / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД);
					МесячнаяДоляПФРПоСуммарномуТарифу = Окр(Выборка.ПФРПоСуммарномуТарифу * ТекущийКоэффициент,2);
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД = Окр(Выборка.ПФРПоСуммарномуТарифу * ТекущийКоэффициент,2);
					МесячнаяДоляПФРСПревышения = Окр(Выборка.ПФРСПревышения * ТекущийКоэффициент,2);
					МесячнаяДоляПФРСПревышенияЕНВД = Окр(Выборка.ПФРСПревышения * ТекущийКоэффициент,2);
					МесячнаяДоляПФРСтраховая = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
					МесячнаяДоляПФРНакопительная = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаПФР_ЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД);
					МесячнаяДоляПФРСтраховаяЕНВД = Окр(Выборка.ПФРСтраховая * ТекущийКоэффициент,2);
					МесячнаяДоляПФРНакопительнаяЕНВД = Окр(Выборка.ПФРНакопительная * ТекущийКоэффициент,2);
				КонецЕсли;
				
				Если ВсегоДоходовФСС + ВсегоДоходовФССЕНВД = 0 Тогда
					МесячнаяДоляФСС     = Выборка.ФСС;
					МесячнаяДоляФССЕНВД = -Выборка.ФСС;

				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанее = 0;
					БылоОтраженоРанееЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанее = БылоОтраженоРанее + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
						БылоОтраженоРанееЕНВД = БылоОтраженоРанееЕНВД + Окр(Выборка.ФСС * СтрокаПериода.БазаФСС_ЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФСС_ЕНВД = 0 Тогда
						МесячнаяДоляФСС = Выборка.ФСС - БылоОтраженоРанее - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФССЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФСС = 0 Тогда
						МесячнаяДоляФССЕНВД = Выборка.ФСС - БылоОтраженоРанее - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФСС = 0;
					Иначе
						МесячнаяДоляФССЕНВД = Окр(Выборка.ФСС * ВсегоДоходовФССЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2) - БылоОтраженоРанееЕНВД;
						МесячнаяДоляФСС     = Выборка.ФСС - МесячнаяДоляФССЕНВД - БылоОтраженоРанееЕНВД - БылоОтраженоРанее;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаФСС / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД);
					МесячнаяДоляФСС = Окр(Выборка.ФСС * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаФСС_ЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД);
					МесячнаяДоляФССЕНВД = Окр(Выборка.ФСС * ТекущийКоэффициент,2);
				КонецЕсли;
				
				Если ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД = 0 Тогда
					МесячнаяДоляФФОМС = Выборка.ФФОМС;
					МесячнаяДоляТФОМС = Выборка.ТФОМС;
					МесячнаяДоляФФОМСЕНВД = -Выборка.ФФОМС;
					МесячнаяДоляТФОМСЕНВД = -Выборка.ТФОМС;
				ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].ПериодДействия = ПериодРегистрации Тогда
					// это оказался последний из затронутых тогда периодов действия
					БылоОтраженоРанееФФОМС = 0;
					БылоОтраженоРанееТФОМС = 0;
					БылоОтраженоРанееФФОМСЕНВД = 0;
					БылоОтраженоРанееТФОМСЕНВД = 0;
					Для каждого СтрокаПериода Из СтрокиПериодовДействия Цикл
						Если СтрокаПериода.ПериодДействия = ПериодРегистрации Тогда
							Продолжить;
						КонецЕсли;
						БылоОтраженоРанееФФОМС = БылоОтраженоРанееФФОМС + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееТФОМС = БылоОтраженоРанееТФОМС + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееФФОМСЕНВД = БылоОтраженоРанееФФОМСЕНВД + Окр(Выборка.ФФОМС * СтрокаПериода.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
						БылоОтраженоРанееТФОМСЕНВД = БылоОтраженоРанееТФОМСЕНВД + Окр(Выборка.ТФОМС * СтрокаПериода.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					КонецЦикла;
					Если СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФОМС_ЕНВД = 0 Тогда
						МесячнаяДоляФФОМС = Выборка.ФФОМС - БылоОтраженоРанееФФОМС - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМС = Выборка.ТФОМС - БылоОтраженоРанееТФОМС - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМСЕНВД = 0;
						МесячнаяДоляТФОМСЕНВД = 0;
					ИначеЕсли СтрокиПериодовДействия[СтрокиПериодовДействия.Количество()-1].БазаФОМС = 0 Тогда
						МесячнаяДоляФФОМСЕНВД = Выборка.ФФОМС - БылоОтраженоРанееФФОМС - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМСЕНВД = Выборка.ТФОМС - БылоОтраженоРанееТФОМС - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМС = 0;
						МесячнаяДоляТФОМС = 0;
					Иначе
						МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2) - БылоОтраженоРанееФФОМСЕНВД;
						МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2) - БылоОтраженоРанееТФОМСЕНВД;
						МесячнаяДоляФФОМС     = Выборка.ФФОМС - МесячнаяДоляФФОМСЕНВД - БылоОтраженоРанееФФОМСЕНВД - БылоОтраженоРанееФФОМС;
						МесячнаяДоляТФОМС     = Выборка.ТФОМС - МесячнаяДоляТФОМСЕНВД - БылоОтраженоРанееТФОМСЕНВД - БылоОтраженоРанееТФОМС;
					КонецЕсли;
				Иначе
					СтрокаТЧ = СтрокиОтражения[0];
					ТекущийКоэффициент = СтрокаТЧ.БазаФОМС / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД);
					МесячнаяДоляФФОМС = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
					МесячнаяДоляТФОМС = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
					ТекущийКоэффициент = СтрокаТЧ.БазаФОМС_ЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД);
					МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ТекущийКоэффициент,2);
					МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ТекущийКоэффициент,2);
				КонецЕсли;
				
			Иначе
				// за другие месяцы ничего в РБП не относили
				МесячнаяДоляДопТариф			= Выборка.ДопТариф;
				МесячнаяДоляДопТарифШахтеры		= Выборка.ДопТарифШахтеры;
				МесячнаяДоляВредныеУсловияТруда			= Выборка.ДопТарифВредныеУсловияТруда;
				МесячнаяДоляТяжелыеУсловияТруда			= Выборка.ДопТарифТяжелыеУсловияТруда;
				МесячнаяДоляФСС_НС				= Выборка.ФСС_НС;
				
				Если ВсегоДоходовПФРЕНВД = 0 Тогда
					МесячнаяДоляПФРПоСуммарномуТарифу		= Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД		= 0;
					МесячнаяДоляПФРСПревышения		= Выборка.ПФРСПревышения;
					МесячнаяДоляПФРСПревышенияЕНВД		= 0;
					МесячнаяДоляПФРСтраховая		= Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительная	= Выборка.ПФРНакопительная;
					МесячнаяДоляПФРСтраховаяЕНВД		= 0;
					МесячнаяДоляПФРНакопительнаяЕНВД	= 0;
				ИначеЕсли ВсегоДоходовПФР = 0 Тогда
					МесячнаяДоляПФРПоСуммарномуТарифу		= 0;
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД		= Выборка.ПФРПоСуммарномуТарифу;
					МесячнаяДоляПФРСПревышения		= 0;
					МесячнаяДоляПФРСПревышенияЕНВД		= Выборка.ПФРСПревышения;
					МесячнаяДоляПФРСтраховая		= 0;
					МесячнаяДоляПФРНакопительная    = 0;
					МесячнаяДоляПФРСтраховаяЕНВД		= Выборка.ПФРСтраховая;
					МесячнаяДоляПФРНакопительнаяЕНВД	= Выборка.ПФРНакопительная;
				Иначе
					МесячнаяДоляПФРПоСуммарномуТарифуЕНВД		= Окр(Выборка.ПФРПоСуммарномуТарифу * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРПоСуммарномуТарифу		= Выборка.ПФРПоСуммарномуТарифу - МесячнаяДоляПФРПоСуммарномуТарифуЕНВД;
					МесячнаяДоляПФРСПревышенияЕНВД		= Окр(Выборка.ПФРСПревышения * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРСПревышения		= Выборка.ПФРСПревышения - МесячнаяДоляПФРСПревышенияЕНВД;
					МесячнаяДоляПФРСтраховаяЕНВД		= Окр(Выборка.ПФРСтраховая * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРНакопительнаяЕНВД	= Окр(Выборка.ПФРНакопительная * ВсегоДоходовПФРЕНВД / (ВсегоДоходовПФР + ВсегоДоходовПФРЕНВД),2);
					МесячнаяДоляПФРСтраховая		= Выборка.ПФРСтраховая - МесячнаяДоляПФРСтраховаяЕНВД;
					МесячнаяДоляПФРНакопительная	= Выборка.ПФРНакопительная - МесячнаяДоляПФРНакопительнаяЕНВД;
				КонецЕсли;
				
				Если ВсегоДоходовФССЕНВД = 0 Тогда
					МесячнаяДоляФСС		= Выборка.ФСС;
					МесячнаяДоляФССЕНВД	= 0;
				ИначеЕсли ВсегоДоходовФСС = 0 Тогда
					МесячнаяДоляФСС		= 0;
					МесячнаяДоляФССЕНВД	= Выборка.ФСС;
				Иначе
					МесячнаяДоляФССЕНВД	= Окр(Выборка.ФСС * ВсегоДоходовФССЕНВД / (ВсегоДоходовФСС + ВсегоДоходовФССЕНВД),2);
					МесячнаяДоляФСС		= Выборка.ФСС - МесячнаяДоляФССЕНВД;
				КонецЕсли;
				
				Если ВсегоДоходовФОМСЕНВД = 0 Тогда
					МесячнаяДоляФФОМС = Выборка.ФФОМС;
					МесячнаяДоляТФОМС = Выборка.ТФОМС;
					МесячнаяДоляФФОМСЕНВД = 0;
					МесячнаяДоляТФОМСЕНВД = 0;
				ИначеЕсли ВсегоДоходовФОМС = 0 Тогда
					МесячнаяДоляФФОМСЕНВД = Выборка.ФФОМС;
					МесячнаяДоляТФОМСЕНВД = Выборка.ТФОМС;
					МесячнаяДоляФФОМС = 0;
					МесячнаяДоляТФОМС = 0;
				Иначе
					МесячнаяДоляФФОМСЕНВД = Окр(Выборка.ФФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					МесячнаяДоляТФОМСЕНВД = Окр(Выборка.ТФОМС * ВсегоДоходовФОМСЕНВД / (ВсегоДоходовФОМС + ВсегоДоходовФОМСЕНВД),2);
					МесячнаяДоляФФОМС     = Выборка.ФФОМС - МесячнаяДоляФФОМСЕНВД;
					МесячнаяДоляТФОМС     = Выборка.ТФОМС - МесячнаяДоляТФОМСЕНВД;
				КонецЕсли;
					
			КонецЕсли;
			
			// ФСС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС");
			РезультатыФСС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_ЕНВД");
			РезультатыФССЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФССЕНВД, Коэффициенты);
			
			// ФОМС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС");
			РезультатыФФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМС, Коэффициенты);
			РезультатыТФОМС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМС, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФОМС_ЕНВД");
			РезультатыФФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФФОМСЕНВД, Коэффициенты);
			РезультатыТФОМСЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТФОМСЕНВД, Коэффициенты);
			
			// ПФР
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР");
			РезультатыПФРНакопительная = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительная, Коэффициенты);
			РезультатыПФРСтраховая = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховая, Коэффициенты);
			РезультатыПФРПоСуммарномуТарифу = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРПоСуммарномуТарифу, Коэффициенты);
			РезультатыПФРСПревышения = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСПревышения, Коэффициенты);
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаПФР_ЕНВД");
			РезультатыПФРНакопительнаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРНакопительнаяЕНВД, Коэффициенты);
			РезультатыПФРСтраховаяЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСтраховаяЕНВД, Коэффициенты);
			РезультатыПФРПоСуммарномуТарифуЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРПоСуммарномуТарифуЕНВД, Коэффициенты);
			РезультатыПФРСПревышенияЕНВД = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляПФРСПревышенияЕНВД, Коэффициенты);
			
			// ДопТариф летчики
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТариф");
			РезультатыДопТариф = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляДопТариф, Коэффициенты);
			
			// ДопТариф шахтеры
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифШахтеры");
			РезультатыДопТарифШахтеры = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляДопТарифШахтеры, Коэффициенты);
			
			// доп тариф Работы с вредными условиями 
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифПодземныеИВредныеРаботы");
			РезультатыДопТарифПодземныеИВредныеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляВредныеУсловияТруда, Коэффициенты);
		
			// доп тариф Работы с тяжелыми условиями 
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаДопТарифТяжелыеИПрочиеРаботы");
			РезультатыДопТарифТяжелыеИПрочиеРаботы = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляТяжелыеУсловияТруда, Коэффициенты);
			
			// ФСС_НС
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаФСС_НС");
			РезультатыФСС_НС = ОбщегоНазначенияЗК.РаспределитьПропорционально(МесячнаяДоляФСС_НС, Коэффициенты);			
			
			Индекс = 0;
			Для каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
				
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
				
				Если РезультатыФСС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФСС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыТФОМС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыТФОМС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФФОМС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФФОМС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРНакопительная <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРНакопительная[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСтраховая <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСтраховая[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРПоСуммарномуТарифу <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРПоСуммарномуТарифу[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСПревышения <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСПревышения[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРНакопительнаяЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРНакопительнаяЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСтраховаяЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСтраховаяЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРПоСуммарномуТарифуЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРПоСуммарномуТарифуЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыПФРСПревышенияЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыПФРСПревышенияЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФССЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФССЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыТФОМСЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыТФОМСЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыФФОМСЕНВД <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФФОМСЕНВД[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТариф <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТариф[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТарифШахтеры <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифШахтеры[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Если РезультатыДопТарифПодземныеИВредныеРаботы <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифПодземныеИВредныеРаботы[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				
				Если РезультатыДопТарифТяжелыеИПрочиеРаботы <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_Взносы;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыДопТарифТяжелыеИПрочиеРаботы[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				//////////////////////////////////////////////////////////
				// ФСС_НС
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
				
				Если РезультатыФСС_НС <> Неопределено Тогда
					
					СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
					СтрокаТЧ.СчетКт = Счет97;
					СтрокаТЧ.СубконтоКт1 = РБП_ФСС_НС;
					СтрокаТЧ.СубконтоКт2 = Выборка.ФизЛицо;
					
					Если мУчетПоПодразделениямНаСчетах Тогда
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
					
					СтрокаТЧ.СпособРаспределенияЗатрат = СтрокаОтражения.СпособРаспределенияЗатрат;
					СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
					
					СтрокаТЧ.Сумма = РезультатыФСС_НС[Индекс];
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Индекс = Индекс + 1;
			
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// конец списания РБП
	// со счета учета расходов будущих периодов в затраты
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// вычеркнем обнулившиеся суммы
	СвернутьТаблицуПроводок(ПромежуточнаяТаблица,",РБПСчетДтБУ");
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// замена счетов НУ по регистру соответствий
	//
	
	Если мЗаполнятьДанныеНУ И мЗаполнятьСчетаНУ И мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете = Перечисления.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете.НаСчетахЗатратСоответствующихСчетамБухУчета Тогда
		
		СчетаНУ = Новый Массив;
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщехозяйственныеРасходы);
		СчетаНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств);
        Запрос.УстановитьПараметр("СчетаНУ",СчетаНУ);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Налоговый.Ссылка
		|ИЗ
		|	ПланСчетов.Налоговый КАК Налоговый
		|ГДЕ
		|	Налоговый.Ссылка В ИЕРАРХИИ(&СчетаНУ)";
		МассивСчетаНУ = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				
		СчетаНалоговСФОТ = Новый Массив;
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_ОПС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
		СчетаНалоговСФОТ.Добавить(ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
		
		Запрос.УстановитьПараметр("СчетаНалоговСФОТ", СчетаНалоговСФОТ);
		Запрос.УстановитьПараметр("СчетаНУ", МассивСчетаНУ);
		Запрос.УстановитьПараметр("ТаблицаПроводок", ПромежуточнаяТаблица);  
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_Проводки
		|ИЗ
		|	&ТаблицаПроводок КАК ТаблицаПроводок";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПроводок.РБПСчетДтБУ КАК РБПСчетДтБУ,
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3,
		|	ТаблицаПроводок.СчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН,
		|	ТаблицаПроводок.Сумма,
		|	ТаблицаПроводок.ВидНачисленияУдержания,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт2.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт2,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ТаблицаПроводок.СубконтоДт3.ВидРасходовНУ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидРасходовНУДт3
		|ПОМЕСТИТЬ ВТ_ТаблицаПроводок
		|ИЗ
		|	ВТ_Проводки КАК ТаблицаПроводок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РБПСчетДтБУ,
		|	СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий1
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ КАК СчетКоррБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий2
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ,
		|	СчетКоррБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ КАК ВидЗатратНУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий3
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	(НЕ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО)
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ КАК СчетБУ,
		|	МИНИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.Код) КАК СчетНУ
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствий4
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ КАК СоответствиеСчетовБУиНУСрезПоследних
		|ГДЕ
		|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
		|	И СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПроводок.СчетДт КАК СчетДт,
		|	ТаблицаПроводок.СубконтоДт1 КАК СубконтоДт1,
		|	ТаблицаПроводок.СубконтоДт2 КАК СубконтоДт2,
		|	ТаблицаПроводок.СубконтоДт3 КАК СубконтоДт3,
		|	ТаблицаПроводок.СчетКт КАК СчетКт,
		|	ТаблицаПроводок.СубконтоКт1 КАК СубконтоКт1,
		|	ТаблицаПроводок.СубконтоКт2 КАК СубконтоКт2,
		|	ТаблицаПроводок.СубконтоКт3 КАК СубконтоКт3,
		|	ВЫБОР
		|		КОГДА ТаблицаПроводок.СчетКт В (&СчетаНалоговСФОТ)
		|				И ТаблицаПроводок.СчетДтНУ В (&СчетаНУ)
		|			ТОГДА ЕСТЬNULL(Налоговый.Ссылка, ТаблицаПроводок.СчетДтНУ)
		|		ИНАЧЕ ТаблицаПроводок.СчетДтНУ
		|	КОНЕЦ КАК СчетДтНУ,
		|	ТаблицаПроводок.СчетДтНУ КАК СтарыйСчетДтНУ,
		|	ТаблицаПроводок.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|	ТаблицаПроводок.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|	ТаблицаПроводок.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|	ТаблицаПроводок.СчетКтНУ КАК СчетКтНУ,
		|	ТаблицаПроводок.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|	ТаблицаПроводок.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|	ТаблицаПроводок.СубконтоКтНУ3 КАК СубконтоКтНУ3,
		|	ТаблицаПроводок.Сумма КАК Сумма,
		|	ТаблицаПроводок.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|	ТаблицаПроводок.ОтражениеВУСН КАК ОтражениеВУСН,
		|	ТаблицаПроводок.ВидНачисленияУдержания КАК ВидНачисленияУдержания
		|ПОМЕСТИТЬ ВТ_ОтражениеВУчете
		|ИЗ
		|	ВТ_ТаблицаПроводок КАК ТаблицаПроводок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий1 КАК ТаблицаСоответствий1
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий1.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий1.СчетКоррБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий1.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий2 КАК ТаблицаСоответствий2
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий2.СчетБУ
		|			И ТаблицаПроводок.СчетКт = ТаблицаСоответствий2.СчетКоррБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий3 КАК ТаблицаСоответствий3
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий3.СчетБУ
		|			И (ТаблицаПроводок.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт2
		|				ИЛИ ТаблицаПроводок.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|					И ТаблицаСоответствий3.ВидЗатратНУ = ТаблицаПроводок.ВидРасходовНУДт3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствий4 КАК ТаблицаСоответствий4
		|		ПО ТаблицаПроводок.РБПСчетДтБУ = ТаблицаСоответствий4.СчетБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый КАК Налоговый
		|		ПО (ВЫБОР
		|				КОГДА ТаблицаСоответствий1.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий1.СчетНУ
		|				КОГДА ТаблицаСоответствий2.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий2.СчетНУ
		|				КОГДА ТаблицаСоответствий3.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий3.СчетНУ
		|				КОГДА ТаблицаСоответствий4.СчетНУ ЕСТЬ НЕ NULL 
		|					ТОГДА ТаблицаСоответствий4.СчетНУ
		|				ИНАЧЕ """"
		|			КОНЕЦ = Налоговый.Код)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетДтНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтражениеВУчете.СчетДт КАК СчетДт,
		|	ОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
		|	ОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
		|	ОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
		|	ОтражениеВУчете.СчетКт,
		|	ОтражениеВУчете.СубконтоКт1,
		|	ОтражениеВУчете.СубконтоКт2,
		|	ОтражениеВУчете.СубконтоКт3,
		|	ОтражениеВУчете.СчетДтНУ КАК СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ЛОЖЬ
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОбрабатыватьСубконтоНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто1.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто1.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто1,
		|	НалоговыйСталиВидыСубконто1.ВидСубконто.ТипЗначения КАК ТипЗначения1,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто2.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто2.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто2,
		|	НалоговыйСталиВидыСубконто2.ВидСубконто.ТипЗначения КАК ТипЗначения2,
		|	ВЫБОР
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ОтражениеВУчете.СтарыйСчетДтНУ
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		КОГДА ОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто1.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ1
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто2.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ2
		|		КОГДА НалоговыйСталиВидыСубконто3.ВидСубконто = НалоговыйБылиВидыСубконто3.ВидСубконто
		|			ТОГДА ОтражениеВУчете.СубконтоДтНУ3
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА НалоговыйСталиВидыСубконто3.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСубконто3,
		|	НалоговыйСталиВидыСубконто3.ВидСубконто.ТипЗначения КАК ТипЗначения3,
		|	ОтражениеВУчете.СчетКтНУ,
		|	ОтражениеВУчете.СубконтоКтНУ1,
		|	ОтражениеВУчете.СубконтоКтНУ2,
		|	ОтражениеВУчете.СубконтоКтНУ3,
		|	ОтражениеВУчете.СпособРаспределенияЗатрат,
		|	ОтражениеВУчете.ОтражениеВУСН,
		|	ОтражениеВУчете.Сумма,
		|	ОтражениеВУчете.ВидНачисленияУдержания
		|ИЗ
		|	ВТ_ОтражениеВУчете КАК ОтражениеВУчете
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто1
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйСталиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто2
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйСталиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйСталиВидыСубконто3
		|		ПО ОтражениеВУчете.СчетДтНУ = НалоговыйСталиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйСталиВидыСубконто3.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто1
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто1.Ссылка
		|			И (1 = НалоговыйБылиВидыСубконто1.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто2
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто2.Ссылка
		|			И (2 = НалоговыйБылиВидыСубконто2.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйБылиВидыСубконто3
		|		ПО ОтражениеВУчете.СтарыйСчетДтНУ = НалоговыйБылиВидыСубконто3.Ссылка
		|			И (3 = НалоговыйБылиВидыСубконто3.НомерСтроки)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетДт,
		|	СубконтоДт1,
		|	СубконтоДт2,
		|	СубконтоДт3,
		|	СчетДтНУ,
		|	СубконтоДтНУ1,
		|	СубконтоДтНУ2,
		|	СубконтоДтНУ3
		|АВТОУПОРЯДОЧИВАНИЕ";
				
		ТаблицаПослеПодмен = Запрос.Выполнить().Выгрузить();
		Для каждого СтрокаРезультата Из ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("ОбрабатыватьСубконтоНУ",Истина)) Цикл
		    Если СтрокаРезультата.ЕстьСубконто1 И СтрокаРезультата.СубконтоДтНУ1 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ1 = СтрокаРезультата.ТипЗначения1.ПривестиЗначение()
			КонецЕсли;
		    Если СтрокаРезультата.ЕстьСубконто2 И СтрокаРезультата.СубконтоДтНУ2 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ2 = СтрокаРезультата.ТипЗначения2.ПривестиЗначение()
			КонецЕсли;
		    Если СтрокаРезультата.ЕстьСубконто3 И СтрокаРезультата.СубконтоДтНУ3 = Неопределено Тогда
				СтрокаРезультата.СубконтоДтНУ3 = СтрокаРезультата.ТипЗначения3.ПривестиЗначение()
			КонецЕсли;
		КонецЦикла; 
		
		ТаблицаПослеПодмен.Свернуть("СчетДт,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,
		|СчетДтНУ,СчетКтНУ,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3,
		|СпособРаспределенияЗатрат,ОтражениеВУСН,ВидНачисленияУдержания", "Сумма");
		
		НулевыеСтроки = ТаблицаПослеПодмен.НайтиСтроки(Новый Структура("Сумма",0));
		Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
			ТаблицаПослеПодмен.Удалить(СтрокаТаблицы)
		КонецЦикла;
		
		ПромежуточнаяТаблица = ТаблицаПослеПодмен.Скопировать();
		
	КонецЕсли;
	
    //
	// замена счетов НУ по регистру соответствий
    //////////////////////////////////////////////////////////////////////////////////////////////////
	
	// заменим счет Дт 69 на счет 91
	ПроверитьИСкорректироватьПроводкиПоВзносам(ПромежуточнаяТаблица);
	
	// Если есть что прокомментировать - сделаем это
	Если мТаблицаКомментированияСтраховыеВзносы.Количество() > 0 Тогда
		
		//Режим 0 - взносы распределены по базе с начала года
		//		1 - нет базы по взносам, все отправили на счет 91
		//		2 - взносы в Дт 91, исчисленные с начислений отнесенных в дт 69 счета
		
		ПараметрыОтбора = Новый Структура;
		
		// Соберем строки относящиеся к распределнию по базе с начала года
		ПараметрыОтбора.Вставить("Режим", 0);
		МассивСтрокСНачалаГода = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу распределенных по базе с начала года
		ТаблицаКомментированияСНачалаГода = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокСНачалаГода);
		ТаблицаКомментированияСНачалаГода.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыПФРПоСуммарномуТарифу, ВзносыПФРСПревышения,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");
		
		// Получим таблицу распределенных по базе с начала года (в части ЕНВД)
		ТаблицаКомментированияСНачалаГодаЕНВД = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокСНачалаГода);
		ТаблицаКомментированияСНачалаГодаЕНВД.Свернуть("Физлицо", "ВзносыПФРПоСуммарномуТарифу_ЕНВД, ВзносыПФРСПревышения_ЕНВД, ВзносыФСС_ЕНВД,"
			+ "ВзносыФФОМС_ЕНВД");
			
		// Соберем строки относящиеся к отсутствию базы
		ПараметрыОтбора.Вставить("Режим", 1);
		МассивСтрокНетБазы = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу для которых не нашлось базы
		ТаблицаКомментированияНетБазы = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНетБазы.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыПФРПоСуммарномуТарифу, ВзносыПФРСПревышения,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");
		
		// Получим таблицу для которых не нашлось базы (в части ЕНВД)
		ТаблицаКомментированияНетБазыЕНВД = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНетБазыЕНВД.Свернуть("Физлицо", "ВзносыПФРПоСуммарномуТарифу_ЕНВД, ВзносыПФРСПревышения_ЕНВД, ВзносыФСС_ЕНВД,"
			+ "ВзносыФФОМС_ЕНВД");
			
		// Соберем строки относящиеся к начислениям в Дт 69 счета
		ПараметрыОтбора.Вставить("Режим", 2);
		МассивСтрокНетБазы = мТаблицаКомментированияСтраховыеВзносы.НайтиСтроки(ПараметрыОтбора);
		
		// Получим таблицу для которых не нашлось базы
		ТаблицаКомментированияНачисления69 = мТаблицаКомментированияСтраховыеВзносы.Скопировать(МассивСтрокНетБазы);
		ТаблицаКомментированияНачисления69.Свернуть("Физлицо", "ВзносыФСС, ВзносыФФОМС, ВзносыПФРПоСуммарномуТарифу, ВзносыПФРСПревышения,"
			+ "ВзносыДопТариф, ВзносыДопТарифШахтеры, ВзносыДопТарифТяжелыеИПрочиеРаботы, ВзносыДопТарифПодземныеИВредныеРаботы, ВзносыФСС_НС");	
			
			
		// Удалим колонки по шахтерам
		Если НЕ Константы.ИспользуетсяТрудШахтеров.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифШахтеры"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифШахтеры"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифШахтеры"));
		
		КонецЕсли; 
		
		// Удалим колонки по летчикам
		Если НЕ Константы.ИспользуетсяТрудЧленовЛетныхЭкипажей.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТариф"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТариф"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТариф"));
		
		КонецЕсли; 
		
		// Удалим колонки по работам с досрочной пенсией
		Если НЕ Константы.ИспользуютсяРаботыСДосрочнойПенсией.Получить() Тогда
		
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифТяжелыеИПрочиеРаботы"));
			
			ТаблицаКомментированияСНачалаГода.Колонки.Удалить(ТаблицаКомментированияСНачалаГода.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
			ТаблицаКомментированияНетБазы.Колонки.Удалить(ТаблицаКомментированияНетБазы.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
			ТаблицаКомментированияНачисления69.Колонки.Удалить(ТаблицаКомментированияНачисления69.Колонки.Найти("ВзносыДопТарифПодземныеИВредныеРаботы"));
		
		КонецЕсли;
		
		// Удалим пустые строки, если таковые образовались полсе разбиени таблицы комментрования
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияСНачалаГода);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияСНачалаГодаЕНВД);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНетБазы);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНетБазыЕНВД);
		УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментированияНачисления69);
		
		// Подключаем обработку комментирования
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		
		РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Внимание! При формировании проводок обнаружены сотрудники, по которым нет данных для формирования проводок по страховым взносам.", Перечисления.ВидыСообщений.Информация);
		
		Если ТаблицаКомментированияСНачалаГода.Количество() > 0 Тогда
		
			РазделДокументаСНачалаГода = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники по которым сформированы проводки по страховым взносам по начислениям нарастающим итогом с начала года.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияСНачалаГода, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаСНачалаГода, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНетБазы.Количество() > 0 Тогда
		
			РазделДокументаНетБазы = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНетБазы, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНетБазы, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияСНачалаГодаЕНВД.Количество() > 0 Тогда
		
			РазделДокументаСНачалаГодаЕНВД = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники по которым сформированы проводки по страховым взносам в части ЕНВД по начислениям нарастающим итогом с начала года.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияСНачалаГодаЕНВД, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаСНачалаГодаЕНВД, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНетБазыЕНВД.Количество() > 0 Тогда
		
			РазделДокументаНетБазыЕНВД = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91 (в части ЕНВД).", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНетБазыЕНВД, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНетБазыЕНВД, Ложь);
		
		КонецЕсли; 
		
		Если ТаблицаКомментированияНачисления69.Количество() > 0 Тогда
			
			РазделДокумента = ОбработкаКомментариев.ДобавитьСообщение("Внимание! При формировании проводок часть страховых взносов отражена в дебет счета 91. Есть начисления, отражаемые на счетах расчетов по социальному страхованию и обеспечению, с которых исчислены страховые взносы.", Перечисления.ВидыСообщений.Информация);
			
			РазделДокументаНачисления69 = ОбработкаКомментариев.ДобавитьСообщение("Сотрудники, по которым сформированы проводки в дебет счета 91.", Перечисления.ВидыСообщений.Информация, , РазделДокумента, Истина);
			
			ОбработкаКомментариев.ДобавитьСообщение(ТаблицаКомментированияНачисления69, Перечисления.ВидыСообщений.ТаблицаСворачиваемаяСИтогами, , РазделДокументаНачисления69, Ложь);
		
		КонецЕсли;
		
		ОбработкаКомментариев.ПоказатьСообщения();
	
	КонецЕсли; 
	
КонецПроцедуры

// Функция фозвращает таблицу значений с данными для вычисления коэффициентов отражения в учете Страховых взносов
// Параметры
//  МассивПериодовРегистрации   - массив с периодами регистрации, по которым собираем данные
//  ГоловнаяОрганизация 		– головная организация
//  МассивСчетаИсключенияРБП 	- массив счетов по которым расходы не относим на РБП
//  МассивФизлиц				- Массив физлиц, по которым собираем данные для списания РБП или получения базы с начала года
//  СворачиватьПериодДействия 	- Результат формируем без периода действия
//
// Возвращаемое значение:
//   Таблица значений 
//
Функция ПолучитьДанныеУчетаСтраховыхВзносов2017(МассивПериодовРегистрации, ГоловнаяОрганизация, МассивСчетаИсключенияРБП, МассивФизлиц = Неопределено, СворачиватьПериодДействия = Истина)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Периоды
	// Таблица список периодов, для получения учетной политики
	// Поля:
	//		Период, конец месяца
	// Описание:

	// конец месяца налогового периода
	КонецМесяца = КонецМесяца(МассивПериодовРегистрации[0]);
	// первый месяц
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы
	Для Индекс = 1 По МассивПериодовРегистрации.Количество()-1 Цикл
		КонецМесяца = КонецМесяца(МассивПериодовРегистрации[Индекс]);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(КонецМесяца,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамНеОтбиратьФизлиц", МассивФизлиц = Неопределено);
	Запрос.УстановитьПараметр("парамМассивПериодовРегистрации", МассивПериодовРегистрации);
	Запрос.УстановитьПараметр("парамМассивФизлиц", МассивФизлиц);
	Запрос.УстановитьПараметр("парамСчетаИсключенияРБП", МассивСчетаИсключенияРБП);
	Запрос.УстановитьПараметр("парамКонецГода", КонецГода(МассивПериодовРегистрации[0]));
	Запрос.УстановитьПараметр("парамФормироватьРБП", мПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска и Не мОценочныеОбязательстваФормироватьБУ);
	
	МассивПоСреднемуЗаработкуОтпуска = Новый Массив;
	МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	Запрос.УстановитьПараметр("парамПоСреднемуЗаработкуОтпуска", МассивПоСреднемуЗаработкуОтпуска);

	ИспользуетсяТрудЧленовЛетныхЭкипажей = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудЧленовЛетныхЭкипажей");
	ИспользуетсяТрудШахтеров = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуетсяТрудШахтеров");
	ИспользуютсяРаботыСДосрочнойПенсией = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуВсехОрганизаций(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), "ИспользуютсяРаботыСДосрочнойПенсией");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыСведенияОДоходах.Регистратор,
	|	СтраховыеВзносыСведенияОДоходах.НомерСтроки,
	|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СтраховыеВзносыСведенияОДоходах.ВидРасчета КАК ВидРасчета,
	|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК КодДоходаЕСН,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	СтраховыеВзносыСведенияОДоходах.Скидка
	|ПОМЕСТИТЬ ВТ_Скидки
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|	И СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|	И (&парамНеОтбиратьФизлиц
	|			ИЛИ СтраховыеВзносыСведенияОДоходах.ФизЛицо В (&парамМассивФизлиц))
	|	И СтраховыеВзносыСведенияОДоходах.Скидка <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ФизЛицо,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СкидкиКДоходам.Регистратор КАК Регистратор,
	|	СкидкиКДоходам.НомерСтроки КАК НомерСтроки,
	|	ЕСНДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|	СкидкиКДоходам.ВидРасчета КАК ВидРасчета,
	|	СкидкиКДоходам.КодДоходаЕСН КАК КодДоходаЕСН,
	|	СкидкиКДоходам.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	СкидкиКДоходам.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	СкидкиКДоходам.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСНДополнительныеНачисления.Результат КАК Результат,
	|	СкидкиКДоходам.Скидка
	|ИЗ
	|	ВТ_Скидки КАК СкидкиКДоходам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|		ПО (ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение)
	|			И СкидкиКДоходам.ФизЛицо = ЕСНДополнительныеНачисления.ФизЛицо
	|			И СкидкиКДоходам.ВидРасчета = ЕСНДополнительныеНачисления.ВидРасчета
	|			И СкидкиКДоходам.КодДоходаЕСН = ЕСНДополнительныеНачисления.КодДоходаЕСН
	|			И СкидкиКДоходам.ОблагаетсяЕНВД = ЕСНДополнительныеНачисления.ОблагаетсяЕНВД
	|			И СкидкиКДоходам.ПериодРегистрации = ЕСНДополнительныеНачисления.ПериодРегистрации
	|			И СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу = ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу
	|			И СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|			И СкидкиКДоходам.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	Сотрудник,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией";
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаСкидок = ПолучитьТаблицуСкидокКДоходам(РезультатЗапроса);
	Запрос.УстановитьПараметр("ТаблицаСкидок", ТаблицаСкидок);
	
	МассивСчет84 = Новый Массив();
	МассивСчет84.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	Запрос.УстановитьПараметр("СчетаИсключения", МассивСчет84);
	
	МассивСчет69 = Новый Массив();
	МассивСчет69.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	Запрос.УстановитьПараметр("Счета69", МассивСчет69);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета69
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счета69)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД,
	|	УчетнаяПолитика.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитика
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|			ПО Периоды.Период >= УчетнаяПолитика.Период
	|				И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитика.Период
	|			И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСкидок.Сотрудник КАК Сотрудник,
	|	ТаблицаСкидок.ВидРасчета КАК ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН КАК КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ТаблицаСкидок.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаСкидок.Скидка КАК Скидка
	|ПОМЕСТИТЬ ВТ_СкидкиКДоходамВрем
	|ИЗ
	|	&ТаблицаСкидок КАК ТаблицаСкидок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСкидок.Сотрудник,
	|	ТаблицаСкидок.ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ТаблицаСкидок.ПериодРегистрации,
	|	СУММА(ТаблицаСкидок.Скидка) КАК Скидка
	|ПОМЕСТИТЬ ВТ_СкидкиКДоходам
	|ИЗ
	|	ВТ_СкидкиКДоходамВрем КАК ТаблицаСкидок
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСкидок.Сотрудник,
	|	ТаблицаСкидок.ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ТаблицаСкидок.ПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаСкидок.ПериодРегистрации,
	|	ТаблицаСкидок.Сотрудник,
	|	ТаблицаСкидок.ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСНДополнительныеНачисления.Сотрудник,
	|	ЕСНДополнительныеНачисления.ФизЛицо,
	|	ЕСНДополнительныеНачисления.ВидРасчета,
	|	ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|	ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|	ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|	ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ЕСНДополнительныеНачисления.ПериодРегистрации,
	|	СУММА(ЕСНДополнительныеНачисления.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТ_ЕСНДополнительныеНачисления
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|		ЕСНДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН КАК КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.Результат КАК Результат
	|	ИЗ
	|		РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|	ГДЕ
	|		ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНДополнительныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК ЕСНДополнительныеНачисления
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНДополнительныеНачисления.ФизЛицо,
	|	ЕСНДополнительныеНачисления.Сотрудник,
	|	ЕСНДополнительныеНачисления.ВидРасчета,
	|	ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|	ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|	ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|	ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ЕСНДополнительныеНачисления.ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	Доходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ВидДохода.ВходитВБазуПФР КАК ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС КАК ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС КАК ВходитВБазуФОМС,
	|	Доходы.ВидДохода.ВходитВБазуФСС_НС КАК ВходитВБазуФСС_НС
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыПоВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		ЕСНОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		ЕСНОсновныеНачисления.КодДоходаЕСН КАК ВидДохода,
	|		ЕСНОсновныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНОсновныеНачисления.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНОсновныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНОсновныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		ЕСНОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ЕСНОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		ВЫБОР
	|			КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФСС_НС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Результат
	|	ИЗ
	|		РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
	|	ГДЕ
	|		ЕСНОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.Сотрудник,
	|		ЕСНДополнительныеНачисления.ФизЛицо,
	|		ЕСНДополнительныеНачисления.ВидРасчета,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|		ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФСС_НС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНДополнительныеНачисления.Результат - ЕСТЬNULL(ВТ_СкидкиКДоходам.Скидка, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТ_ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкидкиКДоходам КАК ВТ_СкидкиКДоходам
	|			ПО ЕСНДополнительныеНачисления.Сотрудник = ВТ_СкидкиКДоходам.Сотрудник
	|				И ЕСНДополнительныеНачисления.ВидРасчета = ВТ_СкидкиКДоходам.ВидРасчета
	|				И ЕСНДополнительныеНачисления.КодДоходаЕСН = ВТ_СкидкиКДоходам.КодДоходаЕСН
	|				И ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу = ВТ_СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу
	|				И ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = ВТ_СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|				И ЕСНДополнительныеНачисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ВТ_СкидкиКДоходам.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|				И ЕСНДополнительныеНачисления.ПериодРегистрации = ВТ_СкидкиКДоходам.ПериодРегистрации
	|				И ЕСНДополнительныеНачисления.ОблагаетсяЕНВД = ВТ_СкидкиКДоходам.ОблагаетсяЕНВД) КАК Доходы
	|ГДЕ
	|	Доходы.Результат <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ПериодРегистрации,
	|	Доходы.ПериодДействия,
	|	Доходы.ОблагаетсяЕНВД,
	|	Доходы.ФизЛицо,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	Доходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	Доходы.ВидДохода.ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС,
	|	Доходы.ВидДохода.ВходитВБазуФСС_НС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	ВЫБОР
	|		КОГДА НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84,
	|	ВЫБОР
	|		КОГДА ВТ_Счета69.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет69,
	|	Доходы.ЭтоОтпуск,
	|	Доходы.ДатаНачала КАК ДатаАктуальности
	|ПОМЕСТИТЬ ВТ_БУДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		БУОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		БУОсновныеНачисления.СчетДт КАК СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.Результат КАК Результат,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт,
	|		ВЫБОР
	|			КОГДА &парамФормироватьРБП
	|				ТОГДА ВЫБОР
	|						КОГДА НЕ БУОсновныеНачисления.СчетДт В (&парамСчетаИсключенияРБП)
	|								И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПодменятьСчетДтНаРБП,
	|		БУОсновныеНачисления.ВидРасчета.ЕжегодныйОтпускДляРезервов КАК ЭтоОтпуск,
	|		БУОсновныеНачисления.ПериодДействияНачало КАК ДатаНачала
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.Сотрудник,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.ВидРасчета,
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		БУДополнительныеНачисления.Результат,
	|		БУДополнительныеНачисления.ПодразделениеДт,
	|		БУДополнительныеНачисления.ПодразделениеКт,
	|		ЛОЖЬ,
	|		БУДополнительныеНачисления.ВидРасчета.ЕжегодныйОтпускДляРезервов,
	|		БУДополнительныеНачисления.ПериодРегистрации
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Доходы.ПериодРегистрации = УчетнаяПолитикаНалоговыйУчет.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
	|		ПО Доходы.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО Доходы.СчетДт = ВТ_Счета84.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета69 КАК ВТ_Счета69
	|		ПО Доходы.СчетДт = ВТ_Счета69.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ПериодРегистрации,
	|	Доходы.СчетДт,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.ПериодДействия,
	|	Доходы.ФизЛицо,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Счета69.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Доходы.ЭтоОтпуск,
	|	ВЫБОР
	|		КОГДА НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Доходы.ДатаНачала
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаАктуальности";
	Запрос.Выполнить();
	
	Если ИспользуетсяТрудЧленовЛетныхЭкипажей или ИспользуетсяТрудШахтеров или ИспользуютсяРаботыСДосрочнойПенсией Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ДатаАктуальности КАК ДатаАктуальности
		|ПОМЕСТИТЬ ВТ_СотрудникиДаты
		|ИЗ
		|	ВТ_БУДоходы КАК БУДоходы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаАктуальности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	Сотрудники.ДатаАктуальности
		|ПОМЕСТИТЬ ВТСтрокиРегистра
		|ИЗ
		|	ВТ_СотрудникиДаты КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|		ПО Сотрудники.Сотрудник = РаботникиОрганизаций.Сотрудник
		|			И Сотрудники.ДатаАктуальности >= РаботникиОрганизаций.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	Сотрудники.Сотрудник,
		|	Сотрудники.ДатаАктуальности
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиРегистра.Сотрудник,
		|	СтрокиРегистра.ДатаАктуальности,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА Работники.ПериодЗавершения <= СтрокиРегистра.ДатаАктуальности
		|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА Работники.ДолжностьЗавершения.ЯвляетсяДолжностьюЛетногоЭкипажа
		|			ИНАЧЕ Работники.Должность.ЯвляетсяДолжностьюЛетногоЭкипажа
		|		КОНЕЦ, ЛОЖЬ) КАК ОблагаетсяПоДополнительномуТарифу,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА Работники.ПериодЗавершения <= СтрокиРегистра.ДатаАктуальности
		|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА Работники.ДолжностьЗавершения.ЯвляетсяШахтерскойДолжностью
		|			ИНАЧЕ Работники.Должность.ЯвляетсяШахтерскойДолжностью
		|		КОНЕЦ, ЛОЖЬ) КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА Работники.ПериодЗавершения <= СтрокиРегистра.ДатаАктуальности
		|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА Работники.ДолжностьЗавершения.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией
		|			ИНАЧЕ Работники.Должность.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией
		|		КОНЕЦ, ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТСтрокиРегистра КАК СтрокиРегистра
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
		|		ПО СтрокиРегистра.Сотрудник = Работники.Сотрудник
		|			И СтрокиРегистра.Период = Работники.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ФизЛицо,
		|	БУДоходы.ВидРасчета КАК ВидРасчета,
		|	БУДоходы.ПериодРегистрации КАК ПериодРегистрации,
		|	БУДоходы.ПериодДействия КАК ПериодДействия,
		|	БУДоходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БУДоходы.СчетДт,
		|	БУДоходы.СубконтоДт1,
		|	БУДоходы.СубконтоДт2,
		|	БУДоходы.СубконтоДт3,
		|	БУДоходы.СчетДтНУ,
		|	БУДоходы.СубконтоДтНУ1,
		|	БУДоходы.СубконтоДтНУ2,
		|	БУДоходы.СубконтоДтНУ3,
		|	БУДоходы.СпособРаспределенияЗатрат,
		|	БУДоходы.ОтражениеВУСН,
		|	БУДоходы.Результат,
		|	БУДоходы.ПодразделениеДт,
		|	БУДоходы.ПодразделениеКт,
		|	БУДоходы.ПодменятьСчетДтНаРБП,
		|	БУДоходы.ЭтоСчет84,
		|	БУДоходы.ЭтоСчет69,
		|	БУДоходы.ЭтоОтпуск,
		|	ЕСТЬNULL(СотрудникиДопДанные.ОблагаетсяПоДополнительномуТарифу, ЛОЖЬ) КАК ОблагаетсяПоДополнительномуТарифу,
		|	ЕСТЬNULL(СотрудникиДопДанные.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам, ЛОЖЬ) КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ЕСТЬNULL(СотрудникиДопДанные.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией, ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	БУДоходы.ДатаАктуальности КАК ПериодДействияНачало
		|ИЗ
		|	ВТ_БУДоходы КАК БУДоходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК СотрудникиДопДанные
		|		ПО БУДоходы.Сотрудник = СотрудникиДопДанные.Сотрудник
		|			И БУДоходы.ДатаАктуальности = СотрудникиДопДанные.ДатаАктуальности";
		ТаблицаУчета = Запрос.Выполнить().Выгрузить();
		
		ДополнительныйЗапрос = Новый Запрос;
		ДополнительныйЗапрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета,
		|	ОсновныеНачисленияОрганизаций.ВидСтажаСЗВ4,
		|	ВЫБОР
		|		КОГДА НЕ ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
		|				И ОсновныеНачисленияОрганизаций.НачисляетсяВЦеломЗаМесяц
		|				И ОсновныеНачисленияОрганизаций.ВидСтажаСЗВ4 <> ЗНАЧЕНИЕ(Перечисление.ВидыСтажаСЗВ4.ВключаетсяВСтажДляДосрочногоНазначенияПенсии)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК РаспределяетсяВоВсехСлучаях
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнительныеНачисленияОрганизаций.Ссылка,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтажаСЗВ4.ПустаяСсылка),
		|	ИСТИНА
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций";
		Выборка = ДополнительныйЗапрос.Выполнить().Выбрать();
		ОписаниеНачислений = Новый Соответствие;
		Пока Выборка.Следующий() Цикл
			ОписаниеНачислений.Вставить(Выборка.ВидРасчета, Новый Структура("ВидСтажаСЗВ4,РаспределяетсяВоВсехСлучаях",Выборка.ВидСтажаСЗВ4,Выборка.РаспределяетсяВоВсехСлучаях))
		КонецЦикла;
		
		РасчетСтраховыхВзносов.УточнитьДанныеОРаботахСДосрочнойПенсией(
			ТаблицаУчета, 
			РасчетСтраховыхВзносов.ДолиДляРаспределенияВредности(Запрос.МенеджерВременныхТаблиц, ПериодРегистрации), 
			Истина, 
			ПериодРегистрации, 
			ОписаниеНачислений);
	
	 	Запрос.УстановитьПараметр("БУДоходы",ТаблицаУчета);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ФизЛицо,
		|	БУДоходы.ВидРасчета КАК ВидРасчета,
		|	БУДоходы.ПериодРегистрации КАК ПериодРегистрации,
		|	БУДоходы.ПериодДействия КАК ПериодДействия,
		|	БУДоходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БУДоходы.СчетДт,
		|	БУДоходы.СубконтоДт1,
		|	БУДоходы.СубконтоДт2,
		|	БУДоходы.СубконтоДт3,
		|	БУДоходы.СчетДтНУ,
		|	БУДоходы.СубконтоДтНУ1,
		|	БУДоходы.СубконтоДтНУ2,
		|	БУДоходы.СубконтоДтНУ3,
		|	БУДоходы.СпособРаспределенияЗатрат,
		|	БУДоходы.ОтражениеВУСН,
		|	БУДоходы.Результат,
		|	БУДоходы.ПодразделениеДт,
		|	БУДоходы.ПодразделениеКт,
		|	БУДоходы.ПодменятьСчетДтНаРБП,
		|	БУДоходы.ЭтоСчет84,
		|	БУДоходы.ЭтоСчет69,
		|	БУДоходы.ЭтоОтпуск,
		|	БУДоходы.ОблагаетсяПоДополнительномуТарифу,
		|	БУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	БУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТВременная
		|ИЗ
		|	&БУДоходы КАК БУДоходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Временная.Сотрудник,
		|	Временная.ФизЛицо,
		|	Временная.ВидРасчета,
		|	Временная.ПериодРегистрации,
		|	Временная.ПериодДействия,
		|	Временная.ОблагаетсяЕНВД,
		|	Временная.СчетДт,
		|	Временная.СубконтоДт1,
		|	Временная.СубконтоДт2,
		|	Временная.СубконтоДт3,
		|	Временная.СчетДтНУ,
		|	Временная.СубконтоДтНУ1,
		|	Временная.СубконтоДтНУ2,
		|	Временная.СубконтоДтНУ3,
		|	Временная.СпособРаспределенияЗатрат,
		|	Временная.ОтражениеВУСН,
		|	СУММА(Временная.Результат) КАК Результат,
		|	Временная.ПодразделениеДт,
		|	Временная.ПодразделениеКт,
		|	Временная.ПодменятьСчетДтНаРБП,
		|	Временная.ЭтоСчет84,
		|	Временная.ЭтоСчет69,
		|	Временная.ЭтоОтпуск,
		|	Временная.ОблагаетсяПоДополнительномуТарифу,
		|	Временная.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
		|ИЗ
		|	ВТВременная КАК Временная
		|
		|СГРУППИРОВАТЬ ПО
		|	Временная.Сотрудник,
		|	Временная.ФизЛицо,
		|	Временная.ВидРасчета,
		|	Временная.ПериодРегистрации,
		|	Временная.ПериодДействия,
		|	Временная.ОблагаетсяЕНВД,
		|	Временная.СчетДт,
		|	Временная.СубконтоДт1,
		|	Временная.СубконтоДт2,
		|	Временная.СубконтоДт3,
		|	Временная.СчетДтНУ,
		|	Временная.СубконтоДтНУ1,
		|	Временная.СубконтоДтНУ2,
		|	Временная.СубконтоДтНУ3,
		|	Временная.СпособРаспределенияЗатрат,
		|	Временная.ОтражениеВУСН,
		|	Временная.ПодразделениеДт,
		|	Временная.ПодразделениеКт,
		|	Временная.ПодменятьСчетДтНаРБП,
		|	Временная.ЭтоСчет84,
		|	Временная.ЭтоСчет69,
		|	Временная.ЭтоОтпуск,
		|	Временная.ОблагаетсяПоДополнительномуТарифу,
		|	Временная.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Временная.ПериодРегистрации,
		|	Временная.ПериодДействия,
		|	Временная.Сотрудник,
		|	Временная.ВидРасчета,
		|	Временная.ОблагаетсяЕНВД,
		|	Временная.ОблагаетсяПоДополнительномуТарифу,
		|	Временная.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВременная";
		
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БУДоходы.Сотрудник КАК Сотрудник,
		|	БУДоходы.ФизЛицо,
		|	БУДоходы.ВидРасчета КАК ВидРасчета,
		|	БУДоходы.ПериодРегистрации КАК ПериодРегистрации,
		|	БУДоходы.ПериодДействия КАК ПериодДействия,
		|	БУДоходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	БУДоходы.СчетДт,
		|	БУДоходы.СубконтоДт1,
		|	БУДоходы.СубконтоДт2,
		|	БУДоходы.СубконтоДт3,
		|	БУДоходы.СчетДтНУ,
		|	БУДоходы.СубконтоДтНУ1,
		|	БУДоходы.СубконтоДтНУ2,
		|	БУДоходы.СубконтоДтНУ3,
		|	БУДоходы.СпособРаспределенияЗатрат,
		|	БУДоходы.ОтражениеВУСН,
		|	БУДоходы.Результат,
		|	БУДоходы.ПодразделениеДт,
		|	БУДоходы.ПодразделениеКт,
		|	БУДоходы.ПодменятьСчетДтНаРБП,
		|	БУДоходы.ЭтоСчет84,
		|	БУДоходы.ЭтоСчет69,
		|	БУДоходы.ЭтоОтпуск,
		|	ЛОЖЬ КАК ОблагаетсяПоДополнительномуТарифу,
		|	ЛОЖЬ КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
		|ИЗ
		|	ВТ_БУДоходы КАК БУДоходы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодРегистрации,
		|	ПериодДействия,
		|	Сотрудник,
		|	ВидРасчета,
		|	ОблагаетсяЕНВД,
		|	ОблагаетсяПоДополнительномуТарифу,
		|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
		|	ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзносыДоходыПоВР.Сотрудник,
	|	ВзносыДоходыПоВР.ФизЛицо,
	|	ВзносыДоходыПоВР.ВидРасчета,
	|	БУДоходыПоВР.ОблагаетсяЕНВД,
	|	ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	ВзносыДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ВзносыДоходыПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ВзносыДоходыПоВР.ПериодРегистрации,
	|	ВзносыДоходыПоВР.ПериодДействия,
	|	ВзносыДоходыПоВР.Результат,
	|	БУДоходыПоВР.СчетДт,
	|	БУДоходыПоВР.СубконтоДт1,
	|	БУДоходыПоВР.СубконтоДт2,
	|	БУДоходыПоВР.СубконтоДт3,
	|	БУДоходыПоВР.СчетДтНУ,
	|	БУДоходыПоВР.СубконтоДтНУ1,
	|	БУДоходыПоВР.СубконтоДтНУ2,
	|	БУДоходыПоВР.СубконтоДтНУ3,
	|	БУДоходыПоВР.СпособРаспределенияЗатрат,
	|	БУДоходыПоВР.ОтражениеВУСН,
	|	БУДоходыПоВР.Результат КАК РезультатБУ,
	|	БУДоходыПоВР.ПодразделениеДт,
	|	БУДоходыПоВР.ПодразделениеКт,
	|	БУДоходыПоВР.ПодменятьСчетДтНаРБП,
	|	ВзносыДоходыПоВР.ВходитВБазуПФР,
	|	ВзносыДоходыПоВР.ВходитВБазуФСС,
	|	ВзносыДоходыПоВР.ВходитВБазуФСС_НС,
	|	ВзносыДоходыПоВР.ВходитВБазуФОМС,
	|	БУДоходыПоВР.ЭтоСчет84,
	|	БУДоходыПоВР.ЭтоСчет69,
	|	БУДоходыПоВР.ЭтоОтпуск
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыБУДоходы
	|ИЗ
	|	ВТ_ВзносыДоходыПоВР КАК ВзносыДоходыПоВР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|		ПО ВзносыДоходыПоВР.Сотрудник = БУДоходыПоВР.Сотрудник
	|			И ВзносыДоходыПоВР.ВидРасчета = БУДоходыПоВР.ВидРасчета
	|			И ВзносыДоходыПоВР.ПериодРегистрации = БУДоходыПоВР.ПериодРегистрации
	|			И ВзносыДоходыПоВР.ПериодДействия = БУДоходыПоВР.ПериодДействия
	|			И ВзносыДоходыПоВР.ОблагаетсяЕНВД = БУДоходыПоВР.ОблагаетсяЕНВД
	|			И ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу = БУДоходыПоВР.ОблагаетсяПоДополнительномуТарифу
	|			И ВзносыДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = БУДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|			И ВзносыДоходыПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = БУДоходыПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.Сотрудник КАК Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета КАК ВидРасчета,
	|	БУДоходыСводПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия КАК ПериодДействия,
	|	СУММА(БУДоходыСводПоВР.Результат) КАК Результат,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	БУДоходыСводПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|ПОМЕСТИТЬ ВТ_БУДоходыСводПоВР
	|ИЗ
	|	ВТ_БУДоходыПоВР КАК БУДоходыСводПоВР
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыСводПоВР.Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД,
	|	БУДоходыСводПоВР.ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия,
	|	БУДоходыСводПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	БУДоходыСводПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.ФизЛицо,
	|	ВзносыДоходыБУДоходы.СчетДт,
	|	ВзносыДоходыБУДоходы.СубконтоДт1,
	|	ВзносыДоходыБУДоходы.СубконтоДт2,
	|	ВзносыДоходыБУДоходы.СубконтоДт3,
	|	ВзносыДоходыБУДоходы.СчетДтНУ,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ1,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ2,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ3,
	|	ВзносыДоходыБУДоходы.СпособРаспределенияЗатрат,
	|	ВзносыДоходыБУДоходы.ОтражениеВУСН,
	|	ВзносыДоходыБУДоходы.ПодразделениеДт,
	|	ВзносыДоходыБУДоходы.ПодразделениеКт,
	|	ВзносыДоходыБУДоходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР_ЕНВД,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС_ЕНВД,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФОМС,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФОМС_ЕНВД,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаДопТариф,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаДопТарифШахтеры,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПодземныеИВредныеРаботы)
	|				И ВзносыДоходыБУДоходы.ВходитВБазуПФР
	|				И БУДоходыСводПоВР.Результат <> 0
	|			ТОГДА ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДопТарифПодземныеИВредныеРаботы,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы)
	|				И ВзносыДоходыБУДоходы.ВходитВБазуПФР
	|				И БУДоходыСводПоВР.Результат <> 0
	|			ТОГДА ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаДопТарифТяжелыеИПрочиеРаботы,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС_НС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС_НС,
	|	ВзносыДоходыБУДоходы.ПериодРегистрации,
	|	ВзносыДоходыБУДоходы.ПериодДействия,
	|	ВзносыДоходыБУДоходы.ОблагаетсяЕНВД,
	|	ВзносыДоходыБУДоходы.ЭтоСчет84,
	|	ВзносыДоходыБУДоходы.ЭтоСчет69,
	|	ВзносыДоходыБУДоходы.ЭтоОтпуск
	|ПОМЕСТИТЬ ВТ_Коэффициенты
	|ИЗ
	|	ВТ_ВзносыДоходыБУДоходы КАК ВзносыДоходыБУДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыСводПоВР КАК БУДоходыСводПоВР
	|		ПО ВзносыДоходыБУДоходы.Сотрудник = БУДоходыСводПоВР.Сотрудник
	|			И ВзносыДоходыБУДоходы.ПериодРегистрации = БУДоходыСводПоВР.ПериодРегистрации
	|			И ВзносыДоходыБУДоходы.ПериодДействия = БУДоходыСводПоВР.ПериодДействия
	|			И ВзносыДоходыБУДоходы.ОблагаетсяЕНВД = БУДоходыСводПоВР.ОблагаетсяЕНВД
	|			И ВзносыДоходыБУДоходы.ВидРасчета = БУДоходыСводПоВР.ВидРасчета
	|			И ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу = БУДоходыСводПоВР.ОблагаетсяПоДополнительномуТарифу
	|			И ВзносыДоходыБУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = БУДоходыСводПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|			И ВзносыДоходыБУДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = БУДоходыСводПоВР.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией";
	
	Запрос.Выполнить();
	
	Если СворачиватьПериодДействия Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	СУММА(Коэффициенты.БазаПФР) КАК БазаПФР,
		|	СУММА(Коэффициенты.БазаПФР_ЕНВД) КАК БазаПФР_ЕНВД,
		|	СУММА(Коэффициенты.БазаФСС) КАК БазаФСС,
		|	СУММА(Коэффициенты.БазаФСС_ЕНВД) КАК БазаФСС_ЕНВД,
		|	СУММА(Коэффициенты.БазаФОМС) КАК БазаФОМС,
		|	СУММА(Коэффициенты.БазаФОМС_ЕНВД) КАК БазаФОМС_ЕНВД,
		|	СУММА(Коэффициенты.БазаДопТариф) КАК БазаДопТариф,
		|	СУММА(Коэффициенты.БазаДопТарифШахтеры) КАК БазаДопТарифШахтеры,
		|	СУММА(Коэффициенты.БазаДопТарифПодземныеИВредныеРаботы) КАК БазаДопТарифПодземныеИВредныеРаботы,
		|	СУММА(Коэффициенты.БазаДопТарифТяжелыеИПрочиеРаботы) КАК БазаДопТарифТяжелыеИПрочиеРаботы,
		|	СУММА(Коэффициенты.БазаФСС_НС) КАК БазаФСС_НС,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69
		|ИЗ
		|	ВТ_Коэффициенты КАК Коэффициенты
		|
		|СГРУППИРОВАТЬ ПО
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69";
		
	Иначе // для списания РБП в расходы нужен период действия
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	СУММА(Коэффициенты.БазаПФР) КАК БазаПФР,
		|	СУММА(Коэффициенты.БазаПФР_ЕНВД) КАК БазаПФР_ЕНВД,
		|	СУММА(Коэффициенты.БазаФСС) КАК БазаФСС,
		|	СУММА(Коэффициенты.БазаФСС_ЕНВД) КАК БазаФСС_ЕНВД,
		|	СУММА(Коэффициенты.БазаФОМС) КАК БазаФОМС,
		|	СУММА(Коэффициенты.БазаФОМС_ЕНВД) КАК БазаФОМС_ЕНВД,
		|	СУММА(Коэффициенты.БазаДопТариф) КАК БазаДопТариф,
		|	СУММА(Коэффициенты.БазаДопТарифШахтеры) КАК БазаДопТарифШахтеры,
		|	СУММА(Коэффициенты.БазаДопТарифПодземныеИВредныеРаботы) КАК БазаДопТарифПодземныеИВредныеРаботы,
		|	СУММА(Коэффициенты.БазаДопТарифТяжелыеИПрочиеРаботы) КАК БазаДопТарифТяжелыеИПрочиеРаботы,
		|	СУММА(Коэффициенты.БазаФСС_НС) КАК БазаФСС_НС,
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПериодДействия,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69
		|ИЗ
		|	ВТ_Коэффициенты КАК Коэффициенты
		|ГДЕ
		|	(НЕ Коэффициенты.СчетДт В (&парамСчетаИсключенияРБП))
		|
		|СГРУППИРОВАТЬ ПО
		|	Коэффициенты.ПериодРегистрации,
		|	Коэффициенты.ПериодДействия,
		|	Коэффициенты.ПодменятьСчетДтНаРБП,
		|	Коэффициенты.ОблагаетсяЕНВД,
		|	Коэффициенты.ПодразделениеКт,
		|	Коэффициенты.ПодразделениеДт,
		|	Коэффициенты.СпособРаспределенияЗатрат,
		|	Коэффициенты.ОтражениеВУСН,
		|	Коэффициенты.СубконтоДтНУ3,
		|	Коэффициенты.СубконтоДтНУ2,
		|	Коэффициенты.СубконтоДтНУ1,
		|	Коэффициенты.СчетДтНУ,
		|	Коэффициенты.СубконтоДт3,
		|	Коэффициенты.СубконтоДт2,
		|	Коэффициенты.ФизЛицо,
		|	Коэффициенты.СубконтоДт1,
		|	Коэффициенты.СчетДт,
		|	Коэффициенты.ЭтоОтпуск,
		|	Коэффициенты.ЭтоСчет84,
		|	Коэффициенты.ЭтоСчет69";
		
	КонецЕсли;	
	
	Возврат  Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеУчетаСтраховыхВзносов2017()

// алгоритмы с 2017 года
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// формирование проводок по начислениям

// Процедура формирует проводки по начислениям, используется по 2010 год
Процедура ПолучитьПроводкиПоНачислениям2010(ПромежуточнаяТаблица, МассивСчетаИсключенияРБП, ГоловнаяОрганизация)
	
	Запрос = Новый Запрос;
	
	// готовим список счетов 84
	МассивСчет84 = Новый Массив();
	МассивСчет84.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	Запрос.УстановитьПараметр("СчетаИсключения", МассивСчет84);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("парамСдельныйЗаработок", Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СчетаИсключенияРБП", МассивСчетаИсключенияРБП);
	Запрос.УстановитьПараметр("СчетН70", ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда);
	Запрос.УстановитьПараметр("РБПНаОплатуТруда", Справочники.РасходыБудущихПериодов.РБПНаОплатуТруда);
	Запрос.УстановитьПараметр("Счет97",  ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);
	Запрос.УстановитьПараметр("СчетН97", ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов);	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУНачисления.СчетДт КАК СчетДт,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДт = &Счет97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА &РБПНаОплатуТруда
	|		ИНАЧЕ БУНачисления.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДт = &Счет97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА БУНачисления.Физлицо
	|		ИНАЧЕ БУНачисления.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДт = &Счет97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ БУНачисления.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|	БУНачисления.СпособРаспределенияЗатрат,
	|	БУНачисления.СчетКт КАК СчетКт,
	|	БУНачисления.СубконтоКт1 КАК СубконтоКт1,
	|	БУНачисления.СубконтоКт2 КАК СубконтоКт2,
	|	БУНачисления.СубконтоКт3 КАК СубконтоКт3,
	|	БУНачисления.СчетДтНУ,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДтНУ = &СчетН97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА &РБПНаОплатуТруда
	|		ИНАЧЕ БУНачисления.СубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДтНУ = &СчетН97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА БУНачисления.Физлицо
	|		ИНАЧЕ БУНачисления.СубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДтНУ = &СчетН97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА БУНачисления.СубконтоКтНУ2
	|		ИНАЧЕ БУНачисления.СубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	|	БУНачисления.СчетКтНУ,
	|	БУНачисления.СубконтоКтНУ1,
	|	БУНачисления.СубконтоКтНУ2,
	|	БУНачисления.СубконтоКтНУ3,
	|	БУНачисления.ОтражениеВУСН,
	|	СУММА(БУНачисления.Результат) КАК Результат,
	|	БУНачисления.ИПВидыНачисленийУдержаний КАК ИПВидНачисленияУдержания,
	|	БУНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|	БУНачисления.ПодразделениеКт,
	|	БУНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	СУММА(БУНачисления.СуммаНУ) КАК СуммаНУ,
	|	СУММА(БУНачисления.СуммаПР) КАК СуммаПР,
	|	СУММА(БУНачисления.СуммаВР) КАК СуммаВР,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84,
	|	ЕСТЬNULL(БУНачисления.СубконтоДт1.ПринятиеКналоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СчетДт
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП)
	|				ТОГДА БУОсновныеНачисления.СчетДт
	|			ИНАЧЕ &Счет97
	|		КОНЕЦ КАК СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.СчетКт КАК СчетКт,
	|		БУОсновныеНачисления.СубконтоКт1 КАК СубконтоКт1,
	|		БУОсновныеНачисления.СубконтоКт2 КАК СубконтоКт2,
	|		БУОсновныеНачисления.СубконтоКт3 КАК СубконтоКт3,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СчетДтНУ
	|			КОГДА БУОсновныеНачисления.ПериодДействия <= БУОсновныеНачисления.ПериодРегистрации
	|				ТОГДА БУОсновныеНачисления.СчетДтНУ
	|			КОГДА БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП)
	|				ТОГДА БУОсновныеНачисления.СчетДтНУ
	|			ИНАЧЕ &СчетН97
	|		КОНЕЦ КАК СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СчетКтНУ КАК СчетКтНУ,
	|		БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
	|		БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
	|		БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.ФизЛицо КАК Физлицо,
	|		БУОсновныеНачисления.Результат КАК Результат,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ КАК ИПВидыНачисленийУдержаний,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт,
	|		БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК КАК ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУОсновныеНачисления.СуммаНУ КАК СуммаНУ,
	|		БУОсновныеНачисления.СуммаПР КАК СуммаПР,
	|		БУОсновныеНачисления.СуммаВР КАК СуммаВР,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|					И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЭтоРБП
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамСдельныйЗаработок
	|		И (НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|		&Счет97,
	|		&РБПНаОплатуТруда,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.СубконтоКт3,
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА &СчетН97
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА &РБПНаОплатуТруда
	|			ИНАЧЕ БУОсновныеНачисления.СубконтоКтНУ1
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.ФизЛицо
	|			ИНАЧЕ БУОсновныеНачисления.СубконтоКтНУ2
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СубконтоКтНУ2
	|			ИНАЧЕ БУОсновныеНачисления.СубконтоКтНУ3
	|		КОНЕЦ,
	|		БУОсновныеНачисления.ОтражениеВУСН,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.Результат,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ,
	|		БУОсновныеНачисления.ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт,
	|		БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУОсновныеНачисления.СуммаНУ,
	|		БУОсновныеНачисления.СуммаПР,
	|		БУОсновныеНачисления.СуммаВР,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ПериодРегистрации < &парамПериодРегистрации
	|		И БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|		И БУОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамСдельныйЗаработок
	|		И (НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.СчетКт,
	|		БУДополнительныеНачисления.СубконтоКт1,
	|		БУДополнительныеНачисления.СубконтоКт2,
	|		БУДополнительныеНачисления.СубконтоКт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СчетКтНУ,
	|		БУДополнительныеНачисления.СубконтоКтНУ1,
	|		БУДополнительныеНачисления.СубконтоКтНУ2,
	|		БУДополнительныеНачисления.СубконтоКтНУ3,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.Результат,
	|		ВЫБОР
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоНатуральныйДоход)
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ,
	|		БУДополнительныеНачисления.ПодразделениеДт,
	|		БУДополнительныеНачисления.ПодразделениеКт,
	|		БУДополнительныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУДополнительныеНачисления.СуммаНУ,
	|		БУДополнительныеНачисления.СуммаПР,
	|		БУДополнительныеНачисления.СуммаВР,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
	|		И БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И (НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)) КАК БУНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО БУНачисления.СчетДт = ВТ_Счета84.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	БУНачисления.СчетДт,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	БУНачисления.СпособРаспределенияЗатрат,
	|	БУНачисления.СчетКт,
	|	БУНачисления.СубконтоКт1,
	|	БУНачисления.СубконтоКт2,
	|	БУНачисления.СубконтоКт3,
	|	БУНачисления.СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	|	БУНачисления.Физлицо,
	|	БУНачисления.СубконтоКтНУ1,
	|	БУНачисления.СубконтоКтНУ2,
	|	БУНачисления.СубконтоКтНУ3,
	|	БУНачисления.ОтражениеВУСН,
	|	БУНачисления.СчетКтНУ,
	|	БУНачисления.ИПВидыНачисленийУдержаний,
	|	БУНачисления.ПодразделениеДт,
	|	БУНачисления.ПодразделениеКт,
	|	БУНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДт = &Счет97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА &РБПНаОплатуТруда
	|		ИНАЧЕ БУНачисления.СубконтоДт1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДт = &Счет97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА БУНачисления.Физлицо
	|		ИНАЧЕ БУНачисления.СубконтоДт2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДт = &Счет97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ БУНачисления.СубконтоДт3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДтНУ = &СчетН97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА &РБПНаОплатуТруда
	|		ИНАЧЕ БУНачисления.СубконтоДтНУ1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДтНУ = &СчетН97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА БУНачисления.Физлицо
	|		ИНАЧЕ БУНачисления.СубконтоДтНУ2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА БУНачисления.СчетДтНУ = &СчетН97
	|				И БУНачисления.ЭтоРБП
	|			ТОГДА БУНачисления.СубконтоКтНУ2
	|		ИНАЧЕ БУНачисления.СубконтоДтНУ3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ЕСТЬNULL(БУНачисления.СубконтоДт1.ПринятиеКналоговомуУчету, ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетДт,
	|	ПодразделениеДт,
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3,
	|	СчетКт,
	|	СубконтоКт1,
	|	СубконтоКт2,
	|	СубконтоКт3
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Результат <> 0 Тогда
			
			Строка = ПромежуточнаяТаблица.Добавить();
			Строка.СчетДт			= Выборка.СчетДт;
			Строка.СубконтоДт1		= Выборка.СубконтоДт1;
			Строка.СубконтоДт2		= Выборка.СубконтоДт2;
			Строка.СубконтоДт3		= Выборка.СубконтоДт3;
			Строка.СчетКт			= Выборка.СчетКт;
			Строка.СубконтоКт1		= Выборка.СубконтоКт1;
			Строка.СубконтоКт2		= Выборка.СубконтоКт2;
			Строка.СубконтоКт3		= Выборка.СубконтоКт3;
			Строка.Сумма			= Выборка.Результат;
			
			Если мЗаполнятьДанныеНУ Тогда
				Если мЗаполнятьСчетаНУ и Не Выборка.ЭтоСчет84 Тогда
					Строка.СчетДтНУ			= Выборка.СчетДтНУ;
					Строка.СубконтоДтНУ1	= Выборка.СубконтоДтНУ1;
					Строка.СубконтоДтНУ2	= Выборка.СубконтоДтНУ2;
					Строка.СубконтоДтНУ3	= Выборка.СубконтоДтНУ3;
					Строка.СчетКтНУ			= Выборка.СчетКтНУ;
					Строка.СубконтоКтНУ1	= Выборка.СубконтоКтНУ1;
					Строка.СубконтоКтНУ2	= Выборка.СубконтоКтНУ2;
					Строка.СубконтоКтНУ3	= Выборка.СубконтоКтНУ3;
				ИначеЕсли Не Выборка.ЭтоСчет84 Тогда
					Строка.ВидНачисленийОплатыТрудаПоСтатье255НК = Выборка.ВидНачисленийОплатыТрудаПоСтатье255НК;
					Если Выборка.ПринятиеКНалоговомуУчету Тогда
						Строка.СуммаНУ = Выборка.Результат;
					Иначе
						Строка.СуммаПР = Выборка.Результат;
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;
			
			Если мУчетПоПодразделениямНаСчетах Тогда
				Строка.ПодразделениеДт = Выборка.ПодразделениеДт;
				Строка.ПодразделениеКт = Выборка.ПодразделениеКт;
			КонецЕсли;	
			
			Строка.ОтражениеВУСН		= Выборка.ОтражениеВУСН;
			Строка.СпособРаспределенияЗатрат 	= Выборка.СпособРаспределенияЗатрат;
			
			Если мИП_ОСН Тогда
				Строка.ВидНачисленияУдержания = Выборка.ИПВидНачисленияУдержания;	
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ПолучитьПроводкиПоНачислениям2010

// Процедура формирует проводки по начислениям, используется с 2011 года
Процедура ПолучитьПроводкиПоНачислениям2011(ПромежуточнаяТаблица, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, ДатаДействияПриказа186Н)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Счет97Н = ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов;
	Счет97  = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов;
	РБПНаОплатуТруда = Справочники.РасходыБудущихПериодов.РБПНаОплатуТруда;
	
	// готовим список счетов 84
	МассивСчет84 = Новый Массив();
	МассивСчет84.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	Запрос.УстановитьПараметр("СчетаИсключения", МассивСчет84);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("парамСдельныйЗаработок", Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СчетаИсключенияРБП", МассивСчетаИсключенияРБП);
	Запрос.УстановитьПараметр("СчетН70", ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда);
	Запрос.УстановитьПараметр("РБПНаОплатуТруда", РБПНаОплатуТруда);
	Запрос.УстановитьПараметр("Счет97", Счет97);
	Запрос.УстановитьПараметр("СчетН97", Счет97Н);
	Запрос.УстановитьПараметр("ДатаДействияПриказа186Н", ДатаДействияПриказа186Н);
	Запрос.УстановитьПараметр("парамФормироватьРБП", мПорядокПризнанияРасходовПоОтпускам <> Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеНачисления);
	
	ПериодыТекст = "ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ДатаДействияПриказа186Н,"ДФ=гггг,М,д,Ч,м,с") + ") КАК Период ПОМЕСТИТЬ ВТ_Периоды";
	// прибавим остальные месяцы до ПериодаРегистрации
	ОчереднойПериод = ДатаДействияПриказа186Н;
	Пока ОчереднойПериод < ПериодРегистрации Цикл
		ОчереднойПериод = ДобавитьМесяц(ОчереднойПериод,1);
		ПериодыТекст = ПериодыТекст +" ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ ДАТАВРЕМЯ(" + Формат(ОчереднойПериод,"ДФ=гггг,М,д,Ч,м,с") + ")";
	КонецЦикла;
	ПериодыТекст = ПериодыТекст +" ИНДЕКСИРОВАТЬ ПО Период";
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить(); 
	
	МассивПоСреднемуЗаработкуОтпуска = Новый Массив;
	МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	МассивПоСреднемуЗаработкуОтпуска.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	Запрос.УстановитьПараметр("парамПоСреднемуЗаработкуОтпуска", МассивПоСреднемуЗаработкуОтпуска);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	МАКСИМУМ(УчетнаяПолитикаПоРБП.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТ_ПериодыРБП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_Периоды.Период >= УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыРБП.Период КАК Период,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРБП.РасходыПоОтпускам, ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеНачисления)) КАК РасходыПоОтпускам
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаПоРБП
	|ИЗ
	|	ВТ_ПериодыРБП КАК ВТ_ПериодыРБП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_ПериодыРБП.ПериодРегистра = УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	МАКСИМУМ(УчетнаяПолитикаПоОО.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТ_ПериодыОО
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоОценочнымОбязательствам КАК УчетнаяПолитикаПоОО
	|		ПО ВТ_Периоды.Период >= УчетнаяПолитикаПоОО.Период
	|			И (УчетнаяПолитикаПоОО.Организация = &парамГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыОО.Период КАК Период,
	|	ЕСТЬNULL(УчетнаяПолитикаПоОО.ФормироватьБУ, ЛОЖЬ) КАК ФормироватьБУ,
	|	ЕСТЬNULL(УчетнаяПолитикаПоОО.ФормироватьНУ, ЛОЖЬ) КАК ФормироватьНУ,
	|	ЕСТЬNULL(УчетнаяПолитикаПоОО.ОценочноеОбязательствоДляОтпуска, ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка)) КАК ОценочноеОбязательствоДляОтпуска
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаПоОО
	|ИЗ
	|	ВТ_ПериодыОО КАК ВТ_ПериодыОО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоОценочнымОбязательствам КАК УчетнаяПолитикаПоОО
	|		ПО ВТ_ПериодыОО.ПериодРегистра = УчетнаяПолитикаПоОО.Период
	|			И (УчетнаяПолитикаПоОО.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУНачисления.СчетДт КАК СчетДт,
	|	БУНачисления.СубконтоДт1 КАК СубконтоДт1,
	|	БУНачисления.СубконтоДт2 КАК СубконтоДт2,
	|	БУНачисления.СубконтоДт3 КАК СубконтоДт3,
	|	БУНачисления.СчетКт КАК СчетКт,
	|	БУНачисления.СубконтоКт1 КАК СубконтоКт1,
	|	БУНачисления.СубконтоКт2 КАК СубконтоКт2,
	|	БУНачисления.СубконтоКт3 КАК СубконтоКт3,
	|	БУНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|	БУНачисления.СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|	БУНачисления.СчетКтНУ,
	|	БУНачисления.СубконтоКтНУ1,
	|	БУНачисления.СубконтоКтНУ2,
	|	БУНачисления.СубконтоКтНУ3,
	|	БУНачисления.ОтражениеВУСН,
	|	СУММА(БУНачисления.Результат) КАК Результат,
	|	БУНачисления.ИПВидыНачисленийУдержаний КАК ИПВидНачисленияУдержания,
	|	БУНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|	БУНачисления.ПодразделениеКт,
	|	БУНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	СУММА(БУНачисления.СуммаНУ) КАК СуммаНУ,
	|	СУММА(БУНачисления.СуммаПР) КАК СуммаПР,
	|	СУММА(БУНачисления.СуммаВР) КАК СуммаВР,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84,
	|	ЕСТЬNULL(БУНачисления.СубконтоДт1.ПринятиеКналоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|	БУНачисления.РасходыПоОтпускам КАК ПорядокПризнанияРасходовПоОтпускам,
	|	БУНачисления.ЭтоРБП,
	|	БУНачисления.Физлицо,
	|	БУНачисления.ЭтоОтпуск,
	|	БУНачисления.ВидСтроки,
	|	БУНачисления.ФормироватьБУ,
	|	БУНачисления.ФормироватьНУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.СчетДт КАК СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУОсновныеНачисления.СчетКт КАК СчетКт,
	|		БУОсновныеНачисления.СубконтоКт1 КАК СубконтоКт1,
	|		БУОсновныеНачисления.СубконтоКт2 КАК СубконтоКт2,
	|		БУОсновныеНачисления.СубконтоКт3 КАК СубконтоКт3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СчетКтНУ КАК СчетКтНУ,
	|		БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
	|		БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
	|		БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.ФизЛицо КАК Физлицо,
	|		БУОсновныеНачисления.Результат КАК Результат,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ КАК ИПВидыНачисленийУдержаний,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт,
	|		БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК КАК ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУОсновныеНачисления.СуммаНУ КАК СуммаНУ,
	|		БУОсновныеНачисления.СуммаПР КАК СуммаПР,
	|		БУОсновныеНачисления.СуммаВР КАК СуммаВР,
	|		ВЫБОР
	|			КОГДА &парамФормироватьРБП
	|					И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|					И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЭтоРБП,
	|		БУОсновныеНачисления.ВидРасчета.ЕжегодныйОтпускДляРезервов КАК ЭтоОтпуск,
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ПустаяСсылка) КАК РасходыПоОтпускам,
	|		""РасходыТекущегоПериода"" КАК ВидСтроки,
	|		ЛОЖЬ КАК ФормироватьБУ,
	|		ЛОЖЬ КАК ФормироватьНУ
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамСдельныйЗаработок
	|		И (НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3,
	|		&Счет97,
	|		&РБПНаОплатуТруда,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.СубконтоКт3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА &СчетН97
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА &РБПНаОплатуТруда
	|			ИНАЧЕ БУОсновныеНачисления.СубконтоКтНУ1
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.ФизЛицо
	|			ИНАЧЕ БУОсновныеНачисления.СубконтоКтНУ2
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СубконтоКтНУ2
	|			ИНАЧЕ БУОсновныеНачисления.СубконтоКтНУ3
	|		КОНЕЦ,
	|		БУОсновныеНачисления.ОтражениеВУСН,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.Результат,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ,
	|		БУОсновныеНачисления.ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт,
	|		БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУОсновныеНачисления.СуммаНУ,
	|		БУОсновныеНачисления.СуммаПР,
	|		БУОсновныеНачисления.СуммаВР,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ПустаяСсылка),
	|		""СписаниеИзРБП2010"",
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ПериодРегистрации < &ДатаДействияПриказа186Н
	|		И БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|		И БУОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамСдельныйЗаработок
	|		И (НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3,
	|		БУОсновныеНачисления.СчетКт,
	|		БУОсновныеНачисления.СубконтоКт1,
	|		БУОсновныеНачисления.СубконтоКт2,
	|		БУОсновныеНачисления.СубконтоКт3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3,
	|		БУОсновныеНачисления.СчетКтНУ,
	|		БУОсновныеНачисления.СубконтоКтНУ1,
	|		БУОсновныеНачисления.СубконтоКтНУ2,
	|		БУОсновныеНачисления.СубконтоКтНУ3,
	|		БУОсновныеНачисления.ОтражениеВУСН,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.Результат,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ,
	|		БУОсновныеНачисления.ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт,
	|		БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУОсновныеНачисления.СуммаНУ,
	|		БУОсновныеНачисления.СуммаПР,
	|		БУОсновныеНачисления.СуммаВР,
	|		ЛОЖЬ,
	|		БУОсновныеНачисления.ВидРасчета.ЕжегодныйОтпускДляРезервов,
	|		ПериодыРБП.РасходыПоОтпускам,
	|		""СписаниеИзРБП"",
	|		ПериодыОО.ФормироватьБУ,
	|		ПериодыОО.ФормироватьНУ
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаПоРБП КАК ПериодыРБП
	|			ПО БУОсновныеНачисления.ПериодРегистрации = ПериодыРБП.Период
	|				И (ПериодыРБП.РасходыПоОтпускам <> ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеНачисления))
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаПоОО КАК ПериодыОО
	|			ПО БУОсновныеНачисления.ПериодРегистрации = ПериодыОО.Период
	|	ГДЕ
	|		БУОсновныеНачисления.ПериодРегистрации >= &ДатаДействияПриказа186Н
	|		И БУОсновныеНачисления.ПериодРегистрации < &парамПериодРегистрации
	|		И БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамСдельныйЗаработок
	|		И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|		И (НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|		И (НЕ ПериодыРБП.Период ЕСТЬ NULL )
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетКт,
	|		БУДополнительныеНачисления.СубконтоКт1,
	|		БУДополнительныеНачисления.СубконтоКт2,
	|		БУДополнительныеНачисления.СубконтоКт3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СчетКтНУ,
	|		БУДополнительныеНачисления.СубконтоКтНУ1,
	|		БУДополнительныеНачисления.СубконтоКтНУ2,
	|		БУДополнительныеНачисления.СубконтоКтНУ3,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.Результат,
	|		ВЫБОР
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ,
	|		БУДополнительныеНачисления.ПодразделениеДт,
	|		БУДополнительныеНачисления.ПодразделениеКт,
	|		БУДополнительныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУДополнительныеНачисления.СуммаНУ,
	|		БУДополнительныеНачисления.СуммаПР,
	|		БУДополнительныеНачисления.СуммаВР,
	|		ЛОЖЬ,
	|		БУДополнительныеНачисления.ВидРасчета.ЕжегодныйОтпускДляРезервов,
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ПустаяСсылка),
	|		""РасходыТекущегоПериода"",
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
	|		И БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И (НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)) КАК БУНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО БУНачисления.СчетДт = ВТ_Счета84.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	БУНачисления.СчетДт,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	БУНачисления.СчетКт,
	|	БУНачисления.СубконтоКт1,
	|	БУНачисления.СубконтоКт2,
	|	БУНачисления.СубконтоКт3,
	|	БУНачисления.СпособРаспределенияЗатрат,
	|	БУНачисления.СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	|	БУНачисления.СубконтоКтНУ1,
	|	БУНачисления.СубконтоКтНУ2,
	|	БУНачисления.СубконтоКтНУ3,
	|	БУНачисления.ОтражениеВУСН,
	|	БУНачисления.СчетКтНУ,
	|	БУНачисления.ИПВидыНачисленийУдержаний,
	|	БУНачисления.ПодразделениеДт,
	|	БУНачисления.ПодразделениеКт,
	|	БУНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	БУНачисления.РасходыПоОтпускам,
	|	БУНачисления.ЭтоРБП,
	|	БУНачисления.Физлицо,
	|	БУНачисления.ЭтоОтпуск,
	|	БУНачисления.ВидСтроки,
	|	ЕСТЬNULL(БУНачисления.СубконтоДт1.ПринятиеКналоговомуУчету, ИСТИНА),
	|	БУНачисления.ФормироватьБУ,
	|	БУНачисления.ФормироватьНУ
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетДт,
	|	ПодразделениеДт,
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3,
	|	СчетКт,
	|	СубконтоКт1,
	|	СубконтоКт2,
	|	СубконтоКт3
	|АВТОУПОРЯДОЧИВАНИЕ";
		//{ООО "Автоматизация-Л" ДОРАБОТКА Юдин 26.07.2012 15:13} 
	// ОПИСАНИЕ: Заменяем текст запроса на собственный
	Запрос.Текст = Авт_ПолучитьТекстЗапросаПоНачислениям2011();
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Результат <> 0 Тогда
			
			Если Выборка.ВидСтроки = "СписаниеИзРБП2010" Тогда
				
				// списываем из РБП расходы 2010 года
				Строка = ПромежуточнаяТаблица.Добавить(); 
				ЗаполнитьСтрокуПроводокПоНачислениям2011(Строка, Выборка);
				
			ИначеЕсли Выборка.ВидСтроки = "РасходыТекущегоПериода" Тогда
				
				Строка = ПромежуточнаяТаблица.Добавить();
				ЗаполнитьСтрокуПроводокПоНачислениям2011(Строка, Выборка);
				
				Если НЕ Выборка.ЭтоРБП Тогда
					
					Если Выборка.ЭтоОтпуск и мЕстьОценочноеОбязательствоДляОтпуска Тогда
						
						// отразим отпуск в БУ дебет счета 96 по субконто мОценочноеОбязательствоДляОтпуска
						
						Строка.СчетДт			= ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
						Строка.СубконтоДт1		= мОценочноеОбязательствоДляОтпуска;
						Строка.СубконтоДт2		= Неопределено;
						Строка.СубконтоДт3		= Неопределено;
						
						Если мЗаполнятьДанныеНУ Тогда
							
							Если мОценочныеОбязательстваФормироватьНУ Тогда
								// в НУ списываем отпуск за счет резервов
								
								Если мЗаполнятьСчетаНУ Тогда
									Строка.СчетДтНУ			= ПланыСчетов.Налоговый.РезервыПредстоящихРасходов;
									Строка.СубконтоДтНУ1	= мОценочноеОбязательствоДляОтпуска;
									Строка.СубконтоДтНУ2	= Неопределено;
									Строка.СубконтоДтНУ3	= Неопределено;
								КонецЕсли;
								
							Иначе // в НУ списываем отпуск в расходы
								
								Если НЕ мЗаполнятьСчетаНУ Тогда
									
									Строка.СуммаНУ = 0;
									Строка.СуммаПР = 0;
									Строка.СуммаВР = Выборка.Результат;  
									
									// добавим строку для НУ
									НоваяСтрока = ПромежуточнаяТаблица.Добавить();
									ЗаполнитьСтрокуПроводокПоНачислениям2011(НоваяСтрока, Выборка);
									
									НоваяСтрока.Сумма	= 0;
									НоваяСтрока.СуммаНУ = Выборка.Результат;
									НоваяСтрока.СуммаПР = 0;
									НоваяСтрока.СуммаВР = -Выборка.Результат;
									
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				Иначе // Выборка.ЭтоРБП, проверим необходимость списание на счет 97
					
					Если Выборка.ЭтоОтпуск Тогда
						
						Если мОценочныеОбязательстваФормироватьБУ и мОценочныеОбязательстваФормироватьНУ Тогда
							
							// отпуск в БУ и НУ списываем за счет ОО и резервов
							Если ЗначениеЗаполнено(мОценочноеОбязательствоДляОтпуска) Тогда
								
								Строка.СчетДт			= ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
								Строка.СубконтоДт1		= мОценочноеОбязательствоДляОтпуска;
								Строка.СубконтоДт2		= Неопределено;
								Строка.СубконтоДт3		= Неопределено;
								
								Если мЗаполнятьДанныеНУ Тогда
									
									Если мЗаполнятьСчетаНУ Тогда
										
										Строка.СчетДтНУ			= ПланыСчетов.Налоговый.РезервыПредстоящихРасходов;
										Строка.СубконтоДтНУ1	= мОценочноеОбязательствоДляОтпуска;
										Строка.СубконтоДтНУ2	= Неопределено;
										Строка.СубконтоДтНУ3	= Неопределено;
										
									КонецЕсли;
									
								КонецЕсли;
								
							КонецЕсли;
							
						ИначеЕсли мОценочныеОбязательстваФормироватьБУ и Не мОценочныеОбязательстваФормироватьНУ Тогда
							
							// в БУ отпуск списываем за счет ОО 
							Если ЗначениеЗаполнено(мОценочноеОбязательствоДляОтпуска) Тогда
								
								Строка.СчетДт			= ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
								Строка.СубконтоДт1		= мОценочноеОбязательствоДляОтпуска;
								Строка.СубконтоДт2		= Неопределено;
								Строка.СубконтоДт3		= Неопределено;
								
							КонецЕсли;
							
							// в НУ по учетной политике РБП
							Если мЗаполнятьДанныеНУ Тогда
								
								Если мПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеНачисления Тогда
									
									Если НЕ мЗаполнятьСчетаНУ Тогда
										
										Строка.СуммаВР = Выборка.Результат;
										Строка.СуммаНУ = 0;
										Строка.СуммаПР = 0;
										
										// для НУ добавим строку
										НоваяСтрока = ПромежуточнаяТаблица.Добавить();
										ЗаполнитьСтрокуПроводокПоНачислениям2011(НоваяСтрока, Выборка);
										НоваяСтрока.Сумма	= 0;
										НоваяСтрока.СуммаПР = 0;
										НоваяСтрока.СуммаНУ = Выборка.Результат;
										НоваяСтрока.СуммаВР = -Выборка.Результат;
										
									КонецЕсли;
									
								Иначе // расходы в НУ отправляем в РБП
									
									Если мЗаполнятьСчетаНУ Тогда
										
										СчетВыбран = ЗначениеЗаполнено(Выборка.СчетДтНУ);
										
										Строка.СчетДтНУ			= ?(СчетВыбран, Счет97Н, Выборка.СчетДтНУ);
										Строка.СубконтоДтНУ1	= ?(СчетВыбран, РБПНаОплатуТруда, Выборка.СубконтоДтНУ1);
										Строка.СубконтоДтНУ2	= ?(СчетВыбран, Выборка.Физлицо, Выборка.СубконтоДтНУ2);
										Строка.СубконтоДтНУ3	= ?(СчетВыбран, Выборка.СубконтоКтНУ2, Выборка.СубконтоДтНУ3);
										
									Иначе
										
										Строка.СуммаВР = Выборка.Результат;
										Строка.СуммаНУ = 0;
										Строка.СуммаПР = 0;
										
										// для НУ добавим строку
										НоваяСтрока = ПромежуточнаяТаблица.Добавить();
										ЗаполнитьСтрокуПроводокПоНачислениям2011(НоваяСтрока, Выборка);
										НоваяСтрока.СчетДт			= Счет97;
										НоваяСтрока.СубконтоДт1		= РБПНаОплатуТруда;
										НоваяСтрока.СубконтоДт2		= Выборка.Физлицо;
										НоваяСтрока.СубконтоДт3		= Неопределено;
										НоваяСтрока.Сумма	= 0;
										НоваяСтрока.СуммаПР = 0;
										НоваяСтрока.СуммаНУ = Выборка.Результат;
										НоваяСтрока.СуммаВР = -Выборка.Результат;
										
									КонецЕсли;
									
								КонецЕсли;
								
							КонецЕсли;
								
						ИначеЕсли мПорядокПризнанияРасходовПоОтпускам <> Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеНачисления Тогда
							// ОО и резервы не формируются, списываем отпуск по учетной политике РБП
							
							Если мПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска Тогда
								
								// отправим БУ в РБП
								Строка.СчетДт			= Счет97;
								Строка.СубконтоДт1		= РБПНаОплатуТруда;
								Строка.СубконтоДт2		= Выборка.Физлицо;
								Строка.СубконтоДт3		= Неопределено;
								
							КонецЕсли;
							
							// уточним списание НУ в РБП
							Если мЗаполнятьДанныеНУ Тогда
								
								Если мЗаполнятьСчетаНУ Тогда
									
									СчетВыбран = ЗначениеЗаполнено(Выборка.СчетДтНУ);
									
									Строка.СчетДтНУ			= ?(СчетВыбран, Счет97Н, Выборка.СчетДтНУ);
									Строка.СубконтоДтНУ1	= ?(СчетВыбран, РБПНаОплатуТруда, Выборка.СубконтоДтНУ1);
									Строка.СубконтоДтНУ2	= ?(СчетВыбран, Выборка.Физлицо, Выборка.СубконтоДтНУ2);
									Строка.СубконтоДтНУ3	= ?(СчетВыбран, Выборка.СубконтоКтНУ2, Выборка.СубконтоДтНУ3);
									
								Иначе
									
									Если мПорядокПризнанияРасходовПоОтпускам <> Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска Тогда
										
										Строка.СуммаВР = Выборка.Результат;
										Строка.СуммаНУ = 0;
										Строка.СуммаПР = 0;
										
										// для НУ добавим строку
										НоваяСтрока = ПромежуточнаяТаблица.Добавить();
										ЗаполнитьСтрокуПроводокПоНачислениям2011(НоваяСтрока, Выборка);
										НоваяСтрока.СчетДт			= Счет97;
										НоваяСтрока.СубконтоДт1		= РБПНаОплатуТруда;
										НоваяСтрока.СубконтоДт2		= Выборка.Физлицо;
										НоваяСтрока.СубконтоДт3		= Неопределено;
										НоваяСтрока.Сумма	= 0;
										НоваяСтрока.СуммаПР = 0;
										НоваяСтрока.СуммаНУ = Выборка.Результат;
										НоваяСтрока.СуммаВР = -Выборка.Результат;
										
									КонецЕсли;
									
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
						
					Иначе // это не отпуск, списываем в расходы с учетом учетной политики РБП
						
						Если мПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска Тогда
							
							// отправим БУ в РБП
							Строка.СчетДт			= Счет97;
							Строка.СубконтоДт1		= РБПНаОплатуТруда;
							Строка.СубконтоДт2		= Выборка.Физлицо;
							Строка.СубконтоДт3		= Неопределено;
							
						КонецЕсли;
						
						// уточним списание НУ в РБП
						Если мЗаполнятьДанныеНУ Тогда
							
							Если мЗаполнятьСчетаНУ Тогда
								
								СчетВыбран = ЗначениеЗаполнено(Выборка.СчетДтНУ);
								
								Строка.СчетДтНУ			= ?(СчетВыбран, Счет97Н, Выборка.СчетДтНУ);
								Строка.СубконтоДтНУ1	= ?(СчетВыбран, РБПНаОплатуТруда, Выборка.СубконтоДтНУ1);
								Строка.СубконтоДтНУ2	= ?(СчетВыбран, Выборка.Физлицо, Выборка.СубконтоДтНУ2);
								Строка.СубконтоДтНУ3	= ?(СчетВыбран, Выборка.СубконтоКтНУ2, Выборка.СубконтоДтНУ3);
								
							Иначе
								
								Если мПорядокПризнанияРасходовПоОтпускам <> Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска Тогда
									
									Строка.СуммаВР = Выборка.Результат;
									Строка.СуммаНУ = 0;
									Строка.СуммаПР = 0;
									
									// для НУ добавим строку
									НоваяСтрока = ПромежуточнаяТаблица.Добавить();
									ЗаполнитьСтрокуПроводокПоНачислениям2011(НоваяСтрока, Выборка);
									НоваяСтрока.СчетДт			= Счет97;
									НоваяСтрока.СубконтоДт1		= РБПНаОплатуТруда;
									НоваяСтрока.СубконтоДт2		= Выборка.Физлицо;
									НоваяСтрока.СубконтоДт3		= Неопределено;
									НоваяСтрока.Сумма	= 0;
									НоваяСтрока.СуммаПР = 0;
									НоваяСтрока.СуммаНУ = Выборка.Результат;
									НоваяСтрока.СуммаВР = -Выборка.Результат;
									
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли Выборка.ВидСтроки = "СписаниеИзРБП" Тогда
				
				Если Не Выборка.ЭтоОтпуск Тогда
					//списываем по учетной политике РБП
					
					Если Выборка.ПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска Тогда
						// в БУ и НУ списываем из РБП
						
						Строка = ПромежуточнаяТаблица.Добавить(); 
						ЗаполнитьСтрокуПроводокПоНачислениям2011(Строка, Выборка);
						
						Строка.СчетКт			= Счет97;
						Строка.СубконтоКт1		= РБПНаОплатуТруда;
						Строка.СубконтоКт2		= Выборка.Физлицо;
						Строка.СубконтоКт3		= Неопределено;
						
						Если мУчетПоПодразделениямНаСчетах Тогда
							Строка.ПодразделениеКт = Выборка.ПодразделениеДт;
						КонецЕсли;
						
						Если мЗаполнятьДанныеНУ Тогда
							
							Если мЗаполнятьСчетаНУ Тогда
								
								Строка.СчетКтНУ			= Счет97Н;
								Строка.СубконтоКтНУ1	= РБПНаОплатуТруда;
								Строка.СубконтоКтНУ2	= Выборка.Физлицо;
								Строка.СубконтоКтНУ3	= Неопределено;
								
							КонецЕсли;
							
						КонецЕсли;
						
					Иначе // Выборка.ПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.БУМесяцНачисленияНУМесяцОтпуска
						
						Если мЗаполнятьДанныеНУ Тогда
							
							Строка = ПромежуточнаяТаблица.Добавить(); 
							ЗаполнитьСтрокуПроводокПоНачислениям2011(Строка, Выборка);
							
							Если мУчетПоПодразделениямНаСчетах Тогда
								Строка.ПодразделениеКт = Выборка.ПодразделениеДт;
							КонецЕсли;
							
							Если мЗаполнятьСчетаНУ Тогда
								
								// из РБП списываем в НУ
								Строка.СчетДт = Неопределено;
								Строка.СубконтоДт1 = Неопределено;
								Строка.СубконтоДт2 = Неопределено;
								Строка.СубконтоДт3 = Неопределено;
								Строка.СчетКт = Неопределено;
								Строка.СубконтоКт1 = Неопределено;
								Строка.СубконтоКт2 = Неопределено;
								Строка.СубконтоКт3 = Неопределено;
								
								Строка.СчетКтНУ			= Счет97Н;
								Строка.СубконтоКтНУ1	= РБПНаОплатуТруда;
								Строка.СубконтоКтНУ2	= Выборка.Физлицо;
								Строка.СубконтоКтНУ3	= Неопределено;
								
							Иначе
								
								Строка.СчетКт			= Счет97;
								Строка.СубконтоКт1		= РБПНаОплатуТруда;
								Строка.СубконтоКт2		= Выборка.Физлицо;
								Строка.СубконтоКт3		= Неопределено;
								
								Строка.Сумма 	= 0;
								Строка.СуммаПР 	= 0;
								Строка.СуммаНУ 	= Выборка.Результат;
								Строка.СуммаВР 	= -Выборка.Результат;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				Иначе // отпуск, учтем формирование ОО и резервов
					
					Если Не Выборка.ФормироватьБУ и Не Выборка.ФормироватьНУ Тогда
						// ОО и резервы не формируются, списываем отпуск из РБП по учетной политике
						
						Если Выборка.ПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеОтпуска Тогда
							// в БУ и НУ списываем из РБП
							
							Строка = ПромежуточнаяТаблица.Добавить(); 
							ЗаполнитьСтрокуПроводокПоНачислениям2011(Строка, Выборка);
							
							Строка.СчетКт			= Счет97;
							Строка.СубконтоКт1		= РБПНаОплатуТруда;
							Строка.СубконтоКт2		= Выборка.Физлицо;
							Строка.СубконтоКт3		= Неопределено;
							
							Если мУчетПоПодразделениямНаСчетах Тогда
								Строка.ПодразделениеКт = Выборка.ПодразделениеДт;
							КонецЕсли;
							
							Если мЗаполнятьДанныеНУ Тогда
								
								Если мЗаполнятьСчетаНУ Тогда
									
									Строка.СчетКтНУ			= Счет97Н;
									Строка.СубконтоКтНУ1	= РБПНаОплатуТруда;
									Строка.СубконтоКтНУ2	= Выборка.Физлицо;
									Строка.СубконтоКтНУ3	= Выборка.СубконтоКтНУ2;
									
								КонецЕсли;
								
							КонецЕсли;
							
						Иначе // Выборка.ПорядокПризнанияРасходовПоОтпускам = Перечисления.ПорядокПризнанияРасходовПоОтпускам.БУМесяцНачисленияНУМесяцОтпуска
							
							Если мЗаполнятьДанныеНУ Тогда
								
								Строка = ПромежуточнаяТаблица.Добавить(); 
								ЗаполнитьСтрокуПроводокПоНачислениям2011(Строка, Выборка);
								
								Если мУчетПоПодразделениямНаСчетах Тогда
									Строка.ПодразделениеКт = Выборка.ПодразделениеДт;
								КонецЕсли;
								
								Если мЗаполнятьСчетаНУ Тогда
									
									// из РБП списываем в НУ
									Строка.СчетДт = Неопределено;
									Строка.СубконтоДт1 = Неопределено;
									Строка.СубконтоДт2 = Неопределено;
									Строка.СубконтоДт3 = Неопределено;
									Строка.СчетКт = Неопределено;
									Строка.СубконтоКт1 = Неопределено;
									Строка.СубконтоКт2 = Неопределено;
									Строка.СубконтоКт3 = Неопределено;
									
									Строка.СчетКтНУ			= Счет97Н;
									Строка.СубконтоКтНУ1	= РБПНаОплатуТруда;
									Строка.СубконтоКтНУ2	= Выборка.Физлицо;
									Строка.СубконтоКтНУ3	= Выборка.СубконтоКтНУ2;
									
								Иначе
									
									Строка.СчетКт			= Счет97;
									Строка.СубконтоКт1		= РБПНаОплатуТруда;
									Строка.СубконтоКт2		= Выборка.Физлицо;
									Строка.СубконтоКт3		= Неопределено;
									
									Строка.Сумма 	= 0;
									Строка.СуммаПР 	= 0;
									Строка.СуммаНУ 	= Выборка.Результат;
									Строка.СуммаВР 	= -Выборка.Результат;
									
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
						
					ИначеЕсли Выборка.ФормироватьБУ и Не Выборка.ФормироватьНУ Тогда
						// списываем из РБП в НУ 
						
						Если мЗаполнятьДанныеНУ Тогда
								
								Строка = ПромежуточнаяТаблица.Добавить(); 
								ЗаполнитьСтрокуПроводокПоНачислениям2011(Строка, Выборка);
								
								Если мУчетПоПодразделениямНаСчетах Тогда
									Строка.ПодразделениеКт = Выборка.ПодразделениеДт;
								КонецЕсли;
								
								Если мЗаполнятьСчетаНУ Тогда
									
									// из РБП списываем в НУ
									Строка.СчетДт = Неопределено;
									Строка.СубконтоДт1 = Неопределено;
									Строка.СубконтоДт2 = Неопределено;
									Строка.СубконтоДт3 = Неопределено;
									Строка.СчетКт = Неопределено;
									Строка.СубконтоКт1 = Неопределено;
									Строка.СубконтоКт2 = Неопределено;
									Строка.СубконтоКт3 = Неопределено;
									
									Строка.СчетКтНУ			= Счет97Н;
									Строка.СубконтоКтНУ1	= РБПНаОплатуТруда;
									Строка.СубконтоКтНУ2	= Выборка.Физлицо;
									Строка.СубконтоКтНУ3	= Выборка.СубконтоКтНУ2;
									
								Иначе
									
									Строка.СчетКт			= Счет97;
									Строка.СубконтоКт1		= РБПНаОплатуТруда;
									Строка.СубконтоКт2		= Выборка.Физлицо;
									Строка.СубконтоКт3		= Неопределено;
									
									Строка.Сумма 	= 0;
									Строка.СуммаПР 	= 0;
									Строка.СуммаНУ 	= Выборка.Результат;
									Строка.СуммаВР 	= -Выборка.Результат;
									
								КонецЕсли;
								
							КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуПроводокПоНачислениям2011(Строка, Выборка)
	
	Строка.СчетДт			= Выборка.СчетДт;
	Строка.СубконтоДт1		= Выборка.СубконтоДт1;
	Строка.СубконтоДт2		= Выборка.СубконтоДт2;
	Строка.СубконтоДт3		= Выборка.СубконтоДт3;
	Строка.СчетКт			= Выборка.СчетКт;
	Строка.СубконтоКт1		= Выборка.СубконтоКт1;
	Строка.СубконтоКт2		= Выборка.СубконтоКт2;
	Строка.СубконтоКт3		= Выборка.СубконтоКт3;
	Строка.Сумма			= Выборка.Результат;
	
	Если мУчетПоПодразделениямНаСчетах Тогда
		Строка.ПодразделениеДт = Выборка.ПодразделениеДт;
		Строка.ПодразделениеКт = Выборка.ПодразделениеКт;
	КонецЕсли;	
	Строка.ОтражениеВУСН = Выборка.ОтражениеВУСН;
	Строка.СпособРаспределенияЗатрат = Выборка.СпособРаспределенияЗатрат;
	
	Если мИП_ОСН Тогда
		Строка.ВидНачисленияУдержания = Выборка.ИПВидНачисленияУдержания;	
	КонецЕсли;
		
	Если мЗаполнятьДанныеНУ и Не Выборка.ЭтоСчет84 Тогда
		
		Если мЗаполнятьСчетаНУ Тогда
			
			Строка.СчетДтНУ			= Выборка.СчетДтНУ;
			Строка.СубконтоДтНУ1	= Выборка.СубконтоДтНУ1;
			Строка.СубконтоДтНУ2	= Выборка.СубконтоДтНУ2;
			Строка.СубконтоДтНУ3	= Выборка.СубконтоДтНУ3;
			Строка.СчетКтНУ			= Выборка.СчетКтНУ;
			Строка.СубконтоКтНУ1	= Выборка.СубконтоКтНУ1;
			Строка.СубконтоКтНУ2	= Выборка.СубконтоКтНУ2;
			Строка.СубконтоКтНУ3	= Выборка.СубконтоКтНУ3;
			
		Иначе
			
			Строка.ВидНачисленийОплатыТрудаПоСтатье255НК = Выборка.ВидНачисленийОплатыТрудаПоСтатье255НК;
			Если Выборка.ПринятиеКНалоговомуУчету Тогда
				Строка.СуммаНУ = Выборка.Результат;
			Иначе
				Строка.СуммаПР = Выборка.Результат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


// формирование проводок по начислениям
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// формирование проводок по резервам

Процедура СформироватьПроводкиПоРезервамДо2011(ТаблицаПроводкиПоРезервам)

	// запрос по соответсвиям статей затрат начислений 
	//  для подстановки статей затрат при формировании проводок резервам
	// (перечисление ВидыДополнительныхСтатейЗатрат)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
	|ИЗ
	|   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Справочник.Резервы";
	ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
	ПараметрыПолученияСубконто = Новый Соответствие;
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БУНачисления.СчетДт КАК СчетДт,
	|	БУНачисления.СубконтоДт1 КАК СубконтоДт1,
	|	БУНачисления.СубконтоДт2 КАК СубконтоДт2,
	|	БУНачисления.СубконтоДт3 КАК СубконтоДт3,
	|	БУНачисления.СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	|	СУММА(БУНачисления.Результат) * БУНачисления.Размер / 100 КАК Результат,
	|	БУНачисления.Резерв КАК Резерв,
	|	БУНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|	БУНачисления.ПодразделениеКт
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУНачисления.СчетДт КАК СчетДт,
	|		БУНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУНачисления.Результат КАК Результат,
	|		РазмерыОтчисленийВРезервы.Резерв КАК Резерв,
	|		РазмерыОтчисленийВРезервы.Размер КАК Размер,
	|		БУНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУНачисления.ПодразделениеКт КАК ПодразделениеКт
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыОтчисленийВРезервы.СрезПоследних(&парамПериодРегистрации, Организация = &Организация) КАК РазмерыОтчисленийВРезервы
	|			ПО (РазмерыОтчисленийВРезервы.Размер > 0)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Резервы.БазовыеВидыРасчета КАК БазовыеВидыРасчета
	|			ПО (РазмерыОтчисленийВРезервы.Резерв = БазовыеВидыРасчета.Ссылка)
	|				И ((ВЫРАЗИТЬ(БазовыеВидыРасчета.ВидРасчета КАК ПланВидовРасчета.ОсновныеНачисленияОрганизаций)) = БУНачисления.ВидРасчета)
	|	ГДЕ
	|		БУНачисления.ПериодРегистрации = &парамПериодРегистрации
	|		И БУНачисления.ОбособленноеПодразделение = &Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУНачисления.СчетДт,
	|		БУНачисления.СубконтоДт1,
	|		БУНачисления.СубконтоДт2,
	|		БУНачисления.СубконтоДт3,
	|		БУНачисления.СчетДтНУ,
	|		БУНачисления.СубконтоДтНУ1,
	|		БУНачисления.СубконтоДтНУ2,
	|		БУНачисления.СубконтоДтНУ3,
	|		БУНачисления.Результат,
	|		РазмерыОтчисленийВРезервы.Резерв,
	|		РазмерыОтчисленийВРезервы.Размер,
	|		БУНачисления.ПодразделениеДт,
	|		БУНачисления.ПодразделениеКт
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыОтчисленийВРезервы.СрезПоследних(&парамПериодРегистрации, Организация = &Организация) КАК РазмерыОтчисленийВРезервы
	|			ПО (РазмерыОтчисленийВРезервы.Размер > 0)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Резервы.БазовыеВидыРасчета КАК БазовыеВидыРасчета
	|			ПО (РазмерыОтчисленийВРезервы.Резерв = БазовыеВидыРасчета.Ссылка)
	|				И ((ВЫРАЗИТЬ(БазовыеВидыРасчета.ВидРасчета КАК ПланВидовРасчета.ДополнительныеНачисленияОрганизаций)) = БУНачисления.ВидРасчета)
	|	ГДЕ
	|		НАЧАЛОПЕРИОДА(БУНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
	|		И БУНачисления.ОбособленноеПодразделение = &Организация) КАК БУНачисления
	|
	|СГРУППИРОВАТЬ ПО
	|	БУНачисления.СчетДт,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	БУНачисления.СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	|	БУНачисления.Резерв,
	|	БУНачисления.Размер,
	|	БУНачисления.ПодразделениеДт,
	|	БУНачисления.ПодразделениеКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	Резерв,
	|	ПодразделениеДт,
	|	СчетДт,
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезервыВыборка = Запрос.Выполнить().Выбрать();
	
	Счет96   = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
	СчетНУ96 = ПланыСчетов.Налоговый.РезервыПредстоящихРасходов;
	
	Пока РезервыВыборка.Следующий() Цикл
		
		ПараметрыПолученияСубконто[ТипСтатьиЗатрат].ВидСтатьиЗатрат = РезервыВыборка.Резерв;
		
		СтрокаТЧ = ТаблицаПроводкиПоРезервам.Добавить();
		СтрокаТЧ.СчетДт			= РезервыВыборка.СчетДт;
		СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(РезервыВыборка.СубконтоДт1, ПараметрыПолученияСубконто);
		СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(РезервыВыборка.СубконтоДт2, ПараметрыПолученияСубконто);
		СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(РезервыВыборка.СубконтоДт3, ПараметрыПолученияСубконто);
		
		СтрокаТЧ.СчетКт			= Счет96;
		СтрокаТЧ.СубконтоКт1	= РезервыВыборка.Резерв;
		
		Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
			СтрокаТЧ.СчетДтНУ		= РезервыВыборка.СчетДтНУ;
			СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(РезервыВыборка.СубконтоДтНУ1, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(РезервыВыборка.СубконтоДтНУ2, ПараметрыПолученияСубконто);
			СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(РезервыВыборка.СубконтоДтНУ3, ПараметрыПолученияСубконто);
			Если ЗначениеЗаполнено(РезервыВыборка.СчетДтНУ) Тогда
				//кредит НУ заполняем если заполнен счет дебета, т.е. это не ЕНВД
				СтрокаТЧ.СчетКтНУ		= СчетНУ96;
				СтрокаТЧ.СубконтоКтНУ1	= РезервыВыборка.Резерв;
			Иначе
				СтрокаТЧ.СчетКтНУ		= Неопределено;
				СтрокаТЧ.СубконтоКтНУ1	= Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			СтрокаТЧ.ПодразделениеДт = РезервыВыборка.ПодразделениеДт;
			СтрокаТЧ.ПодразделениеКт = РезервыВыборка.ПодразделениеКт;
		КонецЕсли;
		
		СтрокаТЧ.Сумма          = РезервыВыборка.Результат;
		Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
			СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
		КонецЕсли;	
		
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьПроводкиПоРезервам2011(ТаблицаПроводкиПоРезервам)

	Если Не мОценочныеОбязательстваФормироватьБУ Тогда
		Возврат;
	КонецЕсли;
	
	// запрос по соответсвиям статей затрат начислений 
	//  для подстановки статей затрат при формировании проводок резервам
	// (перечисление ВидыДополнительныхСтатейЗатрат)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("ЕстьЕНВД", мЕНВД);
	Запрос.УстановитьПараметр("ПоВсемРезервам", Истина);
	Запрос.УстановитьПараметр("Резерв", Неопределено);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
	|	СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
	|	СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
	|ИЗ
	|	РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|	СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Справочник.Резервы";
	
	ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконтоРезервы = Новый Соответствие;
	ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
	ПараметрыПолученияСубконтоРезервы[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	ТипСтатьиЗатрат = Тип("СправочникСсылка.ПрочиеДоходыИРасходы");
	ПараметрыПолученияСубконтоРезервы[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
	|	СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
	|	СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
	|ИЗ
	|	РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|	СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат ССЫЛКА Перечисление.ВидыДополнительныхСтатейЗатрат";
	
	ДополнительныеСтатьиЗатрат = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
	ТипСтатьиЗатрат = Тип("СправочникСсылка.СтатьиЗатрат");
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	ТипСтатьиЗатрат = Тип("СправочникСсылка.ПрочиеДоходыИРасходы");
	ПараметрыПолученияСубконто[ТипСтатьиЗатрат] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", , ДополнительныеСтатьиЗатрат);
	
	ТекстЗапроса = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьТекстЗапросаРасчетОценочныхОбязательств(мОценочныеОбязательстваПорядокРасчета);
	
	Если мОценочныеОбязательстваПорядокРасчета = Перечисления.ПорядокРасчетаОценочныхОбязательств.Начисления Тогда
		
		ТекстЗапроса = ТекстЗапроса + ";"+
		"ВЫБРАТЬ
		|	ВТСписокНачислений.Резерв,
		|	ВТСписокНачислений.ВидРасчета,
		|	ВТСписокНачислений.СчетДт,
		|	ВТСписокНачислений.СубконтоДт1,
		|	ВТСписокНачислений.СубконтоДт2,
		|	ВТСписокНачислений.СубконтоДт3,
		|	ВТСписокНачислений.СчетДтНУ,
		|	ВТСписокНачислений.СубконтоДтНУ1,
		|	ВТСписокНачислений.СубконтоДтНУ2,
		|	ВТСписокНачислений.СубконтоДтНУ3,
		|	ВТСписокНачислений.ПодразделениеДт,
		|	ВТСписокНачислений.ПодразделениеКт,
		|	СУММА(ВТСписокНачислений.Результат) КАК Результат
		|ИЗ
		|	ВТСписокНачислений КАК ВТСписокНачислений
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТСписокНачислений.ВидРасчета,
		|	ВТСписокНачислений.Резерв,
		|	ВТСписокНачислений.СчетДт,
		|	ВТСписокНачислений.СубконтоДт1,
		|	ВТСписокНачислений.СубконтоДт2,
		|	ВТСписокНачислений.СубконтоДт3,
		|	ВТСписокНачислений.СчетДтНУ,
		|	ВТСписокНачислений.СубконтоДтНУ1,
		|	ВТСписокНачислений.СубконтоДтНУ2,
		|	ВТСписокНачислений.СубконтоДтНУ3,
		|	ВТСписокНачислений.ПодразделениеДт,
		|	ВТСписокНачислений.ПодразделениеКт";
		
	Иначе // с учетом начислений и взносов
		
		ТекстЗапроса = ТекстЗапроса + ";"+
		"ВЫБРАТЬ
		|	ВТКоэффициенты.Резерв,
		|	ВТКоэффициенты.ВидРасчета,
		|	ВТКоэффициенты.СчетДт,
		|	ВТКоэффициенты.СубконтоДт1,
		|	ВТКоэффициенты.СубконтоДт2,
		|	ВТКоэффициенты.СубконтоДт3,
		|	ВТКоэффициенты.СчетДтНУ,
		|	ВТКоэффициенты.СубконтоДтНУ1,
		|	ВТКоэффициенты.СубконтоДтНУ2,
		|	ВТКоэффициенты.СубконтоДтНУ3,
		|	ВТКоэффициенты.ПодразделениеДт,
		|	ВТКоэффициенты.ПодразделениеКт,
		|	СУММА(ВТКоэффициенты.Результат) КАК Результат,
		|	СУММА(ВТКоэффициенты.ПФРПоСуммарномуТарифу + ВТКоэффициенты.ПФРПоСуммарномуТарифуЕНВД + ВТКоэффициенты.ПФРСтраховая + ВТКоэффициенты.ПФРСтраховаяЕНВД + ВТКоэффициенты.ПФРНакопительная + ВТКоэффициенты.ПФРНакопительнаяЕНВД + ВТКоэффициенты.ФФОМС + ВТКоэффициенты.ФФОМСЕНВД + ВТКоэффициенты.ТФОМС + ВТКоэффициенты.ТФОМСЕНВД + ВТКоэффициенты.ФСС + ВТКоэффициенты.ФССЕНВД + ВТКоэффициенты.ПФРПоДополнительномуТарифу + ВТКоэффициенты.ПФРНаДоплатуКПенсииШахтерам) КАК РезультатВзносы,
		|	СУММА(ВТКоэффициенты.ФССНесчастныеСлучаи) КАК РезультатВзносыФССНесчастныеСлучаи
		|ИЗ
		|	ВТКоэффициенты КАК ВТКоэффициенты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТКоэффициенты.Резерв,
		|	ВТКоэффициенты.ВидРасчета,
		|	ВТКоэффициенты.СчетДт,
		|	ВТКоэффициенты.СубконтоДт1,
		|	ВТКоэффициенты.СубконтоДт2,
		|	ВТКоэффициенты.СубконтоДт3,
		|	ВТКоэффициенты.СчетДтНУ,
		|	ВТКоэффициенты.СубконтоДтНУ1,
		|	ВТКоэффициенты.СубконтоДтНУ2,
		|	ВТКоэффициенты.СубконтоДтНУ3,
		|	ВТКоэффициенты.ПодразделениеДт,
		|	ВТКоэффициенты.ПодразделениеКт";

	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	МассивРезультатов = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = МассивРезультатов.Количество();
	
	РезультатНачислено = МассивРезультатов[КоличествоРезультатов-2];
	ТаблицаКоэффициентов = МассивРезультатов[КоличествоРезультатов-1].Выгрузить();
	ТаблицаКоэффициентов.Индексы.Добавить("Резерв");
	ТаблицаКоэффициентов.Индексы.Добавить("ВидРасчета");
	
	ВыборкаНачислено = РезультатНачислено.Выбрать();
	
	Счет96   = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
	СчетНУ96 = ПланыСчетов.Налоговый.РезервыПредстоящихРасходов;
	
	ЗаполнятьПодразделениеКт = мУчетПоПодразделениямНаСчетах;
	
	Пока ВыборкаНачислено.Следующий() Цикл
		
		ПараметрыПолученияСубконтоРезервы[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = ВыборкаНачислено.Резерв;
		ПараметрыПолученияСубконтоРезервы[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = ВыборкаНачислено.Резерв;
		
		Отбор = Новый Структура("Резерв, ВидРасчета");
		Отбор.Резерв = ВыборкаНачислено.Резерв;
		Отбор.ВидРасчета = ВыборкаНачислено.ВидРасчета;
		
		СтрокиОтражения = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтражения,"Результат");
		Результаты   = ОбщегоНазначенияЗК.РаспределитьПропорционально(ВыборкаНачислено.РазмерОтчислений, Коэффициенты);

		Если мОценочныеОбязательстваПорядокРасчета = Перечисления.ПорядокРасчетаОценочныхОбязательств.НачисленияИВзносы Тогда
			
			КоэффициентыВзносы = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтражения,"РезультатВзносы");
			РезультатыВзносы   = ОбщегоНазначенияЗК.РаспределитьПропорционально(ВыборкаНачислено.РазмерОтчисленийВзносы, КоэффициентыВзносы);
			
			КоэффициентыВзносыФССНесчастныеСлучаи = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтражения,"РезультатВзносыФССНесчастныеСлучаи");
			РезультатыВзносыФССНесчастныеСлучаи   = ОбщегоНазначенияЗК.РаспределитьПропорционально(ВыборкаНачислено.РазмерОтчисленийФССНесчастныеСлучаи, КоэффициентыВзносыФССНесчастныеСлучаи);
				
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
			
			Если Результаты <> Неопределено Тогда

				СтрокаТЧ = ТаблицаПроводкиПоРезервам.Добавить();
				СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
				СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконтоРезервы);
				СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконтоРезервы);
				СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконтоРезервы);
				
				СтрокаТЧ.Сумма          = Результаты[Индекс];
				
				СтрокаТЧ.СчетКт			= Счет96;
				СтрокаТЧ.СубконтоКт1	= СтрокаОтражения.Резерв;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и мОценочныеОбязательстваФормироватьНУ Тогда
					СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
					СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконтоРезервы);
					СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконтоРезервы);
					СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконтоРезервы);
					Если ЗначениеЗаполнено(СтрокаОтражения.СчетДтНУ) Тогда
						//кредит НУ заполняем если заполнен счет дебета, т.е. это не ЕНВД
						СтрокаТЧ.СчетКтНУ		= СчетНУ96;
						СтрокаТЧ.СубконтоКтНУ1	= СтрокаОтражения.Резерв;
					Иначе
						СтрокаТЧ.СчетКтНУ		= Неопределено;
						СтрокаТЧ.СубконтоКтНУ1	= Неопределено;
					КонецЕсли;
				КонецЕсли;
				
				Если мУчетПоПодразделениямНаСчетах Тогда  
					СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
					Если ЗаполнятьПодразделениеКт Тогда
						СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
					КонецЕсли;
				КонецЕсли;
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					
					Если мОценочныеОбязательстваФормироватьНУ Тогда
						СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
					Иначе
						СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
					КонецЕсли;
					
				КонецЕсли;	
				
			КонецЕсли;
			
			Если мОценочныеОбязательстваПорядокРасчета = Перечисления.ПорядокРасчетаОценочныхОбязательств.НачисленияИВзносы Тогда
				
				Если РезультатыВзносы <> Неопределено Тогда
					
					ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
					ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.СтраховыеВзносы;
					
					СтрокаТЧ = ТаблицаПроводкиПоРезервам.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
					
					СтрокаТЧ.Сумма          = РезультатыВзносы[Индекс];
					
					СтрокаТЧ.СчетКт			= Счет96;
					СтрокаТЧ.СубконтоКт1	= СтрокаОтражения.Резерв;
					
					Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и мОценочныеОбязательстваФормироватьНУ Тогда
						СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
						СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
						СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
						СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
						Если ЗначениеЗаполнено(СтрокаОтражения.СчетДтНУ) Тогда
							//кредит НУ заполняем если заполнен счет дебета, т.е. это не ЕНВД
							СтрокаТЧ.СчетКтНУ		= СчетНУ96;
							СтрокаТЧ.СубконтоКтНУ1	= СтрокаОтражения.Резерв;
						Иначе
							СтрокаТЧ.СчетКтНУ		= Неопределено;
							СтрокаТЧ.СубконтоКтНУ1	= Неопределено;
						КонецЕсли;
					КонецЕсли;
					
					Если мУчетПоПодразделениямНаСчетах Тогда  
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						Если ЗаполнятьПодразделениеКт Тогда
							СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
						КонецЕсли;
					КонецЕсли;
					
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						
						Если мОценочныеОбязательстваФормироватьНУ Тогда
							СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
						Иначе
							СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
				// ФСС_НС
				
				Если РезультатыВзносыФССНесчастныеСлучаи <> Неопределено Тогда
					
					ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
					ПараметрыПолученияСубконто[Тип("СправочникСсылка.ПрочиеДоходыИРасходы")].ВидСтатьиЗатрат = Перечисления.ВидыДополнительныхСтатейЗатрат.ФСС_НС;
					
					СтрокаТЧ = ТаблицаПроводкиПоРезервам.Добавить();
					СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
					СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
					СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
					СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
					
					СтрокаТЧ.Сумма          = РезультатыВзносыФССНесчастныеСлучаи[Индекс];
					
					СтрокаТЧ.СчетКт			= Счет96;
					СтрокаТЧ.СубконтоКт1	= СтрокаОтражения.Резерв;
					
					Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и мОценочныеОбязательстваФормироватьНУ Тогда
						СтрокаТЧ.СчетДтНУ		= СтрокаОтражения.СчетДтНУ;
						СтрокаТЧ.СубконтоДтНУ1	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ1, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
						СтрокаТЧ.СубконтоДтНУ2	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ2, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
						СтрокаТЧ.СубконтоДтНУ3	= ПолучитьСубконто(ПолучитьСубконто(СтрокаОтражения.СубконтоДтНУ3, ПараметрыПолученияСубконто),ПараметрыПолученияСубконтоРезервы);
						Если ЗначениеЗаполнено(СтрокаОтражения.СчетДтНУ) Тогда
							//кредит НУ заполняем если заполнен счет дебета, т.е. это не ЕНВД
							СтрокаТЧ.СчетКтНУ		= СчетНУ96;
							СтрокаТЧ.СубконтоКтНУ1	= СтрокаОтражения.Резерв;
						Иначе
							СтрокаТЧ.СчетКтНУ		= Неопределено;
							СтрокаТЧ.СубконтоКтНУ1	= Неопределено;
						КонецЕсли;
					КонецЕсли;
					
					Если мУчетПоПодразделениямНаСчетах Тогда  
						СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
						Если ЗаполнятьПодразделениеКт Тогда
							СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
						КонецЕсли;
					КонецЕсли;
					
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						
						Если мОценочныеОбязательстваФормироватьНУ Тогда
							СтрокаТЧ.СуммаНУ = СтрокаТЧ.Сумма;
						Иначе
							СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
						КонецЕсли;
						
					КонецЕсли;	
					
				КонецЕсли;
				
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;			
		
	КонецЦикла;

КонецПроцедуры

// формирование проводок по резервам
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// Обработка данных учета

// Процедура формирует набор записей по данным из запроса
// Параметры:
//	РезультатДанныеУчета		- выборка по резултату запроса, возвращенная функцией 
//								  ПолучитьДанныеУчета
//	Успешно						- в этот параметр возвращается значение Ложь, если обработка не выполнена
//								  (например, если не оказалось базовых данных)
//	НаборЗаписей - набор записей
//
//	ПараметрыПолученияСубконто - структура, в которой хранится соответствие статей затрат начислений и 
//								 статей отражения в учете б/л, для отражения доли б/з за счет работодателя
//
// Возвращаемое значение:
//	массив категорий начислений
//
Процедура ОбработатьДанныеУчетаДо2011(РезультатДанныеУчета, Успешно, НаборЗаписей, ПараметрыПолученияСубконто)
	// признак основных начислений
	ЭтоОсновныеНачисления = (ТипЗнч(НаборЗаписей) = Тип("РегистрРасчетаНаборЗаписей.БУОсновныеНачисления"));
	
	// пустая ссылка на счет - для проверок способов отражения в бухучете
	ПустойСчет = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	
	Счет70 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
	
	ДатаЗакона180ФЗ = '20060101';
	ДатаЗакона255ФЗ = ПроведениеРасчетовДополнительный.ПолучитьДатуВступленияВСилуИзмененийПоСоциальнымПособиям2006();
	
	// структура поиска для позиционирования в ДанныеНалоговогоУчетаВспомогательные
	// при необходимости суммирования "базовых" ресурсов
	СтруктураПоиска = Новый Структура("Регистратор,НомерСтроки");
	
	// структура поиска в таблице ошибок мТаблицаОшибок
	СтруктураПоискаОшибок = Новый Структура("Регистратор,НомерСтроки,КодОшибки");
	
	// основная выборка - по ней ведем обход и вводим записи движений
	ДанныеУчета = РезультатДанныеУчета.Выбрать();
	
	// вспомогательная выборка - по ней ведем суммирование базовых результатов
	ДанныеУчетаВспомогательные = РезультатДанныеУчета.Выбрать();
	
	ЭтоПособиеС2010г = ПериодРегистрации >= ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	
	ПродолжатьОбработку = ДанныеУчета.Следующий();
	Пока ПродолжатьОбработку Цикл
		
		СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
		
		Если ДанныеУчета.Сторно Тогда
			
			// необходимо обойти все данные относящиеся к одной строке основного регистра и 
			// выполнить распределение, нормируя на долю 
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если ДанныеУчетаВспомогательные.РезультатСторно = NULL Тогда
					//для сторно-записи нет данных отражения в учете
					Успешно = Ложь;
					ЗарегистрироватьОшибкуОбработкиДанныхУчета(ДанныеУчетаВспомогательные, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, 1);
				Иначе
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатСторно;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатСторно = NULL Тогда
						Доля = 0;
					Иначе
						Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатСторно / СуммаПоСтроке,2);
					КонецЕсли;
				КонецЕсли;
				
				// единственное отличие от обработки данных распределяемых по базе - 
				// данные учета получаем не из полей запроса ...Разрез, а из "обычных" полей 
				СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
				СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
				СтрокаДанных.СубконтоКт1 = ДанныеУчета.СубконтоКт1;
				СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
				СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СчетДтНУ 	   = ДанныеУчета.СчетДтНУ;
					СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
					СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
					СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
					СтрокаДанных.СчетКтНУ	   = ДанныеУчета.СчетКтНУ;
					СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
					СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
					СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
				КонецЕсли;
				
				СтрокаДанных.ОтражениеВУСН = ДанныеУчета.ОтражениеВУСН;
				
				// автозаполним субконто
				АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);
				
				СтрокаДанных.Результат = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
				КонецЕсли;
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
				
				Если ДанныеУчета.ЭтоПособияФСС и ДанныеУчета.ПериодДействияНачалоСторно <> NULL Тогда
					СтрокаДанных.ПериодДействияНачало = ДанныеУчета.ПериодДействияНачалоСторно;	
					СтрокаДанных.ПериодДействияКонец  = ДанныеУчета.ПериодДействияКонецСторно;
				КонецЕсли;	
				
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Результат = СтрокаДанных.Результат + ПолныйРезультат - СуммарнаяДоля;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
			КонецЕсли;
		ИначеЕсли ДанныеУчета.ЭтоЕдиновременноеПособиеФСС Тогда
			
			Если мЕНВД и ДанныеУчета.ПроцентЕНВД = 100 Тогда
				
				СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
				СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
				СтрокаДанных.СубконтоДт2 = Неопределено;
				СтрокаДанных.СубконтоДт3 = Неопределено;
				СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
				СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
				СтрокаДанных.СубконтоКт2 = Неопределено;
				СтрокаДанных.СубконтоКт3 = Неопределено;
				СтрокаДанных.СчетДтНУ	 = Неопределено;
				СтрокаДанных.СчетКтНУ	 = Неопределено;
				СтрокаДанных.СубконтоДтНУ1 = Неопределено;
				СтрокаДанных.СубконтоДтНУ2 = Неопределено;
				СтрокаДанных.СубконтоДтНУ3 = Неопределено;
				СтрокаДанных.СубконтоКтНУ1 = Неопределено;
				СтрокаДанных.СубконтоКтНУ2 = Неопределено;
				СтрокаДанных.СубконтоКтНУ3 = Неопределено;
				
			ИначеЕсли мУСН Тогда
				
				СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_УСН;
				СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
				СтрокаДанных.СубконтоДт2 = Неопределено;
				СтрокаДанных.СубконтоДт3 = Неопределено;
				СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
				СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
				СтрокаДанных.СубконтоКт2 = Неопределено;
				СтрокаДанных.СубконтоКт3 = Неопределено;
				СтрокаДанных.СчетДтНУ	 = Неопределено;
				СтрокаДанных.СчетКтНУ	 = Неопределено;
				СтрокаДанных.СубконтоДтНУ1 = Неопределено;
				СтрокаДанных.СубконтоДтНУ2 = Неопределено;
				СтрокаДанных.СубконтоДтНУ3 = Неопределено;
				СтрокаДанных.СубконтоКтНУ1 = Неопределено;
				СтрокаДанных.СубконтоКтНУ2 = Неопределено;
				СтрокаДанных.СубконтоКтНУ3 = Неопределено;
				СтрокаДанных.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются;
				
			Иначе	
				
				СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
				СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
				СтрокаДанных.СубконтоДт2 = Неопределено;
				СтрокаДанных.СубконтоДт3 = Неопределено;
				СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
				СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
				СтрокаДанных.СубконтоКт2 = Неопределено;
				СтрокаДанных.СубконтоКт3 = Неопределено;
				СтрокаДанных.СчетДтНУ	 = Неопределено;
				СтрокаДанных.СчетКтНУ	 = Неопределено;
				СтрокаДанных.СубконтоДтНУ1 = Неопределено;
				СтрокаДанных.СубконтоДтНУ2 = Неопределено;
				СтрокаДанных.СубконтоДтНУ3 = Неопределено;
				СтрокаДанных.СубконтоКтНУ1 = Неопределено;
				СтрокаДанных.СубконтоКтНУ2 = Неопределено;
				СтрокаДанных.СубконтоКтНУ3 = Неопределено;
				
			КонецЕсли;
			
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
			КонецЕсли;
			
			ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
			
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;
			
		ИначеЕсли ДанныеУчета.ЭтоПособияФСС Тогда
			
			//
			// обработаем записи расчета пособий
			//
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			Если ЭтоПособиеС2010г Тогда
				
				СуммаПоСтроке = 0;
				СуммаПоСтрокеЕНВД = 0;
				РегистрироватьОшибку = Ложь;
				
				Если ДанныеУчета.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления Тогда
					// суммируем базовые ресурсы по текущей строке набора записей
					Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
						Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
							РегистрироватьОшибку = Истина;
						Иначе
							СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
							Если ДанныеУчетаВспомогательные.БазаСреднегоЗаработкаЕНВД Тогда
								СуммаПоСтрокеЕНВД = СуммаПоСтрокеЕНВД + ДанныеУчетаВспомогательные.РезультатБаза;
							КонецЕсли;						
						КонецЕсли;
						Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
				ИначеЕсли НЕ ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя И ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание Тогда
					// суммируем базовые ресурсы по текущей строке набора записей
					// сюда попали когда для БЛ доля ЕНВД определяется по текущему месяцу, а доля за счет работодателя распределяется по базовым начислениям
					Если ЗначениеЗаполнено(ДанныеУчета.ДоляСпособаОтражения) Тогда
						Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
							Если НЕ ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
								СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
								Если ЗначениеЗаполнено(ДанныеУчетаВспомогательные.ПроцентЕНВД) Тогда
									СуммаПоСтрокеЕНВД = СуммаПоСтрокеЕНВД + ДанныеУчетаВспомогательные.РезультатБаза;
								КонецЕсли;						
							КонецЕсли;
							Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
					Иначе
						Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
							Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
								//нет данных о базовых начислениях
								РегистрироватьОшибку = Истина;
							Иначе 
								СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
							КонецЕсли;
							Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
						СуммаПоСтрокеЕНВД = Окр(СуммаПоСтроке * ДанныеУчета.ПроцентЕНВД / 100,2);	
					КонецЕсли;	
					
				ИначеЕсли ЗначениеЗаполнено(ДанныеУчета.ДоляСпособаОтражения)  Тогда
					// для пособий полностью выплачиваемых за счет ФСС, по которым необходимо определить долю ЕНВД по текущему месяцу
					// суммируем базовые ресурсы по текущей строке набора записей
					Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
						Если Не ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
							СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
							Если ЗначениеЗаполнено(ДанныеУчетаВспомогательные.ПроцентЕНВД) Тогда
								СуммаПоСтрокеЕНВД = СуммаПоСтрокеЕНВД + ДанныеУчетаВспомогательные.РезультатБаза;
							КонецЕсли;						
						КонецЕсли;
						Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
				ИначеЕсли ДанныеУчета.ПроцентЕНВД = 100 Тогда
					СуммаПоСтроке = ДанныеУчета.Результат;
					СуммаПоСтрокеЕНВД = ДанныеУчета.Результат;
				ИначеЕсли ДанныеУчета.ПроцентЕНВД = 0 Тогда
					СуммаПоСтроке = ДанныеУчета.Результат;
				Иначе
					СуммаПоСтроке = ДанныеУчета.Результат;
					СуммаПоСтрокеЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
				КонецЕсли;
				
				Если РегистрироватьОшибку Тогда
					
					// не удалось собрать данные для отражения в учете пособия, необходимо разобраться зачем мы собирали расчетную базу
					
					// ДоляЕНВДПоБазе - необходимо было собирать долю ЕНВД по базовым начислениям
					ДоляЕНВДПоБазе =  мЕНВД и ДанныеУчета.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления;
					
					// ДоляРаботодателяПоБазе - необходимо было собирать долю пособия за счет работодателя по базе
					// данные по базе нужны для 2-х календарных дней при ОСН и при УСН доходы минус расходы
					ДоляРаботодателяПоБазе = Не ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя и ДанныеУчета.ДоляБЛЗаСчетРаботодателя <> 0
					и ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание
					И (НЕ мУСН или (мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы));
					
					Если Не ДоляЕНВДПоБазе и Не ДоляРаботодателяПоБазе Тогда
						// данные, собранные по базе не нужны, рассчитаем долю ЕНВД
						Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
							СуммаПоСтроке = ДанныеУчета.Результат;
							СуммаПоСтрокеЕНВД = ДанныеУчета.Результат;
						ИначеЕсли ДанныеУчета.ПроцентЕНВД = 0 Тогда
							СуммаПоСтроке = ДанныеУчета.Результат;
						Иначе
							СуммаПоСтроке = ДанныеУчета.Результат;
							СуммаПоСтрокеЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
						КонецЕсли;
					Иначе // не удалось собрать данные по базе
						
						Если Не ДоляЕНВДПоБазе Тогда
							// данные по базе нужны только для распределения по счетам затрат доли пособия за счет работодателя
							// соберм суммы и продолжим работу, при этом счет затрат для пособия за счет работодателя будет пустой
							Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
								СуммаПоСтроке = ДанныеУчета.Результат;
								СуммаПоСтрокеЕНВД = ДанныеУчета.Результат;
							ИначеЕсли ДанныеУчета.ПроцентЕНВД = 0 Тогда
								СуммаПоСтроке = ДанныеУчета.Результат;
							Иначе
								СуммаПоСтроке = ДанныеУчета.Результат;
								СуммаПоСтрокеЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
							КонецЕсли;
						КонецЕсли;
						
						//проверим регистрацию этой ошибки
						Если ДоляЕНВДПоБазе или ДоляРаботодателяПоБазе Тогда
							Успешно = Ложь;
							КодОшибки = ?(ДоляЕНВДПоБазе и ДоляРаботодателяПоБазе, 2, ?(ДоляЕНВДПоБазе, 3, ?(ДоляРаботодателяПоБазе, 4, 0)));
							ЗарегистрироватьОшибкуОбработкиДанныхУчета(ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, КодОшибки);					
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
						Если Не ДанныеУчета.Следующий() Тогда
							ПродолжатьОбработку = Ложь;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Продолжить;
				КонецЕсли;
				
				ВторойКалендарныйДень = ДанныеУчета.ДатаНачалаСобытия + мДлинаСуток;
				ТретийКалендарныйДень = ВторойКалендарныйДень + мДлинаСуток;
				
				// доля пособия за счет работодателя за первые два календарных дня может быть
				// при этом ДоляБЛЗаСчетРаботодателя может быть равна нулю по причине отсутствия ФПД
				ЕстьДоляБЛЗаСчетРаботодателя = ТретийКалендарныйДень > ДанныеУчета.ПериодДействияНачало;
				
				Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве Тогда // отражение в учете не зависит от налогового режима
					
					СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
					СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
					СтрокаДанных.СубконтоДт2 = Неопределено;
					СтрокаДанных.СубконтоДт3 = Неопределено;
					СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
					СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
					СтрокаДанных.СубконтоКт2 = Неопределено;
					СтрокаДанных.СубконтоКт3 = Неопределено;
					СтрокаДанных.СчетДтНУ	 = Неопределено;
					СтрокаДанных.СчетКтНУ	 = Неопределено;
					СтрокаДанных.СубконтоДтНУ1 = Неопределено;
					СтрокаДанных.СубконтоДтНУ2 = Неопределено;
					СтрокаДанных.СубконтоДтНУ3 = Неопределено;
					СтрокаДанных.СубконтоКтНУ1 = Неопределено;
					СтрокаДанных.СубконтоКтНУ2 = Неопределено;
					СтрокаДанных.СубконтоКтНУ3 = Неопределено;
					СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
					
					ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
					
					Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
						СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
					КонецЕсли;
					
					Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
						Если Не ДанныеУчета.Следующий() Тогда
							ПродолжатьОбработку = Ложь;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
				Иначе 
					
					Если мУСН Тогда
						СчетФСС     = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_УСН;
						СубконтоФСС = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
						НеПринимаютсяУСН = Перечисления.ОтражениеВУСН.НеПринимаются;
						ПринимаютсяУСН   = Перечисления.ОтражениеВУСН.Принимаются;
					Иначе
						СчетФСС     = ПланыСчетов.Хозрасчетный.ФСС;
						СубконтоФСС = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
						НеПринимаютсяУСН = Неопределено;
						ПринимаютсяУСН   = Неопределено;
					КонецЕсли;
					
					ДоляПособияЕНВД   = 0;
					Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание Тогда
						// все за счет ФСС
						
						Если мЕНВД и СуммаПоСтрокеЕНВД <> 0 Тогда
							// есть ЕНВД и доля ЕНВД не равна нулю
							
							ДоляПособияЕНВД = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.Результат	   = ДоляПособияЕНВД;
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							СтрокаДанных.ОтражениеВУСН	= НеПринимаютсяУСН;
							
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
						КонецЕсли;	
						
						Если Не мЕНВД или СуммаПоСтрокеЕНВД <> СуммаПоСтроке Тогда
							// нет ЕНВД или доля ЕНВД не 100%
							Если мЕНВД и СуммаПоСтрокеЕНВД <> 0 Тогда
								СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
							КонецЕсли;
							
							СтрокаДанных.СчетДт 	 = СчетФСС; 
							СтрокаДанных.СубконтоДт1 = СубконтоФСС;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.Результат	   = ДанныеУчета.Результат - ДоляПособияЕНВД;
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							СтрокаДанных.ОтражениеВУСН	= НеПринимаютсяУСН;
							
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
						КонецЕсли;
						
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					Иначе  // общее заболевание, есть доля за счет работодателя
						
						// доля пособия за счет работодателя за первые два календарных дня может быть
						// при этом ДоляБЛЗаСчетРаботодателя может быть равна нулю по причине отсутствия ФПД
						ЕстьДоляБЛЗаСчетРаботодателя = ТретийКалендарныйДень > ДанныеУчета.ПериодДействияНачало;
						
						Если мЕНВД и СуммаПоСтрокеЕНВД <> 0  Тогда
							// есть ЕНВД и доля ЕНВД не равна нулю
							
							ДоляПособияЕНВД = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
							
							// за счет работодателя в части ЕНВД, первые два календарных дня
							РезультатЗаСчетРаботодателя = Окр(ДоляПособияЕНВД * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
							// за счет ФСС в части ЕНВД
							ЗаСчетФССРезультат = ДоляПособияЕНВД - РезультатЗаСчетРаботодателя;
							
							Если РезультатЗаСчетРаботодателя <> 0 Тогда 
								
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ЕНВД; 
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.Результат	 = РезультатЗаСчетРаботодателя;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								СтрокаДанных.ОтражениеВУСН	= НеПринимаютсяУСН;
								СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
								
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
								
							КонецЕсли;
							
							Если ЗаСчетФССРезультат <> 0 Тогда
								
								Если РезультатЗаСчетРаботодателя <> 0 Тогда
									СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
								КонецЕсли;
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.Результат = ЗаСчетФССРезультат;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								СтрокаДанных.ОтражениеВУСН	= НеПринимаютсяУСН;
								Если ЕстьДоляБЛЗаСчетРаботодателя Тогда
									СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
								КонецЕсли;
								
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
								
							КонецЕсли;
							
						КонецЕсли;	
						
						Если Не мЕНВД или СуммаПоСтрокеЕНВД <> СуммаПоСтроке Тогда	
							// нет ЕНВД или доля ЕНВД не 100%
							Если мЕНВД и СуммаПоСтрокеЕНВД <> 0 Тогда 
								СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
							КонецЕсли;
							
							// за счет работодателя в части не ЕНВД, первые два календарных дня
							РезультатЗаСчетРаботодателя = Окр((ДанныеУчета.Результат - ДоляПособияЕНВД) * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
							//за счет ФСС
							ЗаСчетФССРезультат = ДанныеУчета.Результат - ДоляПособияЕНВД - РезультатЗаСчетРаботодателя;
							
							Если ЗаСчетФССРезультат <> 0 Тогда
								//доля за счет ФСС
								
								СтрокаДанных.СчетДт 	 = СчетФСС;
								СтрокаДанных.СубконтоДт1 = СубконтоФСС;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.ОтражениеВУСН	= НеПринимаютсяУСН;
								СтрокаДанных.Результат	 = ЗаСчетФССРезультат;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								Если ЕстьДоляБЛЗаСчетРаботодателя Тогда
									СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
								КонецЕсли;
								
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
								
							КонецЕсли;
							
							Если РезультатЗаСчетРаботодателя <> 0 Тогда 
								
								Если ЗаСчетФССРезультат <> 0 Тогда
									СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
									Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
										СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
									КонецЕсли;
								КонецЕсли;
								
								СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
								
								Если мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
									
									СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ЕНприУСН;
									СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
									СтрокаДанных.СубконтоДт2 = Неопределено;
									СтрокаДанных.СубконтоДт3 = Неопределено;
									СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
									СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
									СтрокаДанных.СубконтоКт2 = Неопределено;
									СтрокаДанных.СубконтоКт3 = Неопределено;
									СтрокаДанных.СчетДтНУ	 = Неопределено;
									СтрокаДанных.СчетКтНУ	 = Неопределено;
									СтрокаДанных.СубконтоДтНУ1 = Неопределено;
									СтрокаДанных.СубконтоДтНУ2 = Неопределено;
									СтрокаДанных.СубконтоДтНУ3 = Неопределено;
									СтрокаДанных.СубконтоКтНУ1 = Неопределено;
									СтрокаДанных.СубконтоКтНУ2 = Неопределено;
									СтрокаДанных.СубконтоКтНУ3 = Неопределено;
									СтрокаДанных.Результат	 = РезультатЗаСчетРаботодателя;
									СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
									Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
										СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
									КонецЕсли;
									СтрокаДанных.ОтражениеВУСН	 = НеПринимаютсяУСН;		
									
								Иначе // ОСН или УСН доходы минус расходы
									
									Если ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя Тогда
										
										СтрокаДанных.Результат	 = РезультатЗаСчетРаботодателя;
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
										СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1;
										СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2;
										СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3;
										СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
										СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
										СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
										СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
										Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУ;
											СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУ;
											СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
											СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
											СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
											СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
											СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
											СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
										КонецЕсли;
										СтрокаДанных.ОтражениеВУСН	 = ПринимаютсяУСН;
										ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
										
										// автозаполним субконто
										АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);
										
										
									Иначе // обходим строки и вычисляем долю результата по базовым записям
										// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
										
										СуммарнаяДоля = 0;
										ПерваяИзГруппыСтрок = Истина;
										Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
											Если НЕ ДанныеУчета.БазаСреднегоЗаработкаЕНВД Тогда
												// если это не первая из группы "базовых" строк по одной строке основного регистра
												// то создаем очередную строку движений
												Если Не ПерваяИзГруппыСтрок Тогда
													СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
													Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
														СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
													КонецЕсли;
													СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
												Иначе
													ПерваяИзГруппыСтрок = Ложь;
												КонецЕсли;
												
												Если СуммаПоСтроке = 0 Тогда
													Доля = 0;
												Иначе
													Если ДанныеУчета.РезультатБаза = NULL Тогда
														Успешно = Ложь;
														Доля = 0;
													Иначе
														Доля = РезультатЗаСчетРаботодателя * ДанныеУчета.РезультатБаза / (СуммаПоСтроке -  СуммаПоСтрокеЕНВД);
													КонецЕсли;
												КонецЕсли;
												
												Если ДанныеУчета.СчетДтРазрез = NULL Тогда
													Успешно = Ложь;
												Иначе
													СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДтРазрез;
													СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(ДанныеУчета.СубконтоДт1Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(ДанныеУчета.СубконтоДт2Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(ДанныеУчета.СубконтоДт3Разрез, ПараметрыПолученияСубконто);
													Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
														СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУРазрез;
														СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ1Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ2Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ3Разрез, ПараметрыПолученияСубконто);
													КонецЕсли;
												КонецЕсли;
												Если ДанныеУчета.СчетКтРазрез = NULL Тогда
													Успешно = Ложь;
												Иначе
													СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКтРазрез;
													СтрокаДанных.СубконтоКт1 = ДанныеУчета.СубконтоКт1Разрез;
													СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2Разрез;
													СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3Разрез;
													Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
														СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУРазрез;
														СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1Разрез;
														СтрокаДанных.СубконтоКтНУ2 = Неопределено;
														СтрокаДанных.СубконтоКтНУ3 = Неопределено;
													КонецЕсли;
												КонецЕсли;
												СтрокаДанных.Результат = ?(РезультатЗаСчетРаботодателя > 0,Мин(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля),Макс(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля));
												Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
													СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
												КонецЕсли;
												СтрокаДанных.ОтражениеВУСН = ПринимаютсяУСН;
												СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
											КонецЕсли;
											Если Не ДанныеУчета.Следующий() Тогда
												ПродолжатьОбработку = Ложь;
												Прервать;
											КонецЕсли;
										КонецЦикла;
										// ошибки округления складываются на последнюю запись из группы базовых записей
										СтрокаДанных.Результат = СтрокаДанных.Результат + РезультатЗаСчетРаботодателя - СуммарнаяДоля;
										
									КонецЕсли;
									
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;	
						
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЕсли;	
				
			Иначе // пособия до 2010 года
				
				СуммаПоСтроке = 0;
				СуммаПоСтрокеЕНВД = 0;
				РегистрироватьОшибку = Ложь;
				
				Если ДанныеУчета.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления Тогда
					// суммируем базовые ресурсы по текущей строке набора записей
					Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
						Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
							РегистрироватьОшибку = Истина;
						Иначе
							СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
							Если ДанныеУчетаВспомогательные.БазаСреднегоЗаработкаЕНВД Тогда
								СуммаПоСтрокеЕНВД = СуммаПоСтрокеЕНВД + ДанныеУчетаВспомогательные.РезультатБаза;
							КонецЕсли;						
						КонецЕсли;
						Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
				ИначеЕсли НЕ ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя И (ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание
					Или ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий) Тогда
					// суммируем базовые ресурсы по текущей строке набора записей
					// сюда попали когда для БЛ доля ЕНВД определяется по текущему месяцу, а доля за счет работодателя распределяется по базовым начислениям
					Если ЗначениеЗаполнено(ДанныеУчета.ДоляСпособаОтражения) Тогда
						Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
							Если НЕ ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
								СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
								Если ЗначениеЗаполнено(ДанныеУчетаВспомогательные.ПроцентЕНВД) Тогда
									СуммаПоСтрокеЕНВД = СуммаПоСтрокеЕНВД + ДанныеУчетаВспомогательные.РезультатБаза;
								КонецЕсли;						
							КонецЕсли;
							Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
					Иначе
						Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
							Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
								//нет данных о базовых начислениях
								РегистрироватьОшибку = Истина;
							Иначе 
								СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
							КонецЕсли;
							Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
						СуммаПоСтрокеЕНВД = Окр(СуммаПоСтроке * ДанныеУчета.ПроцентЕНВД / 100,2);	
					КонецЕсли;	
					
				ИначеЕсли ЗначениеЗаполнено(ДанныеУчета.ДоляСпособаОтражения)  Тогда
					// для пособий полностью выплачиваемых за счет ФСС, по которым необходимо определить долю ЕНВД по текущему месяцу
					// суммируем базовые ресурсы по текущей строке набора записей
					Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
						Если Не ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
							СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
							Если ЗначениеЗаполнено(ДанныеУчетаВспомогательные.ПроцентЕНВД) Тогда
								СуммаПоСтрокеЕНВД = СуммаПоСтрокеЕНВД + ДанныеУчетаВспомогательные.РезультатБаза;
							КонецЕсли;						
						КонецЕсли;
						Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
				ИначеЕсли ДанныеУчета.ПроцентЕНВД = 100 Тогда
					СуммаПоСтроке = ДанныеУчета.Результат;
					СуммаПоСтрокеЕНВД = ДанныеУчета.Результат;
				ИначеЕсли ДанныеУчета.ПроцентЕНВД = 0 Тогда
					СуммаПоСтроке = ДанныеУчета.Результат;
				Иначе
					СуммаПоСтроке = ДанныеУчета.Результат;
					СуммаПоСтрокеЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
				КонецЕсли;
				
				Если РегистрироватьОшибку Тогда
					
					// не удалось собрать данные для отражения в учете пособия, необходимо разобраться зачем мы собирали расчетную базу
					
					// ДоляЕНВДПоБазе - необходимо было собирать долю ЕНВД по базовым начислениям
					ДоляЕНВДПоБазе =  мЕНВД и ДанныеУчета.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления;
					
					// ДоляРаботодателяПоБазе - необходимо было собирать долю пособия за счет работодателя по базе
					// данные по базе нужны для 2-х календарных дней и для доли за счет работодателя при УСН доходы минус расходы
					ДоляРаботодателяПоБазе = Не ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя 
					и ((НЕ мУСН и ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйОбщееЗаболевание
					и ДанныеУчета.ДоляБЛЗаСчетРаботодателя <>0)
					или (ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком
					и мУСН и НЕ мФСС_БЛ и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы));
					
					Если Не ДоляЕНВДПоБазе и Не ДоляРаботодателяПоБазе Тогда
						// данные, собранные по базе не нужны, рассчитаем долю ЕНВД
						Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
							СуммаПоСтроке = ДанныеУчета.Результат;
							СуммаПоСтрокеЕНВД = ДанныеУчета.Результат;
						ИначеЕсли ДанныеУчета.ПроцентЕНВД = 0 Тогда
							СуммаПоСтроке = ДанныеУчета.Результат;
						Иначе
							СуммаПоСтроке = ДанныеУчета.Результат;
							СуммаПоСтрокеЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
						КонецЕсли;
					Иначе // не удалось собрать данные по базе
						
						Если Не ДоляЕНВДПоБазе Тогда
							// данные по базе нужны только для распределения по счетам затрат доли пособия за счет работодателя
							// соберм суммы и продолжим работу, при этом счет затрат для пособия за счет работодателя будет пустой
							Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
								СуммаПоСтроке = ДанныеУчета.Результат;
								СуммаПоСтрокеЕНВД = ДанныеУчета.Результат;
							ИначеЕсли ДанныеУчета.ПроцентЕНВД = 0 Тогда
								СуммаПоСтроке = ДанныеУчета.Результат;
							Иначе
								СуммаПоСтроке = ДанныеУчета.Результат;
								СуммаПоСтрокеЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
							КонецЕсли;
						КонецЕсли;
						
						//проверим регистрацию этой ошибки
						Если ДоляЕНВДПоБазе или ДоляРаботодателяПоБазе Тогда
							Успешно = Ложь;
							КодОшибки = ?(ДоляЕНВДПоБазе и ДоляРаботодателяПоБазе, 2, ?(ДоляЕНВДПоБазе, 3, ?(ДоляРаботодателяПоБазе, 4, 0)));
							ЗарегистрироватьОшибкуОбработкиДанныхУчета(ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, КодОшибки);					
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
						Если Не ДанныеУчета.Следующий() Тогда
							ПродолжатьОбработку = Ложь;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Продолжить;
				КонецЕсли;
				
				ВторойКалендарныйДень = ДанныеУчета.ДатаНачалаСобытия + мДлинаСуток;
				ТретийКалендарныйДень = ВторойКалендарныйДень + мДлинаСуток;
				
				// доля пособия за счет работодателя за первые два календарных дня может быть
				// при этом ДоляБЛЗаСчетРаботодателя может быть равна нулю по причине отсутствия ФПД
				ЕстьДоляБЛЗаСчетРаботодателя = ТретийКалендарныйДень > ДанныеУчета.ПериодДействияНачало;
				
				Если мУСН и НЕ мФСС_БЛ Тогда // налоговые режимы: УСН и УСН+ЕНВД, без уплаты добровольных взносов
					
					Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком Тогда
						Если Не мЕНВД Или СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_УСН;
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;		
							Если мЕНВД И СуммаПоСтрокеЕНВД <> 0 Тогда
								СтрокаДанных.Результат	 = ДанныеУчета.Результат - Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
							КонецЕсли;
							
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
						КонецЕсли;
						Если мЕНВД И СуммаПоСтрокеЕНВД <> 0 Тогда
							Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
								СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
							КонецЕсли;
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
							СтрокаДанных.Результат	 = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
						КонецЕсли;
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					ИначеЕсли ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве Тогда
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
						
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					Иначе
						
						ВПределахММОТ = Мин(ДанныеУчета.Результат,ДанныеУчета.ВПределахММОТ);
						СтрокаДанных.Результат	 = ВПределахММОТ;
						Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
							СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
						КонецЕсли;
						
						Если Не мЕНВД Или СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_УСН; 
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
							Если мЕНВД И СуммаПоСтрокеЕНВД <> 0 Тогда
								СтрокаДанных.Результат	 = ВПределахММОТ - Окр(ВПределахММОТ * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
							КонецЕсли;
							
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
						КонецЕсли;
						Если мЕНВД И СуммаПоСтрокеЕНВД <> 0 Тогда
							Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
								СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
							КонецЕсли;
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
							СтрокаДанных.Результат	 = Окр(ВПределахММОТ * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
						КонецЕсли;
						
						// полный результат
						ПолныйРезультат = ДанныеУчета.Результат - ВПределахММОТ;
						
						Если мЕНВД И СуммаПоСтрокеЕНВД <> 0 и ПолныйРезультат <> 0 Тогда
							СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ЕНВД; 
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;		
							СтрокаДанных.Результат	 = Окр(ПолныйРезультат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							ПолныйРезультат = ПолныйРезультат - Окр(ПолныйРезультат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
							
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
						КонецЕсли;
						
						Если мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
							Если ПолныйРезультат <> 0 Тогда
								СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ЕНприУСН;
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;		
								СтрокаДанных.Результат	 = ПолныйРезультат;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							КонецЕсли;
							Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
								Если Не ДанныеУчета.Следующий() Тогда
									ПродолжатьОбработку = Ложь;
									Прервать;
								КонецЕсли;
							КонецЦикла;
						ИначеЕсли ПолныйРезультат <> 0 Тогда 
							СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
							Если Не ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя Тогда
								// обходим строки и вычисляем долю результата по базовым записям
								// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
								СуммарнаяДоля = 0;
								ПерваяИзГруппыСтрок = Истина;
								Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
									
									Если Не ДанныеУчета.БазаСреднегоЗаработкаЕНВД Тогда
										// если это не первая из группы "базовых" строк по одной строке основного регистра
										// то создаем очередную строку движений
										Если Не ПерваяИзГруппыСтрок Тогда
											СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
										Иначе
											ПерваяИзГруппыСтрок = Ложь;
										КонецЕсли;
										
										Если СуммаПоСтроке = 0 Тогда
											Доля = 0;
										Иначе
											Если ДанныеУчета.РезультатБаза = NULL Тогда
												Доля = 0;
											Иначе
												Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатБаза / (СуммаПоСтроке - СуммаПоСтрокеЕНВД),2);
											КонецЕсли;
										КонецЕсли;
										
										// если счет пустой - заполним счет данными базы
										Если ДанныеУчета.СчетДт = ПустойСчет Тогда
											Если Не ДанныеУчета.СчетДтРазрез = NULL Тогда
												СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДтРазрез;
												СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(ДанныеУчета.СубконтоДт1Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(ДанныеУчета.СубконтоДт2Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(ДанныеУчета.СубконтоДт3Разрез, ПараметрыПолученияСубконто);
												ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, ПустойСчет, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
												Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
													СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУРазрез;
													СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ1Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ2Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ3Разрез, ПараметрыПолученияСубконто);
												КонецЕсли;
												
											КонецЕсли;
										КонецЕсли;
										// если счет пустой - заполним счет данными базы
										Если ДанныеУчета.СчетКт = ПустойСчет Тогда
											Если Не ДанныеУчета.СчетКтРазрез = NULL Тогда
												СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКтРазрез;
												СтрокаДанных.СубконтоКт1 = ПолучитьСубконто(ДанныеУчета.СубконтоКт1Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоКт2 = ПолучитьСубконто(ДанныеУчета.СубконтоКт2Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоКт3 = ПолучитьСубконто(ДанныеУчета.СубконтоКт3Разрез, ПараметрыПолученияСубконто);
												ЗаполнитьПодразделениеДтКт(СтрокаДанных, ПустойСчет, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
												Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
													СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУРазрез;
													СтрокаДанных.СубконтоКтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоКтНУ1Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоКтНУ2 = Неопределено;
													СтрокаДанных.СубконтоКтНУ3 = Неопределено;
												КонецЕсли;
												ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
												СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.Принимаются;
												
											КонецЕсли;
										КонецЕсли;
										СтрокаДанных.Результат = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
									КонецЕсли;
									Если Не ДанныеУчета.Следующий() Тогда
										ПродолжатьОбработку = Ложь;
										Прервать;
									КонецЕсли;
								КонецЦикла;
								// ошибки округления складываются на последнюю запись из группы базовых записей
								СтрокаДанных.Результат = СтрокаДанных.Результат + ПолныйРезультат - СуммарнаяДоля;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								
							Иначе //задана способ отражения доли пособия за счет работодателя
								
								СтрокаДанных.Результат	 = ПолныйРезультат;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
								СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1;
								СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2;
								СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3;
								СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
								СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
								
								Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУ;
									СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУ;
									СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
									СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
									СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
									СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
									СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
									СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
								КонецЕсли;
								ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
								СтрокаДанных.ОтражениеВУСН	 = ДанныеУчета.ОтражениеВУСН;
								
								// автозаполним субконто
								АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);	
								
							КонецЕсли;
						КонецЕсли;
						
						Пока ПродолжатьОбработку И ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
				ИначеЕсли мЕНВД и СуммаПоСтрокеЕНВД <> 0 и НЕ мФСС_БЛ Тогда // налоговые режимы: ОСН+ЕНВД, без уплаты добровольных взносов
					
					Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком Тогда
						Если СуммаПоСтрокеЕНВД <> СуммаПоСтроке  Тогда
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.Результат	 = ДанныеУчета.Результат - Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
							СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
						КонецЕсли;
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						СтрокаДанных.Результат	 = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
						Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
							СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
						КонецЕсли;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								
								Прервать;
							КонецЕсли;
						КонецЦикла;
					ИначеЕсли ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве Тогда
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					ИначеЕсли  ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий Тогда
						Если СуммаПоСтрокеЕНВД <> СуммаПоСтроке  Тогда
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.Результат	 = ДанныеУчета.Результат - Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
						КонецЕсли;		
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						ВПределахММОТ	 = Мин(Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2),ДанныеУчета.ВПределахММОТ);
						СтрокаДанных.Результат	 = ВПределахММОТ;
						Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
							СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
						КонецЕсли;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						Если Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2) - ВПределахММОТ <> 0 Тогда
							СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ЕНВД; 
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.Результат = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2) - ВПределахММОТ;
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						КонецЕсли;
						
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					Иначе // ОбщееЗаболевание или ТравмаВБыту налоговые режимы: ОСН+ЕНВД, без уплаты добровольных взносов
						
						ДоляПособияЕНВД = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
						
						// это доля возмещаемая ФСС в части ЕНВД в пределах ММОТ
						ВПределахММОТ = Мин(ДоляПособияЕНВД, ДанныеУчета.ВПределахММОТ);
						
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						СтрокаДанных.Результат	 = ВПределахММОТ;
						Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
							СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
						КонецЕсли;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						
						// зарегистрируем долю за счет работодателя в части ЕНВД
						СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ЕНВД; 
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						СтрокаДанных.Результат = ДоляПособияЕНВД - ВПределахММОТ;
						Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
							СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
						КонецЕсли;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						
						// за счет работодателя
						РезультатЗаСчетРаботодателя = Окр((ДанныеУчета.Результат - ДоляПособияЕНВД) * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
						//за счет ФСС
						ЗаСчетФССРезультат = ДанныеУчета.Результат - ДоляПособияЕНВД - РезультатЗаСчетРаботодателя;
						
						Если ЗаСчетФССРезультат <> 0 Тогда
							
							СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
							СтрокаДанных.Результат	 = ЗаСчетФССРезультат;
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
							Если ЕстьДоляБЛЗаСчетРаботодателя Тогда
								СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
							КонецЕсли;
							
						КонецЕсли;
						
						Если РезультатЗаСчетРаботодателя <> 0 Тогда 
							//добавим новую строку движений
							СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
							СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
							Если Не ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя Тогда
								// обходим строки и вычисляем долю результата по базовым записям
								// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
								СуммарнаяДоля = 0;
								ПерваяИзГруппыСтрок = Истина;
								Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
									Если Не ДанныеУчета.БазаСреднегоЗаработкаЕНВД Тогда
										// если это не первая из группы "базовых" строк по одной строке основного регистра
										// то создаем очередную строку движений
										Если Не ПерваяИзГруппыСтрок Тогда
											СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
											СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
										Иначе
											ПерваяИзГруппыСтрок = Ложь;
										КонецЕсли;
										
										Если СуммаПоСтроке = 0 Тогда
											Доля = 0;
										Иначе
											Если ДанныеУчета.РезультатБаза = NULL Тогда
												Доля = 0;
											Иначе
												Доля = Окр(РезультатЗаСчетРаботодателя * ДанныеУчета.РезультатБаза / (СуммаПоСтроке - СуммаПоСтрокеЕНВД),2);
											КонецЕсли;
										КонецЕсли;
										
										// если счет пустой - заполним счет данными базы
										Если ДанныеУчета.СчетДт = ПустойСчет Тогда
											Если Не ДанныеУчета.СчетДтРазрез = NULL Тогда
												СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДтРазрез;
												СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(ДанныеУчета.СубконтоДт1Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(ДанныеУчета.СубконтоДт2Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(ДанныеУчета.СубконтоДт3Разрез, ПараметрыПолученияСубконто);
												ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, ПустойСчет, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
												Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
													СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУРазрез;
													СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ1Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ2Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ3Разрез, ПараметрыПолученияСубконто);
												КонецЕсли;
											КонецЕсли;
										КонецЕсли;
										// если счет пустой - заполним счет данными базы
										Если ДанныеУчета.СчетКт = ПустойСчет Тогда
											Если Не ДанныеУчета.СчетКтРазрез = NULL Тогда
												СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКтРазрез;
												СтрокаДанных.СубконтоКт1 = ПолучитьСубконто(ДанныеУчета.СубконтоКт1Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоКт2 = ПолучитьСубконто(ДанныеУчета.СубконтоКт2Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоКт3 = ПолучитьСубконто(ДанныеУчета.СубконтоКт3Разрез, ПараметрыПолученияСубконто);
												ЗаполнитьПодразделениеДтКт(СтрокаДанных, ПустойСчет, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
												
												Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
													СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУРазрез;
													СтрокаДанных.СубконтоКтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоКтНУ1Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоКтНУ2 = Неопределено;
													СтрокаДанных.СубконтоКтНУ3 = Неопределено;
												КонецЕсли;
												ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
												СтрокаДанных.ОтражениеВУСН	 = ДанныеУчета.ОтражениеВУСНРазрез;		
											КонецЕсли;
										КонецЕсли;
										СтрокаДанных.Результат = ?(РезультатЗаСчетРаботодателя > 0,Мин(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля),Макс(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля));
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
									КонецЕсли;
									Если Не ДанныеУчета.Следующий() Тогда
										ПродолжатьОбработку = Ложь;
										Прервать;
									КонецЕсли;
								КонецЦикла;
								// ошибки округления складываются на последнюю запись из группы базовых записей
								СтрокаДанных.Результат = СтрокаДанных.Результат + РезультатЗаСчетРаботодателя - СуммарнаяДоля;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								
							Иначе //задана способ отражения доли пособия за счет работодателя
								
								СтрокаДанных.Результат	 = РезультатЗаСчетРаботодателя;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
								СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1;
								СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2;
								СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3;
								СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
								СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
								Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУ;
									СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУ;
									СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
									СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
									СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
									СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
									СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
									СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
								КонецЕсли;
								ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
								
								// автозаполним субконто
								АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);
								
							КонецЕсли;
						КонецЕсли;
						
						Пока ПродолжатьОбработку И ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
				ИначеЕсли мФСС_БЛ Тогда // налоговые режимы: УСН, ОСН+ЕНВД и УСН+ЕНВД, с уплатой добровольных взносов
					
					Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком Тогда
						Если мЕНВД и НЕ мУСН Тогда 
							Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.Результат	 = ДанныеУчета.Результат - Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							КонецЕсли;	
							Если СуммаПоСтрокеЕНВД <> 0 Тогда
								Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
									СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
								КонецЕсли;
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.Результат	 = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							КонецЕсли;
							
							Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
								Если Не ДанныеУчета.Следующий() Тогда
									ПродолжатьОбработку = Ложь;
									Прервать;
								КонецЕсли;
							КонецЦикла;
							
						ИначеЕсли мУСН Тогда
							Если Не мЕНВД Или СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_УСН;
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
								Если мЕНВД И СуммаПоСтрокеЕНВД <> 0 Тогда
									СтрокаДанных.Результат	 = ДанныеУчета.Результат - Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
									Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
										СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
							Если мЕНВД И СуммаПоСтрокеЕНВД <> 0 Тогда
								Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
									СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
								КонецЕсли;
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_СПЕЦ_ЕНВД; 
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
								СтрокаДанных.Результат	 = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							КонецЕсли;							
							
							Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
								Если Не ДанныеУчета.Следующий() Тогда
									ПродолжатьОбработку = Ложь;
									Прервать;
								КонецЕсли;
							КонецЦикла;
							
						КонецЕсли;
						
					ИначеЕсли ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве Тогда
						
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					ИначеЕсли ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий Тогда
						
						Если мЕНВД и НЕ мУСН Тогда
							Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.Результат	 = ДанныеУчета.Результат - Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							КонецЕсли;
							Если СуммаПоСтрокеЕНВД <> 0 Тогда
								Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
									СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
								КонецЕсли;
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы; 
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.Результат	 = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							КонецЕсли;
							Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
								Если Не ДанныеУчета.Следующий() Тогда
									ПродолжатьОбработку = Ложь;
									Прервать;
								КонецЕсли;
							КонецЦикла;
							
						ИначеЕсли мУСН Тогда
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы; 
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
							СтрокаДанных.Результат	 = ДанныеУчета.Результат ;							
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
								Если Не ДанныеУчета.Следующий() Тогда
									ПродолжатьОбработку = Ложь;
									Прервать;
								КонецЕсли;
							КонецЦикла;							
						КонецЕсли;	
						
					Иначе // заболевание работника налоговые режимы: УСН, ОСН+ЕНВД и УСН+ЕНВД, с уплатой добровольных взносов
						
						Если мЕНВД и НЕ мУСН Тогда // налоговые режимы: ОСН+ЕНВД, с уплатой добровольных взносов
							
							СуммарнаяДоля = 0;
							Если ДанныеУчета.ДатаНачалаСобытия < ДатаЗакона180ФЗ Тогда
								
								ДоляПособияЕНВД = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
								
								// за счет работодателя в части ОСН
								РезультатЗаСчетРаботодателя = Окр((ДанныеУчета.Результат - ДоляПособияЕНВД) * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
								
								Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
									СтрокаДанных.Результат	 = ДанныеУчета.Результат - ДоляПособияЕНВД - РезультатЗаСчетРаботодателя;
									Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
										СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
									КонецЕсли;
									СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
									СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
									СтрокаДанных.СубконтоДт2 = Неопределено;
									СтрокаДанных.СубконтоДт3 = Неопределено;
									СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
									СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
									СтрокаДанных.СубконтоКт2 = Неопределено;
									СтрокаДанных.СубконтоКт3 = Неопределено;
									СтрокаДанных.СчетДтНУ	 = Неопределено;
									СтрокаДанных.СчетКтНУ	 = Неопределено;
									СтрокаДанных.СубконтоДтНУ1 = Неопределено;
									СтрокаДанных.СубконтоДтНУ2 = Неопределено;
									СтрокаДанных.СубконтоДтНУ3 = Неопределено;
									СтрокаДанных.СубконтоКтНУ1 = Неопределено;
									СтрокаДанных.СубконтоКтНУ2 = Неопределено;
									СтрокаДанных.СубконтоКтНУ3 = Неопределено;
									ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
									Если ЕстьДоляБЛЗаСчетРаботодателя Тогда
										СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
									КонецЕсли;
								КонецЕсли;
								
								Если СуммаПоСтрокеЕНВД <> 0 Тогда
									Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
										СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
									КонецЕсли;
									СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы; 
									СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
									СтрокаДанных.СубконтоДт2 = Неопределено;
									СтрокаДанных.СубконтоДт3 = Неопределено;
									СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
									СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
									СтрокаДанных.СубконтоКт2 = Неопределено;
									СтрокаДанных.СубконтоКт3 = Неопределено;
									СтрокаДанных.СчетДтНУ	 = Неопределено;
									СтрокаДанных.СчетКтНУ	 = Неопределено;
									СтрокаДанных.СубконтоДтНУ1 = Неопределено;
									СтрокаДанных.СубконтоДтНУ2 = Неопределено;
									СтрокаДанных.СубконтоДтНУ3 = Неопределено;
									СтрокаДанных.СубконтоКтНУ1 = Неопределено;
									СтрокаДанных.СубконтоКтНУ2 = Неопределено;
									СтрокаДанных.СубконтоКтНУ3 = Неопределено;
									СтрокаДанных.Результат	 = ДоляПособияЕНВД - Окр(ДоляПособияЕНВД * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
									Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
										СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
									КонецЕсли;
									ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
									Если ДанныеУчета.ДоляБЛЗаСчетРаботодателя <> 0 Тогда
										СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
										СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ЕНВД; 
										СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
										СтрокаДанных.СубконтоДт2 = Неопределено;
										СтрокаДанных.СубконтоДт3 = Неопределено;
										СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
										СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
										СтрокаДанных.СубконтоКт2 = Неопределено;
										СтрокаДанных.СубконтоКт3 = Неопределено;
										СтрокаДанных.СчетДтНУ	 = Неопределено;
										СтрокаДанных.СчетКтНУ	 = Неопределено;
										СтрокаДанных.СубконтоДтНУ1 = Неопределено;
										СтрокаДанных.СубконтоДтНУ2 = Неопределено;
										СтрокаДанных.СубконтоДтНУ3 = Неопределено;
										СтрокаДанных.СубконтоКтНУ1 = Неопределено;
										СтрокаДанных.СубконтоКтНУ2 = Неопределено;
										СтрокаДанных.СубконтоКтНУ3 = Неопределено;
										СтрокаДанных.Результат	 = Окр(ДоляПособияЕНВД * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
									КонецЕсли;
								КонецЕсли;							
								
								Если РезультатЗаСчетРаботодателя <> 0 Тогда 
									
									СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
									СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
									Если Не ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя Тогда
										// обходим строки и вычисляем долю результата по базовым записям
										// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
										СуммарнаяДоля = 0;
										ПерваяИзГруппыСтрок = Истина;
										Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
											
											Если Не ДанныеУчета.БазаСреднегоЗаработкаЕНВД Тогда
												// если это не первая из группы "базовых" строк по одной строке основного регистра
												// то создаем очередную строку движений
												Если Не ПерваяИзГруппыСтрок Тогда
													СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
													СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
												Иначе
													ПерваяИзГруппыСтрок = Ложь;
												КонецЕсли;
												
												Если СуммаПоСтроке = 0 Тогда
													Доля = 0;
												Иначе
													Если ДанныеУчета.РезультатБаза = NULL Тогда
														Доля = 0;
													Иначе
														Доля = Окр(РезультатЗаСчетРаботодателя * ДанныеУчета.РезультатБаза / (СуммаПоСтроке - СуммаПоСтрокеЕНВД),2);
													КонецЕсли;
												КонецЕсли;
												
												// если счет пустой - заполним счет данными базы
												Если ДанныеУчета.СчетДт = ПустойСчет Тогда
													Если Не ДанныеУчета.СчетДтРазрез = NULL Тогда
														СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДтРазрез;
														СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(ДанныеУчета.СубконтоДт1Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(ДанныеУчета.СубконтоДт2Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(ДанныеУчета.СубконтоДт3Разрез, ПараметрыПолученияСубконто);
														ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, ПустойСчет, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
														Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
															СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУРазрез;
															СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ1Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ2Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ3Разрез, ПараметрыПолученияСубконто);
														КонецЕсли;
													КонецЕсли;
												КонецЕсли;
												// если счет пустой - заполним счет данными базы
												Если ДанныеУчета.СчетКт = ПустойСчет Тогда
													Если Не ДанныеУчета.СчетКтРазрез = NULL Тогда
														СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКтРазрез;
														СтрокаДанных.СубконтоКт1 = ПолучитьСубконто(ДанныеУчета.СубконтоКт1Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоКт2 = ПолучитьСубконто(ДанныеУчета.СубконтоКт2Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоКт3 = ПолучитьСубконто(ДанныеУчета.СубконтоКт3Разрез, ПараметрыПолученияСубконто);
														ЗаполнитьПодразделениеДтКт(СтрокаДанных, ПустойСчет, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
														Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
															СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУРазрез;
															СтрокаДанных.СубконтоКтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоКтНУ1Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоКтНУ2 = Неопределено;
															СтрокаДанных.СубконтоКтНУ3 = Неопределено;
														КонецЕсли;
														ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
														СтрокаДанных.ОтражениеВУСН	 = ДанныеУчета.ОтражениеВУСНРазрез;		
													КонецЕсли;
												КонецЕсли;
												СтрокаДанных.Результат = ?(РезультатЗаСчетРаботодателя > 0,Мин(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля),Макс(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля));
												Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
													СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
												КонецЕсли;
												СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
											КонецЕсли;
											Если Не ДанныеУчета.Следующий() Тогда
												ПродолжатьОбработку = Ложь;
												Прервать;
											КонецЕсли;
										КонецЦикла;
										// ошибки округления складываются на последнюю запись из группы базовых записей
										СтрокаДанных.Результат = СтрокаДанных.Результат + РезультатЗаСчетРаботодателя - СуммарнаяДоля;
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										
									Иначе //задана способ отражения доли пособия за счет работодателя
										
										СтрокаДанных.Результат	 = РезультатЗаСчетРаботодателя;
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
										СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1;
										СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2;
										СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3;
										СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
										СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
										СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
										СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
										Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУ;
											СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУ;
											СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
											СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
											СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
											СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
											СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
											СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
										КонецЕсли;
										ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
										
										// автозаполним субконто
										АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);	
										
									КонецЕсли;
									
								КонецЕсли;	
								
								Пока ПродолжатьОбработку И ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
									Если Не ДанныеУчета.Следующий() Тогда
										ПродолжатьОбработку = Ложь;
										Прервать;
									КонецЕсли;
								КонецЦикла;							
								
							Иначе // ДанныеУчета.ДатаНачалаСобытия > мДатаЗакона180ФЗ, налоговые режимы: ОСН+ЕНВД, с уплатой добровольных взносов
								
								ДоляПособияЕНВД = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
								
								// за счет работодателя
								РезультатЗаСчетРаботодателя = Окр((ДанныеУчета.Результат - ДоляПособияЕНВД) * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
								//за счет ФСС
								ЗаСчетФССРезультат = 0;
								
								Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
									ЗаСчетФССРезультат = ДанныеУчета.Результат - ДоляПособияЕНВД - РезультатЗаСчетРаботодателя;
									Если ЗаСчетФССРезультат <> 0 Тогда
										СтрокаДанных.Результат	 = ЗаСчетФССРезультат;
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
										СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
										СтрокаДанных.СубконтоДт2 = Неопределено;
										СтрокаДанных.СубконтоДт3 = Неопределено;
										СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
										СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
										СтрокаДанных.СубконтоКт2 = Неопределено;
										СтрокаДанных.СубконтоКт3 = Неопределено;
										СтрокаДанных.СчетДтНУ	 = Неопределено;
										СтрокаДанных.СчетКтНУ	 = Неопределено;
										СтрокаДанных.СубконтоДтНУ1 = Неопределено;
										СтрокаДанных.СубконтоДтНУ2 = Неопределено;
										СтрокаДанных.СубконтоДтНУ3 = Неопределено;
										СтрокаДанных.СубконтоКтНУ1 = Неопределено;
										СтрокаДанных.СубконтоКтНУ2 = Неопределено;
										СтрокаДанных.СубконтоКтНУ3 = Неопределено;
										ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
										Если ЕстьДоляБЛЗаСчетРаботодателя Тогда
											СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
								
								Если СуммаПоСтрокеЕНВД <> 0 Тогда
									Если ЗаСчетФССРезультат <> 0 Тогда
										СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
									КонецЕсли;
									СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы; 
									СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
									СтрокаДанных.СубконтоДт2 = Неопределено;
									СтрокаДанных.СубконтоДт3 = Неопределено;
									СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
									СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
									СтрокаДанных.СубконтоКт2 = Неопределено;
									СтрокаДанных.СубконтоКт3 = Неопределено;
									СтрокаДанных.СчетДтНУ	 = Неопределено;
									СтрокаДанных.СчетКтНУ	 = Неопределено;
									СтрокаДанных.СубконтоДтНУ1 = Неопределено;
									СтрокаДанных.СубконтоДтНУ2 = Неопределено;
									СтрокаДанных.СубконтоДтНУ3 = Неопределено;
									СтрокаДанных.СубконтоКтНУ1 = Неопределено;
									СтрокаДанных.СубконтоКтНУ2 = Неопределено;
									СтрокаДанных.СубконтоКтНУ3 = Неопределено;
									СтрокаДанных.Результат	 = ДоляПособияЕНВД;
									Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
										СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
									КонецЕсли;
									ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
								КонецЕсли;							
								
								Если РезультатЗаСчетРаботодателя <> 0 Тогда 
									Если ЗаСчетФССРезультат <> 0 ИЛИ СуммаПоСтрокеЕНВД <> 0 Тогда
										//добавим новую строку движений, т.к. есть доля за счет ФСС
										СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
									КонецЕсли;
									СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
									Если Не ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя Тогда
										// обходим строки и вычисляем долю результата по базовым записям
										// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
										СуммарнаяДоля = 0;
										ПерваяИзГруппыСтрок = Истина;
										Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
											
											Если Не ДанныеУчета.БазаСреднегоЗаработкаЕНВД Тогда
												// если это не первая из группы "базовых" строк по одной строке основного регистра
												// то создаем очередную строку движений
												Если Не ПерваяИзГруппыСтрок Тогда
													СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
													СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
												Иначе
													ПерваяИзГруппыСтрок = Ложь;
												КонецЕсли;
												
												Если СуммаПоСтроке = 0 Тогда
													Доля = 0;
												Иначе
													Если ДанныеУчета.РезультатБаза = NULL Тогда
														Доля = 0;
													Иначе
														Доля = Окр(РезультатЗаСчетРаботодателя * ДанныеУчета.РезультатБаза / (СуммаПоСтроке - СуммаПоСтрокеЕНВД),2);
													КонецЕсли;
												КонецЕсли;
												
												// если счет пустой - заполним счет данными базы
												Если ДанныеУчета.СчетДт = ПустойСчет Тогда
													Если Не ДанныеУчета.СчетДтРазрез = NULL Тогда
														СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДтРазрез;
														СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(ДанныеУчета.СубконтоДт1Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(ДанныеУчета.СубконтоДт2Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(ДанныеУчета.СубконтоДт3Разрез, ПараметрыПолученияСубконто);
														ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, ПустойСчет, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
														Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
															СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУРазрез;
															СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ1Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ2Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ3Разрез, ПараметрыПолученияСубконто);
														КонецЕсли;
													КонецЕсли;
												КонецЕсли;
												// если счет пустой - заполним счет данными базы
												Если ДанныеУчета.СчетКт = ПустойСчет Тогда
													Если Не ДанныеУчета.СчетКтРазрез = NULL Тогда
														СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКтРазрез;
														СтрокаДанных.СубконтоКт1 = ПолучитьСубконто(ДанныеУчета.СубконтоКт1Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоКт2 = ПолучитьСубконто(ДанныеУчета.СубконтоКт2Разрез, ПараметрыПолученияСубконто);
														СтрокаДанных.СубконтоКт3 = ПолучитьСубконто(ДанныеУчета.СубконтоКт3Разрез, ПараметрыПолученияСубконто);
														ЗаполнитьПодразделениеДтКт(СтрокаДанных, ПустойСчет, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
														Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
															СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУРазрез;
															СтрокаДанных.СубконтоКтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоКтНУ1Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоКтНУ2 = Неопределено;
															СтрокаДанных.СубконтоКтНУ3 = Неопределено;
														КонецЕсли;
														ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
														СтрокаДанных.ОтражениеВУСН	 = ДанныеУчета.ОтражениеВУСНРазрез;	
														
													КонецЕсли;
												КонецЕсли;
												СтрокаДанных.Результат = ?(РезультатЗаСчетРаботодателя > 0,Мин(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля),Макс(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля));
												Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
													СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
												КонецЕсли;
												СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
											КонецЕсли;
											Если Не ДанныеУчета.Следующий() Тогда
												ПродолжатьОбработку = Ложь;
												Прервать;
											КонецЕсли;
										КонецЦикла;
										// ошибки округления складываются на последнюю запись из группы базовых записей
										СтрокаДанных.Результат = СтрокаДанных.Результат + РезультатЗаСчетРаботодателя - СуммарнаяДоля;
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										
									Иначе //задана способ отражения доли пособия за счет работодателя
										
										СтрокаДанных.Результат	 = РезультатЗаСчетРаботодателя;
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
										СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1;
										СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2;
										СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3;
										СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
										СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
										СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
										СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
										Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУ;
											СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУ;
											СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
											СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
											СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
											СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
											СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
											СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
										КонецЕсли;
										
										// автозаполним субконто
										АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);	
										
									КонецЕсли;
									
								КонецЕсли;	
								
								Пока ПродолжатьОбработку И ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
									Если Не ДанныеУчета.Следующий() Тогда
										ПродолжатьОбработку = Ложь;
										Прервать;
									КонецЕсли;
								КонецЦикла;
								
							КонецЕсли;
							
						ИначеЕсли мУСН Тогда // налоговые режимы: УСН и УСН+ЕНВД, с уплатой добровольных взносов
							
							Если ДанныеУчета.ДатаНачалаСобытия < ДатаЗакона180ФЗ Тогда
								
								ДоляПособияЕНВД = Окр(ДанныеУчета.Результат * СуммаПоСтрокеЕНВД / СуммаПоСтроке,2);
								
								// за счет работодателя
								РезультатЗаСчетРаботодателя = Окр((ДанныеУчета.Результат - ДоляПособияЕНВД) * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
								
								Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
									СтрокаДанных.Результат	 = ДанныеУчета.Результат - ДоляПособияЕНВД - РезультатЗаСчетРаботодателя;
									Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
										СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
									КонецЕсли;
									СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы;
									СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
									СтрокаДанных.СубконтоДт2 = Неопределено;
									СтрокаДанных.СубконтоДт3 = Неопределено;
									СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
									СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
									СтрокаДанных.СубконтоКт2 = Неопределено;
									СтрокаДанных.СубконтоКт3 = Неопределено;
									СтрокаДанных.СчетДтНУ	 = Неопределено;
									СтрокаДанных.СчетКтНУ	 = Неопределено;
									СтрокаДанных.СубконтоДтНУ1 = Неопределено;
									СтрокаДанных.СубконтоДтНУ2 = Неопределено;
									СтрокаДанных.СубконтоДтНУ3 = Неопределено;
									СтрокаДанных.СубконтоКтНУ1 = Неопределено;
									СтрокаДанных.СубконтоКтНУ2 = Неопределено;
									СтрокаДанных.СубконтоКтНУ3 = Неопределено;
									СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
									ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
								КонецЕсли;
								
								Если СуммаПоСтрокеЕНВД <> 0 Тогда
									Если СуммаПоСтроке <> СуммаПоСтрокеЕНВД Тогда
										СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
									КонецЕсли;
									СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы; 
									СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
									СтрокаДанных.СубконтоДт2 = Неопределено;
									СтрокаДанных.СубконтоДт3 = Неопределено;
									СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
									СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
									СтрокаДанных.СубконтоКт2 = Неопределено;
									СтрокаДанных.СубконтоКт3 = Неопределено;
									СтрокаДанных.СчетДтНУ	 = Неопределено;
									СтрокаДанных.СчетКтНУ	 = Неопределено;
									СтрокаДанных.СубконтоДтНУ1 = Неопределено;
									СтрокаДанных.СубконтоДтНУ2 = Неопределено;
									СтрокаДанных.СубконтоДтНУ3 = Неопределено;
									СтрокаДанных.СубконтоКтНУ1 = Неопределено;
									СтрокаДанных.СубконтоКтНУ2 = Неопределено;
									СтрокаДанных.СубконтоКтНУ3 = Неопределено;
									СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
									СтрокаДанных.Результат	 = ДоляПособияЕНВД - Окр(ДоляПособияЕНВД * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
									Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
										СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
									КонецЕсли;
									ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
									
									СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
									СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ЕНВД; 
									СтрокаДанных.СубконтоДт1 = Перечисления.ВидыРасчетовПоСредствамФСС.РасходыПоСтрахованию;
									СтрокаДанных.СубконтоДт2 = Неопределено;
									СтрокаДанных.СубконтоДт3 = Неопределено;
									СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
									СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
									СтрокаДанных.СубконтоКт2 = Неопределено;
									СтрокаДанных.СубконтоКт3 = Неопределено;
									СтрокаДанных.СчетДтНУ	 = Неопределено;
									СтрокаДанных.СчетКтНУ	 = Неопределено;
									СтрокаДанных.СубконтоДтНУ1 = Неопределено;
									СтрокаДанных.СубконтоДтНУ2 = Неопределено;
									СтрокаДанных.СубконтоДтНУ3 = Неопределено;
									СтрокаДанных.СубконтоКтНУ1 = Неопределено;
									СтрокаДанных.СубконтоКтНУ2 = Неопределено;
									СтрокаДанных.СубконтоКтНУ3 = Неопределено;
									СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
									СтрокаДанных.Результат	 = Окр(ДоляПособияЕНВД * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
									Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
										СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
									КонецЕсли;
									ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
								КонецЕсли;
								
								Если РезультатЗаСчетРаботодателя <> 0 Тогда // обходим строки и вычисляем долю результата по базовым записям
									Если мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
										
										СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
										
										СтрокаДанных.Результат	 = РезультатЗаСчетРаботодателя;
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы;
										СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
										СтрокаДанных.СубконтоДт2 = Неопределено;
										СтрокаДанных.СубконтоДт3 = Неопределено;
										СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
										СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
										СтрокаДанных.СубконтоКт2 = Неопределено;
										СтрокаДанных.СубконтоКт3 = Неопределено;
										СтрокаДанных.СчетДтНУ	 = Неопределено;
										СтрокаДанных.СчетКтНУ	 = Неопределено;
										СтрокаДанных.СубконтоДтНУ1 = Неопределено;
										СтрокаДанных.СубконтоДтНУ2 = Неопределено;
										СтрокаДанных.СубконтоДтНУ3 = Неопределено;
										СтрокаДанных.СубконтоКтНУ1 = Неопределено;
										СтрокаДанных.СубконтоКтНУ2 = Неопределено;
										СтрокаДанных.СубконтоКтНУ3 = Неопределено;
										СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
										ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
										
									Иначе
										
										СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
										Если Не ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя Тогда
											// обходим строки и вычисляем долю результата по базовым записям
											// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
											СуммарнаяДоля = 0;
											ПерваяИзГруппыСтрок = Истина;
											Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
												
												Если Не ДанныеУчета.БазаСреднегоЗаработкаЕНВД Тогда
													// если это не первая из группы "базовых" строк по одной строке основного регистра
													// то создаем очередную строку движений
													Если Не ПерваяИзГруппыСтрок Тогда
														СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
													Иначе
														ПерваяИзГруппыСтрок = Ложь;
													КонецЕсли;
													
													Если СуммаПоСтроке = 0 Тогда
														Доля = 0;
													Иначе
														Если ДанныеУчета.РезультатБаза = NULL Тогда
															Доля = 0;
														Иначе
															Доля = Окр(РезультатЗаСчетРаботодателя * ДанныеУчета.РезультатБаза / (СуммаПоСтроке - СуммаПоСтрокеЕНВД),2);
														КонецЕсли;
													КонецЕсли;
													
													// если счет пустой - заполним счет данными базы
													Если ДанныеУчета.СчетДт = ПустойСчет Тогда
														Если Не ДанныеУчета.СчетДтРазрез = NULL Тогда
															СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДтРазрез;
															СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(ДанныеУчета.СубконтоДт1Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(ДанныеУчета.СубконтоДт2Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(ДанныеУчета.СубконтоДт3Разрез, ПараметрыПолученияСубконто);
															ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, ПустойСчет, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
															Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
																СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУРазрез;
																СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ1Разрез, ПараметрыПолученияСубконто);
																СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ2Разрез, ПараметрыПолученияСубконто);
																СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ3Разрез, ПараметрыПолученияСубконто);
															КонецЕсли;
														КонецЕсли;
													КонецЕсли;
													// если счет пустой - заполним счет данными базы
													Если ДанныеУчета.СчетКт = ПустойСчет Тогда
														Если Не ДанныеУчета.СчетКтРазрез = NULL Тогда
															СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКтРазрез;
															СтрокаДанных.СубконтоКт1 = ПолучитьСубконто(ДанныеУчета.СубконтоКт1Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоКт2 = ПолучитьСубконто(ДанныеУчета.СубконтоКт2Разрез, ПараметрыПолученияСубконто);
															СтрокаДанных.СубконтоКт3 = ПолучитьСубконто(ДанныеУчета.СубконтоКт3Разрез, ПараметрыПолученияСубконто);
															ЗаполнитьПодразделениеДтКт(СтрокаДанных, ПустойСчет, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
															Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
																СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУРазрез;
																СтрокаДанных.СубконтоКтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоКтНУ1Разрез, ПараметрыПолученияСубконто);
																СтрокаДанных.СубконтоКтНУ2 = Неопределено;
																СтрокаДанных.СубконтоКтНУ3 = Неопределено;
															КонецЕсли;
															ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
															СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.Принимаются;		
														КонецЕсли;
													КонецЕсли;
													СтрокаДанных.Результат = ?(РезультатЗаСчетРаботодателя > 0,Мин(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля),Макс(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля));
													Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
														СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
													КонецЕсли;
													СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
												КонецЕсли;
												Если Не ДанныеУчета.Следующий() Тогда
													ПродолжатьОбработку = Ложь;
													Прервать;
												КонецЕсли;
											КонецЦикла;
											// ошибки округления складываются на последнюю запись из группы базовых записей
											СтрокаДанных.Результат = СтрокаДанных.Результат + РезультатЗаСчетРаботодателя - СуммарнаяДоля;
											Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
												СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
											КонецЕсли;
											
										Иначе //задана способ отражения доли пособия за счет работодателя
											
											СтрокаДанных.Результат	 = РезультатЗаСчетРаботодателя;
											Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
												СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
											КонецЕсли;
											СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
											СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1;
											СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2;
											СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3;
											СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
											СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
											СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
											СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
											Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
												СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУ;
												СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУ;
												СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
												СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
												СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
												СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
												СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
												СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
											КонецЕсли;
											СтрокаДанных.ОтражениеВУСН = ДанныеУчета.ОтражениеВУСН;
											
											// автозаполним субконто
											АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);	
											
										КонецЕсли;
										
									КонецЕсли;
								КонецЕсли;									
								
								Пока ПродолжатьОбработку И ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
									Если Не ДанныеУчета.Следующий() Тогда
										ПродолжатьОбработку = Ложь;
										Прервать;
									КонецЕсли;
								КонецЦикла;
								
							Иначе // ДанныеУчета.ДатаНачалаСобытия > мДатаЗакона180ФЗ, налоговые режимы: УСН и УСН+ЕНВД, с уплатой добровольных взносов
								
								СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_ДобровольныеВзносы; 
								СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
								СтрокаДанных.СубконтоДт2 = Неопределено;
								СтрокаДанных.СубконтоДт3 = Неопределено;
								СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = Неопределено;
								СтрокаДанных.СубконтоКт3 = Неопределено;
								СтрокаДанных.СчетДтНУ	 = Неопределено;
								СтрокаДанных.СчетКтНУ	 = Неопределено;
								СтрокаДанных.СубконтоДтНУ1 = Неопределено;
								СтрокаДанных.СубконтоДтНУ2 = Неопределено;
								СтрокаДанных.СубконтоДтНУ3 = Неопределено;
								СтрокаДанных.СубконтоКтНУ1 = Неопределено;
								СтрокаДанных.СубконтоКтНУ2 = Неопределено;
								СтрокаДанных.СубконтоКтНУ3 = Неопределено;
								СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
								СтрокаДанных.Результат	 = ДанныеУчета.Результат ;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
								Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
									Если Не ДанныеУчета.Следующий() Тогда
										ПродолжатьОбработку = Ложь;
										Прервать;
									КонецЕсли;
								КонецЦикла;							
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				Иначе // налоговые режимы: ОСН, ОСН+ЕНВД но доли ЕНВД нет, СуммаПоСтрокеЕНВД = 0
					
					Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.ОтпускПоБеременностиИРодамПоУходуЗаРебенком Тогда
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					ИначеЕсли ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве Тогда
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					ИначеЕсли  ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйПрочий Тогда
						СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
						СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
						СтрокаДанных.СубконтоДт2 = Неопределено;
						СтрокаДанных.СубконтоДт3 = Неопределено;
						СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
						СтрокаДанных.СубконтоКт2 = Неопределено;
						СтрокаДанных.СубконтоКт3 = Неопределено;
						СтрокаДанных.СчетДтНУ	 = Неопределено;
						СтрокаДанных.СчетКтНУ	 = Неопределено;
						СтрокаДанных.СубконтоДтНУ1 = Неопределено;
						СтрокаДанных.СубконтоДтНУ2 = Неопределено;
						СтрокаДанных.СубконтоДтНУ3 = Неопределено;
						СтрокаДанных.СубконтоКтНУ1 = Неопределено;
						СтрокаДанных.СубконтоКтНУ2 = Неопределено;
						СтрокаДанных.СубконтоКтНУ3 = Неопределено;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					Иначе	
						
						// результат пособия за счет работодателя
						РезультатЗаСчетРаботодателя = Окр(ДанныеУчета.Результат * ДанныеУчета.ДоляБЛЗаСчетРаботодателя,2);
						
						Если ДанныеУчета.Результат <> РезультатЗаСчетРаботодателя Тогда
							//есть доля за счет ФСС
							СтрокаДанных.Результат	 = ДанныеУчета.Результат - РезультатЗаСчетРаботодателя;
							Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
								СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
							КонецЕсли;
							СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
							СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
							СтрокаДанных.СубконтоДт2 = Неопределено;
							СтрокаДанных.СубконтоДт3 = Неопределено;
							СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
							СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
							СтрокаДанных.СубконтоКт2 = Неопределено;
							СтрокаДанных.СубконтоКт3 = Неопределено;
							СтрокаДанных.СчетДтНУ	 = Неопределено;
							СтрокаДанных.СчетКтНУ	 = Неопределено;
							СтрокаДанных.СубконтоДтНУ1 = Неопределено;
							СтрокаДанных.СубконтоДтНУ2 = Неопределено;
							СтрокаДанных.СубконтоДтНУ3 = Неопределено;
							СтрокаДанных.СубконтоКтНУ1 = Неопределено;
							СтрокаДанных.СубконтоКтНУ2 = Неопределено;
							СтрокаДанных.СубконтоКтНУ3 = Неопределено;
							ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
							
							Если ЕстьДоляБЛЗаСчетРаботодателя Тогда
								//доля за счет работодателя есть, скорректируем начало периода действия доли за счет ФСС
								СтрокаДанных.ПериодДействияНачало = Мин(СтрокаДанных.ПериодДействияКонец, ТретийКалендарныйДень);
							КонецЕсли;
							
						КонецЕсли;	
						
						Если РезультатЗаСчетРаботодателя <> 0 Тогда
							
							Если ДанныеУчета.Результат <> РезультатЗаСчетРаботодателя Тогда
								//в периоде есть оплата за счет работодателя и за счет ФСС, создадим новую сторку движений
								СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
							КонецЕсли;
							
							СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
							
							Если Не ДанныеУчета.УказанСпособОтраженияВБухучетеЗаСчетРаботодателя Тогда
								// обходим строки и вычисляем долю результата по базовым записям
								// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
								СуммарнаяДоля = 0;
								ПерваяИзГруппыСтрок = Истина;
								Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
									
									Если Не ДанныеУчета.БазаСреднегоЗаработкаЕНВД Тогда
										// если это не первая из группы "базовых" строк по одной строке основного регистра
										// то создаем очередную строку движений
										Если Не ПерваяИзГруппыСтрок Тогда
											СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
											СтрокаДанных.ПериодДействияКонец = Мин(СтрокаДанных.ПериодДействияКонец, ВторойКалендарныйДень);
										Иначе
											ПерваяИзГруппыСтрок = Ложь;
										КонецЕсли;
										
										Если СуммаПоСтроке = 0 Тогда
											Доля = 0;
										Иначе
											Если ДанныеУчета.РезультатБаза = NULL Тогда
												Доля = 0;
											Иначе
												Доля = Окр(РезультатЗаСчетРаботодателя * ДанныеУчета.РезультатБаза / СуммаПоСтроке,2);
											КонецЕсли;
										КонецЕсли;
										
										// если счет пустой - заполним счет данными базы
										Если ДанныеУчета.СчетДт = ПустойСчет Тогда
											Если Не ДанныеУчета.СчетДтРазрез = NULL Тогда
												СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДтРазрез;
												СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(ДанныеУчета.СубконтоДт1Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(ДанныеУчета.СубконтоДт2Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(ДанныеУчета.СубконтоДт3Разрез, ПараметрыПолученияСубконто);
												ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, ПустойСчет, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
												Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
													СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУРазрез;
													СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ1Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ2Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(ДанныеУчета.СубконтоДтНУ3Разрез, ПараметрыПолученияСубконто);
												КонецЕсли;
											КонецЕсли;
										КонецЕсли;
										// если счет пустой - заполним счет данными базы
										Если ДанныеУчета.СчетКт = ПустойСчет Тогда
											Если Не ДанныеУчета.СчетКтРазрез = NULL Тогда
												СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКтРазрез;
												СтрокаДанных.СубконтоКт1 = ПолучитьСубконто(ДанныеУчета.СубконтоКт1Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоКт2 = ПолучитьСубконто(ДанныеУчета.СубконтоКт2Разрез, ПараметрыПолученияСубконто);
												СтрокаДанных.СубконтоКт3 = ПолучитьСубконто(ДанныеУчета.СубконтоКт3Разрез, ПараметрыПолученияСубконто);
												ЗаполнитьПодразделениеДтКт(СтрокаДанных, ПустойСчет, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
												Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
													СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУРазрез;
													СтрокаДанных.СубконтоКтНУ1 = ПолучитьСубконто(ДанныеУчета.СубконтоКтНУ1Разрез, ПараметрыПолученияСубконто);
													СтрокаДанных.СубконтоКтНУ2 = Неопределено;
													СтрокаДанных.СубконтоКтНУ3 = Неопределено;
												КонецЕсли;
												ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
												СтрокаДанных.ОтражениеВУСН	 = ДанныеУчета.ОтражениеВУСНРазрез;		
											КонецЕсли;
										КонецЕсли;
										СтрокаДанных.Результат = ?(РезультатЗаСчетРаботодателя > 0,Мин(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля),Макс(Доля,РезультатЗаСчетРаботодателя - СуммарнаяДоля));
										Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
											СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
										КонецЕсли;
										СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
									КонецЕсли;
									Если Не ДанныеУчета.Следующий() Тогда
										ПродолжатьОбработку = Ложь;
										Прервать;
									КонецЕсли;
								КонецЦикла;
								// ошибки округления складываются на последнюю запись из группы базовых записей
								СтрокаДанных.Результат = СтрокаДанных.Результат + РезультатЗаСчетРаботодателя - СуммарнаяДоля;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								
							Иначе //задана способ отражения доли пособия за счет работодателя
								
								СтрокаДанных.Результат	 = РезультатЗаСчетРаботодателя;
								Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
								КонецЕсли;
								СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
								СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1;
								СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2;
								СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3;
								СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
								СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
								СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
								СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
								Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
									СтрокаДанных.СчетДтНУ	 = ДанныеУчета.СчетДтНУ;
									СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУ;
									СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
									СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
									СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
									СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
									СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
									СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
								КонецЕсли;
								
								// автозаполним субконто
								АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);	
								
							КонецЕсли;
						КонецЕсли;
						
						Пока ПродолжатьОбработку И ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
							Если Не ДанныеУчета.Следующий() Тогда
								ПродолжатьОбработку = Ложь;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(ДанныеУчета.ДоляСпособаОтражения)  Тогда
			// необходимо обойти все данные относящиеся к одной строке основного регистра и 
			// выполнить распределение, нормируя на долю 
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если Не ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатБаза = NULL Тогда
						Доля = 0;
					Иначе
						Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатБаза / СуммаПоСтроке,2);
					КонецЕсли;
				КонецЕсли;
				
				// единственное отличие от обработки данных распределяемых по базе - 
				// данные учета получаем не из полей запроса ...Разрез, а из "обычных" полей 
				СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
				СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
				СтрокаДанных.СубконтоКт1 = ДанныеУчета.СубконтоКт1;
				СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
				СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
				
				Если ЗначениеЗаполнено(ДанныеУчета.ПроцентЕНВД) Тогда
					
					// данный способ отражений подпадает под ЕНВД 
					
					СтрокаДанных.СчетДтНУ		= Неопределено;
					СтрокаДанных.СчетКтНУ		= Неопределено;
					СтрокаДанных.СубконтоДтНУ1	= Неопределено;
					СтрокаДанных.СубконтоДтНУ2	= Неопределено;
					СтрокаДанных.СубконтоДтНУ3	= Неопределено;
					СтрокаДанных.СубконтоКтНУ1	= Неопределено;
					СтрокаДанных.СубконтоКтНУ2	= Неопределено;
					СтрокаДанных.СубконтоКтНУ3	= Неопределено;
					СтрокаДанных.ОтражениеВУСН	= Неопределено;
					
				Иначе	
					
					Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
						СтрокаДанных.СчетДтНУ 	 = ДанныеУчета.СчетДтНУ;
						СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
						СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
						СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
						Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
							// уточним статью затрат за пособия за счет работодателя
							СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ1, ПараметрыПолученияСубконто);
							СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ2, ПараметрыПолученияСубконто);
							СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ3, ПараметрыПолученияСубконто);
						КонецЕсли;
						СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУ;
						СтрокаДанных.СубконтоКтНУ1 = ?(ДанныеУчета.НомерСубконтоСт255НК = 1, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ1);
						СтрокаДанных.СубконтоКтНУ2 = ?(ДанныеУчета.НомерСубконтоСт255НК = 2, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ2);
						СтрокаДанных.СубконтоКтНУ3 = ?(ДанныеУчета.НомерСубконтоСт255НК = 3, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ3);
					КонецЕсли;
					СтрокаДанных.ОтражениеВУСН	 = ДанныеУчета.ОтражениеВУСН;
					
				КонецЕсли;
				
				// автозаполним субконто
				АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);
				
				Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
					// уточним статью затрат за пособия за счет работодателя
					СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(СтрокаДанных.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(СтрокаДанных.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(СтрокаДанных.СубконтоДт3, ПараметрыПолученияСубконто);
				КонецЕсли;
				
				СтрокаДанных.Результат = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
				КонецЕсли;
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Результат = СтрокаДанных.Результат + ПолныйРезультат - СуммарнаяДоля;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
			КонецЕсли;
			
		ИначеЕсли ДанныеУчета.СтратегияОтраженияВУчете <> Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления Тогда
			
			// обработаем записи с точки зрения ЕНВД
			// если задана конкретная проводка и задан процент ЕНВД
			
			Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
				
				Если ЗначениеЗаполнено(ДанныеУчета.СчетЕНВД) Тогда
					
					СтрокаДанных.СчетДт         = ДанныеУчета.СчетЕНВД;
					СтрокаДанных.СубконтоДт1 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто1ЕНВД),ДанныеУчета.Субконто1ЕНВД,СтрокаДанных.СубконтоДт1);
					СтрокаДанных.СубконтоДт2 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто2ЕНВД),ДанныеУчета.Субконто2ЕНВД,СтрокаДанных.СубконтоДт2);
					СтрокаДанных.СубконтоДт3 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто3ЕНВД),ДанныеУчета.Субконто3ЕНВД,СтрокаДанных.СубконтоДт3);
					
				КонецЕсли; 
				
				Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
					// уточним статью затрат за пособия за счет работодателя
					СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(СтрокаДанных.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(СтрокаДанных.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(СтрокаДанных.СубконтоДт3, ПараметрыПолученияСубконто);
				КонецЕсли;
				
				СтрокаДанных.СчетДтНУ		= Неопределено;
				СтрокаДанных.СчетКтНУ		= Неопределено;
				СтрокаДанных.СубконтоДтНУ1	= Неопределено;
				СтрокаДанных.СубконтоДтНУ2	= Неопределено;
				СтрокаДанных.СубконтоДтНУ3	= Неопределено;
				СтрокаДанных.СубконтоКтНУ1	= Неопределено;
				СтрокаДанных.СубконтоКтНУ2	= Неопределено;
				СтрокаДанных.СубконтоКтНУ3	= Неопределено;
				СтрокаДанных.ОтражениеВУСН	= Неопределено;
				
			ИначеЕсли ДанныеУчета.ПроцентЕНВД = 0 Тогда	
				
				Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
					// уточним статью затрат за пособия за счет работодателя
					СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(СтрокаДанных.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(СтрокаДанных.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(СтрокаДанных.СубконтоДт3, ПараметрыПолученияСубконто);
					
					СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ3, ПараметрыПолученияСубконто);
				КонецЕсли;
				
			Иначе
				// заводим новую строку данных - для ввода доли дохода под ЕНВД
				НоваяСтрока = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
				
				// вычислим результат для дохода под ЕНВД
				РезультатПодЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
				// ресурсы
				НоваяСтрока.Результат = РезультатПодЕНВД;
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					НоваяСтрока.СуммаНУ = НоваяСтрока.Результат;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ДанныеУчета.СчетЕНВД) Тогда
					
					НоваяСтрока.СчетДт			= ДанныеУчета.СчетЕНВД;
					НоваяСтрока.СубконтоДт1 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто1ЕНВД),ДанныеУчета.Субконто1ЕНВД,НоваяСтрока.СубконтоДт1);
					НоваяСтрока.СубконтоДт2 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто2ЕНВД),ДанныеУчета.Субконто2ЕНВД,НоваяСтрока.СубконтоДт2);
					НоваяСтрока.СубконтоДт3 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто3ЕНВД),ДанныеУчета.Субконто3ЕНВД,НоваяСтрока.СубконтоДт3);
					
				КонецЕсли; 
				
				Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
					// уточним статью затрат за пособия за счет работодателя
					НоваяСтрока.СубконтоДт1 = ПолучитьСубконто(НоваяСтрока.СубконтоДт1, ПараметрыПолученияСубконто);
					НоваяСтрока.СубконтоДт2 = ПолучитьСубконто(НоваяСтрока.СубконтоДт2, ПараметрыПолученияСубконто);
					НоваяСтрока.СубконтоДт3 = ПолучитьСубконто(НоваяСтрока.СубконтоДт3, ПараметрыПолученияСубконто);
				КонецЕсли;
				
				НоваяСтрока.СчетДтНУ = Неопределено;
				НоваяСтрока.СчетКтНУ = Неопределено;
				НоваяСтрока.СубконтоДтНУ1 = Неопределено;
				НоваяСтрока.СубконтоДтНУ2 = Неопределено;
				НоваяСтрока.СубконтоДтНУ3 = Неопределено;
				НоваяСтрока.СубконтоКтНУ1 = Неопределено;
				НоваяСтрока.СубконтоКтНУ2 = Неопределено;
				НоваяСтрока.СубконтоКтНУ3 = Неопределено;
				НоваяСтрока.ОтражениеВУСН = Неопределено;		
				
				НоваяСтрока.Результат = РезультатПодЕНВД;
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					НоваяСтрока.СуммаНУ = НоваяСтрока.Результат;
				КонецЕсли;
				// основной строке данных уменьшаем результат
				СтрокаДанных.Результат = ДанныеУчета.Результат - РезультатПодЕНВД;
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;
			
		ИначеЕсли ДанныеУчета.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления Тогда
			// вычисляем результат нормируя его на базу для строк базы относящихся 
			// к одной строке основного регистра
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если 	ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
					Успешно = Ложь;
					ЗарегистрироватьОшибкуОбработкиДанныхУчета(ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, 5);
				Иначе
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатБаза = NULL Тогда
						Доля = 0;
					Иначе
						Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатБаза / СуммаПоСтроке,2);
					КонецЕсли;
				КонецЕсли;
				
				// если счет пустой - заполним счет данными базы
				Если ДанныеУчета.СчетДт = ПустойСчет Тогда
					Если Не ДанныеУчета.СчетДтРазрез = NULL Тогда
						СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДтРазрез;
						СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1Разрез;
						СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2Разрез;
						СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3Разрез;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, ПустойСчет, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
							СтрокаДанных.СчетДтНУ 	 = ДанныеУчета.СчетДтНУРазрез;
							СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1Разрез;
							СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2Разрез;
							СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3Разрез;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				// если счет пустой - заполним счет данными базы
				Если ДанныеУчета.СчетКт = ПустойСчет Тогда
					Если Не ДанныеУчета.СчетКтРазрез = NULL Тогда
						СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКтРазрез;
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.СубконтоКт1Разрез;
						СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2Разрез;
						СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3Разрез;
						ЗаполнитьПодразделениеДтКт(СтрокаДанных, ПустойСчет, СтрокаДанных.СчетКт, ДанныеУчета.ПодразделениеОрганизации, ПустойСчет);
						Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
							СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУРазрез;
							СтрокаДанных.СубконтоКтНУ1 = ?(ДанныеУчета.НомерСубконтоСт255НКБазы = 1, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ1Разрез);
							СтрокаДанных.СубконтоКтНУ2 = ?(ДанныеУчета.НомерСубконтоСт255НКБазы = 2, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ2Разрез);
							СтрокаДанных.СубконтоКтНУ3 = ?(ДанныеУчета.НомерСубконтоСт255НКБазы = 3, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ3Разрез);
						КонецЕсли;
						ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
						СтрокаДанных.СпособРаспределенияЗатрат	 = ДанныеУчета.СпособРаспределенияЗатратРазрез;
						СтрокаДанных.ОтражениеВУСН	 = ДанныеУчета.ОтражениеВУСНРазрез;		
					КонецЕсли;
				КонецЕсли;
				
				СтрокаДанных.Результат = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
				КонецЕсли;
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Результат = СтрокаДанных.Результат + ПолныйРезультат - СуммарнаяДоля;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
			КонецЕсли;
		Иначе
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	// при записи данных учета не затираем уже введенные движения
	НаборЗаписей.Записать(Ложь);
	
КонецПроцедуры	

// Процедура формирует набор записей по данным из запроса
// Параметры:
//	РезультатДанныеУчета		- выборка по резултату запроса, возвращенная функцией 
//								  ПолучитьДанныеУчета
//	Успешно						- в этот параметр возвращается значение Ложь, если обработка не выполнена
//								  (например, если не оказалось базовых данных)
//	НаборЗаписей - набор записей
//
//	ПараметрыПолученияСубконто - структура, в которой хранится соответствие статей затрат начислений и 
//								 статей отражения в учете б/л, для отражения доли б/з за счет работодателя
//
// Возвращаемое значение:
//	массив категорий начислений
//
Процедура ОбработатьДанныеУчета2011(РезультатДанныеУчета, Успешно, НаборЗаписей, ПараметрыПолученияСубконто)
	// признак основных начислений
	ЭтоОсновныеНачисления = (ТипЗнч(НаборЗаписей) = Тип("РегистрРасчетаНаборЗаписей.БУОсновныеНачисления"));
	
	// пустая ссылка на счет - для проверок способов отражения в бухучете
	ПустойСчет = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	
	Счет70 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
	
	// структура поиска для позиционирования в ДанныеНалоговогоУчетаВспомогательные
	// при необходимости суммирования "базовых" ресурсов
	СтруктураПоиска = Новый Структура("Регистратор,НомерСтроки");
	
	// структура поиска в таблице ошибок мТаблицаОшибок
	СтруктураПоискаОшибок = Новый Структура("Регистратор,НомерСтроки,КодОшибки");
	
	// основная выборка - по ней ведем обход и вводим записи движений
	ДанныеУчета = РезультатДанныеУчета.Выбрать();
	
	// вспомогательная выборка - по ней ведем суммирование базовых результатов
	ДанныеУчетаВспомогательные = РезультатДанныеУчета.Выбрать();
	
	ПродолжатьОбработку = ДанныеУчета.Следующий();
	Пока ПродолжатьОбработку Цикл
		
		СтрокаДанных = СоздатьСтрокуДвижений2011(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
		
		Если ДанныеУчета.Сторно Тогда
			
			// необходимо обойти все данные относящиеся к одной строке основного регистра и 
			// выполнить распределение, нормируя на долю 
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если ДанныеУчетаВспомогательные.РезультатСторно = NULL Тогда
					//для сторно-записи нет данных отражения в учете
					Успешно = Ложь;
					ЗарегистрироватьОшибкуОбработкиДанныхУчета(ДанныеУчетаВспомогательные, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, 1);
				Иначе
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатСторно;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуДвижений2011(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатСторно = NULL Тогда
						Доля = 0;
					Иначе
						Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатСторно / СуммаПоСтроке,2);
					КонецЕсли;
				КонецЕсли;
				
				// единственное отличие от обработки данных распределяемых по базе - 
				// данные учета получаем не из полей запроса ...Разрез, а из "обычных" полей 
				СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
				СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
				СтрокаДанных.СубконтоКт1 = ДанныеУчета.СубконтоКт1;
				СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
				СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
				
				Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СчетДтНУ 	   = ДанныеУчета.СчетДтНУ;
					СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
					СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
					СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
					СтрокаДанных.СчетКтНУ	   = ДанныеУчета.СчетКтНУ;
					СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
					СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
					СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
				КонецЕсли;
				
				СтрокаДанных.ОтражениеВУСН = ДанныеУчета.ОтражениеВУСН;
				
				// автозаполним субконто
				АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);
				
				СтрокаДанных.Результат = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
				КонецЕсли;
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
				
				Если ДанныеУчета.ЭтоПособияФСС и ДанныеУчета.ПериодДействияНачалоСторно <> NULL Тогда
					СтрокаДанных.ПериодДействияНачало = ДанныеУчета.ПериодДействияНачалоСторно;	
					СтрокаДанных.ПериодДействияКонец  = ДанныеУчета.ПериодДействияКонецСторно;
				КонецЕсли;	
				
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Результат = СтрокаДанных.Результат + ПолныйРезультат - СуммарнаяДоля;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
			КонецЕсли;
		ИначеЕсли ДанныеУчета.ЭтоЕдиновременноеПособиеФСС Тогда
			
			СтрокаДанных.СчетДт 	 = ПланыСчетов.Хозрасчетный.ФСС;
			СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
			СтрокаДанных.СубконтоДт2 = Неопределено;
			СтрокаДанных.СубконтоДт3 = Неопределено;
			СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
			СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
			СтрокаДанных.СубконтоКт2 = Неопределено;
			СтрокаДанных.СубконтоКт3 = Неопределено;
			СтрокаДанных.СчетДтНУ	 = Неопределено;
			СтрокаДанных.СчетКтНУ	 = Неопределено;
			СтрокаДанных.СубконтоДтНУ1 = Неопределено;
			СтрокаДанных.СубконтоДтНУ2 = Неопределено;
			СтрокаДанных.СубконтоДтНУ3 = Неопределено;
			СтрокаДанных.СубконтоКтНУ1 = Неопределено;
			СтрокаДанных.СубконтоКтНУ2 = Неопределено;
			СтрокаДанных.СубконтоКтНУ3 = Неопределено;
			СтрокаДанных.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются;
			
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
			КонецЕсли;
			
			ЗаполнитьПодразделениеДтКт2011(СтрокаДанных, ДанныеУчета);
			
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;
			
		ИначеЕсли ДанныеУчета.ЭтоПособияФСС Тогда
			
			//
			// обработаем записи расчета пособий
			//
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйТравмаНаПроизводстве Тогда
				СчетФСС = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ;
			Иначе
				СчетФСС = ПланыСчетов.Хозрасчетный.ФСС;
			КонецЕсли;
			
			СтрокаДанных.СчетДт 	 = СчетФСС;
			СтрокаДанных.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию;
			СтрокаДанных.СубконтоДт2 = Неопределено;
			СтрокаДанных.СубконтоДт3 = Неопределено;
			СтрокаДанных.СчетКт 	 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
			СтрокаДанных.СубконтоКт1 = ДанныеУчета.ФизЛицо;
			СтрокаДанных.СубконтоКт2 = Неопределено;
			СтрокаДанных.СубконтоКт3 = Неопределено;
			СтрокаДанных.СчетДтНУ	 = Неопределено;
			СтрокаДанных.СчетКтНУ	 = Неопределено;
			СтрокаДанных.СубконтоДтНУ1 = Неопределено;
			СтрокаДанных.СубконтоДтНУ2 = Неопределено;
			СтрокаДанных.СубконтоДтНУ3 = Неопределено;
			СтрокаДанных.СубконтоКтНУ1 = Неопределено;
			СтрокаДанных.СубконтоКтНУ2 = Неопределено;
			СтрокаДанных.СубконтоКтНУ3 = Неопределено;
			СтрокаДанных.ОтражениеВУСН	 = Перечисления.ОтражениеВУСН.НеПринимаются;
			
			ЗаполнитьПодразделениеДтКт2011(СтрокаДанных, ДанныеУчета);
			
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
			КонецЕсли;
			
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ЗначениеЗаполнено(ДанныеУчета.ДоляСпособаОтражения)  Тогда
			// необходимо обойти все данные относящиеся к одной строке основного регистра и 
			// выполнить распределение, нормируя на долю 
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если Не ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуДвижений2011(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатБаза = NULL Тогда
						Доля = 0;
					Иначе
						Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатБаза / СуммаПоСтроке,2);
					КонецЕсли;
				КонецЕсли;
				
				// единственное отличие от обработки данных распределяемых по базе - 
				// данные учета получаем не из полей запроса ...Разрез, а из "обычных" полей 
				СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДт;
				СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКт;
				СтрокаДанных.СубконтоКт1 = ДанныеУчета.СубконтоКт1;
				СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
				СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
				
				Если ЗначениеЗаполнено(ДанныеУчета.ПроцентЕНВД) Тогда
					
					// данный способ отражений подпадает под ЕНВД 
					
					СтрокаДанных.СчетДтНУ		= Неопределено;
					СтрокаДанных.СчетКтНУ		= Неопределено;
					СтрокаДанных.СубконтоДтНУ1	= Неопределено;
					СтрокаДанных.СубконтоДтНУ2	= Неопределено;
					СтрокаДанных.СубконтоДтНУ3	= Неопределено;
					СтрокаДанных.СубконтоКтНУ1	= Неопределено;
					СтрокаДанных.СубконтоКтНУ2	= Неопределено;
					СтрокаДанных.СубконтоКтНУ3	= Неопределено;
					СтрокаДанных.ОтражениеВУСН	= Перечисления.ОтражениеВУСН.НеПринимаются;
					
				Иначе	
					
					Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
						СтрокаДанных.СчетДтНУ 	 = ДанныеУчета.СчетДтНУ;
						СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
						СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
						СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
						Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
							// уточним статью затрат за пособия за счет работодателя
							СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ1, ПараметрыПолученияСубконто);
							СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ2, ПараметрыПолученияСубконто);
							СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ3, ПараметрыПолученияСубконто);
						КонецЕсли;
						СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУ;
						СтрокаДанных.СубконтоКтНУ1 = ?(ДанныеУчета.НомерСубконтоСт255НК = 1, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ1);
						СтрокаДанных.СубконтоКтНУ2 = ?(ДанныеУчета.НомерСубконтоСт255НК = 2, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ2);
						СтрокаДанных.СубконтоКтНУ3 = ?(ДанныеУчета.НомерСубконтоСт255НК = 3, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ3);
					КонецЕсли;
					СтрокаДанных.ОтражениеВУСН	 = ДанныеУчета.ОтражениеВУСН;
					
				КонецЕсли;
				
				// автозаполним субконто
				АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);
				
				Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
					// уточним статью затрат за пособия за счет работодателя
					СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(СтрокаДанных.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(СтрокаДанных.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(СтрокаДанных.СубконтоДт3, ПараметрыПолученияСубконто);
				КонецЕсли;
				
				СтрокаДанных.Результат = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
				КонецЕсли;
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Результат = СтрокаДанных.Результат + ПолныйРезультат - СуммарнаяДоля;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
			КонецЕсли;
			
		ИначеЕсли ДанныеУчета.СтратегияОтраженияВУчете <> Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления Тогда
			
			// обработаем записи с точки зрения ЕНВД
			// если задана конкретная проводка и задан процент ЕНВД
			
			Если ДанныеУчета.ПроцентЕНВД = 100 Тогда
				
				Если ЗначениеЗаполнено(ДанныеУчета.СчетЕНВД) Тогда
					
					Если ЗначениеЗаполнено(ДанныеУчета.СчетДт) Тогда  
						
						// Для правильного отображения порядка субконто, если этот порядок отличается для СчетДт и СчетДтЕНВД (Для счетов группы 44.01, 44.02). 
						Если ((ДанныеУчета.СчетЕНВД.Родитель = ПланыСчетов.Хозрасчетный.ИздержкиОбращения		// СчетЕНВД = 44.01 
							и ДанныеУчета.СчетДт.Родитель <> ПланыСчетов.Хозрасчетный.КоммерческиеРасходы)      // СчетДт <> 44.02
							или (ДанныеУчета.СчетЕНВД.Родитель = ПланыСчетов.Хозрасчетный.КоммерческиеРасходы	// СчетЕНВД = 44.02
							и ДанныеУчета.СчетДт.Родитель <> ПланыСчетов.Хозрасчетный.ИздержкиОбращения)		// СчетДт <> 44.01
							ИЛИ 
							(ДанныеУчета.СчетДт.Родитель = ПланыСчетов.Хозрасчетный.ИздержкиОбращения			// СчетДт = 44.01
							и ДанныеУчета.СчетЕНВД.Родитель <> ПланыСчетов.Хозрасчетный.КоммерческиеРасходы)	// CчетЕНВД <> 44.02 
							или(ДанныеУчета.СчетДт.Родитель = ПланыСчетов.Хозрасчетный.КоммерческиеРасходы		// СчетДт = 44.02
							и ДанныеУчета.СчетЕНВД.Родитель <> ПланыСчетов.Хозрасчетный.ИздержкиОбращения))		// CчетЕНВД <> 44.01	
							И 
							(ДанныеУчета.СчетЕНВД.Родитель <> ДанныеУчета.СчетДт.Родитель) Тогда
							
							СтрокаДанных.СчетДт         = ДанныеУчета.СчетЕНВД;
							СубконтоДляПодстановки = СтрокаДанных.СубконтоДт1;
							СтрокаДанных.СубконтоДт1 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто1ЕНВД),ДанныеУчета.Субконто1ЕНВД,СтрокаДанных.СубконтоДт2);
							СтрокаДанных.СубконтоДт2 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто2ЕНВД),ДанныеУчета.Субконто2ЕНВД,СубконтоДляПодстановки);
							СтрокаДанных.СубконтоДт3 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто3ЕНВД),ДанныеУчета.Субконто3ЕНВД,СтрокаДанных.СубконтоДт3);
							
						Иначе
							
							СтрокаДанных.СчетДт         = ДанныеУчета.СчетЕНВД;
							СтрокаДанных.СубконтоДт1 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто1ЕНВД),ДанныеУчета.Субконто1ЕНВД,СтрокаДанных.СубконтоДт1);
							СтрокаДанных.СубконтоДт2 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто2ЕНВД),ДанныеУчета.Субконто2ЕНВД,СтрокаДанных.СубконтоДт2);
							СтрокаДанных.СубконтоДт3 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто3ЕНВД),ДанныеУчета.Субконто3ЕНВД,СтрокаДанных.СубконтоДт3);
							
						КонецЕсли; 
						
					КонецЕсли; 
					
				КонецЕсли; 
				
				Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
					// уточним статью затрат за пособия за счет работодателя
					СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(СтрокаДанных.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(СтрокаДанных.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(СтрокаДанных.СубконтоДт3, ПараметрыПолученияСубконто);
				КонецЕсли;
				
				СтрокаДанных.СчетДтНУ		= Неопределено;
				СтрокаДанных.СчетКтНУ		= Неопределено;
				СтрокаДанных.СубконтоДтНУ1	= Неопределено;
				СтрокаДанных.СубконтоДтНУ2	= Неопределено;
				СтрокаДанных.СубконтоДтНУ3	= Неопределено;
				СтрокаДанных.СубконтоКтНУ1	= Неопределено;
				СтрокаДанных.СубконтоКтНУ2	= Неопределено;
				СтрокаДанных.СубконтоКтНУ3	= Неопределено;
				СтрокаДанных.ОтражениеВУСН	= Перечисления.ОтражениеВУСН.НеПринимаются;
				
			ИначеЕсли ДанныеУчета.ПроцентЕНВД = 0 Тогда	
				
				Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
					// уточним статью затрат за пособия за счет работодателя
					СтрокаДанных.СубконтоДт1 = ПолучитьСубконто(СтрокаДанных.СубконтоДт1, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт2 = ПолучитьСубконто(СтрокаДанных.СубконтоДт2, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДт3 = ПолучитьСубконто(СтрокаДанных.СубконтоДт3, ПараметрыПолученияСубконто);
					
					СтрокаДанных.СубконтоДтНУ1 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ1, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДтНУ2 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ2, ПараметрыПолученияСубконто);
					СтрокаДанных.СубконтоДтНУ3 = ПолучитьСубконто(СтрокаДанных.СубконтоДтНУ3, ПараметрыПолученияСубконто);
				КонецЕсли;
				
			Иначе
				// заводим новую строку данных - для ввода доли дохода под ЕНВД
				НоваяСтрока = СоздатьСтрокуДвижений2011(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
				
				// вычислим результат для дохода под ЕНВД
				РезультатПодЕНВД = Окр(ДанныеУчета.Результат * ДанныеУчета.ПроцентЕНВД / 100,2);
				// ресурсы
				НоваяСтрока.Результат = РезультатПодЕНВД;
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					НоваяСтрока.СуммаНУ = НоваяСтрока.Результат;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ДанныеУчета.СчетЕНВД) Тогда
					
					Если ЗначениеЗаполнено(ДанныеУчета.СчетДт) Тогда  
						
						// Для правильного отображения порядка субконто, если этот порядок отличается для СчетДт и СчетДтЕНВД (Для счетов группы 44.01, 44.02). 
						Если ((ДанныеУчета.СчетЕНВД.Родитель = ПланыСчетов.Хозрасчетный.ИздержкиОбращения		// СчетЕНВД = 44.01 
							и ДанныеУчета.СчетДт.Родитель <> ПланыСчетов.Хозрасчетный.КоммерческиеРасходы)      // СчетДт <> 44.02
							или (ДанныеУчета.СчетЕНВД.Родитель = ПланыСчетов.Хозрасчетный.КоммерческиеРасходы	// СчетЕНВД = 44.02
							и ДанныеУчета.СчетДт.Родитель <> ПланыСчетов.Хозрасчетный.ИздержкиОбращения)		// СчетДт <> 44.01
							ИЛИ 
							(ДанныеУчета.СчетДт.Родитель = ПланыСчетов.Хозрасчетный.ИздержкиОбращения			// СчетДт = 44.01
							и ДанныеУчета.СчетЕНВД.Родитель <> ПланыСчетов.Хозрасчетный.КоммерческиеРасходы)	// CчетЕНВД <> 44.02 
							или(ДанныеУчета.СчетДт.Родитель = ПланыСчетов.Хозрасчетный.КоммерческиеРасходы		// СчетДт = 44.02
							и ДанныеУчета.СчетЕНВД.Родитель <> ПланыСчетов.Хозрасчетный.ИздержкиОбращения))		// CчетЕНВД <> 44.01	
							И 
							(ДанныеУчета.СчетЕНВД.Родитель <> ДанныеУчета.СчетДт.Родитель) Тогда
							
							НоваяСтрока.СчетДт         = ДанныеУчета.СчетЕНВД;
							СубконтоДляПодстановки = СтрокаДанных.СубконтоДт1;
							НоваяСтрока.СубконтоДт1 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто1ЕНВД),ДанныеУчета.Субконто1ЕНВД,СтрокаДанных.СубконтоДт2);
							НоваяСтрока.СубконтоДт2 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто2ЕНВД),ДанныеУчета.Субконто2ЕНВД,СубконтоДляПодстановки);
							НоваяСтрока.СубконтоДт3 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто3ЕНВД),ДанныеУчета.Субконто3ЕНВД,СтрокаДанных.СубконтоДт3);
							
						Иначе
							
							НоваяСтрока.СчетДт         = ДанныеУчета.СчетЕНВД;
							НоваяСтрока.СубконтоДт1 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто1ЕНВД),ДанныеУчета.Субконто1ЕНВД,СтрокаДанных.СубконтоДт1);
							НоваяСтрока.СубконтоДт2 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто2ЕНВД),ДанныеУчета.Субконто2ЕНВД,СтрокаДанных.СубконтоДт2);
							НоваяСтрока.СубконтоДт3 	= ?(ЗначениеЗаполнено(ДанныеУчета.Субконто3ЕНВД),ДанныеУчета.Субконто3ЕНВД,СтрокаДанных.СубконтоДт3);
							
						КонецЕсли; 
						
					КонецЕсли; 
					
				КонецЕсли; 
				Если ДанныеУчета.ВариантОбработкиЗаписиПриОтраженииВРеглУчете = Перечисления.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.БольничныйЗаСчетРаботодателя Тогда
					// уточним статью затрат за пособия за счет работодателя
					НоваяСтрока.СубконтоДт1 = ПолучитьСубконто(НоваяСтрока.СубконтоДт1, ПараметрыПолученияСубконто);
					НоваяСтрока.СубконтоДт2 = ПолучитьСубконто(НоваяСтрока.СубконтоДт2, ПараметрыПолученияСубконто);
					НоваяСтрока.СубконтоДт3 = ПолучитьСубконто(НоваяСтрока.СубконтоДт3, ПараметрыПолученияСубконто);
				КонецЕсли;
				
				// Для счетов <подлежащих распределению> (25.03, 26.03, 44.01.3, 44.02.3) в качестве счета ДтНУ установим счет "ЕН".
				МассивСчетовПодлежащихРаспределению = Новый Массив;
				МассивСчетовПодлежащихРаспределению.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходыРаспределяемые);
				МассивСчетовПодлежащихРаспределению.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходыРаспределяемые);
				МассивСчетовПодлежащихРаспределению.Добавить(ПланыСчетов.Хозрасчетный.ИздержкиОбращенияРаспределяемые);
				МассивСчетовПодлежащихРаспределению.Добавить(ПланыСчетов.Хозрасчетный.КоммерческиеРасходыРаспределяемые);
				
				Если МассивСчетовПодлежащихРаспределению.Найти(НоваяСтрока.СчетДт) <> Неопределено Тогда
				
					НоваяСтрока.СчетДтНУ = ПланыСчетов.Налоговый.РасходыПоДеятельностиЕНВД;
					НоваяСтрока.СчетКтНУ = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда;
					НоваяСтрока.СубконтоКтНУ1 = НоваяСтрока.СубконтоКт1;
					НоваяСтрока.СубконтоКтНУ2 = НоваяСтрока.СубконтоКт2;
					НоваяСтрока.СубконтоКтНУ3 = НоваяСтрока.СубконтоКт3;
					
				Иначе
				
					НоваяСтрока.СчетДтНУ = Неопределено;
					НоваяСтрока.СчетКтНУ = Неопределено;
					НоваяСтрока.СубконтоКтНУ1 = Неопределено;
					НоваяСтрока.СубконтоКтНУ2 = Неопределено;
					НоваяСтрока.СубконтоКтНУ3 = Неопределено;
					
				КонецЕсли; 
				
				НоваяСтрока.СубконтоДтНУ1 = Неопределено;
				НоваяСтрока.СубконтоДтНУ2 = Неопределено;
				НоваяСтрока.СубконтоДтНУ3 = Неопределено;
				НоваяСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются;		
				
				НоваяСтрока.Результат = РезультатПодЕНВД;
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					НоваяСтрока.СуммаНУ = НоваяСтрока.Результат;
				КонецЕсли;
				// основной строке данных уменьшаем результат
				СтрокаДанных.Результат = ДанныеУчета.Результат - РезультатПодЕНВД;
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;
			
		ИначеЕсли ДанныеУчета.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления Тогда
			// вычисляем результат нормируя его на базу для строк базы относящихся 
			// к одной строке основного регистра
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если 	ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
					Успешно = Ложь;
					ЗарегистрироватьОшибкуОбработкиДанныхУчета(ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, 5);
				Иначе
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуДвижений2011(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатБаза = NULL Тогда
						Доля = 0;
					Иначе
						Доля = Окр(ПолныйРезультат * ДанныеУчета.РезультатБаза / СуммаПоСтроке,2);
					КонецЕсли;
				КонецЕсли;
				
				// если счет пустой - заполним счет данными базы
				Если ДанныеУчета.СчетДт = ПустойСчет Тогда
					Если Не ДанныеУчета.СчетДтРазрез = NULL Тогда
						СтрокаДанных.СчетДт 	 = ДанныеУчета.СчетДтРазрез;
						СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1Разрез;
						СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2Разрез;
						СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3Разрез;
						Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
							СтрокаДанных.СчетДтНУ 	 = ДанныеУчета.СчетДтНУРазрез;
							СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1Разрез;
							СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2Разрез;
							СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3Разрез;
						КонецЕсли;
						Если мУчетПоПодразделениямНаСчетах Тогда
							СтрокаДанных.ПодразделениеДт = ДанныеУчета.ПодразделениеДтРазрез;
						КонецЕсли;	
					КонецЕсли;
				КонецЕсли;
				// если счет пустой - заполним счет данными базы
				Если ДанныеУчета.СчетКт = ПустойСчет Тогда
					Если Не ДанныеУчета.СчетКтРазрез = NULL Тогда
						СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетКтРазрез;
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.СубконтоКт1Разрез;
						СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2Разрез;
						СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3Разрез;
						Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ Тогда
							СтрокаДанных.СчетКтНУ	 = ДанныеУчета.СчетКтНУРазрез;
							СтрокаДанных.СубконтоКтНУ1 = ?(ДанныеУчета.НомерСубконтоСт255НКБазы = 1, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ1Разрез);
							СтрокаДанных.СубконтоКтНУ2 = ?(ДанныеУчета.НомерСубконтоСт255НКБазы = 2, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ2Разрез);
							СтрокаДанных.СубконтоКтНУ3 = ?(ДанныеУчета.НомерСубконтоСт255НКБазы = 3, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ3Разрез);
						КонецЕсли;
						ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, СтрокаДанных.СчетКт, Счет70, ДанныеУчета.ВидНачисленияПоСт255НК);
						СтрокаДанных.СпособРаспределенияЗатрат	 = ДанныеУчета.СпособРаспределенияЗатратРазрез;
						СтрокаДанных.ОтражениеВУСН	 = ДанныеУчета.ОтражениеВУСНРазрез;	
						Если мУчетПоПодразделениямНаСчетах Тогда
							СтрокаДанных.ПодразделениеКт = ДанныеУчета.ПодразделениеКтРазрез;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				СтрокаДанных.Результат = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
				КонецЕсли;
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Результат;
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Результат = СтрокаДанных.Результат + ПолныйРезультат - СуммарнаяДоля;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Результат;
			КонецЕсли;
		Иначе
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	// при записи данных учета не затираем уже введенные движения
	НаборЗаписей.Записать(Ложь);
	
КонецПроцедуры	

// Обработка данных учета
//////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////
// заполнение данных в проводке

// автозаполнение субконто по данным строки 
Процедура АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет)
	// если не пустой счет - заполним "автозаполняемые" субконто
	Если ДанныеУчета.СчетДт <> ПустойСчет и ДанныеУчета.СчетДт <> NULL Тогда
		Если ДанныеУчета.НомерСубконтоРаботникиДт <> 0 
			И НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоДт" + ДанныеУчета.НомерСубконтоРаботникиДт]) Тогда
			СтрокаДанных["СубконтоДт" + ДанныеУчета.НомерСубконтоРаботникиДт] = ДанныеУчета.Физлицо;
		КонецЕсли;
		
		Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ДанныеУчета.НомерСубконтоРаботникиДтНУ <> 0 
			И НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоРаботникиДтНУ]) Тогда
			СтрокаДанных["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоРаботникиДтНУ] = ДанныеУчета.Физлицо;
		КонецЕсли;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			Если Не ЗначениеЗаполнено(СтрокаДанных.ПодразделениеДт) Тогда
				Если ДанныеУчета.НомерСубконтоПодразделенияДт <> 0
					и ЗначениеЗаполнено(ДанныеУчета["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт]) Тогда
					СтрокаДанных.ПодразделениеДт = СтрокаДанных["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт];
				Иначе
					СтрокаДанных.ПодразделениеДт = ДанныеУчета.ПодразделениеОрганизации;
				КонецЕсли;
			КонецЕсли;	
		Иначе
			Если ДанныеУчета.НомерСубконтоПодразделенияДт <> 0
				и Не ЗначениеЗаполнено(ДанныеУчета["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт]) Тогда
				СтрокаДанных["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт] = ДанныеУчета.ПодразделениеОрганизации;	
			КонецЕсли;
		КонецЕсли;	
		
		Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ДанныеУчета.НомерСубконтоПодразделенияДтНУ <> 0 
			и НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоПодразделенияДтНУ]) Тогда
			СтрокаДанных["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоПодразделенияДтНУ] = ДанныеУчета.ПодразделениеОрганизации;
		КонецЕсли;
	КонецЕсли;
	Если ДанныеУчета.СчетКт <> ПустойСчет и ДанныеУчета.СчетДт <> NULL Тогда
		
		Если ДанныеУчета.НомерСубконтоРаботникиКт <> 0 
			и НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоКт" + ДанныеУчета.НомерСубконтоРаботникиКт]) Тогда
			СтрокаДанных["СубконтоКт" + ДанныеУчета.НомерСубконтоРаботникиКт] = ДанныеУчета.Физлицо;
		КонецЕсли;
		
		Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и ДанныеУчета.НомерСубконтоРаботникиКтНУ <> 0 
			и НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоКтНУ" + ДанныеУчета.НомерСубконтоРаботникиКтНУ]) Тогда
			СтрокаДанных["СубконтоКтНУ" + ДанныеУчета.НомерСубконтоРаботникиКтНУ] = ДанныеУчета.Физлицо;
		КонецЕсли;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			Если Не ЗначениеЗаполнено(СтрокаДанных.ПодразделениеКт) Тогда
				СтрокаДанных.ПодразделениеКт = СтрокаДанных.ПодразделениеДт;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры  // АвтозаполнениеСубконто

// создает строку движений БУОсновныеНачисления или БУДополнительныеНачисления
// вызывается из ОбработатьДанныеУчета
// Параметры:
//	ДанныеУчета - спозиционированная выборка по результату запроса
//  НаборЗаписей - набор записей
//  ЭтоОсновныеНачисления - признак того, что передан набор записей основных начсилений
//  Пустой счет - пустая ссылка на счет
//
Функция СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет)
	
	СтрокаДанных = НаборЗаписей.Добавить();
	
	// вид расчета
	СтрокаДанных.ВидРасчета					= ДанныеУчета.ВидРасчета;
	
	// признак сторно
	СтрокаДанных.Сторно						= ДанныеУчета.Сторно;
	
	// измерения
	СтрокаДанных.Сотрудник					= ДанныеУчета.Сотрудник;
	СтрокаДанных.Физлицо					= ДанныеУчета.Физлицо;
	СтрокаДанных.Организация				= ДанныеУчета.ГоловнаяОрганизация;
	
	// ресурсы
	СтрокаДанных.Результат					= ДанныеУчета.Результат;
	
	// реквизиты
	Если ЭтоОсновныеНачисления Тогда
		// только для БУОсновныеНачисления
		
		// период действия
		СтрокаДанных.ПериодДействияНачало = ДанныеУчета.ПериодДействияНачало;
		СтрокаДанных.ПериодДействияКонец = ДанныеУчета.ПериодДействияКонец;
		
		СтрокаДанных.ГрафикРаботы = ДанныеУчета.ГрафикРаботы;
		СтрокаДанных.ВидУчетаВремени = ДанныеУчета.ВидУчетаВремени;
		
		// период регистрации
		СтрокаДанных.ПериодРегистрации			= ПериодРегистрации;
		
	Иначе
		
		// период регистрации
		СтрокаДанных.ПериодРегистрации			= ДанныеУчета.ПериодРегистрации;
	КонецЕсли;
	
	СтрокаДанных.СчетДт			= ДанныеУчета.СчетДт;
	СтрокаДанных.СчетКт			= ДанныеУчета.СчетКт;
	СтрокаДанных.СубконтоДт1	= ДанныеУчета.СубконтоДт1;
	СтрокаДанных.СубконтоДт2	= ДанныеУчета.СубконтоДт2;
	СтрокаДанных.СубконтоДт3	= ДанныеУчета.СубконтоДт3;
	СтрокаДанных.СпособРаспределенияЗатрат	= ДанныеУчета.СпособРаспределенияЗатрат;
	СтрокаДанных.СубконтоКт1	= ДанныеУчета.СубконтоКт1;
	СтрокаДанных.СубконтоКт2	= ДанныеУчета.СубконтоКт2;
	СтрокаДанных.СубконтоКт3	= ДанныеУчета.СубконтоКт3;
	
	Если мЗаполнятьДанныеНУ Тогда
		
		Если мЗаполнятьСчетаНУ Тогда
			
			СтрокаДанных.СчетДтНУ		= ДанныеУчета.СчетДтНУ;
			СтрокаДанных.СчетКтНУ		= ДанныеУчета.СчетКтНУ;
			СтрокаДанных.СубконтоДтНУ1	= ДанныеУчета.СубконтоДтНУ1;
			СтрокаДанных.СубконтоДтНУ2	= ДанныеУчета.СубконтоДтНУ2;
			СтрокаДанных.СубконтоДтНУ3	= ДанныеУчета.СубконтоДтНУ3;
			СтрокаДанных.СубконтоКтНУ1	= ?(ДанныеУчета.НомерСубконтоСт255НК = 1, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ1);
			СтрокаДанных.СубконтоКтНУ2	= ?(ДанныеУчета.НомерСубконтоСт255НК = 2, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ2);
			СтрокаДанных.СубконтоКтНУ3	= ?(ДанныеУчета.НомерСубконтоСт255НК = 3, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ3);
			
		Иначе // заполним ВидНачисленияПоСт255НК
			
			Если ДанныеУчета.НомерСубконтоРаботникиКт <> 0 Тогда
				СтрокаДанных.ВидНачисленийОплатыТрудаПоСтатье255НК = ДанныеУчета.ВидНачисленияПоСт255НК;
			КонецЕсли;
			
			СтрокаДанных.СуммаНУ					= ДанныеУчета.Результат;
			СтрокаДанных.СуммаВР					= 0;
			СтрокаДанных.СуммаПР					= 0;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокаДанных.ОтражениеВУСН		= ДанныеУчета.ОтражениеВУСН;		
	
	СтрокаДанных.ОбособленноеПодразделение = Организация;
	СтрокаДанных.ДокументОснование = ДанныеУчета.Регистратор;
	
	АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);
	
	Возврат СтрокаДанных;
КонецФункции // СоздатьСтрокуДвижений

Процедура ЗаполнитьПодразделениеДтКт(СтрокаДанных, СчетДт, СчетКт, ПодразделениеОрганизации, ПустойСчет)
	
	Если мУчетПоПодразделениямНаСчетах Тогда
		Если СчетДт <> ПустойСчет Тогда
			СтрокаДанных.ПодразделениеДт = ПодразделениеОрганизации;
		Иначе
			СтрокаДанных.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		КонецЕсли;
		Если СчетКт <> ПустойСчет Тогда
			СтрокаДанных.ПодразделениеКт = ПодразделениеОрганизации;
		Иначе
			СтрокаДанных.ПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();	
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры // ЗаполнитьПодразделениеДтКт()

Процедура ЗаполнитьВидНачисленияПоСт255НК(СтрокаДанных, Счет, Счет70, ВидНачисленияПоСт255НК)
	
	Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ и Счет = Счет70 Тогда
		СтрокаДанных.ВидНачисленийОплатыТрудаПоСтатье255НК = ВидНачисленияПоСт255НК;	
	КонецЕсли;	
	
КонецПроцедуры

// создает строку движений БУОсновныеНачисления или БУДополнительныеНачисления
// вызывается из ОбработатьДанныеУчета
//
// Параметры:
//	ДанныеУчета				- спозиционированная выборка по результату запроса
//	НаборЗаписей			- набор записей
//	ЭтоОсновныеНачисления	- признак того, что передан набор записей основных начсилений
//	Пустой счет				- пустая ссылка на счет
//
Функция СоздатьСтрокуДвижений2011(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет)
	
	СтрокаДанных = НаборЗаписей.Добавить();
	
	// вид расчета
	СтрокаДанных.ВидРасчета					= ДанныеУчета.ВидРасчета;
	
	// признак сторно
	СтрокаДанных.Сторно						= ДанныеУчета.Сторно;
	
	// измерения
	СтрокаДанных.Сотрудник					= ДанныеУчета.Сотрудник;
	СтрокаДанных.Физлицо					= ДанныеУчета.Физлицо;
	СтрокаДанных.Организация				= ДанныеУчета.ГоловнаяОрганизация;
	
	// ресурсы
	СтрокаДанных.Результат					= ДанныеУчета.Результат;

	// реквизиты
	Если ЭтоОсновныеНачисления Тогда
		// только для БУОсновныеНачисления
		
		// период действия
		СтрокаДанных.ПериодДействияНачало	= ДанныеУчета.ПериодДействияНачало;
		СтрокаДанных.ПериодДействияКонец	= ДанныеУчета.ПериодДействияКонец;
		
		СтрокаДанных.ГрафикРаботы			= ДанныеУчета.ГрафикРаботы;
		СтрокаДанных.ВидУчетаВремени		= ДанныеУчета.ВидУчетаВремени;
		
		// период регистрации
		СтрокаДанных.ПериодРегистрации			= ПериодРегистрации;
		
	Иначе
		
		// период регистрации
		СтрокаДанных.ПериодРегистрации			= ДанныеУчета.ПериодРегистрации;
	КонецЕсли;
	
	СтрокаДанных.СчетДт			= ДанныеУчета.СчетДт;
	СтрокаДанных.СчетКт			= ДанныеУчета.СчетКт;
	СтрокаДанных.СубконтоДт1	= ДанныеУчета.СубконтоДт1;
	СтрокаДанных.СубконтоДт2	= ДанныеУчета.СубконтоДт2;
	СтрокаДанных.СубконтоДт3	= ДанныеУчета.СубконтоДт3;
	СтрокаДанных.СубконтоКт1	= ДанныеУчета.СубконтоКт1;
	СтрокаДанных.СубконтоКт2	= ДанныеУчета.СубконтоКт2;
	СтрокаДанных.СубконтоКт3	= ДанныеУчета.СубконтоКт3;
	
	Если мЗаполнятьДанныеНУ Тогда
		
		Если мЗаполнятьСчетаНУ Тогда
			
			СтрокаДанных.СчетДтНУ		= ДанныеУчета.СчетДтНУ;
			СтрокаДанных.СчетКтНУ		= ДанныеУчета.СчетКтНУ;
			СтрокаДанных.СубконтоДтНУ1	= ДанныеУчета.СубконтоДтНУ1;
			СтрокаДанных.СубконтоДтНУ2	= ДанныеУчета.СубконтоДтНУ2;
			СтрокаДанных.СубконтоДтНУ3	= ДанныеУчета.СубконтоДтНУ3;
			СтрокаДанных.СубконтоКтНУ1	= ?(ДанныеУчета.НомерСубконтоСт255НК = 1, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ1);
			СтрокаДанных.СубконтоКтНУ2	= ?(ДанныеУчета.НомерСубконтоСт255НК = 2, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ2);
			СтрокаДанных.СубконтоКтНУ3	= ?(ДанныеУчета.НомерСубконтоСт255НК = 3, ДанныеУчета.ВидНачисленияПоСт255НК, ДанныеУчета.СубконтоКтНУ3);
			
		Иначе // заполним ВидНачисленияПоСт255НК
			
			Если ДанныеУчета.НомерСубконтоРаботникиКт <> 0 Тогда
				СтрокаДанных.ВидНачисленийОплатыТрудаПоСтатье255НК = ДанныеУчета.ВидНачисленияПоСт255НК;
			КонецЕсли;
			
			СтрокаДанных.СуммаНУ					= ДанныеУчета.Результат;
			СтрокаДанных.СуммаВР					= 0;
			СтрокаДанных.СуммаПР					= 0;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокаДанных.ОтражениеВУСН	= ДанныеУчета.ОтражениеВУСН;
	СтрокаДанных.СпособРаспределенияЗатрат	= ДанныеУчета.СпособРаспределенияЗатрат;
	
	СтрокаДанных.ПодразделениеДт = ДанныеУчета.ПодразделениеДт;
	СтрокаДанных.ПодразделениеКт = ДанныеУчета.ПодразделениеКт;
	
	СтрокаДанных.ОбособленноеПодразделение = Организация;
	СтрокаДанных.ДокументОснование = ДанныеУчета.Регистратор;
	
	АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);
	
	Возврат СтрокаДанных;
	
КонецФункции // СоздатьСтрокуДвижений()

Процедура ЗаполнитьПодразделениеДтКт2011(СтрокаДанных, ДанныеУчета)

	Если мУчетПоПодразделениямНаСчетах Тогда
		Если ЗначениеЗаполнено(СтрокаДанных.ПодразделениеДт) Тогда
			СтрокаДанных.ПодразделениеДт = ДанныеУчета.ПодразделениеОрганизации;
		Иначе
			СтрокаДанных.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаДанных.ПодразделениеКт) Тогда
			СтрокаДанных.ПодразделениеКт = ДанныеУчета.ПодразделениеОрганизации;
		Иначе
			СтрокаДанных.ПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры // ЗаполнитьПодразделениеДтКт()

// заполнение данных в проводке
//////////////////////////////////////////////////////////////////////////////////

Функция СоздатьТаблицуКомментированияСтраховыхВзносов()
	
	ТаблицаКомментирования = Новый ТаблицаЗначений;
	ТаблицаКомментирования.Колонки.Добавить("Физлицо", 						Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), "Сотрудник");
	ТаблицаКомментирования.Колонки.Добавить("Режим", 						Новый ОписаниеТипов(, Новый КвалификаторыЧисла(1, 0)));
	ТаблицаКомментирования.Колонки.Добавить("ВзносыПФРНакопительная", 		Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР нак.");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыПФРСтраховая", 			Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР страх.");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыПФРПоСуммарномуТарифу", 	Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР страх.");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыПФРСПревышения", 		Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР с превыш.");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыФСС", 					Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ФСС");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыФФОМС", 					Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ФФОМС");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыТФОМС", 					Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ТФОМС");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыФСС_НС", 				Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ФСС НС");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыДопТариф", 				Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "Доп. тариф летчики");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыДопТарифШахтеры", 		Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "Доп. тариф шахтеры");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыДопТарифТяжелыеИПрочиеРаботы", 	Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР, за занятых на работах с тяжелыми условиями труда");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыДопТарифПодземныеИВредныеРаботы",Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР, за занятых на работах с вредными условиями труда");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыПФРНакопительная_ЕНВД", 	Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР нак.");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыПФРСтраховая_ЕНВД", 		Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР страх.");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыПФРПоСуммарномуТарифу_ЕНВД", 	Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР страх.");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыПФРСПревышения_ЕНВД", 	Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ПФР с превыш.");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыФСС_ЕНВД", 				Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ФСС");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыФФОМС_ЕНВД", 			Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ФФОМС");
	ТаблицаКомментирования.Колонки.Добавить("ВзносыТФОМС_ЕНВД", 			Новый ОписаниеТипов(, Новый КвалификаторыЧисла(15, 2)), "ТФОМС");
	
	Возврат ТаблицаКомментирования;
	
КонецФункции // СоздатьТаблицуКомментированияСтраховыхВзносов()

// алгоритмы по 2009 год
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// алгоритмы с 2010 год

Процедура СвернутьТаблицуПроводок(ТаблицаПроводок, ДопПоляСвертки = "")
	
	// вычеркнем обнулившиеся суммы
	ТаблицаПроводок.Свернуть("СчетДт,СчетКт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СубконтоКт1,СубконтоКт2,СубконтоКт3,СпособРаспределенияЗатрат,
	|СчетДтНУ,СчетКтНУ,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3,
	|ОтражениеВУСН,ВидНачисленияУдержания,ПодразделениеДт,ПодразделениеКт,ВидНачисленийОплатыТрудаПоСтатье255НК,КодПоОКАТО,КодПоОКТМО,КПП"+ДопПоляСвертки, "Сумма,СуммаНУ,СуммаВР,СуммаПР");
	
	Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
		НулевыеСтроки = ТаблицаПроводок.НайтиСтроки(Новый Структура("Сумма,СуммаНУ,СуммаВР,СуммаПР",0,0,0,0));
	Иначе	
		НулевыеСтроки = ТаблицаПроводок.НайтиСтроки(Новый Структура("Сумма",0));
	КонецЕсли;
	Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
		ТаблицаПроводок.Удалить(СтрокаТаблицы)
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПеременныхВеденияУчета()
	
	СтруктураЗначенияПеременных = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСтруктураПараметровПеременныхВеденияУчета(Организация, ПериодРегистрации);
	
	мУСН = СтруктураЗначенияПеременных.УСН;
	мОбъектНалогообложенияУСН = СтруктураЗначенияПеременных.ОбъектНалогообложенияУСН;
	мЕНВД = СтруктураЗначенияПеременных.ОрганизацияЯвляетсяПлательщикомЕНВД;
	мФСС_БЛ = СтруктураЗначенияПеременных.УплачиватьДобровольныеВзносыВФСС;
	мИП_ОСН = СтруктураЗначенияПеременных.ПредпринимательНаОСН; //индивидуальный предприниматель на общей системе налогообложения
	мВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете = СтруктураЗначенияПеременных.ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете;
	мЗаполнятьДанныеНУ = СтруктураЗначенияПеременных.ЗаполнятьДанныеНУ; 	
	мЗаполнятьСчетаНУ  = СтруктураЗначенияПеременных.ЗаполнятьСчетаНУ;
	////Вадим
	//мУчетПоПодразделениямНаСчетах = СтруктураЗначенияПеременных.УчетПоПодразделениямНаСчетах;
	мУчетПоПодразделениямНаСчетах = Истина;
	///Конецвадим
	
	мСтраховыеВзносыСОтпускныхПризнаватьРасходамиВМесяцеНачисления = СтраховыеВзносыСОтпускныхПризнаватьРасходамиВМесяцеНачисления();
	
	мПорядокПризнанияРасходовПоОтпускам = СтруктураЗначенияПеременных.ПорядокПризнанияРасходовПоОтпускам;
	
	мОценочныеОбязательстваФормироватьБУ = СтруктураЗначенияПеременных.ОценочныеОбязательстваФормироватьБУ;
	мОценочныеОбязательстваФормироватьНУ = СтруктураЗначенияПеременных.ОценочныеОбязательстваФормироватьНУ;
	мОценочныеОбязательстваПорядокРасчета = СтруктураЗначенияПеременных.ОценочныеОбязательстваПорядокРасчета;
	мОценочноеОбязательствоДляОтпуска = СтруктураЗначенияПеременных.ОценочноеОбязательствоДляОтпуска;
	мЕстьОценочноеОбязательствоДляОтпуска = ЗначениеЗаполнено(мОценочноеОбязательствоДляОтпуска);
	мЗаполнятьОКАТОКПП = СтруктураЗначенияПеременных.ЗаполнятьОКАТОКПП;

КонецПроцедуры

// Получает значение ПодразделениеОрганизации для физлица из соответствия
//
Функция ПолучитьПодразделениеФизлица(Физлицо, ПараметрыПолученияПодразделенияФизлица)
	
	ПодразделениеОрганизации = ПараметрыПолученияПодразделенияФизлица[Физлицо];
	Если ПодразделениеОрганизации = НеОпределено Тогда
		// для субконто этого типа не заданы парамтры переопределения
		Возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	Иначе
		Возврат ПодразделениеОрганизации;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьТекстЗапросаОтражениеСторноЗаписей()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОсновныеНачисления.Регистратор КАК Регистратор,
	|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ОсновныеНачисления.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК ВидРасчетаСпособРасчета
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисленияСторно
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
	|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
	|	И ОсновныеНачисления.ВариантОбработкиЗаписиПриОтраженииВРеглУчете <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбработкиЗаписиПриОтраженииВРеглУчете.НеОбрабатывать)
	|	И ОсновныеНачисления.Результат <> 0
	|	И ОсновныеНачисления.Сторно
	|	И ОсновныеНачисления.ВидРасчета В(&парамСписокНачислений)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СторнируемыйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияСторно.Сотрудник КАК Сотрудник,
	|	ОсновныеНачисленияСторно.ВидРасчета КАК ВидРасчета,
	|	ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации
	|ПОМЕСТИТЬ ВТ_СторноСотрудники
	|ИЗ
	|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисленияСторно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|		ПО ОсновныеНачисленияСторно.СторнируемыйДокумент = ОсновныеНачисления.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодРегистрации,
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	БУОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	БУОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|	БУОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	БУОсновныеНачисления.Результат КАК Результат,
	|	БУОсновныеНачисления.СчетДт КАК СчетДт,
	|	БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|	БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|	БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|	БУОсновныеНачисления.СчетКт КАК СчетКт,
	|	БУОсновныеНачисления.СубконтоКт1 КАК СубконтоКт1,
	|	БУОсновныеНачисления.СубконтоКт2 КАК СубконтоКт2,
	|	БУОсновныеНачисления.СубконтоКт3 КАК СубконтоКт3,
	|	БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|	БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|	БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|	БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|	БУОсновныеНачисления.СчетКтНУ КАК СчетКтНУ,
	|	БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
	|	БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
	|	БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
	|	БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|	БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|	БУОсновныеНачисления.ДокументОснование КАК ДокументОснование,
	|	БУОсновныеНачисления.ПодразделениеДт,
	|	БУОсновныеНачисления.ПодразделениеКт
	|ПОМЕСТИТЬ ВТ_БУОсновныеНачисления
	|ИЗ
	|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|ГДЕ
	|	(БУОсновныеНачисления.ПериодРегистрации, БУОсновныеНачисления.Сотрудник, БУОсновныеНачисления.ВидРасчета) В
	|			(ВЫБРАТЬ
	|				ОсновныеНачисления.ПериодРегистрации,
	|				ОсновныеНачисления.Сотрудник,
	|				ОсновныеНачисления.ВидРасчета
	|			ИЗ
	|				ВТ_СторноСотрудники КАК ОсновныеНачисления)
	|	И (НЕ БУОсновныеНачисления.Сторно)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеНачисления.Регистратор КАК Регистратор,
	|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	БУОсновныеНачисления.СчетДт,
	|	БУОсновныеНачисления.СубконтоДт1,
	|	БУОсновныеНачисления.СубконтоДт2,
	|	БУОсновныеНачисления.СубконтоДт3,
	|	БУОсновныеНачисления.СчетКт,
	|	БУОсновныеНачисления.СубконтоКт1,
	|	БУОсновныеНачисления.СубконтоКт2,
	|	БУОсновныеНачисления.СубконтоКт3,
	|	БУОсновныеНачисления.СчетДтНУ,
	|	БУОсновныеНачисления.СубконтоДтНУ1,
	|	БУОсновныеНачисления.СубконтоДтНУ2,
	|	БУОсновныеНачисления.СубконтоДтНУ3,
	|	БУОсновныеНачисления.СчетКтНУ,
	|	БУОсновныеНачисления.СубконтоКтНУ1,
	|	БУОсновныеНачисления.СубконтоКтНУ2,
	|	БУОсновныеНачисления.СубконтоКтНУ3,
	|	БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|	БУОсновныеНачисления.ОтражениеВУСН,
	|	БУОсновныеНачисления.Результат,
	|	БУОсновныеНачисления.ПериодДействияНачало,
	|	БУОсновныеНачисления.ПериодДействияКонец,
	|	БУОсновныеНачисления.ПодразделениеДт,
	|	БУОсновныеНачисления.ПодразделениеКт
	|ПОМЕСТИТЬ ВТ_ОтражениеВУчетеСторно
	|ИЗ
	|	ВТ_ОсновныеНачисленияСторно КАК ОсновныеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУОсновныеНачисления КАК БУОсновныеНачисления
	|		ПО ОсновныеНачисления.ВидРасчета = БУОсновныеНачисления.ВидРасчета
	|			И ОсновныеНачисления.Сотрудник = БУОсновныеНачисления.Сотрудник
	|			И (БУОсновныеНачисления.ПериодДействияНачало МЕЖДУ ОсновныеНачисления.ПериодДействияНачало И ОсновныеНачисления.ПериодДействияКонец
	|				ИЛИ ОсновныеНачисления.ПериодДействияНачало МЕЖДУ БУОсновныеНачисления.ПериодДействияНачало И БУОсновныеНачисления.ПериодДействияКонец)
	|			И (ОсновныеНачисления.ВидРасчетаСпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ИЛИ ОсновныеНачисления.СторнируемыйДокумент = БУОсновныеНачисления.ДокументОснование)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

// В процедуре проверяются проводки по страховым взносам
// Дт и Кт не должны быть счета 69, когда с гос пособий исчисляются взносы
Процедура ПроверитьИСкорректироватьПроводкиПоВзносам(ТаблицаПроводкиПоВзносам)

	Если ПериодРегистрации >= РасчетСтраховыхВзносов.ДатаВозмещенияФССВзносовСОплаты4ДнейУходаЗаДетьмиИнвалидами() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	МассивСчет69 = Новый Массив();
	МассивСчет69.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	Запрос.УстановитьПараметр("Счета69", МассивСчет69);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК СчетБУ,
	|	Налоговый.Ссылка КАК СчетНУ
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый КАК Налоговый
	|		ПО Хозрасчетный.Код = Налоговый.Код
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счета69)";
	РезультатЗапроса = Запрос.Выполнить();
	МассивСчета69 = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("СчетБУ");
	
	Выборка = РезультатЗапроса.Выбрать();
	СоответствиеСчетов = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СоответствиеСчетов.Вставить(Выборка.СчетБУ, ?(Выборка.СчетНУ = NULL, Неопределено, Выборка.СчетНУ));
	КонецЦикла;
	
	ТаблицаПроводкиПоВзносам.Колонки.Добавить("УточненСчетДт", Новый ОписаниеТипов("Булево"));
	
	Для каждого Проводка Из ТаблицаПроводкиПоВзносам Цикл
		
		
		Если МассивСчета69.Найти(Проводка.СчетДт) <> Неопределено и МассивСчета69.Найти(Проводка.СчетКт) <> Неопределено Тогда
			
			Проводка.СчетДт = ОтражениеЗарплатыВРеглУчетеДополнительный.ПолучитьСчетПрочихРасходов(Ложь);
			Проводка.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");//Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов; //blik 080215 48782
			Проводка.СубконтоДт2 = Неопределено;
			Проводка.СубконтоДт3 = Неопределено;
			Проводка.УточненСчетДт = Истина;
			
			Если мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ и СоответствиеСчетов[Проводка.СчетКт] <> Неопределено Тогда
				Проводка.СчетДтНу = ПланыСчетов.Налоговый.ПрочиеКосвенныеРасходы;  
				Проводка.СубконтоДтНу1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("ВР-2.5");//Справочники.ПрочиеДоходыИРасходы.РасходыПоУплатеСтраховыхВзносов; //blik 080215 48782
				Проводка.СубконтоДтНу2 = Неопределено;
				Проводка.СубконтоДтНу3 = Неопределено;
				Проводка.СчетКтНу = СоответствиеСчетов[Проводка.СчетКт];
				Проводка.СубконтоКтНу1 = Неопределено;
				Проводка.СубконтоКтНу2 = Неопределено;
				Проводка.СубконтоКтНу3 = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура Автозаполнение() Экспорт
	
	ЗаполнитьЗначенияПеременныхВеденияУчета();
	
	//подготовим таблицу для регистрации ошибок
	мТаблицаОшибок = Новый ТаблицаЗначений;
	мТаблицаОшибок.Колонки.Добавить("Сотрудник");
	мТаблицаОшибок.Колонки.Добавить("ВидРасчета");
	мТаблицаОшибок.Колонки.Добавить("ПериодДействияНачало");
	мТаблицаОшибок.Колонки.Добавить("ПериодДействияКонец");
	мТаблицаОшибок.Колонки.Добавить("Сторно");
	мТаблицаОшибок.Колонки.Добавить("КодОшибки");
	мТаблицаОшибок.Колонки.Добавить("Регистратор");
	мТаблицаОшибок.Колонки.Добавить("НомерСтроки");
	
	НаборЗаписейОсновной = РегистрыРасчета.БУОсновныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейОсновной.Отбор.Регистратор.Значение = Ссылка;
	
	НаборЗаписейДополнительный = РегистрыРасчета.БУДополнительныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейДополнительный.Отбор.Регистратор.Значение = Ссылка;
	
	// сначала очищаем соответствующие движения
	Для Каждого Набор Из Движения Цикл
		Если ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.БУОсновныеНачисления") Тогда
			НаборЗаписейОсновной.Записать();
		КонецЕсли;
		Если ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.БУДополнительныеНачисления") Тогда
			НаборЗаписейДополнительный.Записать();
		КонецЕсли;
	КонецЦикла;
	
	
	// запрос по соответсвиям статей затрат начислений и статей затарт для 
	// отражения б/л за счет работодателя
	ДополнительныеСтатьиЗатратЗапрос = Новый Запрос(
	"ВЫБРАТЬ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатратНачисления,
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.СтатьяЗатрат
	|ИЗ
	|   РегистрСведений.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете КАК СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|   СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете.ВидСтатьиЗатрат = &ПособияЗаСчетРаботодателя");
	
	ДополнительныеСтатьиЗатратЗапрос.УстановитьПараметр("ДатаЗапроса", ПериодРегистрации);
	ДополнительныеСтатьиЗатратЗапрос.УстановитьПараметр("ПособияЗаСчетРаботодателя", Перечисления.ВидыДополнительныхСтатейЗатрат.ПособияЗаСчетРаботодателя);
	ДополнительныеСтатьиЗатрат = ДополнительныеСтатьиЗатратЗапрос.Выполнить().Выгрузить();
	
	ПараметрыПолученияСубконто = Новый Соответствие;
	ПараметрыПолученияСубконто[Тип("СправочникСсылка.СтатьиЗатрат")] = Новый Структура("ВидСтатьиЗатрат, ДополнительныеСтатьиЗатрат", 
	Перечисления.ВидыДополнительныхСтатейЗатрат.ПособияЗаСчетРаботодателя, 
	ДополнительныеСтатьиЗатрат);
	
	
	ТаблицаНачислений = ПолучитьТаблицуНачислений();
	ПорядкиРасчета = ТаблицаНачислений.ВыгрузитьКолонку("ПорядокРасчета");
	
	СтруктураПоиска = Новый Структура;
	СписокНачисленийДляОтбора = Новый СписокЗначений;
	
	Успешно = Истина;
	
	ПорядокРасчета = Неопределено;
	Для Счетчик = 0 По ПорядкиРасчета.ВГраница() Цикл
		
		Если ПорядкиРасчета[Счетчик] = ПорядокРасчета Тогда
			Продолжить;
		КонецЕсли;
		
		ПорядокРасчета = ПорядкиРасчета[Счетчик];
		
		СписокНачисленийДляОтбора.Очистить();
		
		СтруктураПоиска.Вставить("ПорядокРасчета", ПорядокРасчета);
		
		//основные начисления
		СтруктураПоиска.Вставить("ВидНачисления", "Основные");
		СтрокиТаблицы = ТаблицаНачислений.НайтиСтроки(СтруктураПоиска);
		Для каждого Строка Из СтрокиТаблицы Цикл
			СписокНачисленийДляОтбора.Добавить(Строка.ВидРасчета);
		КонецЦикла;
 		Если СписокНачисленийДляОтбора.Количество() > 0 Тогда
			//получим и обработаем данные учета
			ДанныеУчета = ПолучитьДанныеУчета(СписокНачисленийДляОтбора, Истина, ?(Счетчик = 0, Истина, Ложь));
			ОбработатьДанныеУчета(ДанныеУчета, Успешно, НаборЗаписейОсновной, ПараметрыПолученияСубконто);
		КонецЕсли;
		
		//дополнительные начисления
		СписокНачисленийДляОтбора.Очистить();
		СтруктураПоиска.Вставить("ВидНачисления", "Дополнительные");
		СтрокиТаблицы = ТаблицаНачислений.НайтиСтроки(СтруктураПоиска);
		Для каждого Строка Из СтрокиТаблицы Цикл
			СписокНачисленийДляОтбора.Добавить(Строка.ВидРасчета);
		КонецЦикла;
		Если СписокНачисленийДляОтбора.Количество() > 0 Тогда
			//получим и обработаем данные учета
			ДанныеУчета = ПолучитьДанныеУчета(СписокНачисленийДляОтбора, Ложь, ?(Счетчик = 0, Истина, Ложь));
			ОбработатьДанныеУчета(ДанныеУчета, Успешно, НаборЗаписейДополнительный, ПараметрыПолученияСубконто);
		КонецЕсли;
		
	КонецЦикла;	
	
	НаборЗаписейОсновной.Прочитать();
	
	ВременнаяТаблица = НаборЗаписейОсновной.Выгрузить();
	ВременнаяТаблица.Свернуть("ВидРасчета,Сотрудник,ФизЛицо,СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СчетКт,СубконтоКт1,СубконтоКт2, СубконтоКт3,
	|СчетДтНУ,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СчетКтНУ,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3,СпособРаспределенияЗатрат,ОтражениеВУСН,
	|ПериодДействияНачало,ПериодДействияКонец,Сторно,ДокументОснование,ПодразделениеДт,ПодразделениеКт,ВидНачисленийОплатыТрудаПоСтатье255НК","Результат,СуммаНУ,СуммаВР,СуммаПР");
	
	НулевыеСтроки = ВременнаяТаблица.НайтиСтроки(Новый Структура("Результат,СуммаНУ,СуммаВР,СуммаПР",0,0,0,0));
	Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
		ВременнаяТаблица.Удалить(СтрокаТаблицы)
	КонецЦикла;
	ОсновныеНачисления.Загрузить(ВременнаяТаблица);
	
	НаборЗаписейДополнительный.Прочитать();
	
	ВременнаяТаблица = НаборЗаписейДополнительный.Выгрузить();
	ВременнаяТаблица.Свернуть("ВидРасчета,Сотрудник,ФизЛицо,СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СчетКт,СубконтоКт1,СубконтоКт2, СубконтоКт3,
	|СчетДтНУ,СубконтоДтНУ1,СубконтоДтНУ2,СубконтоДтНУ3,СчетКтНУ,СубконтоКтНУ1,СубконтоКтНУ2,СубконтоКтНУ3,СпособРаспределенияЗатрат,ОтражениеВУСН,Сторно,ДокументОснование,
	|ПодразделениеДт,ПодразделениеКт,ВидНачисленийОплатыТрудаПоСтатье255НК,ПериодРегистрации","Результат,СуммаНУ,СуммаВР,СуммаПР");
	
	ВременнаяТаблица.Колонки.ПериодРегистрации.Имя = "ДатаНачисления";
	НулевыеСтроки = ВременнаяТаблица.НайтиСтроки(Новый Структура("Результат,СуммаНУ,СуммаВР,СуммаПР",0,0,0,0));
	Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
		ВременнаяТаблица.Удалить(СтрокаТаблицы)
	КонецЦикла;
	ПроверитьИсправитьСтатьиГПХ(ВременнаяТаблица);
	ДополнительныеНачисления.Загрузить(ВременнаяТаблица);
	
	// очистим движения
	Для Каждого Набор Из Движения Цикл
		Если ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.БУОсновныеНачисления") 
			или ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.БУДополнительныеНачисления") Тогда
			Набор.Очистить();
			Набор.Записать();
		КонецЕсли;
	КонецЦикла;
	/////Вадим 19.02.2014 9:31:39  бп 
    ДопПроверкаЗаполненияТабЧастей();
 
 	////ВадимКонец
 

	Если НЕ Успешно Тогда
		// есть ошибки в сборе данных по отражению начислений
		ТекстСообщения = "Проводки не сформированы! Для автоматического учета начислений при формировании проводок не хватает данных!";
		ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, , , , Перечисления.ВидыСообщений.Ошибка);
		
		Если мТаблицаОшибок.Количество() > 0 Тогда
			
			// коды ошибок
			//1 - сторно, нет данных отражения в учете начисления в прошлых периодах
			//2 - нет данных о пособиях, нет доли ЕНВД и доли за счет работодателя
			//3 - нет данных о пособиях, нет доли ЕНВД
			//4 - нет данных о пособиях, нет доли за счет работодателя
			//5 - нет данных отражения в учете базовых начислений 
			
			//отсортируем таблицу ошибок по кодам
			мТаблицаОшибок.Сортировать("КодОшибки, ВидРасчета");
			
			СтруктураПоискаОсновныеНачисиления = Новый Структура("Сотрудник,ВидРасчета,ПериодДействияНачало,ПериодДействияКонец,ДокументОснование,Сторно");
			СтруктураПоискаДополнительныеНачисиления = Новый Структура("Сотрудник,ВидРасчета,ДокументОснование,Сторно");
			
			ТекущийКодОшибки = 0;
			ТекущийВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка();
			
			Для каждого СтрокаТаблицыОшибок Из мТаблицаОшибок Цикл
				
				Если ТекущийКодОшибки <> СтрокаТаблицыОшибок.КодОшибки или ТекущийВидРасчета <> СтрокаТаблицыОшибок.ВидРасчета Тогда
					
					ТекстСообщенияРекомендации = "";
					ТекстСообщения = "Начисление: """ + СтрокаТаблицыОшибок.ВидРасчета.Наименование + """. ";
					
					Если СтрокаТаблицыОшибок.КодОшибки = 1 Тогда
						ТекстСообщения = ТекстСообщения + "Нет данных для отражения в учете сторно записи. Отсутствуют данные отражения в учете этого начисления в прошлых периодах";
					ИначеЕсли СтрокаТаблицыОшибок.КодОшибки = 2 Тогда
						
						ТекстСообщения = ТекстСообщения + "Нет данных для определения доли ЕНВД пособия. Стратегия определения доли ЕНВД - ""по базовым начислениям "" задана в начислении. ";
						ТекстСообщения = ТекстСообщения + "Нет данных для распределения доли пособия за счет работодателя по счетам затрат. ";
						Если СтрокаТаблицыОшибок.ВидРасчета.ВидПособияСоциальногоСтрахования <> Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет Тогда
							ТекстСообщенияРекомендации = "Рекомендуется зарегистрировать отражение пособия в учете документом ""Начисление по больничному листу"".
							|Перейдите по ссылке ""Отражение пособия в учете"", установить вариант отражения в учете ""по данным текущего документа""
							|и заполните таблицу ""Проводки и данные по страховым взносам"".";
						КонецЕсли;
						
					ИначеЕсли СтрокаТаблицыОшибок.КодОшибки = 3 Тогда
						
						ТекстСообщения = ТекстСообщения + "Нет данных для определения доли ЕНВД пособия. Стратегия определения доли ЕНВД - ""по базовым начислениям "" задана в начислении. ";
						Если СтрокаТаблицыОшибок.ВидРасчета.ВидПособияСоциальногоСтрахования <> Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет Тогда
							ТекстСообщенияРекомендации = "Рекомендуется зарегистрировать отражение пособия в учете документом ""Начисление по больничному листу"".
							|Перейдите по ссылке ""Отражение пособия в учете"", установить вариант отражения в учете ""по данным текущего документа""
							|и заполните таблицу ""Проводки и данные по страховым взносам"".";
						КонецЕсли;
						
					ИначеЕсли СтрокаТаблицыОшибок.КодОшибки = 4 Тогда
						
						ТекстСообщения = ТекстСообщения + "Нет данных для распределения доли пособия за счет работодателя по счетам затрат. ";
						Если СтрокаТаблицыОшибок.ВидРасчета.ВидПособияСоциальногоСтрахования <> Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет Тогда
							ТекстСообщенияРекомендации = "Рекомендуется зарегистрировать отражение пособия в учете документом ""Начисление по больничному листу"".
							|Перейдите по ссылке ""Отражение пособия в учете"", установить вариант отражения в учете ""по данным текущего документа""
							|и заполните таблицу ""Проводки и данные по страховым взносам"".";
						КонецЕсли;
						
					ИначеЕсли СтрокаТаблицыОшибок.КодОшибки = 5 Тогда
						
						ТекстСообщения = ТекстСообщения + "Нет данных отражения в учете базовых начислений";
						
					Иначе //для этого кода нет текста сообщения
						Продолжить;
					КонецЕсли;	
					
					РодительскаяСтрока = ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщения, , , , Перечисления.ВидыСообщений.ВажнаяИнформация);
					Если ЗначениеЗаполнено(ТекстСообщенияРекомендации) Тогда
						ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщенияРекомендации, РодительскаяСтрока);	
					КонецЕсли;
					
					ТекущийКодОшибки  = СтрокаТаблицыОшибок.КодОшибки;
					ТекущийВидРасчета = СтрокаТаблицыОшибок.ВидРасчета;
					
				КонецЕсли;	
				
				Если ЗначениеЗаполнено(СтрокаТаблицыОшибок.ПериодДействияНачало) Тогда
					СтруктураПоискаОсновныеНачисиления.Сотрудник  = СтрокаТаблицыОшибок.Сотрудник;	
					СтруктураПоискаОсновныеНачисиления.ВидРасчета = СтрокаТаблицыОшибок.ВидРасчета;
					СтруктураПоискаОсновныеНачисиления.ПериодДействияНачало = СтрокаТаблицыОшибок.ПериодДействияНачало;
					СтруктураПоискаОсновныеНачисиления.ПериодДействияКонец  = НачалоДня(СтрокаТаблицыОшибок.ПериодДействияКонец);
					СтруктураПоискаОсновныеНачисиления.ДокументОснование    = СтрокаТаблицыОшибок.Регистратор;
					СтруктураПоискаОсновныеНачисиления.Сторно     = СтрокаТаблицыОшибок.Сторно;
					НайденныеСтроки = ОсновныеНачисления.НайтиСтроки(СтруктураПоискаОсновныеНачисиления);
					ТекстСообщения = """Основные начисления"", ";
				Иначе
					СтруктураПоискаДополнительныеНачисиления.Сотрудник  = СтрокаТаблицыОшибок.Сотрудник;	
					СтруктураПоискаДополнительныеНачисиления.ВидРасчета = СтрокаТаблицыОшибок.ВидРасчета;
					СтруктураПоискаДополнительныеНачисиления.ДокументОснование = СтрокаТаблицыОшибок.Регистратор;
					СтруктураПоискаДополнительныеНачисиления.Сторно     = СтрокаТаблицыОшибок.Сторно;
					НайденныеСтроки = ДополнительныеНачисления.НайтиСтроки(СтруктураПоискаДополнительныеНачисиления);
					ТекстСообщения = """Дополнительные начисления"", ";
				КонецЕсли;
				
				Для каждого СтрокаТЧ Из НайденныеСтроки Цикл
					ТекстСообщенияПоСтроке = ТекстСообщения + "строка: " + СтрокаТЧ.НомерСтроки;
					ОбщегоНазначенияЗК.КомментарийРасчета(ТекстСообщенияПоСтроке, РодительскаяСтрока);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
		
	
	АвтозаполнениеПроводок();
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеПроводок() Экспорт
	
	ОтражениеВУчете.Очистить();
	
	Записать();  // запишем документ
	ВыборкаПоДоходам = СформироватьЗапросПоДоходам().Выбрать();
	
	ЗаполнитьЗначенияПеременныхВеденияУчета();	
	
	ДатаДействияПриказа186Н = ОтражениеЗарплатыВРеглУчетеДополнительный.ДатаДействияПриказа186Н(); 
	
	// запишем движения по текущему состоянию табличной части с начислениями
	// как при проведении
	НаборЗаписейОсновной = РегистрыРасчета.БУОсновныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейОсновной.Отбор.Регистратор.Значение = Ссылка;
	
	НаборЗаписейДополнительный = РегистрыРасчета.БУДополнительныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейДополнительный.Отбор.Регистратор.Значение = Ссылка;
	
	ПлохиеДанные = Ложь;
	
	Пока ВыборкаПоДоходам.Следующий() Цикл
		ПроверитьЗаполнениеСтрокиДохода(ВыборкаПоДоходам, ПлохиеДанные, мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ);
		ДобавитьСтрокуВДвиженияПоДоходам(ВыборкаПоДоходам, НаборЗаписейОсновной, НаборЗаписейДополнительный);
	КонецЦикла;
	
	Если ПлохиеДанные Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	Для Каждого Набор Из Движения Цикл
		Если ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.БУОсновныеНачисления") Тогда
			НаборЗаписейОсновной.Записать();
		КонецЕсли;
		Если ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.БУДополнительныеНачисления") Тогда
			НаборЗаписейДополнительный.Записать();
		КонецЕсли;
	КонецЦикла;
	
	ГоловнаяОрганизация = ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация);
	
	// фактически - создаем структуру промежуточной таблицы
	ПромежуточнаяТаблица = ОтражениеВУчете.Выгрузить();
	
	Запрос = Новый Запрос;
	
	// готовим массив счетов исключений, которые не учавствуют в распределении РБП
	СчетаИсключения = Новый Массив();
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеАктивы);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов);
	Запрос.УстановитьПараметр("СчетаИсключенияРБП", СчетаИсключения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключенияРБП)";
	МассивСчетаИсключенияРБП = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// формирование проводок ЕСН или страховым взносам
	//
	ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	ТаблицаПроводкиПоВзносам = ПромежуточнаяТаблица.СкопироватьКолонки();
	Если ПериодРегистрации >= РасчетСтраховыхВзносов.ДатаПередачиАдминистрированияВзносовФНС() Тогда
		ПолучитьПроводкиПоСтраховымВзносам2017(ТаблицаПроводкиПоВзносам, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	ИначеЕсли ПериодРегистрации >= РасчетСтраховыхВзносов.ДатаВыделенияВзносовНаОПСсСуммПревышенияПредельнойВеличины() Тогда
		ПолучитьПроводкиПоСтраховымВзносам2016(ТаблицаПроводкиПоВзносам, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	ИначеЕсли ПериодРегистрации >= РасчетСтраховыхВзносов.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() Тогда
		ПолучитьПроводкиПоСтраховымВзносам2014(ТаблицаПроводкиПоВзносам, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	ИначеЕсли ПериодРегистрации >= ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов() Тогда

		ПолучитьПроводкиПоСтраховымВзносам2011(ТаблицаПроводкиПоВзносам, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	ИначеЕсли ПериодРегистрации >= ДатаЗакона213ФЗ Тогда
		ПолучитьПроводкиПоСтраховымВзносам2010(ТаблицаПроводкиПоВзносам, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	Иначе
		ПолучитьПроводкиПоЕСНиВзносам(ТаблицаПроводкиПоВзносам, ГоловнаяОрганизация, МассивСчетаИсключенияРБП);
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаПроводкиПоВзносам Цикл
		Строка = ОтражениеВУчете.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТаблицы);
	КонецЦикла;
	
	// формирование проводок ЕСН или страховым взносам
	////////////////////////////////////////////////////////////////////////////////////////////////////
	
	/////////////////
	// параметры запросов
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// формирование проводок по резервам, оценочным обязательствам
	//
	
	ТаблицаПроводкиПоРезервам = ПромежуточнаяТаблица.СкопироватьКолонки();
	Если ПериодРегистрации < ДатаДействияПриказа186Н Тогда
		// не учитываем учетную политику по оценочным обязательствам.
		СформироватьПроводкиПоРезервамДо2011(ТаблицаПроводкиПоРезервам);
	Иначе
		СформироватьПроводкиПоРезервам2011(ТаблицаПроводкиПоРезервам);

	КонецЕсли;
	
	// вычеркнем обнулившиеся суммы
	СвернутьТаблицуПроводок(ТаблицаПроводкиПоРезервам);
	
	Для Каждого СтрокаТаблицы Из ТаблицаПроводкиПоРезервам Цикл
		Строка = ОтражениеВУчете.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТаблицы);
	КонецЦикла;
	
	//
	// конец формирования проводок по резервам
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// отражение начислений
	
	Если ПериодРегистрации < ДатаДействияПриказа186Н Тогда
		ПолучитьПроводкиПоНачислениям2010(ПромежуточнаяТаблица, МассивСчетаИсключенияРБП, ГоловнаяОрганизация);
	Иначе
		ПолучитьПроводкиПоНачислениям2011(ПромежуточнаяТаблица, МассивСчетаИсключенияРБП, ГоловнаяОрганизация, ДатаДействияПриказа186Н);
	КонецЕсли;
	
	//
	// отражение начислений
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// начало отражения удержаний
	// 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	
	ПараметрыПолученияПодразделенияФизлица = Новый Соответствие;
	// Таблица ВТ_СписокФизлиц, 
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Удержания.ФизЛицо
	|ПОМЕСТИТЬ ВТ_СписокФизлиц
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	|ГДЕ
	|	Удержания.ОбособленноеПодразделение = &Организация
	|	И Удержания.ПериодРегистрации = &ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &ГоловнаяОрганизация
	|				И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|				И Сотрудник.Физлицо В
	|					(ВЫБРАТЬ
	|						СписокФизлиц.ФизЛицо
	|					ИЗ
	|						ВТ_СписокФизлиц КАК СписокФизлиц)) КАК РаботникиОрганизаций
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизаций.ПериодЗавершения <= &КонецПериода
	|					И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|		КОНЕЦ = &Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() ЦИкл
		ПараметрыПолученияПодразделенияФизлица.Вставить(Выборка.Физлицо, Выборка.ПодразделениеОрганизации);
	КонецЦикла;	
	
	Измерения = Новый Массив(1);
	Измерения[0] = "Сотрудник";
	Запрос.УстановитьПараметр("парамИзмерения", Измерения);
	
	СписокУдержанияПоИсполнительномуЛисту = Новый Массив;
	СписокУдержанияПоИсполнительномуЛисту.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентом);
	СписокУдержанияПоИсполнительномуЛисту.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомБезБЛ);
	СписокУдержанияПоИсполнительномуЛисту.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела);
	СписокУдержанияПоИсполнительномуЛисту.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПределаБезБЛ);
	СписокУдержанияПоИсполнительномуЛисту.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой);
	СписокУдержанияПоИсполнительномуЛисту.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела);
	Запрос.УстановитьПараметр("парамСписокУдержанияПоИсполнительномуЛисту", СписокУдержанияПоИсполнительномуЛисту);
	
	Разрезы = Новый Массив(18);
	Разрезы[0]	= "СчетДт";
	Разрезы[1]	= "СубконтоДт1";
	Разрезы[2]	= "СубконтоДт2";
	Разрезы[3]	= "СубконтоДт3";
	Разрезы[4]	= "СчетКт";
	Разрезы[5]	= "СубконтоКт1";
	Разрезы[6]	= "СубконтоКт2";
	Разрезы[7]	= "СубконтоКт3";
	Разрезы[8]	= "СчетДтНУ";
	Разрезы[9]	= "СубконтоДтНУ1";
	Разрезы[10]	= "СубконтоДтНУ2";
	Разрезы[11]	= "СубконтоДтНУ3";
	Разрезы[12]	= "СчетКтНУ";
	Разрезы[13]	= "СубконтоКтНУ1";
	Разрезы[14]	= "СубконтоКтНУ2";
	Разрезы[15]	= "СубконтоКтНУ3";	
	Разрезы[16] = "СпособРаспределенияЗатрат";
	Разрезы[17] = "ОтражениеВУСН";	
	
	Запрос.УстановитьПараметр("парамРазрезыБУ", Разрезы);
	
	ИзмеренияБазыНачислений = Новый Массив(2);
	ИзмеренияБазыНачислений[0] = "Физлицо";
	ИзмеренияБазыНачислений[1] = "Организация";
	
	РазрезыБазыНачислений = Новый Массив(1);
	РазрезыБазыНачислений[0] = "ОтражениеВУСН";
	
	ЗависимыеСпособыРасчета = Новый Массив;
	ЗависимыеСпособыРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.Процентом);
	ЗависимыеСпособыРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);
	ЗависимыеСпособыРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела);
	
	Запрос.УстановитьПараметр("ИзмеренияБазыНачислений", ИзмеренияБазыНачислений);
	Запрос.УстановитьПараметр("РазрезыБазыНачислений", РазрезыБазыНачислений);
	Запрос.УстановитьПараметр("ЗависимыеСпособыРасчета", ЗависимыеСпособыРасчета);
	
	МассивПоСреднемуЗаработку = Новый Массив;
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);
	МассивПоСреднемуЗаработку.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС);
	Запрос.УстановитьПараметр("парамПоСреднемуЗаработку", МассивПоСреднемуЗаработку);
	Запрос.УстановитьПараметр("СчетРасчетыПоИсполнительнымДокументамРаботников", ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументамРаботников);
	Запрос.УстановитьПараметр("НачальнаяДата", '00010101');
	
	// Таблица ВТ_УдержанияПоСреднему, 
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Удержания.Сотрудник КАК Сотрудник,
	|	Удержания.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	Удержания.ФизЛицо,
	|	Удержания.Регистратор,
	|	Удержания.НомерСтроки
	|ПОМЕСТИТЬ ВТ_УдержанияПоСреднему
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	|ГДЕ
	|	Удержания.ОбособленноеПодразделение = &Организация
	|	И Удержания.ПериодРегистрации = &ПериодРегистрации
	|	И Удержания.ВидРасчета.СпособРасчета В(&парамПоСреднемуЗаработку)
	|	И Удержания.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ДатаНачалаСобытия,
	|	СпособРасчета";
	Результат = Запрос.Выполнить().Выгрузить();
	КоличествоЗаписей = Результат[0].Количество;
	
	Если КоличествоЗаписей >0 Тогда
		
		// Таблица ВТ_СписокСотрудников, условие для виртуальных таблиц получения базы среднего
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Удержания.Сотрудник КАК Сотрудник,
		|	Удержания.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
		|	Удержания.СпособРасчета КАК СпособРасчета
		|ПОМЕСТИТЬ ВТ_СписокСотрудников
		|ИЗ
		|	ВТ_УдержанияПоСреднему КАК Удержания
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачалаСобытия,
		|	СпособРасчета";
		Запрос.Выполнить();
		
		// БазаСреднегоЗаработка
		//	Поля:
		//		Регистратор
		//		НомерСтроки
		//		СчетДтРазрез
		//		СчетКтРазрез
		//		СубконтоДт1Разрез
		//		СубконтоДт2Разрез
		//		СубконтоДт3Разрез
		//		СпособРаспределенияЗатратРазрез
		//		СубконтоКт1Разрез
		//		СубконтоКт2Разрез
		//		СубконтоКт3Разрез
		//		РезультатБаза
		//
		
		БазаСреднегоЗаработкаТекст = 
		"ВЫБРАТЬ
		|	БазаСреднегоЗаработка.Регистратор КАК Регистратор,
		|	БазаСреднегоЗаработка.НомерСтроки КАК НомерСтроки,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|	СУММА(БазаСреднегоЗаработка.РезультатБаза) КАК РезультатБаза,
		|	БазаСреднегоЗаработка.ЧислоМесяцев
		|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка
		|ИЗ
		|	(ВЫБРАТЬ
		|		УдержанияРаботниковОрганизации.Регистратор КАК Регистратор,
		|		УдержанияРаботниковОрганизации.НомерСтроки КАК НомерСтроки,
		|		БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
		|		БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
		|		БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
		|		БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
		|		БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,
		|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
		|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
		|		ВЫБОР
		|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработку), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые))
		|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
		|							ТОГДА 1
		|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
		|					КОНЕЦ
		|			КОГДА БазаСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые)
		|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
		|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫБОР
		|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиям), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые))
		|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
		|									ТОГДА 1
		|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
		|							КОНЕЦ
		|					КОГДА БазаСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиям)
		|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
		|									ТОГДА 1
		|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
		|							КОНЕЦ * ВЫБОР
		|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
		|									ТОГДА 0
		|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
		|							КОНЕЦ
		|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые))
		|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
		|									ТОГДА 0
		|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
		|							КОНЕЦ
		|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|				КОНЕЦ * ВЫБОР
		|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
		|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
		|					ИНАЧЕ 1
		|				КОНЕЦ
		|		КОНЕЦ КАК РезультатБаза,
		|		БазаСреднегоЗаработка.ЧислоМесяцев КАК ЧислоМесяцев
		|	ИЗ
		|		ВТ_УдержанияПоСреднему КАК УдержанияРаботниковОрганизации
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУОсновныеНачисления(
		|					&парамИзмерения,
		|					&парамИзмерения,
		|					&парамРазрезыБУ,
		|					Организация = &ГоловнаяОрганизация
		|						И Результат <> 0
		|						И ПериодРегистрации = &ПериодРегистрации
		|						И (Сотрудник, ДатаНачалаСобытия, СпособРасчета) В
		|							(ВЫБРАТЬ
		|								Список.Сотрудник,
		|								Список.ДатаНачалаСобытия,
		|								Список.СпособРасчета
		|							ИЗ
		|								ВТ_СписокСотрудников КАК Список)) КАК БазаСреднегоЗаработка
		|			ПО (БазаСреднегоЗаработка.ФизЛицо = УдержанияРаботниковОрганизации.ФизЛицо)
		|				И (БазаСреднегоЗаработка.СпособРасчета = УдержанияРаботниковОрганизации.СпособРасчета)
		|				И УдержанияРаботниковОрганизации.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		УдержанияРаботниковОрганизации.Регистратор,
		|		УдержанияРаботниковОрганизации.НомерСтроки,
		|		БазаСреднегоЗаработка.СчетДтРазрез,
		|		БазаСреднегоЗаработка.СчетКтРазрез,
		|		БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|		БазаСреднегоЗаработка.СчетДтНУРазрез,
		|		БазаСреднегоЗаработка.СчетКтНУРазрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|		БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|		БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|		БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|		ВЫБОР
		|			КОГДА БазаСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработку), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые))
		|				ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|						КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
		|							ТОГДА 1
		|						ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
		|					КОНЕЦ
		|			КОГДА БазаСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые)
		|				ТОГДА БазаСреднегоЗаработка.РезультатБаза
		|			КОГДА БазаСреднегоЗаработка.ЧислоМесяцев = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫБОР
		|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиям), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые))
		|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
		|									ТОГДА 1
		|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
		|							КОНЕЦ
		|					КОГДА БазаСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиям)
		|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|								КОГДА БазаСреднегоЗаработка.КоэффициентИндексации < 1
		|									ТОГДА 1
		|								ИНАЧЕ БазаСреднегоЗаработка.КоэффициентИндексации
		|							КОНЕЦ * ВЫБОР
		|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
		|									ТОГДА 0
		|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
		|							КОНЕЦ
		|					КОГДА БазаСреднегоЗаработка.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремии), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые))
		|						ТОГДА БазаСреднегоЗаработка.РезультатБаза * ВЫБОР
		|								КОГДА БазаСреднегоЗаработка.НормаПоПятидневке = 0
		|									ТОГДА 0
		|								ИНАЧЕ БазаСреднегоЗаработка.ОтработаноПоПятидневке / БазаСреднегоЗаработка.НормаПоПятидневке
		|							КОНЕЦ
		|					ИНАЧЕ БазаСреднегоЗаработка.РезультатБаза
		|				КОНЕЦ * ВЫБОР
		|					КОГДА БазаСреднегоЗаработка.ЧислоМесяцев > БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
		|						ТОГДА БазаСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / БазаСреднегоЗаработка.ЧислоМесяцев
		|					ИНАЧЕ 1
		|				КОНЕЦ
		|		КОНЕЦ,
		|		БазаСреднегоЗаработка.ЧислоМесяцев
		|	ИЗ
		|		ВТ_УдержанияПоСреднему КАК УдержанияРаботниковОрганизации
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка.БазаБУДополнительныеНачисления(
		|					&парамИзмерения,
		|					&парамИзмерения,
		|					&парамРазрезыБУ,
		|					Организация = &ГоловнаяОрганизация
		|						И Результат <> 0
		|						И ПериодРегистрации = &ПериодРегистрации
		|						И (Сотрудник, ДатаНачалаСобытия, СпособРасчета) В
		|							(ВЫБРАТЬ
		|								Список.Сотрудник,
		|								Список.ДатаНачалаСобытия,
		|								Список.СпособРасчета
		|							ИЗ
		|								ВТ_СписокСотрудников КАК Список)) КАК БазаСреднегоЗаработка
		|			ПО (БазаСреднегоЗаработка.ФизЛицо = УдержанияРаботниковОрганизации.ФизЛицо)
		|				И (БазаСреднегоЗаработка.СпособРасчета = УдержанияРаботниковОрганизации.СпособРасчета)
		|				И УдержанияРаботниковОрганизации.ДатаНачалаСобытия = БазаСреднегоЗаработка.ДатаНачалаСобытия) КАК БазаСреднегоЗаработка
		|
		|СГРУППИРОВАТЬ ПО
		|	БазаСреднегоЗаработка.Регистратор,
		|	БазаСреднегоЗаработка.СчетДтРазрез,
		|	БазаСреднегоЗаработка.СчетКтРазрез,
		|	БазаСреднегоЗаработка.НомерСтроки,
		|	БазаСреднегоЗаработка.СубконтоКт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт3Разрез,
		|	БазаСреднегоЗаработка.СубконтоДт2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКт3Разрез,
		|	БазаСреднегоЗаработка.ОтражениеВУСНРазрез,
		|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез,
		|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез,
		|	БазаСреднегоЗаработка.СчетДтНУРазрез,
		|	БазаСреднегоЗаработка.СчетКтНУРазрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез,
		|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез,
		|	БазаСреднегоЗаработка.ЧислоМесяцев
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		
	Иначе
		
		БазаСреднегоЗаработкаТекст = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
		|	0 КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДтРазрез,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКтРазрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт1Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт2Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДт3Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт1Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт2Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКт3Разрез,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетДтНУРазрез,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка) КАК СчетКтНУРазрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ1Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ2Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоДтНУ3Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ1Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ2Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СубконтоКтНУ3Разрез,
		|	ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка) КАК СпособРаспределенияЗатратРазрез,
		|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка) КАК ОтражениеВУСНРазрез,
		|	0 КАК РезультатБаза
		|ПОМЕСТИТЬ ВТ_БазаСреднегоЗаработка";
		
	КонецЕсли;
	
	Запрос.Текст = БазаСреднегоЗаработкаТекст;
	Запрос.Выполнить();
	
	Если мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда	
		
		БазовыеНачисленияТекст =
		"ВЫБРАТЬ
		|	СУММА(База.РезультатБаза) КАК РезультатБаза,
		|	База.Регистратор КАК Регистратор,
		|	База.НомерСтроки КАК НомерСтроки,
		|	База.ОтражениеВУСНРазрез,
		|	База.ФизЛицо,
		|	База.ДокументОснование,
		|	База.ДополнительныеДанные,
		|	База.Получатель
		|ПОМЕСТИТЬ ВТ_БазовыеНачисленияИЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		База.Регистратор КАК Регистратор,
		|		База.НомерСтроки КАК НомерСтроки,
		|		База.РезультатБаза КАК РезультатБаза,
		|		База.ОтражениеВУСНРазрез КАК ОтражениеВУСНРазрез,
		|		База.ФизЛицо КАК ФизЛицо,
		|		База.ДокументОснование КАК ДокументОснование,
		|		База.ДополнительныеДанные КАК ДополнительныеДанные,
		|		База.Получатель КАК Получатель
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций.БазаБУОсновныеНачисления(
		|				&ИзмеренияБазыНачислений,
		|				&ИзмеренияБазыНачислений,
		|				&РазрезыБазыНачислений,
		|				Организация = &ГоловнаяОрганизация
		|					И ПериодРегистрации = &ПериодРегистрации
		|					И ВидРасчета.СпособОтраженияВБухучете.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|					И ВидРасчета.СпособРасчета В (&ЗависимыеСпособыРасчета)) КАК База
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		База.Регистратор,
		|		База.НомерСтроки,
		|		База.РезультатБаза,
		|		База.ОтражениеВУСНРазрез,
		|		База.ФизЛицо,
		|		База.ДокументОснование,
		|		База.ДополнительныеДанные,
		|		База.Получатель
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций.БазаБУДополнительныеНачисления(
		|				&ИзмеренияБазыНачислений,
		|				&ИзмеренияБазыНачислений,
		|				&РазрезыБазыНачислений,
		|				Организация = &ГоловнаяОрганизация
		|					И ПериодРегистрации = &ПериодРегистрации
		|					И ВидРасчета.СпособОтраженияВБухучете.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|					И ВидРасчета.СпособРасчета В (&ЗависимыеСпособыРасчета)) КАК База) КАК База
		|
		|СГРУППИРОВАТЬ ПО
		|	База.Регистратор,
		|	База.НомерСтроки,
		|	База.ОтражениеВУСНРазрез,
		|	База.ФизЛицо,
		|	База.ДокументОснование,
		|	База.ДополнительныеДанные,
		|	База.Получатель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УдержанияИздержки.Регистратор КАК Регистратор,
		|	УдержанияИздержки.НомерСтроки КАК НомерСтроки,
		|	БазовыеНачисленияИЛ.РезультатБаза,
		|	БазовыеНачисленияИЛ.ОтражениеВУСНРазрез
		|ПОМЕСТИТЬ ВТ_БазовыеНачисления
		|ИЗ
		|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияИздержки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БазовыеНачисленияИЛ КАК БазовыеНачисленияИЛ
		|		ПО УдержанияИздержки.ФизЛицо = БазовыеНачисленияИЛ.ФизЛицо
		|			И (ВЫБОР
		|				КОГДА УдержанияИздержки.Получатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА УдержанияИздержки.ДокументОснование = БазовыеНачисленияИЛ.ДокументОснование
		|				ИНАЧЕ УдержанияИздержки.Получатель = БазовыеНачисленияИЛ.Получатель
		|						И УдержанияИздержки.ДополнительныеДанные = БазовыеНачисленияИЛ.ДополнительныеДанные
		|			КОНЕЦ)
		|ГДЕ
		|	УдержанияИздержки.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПочтовыйСбор), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.БанковскиеИздержки))
		|	И УдержанияИздержки.Организация = &ГоловнаяОрганизация
		|	И УдержанияИздержки.ПериодРегистрации = &ПериодРегистрации
		|
		|СГРУППИРОВАТЬ ПО
		|	УдержанияИздержки.Регистратор,
		|	УдержанияИздержки.НомерСтроки,
		|	БазовыеНачисленияИЛ.РезультатБаза,
		|	БазовыеНачисленияИЛ.ОтражениеВУСНРазрез
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БазовыеНачисленияИЛ.Регистратор,
		|	БазовыеНачисленияИЛ.НомерСтроки,
		|	БазовыеНачисленияИЛ.РезультатБаза,
		|	БазовыеНачисленияИЛ.ОтражениеВУСНРазрез
		|ИЗ
		|	ВТ_БазовыеНачисленияИЛ КАК БазовыеНачисленияИЛ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	НомерСтроки";
		
	Иначе
		
		БазовыеНачисленияТекст = 
		"ВЫБРАТЬ
		|	0 КАК РезультатБаза,
		|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка) КАК Регистратор,
		|	0 КАК НомерСтроки,
		|	0 КАК ОтражениеВУСНРазрез
		|ПОМЕСТИТЬ ВТ_БазовыеНачисления";
		
	КонецЕсли;
	
	Запрос.Текст = БазовыеНачисленияТекст;
	Запрос.Выполнить();
	
	// ДанныеУчета
	//	Поля:
	//		Регистратор
	//		НомерСтроки
	//		ФизЛицо
	//		ДокументОснование
	//		СчетДт
	//		СчетКт
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		СпособРаспределенияЗатрат
	//		СубконтоКт1
	//		СубконтоКт2
	//		СубконтоКт3
	//		ВидРасчета
	//		Результат
	// Описание:
	// таблица строится по регистру расчета удержаний с присоединением данных о бухучете
	//
	ДанныеУчетаТекст = 
	"ВЫБРАТЬ
	|	УдержанияРаботниковОрганизации.Регистратор КАК Регистратор,
	|	УдержанияРаботниковОрганизации.НомерСтроки КАК НомерСтроки,
	|	УдержанияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|	УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СчетКт
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СпособРаспределенияЗатрат
	|	КОНЕЦ КАК СпособРаспределенияЗатрат,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
	|	КОНЕЦ КАК СубконтоКт3,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СчетКтНУ
	|	КОНЕЦ КАК СчетКтНУ,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ1
	|	КОНЕЦ КАК СубконтоКтНУ1,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ2
	|	КОНЕЦ КАК СубконтоКтНУ2,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ3
	|	КОНЕЦ КАК СубконтоКтНУ3,
	|	ВЫБОР
	|		КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.ОтражениеВУСН
	|	КОНЕЦ КАК ОтражениеВУСН,
	|	УдержанияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|	УдержанияРаботниковОрганизации.Результат КАК Результат,
	|	УдержанияРаботниковОрганизации.ФизЛицо.Наименование
	|ПОМЕСТИТЬ ВТ_ДанныеУчета
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|ГДЕ
	|	УдержанияРаботниковОрганизации.ОбособленноеПодразделение = &Организация
	|	И УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
	|	И УдержанияРаботниковОрганизации.ПериодРегистрации = &ПериодРегистрации
	|	И УдержанияРаботниковОрганизации.Результат <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	Запрос.Текст = ДанныеУчетаТекст;
	Запрос.Выполнить();
	
	
	// ОтражениеВБухучете
	//	Поля:
	//		Регистратор КАК Регистратор,
	//		НомерСтроки КАК НомерСтроки,
	//		ФизЛицо,
	//		СчетДт,
	//		СчетКт,
	//		СубконтоДт1,
	//		СубконтоДт2,
	//		СубконтоДт3,
	//		СпособРаспределенияЗатрат,
	//		СубконтоКт1,
	//		СубконтоКт2,
	//		СубконтоКт3,
	//		ВидРасчета
	//		Результат
	//		НомерСубконтоРаботникиДт
	//		НомерСубконтоРаботникиКт
	//		СчетДтРазрез
	//		СчетКтРазрез
	//		СубконтоДт1Разрез
	//		СубконтоДт2Разрез
	//		СубконтоДт3Разрез
	//		СпособРаспределенияЗатратРазрез
	//		СубконтоКт1Разрез
	//		СубконтоКт2Разрез
	//		СубконтоКт3Разрез
	//		РезультатБаза
	//
	
	ОтражениеВБухучетеТекст = 
	"ВЫБРАТЬ
	|	ДанныеУчета.Регистратор КАК Регистратор,
	|	ДанныеУчета.НомерСтроки КАК НомерСтроки,
	|	ДанныеУчета.ФизЛицо,
	|	ДанныеУчета.ФизЛицоНаименование КАК ФизЛицоНаименование,
	|	ДанныеУчета.СчетДт,
	|	ДанныеУчета.СчетКт,
	|	ДанныеУчета.СубконтоДт1,
	|	ДанныеУчета.СубконтоДт2,
	|	ДанныеУчета.СубконтоДт3,
	|	ДанныеУчета.СпособРаспределенияЗатрат,
	|	ДанныеУчета.СубконтоКт1,
	|	ДанныеУчета.СубконтоКт2,
	|	ДанныеУчета.СубконтоКт3,
	|	ДанныеУчета.СчетДтНУ,
	|	ДанныеУчета.СчетКтНУ,	
	|	ДанныеУчета.СубконтоДтНУ1,
	|	ДанныеУчета.СубконтоДтНУ2,
	|	ДанныеУчета.СубконтоДтНУ3,
	|	ДанныеУчета.СубконтоКтНУ1,
	|	ДанныеУчета.СубконтоКтНУ2,
	|	ДанныеУчета.СубконтоКтНУ3,	
	|	ДанныеУчета.ОтражениеВУСН,	
	|	ДанныеУчета.ВидРасчета,
	|	ДанныеУчета.Результат,
	|	ДанныеУчета.ДокументОснование.Получатель Как Контрагент,
	|	ДанныеУчета.ДокументОснование Как ИсполнительныйДокумент,
	|	ЕСТЬNULL(ВидыСубконтоРаботникиДт.НомерСтроки, 0) КАК НомерСубконтоРаботникиДт,
	|	ЕСТЬNULL(ВидыСубконтоРаботникиКт.НомерСтроки, 0) КАК НомерСубконтоРаботникиКт,
	|	ВЫБОР КОГДА ДанныеУчета.СчетКт = &СчетРасчетыПоИсполнительнымДокументамРаботников ТОГДА " + мНомерСубконтоКонтрагентыКт + " ИНАЧЕ 0 КОНЕЦ КАК НомерСубконтоКонтрагентыКт,
	|	ВЫБОР КОГДА ДанныеУчета.СчетКт = &СчетРасчетыПоИсполнительнымДокументамРаботников ТОГДА " + мНомерСубконтоИсполнДокументыКт + " ИНАЧЕ 0 КОНЕЦ КАК НомерСубконтоИсполнДокументыКт,
	|	ЕСТЬNULL(ВидыСубконтоПодразделениеКт.НомерСтроки, 0) КАК НомерСубконтоПодразделениеКт,
	|	БазаСреднегоЗаработка.СчетДтРазрез КАК СчетДтРазрез,
	|	БазаСреднегоЗаработка.СчетКтРазрез КАК СчетКтРазрез,
	|	БазаСреднегоЗаработка.СубконтоДт1Разрез КАК СубконтоДт1Разрез,
	|	БазаСреднегоЗаработка.СубконтоДт2Разрез КАК СубконтоДт2Разрез,
	|	БазаСреднегоЗаработка.СубконтоДт3Разрез КАК СубконтоДт3Разрез,
	|	БазаСреднегоЗаработка.СпособРаспределенияЗатратРазрез КАК СпособРаспределенияЗатратРазрез,
	|	БазаСреднегоЗаработка.СубконтоКт1Разрез КАК СубконтоКт1Разрез,
	|	БазаСреднегоЗаработка.СубконтоКт2Разрез КАК СубконтоКт2Разрез,
	|	БазаСреднегоЗаработка.СубконтоКт3Разрез КАК СубконтоКт3Разрез,
	|	БазаСреднегоЗаработка.СчетДтНУРазрез КАК СчетДтНУРазрез,
	|	БазаСреднегоЗаработка.СчетКтНУРазрез КАК СчетКтНУРазрез,
	|	БазаСреднегоЗаработка.СубконтоДтНУ1Разрез КАК СубконтоДтНУ1Разрез,
	|	БазаСреднегоЗаработка.СубконтоДтНУ2Разрез КАК СубконтоДтНУ2Разрез,
	|	БазаСреднегоЗаработка.СубконтоДтНУ3Разрез КАК СубконтоДтНУ3Разрез,
	|	БазаСреднегоЗаработка.СубконтоКтНУ1Разрез КАК СубконтоКтНУ1Разрез,
	|	БазаСреднегоЗаработка.СубконтоКтНУ2Разрез КАК СубконтоКтНУ2Разрез,
	|	БазаСреднегоЗаработка.СубконтоКтНУ3Разрез КАК СубконтоКтНУ3Разрез,	
	|	ЕСТЬNULL(БазаСреднегоЗаработка.ОтражениеВУСНРазрез, БазовыеНачисления.ОтражениеВУСНРазрез) КАК ОтражениеВУСНРазрез,	
	|	ЕСТЬNULL(БазаСреднегоЗаработка.РезультатБаза, БазовыеНачисления.РезультатБаза) КАК РезультатБаза
	|ИЗ
	|	ВТ_ДанныеУчета КАК ДанныеУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазаСреднегоЗаработка КАК БазаСреднегоЗаработка
	|		ПО ДанныеУчета.Регистратор = БазаСреднегоЗаработка.Регистратор
	|			И ДанныеУчета.НомерСтроки = БазаСреднегоЗаработка.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазовыеНачисления КАК БазовыеНачисления
	|		ПО ДанныеУчета.Регистратор = БазовыеНачисления.Регистратор
	|			И ДанныеУчета.НомерСтроки = БазовыеНачисления.НомерСтроки
	|			И (ДанныеУчета.ОтражениеВУСН = ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиДт
	|		ПО (ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И ДанныеУчета.СчетДт = ВидыСубконтоРаботникиДт.Ссылка
	|   		И (ВидыСубконтоРаботникиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделениеКт
	|		ПО (ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И ДанныеУчета.СчетКт = ВидыСубконтоПодразделениеКт.Ссылка
	|			И (ВидыСубконтоПодразделениеКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоКонтрагентыКт
	|		ПО (ДанныеУчета.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументамРаботников))
	|			И ДанныеУчета.СчетКт = ВидыСубконтоКонтрагентыКт.Ссылка
	|			И (ВидыСубконтоКонтрагентыКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоРаботникиКт
	|		ПО (ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|			И ДанныеУчета.СчетКт = ВидыСубконтоРаботникиКт.Ссылка
	|			И (ВидыСубконтоРаботникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации))
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ФизЛицоНаименование,
	|	Регистратор,
	|	НомерСтроки
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.Текст = ОтражениеВБухучетеТекст;
	
	РезультатДанныеУчета = Запрос.Выполнить();
	
	// пустая ссылка на счет - для проверок способов отражения в бухучете
	ПустойСчет = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	ПустойСчетНУ = ПланыСчетов.Налоговый.ПустаяСсылка();
	ПустоеОтражениеВУСН = Перечисления.ОтражениеВУСН.ПустаяСсылка();
	
	// основная выборка - по ней ведем обход и вводим записи движений
	ДанныеУчета = РезультатДанныеУчета.Выбрать();
	Если Не ДанныеУчета.Следующий() Тогда
		ПродолжатьОбработку = Ложь;
	Иначе
		ПродолжатьОбработку = Истина;
	КонецЕсли;
	
	// вспомогательная выборка - по ней ведем суммирование базовых результатов
	ДанныеУчетаВспомогательные = РезультатДанныеУчета.Выбрать();
	
	// структура поиска для позиционирования в ДанныеНалоговогоУчетаВспомогательные
	// при необходимости суммирования "базовых2 ресурсов
	СтруктураПоиска = Новый Структура("Регистратор,НомерСтроки");
	
	Пока ПродолжатьОбработку Цикл
		
		ПодразделениеФизлица = ПолучитьПодразделениеФизлица(ДанныеУчета.Физлицо, ПараметрыПолученияПодразделенияФизлица);
		СтрокаДанных = СоздатьСтрокуПромежуточнойТаблицы(ДанныеУчета, ПромежуточнаяТаблица, ПустойСчет, ПодразделениеФизлица);
		ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ПодразделениеФизлица, ПустойСчет);
			/////Вадим 24.01.2014 13:30:47  бп 
			Если СокрЛП(ДанныеУчета.ВидРасчета)="1_Удержание компенсации расходов по договорам ГПХ"
				или СокрЛП(ДанныеУчета.ВидРасчета)="1_Удержание за бланк Трудовой книжки"
				или СокрЛП(ДанныеУчета.ВидРасчета)="1_Удержания прочие"
				Тогда
			ПростановкаДанныхДляУдержанийГПХ(ДанныеУчета,СтрокаДанных);	
		КонецЕсли;
  
  		////ВадимКонец

		// обработаем записи удержания, отражаемого пропорционально отражению начислений
		Если ДанныеУчета.СчетДт = ПустойСчет ИЛИ ДанныеУчета.СчетКт = ПустойСчет Тогда
			// вычисляем результат нормируя его на базу для строк базы относящихся 
			// к одной строке основного регистра
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если 	ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
					Успешно = Ложь;
				Иначе
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуПромежуточнойТаблицы(ДанныеУчета, ПромежуточнаяТаблица, ПустойСчет);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатБаза = NULL Тогда
						Успешно = Ложь;
						Доля = 0;
					Иначе
						Доля = ПолныйРезультат * ДанныеУчета.РезультатБаза / СуммаПоСтроке;
					КонецЕсли;
				КонецЕсли;
				
				// если счет пустой - заполним счет данными базы
				Если ДанныеУчета.СчетДт = ПустойСчет Тогда
					Если ДанныеУчета.СчетДтРазрез = NULL Тогда
						Успешно = Ложь;
					Иначе
						СтрокаДанных.СчетДт 	 	= ДанныеУчета.СчетКтРазрез;
						СтрокаДанных.СубконтоДт1 	= ДанныеУчета.СубконтоКт1Разрез;
						СтрокаДанных.СубконтоДт2 	= ДанныеУчета.СубконтоКт2Разрез;
						СтрокаДанных.СубконтоДт3 	= ДанныеУчета.СубконтоКт3Разрез;
						СтрокаДанных.СпособРаспределенияЗатрат 	= ДанныеУчета.СпособРаспределенияЗатратРазрез;
					КонецЕсли;
				КонецЕсли;
				// если счет пустой - заполним счет данными базы
				Если ДанныеУчета.СчетКт = ПустойСчет Тогда
					Если ДанныеУчета.СчетКтРазрез = NULL Тогда
						Успешно = Ложь;
					Иначе
						СтрокаДанных.СчетКт 	 = ДанныеУчета.СчетДтРазрез;
						СтрокаДанных.СубконтоКт1 = ДанныеУчета.СубконтоДт1Разрез;
						СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоДт2Разрез;
						СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоДт3Разрез;
					КонецЕсли;
				КонецЕсли;
				
				ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ПолучитьПодразделениеФизлица(ДанныеУчета.Физлицо, ПараметрыПолученияПодразделенияФизлица), ПустойСчет);
				
				СтрокаДанных.Сумма = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Сумма; 
				КонецЕсли;
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Сумма;
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Сумма = СтрокаДанных.Сумма + ПолныйРезультат - СуммарнаяДоля;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Сумма; 
			КонецЕсли;
			
		ИначеЕсли мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы И ДанныеУчета.ОтражениеВУСН = ПустоеОтражениеВУСН Тогда
			// распределеим удержание на части принимаю как расходы и не принимаемую
			// вычисляем результат нормируя его на базу для строк базы относящихся 
			// к одной строке основного регистра
			
			// текущий ключ поиска 
			ТекущийРегистратор = ДанныеУчета.Регистратор;
			ТекущийНомерСтроки = ДанныеУчета.НомерСтроки;
			// позиционируемся во вспомогательной выборке по запросу для суммирования "базовых" данных
			СтруктураПоиска.Регистратор = ТекущийРегистратор;
			СтруктураПоиска.НомерСтроки = ТекущийНомерСтроки;
			Если 	ДанныеУчетаВспомогательные.Регистратор <> ТекущийРегистратор ИЛИ 
				ДанныеУчетаВспомогательные.НомерСтроки <> ТекущийНомерСтроки Тогда
				// ищем следующую строку во спомогательной выборке если она не является искомой	
				ДанныеУчетаВспомогательные.НайтиСледующий(СтруктураПоиска);
			КонецЕсли;
			
			СуммаПоСтроке = 0;
			// суммируем базовые ресурсы по текущей строке набора записей
			Пока ДанныеУчетаВспомогательные.Регистратор = ТекущийРегистратор И ДанныеУчетаВспомогательные.НомерСтроки = ТекущийНомерСтроки Цикл
				Если ДанныеУчетаВспомогательные.РезультатБаза = NULL Тогда
					Успешно = Ложь;
				Иначе
					СуммаПоСтроке = СуммаПоСтроке + ДанныеУчетаВспомогательные.РезультатБаза;
				КонецЕсли;
				Если Не ДанныеУчетаВспомогательные.Следующий() Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			// суммарная доля, которую уже "разбросали" на строки с одинаковым регистратором и номером строки
			СуммарнаяДоля = 0;
			// полный результат
			ПолныйРезультат = ДанныеУчета.Результат;
			// обходим строки и вычисляем долю результата по базовым записям
			ПерваяИзГруппыСтрок = Истина;
			Пока ДанныеУчета.Регистратор = ТекущийРегистратор И ДанныеУчета.НомерСтроки = ТекущийНомерСтроки Цикл
				// если это не первая из группы "базовых" строк по одной строке основного регистра
				// то создаем очередную строку движений
				Если Не ПерваяИзГруппыСтрок Тогда
					СтрокаДанных = СоздатьСтрокуПромежуточнойТаблицы(ДанныеУчета, ПромежуточнаяТаблица, ПустойСчет);
				Иначе
					ПерваяИзГруппыСтрок = Ложь;
				КонецЕсли;
				
				Если СуммаПоСтроке = 0 Тогда
					Доля = 0;
				Иначе
					Если ДанныеУчета.РезультатБаза = NULL Тогда
						Успешно = Ложь;
						Доля = 0;
					Иначе
						Доля = ПолныйРезультат * ДанныеУчета.РезультатБаза / СуммаПоСтроке;
					КонецЕсли;
				КонецЕсли;
				
				Если ДанныеУчета.ОтражениеВУСНРазрез = NULL Тогда
					Успешно = Ложь;
				Иначе
					СтрокаДанных.ОтражениеВУСН = ДанныеУчета.ОтражениеВУСНРазрез;
				КонецЕсли;
				
				ЗаполнитьПодразделениеДтКт(СтрокаДанных, СтрокаДанных.СчетДт, СтрокаДанных.СчетКт, ПолучитьПодразделениеФизлица(ДанныеУчета.Физлицо, ПараметрыПолученияПодразделенияФизлица), ПустойСчет);
				
				СтрокаДанных.Сумма = ?(ПолныйРезультат > 0,Мин(Доля,ПолныйРезультат - СуммарнаяДоля),Макс(Доля,ПолныйРезультат - СуммарнаяДоля));
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					СтрокаДанных.СуммаНУ = СтрокаДанных.Сумма; 
				КонецЕсли;
				
				СуммарнаяДоля = СуммарнаяДоля + СтрокаДанных.Сумма;
				Если Не ДанныеУчета.Следующий() Тогда
					ПродолжатьОбработку = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			// ошибки округления складываются на последнюю запись из группы базовых записей
			СтрокаДанных.Сумма = СтрокаДанных.Сумма + ПолныйРезультат - СуммарнаяДоля;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				СтрокаДанных.СуммаНУ = СтрокаДанных.Сумма; 
			КонецЕсли;
			
		Иначе
			Если Не ДанныеУчета.Следующий() Тогда
				ПродолжатьОбработку = Ложь;
			КонецЕсли;
		КонецЕсли;
	  
	КонецЦикла;
	
	// 
	// конец отражения удержаний
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// начало отражения НДФЛ
	//
	
	Если ПериодРегистрации >= ДатаЗакона213ФЗ Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода > &ПериодРегистрации
		|			ТОГДА &ПериодРегистрации
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
		|	КОНЕЦ КАК ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода
		|ПОМЕСТИТЬ ВТ_ФизлицаПериоды
		|ИЗ
		|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &Организация
		|	И НДФЛРасчетыСБюджетом.ВидСтроки В (ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ЗачетАвансовыхПлатежей))
		|	И НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодРегистрации,
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БУНачисления.ФизЛицо КАК ФизЛицо,
		|	БУНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	СУММА(БУНачисления.Результат) КАК Результат,
		|	БУНачисления.ВидРасчета КАК ВидРасчета,
		|	БУНачисления.ОтражениеВУСН,
		|	БУНачисления.СчетКт,
		|	БУНачисления.СубконтоКт1,
		|	БУНачисления.СубконтоКт2,
		|	БУНачисления.СубконтоКт3
		|ПОМЕСТИТЬ ВТ_ДоходыБУ
		|ИЗ
		|	(ВЫБРАТЬ
		|		БУНачисления.ФизЛицо КАК ФизЛицо,
		|		БУНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|		БУНачисления.ВидРасчета КАК ВидРасчета,
		|		БУНачисления.СчетКт КАК СчетКт,
		|		БУНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
		|		БУНачисления.Результат КАК Результат,
		|		БУНачисления.СубконтоКт1 КАК СубконтоКт1,
		|		БУНачисления.СубконтоКт2 КАК СубконтоКт2,
		|		БУНачисления.СубконтоКт3 КАК СубконтоКт3
		|	ИЗ
		|		РегистрРасчета.БУОсновныеНачисления КАК БУНачисления
		|	ГДЕ
		|		БУНачисления.ВидРасчета.КодДоходаНДФЛ <> ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.ПустаяСсылка)
		|		И БУНачисления.ОбособленноеПодразделение = &Организация
		|		И (БУНачисления.ФизЛицо, БУНачисления.ПериодРегистрации) В
		|				(ВЫБРАТЬ
		|					Список.ФизЛицо,
		|					Список.ПериодРегистрации
		|				ИЗ
		|					ВТ_ФизлицаПериоды КАК Список)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		БУНачисления.ФизЛицо,
		|		НАЧАЛОПЕРИОДА(БУНачисления.ПериодРегистрации, МЕСЯЦ),
		|		БУНачисления.ВидРасчета,
		|		БУНачисления.СчетКт,
		|		БУНачисления.ОтражениеВУСН,
		|		БУНачисления.Результат,
		|		БУНачисления.СубконтоКт1,
		|		БУНачисления.СубконтоКт2,
		|		БУНачисления.СубконтоКт3
		|	ИЗ
		|		РегистрРасчета.БУДополнительныеНачисления КАК БУНачисления
		|	ГДЕ
		|		БУНачисления.ВидРасчета.КодДоходаНДФЛ <> ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.ПустаяСсылка)
		|		И БУНачисления.ОбособленноеПодразделение = &Организация
		|		И (БУНачисления.ФизЛицо, НАЧАЛОПЕРИОДА(БУНачисления.ПериодРегистрации, МЕСЯЦ)) В
		|				(ВЫБРАТЬ
		|					Список.ФизЛицо,
		|					Список.ПериодРегистрации
		|				ИЗ
		|					ВТ_ФизлицаПериоды КАК Список)) КАК БУНачисления
		|
		|СГРУППИРОВАТЬ ПО
		|	БУНачисления.ФизЛицо,
		|	БУНачисления.ПериодРегистрации,
		|	БУНачисления.СчетКт,
		|	БУНачисления.ОтражениеВУСН,
		|	БУНачисления.ВидРасчета,
		|	БУНачисления.СубконтоКт1,
		|	БУНачисления.СубконтоКт2,
		|	БУНачисления.СубконтоКт3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодРегистрации,
		|	ВидРасчета,
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДоходыБУ.ФизЛицо КАК ФизЛицо,
		|	ВТ_ДоходыБУ.ПериодРегистрации КАК ПериодРегистрации,
		|	ВТ_ДоходыБУ.ВидРасчета КАК ВидРасчета,
		|	СУММА(ВТ_ДоходыБУ.Результат) КАК Результат
		|ПОМЕСТИТЬ ВТ_ДоходыБУСвод
		|ИЗ
		|	ВТ_ДоходыБУ КАК ВТ_ДоходыБУ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДоходыБУ.ФизЛицо,
		|	ВТ_ДоходыБУ.ПериодРегистрации,
		|	ВТ_ДоходыБУ.ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодРегистрации,
		|	ВидРасчета,
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|	НДФЛСведенияОДоходах.ВидРасчета КАК ВидРасчета,
		|	НДФЛСведенияОДоходах.СуммаДохода - НДФЛСведенияОДоходах.СуммаВычета КАК Сумма
		|ПОМЕСТИТЬ ВТ_ДоходыНДФЛ
		|ИЗ
		|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
		|ГДЕ
		|	НДФЛСведенияОДоходах.ОбособленноеПодразделение = &Организация
		|	И (НДФЛСведенияОДоходах.ФизЛицо, НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)) В
		|			(ВЫБРАТЬ
		|				ВТ_ФизлицаПериоды.ФизЛицо,
		|				ВТ_ФизлицаПериоды.ПериодРегистрации
		|			ИЗ
		|				ВТ_ФизлицаПериоды)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодРегистрации,
		|	ВидРасчета,
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДоходыНДФЛ.ФизЛицо КАК ФизЛицо,
		|	ВТ_ДоходыНДФЛ.ПериодРегистрации КАК ПериодРегистрации,
		|	ВТ_ДоходыНДФЛ.Сумма КАК СуммаНФЛ,
		|	ВТ_ДоходыБУ.Результат КАК СуммаБУ,
		|	ВТ_ДоходыБУ.ОтражениеВУСН,
		|	ВТ_ДоходыНДФЛ.ВидРасчета КАК ВидРасчета,
		|	ВТ_ДоходыБУ.СчетКт,
		|	ВТ_ДоходыБУ.СубконтоКт1,
		|	ВТ_ДоходыБУ.СубконтоКт2,
		|	ВТ_ДоходыБУ.СубконтоКт3
		|ПОМЕСТИТЬ ВТ_ДоходыНДФЛБУ
		|ИЗ
		|	ВТ_ДоходыНДФЛ КАК ВТ_ДоходыНДФЛ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоходыБУ КАК ВТ_ДоходыБУ
		|		ПО ВТ_ДоходыНДФЛ.ФизЛицо = ВТ_ДоходыБУ.ФизЛицо
		|			И ВТ_ДоходыНДФЛ.ПериодРегистрации = ВТ_ДоходыБУ.ПериодРегистрации
		|			И ВТ_ДоходыНДФЛ.ВидРасчета = ВТ_ДоходыБУ.ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодРегистрации,
		|	ВидРасчета,
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоходыНДФЛБУ.ФизЛицо,
		|	ДоходыНДФЛБУ.ПериодРегистрации,
		|	ДоходыНДФЛБУ.ОтражениеВУСН КАК ОтражениеВУСН,
		|	ДоходыНДФЛБУ.СчетКт КАК СчетКт,
		|	ДоходыНДФЛБУ.СубконтоКт1,
		|	ДоходыНДФЛБУ.СубконтоКт2,
		|	ДоходыНДФЛБУ.СубконтоКт3,
		|	СУММА(ВЫБОР
		|			КОГДА ДоходыБУСвод.Результат = 0
		|				ТОГДА 0
		|			ИНАЧЕ ДоходыНДФЛБУ.СуммаНФЛ * ДоходыНДФЛБУ.СуммаБУ / ДоходыБУСвод.Результат
		|		КОНЕЦ) КАК БазаНДФЛ
		|ИЗ
		|	ВТ_ДоходыНДФЛБУ КАК ДоходыНДФЛБУ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоходыБУСвод КАК ДоходыБУСвод
		|		ПО ДоходыНДФЛБУ.ФизЛицо = ДоходыБУСвод.ФизЛицо
		|			И ДоходыНДФЛБУ.ВидРасчета = ДоходыБУСвод.ВидРасчета
		|			И ДоходыНДФЛБУ.ПериодРегистрации = ДоходыБУСвод.ПериодРегистрации
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыНДФЛБУ.ФизЛицо,
		|	ДоходыНДФЛБУ.ОтражениеВУСН,
		|	ДоходыНДФЛБУ.СчетКт,
		|	ДоходыНДФЛБУ.ПериодРегистрации,
		|	ДоходыНДФЛБУ.СубконтоКт1,
		|	ДоходыНДФЛБУ.СубконтоКт2,
		|	ДоходыНДФЛБУ.СубконтоКт3";
		
		ТаблицаКоэффициентов = Запрос.Выполнить().Выгрузить();
		
		Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
		Запрос.УстановитьПараметр("ПустойКПП","");
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
		|	СУММА(ВЫБОР
		|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
		|				ТОГДА НДФЛРасчетыСБюджетом.Налог
		|			ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
		|		КОНЕЦ) КАК Налог,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода > &ПериодРегистрации
		|			ТОГДА &ПериодРегистрации
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
		|	КОНЕЦ КАК ПериодРегистрации,
		|	НДФЛРасчетыСБюджетом.ФизЛицо.Наименование КАК ФизЛицоНаименование,
		|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации,
				///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 18.11.2011 11:36 
		|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.AVT_ИФНС КАК Контрагент,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
		|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
		|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|	КОНЕЦ КАК КодПоОКАТО,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодПоОКТМО <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛРасчетыСБюджетом.КодПоОКТМО
		|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКТМО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКТМО
		|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКТМО, &ПустойКодПоОКАТО)
		|	КОНЕЦ КАК КодПоОКТМО,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
		|			ТОГДА НДФЛРасчетыСБюджетом.КПП
		|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
		|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|	КОНЕЦ КАК КПП
		|ИЗ
		|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &Организация
		|	И НДФЛРасчетыСБюджетом.ВидСтроки В (ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ЗачетАвансовыхПлатежей))
		|	И НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
		|	И НДФЛРасчетыСБюджетом.Налог <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	НДФЛРасчетыСБюджетом.ФизЛицо,
		|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
		|	НДФЛРасчетыСБюджетом.ФизЛицо.Наименование,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода > &ПериодРегистрации
		|			ТОГДА &ПериодРегистрации
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
		|	КОНЕЦ,
		|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации,
			///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 18.11.2011 11:36 
		|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.AVT_ИФНС,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА
		|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
		|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
		|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
		|	КОНЕЦ,
			|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КодПоОКТМО <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛРасчетыСБюджетом.КодПоОКТМО
		|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКТМО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
		|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКТМО
		|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКТМО, &ПустойКодПоОКАТО)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
		|			ТОГДА НДФЛРасчетыСБюджетом.КПП
		|		КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
		|			ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
		|		ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизЛицоНаименование";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Отбор = Новый Структура("ФизЛицо, ПериодРегистрации");
		
		СчетДебета = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
		СчетКредита = ПланыСчетов.Хозрасчетный.НДФЛ;
		СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		
		Пока Выборка.Следующий() Цикл
			
			Отбор.ФизЛицо = Выборка.ФизЛицо;
			Отбор.ПериодРегистрации = Выборка.ПериодРегистрации;
			СтрокиОтраженияПоФизЛицу = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
			
			Если Выборка.СтавкаНалогообложенияРезидента <> Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13 ИЛИ СтрокиОтраженияПоФизЛицу.Количество() = 0 Тогда
				
				Строка = ПромежуточнаяТаблица.Добавить();
				Строка.СчетДт 		= СчетДебета;
				Строка.СубконтоДт1 	= Выборка.Физлицо;
				Строка.СчетКт 		= СчетКредита;
				Строка.СубконтоКт1 	= СубконтоКредита;
				///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
				// Измайлова Полина 18.11.2011 11:38 
				Строка.СубконтоКт2 	= Выборка.Контрагент;
				////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}                                          

				Строка.Сумма		= Выборка.Налог;
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					Строка.СуммаНУ	= Строка.Сумма;	
				КонецЕсли;	
				Если мУчетПоПодразделениямНаСчетах Тогда
					Строка.ПодразделениеДт = Выборка.ПодразделениеОрганизации;
				КонецЕсли;
				
				Если мИП_ОСН Тогда
					Строка.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ;
				КонецЕсли;
				
				Если мЗаполнятьОКАТОКПП Тогда
					Строка.КодПоОКАТО = Выборка.КодПоОКАТО;
					Строка.КодПоОКТМО = Выборка.КодПоОКТМО;
					Строка.КПП = Выборка.КПП;
				КонецЕсли;
				
				Продолжить;
				
			КонецЕсли;	
			
			Коэффициенты = ВыделитьКоэффициентыОтраженияИзМассиваСтрок(СтрокиОтраженияПоФизЛицу,"БазаНДФЛ");
			РезультатыНДФЛ = ОбщегоНазначенияЗК.РаспределитьПропорционально(Выборка.Налог, Коэффициенты);
			Если РезультатыНДФЛ = Неопределено Тогда
				
				Строка = ПромежуточнаяТаблица.Добавить();
				Строка.СчетДт 		= СчетДебета;
				Строка.СубконтоДт1 	= Выборка.Физлицо;
				Строка.СчетКт 		= СчетКредита;
				Строка.СубконтоКт1 	= СубконтоКредита;
				Строка.Сумма		= Выборка.Налог;
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					Строка.СуммаНУ	= Строка.Сумма;	
				КонецЕсли;	
				Если мУчетПоПодразделениямНаСчетах Тогда
					Строка.ПодразделениеДт = Выборка.ПодразделениеОрганизации;
				КонецЕсли;
				
				Если мИП_ОСН Тогда
					Строка.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ;
				КонецЕсли;
				
				Если мЗаполнятьОКАТОКПП Тогда
					Строка.КодПоОКАТО = Выборка.КодПоОКАТО;
					Строка.КодПоОКТМО = Выборка.КодПоОКТМО;
					Строка.КПП = Выборка.КПП;
				КонецЕсли;
				
				Продолжить;
				
			КонецЕсли;
			Индекс = 0;
			Для Каждого СтрокаОтражения Из СтрокиОтраженияПоФизЛицу Цикл
				
				
				Строка = ПромежуточнаяТаблица.Добавить();
				Строка.СчетДт 		= СтрокаОтражения.СчетКт;
				Строка.СубконтоДт1 	= СтрокаОтражения.СубконтоКт1;
				Строка.СубконтоДт2 	= СтрокаОтражения.СубконтоКт2;
				Строка.СубконтоДт3 	= СтрокаОтражения.СубконтоКт3;
				
				Строка.СчетКт 		= СчетКредита;
				Строка.СубконтоКт1 	= СубконтоКредита;
				Строка.СубконтоКт2 	= Выборка.Контрагент;
				Строка.Сумма		= РезультатыНДФЛ[Индекс];
				
				Если мУСН и мОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
					Строка.ОтражениеВУСН = СтрокаОтражения.ОтражениеВУСН;
				КонецЕсли;
				
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					Строка.СуммаНУ	= Строка.Сумма;	
				КонецЕсли;	
				Если мУчетПоПодразделениямНаСчетах Тогда
					Строка.ПодразделениеДт = Выборка.ПодразделениеОрганизации;
				КонецЕсли;
				
				Если мИП_ОСН Тогда
					Строка.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ;

					
					
					
				КонецЕсли;
				
				Если мЗаполнятьОКАТОКПП Тогда
					Строка.КодПоОКАТО = Выборка.КодПоОКАТО;
					Строка.КодПоОКТМО = Выборка.КодПоОКТМО;
					Строка.КПП = Выборка.КПП;
				КонецЕсли;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		Если не мУСН Тогда
			// если нет УСН отражение НДФЛ делает без "распределения" по способам отражения в учете
			
			// НДФЛИсчисленный
			// Поля:
			//		Физлицо
			//		Налог
			// Описание:
			// Содержит НДФЛ исчисленный для заданной организации в заданном периоде регистрации
			
			НДФЛИсчисленныйТекст = 
			"ВЫБРАТЬ
			|	НДФЛРасчетыСБюджетом.ФизЛицо,
			///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
			// Измайлова Полина 18.11.2011 11:36 
			|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.AVT_ИФНС КАК Контрагент,
			////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
			
			|	СУММА(ВЫБОР
			|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
			|				ТОГДА НДФЛРасчетыСБюджетом.Налог
			|			ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|		КОНЕЦ) КАК Налог";
			Если мУчетПоПодразделениямНаСчетах Тогда
				НДФЛИсчисленныйТекст = НДФЛИсчисленныйТекст +
				",
				|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации КАК ПодразделениеОрганизации";
			КонецЕсли;	
			НДФЛИсчисленныйТекст = НДФЛИсчисленныйТекст + "
			|ИЗ
			|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|ГДЕ
			|	НДФЛРасчетыСБюджетом.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
			|	И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &парамОбособленноеПодразделение
			|	И НДФЛРасчетыСБюджетом.ВидСтроки В (ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ЗачетАвансовыхПлатежей))
			|	И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
			|
			|СГРУППИРОВАТЬ ПО
					///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
			// Измайлова Полина 18.11.2011 11:36 
			|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.AVT_ИФНС,
			////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
		
			|	НДФЛРасчетыСБюджетом.ФизЛицо";
			Если мУчетПоПодразделениямНаСчетах Тогда
				НДФЛИсчисленныйТекст = НДФЛИсчисленныйТекст +
				",
				|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации";
			КонецЕсли;
			НДФЛИсчисленныйТекст = НДФЛИсчисленныйТекст + "
			|
			|УПОРЯДОЧИТЬ ПО
			|	НДФЛРасчетыСБюджетом.ФизЛицо.Наименование";
			
			Запрос = Новый Запрос(НДФЛИсчисленныйТекст);
			
			Запрос.УстановитьПараметр("парамНачалоМесяца", НачалоМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("парамКонецМесяца", КонецМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			СчетДебета = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
			СчетКредита = ПланыСчетов.Хозрасчетный.НДФЛ;
			СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			Пока Выборка.Следующий() Цикл
				Строка = ПромежуточнаяТаблица.Добавить();
				Строка.СчетДт 		= СчетДебета;
				Строка.СубконтоДт1 	= Выборка.Физлицо;
				Строка.СчетКт 		= СчетКредита;
				Строка.СубконтоКт1 	= СубконтоКредита;
					///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
				// Измайлова Полина 18.11.2011 13:39 
				Строка.СубконтоКт2 	= Выборка.Контрагент;
				////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}                                          
			
				Строка.Сумма		= Выборка.Налог;
				Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
					Строка.СуммаНУ	= Строка.Сумма;	
				КонецЕсли;	
				Если мУчетПоПодразделениямНаСчетах Тогда
					Строка.ПодразделениеДт = Выборка.ПодразделениеОрганизации;
				КонецЕсли;
				
				Если мИП_ОСН Тогда
					Строка.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноНДФЛ;
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			// если применяется УСН отражение НДФЛ ведется с распределением НДФЛ на 
			// принимаемую и не принимаемую часть расходов
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|	ВЫБОР
			|		КОГДА НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода > &ПериодРегистрации
			|			ТОГДА &ПериодРегистрации
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
			|	КОНЕЦ КАК ПериодРегистрации,
			|	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода
			|ПОМЕСТИТЬ ВТ_ФизлицаПериоды
			|ИЗ
			|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|ГДЕ
			|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &Организация
			|	И НДФЛРасчетыСБюджетом.ВидСтроки В (ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ЗачетАвансовыхПлатежей))
			|	И НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) = &ПериодРегистрации
			|	И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ПериодРегистрации,
			|	ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА СУММА(БУНачисления.Результат) = 0
			|			ТОГДА 0
			|		ИНАЧЕ СУММА(ВЫБОР
			|					КОГДА БУНачисления.ОтражениеВУСН = ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются)
			|						ТОГДА БУНачисления.Результат
			|					ИНАЧЕ 0
			|				КОНЕЦ) / СУММА(БУНачисления.Результат)
			|	КОНЕЦ КАК ДоляПоБУ,
			|	БУНачисления.ФизЛицо КАК ФизЛицо,
			|	БУНачисления.СтавкаНДФЛ КАК СтавкаНДФЛ,
			|	БУНачисления.ПериодРегистрации КАК ПериодРегистрации
			|ПОМЕСТИТЬ ВТ_НДФЛДоля
			|ИЗ
			|	(ВЫБРАТЬ
			|		БУНачисления.Результат КАК Результат,
			|		БУНачисления.ВидРасчета.КодДоходаНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНДФЛ,
			|		БУНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
			|		БУНачисления.ФизЛицо КАК ФизЛицо,
			|		БУНачисления.ПериодРегистрации КАК ПериодРегистрации
			|	ИЗ
			|		РегистрРасчета.БУОсновныеНачисления КАК БУНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизлицаПериоды КАК ФизлицаПериоды
			|			ПО (ФизлицаПериоды.ФизЛицо = БУНачисления.ФизЛицо)
			|				И (ФизлицаПериоды.ПериодРегистрации = БУНачисления.ПериодРегистрации)
			|	ГДЕ
			|		БУНачисления.ВидРасчета.КодДоходаНДФЛ <> ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.ПустаяСсылка)
			|		И БУНачисления.ОбособленноеПодразделение = &Организация
			|		И (БУНачисления.ФизЛицо, БУНачисления.ПериодРегистрации) В
			|				(ВЫБРАТЬ
			|					Список.ФизЛицо,
			|					Список.ПериодРегистрации
			|				ИЗ
			|					ВТ_ФизлицаПериоды КАК Список)
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		БУНачисления.Результат,
			|		БУНачисления.ВидРасчета.КодДоходаНДФЛ.СтавкаНалогообложенияРезидента,
			|		БУНачисления.ОтражениеВУСН,
			|		БУНачисления.ФизЛицо,
			|		НАЧАЛОПЕРИОДА(БУНачисления.ПериодРегистрации, МЕСЯЦ)
			|	ИЗ
			|		РегистрРасчета.БУДополнительныеНачисления КАК БУНачисления
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизлицаПериоды КАК ФизлицаПериоды
			|			ПО (ФизлицаПериоды.ФизЛицо = БУНачисления.ФизЛицо)
			|				И (ФизлицаПериоды.ПериодРегистрации = НАЧАЛОПЕРИОДА(БУНачисления.ПериодРегистрации, МЕСЯЦ))
			|	ГДЕ
			|		БУНачисления.ВидРасчета.КодДоходаНДФЛ <> ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.ПустаяСсылка)
			|		И БУНачисления.ОбособленноеПодразделение = &Организация
			|		И (БУНачисления.ФизЛицо, НАЧАЛОПЕРИОДА(БУНачисления.ПериодРегистрации, МЕСЯЦ)) В
			|				(ВЫБРАТЬ
			|					Список.ФизЛицо,
			|					Список.ПериодРегистрации
			|				ИЗ
			|					ВТ_ФизлицаПериоды КАК Список)) КАК БУНачисления
			|
			|СГРУППИРОВАТЬ ПО
			|	БУНачисления.ФизЛицо,
			|	БУНачисления.СтавкаНДФЛ,
			|	БУНачисления.ПериодРегистрации
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ПериодРегистрации,
			|	СтавкаНДФЛ,
			|	ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|	СУММА(ВЫБОР
			|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
			|				ТОГДА НДФЛРасчетыСБюджетом.Налог
			|			ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
			|		КОНЕЦ) КАК Налог,
			|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНДФЛ,
			|	ВЫБОР
			|		КОГДА НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода > &ПериодРегистрации
			|			ТОГДА &ПериодРегистрации
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
			|	КОНЕЦ КАК МесяцНалоговогоПериода,
			|	НДФЛРасчетыСБюджетом.ФизЛицо.Наименование
			|ПОМЕСТИТЬ ВТ_НДФЛРезультат
			|ИЗ
			|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизлицаПериоды КАК ФизлицаПериоды
			|		ПО (ФизлицаПериоды.ФизЛицо = НДФЛРасчетыСБюджетом.ФизЛицо)
			|			И (ФизлицаПериоды.МесяцНалоговогоПериода = НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода)
			|ГДЕ
			|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &Организация
			|	И НДФЛРасчетыСБюджетом.ВидСтроки В (ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ПереданоНаВзыскание), ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.ЗачетАвансовыхПлатежей))
			|	И НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) = &ПериодРегистрации
			|
			|СГРУППИРОВАТЬ ПО
			|	НДФЛРасчетыСБюджетом.ФизЛицо,
			|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
			|	ВЫБОР
			|		КОГДА НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода > &ПериодРегистрации
			|			ТОГДА &ПериодРегистрации
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
			|	КОНЕЦ,
			|	НДФЛРасчетыСБюджетом.ФизЛицо.Наименование
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	МесяцНалоговогоПериода,
			|	СтавкаНДФЛ,
			|	ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НДФЛРезультат.ФизЛицо КАК ФизЛицо,
			|	ЕСТЬNULL(ВЫБОР
			|			КОГДА СУММА(НДФЛРезультат.Налог) = 0
			|				ТОГДА 0
			|			ИНАЧЕ СУММА(НДФЛРезультат.Налог * НДФЛДоля.ДоляПоБУ) / СУММА(НДФЛРезультат.Налог)
			|		КОНЕЦ, 0) КАК Доля,
			|	СУММА(НДФЛРезультат.Налог) КАК Налог,
			|	НДФЛРезультат.МесяцНалоговогоПериода
			|ИЗ
			|	ВТ_НДФЛРезультат КАК НДФЛРезультат
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НДФЛДоля КАК НДФЛДоля
			|		ПО НДФЛРезультат.ФизЛицо = НДФЛДоля.ФизЛицо
			|			И НДФЛРезультат.СтавкаНДФЛ = НДФЛДоля.СтавкаНДФЛ
			|			И НДФЛРезультат.МесяцНалоговогоПериода = НДФЛДоля.ПериодРегистрации
			|
			|СГРУППИРОВАТЬ ПО
			|	НДФЛРезультат.ФизЛицо,
			|	НДФЛРезультат.ФизЛицоНаименование,
			|	НДФЛРезультат.МесяцНалоговогоПериода
			|
			|УПОРЯДОЧИТЬ ПО
			|	НДФЛРезультат.ФизЛицоНаименование";
			
				СчетДебета = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
			СчетКредита = ПланыСчетов.Хозрасчетный.НДФЛ;
			СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
			УСНПринимаются  = Перечисления.ОтражениеВУСН.Принимаются;
			УСННеПринимаются  = Перечисления.ОтражениеВУСН.НеПринимаются;
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				ПринятьКакРасходы = Окр(Выборка.Налог * Выборка.Доля,2);
				НеПринятьКакРасходы = Выборка.Налог - ПринятьКакРасходы;
				Если ПринятьКакРасходы <> 0 Тогда
					Строка = ПромежуточнаяТаблица.Добавить();
					Строка.СчетДт 		= СчетДебета;
					Строка.СубконтоДт1 	= Выборка.Физлицо;
					Строка.СчетКт 		= СчетКредита;
					Строка.СубконтоКт1 	= СубконтоКредита;
					Строка.Сумма		= ПринятьКакРасходы;
					Строка.ОтражениеВУСН = УСНПринимаются;
				КонецЕсли;
				Если НеПринятьКакРасходы <> 0 Тогда
					Строка = ПромежуточнаяТаблица.Добавить();
					Строка.СчетДт 		= СчетДебета;
					Строка.СубконтоДт1 	= Выборка.Физлицо;
					Строка.СчетКт 		= СчетКредита;
					Строка.СубконтоКт1 	= СубконтоКредита;
					Строка.Сумма		= НеПринятьКакРасходы;
					Строка.ОтражениеВУСН = УСННеПринимаются;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// конец отражения НДФЛ
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// вычеркнем обнулившиеся суммы
	СвернутьТаблицуПроводок(ПромежуточнаяТаблица);
	
	Для Каждого СтрокаТаблицы Из ПромежуточнаяТаблица Цикл
		Строка = ОтражениеВУчете.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТаблицы);
	КонецЦикла;
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение погашения займов
	//
	
	ПогашениеЗаймовТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА Погашение.ВидДвижения = &Расход
	|				ТОГДА Погашение.ОсновнойДолг
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОсновнойДолг,
	|	СУММА(ВЫБОР
	|			КОГДА Погашение.ВидДвижения = &Расход
	|				ТОГДА Погашение.Проценты
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПроцентыУдержано,
	|	СУММА(ВЫБОР
	|			КОГДА Погашение.ВидДвижения = &Расход
	|				ТОГДА 0
	|			ИНАЧЕ Погашение.Проценты
	|		КОНЕЦ) КАК ПроцентыНачислено,
	|	Погашение.ФизЛицо,
	|	СведенияОЗаймах.СчетУчетаПроцентовПоЗайму КАК ДоговорЗаймаСчетУчетаПроцентовПоЗайму,
	|	СведенияОЗаймах.Субконто1 КАК ДоговорЗаймаСубконто1,
	|	СведенияОЗаймах.Субконто2 КАК ДоговорЗаймаСубконто2,
	|	СведенияОЗаймах.Субконто3 КАК ДоговорЗаймаСубконто3
	|ИЗ
	|	РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК Погашение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОЗаймах КАК СведенияОЗаймах
	|		ПО Погашение.ДоговорЗайма = СведенияОЗаймах.ДоговорЗайма
	|			И Погашение.ФизЛицо = СведенияОЗаймах.ФизЛицо
	|ГДЕ
	|	Погашение.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|	И Погашение.Организация = &парамОбособленноеПодразделение
	|	И Погашение.УдержаноИзЗарплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	Погашение.ФизЛицо,
	|	СведенияОЗаймах.СчетУчетаПроцентовПоЗайму,
	|	СведенияОЗаймах.Субконто1,
	|	СведенияОЗаймах.Субконто2,
	|	СведенияОЗаймах.Субконто3
	|
	|УПОРЯДОЧИТЬ ПО
	|	Погашение.ФизЛицо.Наименование";
	
	Запрос = Новый Запрос(ПогашениеЗаймовТекст);
	
	Запрос.УстановитьПараметр("парамНачалоМесяца", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", Организация);
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СчетДебета = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
	СчетКредита = ПланыСчетов.Хозрасчетный.РасчетыПоПредоставленнымЗаймам;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ОсновнойДолг <> 0 Тогда
			Строка = ОтражениеВУчете.Добавить();
			Строка.СчетДт 		= СчетДебета;
			Строка.СубконтоДт1 	= Выборка.Физлицо;
			Строка.СчетКт 		= СчетКредита;
			Строка.СубконтоКт1 	= Выборка.Физлицо;
			Строка.Сумма		= Выборка.ОсновнойДолг;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				Строка.СуммаНУ	= Строка.Сумма;	
			КонецЕсли;
			Если мИП_ОСН Тогда
				Строка.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноДругое;
			КонецЕсли;
			ЗаполнитьПодразделениеДтКт(Строка, Строка.СчетДт, Строка.СчетКт, ПолучитьПодразделениеФизлица(Выборка.Физлицо, ПараметрыПолученияПодразделенияФизлица), ПустойСчет);
		КонецЕсли;
		
		Если Выборка.ПроцентыУдержано <> 0 Тогда
			Строка = ОтражениеВУчете.Добавить();
			Строка.СчетДт 		= СчетДебета;
			Строка.СубконтоДт1 	= Выборка.Физлицо;
			Строка.СчетКт 		= СчетКредита;
			Строка.СубконтоКт1 	= Выборка.Физлицо;
			Строка.Сумма		= Выборка.ПроцентыУдержано;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				Строка.СуммаНУ	= Строка.Сумма;	
			КонецЕсли;
			Если мИП_ОСН Тогда
				Строка.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноДругое;
			КонецЕсли;
			ЗаполнитьПодразделениеДтКт(Строка, Строка.СчетДт, Строка.СчетКт, ПолучитьПодразделениеФизлица(Выборка.Физлицо, ПараметрыПолученияПодразделенияФизлица), ПустойСчет);
		КонецЕсли;
		
		Если Выборка.ПроцентыНачислено <> 0 Тогда
			Строка = ОтражениеВУчете.Добавить();
			Строка.СчетДт 		= СчетКредита;
			Строка.СубконтоДт1 	= Выборка.Физлицо;
			Строка.СчетКт 		= Выборка.ДоговорЗаймаСчетУчетаПроцентовПоЗайму;
			Строка.СубконтоКт1 	= Выборка.ДоговорЗаймаСубконто1;
			Строка.СубконтоКт2 	= Выборка.ДоговорЗаймаСубконто2;
			Строка.СубконтоКт3 	= Выборка.ДоговорЗаймаСубконто3;
			Строка.Сумма		= Выборка.ПроцентыНачислено;
			Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
				Строка.СуммаНУ	= Строка.Сумма;	
			КонецЕсли;
			Если мИП_ОСН Тогда
				Строка.ВидНачисленияУдержания = Перечисления.ИПВидыНачисленийУдержаний.УдержаноДругое;
			КонецЕсли;
			ЗаполнитьПодразделениеДтКт(Строка, Строка.СчетДт, Строка.СчетКт, ПолучитьПодразделениеФизлица(Выборка.Физлицо, ПараметрыПолученияПодразделенияФизлица), ПустойСчет);
		КонецЕсли;
		
	КонецЦикла;
	
	//
	// отражение погашения займов
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	// удалим временные наборы записей
	Для Каждого Набор Из Движения Цикл
		Если ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.БУОсновныеНачисления") 
			или ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.БУДополнительныеНачисления") Тогда
			Набор.Очистить();
			Набор.Записать();
		КонецЕсли;
	КонецЦикла;
	/////Вадим 18.10.2012 11:49:06
    ПРГ_проверитьЗаполнениеСубконт();
 
 	////ВадимКонец
КонецПроцедуры  // АвтозаполнениеПроводок

// Получает значение субконто в том случае, если заданы правила его переопределения
//
// Параметры
//  Субконто - начальное значение субконто
//  ПараметрыПолученияСубконто - соответсвие, 
//                              ключ соответсвия - тип, 
//                              значение - параметры, которые помогают преобразовывать 
//                              субконто соотв. типа из одного значения в другое
//
// Возвращаемое значение:
//   Субконто
// Если для субконто некоторого типа не задаы параметры преобразования, то его 
// значение не изменяется
//
Функция ПолучитьСубконто(Субконто, ПараметрыПолученияСубконто)
	Параметры = ПараметрыПолученияСубконто[ТипЗнч(Субконто)];
	Если Параметры = НеОпределено Тогда
		// для субконто этого типа не заданы парамтры переопределения
		Возврат Субконто;
	КонецЕсли;
	// для статьи затрат
	Если ТипЗнч(Субконто) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		ВидСтатьиЗатрат = Параметры.ВидСтатьиЗатрат;
		ДополнительныеСтатьиЗатрат = Параметры.ДополнительныеСтатьиЗатрат;
		КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Субконто);
		Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
		Если Строки.Количество() = 0 Тогда
			КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Справочники.СтатьиЗатрат.ПустаяСсылка());
			Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
			Если Строки.Количество() = 0 Тогда
				Возврат Субконто;
			Иначе
				Возврат Строки[0].СтатьяЗатрат;
			КонецЕсли;
		Иначе
			Возврат Строки[0].СтатьяЗатрат;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Субконто) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
		ВидСтатьиЗатрат = Параметры.ВидСтатьиЗатрат;
		ДополнительныеСтатьиЗатрат = Параметры.ДополнительныеСтатьиЗатрат;
		КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Субконто);
		Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
		Если Строки.Количество() = 0 Тогда
			КлючПоиска = Новый Структура("ВидСтатьиЗатрат, СтатьяЗатратНачисления", ВидСтатьиЗатрат, Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());
			Строки = ДополнительныеСтатьиЗатрат.НайтиСтроки(КлючПоиска);
			Если Строки.Количество() = 0 Тогда
				Возврат Субконто;
			Иначе
				Возврат Строки[0].СтатьяЗатрат;
			КонецЕсли;
		Иначе
			Возврат Строки[0].СтатьяЗатрат;
		КонецЕсли;	
		
		// для получения субконто другого типа - дописываем ИначеЕсли...
	Иначе
		Возврат Субконто;
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция получает список начислений и последовательность обработки
// при получении данных
//
// Возвращаемое значение:
//  ТаблицаЗначений
//
Функция ПолучитьТаблицуНачислений()
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""Основные"" КАК ВидНачисления,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисления.ВидРасчета.КатегорияРасчета = ЗНАЧЕНИЕ(Справочник.КатегорииРасчетов.Первичное)
	|			ТОГДА ""00000""
	|		КОГДА &ПособияОбрабатыватьКакПервичные и ОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования <> ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|			ТОГДА ""00000""
	|		КОГДА ОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность)
	|			ТОГДА ОсновныеНачисления.ВидРасчета.КатегорияРасчета.Код
	|		КОГДА ОсновныеНачисления.ВидРасчета.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
	|			ТОГДА ""00000""
	|		ИНАЧЕ ОсновныеНачисления.ВидРасчета.КатегорияРасчета.Код
	|	КОНЕЦ КАК ПорядокРасчета,
	|	ОсновныеНачисления.ВидРасчета
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОсновныеНачисления.ВидРасчета КАК ВидРасчета
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|	ГДЕ
	|		ОсновныеНачисления.ПериодРегистрации = &ПериодРегистрации
	|		И ОсновныеНачисления.ОбособленноеПодразделение = &Организация) КАК ОсновныеНачисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Дополнительные"",
	|	ВЫБОР
	|		КОГДА ДополнительныеНачисления.ВидРасчета.КатегорияРасчета = ЗНАЧЕНИЕ(Справочник.КатегорииРасчетов.Первичное)
	|				ИЛИ ДополнительныеНачисления.ВидРасчета.СтратегияОтраженияВУчете <> ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВРеглУчетеНачислений.КакБазовыеНачисления)
	|			ТОГДА ""00000""
	|		ИНАЧЕ ДополнительныеНачисления.ВидРасчета.КатегорияРасчета.Код
	|	КОНЕЦ,
	|	ДополнительныеНачисления.ВидРасчета
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДополнительныеНачисления.ВидРасчета КАК ВидРасчета
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|	ГДЕ
	|		НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &ПериодРегистрации
	|		И ДополнительныеНачисления.ОбособленноеПодразделение = &Организация) КАК ДополнительныеНачисления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокРасчета";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Организация); 
	Запрос.УстановитьПараметр("ПособияОбрабатыватьКакПервичные", ПериодРегистрации >= ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования());
	
	ТаблицаНачислений = Запрос.Выполнить().Выгрузить();	
	
	Возврат ТаблицаНачислений;
	
КонецФункции // ПолучитьТаблицуНачислений()

// Выделяет коэффициенты отражения из массива переданных строк отражения
//
// Параметры
//  МассивСтрокОтражения - массив строк таблицы значений
//  ИмяКолонки - строка - имя колонки таблицы значений, содержащей 
//                 коэффициенты отражения
//
// Возвращаемое значение:
//   массив чисел - коэффициентов отражения
//
Функция ВыделитьКоэффициентыОтраженияИзМассиваСтрок(МассивСтрокОтражения,ИмяКолонки)
	
	Коэффициенты = Новый Массив;
	
	Для каждого СтрокаОтражения Из МассивСтрокОтражения Цикл
		Коэффициенты.Добавить(СтрокаОтражения[ИмяКолонки]);
	КонецЦикла; 
	
	Возврат Коэффициенты
	
КонецФункции // ВыделитьКоэффициентыОтраженияИзМассиваСтрок()

// получение  данных для бухучета
// Параметры:
//  СписокНачислений - список начислений, которые необходимо обработать
//  ЭтоОсновныеНачисления - булево, если Истина, то получаем данные по основным начислениям иначе - по доп.
//
// Возвращаемое значение:
//  Результат запроса
// 
Функция ПолучитьДанныеУчета(СписокНачислений, ЭтоОсновныеНачисления, ЭтоПервичныеНачисления)
	
	Если ПериодРегистрации >= ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов() Тогда
		Возврат ПолучитьДанныеУчета2011(СписокНачислений, ЭтоОсновныеНачисления, ЭтоПервичныеНачисления);
	ИначеЕсли ПериодРегистрации >= ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Тогда
		Возврат ПолучитьДанныеУчета2010(СписокНачислений, ЭтоОсновныеНачисления, ЭтоПервичныеНачисления);
	Иначе	
		Возврат ПолучитьДанныеУчета2009(СписокНачислений, ЭтоОсновныеНачисления, ЭтоПервичныеНачисления);
	КонецЕсли;
	
КонецФункции

// Процедура регистрирует в таблице мТаблицаОшибок ошибку обработки данных учета, для
// последующего формирования сообщений пользователю о строке табличной части в 
// которой есть ошибка, причине возникновения ошибки и что делать для устранения ошибки
//
Процедура ЗарегистрироватьОшибкуОбработкиДанныхУчета(ДанныеУчета, ЭтоОсновныеНачисления, СтруктураПоискаОшибок, КодОшибки)
	
	//ошибку регистрируем, если для этого начисления еще не зарегистрирована ошибка
	СтруктураПоискаОшибок.Регистратор = ДанныеУчета.Регистратор;
	СтруктураПоискаОшибок.НомерСтроки = ДанныеУчета.НомерСтроки;
	СтруктураПоискаОшибок.КодОшибки   = КодОшибки;
	
	Если мТаблицаОшибок.НайтиСтроки(СтруктураПоискаОшибок).Количество() = 0 Тогда
		
		СтрокаТаблицыОшибок = мТаблицаОшибок.Добавить();
		СтрокаТаблицыОшибок.Сотрудник  = ДанныеУчета.Сотрудник;
		СтрокаТаблицыОшибок.ВидРасчета = ДанныеУчета.ВидРасчета;
		Если ЭтоОсновныеНачисления Тогда
			СтрокаТаблицыОшибок.ПериодДействияНачало = ДанныеУчета.ПериодДействияНачало;
			СтрокаТаблицыОшибок.ПериодДействияКонец  = ДанныеУчета.ПериодДействияКонец;
		КонецЕсли;
		СтрокаТаблицыОшибок.Сторно 		= ДанныеУчета.Сторно;
		СтрокаТаблицыОшибок.КодОшибки 	= КодОшибки;
		СтрокаТаблицыОшибок.Регистратор = ДанныеУчета.Регистратор;
		СтрокаТаблицыОшибок.НомерСтроки = ДанныеУчета.НомерСтроки;
		
	КонецЕсли;
	
КонецПроцедуры // ЗарегистрироватьОшибкуОбработкиДанныхУчета()

// Процедура формирует набор записей по данным из запроса
//
// Параметры:
//	РезультатДанныеУчета		- выборка по резултату запроса, возвращенная функцией 
//								  ПолучитьДанныеУчета
//	Успешно						- в этот параметр возвращается значение Ложь, если обработка не выполнена
//								  (например, если не оказалось базовых данных)
//	НаборЗаписей - набор записей
//
//	ПараметрыПолученияСубконто - структура, в которой хранится соответствие статей затрат начислений и 
//								 статей отражения в учете б/л, для отражения доли б/з за счет работодателя
//
// Возвращаемое значение:
//	массив категорий начислений
//
//
// Возвращаемое значение:
//  массив категорий начислений
//
Процедура ОбработатьДанныеУчета(РезультатДанныеУчета, Успешно, НаборЗаписей, ПараметрыПолученияСубконто = НеОпределено)
	
	Если ПериодРегистрации < Дата(2011,1,1) Тогда
		ОбработатьДанныеУчетаДо2011(РезультатДанныеУчета, Успешно, НаборЗаписей, ПараметрыПолученияСубконто);
	Иначе
		ОбработатьДанныеУчета2011(РезультатДанныеУчета, Успешно, НаборЗаписей, ПараметрыПолученияСубконто);
	КонецЕсли;
	
КонецПроцедуры	

// создает строку промежуточной таблицы, которая впоследствии будет выгружена в табличную часть
// Параметры:
//	ДанныеУчета - спозиционированная выборка по результату запроса
//
Функция СоздатьСтрокуПромежуточнойТаблицы(ДанныеУчета, ПромежуточнаяТаблица, ПустойСчет, ПодразделениеФизлица = Неопределено)
	
	СтрокаДанных = ПромежуточнаяТаблица.Добавить();
	СтрокаДанных.СчетДт			= ДанныеУчета.СчетДт;
	СтрокаДанных.СчетКт			= ДанныеУчета.СчетКт;
	СтрокаДанных.СубконтоДт1	= ДанныеУчета.СубконтоДт1;
	СтрокаДанных.СубконтоДт2	= ДанныеУчета.СубконтоДт2;
	СтрокаДанных.СубконтоДт3	= ДанныеУчета.СубконтоДт3;
	СтрокаДанных.СубконтоКт1	= ДанныеУчета.СубконтоКт1;
	СтрокаДанных.СубконтоКт2	= ДанныеУчета.СубконтоКт2;
	СтрокаДанных.СубконтоКт3	= ДанныеУчета.СубконтоКт3;
	СтрокаДанных.Сумма			= ДанныеУчета.Результат;
	
	Если мЗаполнятьДанныеНУ Тогда
		Если мЗаполнятьСчетаНУ Тогда
			СтрокаДанных.СчетДтНУ		= ДанныеУчета.СчетДтНУ;
			СтрокаДанных.СчетКтНУ		= ДанныеУчета.СчетКтНУ;
			СтрокаДанных.СубконтоДтНУ1	= ДанныеУчета.СубконтоДтНУ1;
			СтрокаДанных.СубконтоДтНУ2	= ДанныеУчета.СубконтоДтНУ2;
			СтрокаДанных.СубконтоДтНУ3	= ДанныеУчета.СубконтоДтНУ3;
			СтрокаДанных.СубконтоКтНУ1	= ДанныеУчета.СубконтоКтНУ1;
			СтрокаДанных.СубконтоКтНУ2	= ДанныеУчета.СубконтоКтНУ2;
			СтрокаДанных.СубконтоКтНУ3	= ДанныеУчета.СубконтоКтНУ3;
		Иначе
			СтрокаДанных.СуммаНУ = СтрокаДанных.Сумма;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаДанных.ОтражениеВУСН		= ДанныеУчета.ОтражениеВУСН;	
	СтрокаДанных.СпособРаспределенияЗатрат = ДанныеУчета.СпособРаспределенияЗатрат;
	
	// выполним автозаполнение субконто если это предусмотрено способом отражения в бухучете
	Если ДанныеУчета.СчетДт <> ПустойСчет Тогда
		Если ДанныеУчета.НомерСубконтоРаботникиДт <> 0 
			И НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоДт" + ДанныеУчета.НомерСубконтоРаботникиДт]) Тогда
			СтрокаДанных["СубконтоДт" + ДанныеУчета.НомерСубконтоРаботникиДт] = ДанныеУчета.Физлицо;
		КонецЕсли;
	КонецЕсли;
	Если ДанныеУчета.СчетКт <> ПустойСчет Тогда
		Если ДанныеУчета.НомерСубконтоРаботникиКт <> 0 
			И НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоКт" + ДанныеУчета.НомерСубконтоРаботникиКт]) Тогда
			СтрокаДанных["СубконтоКт" + ДанныеУчета.НомерСубконтоРаботникиКт] = ДанныеУчета.Физлицо;
		КонецЕсли;
		Если ДанныеУчета.НомерСубконтоКонтрагентыКт <> 0 
			И НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоКт" + ДанныеУчета.НомерСубконтоКонтрагентыКт]) Тогда
			СтрокаДанных["СубконтоКт" + ДанныеУчета.НомерСубконтоКонтрагентыКт] = ДанныеУчета.Контрагент;
		КонецЕсли;
		Если ДанныеУчета.НомерСубконтоИсполнДокументыКт <> 0 
			И НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоКт" + ДанныеУчета.НомерСубконтоИсполнДокументыКт]) Тогда
			СтрокаДанных["СубконтоКт" + ДанныеУчета.НомерСубконтоИсполнДокументыКт] = ДанныеУчета.ИсполнительныйДокумент;
		КонецЕсли;
		Если ДанныеУчета.НомерСубконтоПодразделениеКт <> 0 
			И НЕ ЗначениеЗаполнено(ДанныеУчета["СубконтоКт" + ДанныеУчета.НомерСубконтоПодразделениеКт]) и ПодразделениеФизлица <> Неопределено Тогда
			СтрокаДанных["СубконтоКт" + ДанныеУчета.НомерСубконтоПодразделениеКт] = ПодразделениеФизлица;
		КонецЕсли;
	КонецЕсли;
		////Вадим
	Если Найти( "Удержание по исп. листу фикс. суммой,Удержание по исп. листу процентом,Почтовый сбор по исп. листам,Удержание по исп. листу процентом до предела",ДанныеУчета.ВидРасчета) > 0 Тогда
		контрагент=ПРГ_Обработки.получитьзначениесвойстобъекта(ДанныеУчета.ФизЛицо,ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Контрагент"));
		Если (СтрокаДанных.СчетКт=ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчиками или СтрокаДанных.СчетКт=ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчиками)
			и не контрагент=Неопределено тогда
			СтрокаДанных.СубконтоКт1=контрагент;
			СтрокаДанных.СубконтоКт2=контрагент.ОсновнойДоговорКонтрагента;
		КонецЕсли;	
	КонецЕсли;
	////ВадимКонец
	Возврат СтрокаДанных;
	
КонецФункции // СоздатьСтрокуПромежуточнойТаблицы

// Добавляет в таблицу значений строку из другой таблицы
//
// Параметры
//  ТаблицаКомментирования  - ТаблицаЗначений (для комментирования) в ней собирается информация, которую необхолдимо 
//                 				прокомментровать
//  СтрокаТаблицы  			- Строка ТаблицыЗначений, котрую необходимо прокомментировать
//  СНачалаГода  			- Булево, указывает на то, что строка всетаки распределилась, но по базе с
//					 			начала года (Истина), вообще не нашли базы (Ложь)
//
Процедура ДобавитьСтрокуДляКомментирования(СтрокаТаблицы, Режим)

	НоваяСтрока = мТаблицаКомментированияСтраховыеВзносы.Добавить();
	
	НоваяСтрока.Физлицо = СтрокаТаблицы.Физлицо;
	НоваяСтрока.Режим = Режим;
	
	ЕНВД = Найти(СтрокаТаблицы.ВидБазы, "ЕНВД") > 0;
	
	Если СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ФСС Тогда
		
		Если ЕНВД Тогда
		
			НоваяСтрока.ВзносыФСС_ЕНВД = СтрокаТаблицы.СуммаВзноса;
	
		Иначе
		
			НоваяСтрока.ВзносыФСС = СтрокаТаблицы.СуммаВзноса;
		
		КонецЕсли; 
	
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ФФОМС Тогда
		
		Если ЕНВД Тогда
		
			НоваяСтрока.ВзносыФФОМС_ЕНВД = СтрокаТаблицы.СуммаВзноса;
	
		Иначе
		
			НоваяСтрока.ВзносыФФОМС = СтрокаТаблицы.СуммаВзноса;
	
		КонецЕсли; 
	
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ТФОМС Тогда
		
		Если ЕНВД Тогда
		
			НоваяСтрока.ВзносыТФОМС_ЕНВД = СтрокаТаблицы.СуммаВзноса;
	
		Иначе
		
			НоваяСтрока.ВзносыТФОМС = СтрокаТаблицы.СуммаВзноса;
	
		КонецЕсли;
	
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_нак Тогда
		
		Если ЕНВД Тогда
		
			НоваяСтрока.ВзносыПФРНакопительная_ЕНВД = СтрокаТаблицы.СуммаВзноса;
	
		Иначе
		
			НоваяСтрока.ВзносыПФРНакопительная = СтрокаТаблицы.СуммаВзноса;
	
		КонецЕсли; 
	
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_страх Тогда
		
		Если ЕНВД Тогда
		
			НоваяСтрока.ВзносыПФРСтраховая_ЕНВД = СтрокаТаблицы.СуммаВзноса;
	
		Иначе
		
			НоваяСтрока.ВзносыПФРСтраховая = СтрокаТаблицы.СуммаВзноса;
	
		КонецЕсли; 
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_ОПС Тогда
		
		Если ЕНВД Тогда
		
			НоваяСтрока.ВзносыПФРПоСуммарномуТарифу_ЕНВД = СтрокаТаблицы.СуммаВзноса;
	
		Иначе
		
			НоваяСтрока.ВзносыПФРПоСуммарномуТарифу = СтрокаТаблицы.СуммаВзноса;
	
		КонецЕсли; 
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп Тогда
	
		НоваяСтрока.ВзносыДопТариф = СтрокаТаблицы.СуммаВзноса;
	
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_шахтеры Тогда
	
		НоваяСтрока.ВзносыДопТарифШахтеры = СтрокаТаблицы.СуммаВзноса;
		
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда Тогда
	
		НоваяСтрока.ВзносыДопТарифТяжелыеИПрочиеРаботы = СтрокаТаблицы.СуммаВзноса;
		
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда Тогда
	
		НоваяСтрока.ВзносыДопТарифПодземныеИВредныеРаботы = СтрокаТаблицы.СуммаВзноса;	
	
	ИначеЕсли СтрокаТаблицы.СчетКт = ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ Тогда
	
		НоваяСтрока.ВзносыФСС_НС = СтрокаТаблицы.СуммаВзноса;
	
	КонецЕсли; 

КонецПроцедуры // ДобавитьСтрокуДляКомментирования()

// Удаляет из таблицы пустые строки
//
// Параметры
//  ТаблицаКомментирования  - ТаблицаЗначений (для комментирования) из которой необходимо удалить строки с нулевыми
//								 значениями поазателей
//
Процедура УдалитьПустыеСтрокиИзТаблицаКомментирования(ТаблицаКомментирования)

	МассивУдаляемыхСтрок = Новый Массив;
	
	Для каждого СтрокаТаблицыКомеентирования Из ТаблицаКомментирования Цикл
		
		
		СуммаПоСтроке = 0;
		
		Для каждого Колонка Из ТаблицаКомментирования.Колонки Цикл
			
			ЗначениеКолонки = СтрокаТаблицыКомеентирования[Колонка.Имя];
			
			Если ТипЗнч(ЗначениеКолонки) = Тип("Число") Тогда
			
				СуммаПоСтроке = СуммаПоСтроке + ЗначениеКолонки;
			
			КонецЕсли; 
		
		КонецЦикла; 
		
		Если СуммаПоСтроке = 0 Тогда
		
			МассивУдаляемыхСтрок.Добавить(СтрокаТаблицыКомеентирования);
		
		КонецЕсли; 
	
	КонецЦикла; 
	
	Для каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
	
		ТаблицаКомментирования.Удалить(УдаляемаяСтрока);
	
	КонецЦикла; 


КонецПроцедуры // УдалитьПустыеСтрокиИзТаблицаКомментирования()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция СформироватьЗапросПоДоходам()
	
	// готовим список счетов
	СчетаИсключения = Новый Массив();
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы);
	
	ТекстСчетаИсключения = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)";
	
	Запрос = Новый Запрос(ТекстСчетаИсключения);
	Запрос.УстановитьПараметр("СчетаИсключения", СчетаИсключения);
	СчетаИсключения = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("парамРегистратор",		Ссылка);
	Запрос.УстановитьПараметр("СчетаИсключения",		СчетаИсключения);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("НачалоМесяца",		ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецМесяца",		КонецМесяца(ПериодРегистрации));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиСрез.Сотрудник КАК Сотрудник,
	|	Работники.ГрафикРаботы КАК ГрафикРаботы,
	|	Работники.ГрафикРаботыЗавершения КАК ГрафикРаботыЗавершения,
	|	Работники.ПериодЗавершения КАК ПериодЗавершения
	|ПОМЕСТИТЬ ВТ_РаботникиСрез
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Работники.Период) КАК ПериодСреза,
	|		Основные.Сотрудник КАК Сотрудник
	|	ИЗ
	|		Документ.ОтражениеЗарплатыВРеглУчете.ОсновныеНачисления КАК Основные
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|			ПО (Работники.Период <= Основные.ПериодДействияНачало)
	|				И Основные.Сотрудник = Работники.Сотрудник
	|	ГДЕ
	|		Основные.Ссылка = &парамРегистратор
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Основные.Сотрудник) КАК РаботникиСрез
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ПО РаботникиСрез.ПериодСреза = Работники.Период
	|			И РаботникиСрез.Сотрудник = Работники.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Основные начисления"" КАК ТипСтроки,
	|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Основные.НомерСтроки КАК НомерСтроки,
	|	Основные.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	Основные.ВидРасчета.ВидВремени КАК ВидВремени,
	|	Основные.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
	|	Основные.ВидРасчета,
	|	ВЫБОР
	|		КОГДА Основные.СчетДт В (&СчетаИсключения)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтражаетсяНУ,
	|	Основные.Сотрудник,
	|	Основные.Сотрудник.Физлицо КАК Физлицо,
	|	Основные.СчетДт,
	|	ВЫБОР
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.ПодлежитРаспределению
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СчетДтОтноситсяКДеятельностиЕНВД,
	|	Основные.СчетДт.Наименование КАК НаименованиеСчетДт,
	|	Основные.СчетКт,
	|	Основные.СубконтоДт1,
	|	Основные.СубконтоДт2,
	|	Основные.СубконтоДт3,
	|	Основные.СпособРаспределенияЗатрат,
	|	Основные.СубконтоКт1,
	|	Основные.СубконтоКт2,
	|	Основные.СубконтоКт3,
	|	Основные.СчетДтНУ,
	|	Основные.СчетКтНУ,
	|	Основные.СубконтоДтНУ1,
	|	Основные.СубконтоДтНУ2,
	|	Основные.СубконтоДтНУ3,
	|	Основные.СубконтоКтНУ1,
	|	Основные.СубконтоКтНУ2,
	|	Основные.СубконтоКтНУ3,
	|	Основные.ОтражениеВУСН,
	|	Основные.Результат,
	|	Основные.ПериодДействияНачало,
	|	Основные.ПериодДействияКонец,
	|	ВЫБОР
	|		КОГДА РаботникиСрез.ПериодЗавершения <= Основные.ПериодДействияНачало
	|				И РаботникиСрез.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА РаботникиСрез.ГрафикРаботыЗавершения
	|		ИНАЧЕ РаботникиСрез.ГрафикРаботы
	|	КОНЕЦ КАК ГрафикРаботы,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РаботникиСрез.ПериодЗавершения <= Основные.ПериодДействияНачало
	|					И РаботникиСрез.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА РаботникиСрез.ГрафикРаботыЗавершения.СуммированныйУчетРабочегоВремени
	|			ИНАЧЕ РаботникиСрез.ГрафикРаботы.СуммированныйУчетРабочегоВремени
	|		КОНЕЦ, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
	|	ВЫБОР
	|		КОГДА Основные.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	Основные.Сторно,
	|	Основные.ДокументОснование,
	|	ВЫБОР
	|		КОГДА Основные.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЗаполненВидРасчета,
	|	ВЫБОР
	|		КОГДА Основные.Сотрудник = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЗаполненСотрудник,
	|	ВЫБОР
	|		КОГДА Основные.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЗаполненСчетДт,
	|	ВЫБОР
	|		КОГДА Основные.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЗаполненСчетКт,
	|	ВЫБОР
	|		КОГДА Основные.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЗаполненСчетДтНУ,
	|	ВЫБОР
	|		КОГДА Основные.СчетКтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеЗаполненСчетКтНУ,
	|	Основные.ПодразделениеДт,
	|	Основные.ПодразделениеКт,
	|	Основные.СуммаНУ,
	|	Основные.СуммаПР,
	|	Основные.СуммаВР,
	|	Основные.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	NULL КАК ДатаНачисления
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОсновныеНачисления КАК Основные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
	|		ПО Основные.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РаботникиСрез КАК РаботникиСрез
	|		ПО Основные.Сотрудник = РаботникиСрез.Сотрудник
	|ГДЕ
	|	Основные.Ссылка = &парамРегистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Дополнительные начисления"",
	|	&ГоловнаяОрганизация,
	|	Дополнительные.НомерСтроки,
	|	Дополнительные.ВидРасчета.СпособРасчета,
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	Дополнительные.ВидРасчета,
	|	ВЫБОР
	|		КОГДА Дополнительные.ВидРасчета.ВидНачисленияПоСт255НК <> ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Дополнительные.Сотрудник,
	|	Дополнительные.Сотрудник.Физлицо,
	|	Дополнительные.СчетДт,
	|	ВЫБОР
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Дополнительные.СчетДт.Наименование,
	|	Дополнительные.СчетКт,
	|	Дополнительные.СубконтоДт1,
	|	Дополнительные.СубконтоДт2,
	|	Дополнительные.СубконтоДт3,
	|	Дополнительные.СпособРаспределенияЗатрат,
	|	Дополнительные.СубконтоКт1,
	|	Дополнительные.СубконтоКт2,
	|	Дополнительные.СубконтоКт3,
	|	Дополнительные.СчетДтНУ,
	|	Дополнительные.СчетКтНУ,
	|	Дополнительные.СубконтоДтНУ1,
	|	Дополнительные.СубконтоДтНУ2,
	|	Дополнительные.СубконтоДтНУ3,
	|	Дополнительные.СубконтоКтНУ1,
	|	Дополнительные.СубконтоКтНУ2,
	|	Дополнительные.СубконтоКтНУ3,
	|	Дополнительные.ОтражениеВУСН,
	|	Дополнительные.Результат,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА Дополнительные.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Дополнительные.Сторно,
	|	Дополнительные.ДокументОснование,
	|	ВЫБОР
	|		КОГДА Дополнительные.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Дополнительные.Сотрудник = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Дополнительные.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Дополнительные.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Дополнительные.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Дополнительные.СчетКтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Дополнительные.ПодразделениеДт,
	|	Дополнительные.ПодразделениеКт,
	|	Дополнительные.СуммаНУ,
	|	Дополнительные.СуммаПР,
	|	Дополнительные.СуммаВР,
	|	Дополнительные.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	ВЫБОР
	|		КОГДА Дополнительные.ДатаНачисления МЕЖДУ &НачалоМесяца И &КонецМесяца
	|			ТОГДА Дополнительные.ДатаНачисления
	|		ИНАЧЕ &НачалоМесяца
	|	КОНЕЦ
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ДополнительныеНачисления КАК Дополнительные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
	|		ПО Дополнительные.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
	|ГДЕ
	|	Дополнительные.Ссылка = &парамРегистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипСтроки УБЫВ,
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросПоОтражениюВУчете()
	
	Запрос = Новый Запрос();
	
	Если мУСН Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт,
		|	ВЫБОР
		|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		КОГДА СчетаУчетаПоДеятельностиЕНВД.ПодлежитРаспределению
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК СчетДтОтноситсяКДеятельностиЕНВД,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт.Наименование КАК НаименованиеСчетДт,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ДтВидСубконто1.ВидСубконто КАК ДтВидСубконто1,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ДтВидСубконто2.ВидСубконто КАК ДтВидСубконто2,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		|	ДтВидСубконто3.ВидСубконто КАК ДтВидСубконто3,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1.ХарактерЗатрат
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2.ХарактерЗатрат
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3.ХарактерЗатрат
		|	КОНЕЦ КАК ХарактерЗатрат,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат = ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат
		|	КОНЕЦ КАК СпособРаспределенияЗатрат,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	КтВидСубконто1.ВидСубконто КАК КтВидСубконто1,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	КтВидСубконто2.ВидСубконто КАК КтВидСубконто2,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		|	КтВидСубконто3.ВидСубконто КАК КтВидСубконто3,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_страх)
		|			ТОГДА ""Взносы в ПФР на страховую часть пенсии""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_нак)
		|			ТОГДА ""Взносы в ПФР на накопительную часть пенсии""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
		|			ТОГДА ""Взносы в ФСС РФ (НС и ПЗ)""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТФОМС)
		|			ТОГДА ""ЕСН в части ТФОМС""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФФОМС)
		|			ТОГДА ""ЕСН в части ФФОМС""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
		|			ТОГДА ""Взносы по социальному страхованию (ЕСН в части, перечисляемой в ФСС)""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЕСН_ФБ)
		|			ТОГДА ""ЕСН в части, зачисляемой в Федеральный бюджет""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК СодержаниеПроводки,
		|	ВЫБОР
		|		КОГДА ДтВидСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОГДА ДтВидСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НЕЗаполненоСубконтоДт1,
		|	ВЫБОР
		|		КОГДА ДтВидСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОГДА ДтВидСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НЕЗаполненоСубконтоДт2,
		|	ВЫБОР
		|		КОГДА ДтВидСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОГДА ДтВидСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НЕЗаполненоСубконтоДт3,
		|	ЛОЖЬ КАК НЕЗаполненоСубконтоДтНУ1,
		|	ЛОЖЬ КАК НЕЗаполненоСубконтоДтНУ2,
		|	ЛОЖЬ КАК НЕЗаполненоСубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеЗаполненСчетДт,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеЗаполненСчетКт
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки КАК НомерСтроки,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт КАК СчетДт,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт КАК СчетКт,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1 КАК СубконтоКт1,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2 КАК СубконтоКт2,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3 КАК СубконтоКт3,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН КАК ОтражениеВУСН,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма КАК Сумма
		|	ИЗ
		|		Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
		|	ГДЕ
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка = &парамРегистратор
		|		И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма <> 0) КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
		|		ПО ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконто1
		|		ПО (ДтВидСубконто1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
		|			И (ДтВидСубконто1.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконто2
		|		ПО (ДтВидСубконто2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
		|			И (ДтВидСубконто2.НомерСтроки = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконто3
		|		ПО (ДтВидСубконто3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
		|			И (ДтВидСубконто3.НомерСтроки = 3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК КтВидСубконто1
		|		ПО (КтВидСубконто1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
		|			И (КтВидСубконто1.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК КтВидСубконто2
		|		ПО (КтВидСубконто2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
		|			И (КтВидСубконто2.НомерСтроки = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК КтВидСубконто3
		|		ПО (КтВидСубконто3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
		|			И (КтВидСубконто3.НомерСтроки = 3)";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт,
		|	ВЫБОР
		|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		КОГДА СчетаУчетаПоДеятельностиЕНВД.ПодлежитРаспределению
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК СчетДтОтноситсяКДеятельностиЕНВД,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт.Наименование КАК НаименованиеСчетДт,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1
		|	КОНЕЦ КАК СубконтоДт1,
		|	ДтВидСубконто1.ВидСубконто КАК ДтВидСубконто1,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2
		|	КОНЕЦ КАК СубконтоДт2,
		|	ДтВидСубконто2.ВидСубконто КАК ДтВидСубконто2,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3
		|	КОНЕЦ КАК СубконтоДт3,
		|	ДтВидСубконто3.ВидСубконто КАК ДтВидСубконто3,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 ССЫЛКА Справочник.ПодразделенияОрганизаций
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 ССЫЛКА Справочник.ПодразделенияОрганизаций
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 ССЫЛКА Справочник.ПодразделенияОрганизаций
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 ССЫЛКА Справочник.НоменклатурныеГруппы
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1.ХарактерЗатрат
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2.ХарактерЗатрат
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3.ХарактерЗатрат
		|	КОНЕЦ КАК ХарактерЗатрат,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1.ХарактерЗатрат
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2.ХарактерЗатрат
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3.ХарактерЗатрат
		|	КОНЕЦ КАК ХарактерЗатратНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат = ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияЗатратНаВыпуск.ПустаяСсылка)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат
		|	КОНЕЦ КАК СпособРаспределенияЗатрат,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1
		|	КОНЕЦ КАК СубконтоКт1,
		|	КтВидСубконто1.ВидСубконто КАК КтВидСубконто1,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2
		|	КОНЕЦ КАК СубконтоКт2,
		|	КтВидСубконто2.ВидСубконто КАК КтВидСубконто2,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3
		|	КОНЕЦ КАК СубконтоКт3,
		|	КтВидСубконто3.ВидСубконто КАК КтВидСубконто3,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконтоНУ1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконтоНУ1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1
		|	КОНЕЦ КАК СубконтоДтНУ1,
		|	ДтВидСубконтоНУ1.ВидСубконто КАК ДтВидСубконтоНУ1,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконтоНУ2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконтоНУ2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2
		|	КОНЕЦ КАК СубконтоДтНУ2,
		|	ДтВидСубконтоНУ2.ВидСубконто КАК ДтВидСубконтоНУ2,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконтоНУ3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И ДтВидСубконтоНУ3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3
		|	КОНЕЦ КАК СубконтоДтНУ3,
		|	ДтВидСубконтоНУ3.ВидСубконто КАК ДтВидСубконтоНУ3,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконтоНУ1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконтоНУ1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ1
		|	КОНЕЦ КАК СубконтоКтНУ1,
		|	КтВидСубконтоНУ1.ВидСубконто КАК КтВидСубконтоНУ1,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконтоНУ2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконтоНУ2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ2
		|	КОНЕЦ КАК СубконтоКтНУ2,
		|	КтВидСубконтоНУ2.ВидСубконто КАК КтВидСубконтоНУ2,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконтоНУ3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ В (&парамСчетаРасчетовСПерсоналом)
		|				И КтВидСубконтоНУ3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаПоСт255НК.ПустаяСсылка)
		|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ3
		|	КОНЕЦ КАК СубконтоКтНУ3,
		|	КтВидСубконтоНУ3.ВидСубконто КАК КтВидСубконтоНУ3,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН,
		|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_страх)
		|			ТОГДА ""Взносы в ПФР на страховую часть пенсии""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_нак)
		|			ТОГДА ""Взносы в ПФР на накопительную часть пенсии""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
		|			ТОГДА ""Взносы в ФСС РФ (НС и ПЗ)""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТФОМС)
		|			ТОГДА ""ЕСН в части ТФОМС""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФФОМС)
		|			ТОГДА ""ЕСН в части ФФОМС""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
		|			ТОГДА ""Взносы по социальному страхованию (ЕСН в части, перечисляемой в ФСС)""
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЕСН_ФБ)
		|			ТОГДА ""ЕСН в части, зачисляемой в Федеральный бюджет""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК СодержаниеПроводки,
		|	ВЫБОР
		|		КОГДА ДтВидСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОГДА ДтВидСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НЕЗаполненоСубконтоДт1,
		|	ВЫБОР
		|		КОГДА ДтВидСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОГДА ДтВидСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НЕЗаполненоСубконтоДт2,
		|	ВЫБОР
		|		КОГДА ДтВидСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОГДА ДтВидСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НЕЗаполненоСубконтоДт3,
		|	ВЫБОР
		|		КОГДА ДтВидСубконтоНУ1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОГДА ДтВидСубконтоНУ1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НЕЗаполненоСубконтоДтНУ1,
		|	ВЫБОР
		|		КОГДА ДтВидСубконтоНУ2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОГДА ДтВидСубконтоНУ2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НЕЗаполненоСубконтоДтНУ2,
		|	ВЫБОР
		|		КОГДА ДтВидСубконтоНУ3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3 = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОГДА ДтВидСубконтоНУ3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НЕЗаполненоСубконтоДтНУ3,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеЗаполненСчетДт,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеЗаполненСчетКт,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеЗаполненСчетДтНУ,
		|	ВЫБОР
		|		КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеЗаполненСчетКтНУ
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки КАК НомерСтроки,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт КАК СчетДт,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт КАК СчетКт,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1 КАК СубконтоКт1,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2 КАК СубконтоКт2,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3 КАК СубконтоКт3,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ КАК СчетДтНУ,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ КАК СчетКтНУ,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ3 КАК СубконтоКтНУ3,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ОтражениеВУСН КАК ОтражениеВУСН,
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма КАК Сумма
		|	ИЗ
		|		Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
		|	ГДЕ
		|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка = &парамРегистратор
		|		И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма <> 0) КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
		|		ПО ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконто1
		|		ПО (ДтВидСубконто1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
		|			И (ДтВидСубконто1.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконто2
		|		ПО (ДтВидСубконто2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
		|			И (ДтВидСубконто2.НомерСтроки = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ДтВидСубконто3
		|		ПО (ДтВидСубконто3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
		|			И (ДтВидСубконто3.НомерСтроки = 3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК КтВидСубконто1
		|		ПО (КтВидСубконто1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
		|			И (КтВидСубконто1.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК КтВидСубконто2
		|		ПО (КтВидСубконто2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
		|			И (КтВидСубконто2.НомерСтроки = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК КтВидСубконто3
		|		ПО (КтВидСубконто3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
		|			И (КтВидСубконто3.НомерСтроки = 3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоКт255НКПроверка
		|		ПО (СубконтоКт255НКПроверка.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ)
		|			И (СубконтоКт255НКПроверка.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК СубконтоДт255НКПроверка
		|		ПО (СубконтоДт255НКПроверка.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
		|			И (СубконтоДт255НКПроверка.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ДтВидСубконтоНУ1
		|		ПО (ДтВидСубконтоНУ1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
		|			И (ДтВидСубконтоНУ1.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ДтВидСубконтоНУ2
		|		ПО (ДтВидСубконтоНУ2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
		|			И (ДтВидСубконтоНУ2.НомерСтроки = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ДтВидСубконтоНУ3
		|		ПО (ДтВидСубконтоНУ3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
		|			И (ДтВидСубконтоНУ3.НомерСтроки = 3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК КтВидСубконтоНУ1
		|		ПО (КтВидСубконтоНУ1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ)
		|			И (КтВидСубконтоНУ1.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК КтВидСубконтоНУ2
		|		ПО (КтВидСубконтоНУ2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ)
		|			И (КтВидСубконтоНУ2.НомерСтроки = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК КтВидСубконтоНУ3
		|		ПО (КтВидСубконтоНУ3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ)
		|			И (КтВидСубконтоНУ3.НомерСтроки = 3)";
		
	КонецЕсли;
	
	ВестиРеглУчетРасчетовСПерсоналомСводно = глЗначениеПеременной("ВестиРеглУчетРасчетовСПерсоналомСводно");
	МассивСчетовРасчетовСПерсоналом = Новый Массив;
	Если ВестиРеглУчетРасчетовСПерсоналомСводно Тогда
		//Подготовка массива счетов учета расчетов с персоналом
		МассивСчетовРасчетовСПерсоналом.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01"));
		МассивСчетовРасчетовСПерсоналом.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам);
		МассивСчетовРасчетовСПерсоналом.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов);
		МассивСчетовРасчетовСПерсоналом.Добавить(ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда);
		МассивСчетовРасчетовСПерсоналом.Добавить(ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	Запрос.УстановитьПараметр("парамСчетаРасчетовСПерсоналом", МассивСчетовРасчетовСПерсоналом);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение, не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(Отказ, Заголовок)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не задана организация!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не задан период за который выполняется отражение начислений в бухгалтерском учете!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ПроверитьЗаполнениеСтрокиОтраженияВУчете(ВыборкаПоДоходам, Отказ, ПроверятьСочетание, Заголовок = "")
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоДоходам.НомерСтроки) + """ табл. части ""Проводки"": ";
	
	Если ВыборкаПоДоходам.НЕЗаполненоСубконтоДт1 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не заполнено значение субконто 1 дебета """ + ВыборкаПоДоходам.ДтВидСубконто1 + """!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоДоходам.НЕЗаполненоСубконтоДт2 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не заполнено значение субконто 2 дебета """ + ВыборкаПоДоходам.ДтВидСубконто2 + """!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоДоходам.НЕЗаполненоСубконтоДт3 Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не заполнено значение субконто 3 дебета """ + ВыборкаПоДоходам.ДтВидСубконто3 + """!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ПроверятьСочетание Тогда
		
		Если ВыборкаПоДоходам.НЕЗаполненоСубконтоДтНУ1 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не заполнено значение субконто 1 дебета НУ """ + ВыборкаПоДоходам.ДтВидСубконтоНУ1 + """!", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВыборкаПоДоходам.НЕЗаполненоСубконтоДтНУ2 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не заполнено значение субконто 2 дебета НУ """ + ВыборкаПоДоходам.ДтВидСубконтоНУ2 + """!", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВыборкаПоДоходам.НЕЗаполненоСубконтоДтНУ3 Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не заполнено значение субконто 3 дебета НУ """ + ВыборкаПоДоходам.ДтВидСубконтоНУ3 + """!", Отказ, Заголовок);
		КонецЕсли;
		
	КонецЕсли;
	
	Сообщение = "";
	Если ПроверятьСочетание И Не КорректноеСочетаниеСчетов(ВыборкаПоДоходам,Сообщение) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + Сообщение, Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеСтрокиДохода(ВыборкаПоДоходам, Отказ, ПроверятьСочетание, Заголовок = "")
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоДоходам.НомерСтроки) +
	""" табл. части "+ВыборкаПоДоходам.ТипСтроки+": ";
	
	Если ВыборкаПоДоходам.НеЗаполненВидРасчета Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан вид расчета!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоДоходам.НеЗаполненСотрудник Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ мЗаполнятьСчетаНУ Тогда
		
		Если ВыборкаПоДоходам.НеЗаполненСчетДт Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан счет дебета!", Отказ, Заголовок);
			ПроверятьСочетание = Ложь;
		КонецЕсли;
		
		Если ВыборкаПоДоходам.НеЗаполненСчетКт Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан счет кредита!", Отказ, Заголовок);
			ПроверятьСочетание = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.ДокументОснование) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан документ основание!", Отказ, Заголовок);
	КонецЕсли;
	
	Сообщение = "";
	Если ПроверятьСочетание И ВыборкаПоДоходам.ОтражаетсяНУ И Не КорректноеСочетаниеСчетов(ВыборкаПоДоходам,Сообщение) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + Сообщение, Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоДоходам.ТипСтроки = "Основные начисления" Тогда
		
		Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.ПериодДействияНачало) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.ПериодДействияКонец) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания!", Отказ, Заголовок);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоДоходам.ПериодДействияКонец) и ЗначениеЗаполнено(ВыборкаПоДоходам.ПериодДействияНачало) Тогда
			Если ВыборкаПоДоходам.ПериодДействияКонец < ВыборкаПоДоходам.ПериодДействияНачало Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата окончания не должна быть меньше даты начала!", Отказ, Заголовок);
			ИначеЕсли НачалоМесяца(ВыборкаПоДоходам.ПериодДействияКонец) <> НачалоМесяца(ВыборкаПоДоходам.ПериодДействияНачало) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "даты начала и окончания должны принадлежать одному месяцу!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоДоходам.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "указанный сотрудник оформлен на другую организацию!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

// Добавляет движение в наборы записей БУОсновныеНачисления и БУДополнительныеНачисления
// Параметры:
//	ВыборкаПоДоходам - спозиционированнная выборка по данным документа
//	НаборЗаписейОсновные - набор записей типа БУОсновныеНачисления
//	НаборЗаписейДополнительные - набор записей типа БУДополнительныеНачисления
//
Процедура ДобавитьСтрокуВДвиженияПоДоходам(ВыборкаПоДоходам, НаборЗаписейОсновные, НаборЗаписейДополнительные)
	
	Если ВыборкаПоДоходам.ТипСтроки = "Основные начисления" Тогда
		// ОсновныеНачисленияРаботниковОрганизации
		Строка = НаборЗаписейОсновные.Добавить();
		
		// свойства
		Строка.ПериодДействияНачало = ВыборкаПоДоходам.ПериодДействияНачало;
		Строка.ПериодДействияКонец  = КонецДня(ВыборкаПоДоходам.ПериодДействияКонец);
		Строка.ПериодРегистрации	= ПериодРегистрации;
		
		// реквизиты
		Строка.ГрафикРаботы = ВыборкаПоДоходам.ГрафикРаботы;
		Строка.ВидУчетаВремени = ПроведениеРасчетов.ПолучитьВидУчетаВремени(ВыборкаПоДоходам.СпособРасчета, ВыборкаПоДоходам.ВидВремени, ВыборкаПоДоходам.СуммированныйУчетРабочегоВремени, ВыборкаПоДоходам.ОбозначениеВТабелеУчетаРабочегоВремени);
		
	Иначе
		
		Строка = НаборЗаписейДополнительные.Добавить();
		
		Строка.ПериодРегистрации	= ВыборкаПоДоходам.ДатаНачисления;
		
	КонецЕсли;
	
	// свойства
	Строка.ВидРасчета			= ВыборкаПоДоходам.ВидРасчета;
	Строка.Сторно				= ВыборкаПоДоходам.Сторно;
	
	// Измерения
	Строка.Сотрудник			= ВыборкаПоДоходам.Сотрудник;
	Строка.Физлицо				= ВыборкаПоДоходам.Физлицо;
	Строка.Организация			= ВыборкаПоДоходам.ГоловнаяОрганизация;
	
	// ресурсы
	Строка.Результат			= ВыборкаПоДоходам.Результат;
	
	// реквизиты
	Строка.СчетДт = ВыборкаПоДоходам.СчетДт;
	Строка.СчетКт = ВыборкаПоДоходам.СчетКт;
	Строка.СубконтоДт1 = ВыборкаПоДоходам.СубконтоДт1;
	Строка.СубконтоДт2 = ВыборкаПоДоходам.СубконтоДт2;
	Строка.СубконтоДт3 = ВыборкаПоДоходам.СубконтоДт3;
	Строка.СубконтоКт1 = ВыборкаПоДоходам.СубконтоКт1;
	Строка.СубконтоКт2 = ВыборкаПоДоходам.СубконтоКт2;
	Строка.СубконтоКт3 = ВыборкаПоДоходам.СубконтоКт3;
	
	
	Если мЗаполнятьДанныеНУ Тогда
		Если мЗаполнятьСчетаНУ Тогда
			Строка.СчетДтНУ 	 = ВыборкаПоДоходам.СчетДтНУ;
			Строка.СчетКтНУ 	 = ВыборкаПоДоходам.СчетКтНУ;
			Строка.СубконтоДтНУ1 = ВыборкаПоДоходам.СубконтоДтНУ1;
			Строка.СубконтоДтНУ2 = ВыборкаПоДоходам.СубконтоДтНУ2;
			Строка.СубконтоДтНУ3 = ВыборкаПоДоходам.СубконтоДтНУ3;
			Строка.СубконтоКтНУ1 = ВыборкаПоДоходам.СубконтоКтНУ1;
			Строка.СубконтоКтНУ2 = ВыборкаПоДоходам.СубконтоКтНУ2;
			Строка.СубконтоКтНУ3 = ВыборкаПоДоходам.СубконтоКтНУ3;
		Иначе
			Строка.СуммаНУ = ВыборкаПоДоходам.СуммаНУ;
			Строка.СуммаПР = ВыборкаПоДоходам.СуммаПР;
			Строка.СуммаВР = ВыборкаПоДоходам.СуммаВР;
			Строка.ВидНачисленийОплатыТрудаПоСтатье255НК = ВыборкаПоДоходам.ВидНачисленийОплатыТрудаПоСтатье255НК;
		КонецЕсли;
	КонецЕсли;
	
	Если мУчетПоПодразделениямНаСчетах Тогда
		Строка.ПодразделениеДт = ВыборкаПоДоходам.ПодразделениеДт;
		Строка.ПодразделениеКт = ВыборкаПоДоходам.ПодразделениеКт;
	КонецЕсли;
	
	Строка.ОтражениеВУСН = ВыборкаПоДоходам.ОтражениеВУСН;	
	Строка.СпособРаспределенияЗатрат = ВыборкаПоДоходам.СпособРаспределенияЗатрат;
	
	Строка.ОбособленноеПодразделение = Организация;
	Строка.ДокументОснование = ВыборкаПоДоходам.ДокументОснование;
	
КонецПроцедуры  // ДобавитьСтрокуВДвиженияПоДоходам

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	ПроверитьЗаполнениеШапки(Отказ, Заголовок);
	
	Если Отказ Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	// определим налоговый режим
	мУСН = Ложь;
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(ПериодРегистрации, ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	Если НЕ ЗначениеЗаполнено(УчетнаяПолитика) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		мУСН = УчетнаяПолитика.УСН;
	КонецЕсли;
	
	ВыборкаПоДоходам = СформироватьЗапросПоДоходам().Выбрать();
	
	ЗаполнитьЗначенияПеременныхВеденияУчета();
	
	ПроверятьСочетание = мЗаполнятьДанныеНУ и мЗаполнятьСчетаНУ;
	
	
	Пока ВыборкаПоДоходам.Следующий() Цикл
		ПроверитьЗаполнениеСтрокиДохода(ВыборкаПоДоходам, Отказ, ПроверятьСочетание, Заголовок);
		Если Не Отказ Тогда
			ДобавитьСтрокуВДвиженияПоДоходам(ВыборкаПоДоходам, Движения.БУОсновныеНачисления, Движения.БУДополнительныеНачисления);
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаПоОтражениюВУчете = СформироватьЗапросПоОтражениюВУчете().Выбрать();
	ВалютаРеглУчета  = Константы.ВалютаРегламентированногоУчета.Получить();
	
	// Подготовим структуру таблицы для отражения затрат.
	ТаблицаЗатрат = УправлениеЗатратами.СформироватьТаблицуЗатрат();
	
	ПоддержкаПБУ18 = ?(УчетнаяПолитика = Неопределено, Ложь, УчетнаяПолитика.ПоддержкаПБУ18);	
	ОтражатьРазницы = (ПоддержкаПБУ18 И ПроверятьСочетание);
	
	Пока ВыборкаПоОтражениюВУчете.Следующий() Цикл
		
		ПроверитьЗаполнениеСтрокиОтраженияВУчете(ВыборкаПоОтражениюВУчете, Отказ, ПроверятьСочетание);
		
		Если Не Отказ Тогда
			ДобавитьСтрокуВДвиженияПоОтражениюВУчете(ВыборкаПоОтражениюВУчете, ТаблицаЗатрат, ОтражатьРазницы);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаЗатрат.Количество() > 0 Тогда
		
		ВремСтруктураШапкиДокумента = Новый Структура;
		ВремСтруктураШапкиДокумента.Вставить("Организация", Организация);
		ВремСтруктураШапкиДокумента.Вставить("ОтражатьВБухгалтерскомУчете", Истина);
		ВремСтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчете", НЕ мУСН);
		ВремСтруктураШапкиДокумента.Вставить("Ссылка", Ссылка);
		ВремСтруктураШапкиДокумента.Вставить("Дата", КонецМесяца(ПериодРегистрации));
		
		ОбработатьСтрокиТаблицыЗатратРБП(ТаблицаЗатрат, ВремСтруктураШапкиДокумента);
		
		УправлениеЗатратами.ДвиженияПоПрочимЗатратам(
		ВремСтруктураШапкиДокумента, 
		ТаблицаЗатрат,
		Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете
		);
		
	КонецЕсли;
	
	Если мУСН Тогда
		
		НалоговыйУчетУСН.ДвиженияУСН(Ссылка, Режим);
		
	КонецЕсли;
	
	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры // ОбработкаПроведения

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(ОсновныеНачисления);
	МассивТЧ.Добавить(ДополнительныеНачисления);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	
	// Удаление записей регистрации из всех последовательностей
	//ОбщегоНазначения.УдалитьРегистрациюДокументаВПоследовательностях(ЭтотОбъект,мУдалятьДвижения);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
КонецПроцедуры

// Возвращает значение одноименной настройки учетной политики, 
// действующей на дату документа
Функция СтраховыеВзносыСОтпускныхПризнаватьРасходамиВМесяцеНачисления()
	
	ДанныеУчетнойПолитики = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(ПериодРегистрации, Организация, Ложь);
	Если ДанныеУчетнойПолитики <> Неопределено 
		И ДанныеУчетнойПолитики.Свойство("СтраховыеВзносыСОтпускныхПризнаватьРасходамиВМесяцеНачисления") Тогда
		Возврат ДанныеУчетнойПолитики.СтраховыеВзносыСОтпускныхПризнаватьРасходамиВМесяцеНачисления;
	Иначе
		Возврат Ложь; // по умолчанию
	КонецЕсли;
	
КонецФункции

// Добавляет в промежуточную таблицу строку с проводками по списанию РБП - страховых взносов.
Процедура ДобавитьСтрокуСписанияСтраховыхВзносовРБП(МассивСумм, ИндексМассиваСумм, ЭтоЕНВД = Ложь, ПромежуточнаяТаблица, СтрокаОтражения, СтатьяРБП, ФизЛицо, Счет97, СчетН97, ПараметрыПолученияСубконто)
	
	Если МассивСумм <> Неопределено Тогда
		
		СтрокаТЧ = ПромежуточнаяТаблица.Добавить();
		СтрокаТЧ.СчетДт			= СтрокаОтражения.СчетДт;
		СтрокаТЧ.СубконтоДт1	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт1, ПараметрыПолученияСубконто);
		СтрокаТЧ.СубконтоДт2	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт2, ПараметрыПолученияСубконто);
		СтрокаТЧ.СубконтоДт3	= ПолучитьСубконто(СтрокаОтражения.СубконтоДт3, ПараметрыПолученияСубконто);
		СтрокаТЧ.СчетКт 		= Счет97;
		СтрокаТЧ.СубконтоКт1 	= СтатьяРБП;
		СтрокаТЧ.СубконтоКт2 	= ФизЛицо;
		
		Если НЕ ЭтоЕНВД Тогда
			СписаниеРБПСтраховыхВзносовНУ(СтрокаТЧ, СтрокаОтражения, СтатьяРБП, ФизЛицо, СчетН97, ПараметрыПолученияСубконто);
		КонецЕсли;
		
		Если мУчетПоПодразделениямНаСчетах Тогда
			СтрокаТЧ.ПодразделениеДт = СтрокаОтражения.ПодразделениеДт;
			СтрокаТЧ.ПодразделениеКт = СтрокаОтражения.ПодразделениеДт;
		КонецЕсли;
		
		СтрокаТЧ.СпособРаспределенияЗатрат	= СтрокаОтражения.СпособРаспределенияЗатрат;
		СтрокаТЧ.ОтражениеВУСН	= СтрокаОтражения.ОтражениеВУСН;
		
		СтрокаТЧ.Сумма = МассивСумм[ИндексМассиваСумм];
		Если мЗаполнятьДанныеНУ и Не мЗаполнятьСчетаНУ Тогда
			СтрокаТЧ.СуммаВР = СтрокаТЧ.Сумма;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет поля налогового учета в строках движений по списанию РБП со страховых взносов.
// 
Процедура СписаниеРБПСтраховыхВзносовНУ(ЗаполняемаяСтрока, СтрокаИсходныхДанных, СтатьяРБП, ФизЛицо, СчетРБП_НУ, ПараметрыПолученияСубконто)
	
	Если НЕ мЗаполнятьДанныеНУ ИЛИ НЕ мЗаполнятьСчетаНУ Тогда
		Возврат;
	КонецЕсли;
	
	Если мСтраховыеВзносыСОтпускныхПризнаватьРасходамиВМесяцеНачисления Тогда
		// Эти поля не должны быть заполнены, если страховые взносы признаются расходами в месяце начисления.
		Возврат;
	КонецЕсли;
	
	ЗаполняемаяСтрока.СчетДтНУ		= СтрокаИсходныхДанных.СчетДтНУ;
	ЗаполняемаяСтрока.СубконтоДтНУ1	= ПолучитьСубконто(СтрокаИсходныхДанных.СубконтоДтНУ1, ПараметрыПолученияСубконто);
	ЗаполняемаяСтрока.СубконтоДтНУ2	= ПолучитьСубконто(СтрокаИсходныхДанных.СубконтоДтНУ2, ПараметрыПолученияСубконто);
	ЗаполняемаяСтрока.СубконтоДтНУ3	= ПолучитьСубконто(СтрокаИсходныхДанных.СубконтоДтНУ3, ПараметрыПолученияСубконто);
	
	Если ЗначениеЗаполнено(СтрокаИсходныхДанных.СчетДтНУ) Тогда
		ЗаполняемаяСтрока.СчетКтНУ	    = СчетРБП_НУ;
		ЗаполняемаяСтрока.СубконтоКтНУ1 = СтатьяРБП;
		ЗаполняемаяСтрока.СубконтоКтНУ2 = ФизЛицо;
	Иначе
		ЗаполняемаяСтрока.СчетКтНУ	    = ПланыСчетов.Налоговый.ПустаяСсылка();
		ЗаполняемаяСтрока.СубконтоКтНУ1 = Неопределено;
		ЗаполняемаяСтрока.СубконтоКтНУ2 = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

// проверяет должен ли быть указан или нет счет учета по НУ
//
// Параметры
//  СчетДт,СчетКт - счета хозрасчетного плана счетов
//  СчетДтНУ	  - счет налогового плана счетов - будущий счет дебета
//
// Возвращаемое значение:
//   булево   – если сочетание корректно, то истина
//
Функция КорректноеСочетаниеСчетов(Выборка,Сообщение)
	
	Сообщение = "";
	
	СчетКт = Выборка.СчетКт;
	СчетДт = Выборка.СчетДт;
	
	Если НЕ ЗначениеЗаполнено(Выборка.СчетДтНУ) Тогда
		Если (СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда или СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоВыплатеДоходов)
			и Не СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию) 
			и Не СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам) 
			и Не СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов) 
			и Не СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль) 
			и Не СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы)
			и (СчетДт <> ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов)
			и Не Выборка.СчетДтОтноситсяКДеятельностиЕНВД Тогда
			Сообщение = "Не указан счет налогового учета!";
		КонецЕсли;
	Иначе
		Если (СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда или СчетДт = ПланыСчетов.Хозрасчетный.РасчетыПоВыплатеДоходов) Тогда
			Сообщение = "Проводки в дебет "+Выборка.НаименованиеСчетДт +" не должны отражаться в налоговом учете!";
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ ЗначениеЗаполнено(Сообщение)
	
КонецФункции // КорректноеСочетаниеСчетов()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходимое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
	Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		
		Если ЭтоНовый() Тогда
			Предупреждение("Документ можно распечатать только после его записи");
			Возврат;
		ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
			Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
			Возврат;
		КонецЕсли;
		
		Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда
			
			ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
			
			Если ТабДокумент = Неопределено Тогда
				Возврат
			КонецЕсли; 
			
		КонецЕсли;
		
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);
		
	КонецПроцедуры // Печать
	
#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ДобавитьСтрокуВДвиженияПоОтражениюВУчете(ВыборкаПоДоходам, ТаблицаЗатрат, ОтражатьРазницы = Ложь)
	
	Если ЗначениеЗаполнено(ВыборкаПоДоходам.СчетДт) и ЗначениеЗаполнено(ВыборкаПоДоходам.СчетКт) Тогда
		
		
		// проводка по бухгалтерскому регистру
		СтрокаДвижения = Движения.Хозрасчетный.Добавить();
		
		// Свойства
		СтрокаДвижения.Период = КонецМесяца(ПериодРегистрации);
		
		// Измерения
		СтрокаДвижения.Организация  = Организация;
		
		// бухучет
		СтрокаДвижения.СчетДт       = ВыборкаПоДоходам.СчетДт;
		СтрокаДвижения.СчетКт       = ВыборкаПоДоходам.СчетКт;
		СтрокаДвижения.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконто1] = ВыборкаПоДоходам.СубконтоДт1;
		СтрокаДвижения.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконто2] = ВыборкаПоДоходам.СубконтоДт2;
		СтрокаДвижения.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконто3] = ВыборкаПоДоходам.СубконтоДт3;
		СтрокаДвижения.СубконтоКт[ВыборкаПоДоходам.КтВидСубконто1] = ВыборкаПоДоходам.СубконтоКт1;
		СтрокаДвижения.СубконтоКт[ВыборкаПоДоходам.КтВидСубконто2] = ВыборкаПоДоходам.СубконтоКт2;
		СтрокаДвижения.СубконтоКт[ВыборкаПоДоходам.КтВидСубконто3] = ВыборкаПоДоходам.СубконтоКт3;	
		
		// ресурсы
		СтрокаДвижения.Сумма = ВыборкаПоДоходам.Сумма;
		
		// Содержание проводок
		Если ПериодРегистрации < '20100101' Тогда
			СтрокаДвижения.Содержание = ВыборкаПоДоходам.СодержаниеПроводки;
		Иначе
			СтрокаДвижения.Содержание = ВыборкаПоДоходам.СчетКт.Наименование;
		КонецЕсли;
		
		// реквизиты
		СтрокаДвижения.НомерЖурнала  = "ЗП";
	КонецЕсли;
	
	СтрокаБУ = СтрокаДвижения;
	
	// Добавим строку в таблицу затрат.
	НоваяСтрока = ТаблицаЗатрат.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоДоходам);
	НоваяСтрока.СпособРаспределенияЗатратНаВыпуск = ВыборкаПоДоходам.СпособРаспределенияЗатрат;
	НоваяСтрока.СчетЗатрат = ВыборкаПоДоходам.СчетДт;
	НоваяСтрока.СуммаРегл  = ВыборкаПоДоходам.Сумма;
    НоваяСтрока.СуммаБух   = ВыборкаПоДоходам.Сумма;
	
	// проводка по налоговому учету по налогу на прибыль
    Если Не мУСН И (Не ВыборкаПоДоходам.СчетДтНУ.Пустая() 
        Или ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов
		Или ВыборкаПоДоходам.СчетКт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов) Тогда
        
		// Добавим данные по налоговому учету в таблицу затрат.
		
		НоваяСтрока.СчетЗатратНУ = ВыборкаПоДоходам.СчетДтНУ;
		НоваяСтрока.СуммаНал = ВыборкаПоДоходам.Сумма;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетДтНУ) Тогда
			
			СчетНУСоответствующийСчетуБУДт =НайтиСчетНУ(СтрокаБУ.СчетДт);
			
			Если НЕ ЗначениеЗаполнено(СчетНУСоответствующийСчетуБУДт) Тогда
				Сообщить("Не найдено соответствие для счета БУ " +  СтрокаБУ.СчетДт + ", разницы между БУ и НУ не рассчитаны");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетКтНУ) Тогда
			
			СчетНУСоответствующийСчетуБУКт = НайтиСчетНУ(СтрокаБУ.СчетКт);
			  
			Если НЕ ЗначениеЗаполнено(СчетНУСоответствующийСчетуБУКт) Тогда
				Сообщить("Не найдено соответствие для счета БУ " +  СтрокаБУ.СчетКт + ", разницы между БУ и НУ не рассчитаны");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаДвижения = Движения.Налоговый.Добавить();
		
		// Свойства
		СтрокаДвижения.Период = КонецМесяца(ПериодРегистрации);
		
		// Измерения
		СтрокаДвижения.Организация   = Организация;
		
		// налоговый учет
		Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетДтНУ) Тогда
			
			СтрокаДвижения.СчетДт = СчетНУСоответствующийСчетуБУДт;
			БухгалтерскийУчет.УстановитьСубконто(СчетНУСоответствующийСчетуБУДт, СтрокаДвижения.СубконтоДт, 1, ВыборкаПоДоходам.СубконтоДт1);
			БухгалтерскийУчет.УстановитьСубконто(СчетНУСоответствующийСчетуБУДт, СтрокаДвижения.СубконтоДт, 2, ВыборкаПоДоходам.СубконтоДт2);
			БухгалтерскийУчет.УстановитьСубконто(СчетНУСоответствующийСчетуБУДт, СтрокаДвижения.СубконтоДт, 3, ВыборкаПоДоходам.СубконтоДт3);
		Иначе
			СтрокаДвижения.СчетДт = ВыборкаПоДоходам.СчетДтНУ;
			БухгалтерскийУчет.УстановитьСубконто(СтрокаДвижения.СчетДт, СтрокаДвижения.СубконтоДт, 1, ВыборкаПоДоходам.СубконтоДтНУ1);
			БухгалтерскийУчет.УстановитьСубконто(СтрокаДвижения.СчетДт, СтрокаДвижения.СубконтоДт, 2, ВыборкаПоДоходам.СубконтоДтНУ2);
			БухгалтерскийУчет.УстановитьСубконто(СтрокаДвижения.СчетДт, СтрокаДвижения.СубконтоДт, 3, ВыборкаПоДоходам.СубконтоДтНУ3);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетКтНУ) Тогда
			
			СтрокаДвижения.СчетКт = СчетНУСоответствующийСчетуБУКт;
			БухгалтерскийУчет.УстановитьСубконто(СчетНУСоответствующийСчетуБУКт, СтрокаДвижения.СубконтоКт, 1, ВыборкаПоДоходам.СубконтоКт1);
			БухгалтерскийУчет.УстановитьСубконто(СчетНУСоответствующийСчетуБУКт, СтрокаДвижения.СубконтоКт, 2, ВыборкаПоДоходам.СубконтоКт2);
			БухгалтерскийУчет.УстановитьСубконто(СчетНУСоответствующийСчетуБУКт, СтрокаДвижения.СубконтоКт, 3, ВыборкаПоДоходам.СубконтоКт3);
            
            Если СтрокаБУ.СчетКт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов Тогда
                СтрокаДвижения.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
                СтрокаДвижения.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
            КонецЕсли;
		Иначе
			СтрокаДвижения.СчетКт = ВыборкаПоДоходам.СчетКтНУ;
			БухгалтерскийУчет.УстановитьСубконто(СтрокаДвижения.СчетКт, СтрокаДвижения.СубконтоКт, 1, ВыборкаПоДоходам.СубконтоКтНУ1);
			БухгалтерскийУчет.УстановитьСубконто(СтрокаДвижения.СчетКт, СтрокаДвижения.СубконтоКт, 2, ВыборкаПоДоходам.СубконтоКтНУ2);
			БухгалтерскийУчет.УстановитьСубконто(СтрокаДвижения.СчетКт, СтрокаДвижения.СубконтоКт, 3, ВыборкаПоДоходам.СубконтоКтНУ3);
		КонецЕсли;
		
		
		// ресурсы
		
		СтрокаДвижения.Сумма        = ВыборкаПоДоходам.Сумма;
		
		
		// Содержание проводок
		Если ПериодРегистрации < '20100101' Тогда
			СтрокаДвижения.Содержание = ВыборкаПоДоходам.СодержаниеПроводки;
		Иначе
			СтрокаДвижения.Содержание = ВыборкаПоДоходам.СчетКт.Наименование;
		КонецЕсли;
		
		// реквизиты
		СтрокаДвижения.НомерЖурнала = "ЗП";
		
		НалоговыйУчет.ВидУчетаПоПБУ18(СтрокаДвижения);
		
		ДобавитьСтрокуВДвиженияПоОтражениюВУчетеРазниц(СтрокаБУ, СтрокаДвижения, НоваяСтрока, ОтражатьРазницы);
		
	КонецЕсли;
	
КонецПроцедуры  // ДобавитьСтрокуВДвиженияПоОтражениюВУчете

Процедура ДобавитьСтрокуВДвиженияПоОтражениюВУчетеРазниц(ВыборкаПоДоходамБУ, ВыборкаПоДоходамНУ, СтрокаРегистраНакопления, ОтражатьРазницы)
    
    ОбразовыватьРазницыПо97Счету = мСтраховыеВзносыСОтпускныхПризнаватьРасходамиВМесяцеНачисления;
    ОбразовыватьРазницыПо96Счету = (мОценочныеОбязательстваФормироватьБУ И НЕ мОценочныеОбязательстваФормироватьНУ);
	
	Если ПериодРегистрации < '20110101' И НЕ ОбразовыватьРазницыПо97Счету И Не ОбразовыватьРазницыПо96Счету Тогда
		// Страховые взносы с отпускных отражаются одинаково в БУ и НУ
		Возврат;
	КонецЕсли;
	
	Если ПериодРегистрации < '20100101' Тогда
		Возврат;
	КонецЕсли;
	
    Если (Не ВыборкаПоДоходамБУ = Неопределено И ВыборкаПоДоходамБУ.СчетДт <> ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов 
        И ВыборкаПоДоходамБУ.СчетКт <> ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов) И
        (Не ВыборкаПоДоходамНУ = Неопределено И ВыборкаПоДоходамНУ.СчетДт <> ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов 
        И ВыборкаПоДоходамНУ.СчетКт <> ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов) Тогда
        // не отражаем разницы, не связанные с РБП
        Если (Не ВыборкаПоДоходамБУ = Неопределено И ВыборкаПоДоходамБУ.СчетДт <> ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов 
            И ВыборкаПоДоходамБУ.СчетКт <> ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов) И
            (Не ВыборкаПоДоходамНУ = Неопределено И ВыборкаПоДоходамНУ.СчетДт <> ПланыСчетов.Налоговый.РезервыПредстоящихРасходов 
            И ВыборкаПоДоходамНУ.СчетКт <> ПланыСчетов.Налоговый.РезервыПредстоящихРасходов) Тогда
            // не отражаем разницы, не связанные с оценочными обязательствами
            Возврат;
        КонецЕсли;
    КонецЕсли;
	
	Если ВыборкаПоДоходамНУ.СчетДт = ПланыСчетов.Налоговый.РасходыПоДеятельностиЕНВД Тогда
		// не отражаем разницы, если это ЕНВД
		Возврат;
	КонецЕсли;
	
	Если ВыборкаПоДоходамБУ = Неопределено Тогда
		Содержание = ""; 
	Иначе
		Содержание = ВыборкаПоДоходамБУ.Содержание;
	КонецЕсли;
	
    Если  (ВыборкаПоДоходамНУ.СчетДт = ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов И 
        НЕ (Не ВыборкаПоДоходамБУ = Неопределено И ВыборкаПоДоходамБУ.СчетДт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов)) 
        Или
		(Не ВыборкаПоДоходамБУ = Неопределено И ВыборкаПоДоходамБУ.СчетДт = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов И
		(ВыборкаПоДоходамБУ.СубконтоДт.РасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.РБПНаПФР Или
		ВыборкаПоДоходамБУ.СубконтоДт.РасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.РБПНаСтраховыеВзносы Или
		ВыборкаПоДоходамБУ.СубконтоДт.РасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.РБПНаФСС)) Тогда
		
		СчетНУСоответствующийСчетуБУ = НайтиСчетНУ(ВыборкаПоДоходамБУ.СчетДт);
		
		Если СчетНУСоответствующийСчетуБУ = ВыборкаПоДоходамНУ.СчетДт	Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СчетНУСоответствующийСчетуБУ) Тогда
			Сообщить("Не найдено соответствие для счета БУ " +  ВыборкаПоДоходамБУ.СчетДт + ", разницы между БУ и НУ не рассчитаны");
			Возврат;
		КонецЕсли;
		
		Если НЕ ОтражатьРазницы Тогда
			Возврат;
		КонецЕсли;
		
		Строка = Движения.Налоговый.Добавить();
		
		// Свойства
		Строка.Период = КонецМесяца(ПериодРегистрации);
		
		// Измерения
		Строка.Организация   = Организация;
		Строка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
		
		Строка.СчетДт = СчетНУСоответствующийСчетуБУ;
		Для Каждого СтрокаСубконто Из  ВыборкаПоДоходамБУ.СубконтоДт Цикл
			
			Строка.СубконтоДт[СтрокаСубконто.Ключ] = СтрокаСубконто.Значение;
		КонецЦикла;
		
		// ресурсы
		Строка.Сумма        = ВыборкаПоДоходамБУ.Сумма;
		
		// реквизиты
		Строка.НомерЖурнала = "ЗП";
		
		// Содержание проводок
		Строка.Содержание = Содержание;
		
		Строка = Движения.Налоговый.Добавить();
		
		// Свойства
		Строка.Период = КонецМесяца(ПериодРегистрации);
		
		// Измерения
		Строка.Организация   = Организация;
		Строка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
		
		
		Строка.СчетДт = ВыборкаПоДоходамНУ.СчетДт;
		Для Каждого СтрокаСубконто Из  ВыборкаПоДоходамНУ.СубконтоДт Цикл
			
			Строка.СубконтоДт[СтрокаСубконто.Ключ] = СтрокаСубконто.Значение;
		КонецЦикла;
		
		// ресурсы
		Строка.Сумма        = -ВыборкаПоДоходамНУ.Сумма;
		
		// реквизиты
		Строка.НомерЖурнала = "ЗП";
		
		// Содержание проводок
		Строка.Содержание = Содержание;
		
		
	КонецЕсли;	
	
	Если Не ВыборкаПоДоходамБУ = Неопределено И ВыборкаПоДоходамБУ.СчетКт = ПланыСчетов.Хозрасчетный.РасходыНаОплатуТрудаБудущихПериодов И
		(ВыборкаПоДоходамБУ.СубконтоКт.РасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.РБПНаПФР Или
		ВыборкаПоДоходамБУ.СубконтоКт.РасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.РБПНаСтраховыеВзносы Или
		ВыборкаПоДоходамБУ.СубконтоКт.РасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.РБПНаФСС) Тогда
		
		Если НЕ ОтражатьРазницы Тогда
			Движения.Налоговый.Удалить(ВыборкаПоДоходамНУ);
			Возврат;
		КонецЕсли;
		
		ВыборкаПоДоходамНУ.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
		ВыборкаПоДоходамНУ.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
		
	КонецЕсли;
	
	Если ВыборкаПоДоходамНУ.СчетКт = ПланыСчетов.Налоговый.РасходыНаОплатуТрудаБудущихПериодов И ВыборкаПоДоходамБУ = Неопределено Тогда
		
		ВыборкаПоДоходамНУ.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.НУ;
		ВыборкаПоДоходамНУ.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.НУ;
		
		Если НЕ ОтражатьРазницы Тогда
			
			// Перед прекращением заполним аналитику учета затрат
			ОтражаетсяВНалоговомУчетеЗатрат     = УправлениеЗатратами.ПроверитьСчетЗатратНаПроизводственныеРасходы(ВыборкаПоДоходамНУ.СчетДт, "Налоговый");
			
			ЗаполнитьАналитикуУчетаЗатрат(Ложь, ОтражаетсяВНалоговомУчетеЗатрат, СтрокаРегистраНакопления, ВыборкаПоДоходамНУ);
			
			Возврат;
		КонецЕсли;
		
		Строка = Движения.Налоговый.Добавить();
		
		// Свойства
		Строка.Период = КонецМесяца(ПериодРегистрации);
		
		// Измерения
		Строка.Организация   = Организация;
		Строка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
		Строка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
		
		Строка.СчетДт = ВыборкаПоДоходамНУ.СчетДт;
		Для Каждого СтрокаСубконто Из  ВыборкаПоДоходамНУ.СубконтоДт Цикл
			
			Строка.СубконтоДт[СтрокаСубконто.Ключ] = СтрокаСубконто.Значение;
		КонецЦикла;
		
		Строка.СчетКт = ВыборкаПоДоходамНУ.СчетКт;
		Для Каждого СтрокаСубконто Из  ВыборкаПоДоходамНУ.СубконтоКт Цикл
			
			Строка.СубконтоКт[СтрокаСубконто.Ключ] = СтрокаСубконто.Значение;
		КонецЦикла;
		// ресурсы
		Строка.Сумма        = -ВыборкаПоДоходамНУ.Сумма;
		// реквизиты
		Строка.НомерЖурнала = "ЗП";
		
		// Содержание проводок
		Строка.Содержание = Содержание;
		
		
	КонецЕсли;
    
    Если Не ВыборкаПоДоходамБУ = Неопределено И ВыборкаПоДоходамБУ.СчетДт = ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов И 
        Не ВыборкаПоДоходамНУ = Неопределено И Не ВыборкаПоДоходамНУ.СчетДт = ПланыСчетов.Налоговый.РезервыПредстоящихРасходов Тогда
		
		ВыборкаПоДоходамНУ.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.НУ;
		ВыборкаПоДоходамНУ.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.НУ;
		
		Если НЕ ОтражатьРазницы Тогда
			Возврат;
		КонецЕсли;
		
		Строка = Движения.Налоговый.Добавить();
		
		// Свойства
		Строка.Период = КонецМесяца(ПериодРегистрации);
		
		// Измерения
		Строка.Организация   = Организация;
		Строка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
		Строка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
		
		Строка.СчетДт = ВыборкаПоДоходамНУ.СчетДт;
		Для Каждого СтрокаСубконто Из  ВыборкаПоДоходамНУ.СубконтоДт Цикл
			
			Строка.СубконтоДт[СтрокаСубконто.Ключ] = СтрокаСубконто.Значение;
		КонецЦикла;
		
		Строка.СчетКт = ВыборкаПоДоходамНУ.СчетКт;
		Для Каждого СтрокаСубконто Из  ВыборкаПоДоходамНУ.СубконтоКт Цикл
			
			Строка.СубконтоКт[СтрокаСубконто.Ключ] = СтрокаСубконто.Значение;
		КонецЦикла;
		// ресурсы
		Строка.Сумма        = -ВыборкаПоДоходамНУ.Сумма;
		// реквизиты
		Строка.НомерЖурнала = "ЗП";
		
		// Содержание проводок
		Строка.Содержание = Содержание;
		
		Строка = Движения.Налоговый.Добавить();
		
		// Свойства
		Строка.Период = КонецМесяца(ПериодРегистрации);
		
		// Измерения
		Строка.Организация   = Организация;
		Строка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
		Строка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;
        
		Строка.СчетДт = ПланыСчетов.Налоговый.РезервыПредстоящихРасходов;
		Для Каждого СтрокаСубконто Из  ВыборкаПоДоходамБУ.СубконтоДт Цикл
			
			Строка.СубконтоДт[СтрокаСубконто.Ключ] = СтрокаСубконто.Значение;
		КонецЦикла;
		
		Строка.СчетКт = ВыборкаПоДоходамНУ.СчетКт;
		Для Каждого СтрокаСубконто Из  ВыборкаПоДоходамНУ.СубконтоКт Цикл
			
			Строка.СубконтоКт[СтрокаСубконто.Ключ] = СтрокаСубконто.Значение;
		КонецЦикла;
		// ресурсы
		Строка.Сумма        = ВыборкаПоДоходамНУ.Сумма;
		// реквизиты
		Строка.НомерЖурнала = "ЗП";
		
		// Содержание проводок
		Строка.Содержание = Содержание;
	КонецЕсли;
    
	// В 2010 году страховые взносы в БУ могли относиться на счет 97, а в НУ - на счет расходов (например, 20.01.1)
	// Аналитика учета затрат выбирается из данных бухгалтерского учета и в этом случае - не заполнена.
	// Заполним её.
	ОтражаетсяВБухгалтерскомУчетеЗатрат = ВыборкаПоДоходамБУ <> Неопределено И УправлениеЗатратами.ПроверитьСчетЗатратНаПроизводственныеРасходы(ВыборкаПоДоходамБУ.СчетДт);
	ОтражаетсяВНалоговомУчетеЗатрат     = ВыборкаПоДоходамНУ <> Неопределено И УправлениеЗатратами.ПроверитьСчетЗатратНаПроизводственныеРасходы(ВыборкаПоДоходамНУ.СчетДт, "Налоговый");
	
	ЗаполнитьАналитикуУчетаЗатрат(ОтражаетсяВБухгалтерскомУчетеЗатрат, ОтражаетсяВНалоговомУчетеЗатрат, СтрокаРегистраНакопления, ВыборкаПоДоходамНУ);
	
КонецПроцедуры  // ДобавитьСтрокуВДвиженияПоОтражениюВУчетеРазниц

// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ЗаполнитьАналитикуУчетаЗатрат(ОтражаетсяВБухгалтерскомУчетеЗатрат, ОтражаетсяВНалоговомУчетеЗатрат, СтрокаРегистраНакопления, ВыборкаПоДоходамНУ)

	Если НЕ ОтражаетсяВБухгалтерскомУчетеЗатрат И ОтражаетсяВНалоговомУчетеЗатрат Тогда
		
		СтрокаРегистраНакопления.ПодразделениеОрганизации = ВыборкаПоДоходамНУ.СубконтоДт.Подразделения;
		СтрокаРегистраНакопления.НоменклатурнаяГруппа     = ВыборкаПоДоходамНУ.СубконтоДт.НоменклатурныеГруппы;
		СтрокаРегистраНакопления.СтатьяЗатрат             = ВыборкаПоДоходамНУ.СубконтоДт.СтатьиЗатрат;
		СтрокаРегистраНакопления.ОбъектСтроительства      = ВыборкаПоДоходамНУ.СубконтоДт.ОбъектыСтроительства;
		
	КонецЕсли;

КонецПроцедуры // ЗаполнитьАналитикуУчетаЗатрат()
 

// Подбриает счет НУ по счету БУ виду затрат
// Параметры:
//	СчетБУ
//	Субконто1
//	Субконто2
//	Субконто3
//
Функция  НайтиСчетНУ(СчетБУ)
	
	Возврат РасширеннаяАналитикаУчета.ПолучитьСчетУчетаНУ(СчетБУ);
	
КонецФункции

// Обрабатывает строки таблицы затрат, в которых 
// - зарплата в БУ относится на РБП, а в НУ - на расходы
// - либо наоборот.
// (т.е. есть отличия в отражении в БУ и НУ)
// Чтобы корректно отразить затраты, в таких строках важно обеспечить
// - оба счета - и БУ и НУ - должны быть счетами затрат
// - суммы должны быть заполнены правильно 
Процедура ОбработатьСтрокиТаблицыЗатратРБП(ТаблицаЗатрат, СтруктураШапкиДокумента)
	
    Для Каждого СтрокаЗатрат Из ТаблицаЗатрат Цикл
		
		ОтражаетсяВБухгалтерскомУчетеЗатрат = ЗначениеЗаполнено(СтрокаЗатрат.СчетЗатрат) И УправлениеЗатратами.ПроверитьСчетЗатратНаПроизводственныеРасходы(СтрокаЗатрат.СчетЗатрат);
		ОтражаетсяВНалоговомУчетеЗатрат     = ЗначениеЗаполнено(СтрокаЗатрат.СчетЗатратНУ) И УправлениеЗатратами.ПроверитьСчетЗатратНаПроизводственныеРасходы(СтрокаЗатрат.СчетЗатратНУ, "Налоговый");
		
		Если ОтражаетсяВБухгалтерскомУчетеЗатрат = ОтражаетсяВНалоговомУчетеЗатрат Тогда
			// Отличий в БУ и НУ нет
			Продолжить;
		КонецЕсли;
		
		Если НЕ ОтражаетсяВБухгалтерскомУчетеЗатрат Тогда
			// ... но отражается в НУ
			
			СчетЗатратБУПоСчетуНУ = РасширеннаяАналитикаУчета.ПолучитьСчетБУПоСчетуНУ(СтрокаЗатрат.СчетЗатратНУ);
			
			Если ЗначениеЗаполнено(СчетЗатратБУПоСчетуНУ) Тогда
				// В БУ - это расходы будущих периодов (не затраты), а в НУ - затраты.
				// Для целей БУ это - не затраты, поэтому сумма по БУ в регистре не нужна.
				СтрокаЗатрат.СуммаНал   = СтрокаЗатрат.СуммаРегл;
				СтрокаЗатрат.СуммаБух   = 0;
				СтрокаЗатрат.СуммаРегл  = 0; // Этим мы говорим, что суммы в БУ и НУ - разные.
				// При формировании движений по разделу учета Затраты регистра УчетЗатрат требуется, 
				// чтобы счет бухгалтерского учета был счетом затрат.
				СтрокаЗатрат.СчетЗатрат       = СчетЗатратБУПоСчетуНУ;
			КонецЕсли;
			
		Иначе // не отражается в НУ, но отражается в БУ
			
			СчетЗатратНУПоСчетуБУ = НайтиСчетНУ(СтрокаЗатрат.СчетЗатрат);
			
			Если ЗначениеЗаполнено(СчетЗатратНУПоСчетуБУ) Тогда
				// В НУ - это расходы будущих периодов (не затраты), а в БУ - затраты.
				// Для целей НУ это - не затраты, поэтому сумма по НУ в регистре не нужна.
				СтрокаЗатрат.СуммаНал   = 0;
				СтрокаЗатрат.СуммаБух   = СтрокаЗатрат.СуммаРегл;
				СтрокаЗатрат.СуммаРегл  = 0; // Этим мы говорим, что суммы в БУ и НУ - разные.
				// При формировании движений по разделу учета Затраты регистра УчетЗатрат требуется, 
				// чтобы счет налогового учета был счетом затрат.
				СтрокаЗатрат.СчетЗатратНУ       = СчетЗатратНУПоСчетуБУ;
			КонецЕсли;
		КонецЕсли;
		
		// Рассчитаем сумму временной разницы, исходя из того, что
		// 1. БУ = НУ+ВР+ПР
		// 2. в этом документе ПР = 0
		СтрокаЗатрат.ВременнаяРазница = СтрокаЗатрат.СуммаБух - СтрокаЗатрат.СуммаНал;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПРГ_проверитьЗаполнениеСубконт()
	кол=ОтражениеВУчете.Количество();
	сч=0;
	счет7001=ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
	счет96=ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов;
	счет6801=ПланыСчетов.Хозрасчетный.НДФЛ;
	сч200101 =  ПланыСчетов.Хозрасчетный.ОсновноеПроизводствоНеОблагаемоеЕНВД;
	сч2301 =  ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводстваНеОблагаемоеЕНВД;
	сч2901 =  ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводстваНеОблагаемоеЕНВД;
	сч200101НУ =  ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства;
	сч2301НУ =  ПланыСчетов.Налоговый.ПрямыеРасходыВспомогательныхПроизводств;
	сч2901НУ =  ПланыСчетов.Налоговый.ПрямыеРасходыОбслуживающихПроизводств;
    сч69 =  ПланыСчетов.Хозрасчетный.ФСС; //Blik 111115 н 45920
	Сч69НУ = ПланыСчетов.Налоговый.ФСС;
	Сч70НУ = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда; //Blik 111115 к 45920
	
	Для каждого стр Из ОтражениеВУчете Цикл
		сч=сч+1;
		
		состояние("проверка заполнения субконто: "+строка(сч)+" из  "+строка(кол));
		Если стр.СчетДт=счет7001 тогда
			
			НайденнаяСтрокаДТ =стр.СчетДт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения);
			Если не НайденнаяСтрокаДТ = Неопределено Тогда
				Если не значениезаполнено(стр["СубконтоДт"+НайденнаяСтрокаДТ.НомерСтроки]) и ЗначениеЗаполнено(стр.ПодразделениеДт) тогда
					стр["СубконтоДт"+НайденнаяСтрокаДТ.НомерСтроки]= стр.ПодразделениеДт;
				КонецЕсли;	
				Если значениезаполнено(стр["СубконтоДт"+НайденнаяСтрокаДТ.НомерСтроки]) и  не ЗначениеЗаполнено(стр.ПодразделениеДт) тогда
					стр.ПодразделениеДт=стр["СубконтоДт"+НайденнаяСтрокаДТ.НомерСтроки] ;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
       Если стр.СчетКт=счет7001 тогда
		  	НайденнаяСтрокаКТ = стр.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения);
			Если не НайденнаяСтрокаКТ = Неопределено Тогда
				Если не значениезаполнено(стр["СубконтоКт"+НайденнаяСтрокаКТ.НомерСтроки])  и ЗначениеЗаполнено(стр.ПодразделениеКт) тогда
					стр["СубконтоКт"+НайденнаяСтрокаКТ.НомерСтроки]= стр.ПодразделениеКт;
				КонецЕсли;		
				Если значениезаполнено(стр["СубконтоКт"+НайденнаяСтрокаКТ.НомерСтроки])  и не ЗначениеЗаполнено(стр.ПодразделениеКт) тогда
					стр.ПодразделениеКт=стр["СубконтоКт"+НайденнаяСтрокаКТ.НомерСтроки] ;
				КонецЕсли;		

			КонецЕсли;		
		КонецЕсли;
		Если стр.СчетКт=счет6801 тогда
		  		Если не значениезаполнено(стр.СубконтоКт2)  и ЗначениеЗаполнено(стр.ПодразделениеДт) тогда
					стр.СубконтоКт2= стр.ПодразделениеДт.AVT_ИФНС;
				КонецЕсли;		
		КонецЕсли;
		Если стр.СчетДт=сч200101 тогда  //Blik 290514 нач \
			Если  значениезаполнено(стр.СубконтоДт2)  тогда
				стр.СубконтоДт2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетКт=сч200101 тогда  
			Если  значениезаполнено(стр.СубконтоКт2)  тогда
				стр.СубконтоКт2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетДт=сч2301 тогда  
			Если  значениезаполнено(стр.СубконтоДт2)  тогда
				стр.СубконтоДт2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетКт=сч2301 тогда  
			Если  значениезаполнено(стр.СубконтоКт2)  тогда
				стр.СубконтоКт2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетДт=сч2901 тогда  
			Если  значениезаполнено(стр.СубконтоДт2)  тогда
				стр.СубконтоДт2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетКт=сч2901 тогда  
			Если  значениезаполнено(стр.СубконтоКт2)  тогда
				стр.СубконтоКт2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли; 
			Если стр.СчетДтНУ=сч200101НУ тогда  
			Если  значениезаполнено(стр.СубконтоДтНУ2)  тогда
				стр.СубконтоДтНУ2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетКтНУ=сч200101НУ тогда  
			Если  значениезаполнено(стр.СубконтоКтНУ2)  тогда
				стр.СубконтоКтНУ2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетДтНУ=сч2301НУ тогда  
			Если  значениезаполнено(стр.СубконтоДтНУ2)  тогда
				стр.СубконтоДтНУ2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетКтНУ=сч2301НУ тогда  
			Если  значениезаполнено(стр.СубконтоКтНУ2)  тогда
				стр.СубконтоКтНУ2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетДтНУ=сч2901НУ тогда  
			Если  значениезаполнено(стр.СубконтоДтНУ2)  тогда
				стр.СубконтоДтНУ2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		Если стр.СчетКтНУ=сч2901НУ тогда  
			Если  значениезаполнено(стр.СубконтоКтНУ2)  тогда
				стр.СубконтоКтНУ2= Справочники.НоменклатурныеГруппы.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;//Blik 290514 кон /
        //Blik 111115 н 45920
		Если стр.СчетДт = сч69 и Стр.СчетКт = счет7001 Тогда
			Если не значениезаполнено(стр.СчетДтНУ) Тогда
				стр.СчетДтНУ = Сч69НУ;
			КонецЕсли;
			Если не значениезаполнено(стр.СчетКтНУ) Тогда
				стр.СчетКтНУ = Сч70НУ;
			КонецЕсли;
		КонецЕсли;
        //Blik 111115 к 45920

		//
		проверитьСтрокуНаПодразделениеИПодменитьНаЗатратное(стр,"ДТ") ;
		проверитьСтрокуНаПодразделениеИПодменитьНаЗатратное(стр,"КТ") ;
		проверитьСтрокуНаПодразделениеИПодменитьНаЗатратное(стр,"ДТНУ") ;
		проверитьСтрокуНаПодразделениеИПодменитьНаЗатратное(стр,"КТНУ") ;

		
		
		
		если стр.СчетДт=счет96 или стр.СчетКт=счет96 тогда
			стр.Сумма=0;
			
		КонецЕсли;	
		

		
		
	КонецЦикла;
    ПроставитьСтатьиЗатратВОтражениеУчета();
//	
КонецПроцедуры

///Вадим 19.02.2014 11:56:12   бп 
Процедура проверитьСтрокуНаПодразделениеИПодменитьНаЗатратное(стр,ПризнакУчета)
	
	НайденнаяСтрока = стр["Счет"+ПризнакУчета].ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПодразделениеОрганизации);
	Если не НайденнаяСтрока = Неопределено Тогда
		ТекЗнч=стр["Субконто"+ПризнакУчета+НайденнаяСтрока.НомерСтроки];
		Если не ЗначениеЗаполнено(ТекЗнч) тогда
			ТекЗнч=стр["Подразделение"+?(ПризнакУчета="ДТНУ" или ПризнакУчета="ДТ","ДТ","КТ")];
		КонецЕсли;	
		Если ЗначениеЗаполнено(ТекЗнч) тогда
			Если ЭтоПодразделениеКадров(ТекЗнч) тогда
				стр["Субконто"+ПризнакУчета+НайденнаяСтрока.НомерСтроки]= получитьПодразделениеЗатрат(ТекЗнч);
			КонецЕсли;			
		КонецЕсли;			
		
	КонецЕсли;	
	
	НайденнаяСтрока = стр["Счет"+ПризнакУчета].ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения);
	Если не НайденнаяСтрока = Неопределено Тогда
		ТекЗнч=стр["Субконто"+ПризнакУчета+НайденнаяСтрока.НомерСтроки];
		Если не ЗначениеЗаполнено(ТекЗнч) тогда
			ТекЗнч=стр["Подразделение"+?(ПризнакУчета="ДТНУ" или ПризнакУчета="ДТ","ДТ","КТ")];
		КонецЕсли;	
		Если ЗначениеЗаполнено(ТекЗнч) тогда
			Если ЭтоПодразделениеКадров(ТекЗнч) тогда
				стр["Субконто"+ПризнакУчета+НайденнаяСтрока.НомерСтроки]= получитьПодразделениеЗатрат(ТекЗнч);
			КонецЕсли;			
		КонецЕсли;			
		
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,счетДТ,СчетКТ,НаименованиеСтатьи)
    статья=Справочники.СтатьиЗатрат.НайтиПоНаименованию(НаименованиеСтатьи);
	
	ЗапросДТ = Новый Запрос;
	ЗапросДТ.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Ссылка)";

	ЗапросДТ.УстановитьПараметр("Ссылка", ПланыСчетов.Хозрасчетный.НайтиПоКоду(счетДТ));

	РезультатДТ = ЗапросДТ.Выполнить();

	ВыборкаДетальныеЗаписиДТ = РезультатДТ.Выбрать();

	Пока ВыборкаДетальныеЗаписиДТ.Следующий() Цикл
		ЗапросКТ = Новый Запрос;
		ЗапросКТ.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Ссылка)";
		
		ЗапросКТ.УстановитьПараметр("Ссылка", ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетКТ));
		
		РезультатКТ = ЗапросКТ.Выполнить();
		
		ВыборкаДетальныеЗаписиКТ = РезультатКТ.Выбрать();
		
		Пока ВыборкаДетальныеЗаписиКТ.Следующий() Цикл
			нов=тз.добавить();
			Нов.счетДТ=ВыборкаДетальныеЗаписиДТ.ссылка;
			Нов.счетКТ=ВыборкаДетальныеЗаписиКТ.ссылка;
			Нов.Статья=статья;
			
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ПроставитьСтатьиЗатратВОтражениеУчета()
	ТЗ=Новый ТаблицаЗначений;
	тз.Колонки.Добавить("СчетДТ");
	тз.Колонки.Добавить("СчетКТ");
	тз.Колонки.Добавить("Статья");
	
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"20.01.1","69.01","Страховые взносы в ФСС производственных рабочих");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"23","69.01","Страховые взносы в ФСС");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"25","69.01","Страховые взносы в ФСС");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"26","69.01","Страховые взносы в ФСС");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"29","69.01","Страховые взносы в ФСС");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"44.02.1","69.01","Страховые взносы в ФСС");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"20.01.1","69.03","Страховые взносы в ФФОМС производственных рабочих");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"23","69.03","Страховые взносы в ФФОМС");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"25","69.03","Страховые взносы в ФФОМС" );
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"26","69.03","Страховые взносы в ФФОМС");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"29","69.03","Страховые взносы в ФФОМС");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"44.02.1","69.03","Страховые взносы в ФФОМС");
	ДобавитьСтрокуВТЗПОдменыСтатейЗатрат(тз,"44.02.1","69.02.7","Страховые взносы в ПФР"); //Blik 191115 46103

	сч=0;
	//Blik 080615 40523 н
	СтрахФССНС_Н = Справочники.СтатьиЗатрат.НайтиПоКоду("000010290");
	СтрахФССНС_В = Справочники.СтатьиЗатрат.НайтиПоКоду("000010838");
	СтрахФСС_Н = Справочники.СтатьиЗатрат.НайтиПоКоду("000010535");
	СтрахФСС_В = Справочники.СтатьиЗатрат.НайтиПоКоду("000010840");
	СтрахФОМС_Н = Справочники.СтатьиЗатрат.НайтиПоКоду("000010534");
	СтрахФОМС_В = Справочники.СтатьиЗатрат.НайтиПоКоду("000010839");
	СтрахПФР_Н = Справочники.СтатьиЗатрат.НайтиПоКоду("000010291");
	СтрахПФР_В = Справочники.СтатьиЗатрат.НайтиПоКоду("000010837");
	//Blik 080615 40523 к
	
	Для каждого стр Из ОтражениеВУчете Цикл
		сч=сч+1;
		состояние( "проставляем статьи затрат: "+строка(сч)+" из "+Строка(тз.Количество()));
		найденныеСтроки=тз.НайтиСтроки(новый Структура("счетДТ,СчетКТ",стр.СчетДт,стр.СчетКт));
		Если найденныеСтроки.Количество()=0 тогда
			Продолжить;
		Конецесли;
		НайденнаяСубконто = стр.СчетДт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
		Если не НайденнаяСубконто = Неопределено Тогда
			стр["СубконтоДТ"+СокрЛП(НайденнаяСубконто.НомерСтроки)]= найденныеСтроки[0].Статья;
		КонецЕсли;
		НайденнаяСубконто = стр.СчетДтНУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
		Если не НайденнаяСубконто = Неопределено Тогда
			стр["СубконтоДтНУ"+СокрЛП(НайденнаяСубконто.НомерСтроки)]= найденныеСтроки[0].Статья;
		КонецЕсли;
		
		//Blik 080615 40523 н	
		Если стр.СчетДт = ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводстваНеОблагаемоеЕНВД Тогда	
			//БУ
			Если стр.СубконтоДт3 = СтрахФССНС_Н Тогда
				стр.СубконтоДт3 = СтрахФССНС_В;
				стр.СпособРаспределенияЗатрат = СтрахФССНС_В;
			КонецЕсли;
			Если стр.СубконтоДт3 = СтрахФСС_Н Тогда
				стр.СубконтоДт3 = СтрахФСС_В;
				стр.СпособРаспределенияЗатрат = СтрахФСС_В;
			КонецЕсли;
			Если стр.СубконтоДт3 = СтрахФОМС_Н Тогда
				стр.СубконтоДт3 = СтрахФОМС_В;
				стр.СпособРаспределенияЗатрат = СтрахФОМС_В;
			КонецЕсли;
			Если стр.СубконтоДт3 = СтрахПФР_Н Тогда
				стр.СубконтоДт3 = СтрахПФР_В;
				стр.СпособРаспределенияЗатрат = СтрахПФР_В;
			КонецЕсли;
			//НУ
			Если стр.СубконтоДтНУ3 = СтрахФССНС_Н Тогда
				стр.СубконтоДтНУ3 = СтрахФССНС_В;
			КонецЕсли;
			Если стр.СубконтоДтНУ3 = СтрахФСС_Н Тогда
				стр.СубконтоДтНУ3 = СтрахФСС_В;
			КонецЕсли;
			Если стр.СубконтоДтНУ3 = СтрахФОМС_Н Тогда
				стр.СубконтоДтНУ3 = СтрахФОМС_В;
			КонецЕсли;
			Если стр.СубконтоДтНУ3 = СтрахПФР_Н Тогда
				стр.СубконтоДтНУ3 = СтрахПФР_В;
			КонецЕсли;
		КонецЕсли;
		//Blik 080615 40523 к
		
		//найденныеСтроки=ОтражениеВУчете.НайтиСтроки(новый Структура("СчетДт,СчетКт",стр.СчетДт,стр.СчетКт));
		//Если найденныеСтроки.Количество()=0 тогда
		//	Продолжить;
		//Конецесли;
		//для ии=0 по найденныеСтроки.Количество()-1 цикл
		//	строкаОтражения=ОтражениеВУчете[ии];
		//	НайденнаяСубконто = строкаОтражения.СчетДт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
		//	Если не НайденнаяСубконто = Неопределено Тогда
		//		строкаОтражения["СубконтоДТ"+НайденнаяСубконто.НомерСтроки]= стр.Статья;
		//	КонецЕсли;
		//КонецЦикла;	
	КонецЦикла;
	
	
КонецПроцедуры
//ВадимКонец



/////Вадим 10.02.2014 8:16:07  бп 
Функция ЭтоПодразделениеКадров(Подразделение)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"                                    ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Ссылка В ИЕРАРХИИ(&ПодразделениеКадров)
	|	И ПодразделенияОрганизаций.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("ПодразделениеКадров", Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000104"));
	Запрос.УстановитьПараметр("Ссылка", Подразделение);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() тогда
		возврат истина;
	иначе
		возврат ложь;
		
	КонецЕсли;
	
	
	
	
КонецФункции 
// ЭтоПодразделениеКадров() ВадимКонец


Функция получитьПодразделениеЗатрат(ПодразделениеОрганизации)
    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеЗатрат
		|ИЗ
		|	РегистрСведений.ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета КАК ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета
		|ГДЕ
		|	ПРГ_СоответствиеПодразделенийЗатратИПодразделенийКадровогоУчета.ПодразделениеКадровогоУчета = &ПодразделениеКадровогоУчета";

	Запрос.УстановитьПараметр("ПодразделениеКадровогоУчета", ПодразделениеОрганизации);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() тогда
		возврат ВыборкаДетальныеЗаписи.ПодразделениеЗатрат;
	Иначе	
		сообщить("Не найдено подразделение затрат для "+ПодразделениеОрганизации.наименование+" код "+ПодразделениеОрганизации.код);
		возврат ПодразделениеОрганизации;
	КонецЕсли;
 

КонецФункции 


/////Вадим 28.10.2012 14:39:09
Функция ПРГ_ПолучитьПодразделениеФизЛица(Физлицо)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Физлицо", Физлицо);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонецПериода, Сотрудник.Физлицо В (&Физлицо)) КАК РаботникиОрганизаций
	|ГДЕ
	|	НЕ РаботникиОрганизаций.ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.пустаяссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизаций.Период УБЫВ";
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() тогда
		возврат Выборка.ПодразделениеОрганизации;
	иначе
		сообщить("Не найлено подразделение для "+строка(Физлицо)+" на "+КонецМесяца(ПериодРегистрации));
		возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;	

	

КонецФункции 	

///Вадим 19.02.2014 9:32:10   бп 
Процедура ДопПроверкаЗаполненияТабЧастей()
	ПроверитьСторнируемыеДоговора();	
	ПровритьДоговораГПХ();//Blik 071215 46794

КонецПроцедуры
//ВадимКонец
///Вадим 19.02.2014 9:32:43   бп 
Процедура ПроверитьСторнируемыеДоговора()
    найденныеСтроки=ДополнительныеНачисления.НайтиСтроки(новый Структура("ВидРасчета,Сторно",ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций.ДоговорПодряда,Истина));
	для сч=0 по найденныеСтроки.Количество()-1 цикл
		стр=найденныеСтроки[сч];
		/////находим строку в начисление и получаем договор
		СтрокаНачисления=стр.ДокументОснование.ДоговорыНаВыполнениеРабот.найтиСтроки(новый Структура("Сотрудник,ВидРасчета,Сторно,Результат",стр.Сотрудник,ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций.ДоговорПодряда,Истина,стр.Результат));
		Если СтрокаНачисления.количество()>0 тогда
			СпособОтраженияЗП=СтрокаНачисления[0].ДокументОснование.СпособОтраженияВБухучете;
			ПроверитьЗаполненияБухАналитики(стр,СпособОтраженияЗП,"ДТ");
			ПроверитьЗаполненияБухАналитики(стр,СпособОтраженияЗП,"КТ");
			ПроверитьЗаполненияБухАналитики(стр,СпособОтраженияЗП,"ДТНУ");
			ПроверитьЗаполненияБухАналитики(стр,СпособОтраженияЗП,"КТНУ");
				
		КонецЕсли;	
		
	Конеццикла;	
КонецПроцедуры
//Blik 071215 46794 н
 Процедура ПровритьДоговораГПХ()
    найденныеСтроки=ДополнительныеНачисления.НайтиСтроки(новый Структура("ВидРасчета,Сторно",ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций.ДоговорПодряда,Ложь));
	для сч=0 по найденныеСтроки.Количество()-1 цикл
		стр=найденныеСтроки[сч];
		/////находим строку в начисление и получаем договор
		СтрокаНачисления=стр.ДокументОснование.ДоговорыНаВыполнениеРабот.найтиСтроки(новый Структура("Сотрудник,ВидРасчета,Сторно,Результат",стр.Сотрудник,ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций.ДоговорПодряда,Ложь,стр.Результат));
		Если СтрокаНачисления.количество()>0 тогда
			СпособОтраженияЗП=СтрокаНачисления[0].ДокументОснование.СпособОтраженияВБухучете;
			ПроверитьЗаполненияБухАналитики(стр,СпособОтраженияЗП,"ДТ");
			ПроверитьЗаполненияБухАналитики(стр,СпособОтраженияЗП,"КТ");
			ПроверитьЗаполненияБухАналитики(стр,СпособОтраженияЗП,"ДТНУ");
			ПроверитьЗаполненияБухАналитики(стр,СпособОтраженияЗП,"КТНУ");
				
		КонецЕсли;	
		
	Конеццикла;	
КонецПроцедуры
//Blik 071215 46794 к

//ВадимКонец
///Вадим 19.02.2014 9:52:41   бп 
Процедура ПроверитьЗаполненияБухАналитики(ЭлементПроверки,СпособОтражения,ПризнакУчета)
	
	Если не ЭлементПроверки["Счет"+ПризнакУчета]=СпособОтражения["Счет"+ПризнакУчета] тогда
		ЭлементПроверки["Счет"+ПризнакУчета]=СпособОтражения["Счет"+ПризнакУчета];
	Конецесли;
	счет=ЭлементПроверки["Счет"+ПризнакУчета];
	если не счет.ВидыСубконто.Количество()=0 тогда
		для ии=1 по счет.ВидыСубконто.Количество() цикл
			текЗнч=ЭлементПроверки["Субконто"+ПризнакУчета+строка(ии)];
			Если не ЭлементПроверки["Субконто"+ПризнакУчета+строка(ии)]=СпособОтражения["Субконто"+ПризнакУчета+строка(ии)] тогда
				ЭлементПроверки["Субконто"+ПризнакУчета+строка(ии)]=СпособОтражения["Субконто"+ПризнакУчета+строка(ии)];
			Конецесли;
			
		конеццикла;		
	Конецесли;
	
	
	
КонецПроцедуры
//ВадимКонец

// Функция формирует текст запроса по начисления
//
// Возвращаемое значение:
//   Строка   - Текст запрос
Функция Авт_ПолучитьТекстЗапросаПоНачислениям2011()

	// Запрос учитывает превышение сумм накопленного резерва
	// разница сумм учитывается на затратных счетах
	
	Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	МАКСИМУМ(УчетнаяПолитикаПоРБП.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТ_ПериодыРБП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_Периоды.Период >= УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыРБП.Период КАК Период,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРБП.РасходыПоОтпускам, ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеНачисления)) КАК РасходыПоОтпускам
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаПоРБП
	|ИЗ
	|	ВТ_ПериодыРБП КАК ВТ_ПериодыРБП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРБП КАК УчетнаяПолитикаПоРБП
	|		ПО ВТ_ПериодыРБП.ПериодРегистра = УчетнаяПолитикаПоРБП.Период
	|			И (УчетнаяПолитикаПоРБП.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	МАКСИМУМ(УчетнаяПолитикаПоОО.Период) КАК ПериодРегистра
	|ПОМЕСТИТЬ ВТ_ПериодыОО
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоОценочнымОбязательствам КАК УчетнаяПолитикаПоОО
	|		ПО ВТ_Периоды.Период >= УчетнаяПолитикаПоОО.Период
	|			И (УчетнаяПолитикаПоОО.Организация = &парамГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыОО.Период КАК Период,
	|	ЕСТЬNULL(УчетнаяПолитикаПоОО.ФормироватьБУ, ЛОЖЬ) КАК ФормироватьБУ,
	|	ЕСТЬNULL(УчетнаяПолитикаПоОО.ФормироватьНУ, ЛОЖЬ) КАК ФормироватьНУ,
	|	ЕСТЬNULL(УчетнаяПолитикаПоОО.ОценочноеОбязательствоДляОтпуска, ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка)) КАК ОценочноеОбязательствоДляОтпуска
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаПоОО
	|ИЗ
	|	ВТ_ПериодыОО КАК ВТ_ПериодыОО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоОценочнымОбязательствам КАК УчетнаяПолитикаПоОО
	|		ПО ВТ_ПериодыОО.ПериодРегистра = УчетнаяПолитикаПоОО.Период
	|			И (УчетнаяПолитикаПоОО.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыОтпускаНаЗатратныхСчетахОбороты.Организация,
	|	СуммыОтпускаНаЗатратныхСчетахОбороты.Сотрудник,
	|	СуммыОтпускаНаЗатратныхСчетахОбороты.ФизЛицо,
	|	СуммыОтпускаНаЗатратныхСчетахОбороты.ПериодРегистрации,
	|	СуммыОтпускаНаЗатратныхСчетахОбороты.СуммаОборот
	|ПОМЕСТИТЬ Вт_СуммыОтпускныхНаЗатратныхСчетах
	|ИЗ
	|	РегистрНакопления.Авт_СуммыОтпускаНаЗатратныхСчетах.Обороты(&парамПериодРегистрации, , Месяц, ) КАК СуммыОтпускаНаЗатратныхСчетахОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУНачисления.СчетДт КАК СчетДт,
	|	БУНачисления.СубконтоДт1 КАК СубконтоДт1,
	|	БУНачисления.СубконтоДт2 КАК СубконтоДт2,
	|	БУНачисления.СубконтоДт3 КАК СубконтоДт3,
	|	БУНачисления.СчетКт КАК СчетКт,
	|	БУНачисления.СубконтоКт1 КАК СубконтоКт1,
	|	БУНачисления.СубконтоКт2 КАК СубконтоКт2,
	|	БУНачисления.СубконтоКт3 КАК СубконтоКт3,
	|	БУНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|	БУНачисления.СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|	БУНачисления.СчетКтНУ,
	|	БУНачисления.СубконтоКтНУ1,
	|	БУНачисления.СубконтоКтНУ2,
	|	БУНачисления.СубконтоКтНУ3,
	|	БУНачисления.ОтражениеВУСН,
	|	СУММА(БУНачисления.Результат) КАК Результат,
	|	БУНачисления.ИПВидыНачисленийУдержаний КАК ИПВидНачисленияУдержания,
	|	БУНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|	БУНачисления.ПодразделениеКт,
	|	БУНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	СУММА(БУНачисления.СуммаНУ) КАК СуммаНУ,
	|	СУММА(БУНачисления.СуммаПР) КАК СуммаПР,
	|	СУММА(БУНачисления.СуммаВР) КАК СуммаВР,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84,
	|	ЕСТЬNULL(БУНачисления.СубконтоДт1.ПринятиеКналоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|	БУНачисления.РасходыПоОтпускам КАК ПорядокПризнанияРасходовПоОтпускам,
	|	БУНачисления.ЭтоРБП,
	|	БУНачисления.Физлицо,
	|	БУНачисления.ЭтоОтпуск,
	|	БУНачисления.ВидСтроки,
	|	БУНачисления.ФормироватьБУ,
	|	БУНачисления.ФормироватьНУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.СчетДт КАК СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУОсновныеНачисления.СчетКт КАК СчетКт,
	|		БУОсновныеНачисления.СубконтоКт1 КАК СубконтоКт1,
	|		БУОсновныеНачисления.СубконтоКт2 КАК СубконтоКт2,
	|		БУОсновныеНачисления.СубконтоКт3 КАК СубконтоКт3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СчетКтНУ КАК СчетКтНУ,
	|		БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
	|		БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
	|		БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.ФизЛицо КАК Физлицо,
	|		БУОсновныеНачисления.Результат - ЕСТЬNULL(Вт_СуммыОтпускныхНаЗатратныхСчетах.СуммаОборот, 0) КАК Результат,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ КАК ИПВидыНачисленийУдержаний,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт,
	|		БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК КАК ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУОсновныеНачисления.СуммаНУ КАК СуммаНУ,
	|		БУОсновныеНачисления.СуммаПР КАК СуммаПР,
	|		БУОсновныеНачисления.СуммаВР КАК СуммаВР,
	|		ВЫБОР
	|			КОГДА &парамФормироватьРБП
	|					И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|					И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЭтоРБП,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработкуОтпуска)
	|					И БУОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение)
	|					И БУОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЭтоОтпуск,
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ПустаяСсылка) КАК РасходыПоОтпускам,
	|		""РасходыТекущегоПериода"" КАК ВидСтроки,
	|		ЛОЖЬ КАК ФормироватьБУ,
	|		ЛОЖЬ КАК ФормироватьНУ
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ Вт_СуммыОтпускныхНаЗатратныхСчетах КАК Вт_СуммыОтпускныхНаЗатратныхСчетах
	|			ПО БУОсновныеНачисления.Сотрудник = Вт_СуммыОтпускныхНаЗатратныхСчетах.Сотрудник
	|				И БУОсновныеНачисления.ПериодРегистрации = Вт_СуммыОтпускныхНаЗатратныхСчетах.ПериодРегистрации
	|				И (БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке)))
	|	ГДЕ
	|		БУОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамСдельныйЗаработок
	|		И (НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3,
	|		БУОсновныеНачисления.СчетКт,
	|		БУОсновныеНачисления.СубконтоКт1,
	|		БУОсновныеНачисления.СубконтоКт2,
	|		БУОсновныеНачисления.СубконтоКт3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3,
	|		БУОсновныеНачисления.СчетКтНУ,
	|		БУОсновныеНачисления.СубконтоКтНУ1,
	|		БУОсновныеНачисления.СубконтоКтНУ2,
	|		БУОсновныеНачисления.СубконтоКтНУ3,
	|		БУОсновныеНачисления.ОтражениеВУСН,
	|		БУОсновныеНачисления.ФизЛицо,
	|		ЕСТЬNULL(Вт_СуммыОтпускныхНаЗатратныхСчетах.СуммаОборот, 0),
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ,
	|		БУОсновныеНачисления.ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт,
	|		БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУОсновныеНачисления.СуммаНУ,
	|		БУОсновныеНачисления.СуммаПР,
	|		БУОсновныеНачисления.СуммаВР,
	|		ВЫБОР
	|			КОГДА &парамФормироватьРБП
	|					И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|					И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ЛОЖЬ,
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ПустаяСсылка),
	|		""РасходыТекущегоПериода"",
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Вт_СуммыОтпускныхНаЗатратныхСчетах КАК Вт_СуммыОтпускныхНаЗатратныхСчетах
	|			ПО БУОсновныеНачисления.Сотрудник = Вт_СуммыОтпускныхНаЗатратныхСчетах.Сотрудник
	|				И БУОсновныеНачисления.ПериодРегистрации = Вт_СуммыОтпускныхНаЗатратныхСчетах.ПериодРегистрации
	|				И (БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке)))
	|	ГДЕ
	|		БУОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамСдельныйЗаработок
	|		И (НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3,
	|		&Счет97,
	|		&РБПНаОплатуТруда,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.СубконтоКт3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА &СчетН97
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА &РБПНаОплатуТруда
	|			ИНАЧЕ БУОсновныеНачисления.СубконтоКтНУ1
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.ФизЛицо
	|			ИНАЧЕ БУОсновныеНачисления.СубконтоКтНУ2
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.СчетДтНУ <> ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|				ТОГДА БУОсновныеНачисления.СубконтоКтНУ2
	|			ИНАЧЕ БУОсновныеНачисления.СубконтоКтНУ3
	|		КОНЕЦ,
	|		БУОсновныеНачисления.ОтражениеВУСН,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.Результат,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ,
	|		БУОсновныеНачисления.ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт,
	|		БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУОсновныеНачисления.СуммаНУ,
	|		БУОсновныеНачисления.СуммаПР,
	|		БУОсновныеНачисления.СуммаВР,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ПустаяСсылка),
	|		""СписаниеИзРБП2010"",
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|	ГДЕ
	|		БУОсновныеНачисления.ПериодРегистрации < &ДатаДействияПриказа186Н
	|		И БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|		И БУОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамСдельныйЗаработок
	|		И (НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3,
	|		БУОсновныеНачисления.СчетКт,
	|		БУОсновныеНачисления.СубконтоКт1,
	|		БУОсновныеНачисления.СубконтоКт2,
	|		БУОсновныеНачисления.СубконтоКт3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3,
	|		БУОсновныеНачисления.СчетКтНУ,
	|		БУОсновныеНачисления.СубконтоКтНУ1,
	|		БУОсновныеНачисления.СубконтоКтНУ2,
	|		БУОсновныеНачисления.СубконтоКтНУ3,
	|		БУОсновныеНачисления.ОтражениеВУСН,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.Результат,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ,
	|		БУОсновныеНачисления.ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт,
	|		БУОсновныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУОсновныеНачисления.СуммаНУ,
	|		БУОсновныеНачисления.СуммаПР,
	|		БУОсновныеНачисления.СуммаВР,
	|		ЛОЖЬ,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработкуОтпуска)
	|					И БУОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение)
	|					И БУОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ПериодыРБП.РасходыПоОтпускам,
	|		""СписаниеИзРБП"",
	|		ПериодыОО.ФормироватьБУ,
	|		ПериодыОО.ФормироватьНУ
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаПоРБП КАК ПериодыРБП
	|			ПО БУОсновныеНачисления.ПериодРегистрации = ПериодыРБП.Период
	|				И (ПериодыРБП.РасходыПоОтпускам <> ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ВМесяцеНачисления))
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаПоОО КАК ПериодыОО
	|			ПО БУОсновныеНачисления.ПериодРегистрации = ПериодыОО.Период
	|	ГДЕ
	|		БУОсновныеНачисления.ПериодРегистрации >= &ДатаДействияПриказа186Н
	|		И БУОсновныеНачисления.ПериодРегистрации < &парамПериодРегистрации
	|		И БУОсновныеНачисления.ПериодДействия = &парамПериодРегистрации
	|		И БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ВидРасчета.СпособРасчета <> &парамСдельныйЗаработок
	|		И (НЕ БУОсновныеНачисления.СчетДт В (&СчетаИсключенияРБП))
	|		И (НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|		И (НЕ ПериодыРБП.Период ЕСТЬ NULL )
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетКт,
	|		БУДополнительныеНачисления.СубконтоКт1,
	|		БУДополнительныеНачисления.СубконтоКт2,
	|		БУДополнительныеНачисления.СубконтоКт3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СчетКтНУ,
	|		БУДополнительныеНачисления.СубконтоКтНУ1,
	|		БУДополнительныеНачисления.СубконтоКтНУ2,
	|		БУДополнительныеНачисления.СубконтоКтНУ3,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.Результат,
	|		ВЫБОР
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоПовременно)
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоСдельно)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИПВидыНачисленийУдержаний.НачисленоДругое)
	|		КОНЕЦ,
	|		БУДополнительныеНачисления.ПодразделениеДт,
	|		БУДополнительныеНачисления.ПодразделениеКт,
	|		БУДополнительныеНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|		БУДополнительныеНачисления.СуммаНУ,
	|		БУДополнительныеНачисления.СуммаПР,
	|		БУДополнительныеНачисления.СуммаВР,
	|		ЛОЖЬ,
	|		ВЫБОР
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработкуОтпуска)
	|					И БУДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПризнанияРасходовПоОтпускам.ПустаяСсылка),
	|		""РасходыТекущегоПериода"",
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
	|		И БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И (НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)) КАК БУНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО БУНачисления.СчетДт = ВТ_Счета84.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	БУНачисления.СчетДт,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	БУНачисления.СчетКт,
	|	БУНачисления.СубконтоКт1,
	|	БУНачисления.СубконтоКт2,
	|	БУНачисления.СубконтоКт3,
	|	БУНачисления.СпособРаспределенияЗатрат,
	|	БУНачисления.СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	|	БУНачисления.СубконтоКтНУ1,
	|	БУНачисления.СубконтоКтНУ2,
	|	БУНачисления.СубконтоКтНУ3,
	|	БУНачисления.ОтражениеВУСН,
	|	БУНачисления.СчетКтНУ,
	|	БУНачисления.ИПВидыНачисленийУдержаний,
	|	БУНачисления.ПодразделениеДт,
	|	БУНачисления.ПодразделениеКт,
	|	БУНачисления.ВидНачисленийОплатыТрудаПоСтатье255НК,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	БУНачисления.РасходыПоОтпускам,
	|	БУНачисления.ЭтоРБП,
	|	БУНачисления.Физлицо,
	|	БУНачисления.ЭтоОтпуск,
	|	БУНачисления.ВидСтроки,
	|	БУНачисления.ФормироватьБУ,
	|	БУНачисления.ФормироватьНУ,
	|	ЕСТЬNULL(БУНачисления.СубконтоДт1.ПринятиеКналоговомуУчету, ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетДт,
	|	ПодразделениеДт,
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3,
	|	СчетКт,
	|	СубконтоКт1,
	|	СубконтоКт2,
	|	СубконтоКт3
	|АВТОУПОРЯДОЧИВАНИЕ";
		
	Возврат Текст;

КонецФункции // Авт_ПолучитьТекстЗапросаПоНачислениям2011()

///Вадим 24.01.2014 13:31:45   бп 
Процедура ПростановкаДанныхДляУдержанийГПХ(ДанныеУчета,СтрокаДанных)
	///СтрокаДанных.СчетДт
	структураКонтрагента=получитьКонтрагентаИДоговорИзРазовогоУдержания(ДанныеУчета.Регистратор);
	Если структураКонтрагента=Неопределено тогда
		сообщить("не найдены данные для удержаний по ГПХ в документе "+СокрЛП(ДанныеУчета.Регистратор));
		возврат;
	Конецесли;
	//подразделениеФизЛица=ПРГ_ПолучитьПодразделениеФизЛица(ДанныеУчета.ФизЛицо);
	//
	//Если ЗначениеЗаполнено(подразделениеФизЛица) тогда
	//проверитьСчетНаСубконто(СтрокаДанных,СтрокаДанных.СчетДт,"СубконтоДт",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения,подразделениеФизЛица);
	//проверитьСчетНаСубконто(СтрокаДанных,СтрокаДанных.СчетКт,"СубконтоКт",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения,подразделениеФизЛица);
	//Конецесли;
	Контрагент=структураКонтрагента.РегистрацияРазовыхУдержанийРаботниковОрганизацийКонтрагент;
	
	проверитьСчетНаСубконто(СтрокаДанных,СтрокаДанных.СчетДт,"СубконтоДт",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты,Контрагент);
	проверитьСчетНаСубконто(СтрокаДанных,СтрокаДанных.СчетКт,"СубконтоКт",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты,Контрагент);
	
	Договор=структураКонтрагента.РегистрацияРазовыхУдержанийРаботниковОрганизацийДоговор;
	
	проверитьСчетНаСубконто(СтрокаДанных,СтрокаДанных.СчетДт,"СубконтоДт",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры,Договор);
	проверитьСчетНаСубконто(СтрокаДанных,СтрокаДанных.СчетКт,"СубконтоКт",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры,Договор);
	
		
	
	
КонецПроцедуры
//ВадимКонец

Процедура проверитьСчетНаСубконто(об,счет,субконто,ВидСубконто,Значение)
	НайденнаяСтрока = Счет.ВидыСубконто.Найти(ВидСубконто);
	Если не НайденнаяСтрока = Неопределено Тогда
		ТекСубконто=об[субконто+НайденнаяСтрока.НомерСтроки];
		Если не значениезаполнено(ТекСубконто) тогда
			об[субконто+НайденнаяСтрока.НомерСтроки]= Значение;
		КонецЕсли;		
		
	КонецЕсли;		

КонецПроцедуры



/////Вадим 24.01.2014 13:35:37  бп 
Функция получитьКонтрагентаИДоговорИзРазовогоУдержания(ДокументРазНач)
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПРГ_ДополнительныеРеквизитыСправочников.Реквизит,
		|	ПРГ_ДополнительныеРеквизитыСправочников.Значение
		|ИЗ
		|	РегистрСведений.ПРГ_ДополнительныеРеквизитыСправочников КАК ПРГ_ДополнительныеРеквизитыСправочников
		|ГДЕ
		|	ПРГ_ДополнительныеРеквизитыСправочников.Объект = &Объект";

	Запрос.УстановитьПараметр("Объект", ДокументРазНач);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
    структура=Новый Структура;
	пр=ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		структура.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Значение);
		пр=истина;
	КонецЦикла;

	Если пр тогда
    	возврат структура;
	иначе
		возврат Неопределено;
	Конецесли;	

КонецФункции 
// получитьКонтрагентаИДоговорИзРазовогоУдержания() ВадимКонец



/////автоматизация

// Функция формирует тект запроса для отражения социальных налогов 
//
// Параметры:
// 	Запрос  - [Запрос] - Запрос для получения проводок по социальным налогам
//
// Возвращаемое значение:
//   строка   - Текст запроса
Функция Авт_ПолучитьТекстЗапросаПоСоциальнымНалогам(Запрос)

	Запрос.УстановитьПараметр("парПериодРегистрации", ПериодРегистрации);
	
	Текст = "
	//|ВЫБРАТЬ
	//|	Хозрасчетный.Ссылка КАК Ссылка
	//|ПОМЕСТИТЬ ВТ_Счета84
	//|ИЗ
	//|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	//|ГДЕ
	//|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаИсключения)
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Ссылка
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Хозрасчетный.Ссылка КАК Ссылка
	//|ПОМЕСТИТЬ ВТ_Счета69
	//|ИЗ
	//|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	//|ГДЕ
	//|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счета69)
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Ссылка
	//|;
	//|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц,
	|	УчетнаяПолитика.ОрганизацияЯвляетсяПлательщикомЕНВД,
	|	УчетнаяПолитика.ВидТарифаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТ_УчетнаяПолитика
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|			ПО Периоды.Период >= УчетнаяПолитика.Период
	|				И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитика
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитика.Период
	|			И (УчетнаяПолитика.Организация = &парамГоловнаяОрганизация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСкидок.Сотрудник КАК Сотрудник,
	|	ТаблицаСкидок.ВидРасчета КАК ВидРасчета,
	|	ТаблицаСкидок.КодДоходаЕСН КАК КодДоходаЕСН,
	|	ТаблицаСкидок.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ТаблицаСкидок.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|	ТаблицаСкидок.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ТаблицаСкидок.ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаСкидок.Скидка
	|ПОМЕСТИТЬ ВТ_СкидкиКДоходам
	|ИЗ
	|	&ТаблицаСкидок КАК ТаблицаСкидок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	Сотрудник,
	|	ВидРасчета,
	|	КодДоходаЕСН,
	|	ОблагаетсяЕНВД,
	|	ОблагаетсяПоДополнительномуТарифу,
	|	ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыОтпускаНаЗатратныхСчетах.Сотрудник,
	|	СуммыОтпускаНаЗатратныхСчетах.ФизЛицо,
	|	СуммыОтпускаНаЗатратныхСчетах.ПериодРегистрации,
	|	СуммыОтпускаНаЗатратныхСчетах.СуммаОборот КАК СуммаЗатрат
	|ПОМЕСТИТЬ Вт_СуммыЗатратныхСчетов
	|ИЗ
	|	РегистрНакопления.Авт_СуммыОтпускаНаЗатратныхСчетах.Обороты(&парПериодРегистрации, , Месяц, ) КАК СуммыОтпускаНаЗатратныхСчетах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ВидДохода.ВходитВБазуПФР КАК ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС КАК ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС КАК ВходитВБазуФОМС
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыПоВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСНОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		ЕСНОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		ЕСНОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		ЕСНОсновныеНачисления.КодДоходаЕСН КАК ВидДохода,
	|		ЕСНОсновныеНачисления.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ЕСНОсновныеНачисления.ОблагаетсяПоДополнительномуТарифу КАК ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНОсновныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ЕСНОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		ВЫБОР
	|			КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНОсновныеНачисления.Результат - ЕСТЬNULL(Вт_СуммыЗатратныхСчетов.СуммаЗатрат, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Результат
	|	ИЗ
	|		РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ Вт_СуммыЗатратныхСчетов КАК Вт_СуммыЗатратныхСчетов
	|			ПО ЕСНОсновныеНачисления.Сотрудник = Вт_СуммыЗатратныхСчетов.Сотрудник
	|				И ЕСНОсновныеНачисления.ПериодРегистрации = Вт_СуммыЗатратныхСчетов.ПериодРегистрации
	|				И (ЕСНОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке)))
	|	ГДЕ
	|		ЕСНОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНОсновныеНачисления.Сотрудник,
	|		ЕСНОсновныеНачисления.ФизЛицо,
	|		ЕСНОсновныеНачисления.ВидРасчета,
	|		ЕСНОсновныеНачисления.КодДоходаЕСН,
	|		ЕСНОсновныеНачисления.ОблагаетсяЕНВД,
	|		ЕСНОсновныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНОсновныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНОсновныеНачисления.ПериодРегистрации,
	|		ЕСНОсновныеНачисления.ПериодДействия,
	|		ВЫБОР
	|			КОГДА ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНОсновныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСТЬNULL(Вт_СуммыЗатратныхСчетов.СуммаЗатрат, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрРасчета.ЕСНОсновныеНачисления КАК ЕСНОсновныеНачисления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Вт_СуммыЗатратныхСчетов КАК Вт_СуммыЗатратныхСчетов
	|			ПО ЕСНОсновныеНачисления.Сотрудник = Вт_СуммыЗатратныхСчетов.Сотрудник
	|				И ЕСНОсновныеНачисления.ПериодРегистрации = Вт_СуммыЗатратныхСчетов.ПериодРегистрации
	|				И (ЕСНОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке)))
	|	ГДЕ
	|		ЕСНОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСНДополнительныеНачисления.Сотрудник,
	|		ЕСНДополнительныеНачисления.ФизЛицо,
	|		ЕСНДополнительныеНачисления.ВидРасчета,
	|		ЕСНДополнительныеНачисления.КодДоходаЕСН,
	|		ЕСНДополнительныеНачисления.ОблагаетсяЕНВД,
	|		ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу,
	|		ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ЕСНДополнительныеНачисления.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФОМС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуФСС
	|					ИЛИ ЕСНДополнительныеНачисления.КодДоходаЕСН.ВходитВБазуПФР
	|				ТОГДА ЕСНДополнительныеНачисления.Результат - ЕСТЬNULL(ВТ_СкидкиКДоходам.Скидка, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрРасчета.ЕСНДополнительныеНачисления КАК ЕСНДополнительныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкидкиКДоходам КАК ВТ_СкидкиКДоходам
	|			ПО ЕСНДополнительныеНачисления.Сотрудник = ВТ_СкидкиКДоходам.Сотрудник
	|				И ЕСНДополнительныеНачисления.ВидРасчета = ВТ_СкидкиКДоходам.ВидРасчета
	|				И ЕСНДополнительныеНачисления.КодДоходаЕСН = ВТ_СкидкиКДоходам.КодДоходаЕСН
	|				И ЕСНДополнительныеНачисления.ОблагаетсяПоДополнительномуТарифу = ВТ_СкидкиКДоходам.ОблагаетсяПоДополнительномуТарифу
	|				И ЕСНДополнительныеНачисления.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам = ВТ_СкидкиКДоходам.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|				И ЕСНДополнительныеНачисления.ПериодРегистрации = ВТ_СкидкиКДоходам.ПериодРегистрации
	|				И ЕСНДополнительныеНачисления.ОблагаетсяЕНВД = ВТ_СкидкиКДоходам.ОблагаетсяЕНВД
	|	ГДЕ
	|		ЕСНДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И ЕСНДополнительныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ ЕСНДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК Доходы
	|ГДЕ
	|	Доходы.Результат <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ВидДохода,
	|	Доходы.ПериодРегистрации,
	|	Доходы.ПериодДействия,
	|	Доходы.ОблагаетсяЕНВД,
	|	Доходы.ФизЛицо,
	|	Доходы.ВидДохода.ВходитВБазуПФР,
	|	Доходы.ВидДохода.ВходитВБазуФСС,
	|	Доходы.ВидДохода.ВходитВБазуФОМС,
	|	Доходы.ОблагаетсяПоДополнительномуТарифу,
	|	Доходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Сотрудник КАК Сотрудник,
	|	Доходы.ФизЛицо КАК ФизЛицо,
	|	Доходы.ВидРасчета КАК ВидРасчета,
	|	Доходы.ПериодРегистрации КАК ПериодРегистрации,
	|	Доходы.ПериодДействия КАК ПериодДействия,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	Доходы.СчетДт,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	СУММА(Доходы.Результат) КАК Результат,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет84,
	|	ВЫБОР
	|		КОГДА ВТ_Счета69.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоСчет69,
	|	Доходы.ЭтоОтпуск
	|ПОМЕСТИТЬ ВТ_БУДоходыПоВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.Сотрудник КАК Сотрудник,
	|		БУОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		БУОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|		БУОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		БУОсновныеНачисления.ПериодДействия КАК ПериодДействия,
	|		БУОсновныеНачисления.СчетДт КАК СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.ОтражениеВУСН КАК ОтражениеВУСН,
	|		БУОсновныеНачисления.Результат - ЕСТЬNULL(Вт_СуммыЗатратныхСчетов.СуммаЗатрат, 0) КАК Результат,
	|		БУОсновныеНачисления.ПодразделениеДт КАК ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт КАК ПодразделениеКт,
	|		ВЫБОР
	|			КОГДА &парамФормироватьРБП
	|				ТОГДА ВЫБОР
	|						КОГДА (НЕ БУОсновныеНачисления.СчетДт В (&парамСчетаИсключенияРБП))
	|								И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПодменятьСчетДтНаРБП,
	|		ВЫБОР
	|			КОГДА БУОсновныеНачисления.ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработкуОтпуска)
	|					И БУОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение)
	|					И БУОсновныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЭтоОтпуск
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ Вт_СуммыЗатратныхСчетов КАК Вт_СуммыЗатратныхСчетов
	|			ПО БУОсновныеНачисления.Сотрудник = Вт_СуммыЗатратныхСчетов.Сотрудник
	|				И БУОсновныеНачисления.ПериодРегистрации = Вт_СуммыЗатратныхСчетов.ПериодРегистрации
	|				И (БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке)))
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУОсновныеНачисления.Сотрудник,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.ВидРасчета,
	|		БУОсновныеНачисления.ПериодРегистрации,
	|		БУОсновныеНачисления.ПериодДействия,
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3,
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3,
	|		БУОсновныеНачисления.СпособРаспределенияЗатрат,
	|		БУОсновныеНачисления.ОтражениеВУСН,
	|		ЕСТЬNULL(Вт_СуммыЗатратныхСчетов.СуммаЗатрат, 0),
	|		БУОсновныеНачисления.ПодразделениеДт,
	|		БУОсновныеНачисления.ПодразделениеКт,
	|		ВЫБОР
	|			КОГДА &парамФормироватьРБП
	|				ТОГДА ВЫБОР
	|						КОГДА (НЕ БУОсновныеНачисления.СчетДт В (&парамСчетаИсключенияРБП))
	|								И БУОсновныеНачисления.ПериодДействия > БУОсновныеНачисления.ПериодРегистрации
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Вт_СуммыЗатратныхСчетов КАК Вт_СуммыЗатратныхСчетов
	|			ПО БУОсновныеНачисления.Сотрудник = Вт_СуммыЗатратныхСчетов.Сотрудник
	|				И БУОсновныеНачисления.ПериодРегистрации = Вт_СуммыЗатратныхСчетов.ПериодРегистрации
	|				И (БУОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке)))
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И БУОсновныеНачисления.ПериодРегистрации В(&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУОсновныеНачисления.ФизЛицо В (&парамМассивФизлиц))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.Сотрудник,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.ВидРасчета,
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ),
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СпособРаспределенияЗатрат,
	|		БУДополнительныеНачисления.ОтражениеВУСН,
	|		БУДополнительныеНачисления.Результат,
	|		БУДополнительныеНачисления.ПодразделениеДт,
	|		БУДополнительныеНачисления.ПодразделениеКт,
	|		ЛОЖЬ,
	|		ВЫБОР
	|			КОГДА БУДополнительныеНачисления.ВидРасчета.СпособРасчета В (&парамПоСреднемуЗаработкуОтпуска)
	|					И БУДополнительныеНачисления.ВидРасчета.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОбособленноеПодразделение
	|		И НАЧАЛОПЕРИОДА(БУДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ) В (&парамМассивПериодовРегистрации)
	|		И (&парамНеОтбиратьФизлиц
	|				ИЛИ БУДополнительныеНачисления.ФизЛицо В (&парамМассивФизлиц))) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитика КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Доходы.ПериодРегистрации = УчетнаяПолитикаНалоговыйУчет.Месяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаПоДеятельностиЕНВД КАК СчетаУчетаПоДеятельностиЕНВД
	|		ПО Доходы.СчетДт = СчетаУчетаПоДеятельностиЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета84 КАК ВТ_Счета84
	|		ПО Доходы.СчетДт = ВТ_Счета84.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета69 КАК ВТ_Счета69
	|		ПО Доходы.СчетДт = ВТ_Счета69.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Сотрудник,
	|	Доходы.ВидРасчета,
	|	Доходы.ПериодРегистрации,
	|	Доходы.СчетДт,
	|	Доходы.СчетДтНУ,
	|	Доходы.СубконтоДт1,
	|	Доходы.СубконтоДт2,
	|	Доходы.СубконтоДт3,
	|	Доходы.СубконтоДтНУ1,
	|	Доходы.СубконтоДтНУ2,
	|	Доходы.СубконтоДтНУ3,
	|	Доходы.СпособРаспределенияЗатрат,
	|	Доходы.ОтражениеВУСН,
	|	Доходы.ПериодДействия,
	|	Доходы.ФизЛицо,
	|	Доходы.ПодразделениеДт,
	|	Доходы.ПодразделениеКт,
	|	Доходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВТ_Счета84.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Счета69.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомЕНВД)
	|			ТОГДА ЛОЖЬ
	|		КОГДА СчетаУчетаПоДеятельностиЕНВД.Счет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Доходы.ЭтоОтпуск
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзносыДоходыПоВР.Сотрудник,
	|	ВзносыДоходыПоВР.ФизЛицо,
	|	ВзносыДоходыПоВР.ВидРасчета,
	|	БУДоходыПоВР.ОблагаетсяЕНВД,
	|	ВзносыДоходыПоВР.ОблагаетсяПоДополнительномуТарифу,
	|	ВзносыДоходыПоВР.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	|	ВзносыДоходыПоВР.ПериодРегистрации,
	|	ВзносыДоходыПоВР.ПериодДействия,
	|	ВзносыДоходыПоВР.Результат,
	|	БУДоходыПоВР.СчетДт,
	|	БУДоходыПоВР.СубконтоДт1,
	|	БУДоходыПоВР.СубконтоДт2,
	|	БУДоходыПоВР.СубконтоДт3,
	|	БУДоходыПоВР.СчетДтНУ,
	|	БУДоходыПоВР.СубконтоДтНУ1,
	|	БУДоходыПоВР.СубконтоДтНУ2,
	|	БУДоходыПоВР.СубконтоДтНУ3,
	|	БУДоходыПоВР.СпособРаспределенияЗатрат,
	|	БУДоходыПоВР.ОтражениеВУСН,
	|	БУДоходыПоВР.Результат КАК РезультатБУ,
	|	БУДоходыПоВР.ПодразделениеДт,
	|	БУДоходыПоВР.ПодразделениеКт,
	|	БУДоходыПоВР.ПодменятьСчетДтНаРБП,
	|	ВзносыДоходыПоВР.ВходитВБазуПФР,
	|	ВзносыДоходыПоВР.ВходитВБазуФСС,
	|	ВзносыДоходыПоВР.ВходитВБазуФОМС,
	|	БУДоходыПоВР.ЭтоСчет84,
	|	БУДоходыПоВР.ЭтоСчет69,
	|	БУДоходыПоВР.ЭтоОтпуск
	|ПОМЕСТИТЬ ВТ_ВзносыДоходыБУДоходы
	|ИЗ
	|	ВТ_ВзносыДоходыПоВР КАК ВзносыДоходыПоВР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_БУДоходыПоВР КАК БУДоходыПоВР
	|		ПО ВзносыДоходыПоВР.Сотрудник = БУДоходыПоВР.Сотрудник
	|			И ВзносыДоходыПоВР.ВидРасчета = БУДоходыПоВР.ВидРасчета
	|			И ВзносыДоходыПоВР.ПериодРегистрации = БУДоходыПоВР.ПериодРегистрации
	|			И ВзносыДоходыПоВР.ПериодДействия = БУДоходыПоВР.ПериодДействия
	|			И ВзносыДоходыПоВР.ОблагаетсяЕНВД = БУДоходыПоВР.ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.Сотрудник КАК Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета КАК ВидРасчета,
	|	БУДоходыСводПоВР.ПериодРегистрации КАК ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия КАК ПериодДействия,
	|	СУММА(БУДоходыСводПоВР.Результат) КАК Результат,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТ_БУДоходыСводПоВР
	|ИЗ
	|	ВТ_БУДоходыПоВР КАК БУДоходыСводПоВР
	|
	|СГРУППИРОВАТЬ ПО
	|	БУДоходыСводПоВР.Сотрудник,
	|	БУДоходыСводПоВР.ФизЛицо,
	|	БУДоходыСводПоВР.ВидРасчета,
	|	БУДоходыСводПоВР.ОблагаетсяЕНВД,
	|	БУДоходыСводПоВР.ПериодРегистрации,
	|	БУДоходыСводПоВР.ПериодДействия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ПериодДействия,
	|	Сотрудник,
	|	ВидРасчета,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БУДоходыСводПоВР.ФизЛицо,
	|	ВзносыДоходыБУДоходы.СчетДт,
	|	ВзносыДоходыБУДоходы.СубконтоДт1,
	|	ВзносыДоходыБУДоходы.СубконтоДт2,
	|	ВзносыДоходыБУДоходы.СубконтоДт3,
	|	ВзносыДоходыБУДоходы.СчетДтНУ,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ1,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ2,
	|	ВзносыДоходыБУДоходы.СубконтоДтНУ3,
	|	ВзносыДоходыБУДоходы.СпособРаспределенияЗатрат,
	|	ВзносыДоходыБУДоходы.ОтражениеВУСН,
	|	ВзносыДоходыБУДоходы.ПодразделениеДт,
	|	ВзносыДоходыБУДоходы.ПодразделениеКт,
	|	ВзносыДоходыБУДоходы.ПодменятьСчетДтНаРБП,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаПФР_ЕНВД,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС_ЕНВД,
	|	ВЫБОР
	|		КОГДА ВзносыДоходыБУДоходы.ОблагаетсяЕНВД
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФОМС,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяЕНВД)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФОМС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФОМС_ЕНВД,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяПоДополнительномуТарифу)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаДопТариф,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам)
	|				ИЛИ (НЕ ВзносыДоходыБУДоходы.ВходитВБазуПФР)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаДопТарифШахтеры,
	|	ВЫБОР
	|		КОГДА (НЕ ВзносыДоходыБУДоходы.ВходитВБазуФСС)
	|				ИЛИ БУДоходыСводПоВР.Результат = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВзносыДоходыБУДоходы.Результат * ВзносыДоходыБУДоходы.РезультатБУ / БУДоходыСводПоВР.Результат
	|	КОНЕЦ КАК БазаФСС_НС,
	|	ВзносыДоходыБУДоходы.ПериодРегистрации,
	|	ВзносыДоходыБУДоходы.ПериодДействия,
	|	ВзносыДоходыБУДоходы.ОблагаетсяЕНВД,
	|	ВзносыДоходыБУДоходы.ЭтоСчет84,
	|	ВзносыДоходыБУДоходы.ЭтоСчет69,
	|	ВзносыДоходыБУДоходы.ЭтоОтпуск
	|ПОМЕСТИТЬ ВТ_Коэффициенты
	|ИЗ
	|	ВТ_ВзносыДоходыБУДоходы КАК ВзносыДоходыБУДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыСводПоВР КАК БУДоходыСводПоВР
	|		ПО ВзносыДоходыБУДоходы.Сотрудник = БУДоходыСводПоВР.Сотрудник
	|			И ВзносыДоходыБУДоходы.ПериодРегистрации = БУДоходыСводПоВР.ПериодРегистрации
	|			И ВзносыДоходыБУДоходы.ПериодДействия = БУДоходыСводПоВР.ПериодДействия
	|			И ВзносыДоходыБУДоходы.ОблагаетсяЕНВД = БУДоходыСводПоВР.ОблагаетсяЕНВД
	|			И ВзносыДоходыБУДоходы.ВидРасчета = БУДоходыСводПоВР.ВидРасчета";
	
    Возврат Текст;
	
КонецФункции // Авт_ПолучитьТекстЗапросаПоСоциальнымНалогам()

//Blik 030615 40357 н
Функция ПроверитьИсправитьСтатьиГПХ(ВременнаяТаблица)
	для каждого стртз из ВременнаяТаблица Цикл
		Если стртз.СчетКТ = ПланыСчетов.Хозрасчетный.НайтиПоНаименованию("Расчеты по договорам ГПХ") Тогда
			докОсн = стртз.документоснование;
			сотр =  стртз.Сотрудник;
			Запрос = Новый Запрос;
			
			Запрос.УстановитьПараметр("Докосн", докОсн);
			Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("Сотрудник", сотр);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.Сотрудник,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.Физлицо,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СчетДт КАК счДТ,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоДт1 КАК СубкДТ1,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоДт2 КАК СубкДТ2,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоДт3 КАК СубкДТ3,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СчетКт КАК счКт,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоКт1 КАК СубкКТ1,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоКт2 КАК СубкКТ2,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоКт3 КАК СубкКТ3,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СчетДтНУ КАК счДТНУ,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоДтНУ1 КАК СубкДТ1НУ,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоДтНУ2 КАК СубкДТ2НУ,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоДтНУ3 КАК СубкДТ3НУ,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СчетКтНУ КАК счКтНУ,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоКтНУ1 КАК СубкКТ1НУ,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоКтНУ2 КАК СубкКТ2НУ,
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.ДокументОснование.СпособОтраженияВБухучете.СубконтоКтНУ3 КАК СубкКТ3НУ
			|ИЗ
			|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДоговорыНаВыполнениеРабот КАК НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот
			|ГДЕ
			|	НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.Ссылка = &Докосн
			|	И НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.Ссылка.ПериодРегистрации = &ПериодРегистрации
			|	И НачислениеЗарплатыРаботникамОрганизацийДоговорыНаВыполнениеРабот.Сотрудник = &Сотрудник";
			
			СчетДебета = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70.01");
			СчетКредита = ПланыСчетов.Хозрасчетный.НДФЛ;
			СубконтоКредита = Перечисления.ВидыПлатежейВГосБюджет.Налог;
			УСНПринимаются  = Перечисления.ОтражениеВУСН.Принимаются;
			УСННеПринимаются  = Перечисления.ОтражениеВУСН.НеПринимаются;
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				//исправляем 1 субконто
				Если стртз.СчетДТ  = выборка.счДТ и стртз.СубконтоДТ1 <> выборка.СубкДТ1 Тогда
					 стртз.СубконтоДТ1 = выборка.СубкДТ1;
				 КонецЕсли;
				 Если стртз.СчетДТНУ  = выборка.счДТНУ и стртз.СубконтоДТНУ1 <> выборка.СубкДТ1НУ Тогда
					 стртз.СубконтоДТНУ1 = выборка.СубкДТ1НУ;
				КонецЕсли;

			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
КонецФункции
Функция ПроверитьИсправитьСтатьи_29сч() Экспорт
//Blik 080615 40523 н
//Blik 100915 43614 сюда же добавлю контроль 23 сч
	СтрахФССНС_Н = Справочники.СтатьиЗатрат.НайтиПоКоду("000010290");
	СтрахФССНС_В = Справочники.СтатьиЗатрат.НайтиПоКоду("000010838");
	СтрахФСС_Н = Справочники.СтатьиЗатрат.НайтиПоКоду("000010535");
	СтрахФСС_В = Справочники.СтатьиЗатрат.НайтиПоКоду("000010840");
	СтрахФОМС_Н = Справочники.СтатьиЗатрат.НайтиПоКоду("000010534");
	СтрахФОМС_В = Справочники.СтатьиЗатрат.НайтиПоКоду("000010839");
	СтрахПФР_Н = Справочники.СтатьиЗатрат.НайтиПоКоду("000010291");
	СтрахПФР_В = Справочники.СтатьиЗатрат.НайтиПоКоду("000010837");
//Blik 100915 43614 сюда же добавлю контроль 23 сч н 
	СтрахФОМС     = Справочники.СтатьиЗатрат.НайтиПоКоду("000010534");
	СтрахФОМС_Осн = Справочники.СтатьиЗатрат.НайтиПоКоду("000010531");
    СтрахФСС     = Справочники.СтатьиЗатрат.НайтиПоКоду("000010535");
	СтрахФСС_Осн = Справочники.СтатьиЗатрат.НайтиПоКоду("000010532");
    СтрахПФР = Справочники.СтатьиЗатрат.НайтиПоКоду("000010291");
	СтрахПФР_Осн = Справочники.СтатьиЗатрат.НайтиПоКоду("000010293");
    Премия =  Справочники.СтатьиЗатрат.НайтиПоКоду("000010294"); //Blik 45791 061115
	Премия_Осн = Справочники.СтатьиЗатрат.НайтиПоКоду("000010295"); //Blik 45791 061115
	СтрахПФР_Ош = Справочники.СтатьиЗатрат.НайтиПоКоду("000010832"); //Blik 091115
	
//Blik 100915 43614 сюда же добавлю контроль 23 сч к
Для каждого стр Из ОтражениеВУчете Цикл
			
		Если стр.СчетДт = ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводстваНеОблагаемоеЕНВД Тогда	
			//БУ
			Если стр.СубконтоДт3 = СтрахФССНС_Н Тогда
				стр.СубконтоДт3 = СтрахФССНС_В;
				стр.СпособРаспределенияЗатрат = СтрахФССНС_В;
			КонецЕсли;
			Если стр.СубконтоДт3 = СтрахФСС_Н Тогда
				стр.СубконтоДт3 = СтрахФСС_В;
				стр.СпособРаспределенияЗатрат = СтрахФСС_В;
			КонецЕсли;
			Если стр.СубконтоДт3 = СтрахФОМС_Н Тогда
				стр.СубконтоДт3 = СтрахФОМС_В;
				стр.СпособРаспределенияЗатрат = СтрахФОМС_В;
			КонецЕсли;
			Если стр.СубконтоДт3 = СтрахПФР_Н Тогда
				стр.СубконтоДт3 = СтрахПФР_В;
				стр.СпособРаспределенияЗатрат = СтрахПФР_В;
			КонецЕсли;
			//НУ
			Если стр.СубконтоДтНУ3 = СтрахФССНС_Н Тогда
				стр.СубконтоДтНУ3 = СтрахФССНС_В;
			КонецЕсли;
			Если стр.СубконтоДтНУ3 = СтрахФСС_Н Тогда
				стр.СубконтоДтНУ3 = СтрахФСС_В;
			КонецЕсли;
			Если стр.СубконтоДтНУ3 = СтрахФОМС_Н Тогда
				стр.СубконтоДтНУ3 = СтрахФОМС_В;
			КонецЕсли;
			Если стр.СубконтоДтНУ3 = СтрахПФР_Н Тогда
				стр.СубконтоДтНУ3 = СтрахПФР_В;
			КонецЕсли;
		КонецЕсли;
		//Blik 080615 40523 к
		//Blik 100915 43614 сюда же добавлю контроль 23 сч н
		Если стр.СчетДт = ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводстваНеОблагаемоеЕНВД Тогда	
			Если СокрЛП(СТрока(стр.СубконтоДт1.Код)) = "ЗПЛ_050402" Тогда 
				Если стр.СубконтоДт3 = СтрахФОМС Тогда
					стр.СубконтоДт3 = СтрахФОМС_Осн;
					стр.СпособРаспределенияЗатрат = СтрахФОМС_Осн;
				КонецЕсли;
				Если стр.СубконтоДт3 = СтрахФСС Тогда
					стр.СубконтоДт3 = СтрахФСС_Осн;
					стр.СпособРаспределенияЗатрат = СтрахФСС_Осн;
				КонецЕсли;
				Если стр.СубконтоДт3 = СтрахПФР Тогда  //Blik 45791 061115 н
					стр.СубконтоДт3 = СтрахПФР_Осн;
					стр.СпособРаспределенияЗатрат = СтрахПФР_Осн;
				КонецЕсли; 
				Если стр.СубконтоДт3 = Премия Тогда  
					стр.СубконтоДт3 = Премия_Осн;
					стр.СпособРаспределенияЗатрат = Премия_Осн;
				КонецЕсли; 
				//Blik 45791 061115 к

				//НУ
				Если стр.СубконтоДтНУ3 = СтрахФОМС Тогда
					стр.СубконтоДтНУ3 = СтрахФОМС_Осн;
				КонецЕсли;
				Если стр.СубконтоДтНУ3 = СтрахФСС Тогда
					стр.СубконтоДтНУ3 = СтрахФСС_Осн;
				КонецЕсли;
				Если стр.СубконтоДтНУ3 = СтрахПФР Тогда //Blik 45791 061115 н
					стр.СубконтоДтНУ3 = СтрахПФР_Осн;
				КонецЕсли;
				Если стр.СубконтоДтНУ3 = Премия Тогда  
					стр.СубконтоДтНУ3 = Премия_Осн;
				КонецЕсли; 
				//Blik 45791 061115 к
				
			КонецЕсли;
		КонецЕсли;
		//Blik 100915 43614 сюда же добавлю контроль 23 сч к
		//Blik 091115 н
		Если стр.СчетКт = ПланыСчетов.Хозрасчетный.ПФР_ОПС Тогда
			 Если стр.СчетДт = ПланыСчетов.Хозрасчетный.КоммерческиеРасходыНеОблагаемыеЕНВД и стр.СубконтоДт1 = СтрахПФР_Ош Тогда
				  стр.СубконтоДт1 = СтрахПФР;
			  КонецЕсли;
			  Если стр.СчетДт = ПланыСчетов.Налоговый.КоммерческиеРасходыНеОблагаемыеЕНВД и стр.СубконтоДтНУ1 = СтрахПФР_Ош Тогда
				  стр.СубконтоДтНУ1 = СтрахПФР;
			  КонецЕсли;
		КонецЕсли;//Blik 091115 н 
	КонецЦикла;
	
КонецФункции
//Blik 030615 40357 к

//Blik 46103 171115 доп проверка на соответствие БУ и НУ н
Процедура ЗаполнитьСчетамиТаблицу(Счет,Табл)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Хозрасчетный.Ссылка
	                      |ИЗ
	                      |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	                      |ГДЕ
	                      |	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счет)");
						  
	Запрос.УстановитьПараметр("Счет",Счет);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Табл.Добавить();
		НоваяСтрока.Счет = Выборка.Ссылка;
	КонецЦикла;	
КонецПроцедуры	

Процедура ПривестиБУКНУПоОтделнымСчетам() Экспорт
    МассСчетовЗатрат = БухгалтерскийУчет.ПолучитьМассивСчетов("Хозрасчетный","20,23,25,26,44");
	 
	 Сч76_09_4 = Планысчетов.Хозрасчетный.НайтиПоКоду("76.09.4");
	 СчПВ 	   = ПланыСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав;
	
	
	  ТаблСчетовНезавершенка = Новый ТаблицаЗначений;
	  ТаблСчетовНезавершенка.Колонки.Добавить("Счет");
	  ТаблСчетовНезавершенка.Индексы.Добавить("Счет");
	  
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("20"),ТаблСчетовНезавершенка);
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("23"),ТаблСчетовНезавершенка);
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("29"),ТаблСчетовНезавершенка);
	  
	  ТаблСчетовЗатрат = Новый ТаблицаЗначений;
	  ТаблСчетовЗатрат.Колонки.Добавить("Счет");
	  ТаблСчетовЗатрат.Индексы.Добавить("Счет");
	  
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("25"),ТаблСчетовЗатрат);
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("26"),ТаблСчетовЗатрат);
	  
	  ТаблСчетов44 = Новый ТаблицаЗначений;
	  ТаблСчетов44.Колонки.Добавить("Счет");
	  ТаблСчетов44.Индексы.Добавить("Счет");
	  ЗаполнитьСчетамиТаблицу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("44"),ТаблСчетов44);
	  
	  ПустНомГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	  
	 Для Каждого ТекСтрока Из ОтражениеВУчете Цикл
		 
		 Если ТекСтрока.Сумма = 0 Тогда
			 продолжить;
		 КонецЕсли;	 
		 
		 ндЗнНЗП = ТаблСчетовНезавершенка.Найти(ТекСтрока.СчетДт,"Счет");
		 Если ндЗнНЗП <> Неопределено Тогда
			 Если ТекСтрока.СубконтоДт3 <> ТекСтрока.СубконтоДтНУ3 Тогда
				 Сообщить("Не равны "+ТекСтрока.НомерСтроки+"\"+ТекСтрока.СчетДт+"
				 		   | "+ТекСтрока.СубконтоДт3+"
				  	   | "+ТекСтрока.СчетДтНУ+"
				    	   | "+ТекСтрока.СубконтоДтНУ3);
					ТекСтрока.СубконтоДтНУ3 = ТекСтрока.СубконтоДт3;
			 КонецЕсли; 
			 
			 Если ТекСтрока.СубконтоДт2 <> ПустНомГруппа Тогда
				 Сообщить(""+ТекСтрока.СубконтоДт2+" "+ТекСтрока.НомерСтроки);
				 ТекСтрока.СубконтоДт2 = ПустНомГруппа;
			 КонецЕсли;	 
			 
			 Если ТекСтрока.СубконтоДтНУ2 <> ПустНомГруппа Тогда
				 Сообщить("Не равны статьи  "+ТекСтрока.СубконтоДтНУ2+" "+ТекСтрока.НомерСтроки);
				 ТекСтрока.СубконтоДтНУ2 = ПустНомГруппа;
			 КонецЕсли;	 
			 
			 
			 Если ТекСтрока.СубконтоДт1 <> ТекСтрока.СубконтоДтНУ1 Тогда
				 ТекСтрока.СубконтоДтНУ1 =ТекСтрока.СубконтоДт1;
				 Сообщить("Не равны подразделения "+ТекСтрока.СубконтоДтНУ2+" "+ТекСтрока.НомерСтроки);
			 КонецЕсли;	 
		 КонецЕсли;	 
		 
		 ндЗнКос= ТаблСчетовЗатрат.Найти(ТекСтрока.СчетДт,"Счет");
		 Если ндЗнКос <> Неопределено Тогда
			 Если ТекСтрока.СубконтоДт2 <> ТекСтрока.СубконтоДтНУ2 Тогда
				 Сообщить("Не равны "+ТекСтрока.НомерСтроки+"\"+ТекСтрока.СчетДт+"
				 		   | "+ТекСтрока.СубконтоДт2+"
				    	   | "+ТекСтрока.СчетДтНУ+"
				    	   | "+ТекСтрока.СубконтоДтНУ2);
				ТекСтрока.СубконтоДтНУ2 = ТекСтрока.СубконтоДт2;
			КонецЕсли; 
			Если ТекСтрока.СубконтоДтНУ1 <> ТекСтрока.СубконтоДт1 Тогда
				   Сообщить("Не равны "+ТекСтрока.НомерСтроки+"\"+ТекСтрока.СчетДт+"
				   	| "+ТекСтрока.СубконтоДт1+"
				    	   | "+ТекСтрока.СчетДтНУ+"
				   	   | "+ТекСтрока.СубконтоДтНУ1);
				 ТекСтрока.СубконтоДтНУ1 = ТекСтрока.СубконтоДт1;
			КонецЕслИ;	
		 КонецЕсли;	 
		 
		 ндЗнКос= ТаблСчетов44.Найти(ТекСтрока.СчетДт,"Счет");
		 Если ндЗнКос <> Неопределено Тогда
			 Если ТекСтрока.СубконтоДт1 <> ТекСтрока.СубконтоДтНУ1 Тогда
				 Сообщить("Не равны "+ТекСтрока.НомерСтроки+"\"+ТекСтрока.СчетДт+"
				 	   | "+ТекСтрока.СубконтоДт1+"
				   	   | "+ТекСтрока.СчетДтНУ+"
				   	   | "+ТекСтрока.СубконтоДтНУ1);
					   
				ТекСтрока.СубконтоДтНУ1 = ТекСтрока.СубконтоДт1;
			 КонецЕсли;	 
		
			 Если ТекСтрока.СубконтоДт2 <> ТекСтрока.СубконтоДтНУ2 Тогда
				 Сообщить("Не равны "+ТекСтрока.НомерСтроки+"\"+ТекСтрока.СчетДт+"
				     | "+ТекСтрока.СубконтоДт2+"
				   	   | "+ТекСтрока.СчетДтНУ+"
				   	   | "+ТекСтрока.СубконтоДтНУ2);
					   
				ТекСтрока.СубконтоДтНУ2 = ТекСтрока.СубконтоДт2;
			  КонецЕсли; 
		 КонецЕсли;	 
		 
		 
		 Если ТекСтрока.СчетДт = Сч76_09_4 Тогда
			 Если МассСчетовЗатрат.НайтиПоЗначению(ТекСтрока.СчетКт) <> Неопределено Тогда
				 Если СчПВ <> ТекСтрока.СчетДтНУ  Тогда
				 	Сообщить("Изменен был дт НУ "+ТекСтрока.НомерСтроки+"\"+ТекСтрока.СчетДтНУ+"
				 		   | на "+СчПВ+"
				    	   |  Кт НУ "+ТекСтрока.СчетКтНУ+"
				    	   |  ДТ БУ"+ТекСтрока.СчетДт);
					 ТекСтрока.СчетДтНУ = СчПВ ;
				 КонецЕсли; 
			 КонецЕсли; 
		 КонецЕсли; 
		 
	 	Если ТекСтрока.СчетКт = Сч76_09_4 Тогда
			 Если МассСчетовЗатрат.НайтиПоЗначению(ТекСтрока.СчетДт) <> Неопределено Тогда
				 Если СчПВ <> ТекСтрока.СчетКтНУ  Тогда
				  Сообщить("Изменен был кт НУ "+ТекСтрока.НомерСтроки+"\"+ТекСтрока.СчетКтНУ+"
				  	   | на "+СчПВ+"
				    	   |  Дт НУ "+ТекСтрока.СчетДтНУ+"
				    	   |  ДТ БУ"+ТекСтрока.СчетДт);
					 ТекСтрока.СчетКтНУ = СчПВ ;
				 КонецЕсли; 
			 КонецЕсли; 
		 КонецЕсли; 
		 
		 
	 КонецЦикла;	 

КонецПроцедуры
//Blik 46103 171115 доп проверка на соответствие БУ и НУ  к
мДлинаСуток = 86400;		// в секундах
мНомерСубконтоКонтрагентыКт = 1;
мНомерСубконтоИсполнДокументыКт = 2;



