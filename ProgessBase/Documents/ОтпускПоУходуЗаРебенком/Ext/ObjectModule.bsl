////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем СоответствиеВалютныеСпособыРасчета;
Перем мДлинаСуток;

// Механизм исправлений
Перем мВосстанавливатьДвижения;
Перем мСоответствиеДвижений;
Перем мИсправляемыйДокумент;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Формирует записи регистра "ОсновныеНачисленияРаботниковОрганизаций" по данным шапки документа
Процедура СформироватьДвиженияПоНачислениям(ВыборкаПоШапкеДокумента, НаборОсновныеНачисления)
	
	ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	
	Если ДатаНачала < ДатаЗакона213ФЗ Тогда
		
		// строка движений
		Движение = НаборОсновныеНачисления.Добавить();
		
		// Свойства
		Движение.ПериодРегистрации          = НачалоМесяца(Дата);
		Движение.ПериодДействияНачало       = НачалоДня(ДатаНачала);
		Движение.ПериодДействияКонец 	    = Мин(КонецМесяца(ДатаНачала),КонецДня(ДатаОкончания));
		Движение.ВидРасчета				    = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет;
		
		// Измерения
		Движение.Сотрудник                  = ВыборкаПоШапкеДокумента.Сотрудник;
		Движение.ФизЛицо                    = ВыборкаПоШапкеДокумента.ФизЛицо;
		Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		
		// Реквизиты
		
		Движение.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.Организация;
		Движение.ПодразделениеОрганизации	= ВыборкаПоШапкеДокумента.ПодразделениеОрганизации;
		
		Движение.ВидУчетаВремени  	        = Перечисления.ВидыУчетаВремени.ПоДням;
		Движение.ПериодРасчетаСреднегоЗаработкаНачало	= ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало;
		Движение.ПериодРасчетаСреднегоЗаработкаОкончание= ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаОкончание;
		
		Движение.ДатаНачалаСобытия			= Движение.ПериодДействияНачало;
		Движение.Авторасчет					= Истина;
		
	КонецЕсли;
	
	Если Не ЕстьРасчетыПоКалендарнымГодам() И ДатаОкончания >= ДатаЗакона213ФЗ Тогда
		// строка движений
		Движение = НаборОсновныеНачисления.Добавить();
		
		// Свойства
		Движение.ПериодРегистрации          = НачалоМесяца(Дата);
		Движение.ПериодДействияНачало       = Макс(НачалоДня(ДатаНачала),НачалоМесяца(ДатаОкончания));
		Движение.ПериодДействияКонец 	    = КонецДня(ДатаОкончания);
		Движение.ВидРасчета				    = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет;
		
		// Измерения
		Движение.Сотрудник                  = ВыборкаПоШапкеДокумента.Сотрудник;
		Движение.ФизЛицо                    = ВыборкаПоШапкеДокумента.ФизЛицо;
		Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		
		// Реквизиты
		
		Движение.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.Организация;
		Движение.ПодразделениеОрганизации	= ВыборкаПоШапкеДокумента.ПодразделениеОрганизации;
		
		Движение.ВидУчетаВремени  	        = Перечисления.ВидыУчетаВремени.ПоДням;
		Движение.ПериодРасчетаСреднегоЗаработкаНачало	= ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало;
		Движение.ПериодРасчетаСреднегоЗаработкаОкончание= ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаОкончание;
		
		Движение.ДатаНачалаСобытия			= Движение.ПериодДействияНачало;
		Движение.Авторасчет					= Истина;
		
	КонецЕсли;
	
	Если ЕстьРасчетыПоКалендарнымГодам() Тогда
		
		// строка движений
		Движение = НаборОсновныеНачисления.Добавить();
		
		// Свойства
		Движение.ПериодРегистрации          = НачалоМесяца(Дата);
		Движение.ПериодДействияНачало       = НачалоДня(ДатаНачала);
		Движение.ПериодДействияКонец 	    = Мин(КонецМесяца(ДатаНачала),КонецДня(ДатаОкончания));
		Движение.ВидРасчета				    = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет;
		
		// Измерения
		Движение.Сотрудник                  = ВыборкаПоШапкеДокумента.Сотрудник;
		Движение.ФизЛицо                    = ВыборкаПоШапкеДокумента.ФизЛицо;
		Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
				
		// Реквизиты
		
		Движение.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.Организация;
		Движение.ПодразделениеОрганизации	= ВыборкаПоШапкеДокумента.ПодразделениеОрганизации;
		
		Движение.ВидУчетаВремени  	        = Перечисления.ВидыУчетаВремени.ПоДням;
		Движение.ДатаНачалаСобытия			= Движение.ПериодДействияНачало;
		Движение.Авторасчет					= Истина;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Формирует запрос по документу и связанным регистрам сведений
//
// Параметры:
//	Режим - строка, может принимать значения:
//			"ПоРеквизитамДокумента"
//			"ПоТабличнойЧастиДокумента"
//
// Возвращаемое значение:
//	Результат запроса с данными об организации или о сотрудниках из табличной части
//
Функция СформироватьЗапросДляПечати2004()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ТекущийДокумент",		Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента",			Дата);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",Организация);
	
	Запрос.Текст = ФормированиеПечатныхФормЗК.ПолучитьТекстЗапросаПоОтветственнымЛицам(
		"ДатаДокумента",
		"ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
		|И СтруктурнаяЕдиница = &СтруктурнаяЕдиница");
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтпускПоУходуЗаРебенком.Дата КАК ДатаДок,
	|	ОтпускПоУходуЗаРебенком.Номер КАК НомерДок,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследнихРаботника.Фамилия + "" "" + ФИОФизЛицСрезПоследнихРаботника.Имя + "" "" + ФИОФизЛицСрезПоследнихРаботника.Отчество, ОтпускПоУходуЗаРебенком.Сотрудник.Наименование) КАК Работник,
	|	ОтпускПоУходуЗаРебенком.Физлицо.Пол,
	|	ОтпускПоУходуЗаРебенком.Организация.НаименованиеПолное КАК НазваниеОрганизации,
	|	ОтпускПоУходуЗаРебенком.Организация.КодПоОКПО КАК КодПоОКПО,
	|	ОтветственныеЛицаОрганизаций.Должность КАК ДолжностьРуководителя,
	|	ОтветственныеЛицаОрганизаций.НаименованиеОтветственногоЛица КАК ФИОРуководителя,
	|	ОтветственныеЛицаОрганизаций.ОтветственноеЛицо,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала КАК ДатаНачала,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончания КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 0
	|		ИНАЧЕ РАЗНОСТЬДАТ(ОтпускПоУходуЗаРебенком.ДатаНачала, ОтпускПоУходуЗаРебенком.ДатаОкончания, ДЕНЬ) + 1
	|	КОНЕЦ КАК ПродолжительностьВсего,
	|	ВЫБОР
	|		КОГДА ДанныеОРаботникахОрганизации.ПериодЗавершения <= ОтпускПоУходуЗаРебенком.ДатаНачала
	|				И ДанныеОРаботникахОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДанныеОРаботникахОрганизации.ПодразделениеОрганизацииЗавершенияНаименование
	|		ИНАЧЕ ДанныеОРаботникахОрганизации.ПодразделениеОрганизацииНаименование
	|	КОНЕЦ КАК ПодразделениеРаботника,
	|	ВЫБОР
	|		КОГДА ДанныеОРаботникахОрганизации.ПериодЗавершения <= ОтпускПоУходуЗаРебенком.ДатаНачала
	|				И ДанныеОРаботникахОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДанныеОРаботникахОрганизации.ДолжностьЗавершенияНаименование
	|		ИНАЧЕ ДанныеОРаботникахОрганизации.ДолжностьНаименование
	|	КОНЕЦ КАК Должность,
	|	""Отпуск по уходу за ребенком"" КАК ВидДопОтпуска,
	|	ОтпускПоУходуЗаРебенком.Организация.Префикс,
	|	ОтпускПоУходуЗаРебенком.Сотрудник.Код КАК ТабельныйНомер
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК ОтветственныеЛицаОрганизаций
	|		ПО ОтпускПоУходуЗаРебенком.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихРаботника
	|		ПО ОтпускПоУходуЗаРебенком.Сотрудник.Физлицо = ФИОФизЛицСрезПоследнихРаботника.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СписокДат.Сотрудник КАК Сотрудник,
	|			РаботникиОрганизации.ПериодЗавершения КАК ПериодЗавершения,
	|			РаботникиОрганизации.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииНаименование,
	|			РаботникиОрганизации.Должность.Наименование КАК ДолжностьНаименование,
	|			РаботникиОрганизации.ПодразделениеОрганизацииЗавершения.Наименование КАК ПодразделениеОрганизацииЗавершенияНаименование,
	|			РаботникиОрганизации.ДолжностьЗавершения.Наименование КАК ДолжностьЗавершенияНаименование
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ОтпускПоУходуЗаРебенком.Сотрудник КАК Сотрудник,
	|				МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций КАК РаботникиВнутри
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|					ПО РаботникиВнутри.Период < ОтпускПоУходуЗаРебенком.ДатаНачала
	|						И РаботникиВнутри.Сотрудник = ОтпускПоУходуЗаРебенком.Сотрудник
	|			ГДЕ
	|				ОтпускПоУходуЗаРебенком.Ссылка = &ТекущийДокумент
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ОтпускПоУходуЗаРебенком.Сотрудник) КАК СписокДат
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|				ПО СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизации.Период
	|					И СписокДат.Сотрудник = РаботникиОрганизации.Сотрудник) КАК ДанныеОРаботникахОрганизации
	|		ПО ОтпускПоУходуЗаРебенком.Сотрудник = ДанныеОРаботникахОрганизации.Сотрудник
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.Ссылка = &ТекущийДокумент";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

Функция ПечатьЗаявления(ИмяМакета)

	СтруктураДанныхЗаявления = ОбменСведениямиОПособияхСФСС.СтруктураДанныхДляПечатиЗаявленийВФССОВыплатеПособия();
	
	СтруктураДанныхЗаявления.ВидПособия = Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерСтроки,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Очередность,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаРебенкаВыплачиваетсяПособие,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ВидПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаименованиеПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.СерияДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерДокумента
	|ПОМЕСТИТЬ ВТДанныеДетей
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка = &Ссылка
	|	И НЕ ОтпускПоУходуЗаРебенкомДанныеОДетях.НаличиеРешенияСудаОЛишенииПрав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДетей.НомерСтроки,
	|	МАКСИМУМ(ПредыдущиеДети.Очередность) КАК Очередность
	|ПОМЕСТИТЬ ВТЖивыеПредыдущиеДети
	|ИЗ
	|	ВТДанныеДетей КАК ДанныеДетей
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДетей КАК ПредыдущиеДети
	|		ПО ДанныеДетей.Очередность > ПредыдущиеДети.Очередность
	|ГДЕ
	|	ПредыдущиеДети.ВидПодтверждающегоДокумента <> ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОСмерти)
	|	И ПредыдущиеДети.ВидПодтверждающегоДокумента <> ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДетей.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДетей.НомерСтроки,
	|	МАКСИМУМ(ПредыдущиеДети.Очередность) КАК Очередность
	|ПОМЕСТИТЬ ВТУмершиеПредыдущиеДети
	|ИЗ
	|	ВТДанныеДетей КАК ДанныеДетей
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДетей КАК ПредыдущиеДети
	|		ПО ДанныеДетей.Очередность > ПредыдущиеДети.Очередность
	|ГДЕ
	|	ПредыдущиеДети.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОСмерти)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДетей.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускРасчетСреднего2011.РасчетныйГод,
	|	СУММА(ОтпускРасчетСреднего2011.Заработок) КАК Заработок,
	|	ОтпускРасчетСреднего2011.Ссылка
	|ПОМЕСТИТЬ ВТРасчет2011
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.РасчетСреднего2011 КАК ОтпускРасчетСреднего2011
	|ГДЕ
	|	ОтпускРасчетСреднего2011.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускРасчетСреднего2011.РасчетныйГод,
	|	ОтпускРасчетСреднего2011.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускГодыРасчетаСреднего2011.НомерСтроки,
	|	ОтпускГодыРасчетаСреднего2011.Год,
	|	ОтпускГодыРасчетаСреднего2011.Ссылка
	|ПОМЕСТИТЬ ВТГоды2011
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ГодыРасчетаСреднего2011 КАК ОтпускГодыРасчетаСреднего2011
	|ГДЕ
	|	ОтпускГодыРасчетаСреднего2011.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ОтпускРасчетСреднего.ОтработаноДней) КАК ОтработаноДней,
	|	СУММА(ОтпускРасчетСреднего.Результат) КАК Результат,
	|	ОтпускРасчетСреднего.Ссылка
	|ПОМЕСТИТЬ ВТРасчет2010
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.РасчетСреднего КАК ОтпускРасчетСреднего
	|ГДЕ
	|	ОтпускРасчетСреднего.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускРасчетСреднего.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Дата КАК ДатаПодачиЗаявления,
	|	ОтпускПоУходуЗаРебенком.ПеречислятьПособиеПочтовымПереводом,
	|	ОтпускПоУходуЗаРебенком.Банк,
	|	ОтпускПоУходуЗаРебенком.НаименованиеБанка,
	|	ОтпускПоУходуЗаРебенком.БИКБанка,
	|	ОтпускПоУходуЗаРебенком.КоррСчетБанка,
	|	ОтпускПоУходуЗаРебенком.НомерЛицевогоСчета,
	|	ОтпускПоУходуЗаРебенком.НаличиеКартыМИР,
	|	ОтпускПоУходуЗаРебенком.НомерКартыМИР,
	|	ОтпускПоУходуЗаРебенком.АдресПочтовый КАК АдресПроживания,
	|	ОтпускПоУходуЗаРебенком.Фамилия + "" "" + ОтпускПоУходуЗаРебенком.Имя + "" "" + ОтпускПоУходуЗаРебенком.Отчество КАК ФИОСотрудника,
	|	ОтпускПоУходуЗаРебенком.Сотрудник.Физлицо.ДатаРождения КАК ДатаРождения,
	|	ОтпускПоУходуЗаРебенком.Сотрудник.Физлицо.Пол КАК ПолСотрудника,
	|	ОтпускПоУходуЗаРебенком.Физлицо.ИНН КАК ИННСотрудника,
	|	ОтпускПоУходуЗаРебенком.Физлицо.СтраховойНомерПФР КАК СНИЛССотрудника,
	|	ОтпускПоУходуЗаРебенком.АдресРегистрации,
	|	ОтпускПоУходуЗаРебенком.Телефон,
	|	ОтпускПоУходуЗаРебенком.Сотрудник.ВидЗанятости КАК ВидЗанятостиСотрудника,
	|	ОтпускПоУходуЗаРебенком.ВидДокумента КАК УдостоверениеЛичностиВид,
	|	ОтпускПоУходуЗаРебенком.СерияДокумента КАК УдостоверениеЛичностиСерия,
	|	ОтпускПоУходуЗаРебенком.НомерДокумента КАК УдостоверениеЛичностиНомер,
	|	ОтпускПоУходуЗаРебенком.ДатаВыдачиДокумента КАК УдостоверениеЛичностиДата,
	|	ОтпускПоУходуЗаРебенком.КемВыданДокумент КАК УдостоверениеЛичностиКемВыдан,
	|	ОтпускПоУходуЗаРебенком.ДатаДействияДокумента КАК УдостоверениеЛичностиСрокДействия,
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизлица.Имя, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизлица.Имя, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизлица.Отчество, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизлица.Отчество, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ, ОтпускПоУходуЗаРебенком.Уполномоченный.Наименование) КАК ФИОРуководителя,
	|	ОтпускПоУходуЗаРебенком.ДолжностьУполномоченного.Наименование КАК ДолжностьРуководителя,
	|	ОтпускПоУходуЗаРебенком.Организация.НаименованиеСокращенное КАК НаименованиеОрганизации,
	|	ОтпускПоУходуЗаРебенком.Организация.НаименованиеТерриториальногоОрганаФСС КАК НаименованиеТерриториальногоОрганаФСС,
	|	ВЫБОР
	|		КОГДА НЕ ОтпускПоУходуЗаРебенком.ПрименятьЛьготыПриНачисленииПособия
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ОтпускПоУходуЗаРебенком.СтатусЛьготнойЗоны = ЗНАЧЕНИЕ(Перечисление.ВидыЗонРадиационногоПоражения.ЗонаСПравомНаОтселение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВЗонеСПравомНаОтселение,
	|	ВЫБОР
	|		КОГДА НЕ ОтпускПоУходуЗаРебенком.ПрименятьЛьготыПриНачисленииПособия
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ОтпускПоУходуЗаРебенком.СтатусЛьготнойЗоны = ЗНАЧЕНИЕ(Перечисление.ВидыЗонРадиационногоПоражения.ЗонаОтселения)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВЗонеОтселения,
	|	ВЫБОР
	|		КОГДА НЕ ОтпускПоУходуЗаРебенком.ПрименятьЛьготыПриНачисленииПособия
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ОтпускПоУходуЗаРебенком.СтатусЛьготнойЗоны = ЗНАЧЕНИЕ(Перечисление.ВидыЗонРадиационногоПоражения.ЗонаСЛьготнымСоциальноЭкономическимСтатусом)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВЗонеСЛьготнымСтатусом,
	|	ВЫБОР
	|		КОГДА НЕ ОтпускПоУходуЗаРебенком.ПрименятьЛьготыПриНачисленииПособия
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ОтпускПоУходуЗаРебенком.ПроживаниеРаботаВЛьготнойЗоне
	|	КОНЕЦ КАК ПроживаниеВЗоне,
	|	ВЫБОР
	|		КОГДА НЕ ОтпускПоУходуЗаРебенком.ПрименятьЛьготыПриНачисленииПособия
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ОтпускПоУходуЗаРебенком.ПроживаниеРаботаВЛьготнойЗоне
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаботаВЗоне,
	|	ОтпускПоУходуЗаРебенком.ДатаСправкиОНеполученииПособияОтОтца КАК ДатаСправкиОтОтца,
	|	ОтпускПоУходуЗаРебенком.НомерСправкиОНеполученииПособияОтОтца КАК НомерСправкиОтОтца,
	|	ОтпускПоУходуЗаРебенком.ДатаСправкиОНеполученииПособияОтМатери КАК ДатаСправкиОтМатери,
	|	ОтпускПоУходуЗаРебенком.НомерСправкиОНеполученииПособияОтМатери КАК НомерСправкиОтМатери,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.ДатаСправкиОНеполученииПособияОтОтца <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ОтпускПоУходуЗаРебенком.НомерСправкиОНеполученииПособияОтОтца <> """"
	|				И (ОтпускПоУходуЗаРебенком.ДатаСправкиОНеполученииПособияОтМатери = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ ОтпускПоУходуЗаРебенком.НомерСправкиОНеполученииПособияОтМатери = """")
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СправкаОтОтцаОНеполученииПособия,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.ДатаСправкиОНеполученииПособияОтМатери <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ОтпускПоУходуЗаРебенком.НомерСправкиОНеполученииПособияОтМатери <> """"
	|				И (ОтпускПоУходуЗаРебенком.ДатаСправкиОНеполученииПособияОтОтца = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ ОтпускПоУходуЗаРебенком.НомерСправкиОНеполученииПособияОтОтца = """")
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СправкаОтМатериОНеполученииПособия,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.ДатаСправкиОНеполученииПособияОтОтца <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ОтпускПоУходуЗаРебенком.НомерСправкиОНеполученииПособияОтОтца <> """"
	|				И ОтпускПоУходуЗаРебенком.ДатаСправкиОНеполученииПособияОтМатери <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ОтпускПоУходуЗаРебенком.НомерСправкиОНеполученииПособияОтМатери <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СправкаОтОбоихРодителейОНеполученииПособия,
	|	ВЫБОР
	|		КОГДА ДокументыДетей.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении)
	|			ТОГДА ДокументыДетей.СерияДокумента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СерияСвидетельстваОРождении,
	|	ВЫБОР
	|		КОГДА ДокументыДетей.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении)
	|			ТОГДА ДокументыДетей.НомерДокумента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерСвидетельстваОРождении,
	|	ВЫБОР
	|		КОГДА ДокументыДетей.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении)
	|			ТОГДА ДокументыДетей.ДатаДокумента
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаСвидетельстваОРождении,
	|	ВЫБОР
	|		КОГДА ДокументыДетей.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.ИнойДокументПодтверждающийРождениеРебенка)
	|			ТОГДА ДокументыДетей.НомерДокумента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерИногоПодтвержденияРождения,
	|	ВЫБОР
	|		КОГДА ДокументыДетей.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.ИнойДокументПодтверждающийРождениеРебенка)
	|			ТОГДА ДокументыДетей.ДатаДокумента
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаИногоПодтвержденияРождения,
	|	ВЫБОР
	|		КОГДА ДокументыДетей.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|			ТОГДА ДокументыДетей.НомерДокумента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерРешенияОбОпеке,
	|	ВЫБОР
	|		КОГДА ДокументыДетей.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|			ТОГДА ДокументыДетей.ДатаДокумента
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаРешенияОбОпеке,
	|	ВЫБОР
	|		КОГДА ДокументыДетей.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА ЖивыеПредыдущиеДети.Очередность ЕСТЬ NULL 
	|				И УмершиеПредыдущиеДети.Очередность ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА ЖивыеПредыдущиеДети.Очередность ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НаличиеДокументаОРожденииПредыдущегоРебенка,
	|	ВЫБОР
	|		КОГДА ДокументыДетей.НомерСтроки ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА ЖивыеПредыдущиеДети.Очередность ЕСТЬ NULL 
	|				И УмершиеПредыдущиеДети.Очередность ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА УмершиеПредыдущиеДети.Очередность ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА ЖивыеПредыдущиеДети.Очередность ЕСТЬ НЕ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НаличиеДокументаОСмертиПредыдущегоРебенка,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|			ТОГДА ЛОЖЬ
	|		КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|				И ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 = ВторойГодРасчета2011.Год
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаявлениеРаботникаОЗаменеКалендарныхГодов,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|			ТОГДА """"
	|		КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|				И ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 = ВторойГодРасчета2011.Год
	|			ТОГДА """"
	|		КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|				ИЛИ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ВторойГодРасчета2011.Год
	|			ТОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 - 2000
	|		ИНАЧЕ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 - 2000
	|	КОНЕЦ КАК ПервыйГод,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|			ТОГДА """"
	|		КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|				И ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 = ВторойГодРасчета2011.Год
	|			ТОГДА """"
	|		КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|				ИЛИ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ВторойГодРасчета2011.Год
	|			ТОГДА ВЫБОР
	|					КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|						ТОГДА ВторойГодРасчета2011.Год - 2000
	|					ИНАЧЕ ПервыйГодРасчета2011.Год - 2000
	|				КОНЕЦ
	|		ИНАЧЕ ПервыйГодРасчета2011.Год - 2000
	|	КОНЕЦ КАК ВторойГод,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|			ТОГДА """"
	|		КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|				И ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 = ВторойГодРасчета2011.Год
	|			ТОГДА """"
	|		КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|				ИЛИ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ВторойГодРасчета2011.Год
	|				ИЛИ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 = ПервыйГодРасчета2011.Год
	|				ИЛИ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 = ВторойГодРасчета2011.Год
	|			ТОГДА """"
	|		ИНАЧЕ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 - 2000
	|	КОНЕЦ КАК ТретийГод,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|			ТОГДА """"
	|		КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|				И ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 = ВторойГодРасчета2011.Год
	|			ТОГДА """"
	|		КОГДА ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ПервыйГодРасчета2011.Год
	|				ИЛИ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 2 = ВторойГодРасчета2011.Год
	|				ИЛИ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 = ПервыйГодРасчета2011.Год
	|				ИЛИ ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала) - 1 = ВторойГодРасчета2011.Год
	|			ТОГДА """"
	|		ИНАЧЕ ВторойГодРасчета2011.Год - 2000
	|	КОНЕЦ КАК ЧетвертыйГод,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|				И НЕ ОтпускПоУходуЗаРебенком.РасчетПособияИзТарифнойСтавки
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаявлениеПоМатеринству2010,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|				И НЕ ОтпускПоУходуЗаРебенком.РасчетПособияИзТарифнойСтавки
	|			ТОГДА ЕСТЬNULL(Расчет2010.ОтработаноДней, 0)
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЧислоКалендарныхДней,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|				И НЕ ОтпускПоУходуЗаРебенком.РасчетПособияИзТарифнойСтавки
	|			ТОГДА ЕСТЬNULL(Расчет2010.Результат, 0)
	|		ИНАЧЕ ЕСТЬNULL(ЗаработокПервыйГод.Заработок, 0) + ЕСТЬNULL(ЗаработокВторойГод.Заработок, 0)
	|	КОНЕЦ КАК СреднийЗаработок,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|				И НЕ ОтпускПоУходуЗаРебенком.РасчетПособияИзТарифнойСтавки
	|			ТОГДА ОтпускПоУходуЗаРебенком.ПериодРасчетаСреднегоЗаработкаНачало
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ЗаявлениеПоМатеринству2010ДатаНачало,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.РасчетПоПравилам2010Года
	|				И НЕ ОтпускПоУходуЗаРебенком.РасчетПособияИзТарифнойСтавки
	|			ТОГДА ОтпускПоУходуЗаРебенком.ПериодРасчетаСреднегоЗаработкаОкончание
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ЗаявлениеПоМатеринству2010ДатаОкончание,
	|	ОтпускПоУходуЗаРебенком.ДатаВыдачиДокументаНаПроживание,
	|	ОтпускПоУходуЗаРебенком.НомерДокументаНаПроживание,
	|	ОтпускПоУходуЗаРебенком.СерияДокументаНаПроживание,
	|	ОтпускПоУходуЗаРебенком.НаименованиеДокументаНаПроживание,
	|	ОтпускПоУходуЗаРебенком.ТарифнаяСтавкаОклад,
	|	ОтпускПоУходуЗаРебенком.РасчетПособияИзТарифнойСтавки,
	|	ОтпускПоУходуЗаРебенком.Сотрудник,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала КАК ДатаНачалаСобытия,
	|	ОтпускПоУходуЗаРебенком.Дата КАК ДатаПриказаНаОтпускПоУходуЗаРебенком,
	|	ОтпускПоУходуЗаРебенком.Номер КАК НомерПриказаНаОтпускПоУходуЗаРебенком,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала КАК ОтпускПоУходуЗаРебенкомДатаНачало,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончанияПособияДоПолутораЛет КАК ОтпускПоУходуЗаРебенкомДатаОкончание,
	|	ОтпускПоУходуЗаРебенком.ТелефонСоставителя,
	|	ОтпускПоУходуЗаРебенком.ДатаСправкиПоДругимМестамРаботы,
	|	ОтпускПоУходуЗаРебенком.НомерСправкиПоДругимМестамРаботы,
	|	ОтпускПоУходуЗаРебенком.Фамилия,
	|	ОтпускПоУходуЗаРебенком.Имя,
	|	ОтпускПоУходуЗаРебенком.Отчество
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДетей КАК ДокументыДетей
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТЖивыеПредыдущиеДети КАК ЖивыеПредыдущиеДети
	|			ПО ДокументыДетей.НомерСтроки = ЖивыеПредыдущиеДети.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУмершиеПредыдущиеДети КАК УмершиеПредыдущиеДети
	|			ПО ДокументыДетей.НомерСтроки = УмершиеПредыдущиеДети.Очередность
	|		ПО (ДокументыДетей.НаРебенкаВыплачиваетсяПособие)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоды2011 КАК ВторойГодРасчета2011
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчет2011 КАК ЗаработокВторойГод
	|			ПО ВторойГодРасчета2011.Год = ЗаработокВторойГод.РасчетныйГод
	|				И ВторойГодРасчета2011.Ссылка = ЗаработокВторойГод.Ссылка
	|		ПО (ВторойГодРасчета2011.НомерСтроки = 2)
	|			И ОтпускПоУходуЗаРебенком.Ссылка = ВторойГодРасчета2011.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоды2011 КАК ПервыйГодРасчета2011
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчет2011 КАК ЗаработокПервыйГод
	|			ПО ПервыйГодРасчета2011.Год = ЗаработокПервыйГод.РасчетныйГод
	|				И ПервыйГодРасчета2011.Ссылка = ЗаработокПервыйГод.Ссылка
	|		ПО (ПервыйГодРасчета2011.НомерСтроки = 1)
	|			И ОтпускПоУходуЗаРебенком.Ссылка = ПервыйГодРасчета2011.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчет2010 КАК Расчет2010
	|		ПО ОтпускПоУходуЗаРебенком.Ссылка = Расчет2010.Ссылка
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= ДатыРегистра.ДатаНачалаСобытия
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.СокращенноеРабочееВремя
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|						ТОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОГДА РаботникиОрганизаций.ГрафикРаботы.СокращенноеРабочееВремя
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|			ТОГДА РаботникиОрганизаций.ГрафикРаботы.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоляВремени
	|ПОМЕСТИТЬ ВТДанныеСотрудника
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДанныеРегистра.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|		ДанныеРегистра.Сотрудник КАК Сотрудник,
	|		МАКСИМУМ(РаботникиОрганизаций.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТДанныеДокумента КАК ДанныеРегистра
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПО ДанныеРегистра.ДатаНачалаСобытия >= РаботникиОрганизаций.Период
	|				И ДанныеРегистра.Сотрудник = РаботникиОрганизаций.Сотрудник
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистра.ДатаНачалаСобытия,
	|		ДанныеРегистра.Сотрудник) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ДатыРегистра.ПериодРегистра = РаботникиОрганизаций.Период
	|			И ДатыРегистра.Сотрудник = РаботникиОрганизаций.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.ДатаПодачиЗаявления,
	|	ДанныеДокумента.ПеречислятьПособиеПочтовымПереводом,
	|	ДанныеДокумента.Банк,
	|	ДанныеДокумента.НаименованиеБанка,
	|	ДанныеДокумента.БИКБанка,
	|	ДанныеДокумента.КоррСчетБанка,
	|	ДанныеДокумента.НомерЛицевогоСчета,
	|	ДанныеДокумента.НаличиеКартыМИР,
	|	ДанныеДокумента.НомерКартыМИР,
	|	ДанныеДокумента.АдресПроживания,
	|	ДанныеДокумента.ФИОСотрудника,
	|	ДанныеДокумента.ДатаРождения,
	|	ДанныеДокумента.ПолСотрудника,
	|	ДанныеДокумента.ИННСотрудника,
	|	ДанныеДокумента.СНИЛССотрудника,
	|	ДанныеДокумента.АдресРегистрации,
	|	ДанныеДокумента.Телефон,
	|	ДанныеДокумента.ВидЗанятостиСотрудника,
	|	ДанныеДокумента.УдостоверениеЛичностиВид,
	|	ДанныеДокумента.УдостоверениеЛичностиСерия,
	|	ДанныеДокумента.УдостоверениеЛичностиНомер,
	|	ДанныеДокумента.УдостоверениеЛичностиДата,
	|	ДанныеДокумента.УдостоверениеЛичностиКемВыдан,
	|	ДанныеДокумента.УдостоверениеЛичностиСрокДействия,
	|	ДанныеДокумента.ФИОРуководителя,
	|	ДанныеДокумента.ДолжностьРуководителя,
	|	ДанныеДокумента.НаименованиеОрганизации,
	|	ДанныеДокумента.НаименованиеТерриториальногоОрганаФСС,
	|	ДанныеДокумента.ВЗонеСПравомНаОтселение,
	|	ДанныеДокумента.ВЗонеОтселения,
	|	ДанныеДокумента.ВЗонеСЛьготнымСтатусом,
	|	ДанныеДокумента.ПроживаниеВЗоне,
	|	ДанныеДокумента.РаботаВЗоне,
	|	ДанныеДокумента.ДатаСправкиОтОтца,
	|	ДанныеДокумента.НомерСправкиОтОтца,
	|	ДанныеДокумента.ДатаСправкиОтМатери,
	|	ДанныеДокумента.НомерСправкиОтМатери,
	|	ДанныеДокумента.СправкаОтОтцаОНеполученииПособия,
	|	ДанныеДокумента.СправкаОтМатериОНеполученииПособия,
	|	ДанныеДокумента.СправкаОтОбоихРодителейОНеполученииПособия,
	|	ДанныеДокумента.СерияСвидетельстваОРождении,
	|	ДанныеДокумента.НомерСвидетельстваОРождении,
	|	ДанныеДокумента.ДатаСвидетельстваОРождении,
	|	ДанныеДокумента.НомерИногоПодтвержденияРождения,
	|	ДанныеДокумента.ДатаИногоПодтвержденияРождения,
	|	ДанныеДокумента.НомерРешенияОбОпеке,
	|	ДанныеДокумента.ДатаРешенияОбОпеке,
	|	ДанныеДокумента.НаличиеДокументаОРожденииПредыдущегоРебенка,
	|	ДанныеДокумента.НаличиеДокументаОСмертиПредыдущегоРебенка,
	|	ДанныеДокумента.ЗаявлениеРаботникаОЗаменеКалендарныхГодов,
	|	ДанныеДокумента.ПервыйГод,
	|	ДанныеДокумента.ВторойГод,
	|	ДанныеДокумента.ТретийГод,
	|	ДанныеДокумента.ЧетвертыйГод,
	|	ДанныеДокумента.ЗаявлениеПоМатеринству2010,
	|	ДанныеДокумента.ЧислоКалендарныхДней,
	|	ДанныеДокумента.СреднийЗаработок,
	|	ДанныеДокумента.ЗаявлениеПоМатеринству2010ДатаНачало,
	|	ДанныеДокумента.ЗаявлениеПоМатеринству2010ДатаОкончание,
	|	ДанныеДокумента.ДатаВыдачиДокументаНаПроживание,
	|	ДанныеДокумента.НомерДокументаНаПроживание,
	|	ДанныеДокумента.СерияДокументаНаПроживание,
	|	ДанныеДокумента.НаименованиеДокументаНаПроживание,
	|	ЕСТЬNULL(ДанныеСотрудника.ДоляВремени, 0) КАК ДоляВремени,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.РасчетПособияИзТарифнойСтавки
	|				И ЕСТЬNULL(ДанныеСотрудника.ДоляВремени, 0) > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеполноеРабочееВремя,
	|	ДанныеДокумента.ТарифнаяСтавкаОклад,
	|	ДанныеДокумента.ДатаПриказаНаОтпускПоУходуЗаРебенком,
	|	ДанныеДокумента.НомерПриказаНаОтпускПоУходуЗаРебенком,
	|	ДанныеДокумента.ОтпускПоУходуЗаРебенкомДатаНачало,
	|	ДанныеДокумента.ОтпускПоУходуЗаРебенкомДатаОкончание,
	|	ДанныеДокумента.ТелефонСоставителя,
	|	ДанныеДокумента.ДатаСправкиПоДругимМестамРаботы,
	|	ДанныеДокумента.НомерСправкиПоДругимМестамРаботы,
	|	ДанныеДокумента.Фамилия,
	|	ДанныеДокумента.Имя,
	|	ДанныеДокумента.Отчество
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудника КАК ДанныеСотрудника
	|		ПО (ИСТИНА)";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ФизЛицо", Уполномоченный);
	Выборка = Запрос.Выполнить().Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеВФССОВыплатеПособия";
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураДанныхЗаявления, Выборка);
		
		ТабДокументЗаявления = ОбменСведениямиОПособияхСФСС.ПечатьЗаявлениеВФССОВыплатеПособия(СтруктураДанныхЗаявления, ИмяМакета);
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли; 
		
		ТабДокумент.Вывести(ТабДокументЗаявления);
		
	КонецЦикла;
	
	Возврат ТабДокумент
	
КонецФункции // ПечатьЗаявления()

// Функция формирует табличный документ с печатной формой "Т-6",
//
// Возвращаемое значение:
//	Табличный документ - печатная форма
//
Функция ПечатьТ6_2004()
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтпускПоУходуЗаРебенком_Т6";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	// получаем данные для печати
	Выборка = СформироватьЗапросДляПечати2004().Выбрать();
	//ВыборкаРаботники = СформироватьЗапросДляПечати2004("ПоТабличнойЧастиДокумента").Выбрать();

	// запоминаем области макета
	Макет = ПолучитьМакет("Т6_от_5_1_2004");
	ОбластьМакетаОтчета = Макет.ПолучитьОбласть("Т6"); // Область документа

	Если Выборка.Следующий() Тогда
		ОбластьМакетаОтчета.Параметры.Заполнить(Выборка); // Шапка документа.
		
		РезультатСклонения = "";
		Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Выборка.Работник, 3,Выборка.ФизЛицоПол, РезультатСклонения) Тогда
			ОбластьМакетаОтчета.Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		ОбластьМакетаОтчета.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаОтчета.Параметры.НазваниеОрганизации);
		
		ТабДокумент.Вывести(ОбластьМакетаОтчета);
	КонецЕсли;

	// если не было ни одного сотрудника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
		ТабДокумент.Вывести(ОбластьМакетаОтчета);
	КонецЕсли;

	Возврат ТабДокумент;

КонецФункции // ПечатьТ6()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//	Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//	НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	// Получить экземпляр документа на печать
	ИмяФормы = "";
	Если ИмяМакета = "Т6_от_5_1_2004" Тогда
		ИмяФормы	= " (форма Т-6)";
		ТабДокумент	= ПечатьТ6_2004()
	ИначеЕсли ИмяМакета = "РасчетСреднегоЗаработка" Тогда
		
		Если ЕстьРасчетыПоКалендарнымГодам() Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Отчет формируется только для отпусков, начавшихся до 1 января 2011 года!");
			Возврат Неопределено;
		КонецЕсли;
		
		ИмяФормы = " (расчет среднего заработка)";
		Если Не Проведен Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Расчет среднего заработка можно распечатать только после проведения документа!");
			Возврат Неопределено;
		КонецЕсли;
		
		ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
		Если ДатаОкончания >= ДатаЗакона213ФЗ и ДатаНачала < ДатаЗакона213ФЗ Тогда // переходный период 2009-2010 годов
			СписокСоставляющихСреднегоЗаработка = Новый Массив(2); 
			СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособий;
			СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособий;
			Начало = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачала, 12, "с " + Формат(ДатаНачала,"ДФ=dd.MM.yyyy") + " по " + Формат(ДатаОкончанияПособияДоПолутораЛет,"ДФ=dd.MM.yyyy"), Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет, Ложь, СписокСоставляющихСреднегоЗаработка);
			СписокСоставляющихСреднегоЗаработка = Новый Массив(2); 
			СписокСоставляющихСреднегоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010;
			СписокСоставляющихСреднегоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010;
			Продолжение = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачала, 12, "с " + Формат(ДатаНачала,"ДФ=dd.MM.yyyy") + " по " + Формат(ДатаОкончанияПособияДоПолутораЛет,"ДФ=dd.MM.yyyy"), Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет, Ложь, СписокСоставляющихСреднегоЗаработка, Ложь);
			
			Макет = ПолучитьОбщийМакет("РасчетСреднегоЗаработка");
			Секция = Макет.ПолучитьОбласть("ШапкаОсобая");
	        Секция.Параметры.ЗаголовокРаздела = "Расчет среднего заработка по правилам 2010 года";
			ТабДокумент = Новый ТабличныйДокумент;
			ТабДокумент.Вывести(Начало);
			ТабДокумент.Вывести(Секция);
			ТабДокумент.Вывести(Продолжение);
		Иначе 
			ТабДокумент = ФормированиеПечатныхФормЗК.ПечатьРасчетаСреднегоЗаработка(Ссылка, ДатаНачала, 12, "с " + Формат(ДатаНачала,"ДФ=dd.MM.yyyy") + " по " + Формат(ДатаОкончанияПособияДоПолутораЛет,"ДФ=dd.MM.yyyy"), Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет, Ложь);
		КонецЕсли;
		
	ИначеЕсли ИмяМакета = "РасчетСреднегоЗаработка2011" Тогда                                                                                                         
		
		Если Не ЕстьРасчетыПоКалендарнымГодам() Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Отчет формируется только для отпусков, рассчитываемых по правилам 2011 года!");
			Возврат Неопределено;
		КонецЕсли;
		
		ТабДокумент = ФормированиеПечатныхФормЗК.РасчетСреднегоЗаработкаПособий2011(ЭтотОбъект, , , "с " + Формат(ДатаНачала, "ДФ=dd.MM.yyyy") + " по " + Формат(ДатаОкончанияПособияДоПолутораЛет,"ДФ=dd.MM.yyyy"));
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (расчет среднего заработка)");
		
	ИначеЕсли ИмяМакета = "АнализСкидки" Тогда                                                                                                         
		ИмяФормы	= " (анализ учтенных сумм скидки)";
		ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
		Если ДатаОкончанияПособияДоПолутораЛет < ДатаЗакона213ФЗ Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Материальная помощь учитывается только с " + Формат(ДатаЗакона213ФЗ,"ДЛФ=DD") + "!");
			Возврат Неопределено;
		КонецЕсли;
		Если ЕстьРасчетыПоКалендарнымГодам() Тогда
			РаботаСДиалогами.ВывестиПредупреждение("Отчет формируется только для пособий за 2010 год!");
			Возврат Неопределено;
		КонецЕсли;
		Если РасчетСреднего.Количество() = 0 Тогда  
			РаботаСДиалогами.ВывестиПредупреждение("Анализ учтенных сумм материальной помощи можно распечатать только после расчета!");
			Возврат Неопределено;
		КонецЕсли;
		ТабДокумент = ФормированиеПечатныхФормЗК.АнализУчтеннойВРасчетеСреднегоСкидки(ЭтотОбъект);
	ИначеЕсли Лев(ИмяМакета,20) = "ЗаявлениеЧистыйБланк" Тогда                                                                                                         
		ТабДокумент = ОбменСведениямиОПособияхСФСС.ПечатьЗаявлениеВФССОВыплатеПособия(ОбменСведениямиОПособияхСФСС.СтруктураДанныхДляПечатиЗаявленийВФССОВыплатеПособия(), "ЗаявлениеВФССОВыплатеПособия" + Прав(ИмяМакета,5));
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, , , ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (бланк заявления)", , ТабДокумент);
	ИначеЕсли Лев(ИмяМакета,28) = "ЗаявлениеВФССОВыплатеПособия" Тогда                                                                                                         
		ТабДокумент = ПечатьЗаявления(ИмяМакета);
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, , , ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект, Метаданные().Синоним) + " (заявление на пособие)", , ТабДокумент);
	КонецЕсли;
	
	Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект,Метаданные().Синоним + ИмяФормы));
	
КонецФункции // Печать()

#КонецЕсли

Процедура ЗаполнитьДанныеОрганизации()

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбменСведениямиОПособияхСФСС.ДанныеОрганизацииДляЗаявленияНаВыплатуПособия(Организация, Дата));

КонецПроцедуры

Процедура ЗаполнитьДанныеСотрудника()

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбменСведениямиОПособияхСФСС.ДанныеСотрудникаДляЗаявленияНаВыплатуПособия(Организация, Сотрудник, Дата));

КонецПроцедуры

Процедура Автозаполнение(Режим = Неопределено) Экспорт
	
	Если Режим = "ДанныеСотрудника" Тогда
		ЗаполнитьДанныеСотрудника()
	ИначеЕсли Режим = "ДанныеСтрахователя" Тогда
		ЗаполнитьДанныеОрганизации()
	Иначе	
		ЗаполнитьДанныеОрганизации();
		ЗаполнитьДанныеСотрудника();
	КонецЕсли;
	
КонецПроцедуры

// Выполняет заполнение таблицы плановых начислений и удержаний 
Процедура ЗаполнитьПлановыеНачисленияУдержания() Экспорт
	
	Запрос = Новый Запрос;
	
	// Соберем ссылки на все документы - исправления текущего регистратора
	МассивДокументов = Новый Массив;
	МассивДокументов.Добавить(Ссылка);
	Если Не ИсправляемыйДокумент.Пустая() Тогда
		МассивДокументов.Добавить(ИсправляемыйДокумент);
	КонецЕсли;
	МетаданныеРегистратора = Ссылка.Метаданные();
	Если МетаданныеРегистратора.Реквизиты.Найти("ИсправляемыйДокумент") <> Неопределено Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Док.ИсправляемыйДокумент
		|ИЗ
		|	Документ." + МетаданныеРегистратора.Имя + " КАК Док
		|ГДЕ
		|	Док.Ссылка = &Регистратор";
		
		Регистратор = ИсправляемыйДокумент;
		Пока Регистратор <> Неопределено И Не Регистратор.Пустая() Цикл
			Запрос.УстановитьПараметр("Регистратор",	Регистратор);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Регистратор = Выборка.ИсправляемыйДокумент;
				Если Регистратор <> Неопределено И Не Регистратор.Пустая() Тогда
					МассивДокументов.Добавить(Регистратор);
				КонецЕсли;
			Иначе
				Регистратор = Неопределено;
			КонецЕсли;
		КонецЦикла;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Док.Ссылка
		|ИЗ
		|	Документ." + МетаданныеРегистратора.Имя + " КАК Док
		|ГДЕ
		|	Док.ИсправляемыйДокумент = &Регистратор";
		
		Регистратор = Ссылка;
		Пока Регистратор <> Неопределено И Не Регистратор.Пустая() Цикл
			Запрос.УстановитьПараметр("Регистратор",	Регистратор);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Регистратор = Выборка.Ссылка;
				Если Регистратор <> Неопределено И Не Регистратор.Пустая() Тогда
					МассивДокументов.Добавить(Регистратор);
				КонецЕсли;
			Иначе
				Регистратор = Неопределено;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Прекратим действующие до даты документа начисления сотрудника
	Запрос.УстановитьПараметр("ФизЛицо",				Физлицо);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Регистраторы",			МассивДокументов);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаАктуальности",		?(ЗначениеЗаполнено(ДатаНачала),ДатаНачала,Дата));
	
	ОтпускаПоУходу = Новый Массив;
	ОтпускаПоУходу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты);
	ОтпускаПоУходу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет);
	ОтпускаПоУходу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет);
	Запрос.УстановитьПараметр("ОтпускаПоУходу",ОтпускаПоУходу);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА СрезПлановыхНачислений.ПериодЗавершения <= &ДатаАктуальности
	|				И СрезПлановыхНачислений.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА СрезПлановыхНачислений.ВидРасчетаЗавершения
	|		ИНАЧЕ СрезПлановыхНачислений.ВидРасчета
	|	КОНЕЦ КАК ВидРасчета,
	|	СрезПлановыхНачислений.Сотрудник,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить) КАК Действие
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|			&ДатаАктуальности,
	|			Сотрудник.ФизЛицо = &ФизЛицо
	|				И (НЕ ВидРасчетаИзмерение ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций)
	|				И Организация = &ГоловнаяОрганизация
	|				И (НЕ Регистратор В (&Регистраторы))) КАК СрезПлановыхНачислений
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СрезПлановыхНачислений.ПериодЗавершения <= &ДатаАктуальности
	|					И СрезПлановыхНачислений.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА СрезПлановыхНачислений.ДействиеЗавершения
	|			ИНАЧЕ СрезПлановыхНачислений.Действие
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	И (НЕ ВЫБОР
	|				КОГДА СрезПлановыхНачислений.ПериодЗавершения <= &ДатаАктуальности
	|						И СрезПлановыхНачислений.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА СрезПлановыхНачислений.ВидРасчетаЗавершения
	|				ИНАЧЕ СрезПлановыхНачислений.ВидРасчета
	|			КОНЕЦ В (&ОтпускаПоУходу))";
	
	ОбычныеЗаписи = ОсновныеНачисления.НайтиСтроки(Новый Структура("Сторно", Ложь));
	Для Каждого ОбычнаяЗапись Из ОбычныеЗаписи Цикл
		ОсновныеНачисления.Удалить(ОбычнаяЗапись);
	КонецЦикла;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ОсновныеНачисления.Добавить(), Выборка);
	КонецЦикла;
	
	// Прекратим действующие до даты документа удержания сотрудника
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СрезПлановыхУдержаний.ВидРасчета КАК ВидРасчета,
	|	СрезПлановыхУдержаний.ДокументОснование КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить) КАК Действие
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&ДатаАктуальности,
	|			ФизЛицо = &ФизЛицо
	|				И Организация = &ГоловнаяОрганизация
	|				И (НЕ Регистратор В (&Регистраторы))
	|				И (НЕ ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист)) КАК СрезПлановыхУдержаний
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СрезПлановыхУдержаний.ПериодЗавершения <= &ДатаАктуальности
	|					И СрезПлановыхУдержаний.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА СрезПлановыхУдержаний.ДействиеЗавершения
	|			ИНАЧЕ СрезПлановыхУдержаний.Действие
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)";
	
	ОбычныеЗаписи = ПлановыеУдержания.НайтиСтроки(Новый Структура("Сторно", Ложь));
	Для Каждого ОбычнаяЗапись Из ОбычныеЗаписи Цикл
		ПлановыеУдержания.Удалить(ОбычнаяЗапись);
	КонецЦикла;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ПлановыеУдержания.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет документ по перерассчитываемому документу
// ИсходныйДокумент - тип ДокументОбъект.ОтпускПоУходуЗаРебенком
//
Процедура ЗаполнитьПоПерерассчитываемомуДокументу(ИсходныйДокумент, Сотрудники = Неопределено) Экспорт
	
	ПроведениеРасчетов.ЗаполнитьИсправлениеПоКадровомуДокументу(ЭтотОбъект, ИсходныйДокумент.Ссылка, Сотрудники);
	
КонецПроцедуры // ЗаполнитьПоПерерассчитываемомуДокументу()

Процедура Перерассчитать(Физлица = Неопределено) Экспорт
	
	// Выполним полный перерасчет документа
	Рассчитать(Новый Структура("Начисления,РасчетСреднего",Истина,Истина), Истина);
	
	// Зафиксируем данные табличных частей после расчета
	Записать();
	
	Если ВыплачиватьПособиеДоПолутораЛет Тогда
		Для каждого Движение Из Движения.ПлановыеНачисленияРаботниковОрганизаций Цикл
			Если Движение.ВидРасчетаИзмерение <> ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет Тогда
				Продолжить;
			КонецЕсли;
			Движение.Показатель1 = СреднедневнойЗаработок;
			Движение.Показатель6 = ДополнительныйСреднедневнойЗаработок;
		КонецЦикла;
		Движения.ПлановыеНачисленияРаботниковОрганизаций.Записать();
	КонецЕсли;
	
	НаборЗаписейПерерасчета = РегистрыРасчета.РасчетСреднегоЗаработка.Перерасчеты.ПерерасчетСреднегоЗаработка.СоздатьНаборЗаписей();
	НаборЗаписейПерерасчета.Отбор.ОбъектПерерасчета.Значение = Ссылка;
	НаборЗаписейПерерасчета.Записать();
	
КонецПроцедуры // Перерассчитать()

Процедура Рассчитать(РассчитываемыеТаблицы, РежимПерерасчета = Ложь, КомментироватьРасчет = Ложь) Экспорт
	
	//Перед вызовом процедуры документ должнен быть записан, движения должны быть удалены 
	
	Отказ = Ложь;
	
	Заголовок = СтрЗаменить(ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка),"Проведение документа: ","Расчет документа: ");
	// ДатаНачала
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата начала отпуска!", Отказ, Заголовок);
	КонецЕсли;
	// ДатаОкончания
	Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата окончания отпуска!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	// позиционируем выборку
	ВыборкаПоШапкеДокумента.Следующий();
	
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок, Ложь);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	// Создадим наборы записей используемых регистров 
	НаборОсновныеНачисления = РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций.СоздатьНаборЗаписей();
	НаборОсновныеНачисления.Отбор.Регистратор.Значение = Ссылка;
	
	НаборРасчетСреднего = РегистрыРасчета.РасчетСреднегоЗаработка.СоздатьНаборЗаписей();
	НаборРасчетСреднего.Отбор.Регистратор.Значение = Ссылка;
	
	Если Не РассчитываемыеТаблицы.РасчетСреднего Тогда

		// получим реквизиты табличной части РасчетСреднего 
		
		ВыборкаПоРасчетСреднего = СформироватьЗапросПоРасчетСреднего().Выбрать();
		Пока ВыборкаПоРасчетСреднего.Следующий() Цикл
			
			// проверим очередную строку табличной части
			ПроверитьЗаполнениеСтрокиРасчетСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоРасчетСреднего, Отказ, Заголовок);
			
			Если НЕ Отказ Тогда
				ОтпускПоУходуЗаРебенкомПереопределяемый.ДобавитьСтрокуРасчетаСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоРасчетСреднего, НаборРасчетСреднего);
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ Отказ Тогда
			НаборРасчетСреднего.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат
	КонецЕсли; 
	
	СформироватьДвиженияПоНачислениям(ВыборкаПоШапкеДокумента, НаборОсновныеНачисления);
	
	ДатаЗакона213ФЗ = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();

	// рассчитываем записи начислений и если надо, записи расчета среднего заработка
	Если РассчитываемыеТаблицы.РасчетСреднего Тогда
		НаборОсновныеНачисления.Записать(Истина, Ложь, Истина, Ложь);
		Если ЕстьРасчетыПоКалендарнымГодам() Тогда
			// расчет среднего по правилам 2011 года
			Если РассчитываемыеТаблицы.Начисления Тогда
				ПроведениеРасчетов.РасчетЗаработкаПособийС2011года(ЭтотОбъект, ВыборкаПоШапкеДокумента, НаборРасчетСреднего, , КомментироватьРасчет, ДатаСобытия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству());
			Иначе
				ПроведениеРасчетов.РасчетЗаработкаПособийС2011года(ЭтотОбъект, , , , КомментироватьРасчет, ДатаСобытия() >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству());
			КонецЕсли;
		Иначе
			ПроведениеРасчетовПереопределяемый.СформироватьИЗаписатьДанныеРасчетаСреднего("ОсновныеНачисленияРаботниковОрганизаций", Ссылка, НаборРасчетСреднего, КомментироватьРасчет);
			РасчетСреднего.Загрузить(НаборРасчетСреднего.Выгрузить());
		КонецЕсли;
	КонецЕсли;
	Если РассчитываемыеТаблицы.Начисления Тогда
		
		Если НаборОсновныеНачисления.Модифицированность() Тогда
			НаборОсновныеНачисления.Записать(Истина, Ложь, Истина, Ложь);
		КонецЕсли;
		
		МассивСпособовРасчета = Новый Массив;
		МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);
		НеобходимыеДанные = ПроведениеРасчетовПереопределяемый.ПолучитьСтруктуруНеобходимыхДанных(МассивСпособовРасчета,Новый Массив);
		НеобходимыеДанные.СреднийЗаработок = Истина;
		НеобходимыеДанные.СреднийЗаработокПособий = Истина;
		НеобходимыеДанные.РазмерОграниченияПособия = Истина;
		
		ИсходныеДанные = ПроведениеРасчетовПереопределяемый.ПолучитьДанныеДляРасчета("ОсновныеНачисленияРаботниковОрганизаций", 
									ВыборкаПоШапкеДокумента.КатегорияРасчета, 
									НеобходимыеДанные, 
									Ссылка, 
									ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, 
									НачалоМесяца(ДатаНачала));
									
									
		Если ДатаНачала < ДатаЗакона213ФЗ Тогда
			
			ДополнительныйСреднедневнойЗаработок = 0;
			Если Не ИсходныеДанные.Следующий() Или НЕ ЗначениеЗаполнено(ИсходныеДанные.СреднийЗаработокПособий) Или Не ЗначениеЗаполнено(ИсходныеДанные.ОтработаноДнейПособий) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Нет данных для расчета среднедневного заработка!",,Заголовок);
				СреднедневнойЗаработок = 0;
			Иначе 	
				СреднедневнойЗаработок = Окр(ИсходныеДанные.СреднийЗаработокПособий / ИсходныеДанные.ОтработаноДнейПособий,2);
			КонецЕсли;	
			
		КонецЕсли;
		
		Если Не ЕстьРасчетыПоКалендарнымГодам() И ДатаОкончания >= ДатаЗакона213ФЗ Тогда
			
			Если ДатаНачала < ДатаЗакона213ФЗ Тогда
				Если Не ИсходныеДанные.Следующий() Или Не ЗначениеЗаполнено(ИсходныеДанные.СреднийЗаработокПособий2010) Или Не ЗначениеЗаполнено(ИсходныеДанные.ОтработаноДнейПособий2010) Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Нет данных для расчета среднедневного заработка!",,Заголовок);
					ДополнительныйСреднедневнойЗаработок = 0;
				Иначе 	
					ДополнительныйСреднедневнойЗаработок = Окр(ИсходныеДанные.СреднийЗаработокПособий2010 / ИсходныеДанные.ОтработаноДнейПособий2010,2);
				КонецЕсли;
			ИначеЕсли Не ИсходныеДанные.Следующий() Или Не ЗначениеЗаполнено(ИсходныеДанные.СреднийЗаработокПособий2010) Или Не ЗначениеЗаполнено(ИсходныеДанные.ОтработаноДнейПособий2010) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Нет данных для расчета среднедневного заработка!",,Заголовок);
				СреднедневнойЗаработок = 0;
			Иначе 	
				СреднедневнойЗаработок = Окр(ИсходныеДанные.СреднийЗаработокПособий2010 / ИсходныеДанные.ОтработаноДнейПособий2010,2);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЕстьРасчетыПоКалендарнымГодам() Тогда
			ДополнительныйСреднедневнойЗаработок = 0;
			СреднедневнойЗаработок = 0;
			Если Не ИсходныеДанные.Следующий() Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Нет данных для расчета среднедневного заработка!",,Заголовок);
			Иначе                                                                                               
				Если ЗначениеЗаполнено(ИсходныеДанные.СреднийЗаработокПособий2011) Тогда
					Если ДатаНачала >= ПроведениеРасчетов.ДатаОтдельногоРасчетаПособийПоМатеринству() Тогда					
						Если ИсходныеДанные.ОсобыйПорядокРасчетаСреднего Тогда
							УчитываемыхДнейВКалендарныхГодах = ИсходныеДанные.УчитываемыхДнейВКалендарныхГодахПриОсобомПорядкеРасчета - ИсходныеДанные.ИсключаемыхДнейДляПособийПоМатеринству;
							СреднедневнойЗаработок = ?(ЗначениеЗаполнено(УчитываемыхДнейВКалендарныхГодах), Мин(ИсходныеДанные.ОграничениеСреднегоПриОсобомПорядкеРасчета, Окр(ИсходныеДанные.СреднийЗаработокПособий2011БезОграничений / УчитываемыхДнейВКалендарныхГодах,2)), 0);
						Иначе
							СреднедневнойЗаработок = ?(ЗначениеЗаполнено(ИсходныеДанные.ОтработаноДнейДляПособийПоМатеринству), Мин(Окр(ИсходныеДанные.МаксимальныйСреднийДвухПредшествующихКалендарныхЛет, 2), Окр(ИсходныеДанные.СреднийЗаработокПособий2011 / ИсходныеДанные.ОтработаноДнейДляПособийПоМатеринству,2)), 0);
						КонецЕсли;
					Иначе
						СреднедневнойЗаработок = Окр(ИсходныеДанные.СреднийЗаработокПособий2011 / 730,2);
					КонецЕсли;
				КонецЕсли;
				ДополнительныйСреднедневнойЗаработок = СреднедневнойЗаработок;
				НормаВремени = 730 / 24;
				РазмерОграниченияСнизу = ИсходныеДанные.РазмерММОТ * Мин(ИсходныеДанные.ДоляММОТ, 1);
				Если СреднедневнойЗаработок < РазмерОграниченияСнизу / НормаВремени Тогда
					СреднедневнойЗаработок = Окр(РазмерОграниченияСнизу / НормаВремени * Макс(1, ИсходныеДанные.РайонныйКоэффициентРФОрганизации), 2);
					Если ДатаНачала >= '20170101' Тогда
						ДополнительныйСреднедневнойЗаработок = Окр(РазмерОграниченияСнизу * Макс(1, ИсходныеДанные.РайонныйКоэффициентРФОрганизации), 2);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не РежимПерерасчета И НаборРасчетСреднего.Количество() > 0 Тогда
		НаборРасчетСреднего.Очистить();
		НаборРасчетСреднего.Записать();
	КонецЕсли;
	
	// Удаляем вспомогательные движения  
	НаборОсновныеНачисления.Очистить();
	НаборОсновныеНачисления.Записать(Истина, Ложь, Истина, Ложь);
	
КонецПроцедуры  // РассчитатьНачисления

Функция ЕстьРасчетыПоКалендарнымГодам() Экспорт

	ДатаЗакона = ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования();
	Возврат Не РасчетПоПравилам2010Года И (ДатаНачала >= ДатаЗакона Или Не ЗначениеЗаполнено(ДатаНачала) И Дата >= ДатаЗакона);

КонецФункции // ЕстьРасчетыПоКалендарнымГодам()

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Если НастройкаПравДоступаПереопределяемый.ДоступнаРольРасчетчикаРегл() Тогда
		Возврат Новый Структура("Т6_от_5_1_2004, РасчетСреднегоЗаработка2011, РасчетСреднегоЗаработка, АнализСкидки", "Форма Т-6", "Расчет среднего заработка с 2011 года", "Расчет среднего заработка до 2011 года", "Анализ учтенных сумм скидки по мат.помощи");
	Иначе
		Возврат Новый Структура("Т6_от_5_1_2004", "Форма Т-6");
	КонецЕсли;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Функция ДатаСобытия() Экспорт 

	Возврат ДатаНачала

КонецФункции 

Функция ДатаНазначенияПособия() Экспорт 

	Возврат ДатаНачала

КонецФункции 

Функция ПриНачисленииПособияИспользоватьОграниченныйЗаработок() Экспорт 

	Возврат Истина

КонецФункции 

Функция ЭтоПособиеПоМатеринству() Экспорт 

	Возврат Истина

КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры:
//	Режим - режим проведения
//
// Возвращаемое значение:
//	Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);
	Запрос.УстановитьПараметр("Дата" , ДатаНачала);
	Запрос.УстановитьПараметр("Сотрудник" , Сотрудник);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Дата,
	|	ОтпускПоУходуЗаРебенком.Организация,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ОтпускПоУходуЗаРебенком.Организация
	|		ИНАЧЕ ОтпускПоУходуЗаРебенком.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ОтпускПоУходуЗаРебенком.Ответственный,
	|	ОтпускПоУходуЗаРебенком.Ссылка,
	|	ОтпускПоУходуЗаРебенком.ИсправляемыйДокумент.Сотрудник КАК ИсправляемыйДокументСотрудник,
	|	ОтпускПоУходуЗаРебенком.Сотрудник,
	|	ОтпускПоУходуЗаРебенком.Сотрудник.Физлицо КАК Физлицо,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончания,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВнутреннийСовместитель,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ОтпускПоУходуЗаРебенком.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ОтпускПоУходуЗаРебенком.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	ОсновныеНачисленияОрганизаций.КатегорияРасчета,
	|	ОсновныеНачисленияОрганизаций.СпособРасчета,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончанияПособияДоПолутораЛет,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончанияПособияДоТрехЛет,
	|	ОтпускПоУходуЗаРебенком.СреднедневнойЗаработок,
	|	ОтпускПоУходуЗаРебенком.КоличествоДетей,
	|	ОтпускПоУходуЗаРебенком.КоличествоПервыхДетей,
	|	ОтпускПоУходуЗаРебенком.ВыплачиватьПособиеДоПолутораЛет,
	|	ОтпускПоУходуЗаРебенком.ВыплачиватьПособиеДоТрехЛет,
	|	ОтпускПоУходуЗаРебенком.ОсвобождатьСтавку,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Сотрудник.Организация = ВЫБОР
	|				КОГДА ОтпускПоУходуЗаРебенком.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ОтпускПоУходуЗаРебенком.Организация
	|				ИНАЧЕ ОтпускПоУходуЗаРебенком.Организация.ГоловнаяОрганизация
	|			КОНЕЦ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	ОтпускПоУходуЗаРебенком.ДополнительныйСреднедневнойЗаработок,
	|	ОтпускПоУходуЗаРебенком.ПрименятьЛьготыПриНачисленииПособия,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала КАК ДатаНачалаСобытия,
	|	НАЧАЛОПЕРИОДА(ОтпускПоУходуЗаРебенком.ДатаНачала, МЕСЯЦ) КАК ПериодРегистрации
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|		ПО (ОсновныеНачисленияОрганизаций.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.Ссылка = &ДокументСсылка";
	
	Запрос.Текст = ТекстЗапроса;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

Функция СформироватьЗапросПоРабочимМестам(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("Дата" , ДатаНачала);
	Запрос.УстановитьПараметр("Физлицо" , ВыборкаПоШапкеДокумента.Физлицо);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация" , ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ЗанимаемыхСтавокЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ЗанимаемыхСтавок
	|	КОНЕЦ КАК ЗанимаемыхСтавок,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА &Дата >= РаботникиОрганизацииСрезПоследних.ПериодЗавершения
	|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения
	|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность
	|	КОНЕЦ КАК Должность,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник,
	|	РаботникиОрганизацииСрезПоследних.Организация
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&Дата,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					СотрудникиОрганизаций.Ссылка
	|				ИЗ
	|					Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|				ГДЕ
	|					СотрудникиОрганизаций.Физлицо = &Физлицо
	|					И СотрудникиОрганизаций.Организация = &ГоловнаяОрганизация)) КАК РаботникиОрганизацииСрезПоследних
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
	|					И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";
	
	Запрос.Текст = ТекстЗапроса;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРабочимМестам()

// Формирует запрос по таблице "ПлановыеНачисления" документа
//
// Параметры:
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоОсновнымНачислениям(ВыборкаПоШапкеДокумента, КонтрольКоличестваСтавокШтатногоРасписания, КонтрольРазмераСтавокШтатногоРасписания)
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Если КонтрольКоличестваСтавокШтатногоРасписания Тогда
		
		Запрос.УстановитьПараметр("Дата", ДатаНачала);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧНачисления.Ссылка КАК Ссылка,
		|	ТЧНачисления.НомерСтроки КАК НомерСтроки,
		|	ТЧНачисления.Сотрудник КАК Сотрудник,
		|	ТЧНачисления.Ссылка.ДатаНачала КАК Период,
		|	ТЧНачисления.Действие КАК Действие,
		|	ВЫБОР
		|		КОГДА ТЧНачисления.Ссылка.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДОБАВИТЬКДАТЕ(ТЧНачисления.Ссылка.ДатаОкончания, ДЕНЬ, 1)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК ПериодЗавершения,
		|	ВЫБОР
		|		КОГДА ТЧНачисления.Ссылка.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ВЫБОР
		|					КОГДА ТЧНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
		|					КОГДА ТЧНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|					ИНАЧЕ ТЧНачисления.Действие
		|				КОНЕЦ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.ПустаяСсылка)
		|	КОНЕЦ КАК ДействиеЗавершения,
		|	ТЧНачисления.ВидРасчета КАК ВидРасчета,
		|	ВЫБОР
		|		КОГДА ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|			ТОГДА """"
		|		ИНАЧЕ ТЧНачисления.ВидРасчета
		|	КОНЕЦ КАК ВидРасчетаИзмерение,
		|	ТЧНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,
		|	ТЧНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
		|	ТЧНачисления.ВидРасчета.ПроизвольнаяФормулаРасчета КАК ПроизвольнаяФормулаРасчета,
		|	ТЧНачисления.Показатель1 КАК Показатель1,
		|	ТЧНачисления.Валюта1 КАК Валюта1,
		|	ТЧНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
		|	ТЧНачисления.Показатель2 КАК Показатель2,
		|	ТЧНачисления.Валюта2 КАК Валюта2,
		|	ТЧНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
		|	ТЧНачисления.Показатель3 КАК Показатель3,
		|	ТЧНачисления.Валюта3 КАК Валюта3,
		|	ТЧНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
		|	ТЧНачисления.Показатель4 КАК Показатель4,
		|	ТЧНачисления.Валюта4 КАК Валюта4,
		|	ТЧНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
		|	ТЧНачисления.Показатель5 КАК Показатель5,
		|	ТЧНачисления.Валюта5 КАК Валюта5,
		|	ТЧНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
		|	ТЧНачисления.Показатель6 КАК Показатель6,
		|	ТЧНачисления.Валюта6 КАК Валюта6,
		|	ТЧНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	Документ.ОтпускПоУходуЗаРебенком.ОсновныеНачисления КАК ТЧНачисления
		|ГДЕ
		|	ТЧНачисления.Ссылка = &ДокументСсылка
		|	И (НЕ ТЧНачисления.Сторно)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧНачисления.НомерСтроки КАК НомерСтроки,
		|	ТЧНачисления.Ссылка,
		|	ТЧНачисления.Сотрудник,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизацииЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.ДолжностьЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.Должность
		|	КОНЕЦ КАК Должность,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.ЗанимаемыхСтавокЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ЗанимаемыхСтавок
		|	КОНЕЦ КАК ЗанимаемыхСтавок,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.ГрафикРаботыЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.ГрафикРаботы
		|	КОНЕЦ КАК ГрафикРаботы,
			///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 27.10.2011 14:44 
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацииСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА РаботникиОрганизацииСрезПоследних.AVTШтатноеРасписаниеЗавершения
		|		ИНАЧЕ РаботникиОрганизацииСрезПоследних.AVTШтатноеРасписание
		|	КОНЕЦ КАК AVTШтатноеРасписание,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА}
		|	ТЧНачисления.Период,
		|	ТЧНачисления.Действие,
		|	ТЧНачисления.ПериодЗавершения,
		|	ТЧНачисления.ДействиеЗавершения,
		|	ТЧНачисления.ВидРасчета,
		|	ТЧНачисления.ВидРасчетаИзмерение,
		|	ТЧНачисления.СпособРасчета,
		|	ТЧНачисления.ЗачетОтработанногоВремени,
		|	ТЧНачисления.ТребуетВводаТарифногоРазряда,
		|	ТЧНачисления.ПроизвольнаяФормулаРасчета,
		|	ТЧНачисления.Показатель1,
		|	ТЧНачисления.Валюта1,
		|	ТЧНачисления.ТарифныйРазряд1,
		|	ТЧНачисления.Показатель2,
		|	ТЧНачисления.Валюта2,
		|	ТЧНачисления.ТарифныйРазряд2,
		|	ТЧНачисления.Показатель3,
		|	ТЧНачисления.Валюта3,
		|	ТЧНачисления.ТарифныйРазряд3,
		|	ТЧНачисления.Показатель4,
		|	ТЧНачисления.Валюта4,
		|	ТЧНачисления.ТарифныйРазряд4,
		|	ТЧНачисления.Показатель5,
		|	ТЧНачисления.Валюта5,
		|	ТЧНачисления.ТарифныйРазряд5,
		|	ТЧНачисления.Показатель6,
		|	ТЧНачисления.Валюта6,
		|	ТЧНачисления.ТарифныйРазряд6
		|ИЗ
		|	ВТНачисления КАК ТЧНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|				&Дата,
		|				Сотрудник В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						Сотрудники.Сотрудник
		|					ИЗ
		|						ВТНачисления КАК Сотрудники)) КАК РаботникиОрганизацииСрезПоследних
		|		ПО ТЧНачисления.Сотрудник = РаботникиОрганизацииСрезПоследних.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧНачисления.Ссылка КАК Ссылка,
		|	ТЧНачисления.НомерСтроки КАК НомерСтроки,
		|	ТЧНачисления.Сотрудник КАК Сотрудник,
		|	"""" КАК ПодразделениеОрганизации,
		|	"""" КАК Должность,
		|	"""" КАК ЗанимаемыхСтавок,
		|	"""" КАК ГрафикРаботы,
				///////////////////////////////////////////////////////////////{ООО "Автоматизация-Л" ДОРАБОТКА
		// Измайлова Полина 27.10.2011 14:44 
		|	"""" КАК AVTШтатноеРасписание,
		////////////////////////////////////////////////////////////////ООО "Автоматизация-Л" ДОРАБОТКА} 
		|	ТЧНачисления.Ссылка.ДатаНачала КАК Период,
		|	ТЧНачисления.Действие КАК Действие,
		|	ВЫБОР
		|		КОГДА ТЧНачисления.Ссылка.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДОБАВИТЬКДАТЕ(ТЧНачисления.Ссылка.ДатаОкончания, ДЕНЬ, 1)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК ПериодЗавершения,
		|	ВЫБОР
		|		КОГДА ТЧНачисления.Ссылка.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ВЫБОР
		|					КОГДА ТЧНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
		|					КОГДА ТЧНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|					ИНАЧЕ ТЧНачисления.Действие
		|				КОНЕЦ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.ПустаяСсылка)
		|	КОНЕЦ КАК ДействиеЗавершения,
		|	ТЧНачисления.ВидРасчета КАК ВидРасчета,
		|	ВЫБОР
		|		КОГДА ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|			ТОГДА """"
		|		ИНАЧЕ ТЧНачисления.ВидРасчета
		|	КОНЕЦ КАК ВидРасчетаИзмерение,
		|	ТЧНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,
		|	ТЧНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
		|	ТЧНачисления.ВидРасчета.ПроизвольнаяФормулаРасчета КАК ПроизвольнаяФормулаРасчета,
		|	ТЧНачисления.Показатель1 КАК Показатель1,
		|	ТЧНачисления.Валюта1 КАК Валюта1,
		|	ТЧНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
		|	ТЧНачисления.Показатель2 КАК Показатель2,
		|	ТЧНачисления.Валюта2 КАК Валюта2,
		|	ТЧНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
		|	ТЧНачисления.Показатель3 КАК Показатель3,
		|	ТЧНачисления.Валюта3 КАК Валюта3,
		|	ТЧНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
		|	ТЧНачисления.Показатель4 КАК Показатель4,
		|	ТЧНачисления.Валюта4 КАК Валюта4,
		|	ТЧНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
		|	ТЧНачисления.Показатель5 КАК Показатель5,
		|	ТЧНачисления.Валюта5 КАК Валюта5,
		|	ТЧНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
		|	ТЧНачисления.Показатель6 КАК Показатель6,
		|	ТЧНачисления.Валюта6 КАК Валюта6,
		|	ТЧНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6
		|ИЗ
		|	Документ.ОтпускПоУходуЗаРебенком.ОсновныеНачисления КАК ТЧНачисления
		|ГДЕ
		|	ТЧНачисления.Ссылка = &ДокументСсылка
		|	И (НЕ ТЧНачисления.Сторно)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	КонецЕсли;
	
	Возврат ПроцедурыУправленияПерсоналом.СформироватьЗапросПоПлановымНачислениям(Запрос.Выполнить().Выгрузить(), КонтрольРазмераСтавокШтатногоРасписания);

КонецФункции // СформироватьЗапросПоПлановымНачислениям()

// Формирует запрос по таблице "ПлановыеУдержания" документа
//
// Параметры:
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоПлановымУдержаниям(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Дата" , ДатаНачала);
	Запрос.УстановитьПараметр("Физлицо" , ВыборкаПоШапкеДокумента.Физлицо);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация" , ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Удержания.НомерСтроки КАК НомерСтроки,
	|	Удержания.ВидРасчета КАК ВидРасчета,
	|	Удержания.ДокументОснование КАК ДокументОснование,
	|	Удержания.Действие,
	|	Удержания.Показатель1,
	|	Удержания.Показатель2,
	|	Удержания.Показатель3,
	|	Удержания.Показатель4,
	|	Удержания.Показатель5,
	|	Удержания.Показатель6,
	|	Удержания.Валюта1,
	|	Удержания.Валюта2,
	|	Удержания.Валюта3,
	|	Удержания.Валюта4,
	|	Удержания.Валюта5,
	|	Удержания.Валюта6,
	|	Удержания.Ссылка
	|ПОМЕСТИТЬ ВТУдержания
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ПлановыеУдержания КАК Удержания
	|ГДЕ
	|	Удержания.Ссылка = &ДокументСсылка
	|	И Удержания.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять)
	|	И (НЕ Удержания.Сторно)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета,
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Удержания.ВидРасчета КАК ВидРасчета,
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
	|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
	|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
	|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
	|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный,
	|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
	|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях
	|ПОМЕСТИТЬ ВТПоказателиУдержаний
	|ИЗ
	|	ВТУдержания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
	|		ПО Удержания.ВидРасчета = Показатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели1
	|		ПО Удержания.ВидРасчета = Показатели1.Ссылка
	|			И (Показатели1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели2
	|		ПО Удержания.ВидРасчета = Показатели2.Ссылка
	|			И (Показатели2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели3
	|		ПО Удержания.ВидРасчета = Показатели3.Ссылка
	|			И (Показатели3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели4
	|		ПО Удержания.ВидРасчета = Показатели4.Ссылка
	|			И (Показатели4.НомерСтроки = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели5
	|		ПО Удержания.ВидРасчета = Показатели5.Ссылка
	|			И (Показатели5.НомерСтроки = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели6
	|		ПО Удержания.ВидРасчета = Показатели6.Ссылка
	|			И (Показатели6.НомерСтроки = 6)
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.ВидРасчета,
	|	Показатели1.Показатель,
	|	Показатели2.Показатель,
	|	Показатели3.Показатель,
	|	Показатели4.Показатель,
	|	Показатели5.Показатель,
	|	Показатели6.Показатель,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный,
	|	Показатели1.Показатель.Наименование,
	|	Показатели1.Показатель.ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный,
	|	Показатели2.Показатель.Наименование,
	|	Показатели2.Показатель.ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный,
	|	Показатели3.Показатель.Наименование,
	|	Показатели3.Показатель.ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный,
	|	Показатели4.Показатель.Наименование,
	|	Показатели4.Показатель.ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный,
	|	Показатели5.Показатель.Наименование,
	|	Показатели5.Показатель.ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный,
	|	Показатели6.Показатель.Наименование,
	|	Показатели6.Показатель.ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Удержания.НомерСтроки КАК НомерСтроки,
	|	МИНИМУМ(ПовторяющиесяСтроки.НомерСтроки) КАК КонфликтнаяСтрокаНомер
	|ПОМЕСТИТЬ ВТДвойныеСтроки
	|ИЗ
	|	ВТУдержания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержания КАК ПовторяющиесяСтроки
	|		ПО Удержания.НомерСтроки < ПовторяющиесяСтроки.НомерСтроки
	|			И Удержания.ВидРасчета = ПовторяющиесяСтроки.ВидРасчета
	|			И Удержания.ДокументОснование = ПовторяющиесяСтроки.ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеУдержания.Период,
	|	ПлановыеУдержания.Регистратор,
	|	ПлановыеУдержания.ВидРасчета КАК ВидРасчета,
	|	ПлановыеУдержания.ДокументОснование КАК ДокументОснование,
	|	ПлановыеУдержания.Показатель1,
	|	ПлановыеУдержания.Показатель2,
	|	ПлановыеУдержания.Показатель3,
	|	ПлановыеУдержания.Показатель4,
	|	ПлановыеУдержания.Показатель5,
	|	ПлановыеУдержания.Показатель6,
	|	ПлановыеУдержания.Валюта1,
	|	ПлановыеУдержания.Валюта2,
	|	ПлановыеУдержания.Валюта3,
	|	ПлановыеУдержания.Валюта4,
	|	ПлановыеУдержания.Валюта5,
	|	ПлановыеУдержания.Валюта6,
	|	ПлановыеУдержания.Действие,
	|	ПлановыеУдержания.ПериодЗавершения,
	|	ПлановыеУдержания.Показатель1Завершения,
	|	ПлановыеУдержания.Показатель2Завершения,
	|	ПлановыеУдержания.Показатель3Завершения,
	|	ПлановыеУдержания.Показатель4Завершения,
	|	ПлановыеУдержания.Показатель5Завершения,
	|	ПлановыеУдержания.Показатель6Завершения,
	|	ПлановыеУдержания.Валюта1Завершения,
	|	ПлановыеУдержания.Валюта2Завершения,
	|	ПлановыеУдержания.Валюта3Завершения,
	|	ПлановыеУдержания.Валюта4Завершения,
	|	ПлановыеУдержания.Валюта5Завершения,
	|	ПлановыеУдержания.Валюта6Завершения,
	|	ПлановыеУдержания.ДействиеЗавершения
	|ПОМЕСТИТЬ ВТПлановыеУдержания
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&Дата,
	|			Физлицо = &Физлицо
	|				И Организация = &ГоловнаяОрганизация
	|				И (ВидРасчета, ДокументОснование) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Удержания.ВидРасчета,
	|						Удержания.ДокументОснование
	|					ИЗ
	|						ВТУдержания КАК Удержания)) КАК ПлановыеУдержания
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета,
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Удержания.НомерСтроки,
	|	Удержания.Действие,
	|	Удержания.ВидРасчета,
	|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	Удержания.ВидРасчета.ПроизвольнаяФормулаРасчета КАК ПроизвольнаяФормулаРасчета,
	|	Удержания.Показатель1,
	|	Удержания.Валюта1,
	|	Удержания.Показатель2,
	|	Удержания.Валюта2,
	|	Удержания.Показатель3,
	|	Удержания.Валюта3,
	|	Удержания.Показатель4,
	|	Удержания.Валюта4,
	|	Удержания.Показатель5,
	|	Удержания.Валюта5,
	|	Удержания.Показатель6,
	|	Удержания.Валюта6,
	|	ЕСТЬNULL(Показатели.КоличествоПоказателей, 0) КАК КоличествоПоказателей,
	|	Показатели.Показатель1Предопределенный,
	|	Показатели.Показатель1Наименование,
	|	Показатели.Показатель1ТипПоказателя,
	|	Показатели.Показатель1ВозможностьИзменения,
	|	Показатели.Показатель2Предопределенный,
	|	Показатели.Показатель2Наименование,
	|	Показатели.Показатель2ТипПоказателя,
	|	Показатели.Показатель2ВозможностьИзменения,
	|	Показатели.Показатель3Предопределенный,
	|	Показатели.Показатель3Наименование,
	|	Показатели.Показатель3ТипПоказателя,
	|	Показатели.Показатель3ВозможностьИзменения,
	|	Показатели.Показатель4Предопределенный,
	|	Показатели.Показатель4Наименование,
	|	Показатели.Показатель4ТипПоказателя,
	|	Показатели.Показатель4ВозможностьИзменения,
	|	Показатели.Показатель5Предопределенный,
	|	Показатели.Показатель5Наименование,
	|	Показатели.Показатель5ТипПоказателя,
	|	Показатели.Показатель5ВозможностьИзменения,
	|	Показатели.Показатель6Предопределенный,
	|	Показатели.Показатель6Наименование,
	|	Показатели.Показатель6ТипПоказателя,
	|	Показатели.Показатель6ВозможностьИзменения,
	|	Удержания.ДокументОснование,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Показатель1Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель1
	|	КОНЕЦ КАК Показатель1Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Валюта1Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта1
	|	КОНЕЦ КАК Валюта1Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Показатель2Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель2
	|	КОНЕЦ КАК Показатель2Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Валюта2Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта2
	|	КОНЕЦ КАК Валюта2Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Показатель3Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель3
	|	КОНЕЦ КАК Показатель3Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Валюта3Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта3
	|	КОНЕЦ КАК Валюта3Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Показатель4Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель4
	|	КОНЕЦ КАК Показатель4Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Валюта4Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта4
	|	КОНЕЦ КАК Валюта4Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Показатель5Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель5
	|	КОНЕЦ КАК Показатель5Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Валюта5Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта5
	|	КОНЕЦ КАК Валюта5Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Показатель6Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель6
	|	КОНЕЦ КАК Показатель6Завершения,
	|	ВЫБОР
	|		КОГДА Удержания.Ссылка.ДатаНачала >= ПлановыеУдержания.ПериодЗавершения
	|				И ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ПлановыеУдержания.Валюта6Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта6
	|	КОНЕЦ КАК Валюта6Завершения,
	|	ДвойныеСтроки.КонфликтнаяСтрокаНомер,
	|	Показатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях
	|ИЗ
	|	ВТУдержания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДвойныеСтроки КАК ДвойныеСтроки
	|		ПО Удержания.НомерСтроки = ДвойныеСтроки.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеУдержания КАК ПлановыеУдержания
	|		ПО Удержания.ВидРасчета = ПлановыеУдержания.ВидРасчета
	|			И Удержания.ДокументОснование = ПлановыеУдержания.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиУдержаний КАК Показатели
	|		ПО Удержания.ВидРасчета = Показатели.ВидРасчета";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоПлановымУдержаниям()

// Формирует запрос по таблице "РасчетСреднего" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРасчетСреднего()

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
    Если ЕстьРасчетыПоКалендарнымГодам() Тогда
		Запрос.УстановитьПараметр("ВидРасчета", ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.СреднийЗаработок, "ПоЗаработкуПособийС2011"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	""2011"" КАК ВариантРасчета,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА СтрокаРасчетСреднего.Ссылка.Организация
		|		ИНАЧЕ СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация
		|	КОНЕЦ КАК Организация,
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник.Физлицо КАК Физлицо,
		|	СтрокаРасчетСреднего.НомерСтроки,
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник,
		|	&ВидРасчета КАК ВидРасчета,
		|	СтрокаРасчетСреднего.БазовыйПериодНачало КАК БазовыйПериодНачало,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.БазовыйПериодНачало <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА КОНЕЦПЕРИОДА(СтрокаРасчетСреднего.БазовыйПериодНачало, ГОД)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	КОНЕЦ КАК БазовыйПериодКонец,
		|	СУММА(СтрокаРасчетСреднего.Заработок) КАК Результат,
		|	0 КАК СкидкаПоСтраховымВзносам,
		|	СтрокаРасчетСреднего.ДнейБолезниУходаЗаДетьми КАК ОтработаноДней,
		|	0 КАК ОтработаноПоПятидневке,
		|	1 КАК КоэффициентИндексации,
		|	0 КАК НормаПоПятидневке,
		|	0 КАК ОтработаноЧасов,
		|	1 КАК ЧислоМесяцев
		|ИЗ
		|	Документ.ОтпускПоУходуЗаРебенком.РасчетСреднего2011 КАК СтрокаРасчетСреднего
		|ГДЕ
		|	СтрокаРасчетСреднего.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник.Физлицо,
		|	СтрокаРасчетСреднего.НомерСтроки,
		|	СтрокаРасчетСреднего.Ссылка.Сотрудник,
		|	СтрокаРасчетСреднего.БазовыйПериодНачало,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА СтрокаРасчетСреднего.Ссылка.Организация
		|		ИНАЧЕ СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация
		|	КОНЕЦ,
		|	СтрокаРасчетСреднего.ДнейБолезниУходаЗаДетьми";

	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	""2010"" КАК ВариантРасчета,
		|	СтрокаРасчетСреднего.НомерСтроки,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА СтрокаРасчетСреднего.Ссылка.Организация
		|		ИНАЧЕ СтрокаРасчетСреднего.Ссылка.Организация.ГоловнаяОрганизация
		|	КОНЕЦ КАК Организация,
		|	СтрокаРасчетСреднего.Сотрудник,
		|	СтрокаРасчетСреднего.Сотрудник.Физлицо КАК Физлицо,
		|	СтрокаРасчетСреднего.ВидРасчета,
		|	СтрокаРасчетСреднего.БазовыйПериодНачало КАК БазовыйПериодНачало,
		|	ВЫБОР
		|		КОГДА СтрокаРасчетСреднего.БазовыйПериодКонец <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА КОНЕЦПЕРИОДА(СтрокаРасчетСреднего.БазовыйПериодКонец, ДЕНЬ)
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК БазовыйПериодКонец,
		|	СтрокаРасчетСреднего.Результат,
		|	НЕОПРЕДЕЛЕНО КАК ДополнительныеПоля,
		|	СтрокаРасчетСреднего.ОтработаноДней,
		|	СтрокаРасчетСреднего.СкидкаПоСтраховымВзносам
		|ИЗ
		|	Документ.ОтпускПоУходуЗаРебенком.РасчетСреднего КАК СтрокаРасчетСреднего
		|ГДЕ
		|	СтрокаРасчетСреднего.Ссылка = &ДокументСсылка";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"НЕОПРЕДЕЛЕНО КАК ДополнительныеПоля,",ОтпускПоУходуЗаРебенкомПереопределяемый.ПолучитьДополнительныеПоляРасчетаСреднего());
		
	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРасчетСреднего()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры:
//	ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//	Отказ					- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок, ПриПроведении = Истина)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// Проверка того, что не изменили сотрудника при исправлении
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ИсправляемыйДокументСотрудник) 
		И (ВыборкаПоШапкеДокумента.ИсправляемыйДокументСотрудник <> ВыборкаПоШапкеДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("При исправлении документа нельзя изменить сотрудника!", Отказ, Заголовок);
	КонецЕсли;

	// ВнутреннийСовместитель
	Если ВыборкаПоШапкеДокумента.ВнутреннийСовместитель Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Документ не может быть оформлен на внутреннего совместителя!", Отказ, Заголовок);
	КонецЕсли;
	
	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоШапкеДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Указанный сотрудник оформлен на другую организацию!"), Отказ, Заголовок);
	КонецЕсли;
	
	// Период отпуска
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаНачала) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата начала отпуска!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоШапкеДокумента.ДатаОкончания < ВыборкаПоШапкеДокумента.ДатаНачала Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания отпуска не должна быть меньше даты начала!", Отказ, Заголовок);
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата начала расчетного периода!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаОкончание) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата окончания расчетного периода!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаОкончание < ВыборкаПоШапкеДокумента.ПериодРасчетаСреднегоЗаработкаНачало Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата расчетного расчетного периода не должна быть меньше даты начала расчетного периода!", Отказ, Заголовок);
	КонецЕсли;

	Если ПриПроведении Тогда
		Если ВыборкаПоШапкеДокумента.ВыплачиватьПособиеДоПолутораЛет Тогда
			Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоПолутораЛет) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата окончания выплаты пособия за счет ФСС до полутора лет!", Отказ, Заголовок);
			ИначеЕсли ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоПолутораЛет > ВыборкаПоШапкеДокумента.ДатаОкончания Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания выплаты пособия за счет ФСС до полутора лет превышает дату окончания отпуска!", Отказ, Заголовок);
			ИначеЕсли ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоПолутораЛет < ВыборкаПоШапкеДокумента.ДатаНачала Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания выплаты пособия за счет ФСС до полутора лет не должна быть меньше даты начала отпуска!", Отказ, Заголовок);
			КонецЕсли;
			Если ВыборкаПоШапкеДокумента.КоличествоДетей = 0 Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано количество детей, за которыми осуществляется уход!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
		Если ВыборкаПоШапкеДокумента.ВыплачиватьПособиеДоТрехЛет Тогда
			Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоТрехЛет) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата окончания выплаты пособия до трех лет!", Отказ, Заголовок);
			ИначеЕсли ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоТрехЛет > ВыборкаПоШапкеДокумента.ДатаОкончания Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания выплаты пособия до трех лет превышает дату окончания отпуска!", Отказ, Заголовок);
			ИначеЕсли ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоТрехЛет < ВыборкаПоШапкеДокумента.ДатаНачала Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания выплаты пособия до трех лет не должна быть меньше даты начала отпуска!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "ПлановыеНачисления" документа
// Если какой-то из реквизитов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры:
//	ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//	ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//								  из результата запроса по товарам документа, 
//	Отказ						- флаг отказа в проведении,
//	Заголовок					- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеСтрокиОсновныеНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, КонтрольРазмераСтавокШтатногоРасписания, ПроверятьВалюту, СоответствиеВалютныеСпособыРасчета, Организация) Экспорт
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Основные начисления"": ";

	НетВР = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета);
	НетСотрудника = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник);
	НетДействия = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие);
	
	Если НетВР И Не НетДействия Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано начисление!", Отказ, Заголовок);
	КонецЕсли;
	
	// Действие
	Если НетДействия Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано действие!", Отказ, Заголовок);
	КонецЕсли;
	
	// ВидРасчета
	Если Не НетВР И Не НетДействия Тогда
		
		// Соответствие размера "основного" начисления штатному расписанию
		Если КонтрольРазмераСтавокШтатногоРасписания И НЕ ВыборкаПоСтрокамДокумента.РазмерСоответствуетШТР и Не ВыборкаПоСтрокамДокумента.ТребуетВводаТарифногоРазряда Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "размер основного начисления не соответствует штатному расписанию!", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать или ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Изменить Тогда
			ИспользуютсяНачисленияВВалюте = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ИспользуютсяНачисленияВВалюте");
			ПроведениеРасчетовПереопределяемый.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Истина, Отказ, Заголовок, ИспользуютсяНачисленияВВалюте, СоответствиеВалютныеСпособыРасчета);
		КонецЕсли;
		
		Если Не НетСотрудника и ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДвойнаяСтрока) Тогда
			Если ВыборкаПоСтрокамДокумента.ОсновноеНачисление Тогда
				СтрокаСообщениеОбОшибке = "основное начисление сотрудника следует редактировать в одной строке (см. строку " + ВыборкаПоСтрокамДокумента.ДвойнаяСтрока + ")!"; 
			Иначе
				СтрокаСообщениеОбОшибке = "сотруднику не может быть назначено одно и тоже начисление дважды (см. строку " + ВыборкаПоСтрокамДокумента.ДвойнаяСтрока + ")!"; 
			КонецЕсли;
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
		КонецЕсли;
		
	КонецЕсли;
	
	// Сотрудник
	Если НетСотрудника Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано рабочее место сотрудника!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиОсновныеНачисления()

// Проверяет правильность заполнения реквизитов в строке ТЧ "ПлановыеУдержания" документа
// Если какой-то из реквизитов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//	ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//	ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//								  из результата запроса по товарам документа, 
//	Отказ						- флаг отказа в проведении,
//	Заголовок					- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеСтрокиПлановыхУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок)
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Удержания"": ";

	// ВидРасчета
	НетВР = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета);
	НетДействия = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие);
	
	Если НетВР Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид удержания!", Отказ, Заголовок);
	КонецЕсли;
	
	// Действие
	Если НетДействия Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано действие с удержанием!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не НетВР И Не НетДействия Тогда	
	
		// Одинаковые строки
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + " обнаружено повторное назначение того же удержания в строке №" + ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер + "!", Отказ, Заголовок);
		КонецЕсли;
		
		ИспользуютсяНачисленияВВалюте = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ИспользуютсяНачисленияВВалюте");
		
		ПроведениеРасчетовПереопределяемый.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Ложь, Отказ, Заголовок, ИспользуютсяНачисленияВВалюте, СоответствиеВалютныеСпособыРасчета);

		// Основание
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументОснование) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано основание удержания!", Отказ, Заголовок);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиПлановыхУдержаний()

// Проверяет правильность заполнения реквизитов в строке ТЧ "Начисления" документа.
// Если какой-то из реквизитов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//  							  из результата запроса к ТЧ документа, 
//  Отказ 						- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеСтрокиРасчетСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Расчет среднего"": ";
	
	// Вид расчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета среднего заработка!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.ВариантРасчета = "2011" Тогда
		
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодНачало) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан расчетный год!", Отказ, Заголовок);
		КонецЕсли;

	Иначе
		
		// Дата начала базового периода
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодНачало) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала базового периода!", Отказ, Заголовок);
			// Дата окончания базового периода
		ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодКонец) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания базового периода!", Отказ, Заголовок);
		ИначеЕсли ВыборкаПоСтрокамДокумента.БазовыйПериодКонец < ВыборкаПоСтрокамДокумента.БазовыйПериодНачало Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата начала базового периода не может быть больше даты окончания базового периода!", Отказ, Заголовок);
		КонецЕсли; 
		
		// Сотрудник
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указано рабочее место сотрудника!", Отказ, Заголовок);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРасчетСреднего()

// По строке выборки результата запроса по документу формируем движения по регистру ПлановыеНачисленияРаботниковОрганизаций
//
// Параметры: 
//  ВыборкаПоШапкеДокумента 	- выборка из результата запроса по шапке документа,
//  ВыборкаПоРаботникиОрганизации 	- выборка из результата запроса по табличной чавсти документа,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуОтпуска(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)
	
	Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
	
	// Свойства
	Движение.Период					= ВыборкаПоШапкеДокумента.ДатаНачала;
	
	// Измерения
	Движение.Сотрудник				= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.Организация			= ВыборкаПоСтрокамДокумента.Организация;
	Движение.ВидРасчетаИзмерение	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты;
	
	// Ресурсы
	Движение.Действие				= Перечисления.ВидыДействияСНачислением.Начать;
	Движение.ВидРасчета				= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты;
	
	Движение.ПериодЗавершения		= ВыборкаПоШапкеДокумента.ДатаОкончания + мДлинаСуток;
	Движение.ДействиеЗавершения		= Перечисления.ВидыДействияСНачислением.Прекратить;
	Движение.ВидРасчетаЗавершения	= Движение.ВидРасчета;
	
	// Реквизиты
	Движение.ПервичныйДокумент		= ВыборкаПоШапкеДокумента.Ссылка;
	
	
	Движение = Движения.СостояниеРаботниковОрганизаций.Добавить();
	
	// Свойства
	Движение.Период					= ВыборкаПоШапкеДокумента.ДатаНачала;
	
	// Измерения
	Движение.Сотрудник				= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.Организация			= ВыборкаПоСтрокамДокумента.Организация;
	
	// Ресурсы
	Движение.Состояние				= Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком;
	
	Движение.ПериодЗавершения		= ВыборкаПоШапкеДокумента.ДатаОкончания + мДлинаСуток;
	Движение.СостояниеЗавершения	= Перечисления.СостоянияРаботникаОрганизации.Работает;
	
	// Реквизиты
	Движение.ПервичныйДокумент		= ВыборкаПоШапкеДокумента.Ссылка;
	
	
	Если ВыборкаПоШапкеДокумента.ОсвобождатьСтавку Тогда
		
		Движение = Движения.СотрудникиОсвободившиеСтавкиВОрганизациях.Добавить();
		
		// Свойства
		Движение.Период					= ВыборкаПоШапкеДокумента.ДатаНачала;
		
		// Измерения
		Движение.Сотрудник				= ВыборкаПоСтрокамДокумента.Сотрудник;
		Движение.Организация			= ВыборкаПоСтрокамДокумента.Организация;
		
		// Ресурсы
		Движение.ОсвобождатьСтавку		= истина; 
		
		Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаОкончания) Тогда
			
			Движение.ПериодЗавершения		      = ВыборкаПоШапкеДокумента.ДатаОкончания + мДлинаСуток;
			Движение.ОсвобождатьСтавкуЗавершения  = ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуОтпуска

// По строке выборки результата запроса по документу формируем движения по регистру ПлановыеНачисленияРаботниковОрганизаций
//
// Параметры:
//	ВыборкаПоШапкеДокумента			- выборка из результата запроса по шапке документа,
//	ВыборкаПоРаботникиОрганизации	- выборка из результата запроса по табличной чавсти документа,
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуОсновныеНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)

	Если ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		Возврат;
	КонецЕсли;
	
	// Движения по регистру "ПлановыеНачисленияРаботниковОрганизаций"
	ПроцедурыУправленияПерсоналом.СформироватьДвижениеПоПлановымНачислениям(Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить(), ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
	
КонецПроцедуры // ДобавитьСтрокуОсновныеНачисления()

// По строке выборки результата запроса по документу формируем движения по регистру ПлановыеУдержанияРаботниковОрганизаций
//
// Параметры: 
//	ВыборкаПоШапкеДокумента			- выборка из результата запроса по шапке документа,
//	ВыборкаПоРаботникиОрганизации	- выборка из результата запроса по табличной чавсти документа,
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуПлановыхУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)

	Если ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		Возврат;
	КонецЕсли;
	
	Движение = Движения.ПлановыеУдержанияРаботниковОрганизаций.Добавить();
	
	// Свойства
	Движение.Период							= ВыборкаПоШапкеДокумента.ДатаНачала;

	// Измерения
	Движение.ФизЛицо						= ВыборкаПоШапкеДокумента.ФизЛицо;
	Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ВидРасчета						= ВыборкаПоСтрокамДокумента.ВидРасчета;
	Движение.ДокументОснование				= ВыборкаПоСтрокамДокумента.ДокументОснование;
	
	// Ресурсы
	СтрокаРесурсов = "Действие,ВидРасчета";
	Движение.Действие						= ВыборкаПоСтрокамДокумента.Действие;
	Если ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		СтрокаРесурсов = СтрокаРесурсов 
		+ ",Показатель1,Валюта1,Показатель2,Валюта2,Показатель3,Валюта3,Показатель4,Валюта4,Показатель5,Валюта5,Показатель6,Валюта6";
	КонецЕсли;
	
	Движение.ПериодЗавершения			= ВыборкаПоШапкеДокумента.ДатаОкончания + мДлинаСуток;
	Если ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда	
		Движение.ДействиеЗавершения	= Перечисления.ВидыДействияСНачислением.Начать
	ИначеЕсли ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать Тогда	
		Движение.ДействиеЗавершения	= Перечисления.ВидыДействияСНачислением.Прекратить
	Иначе	
		Движение.ДействиеЗавершения	= ВыборкаПоСтрокамДокумента.Действие;
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Начать Тогда
		СтрокаРесурсов = СтрокаРесурсов 
		+ ",Показатель1Завершения,Валюта1Завершения,Показатель2Завершения,Валюта2Завершения,Показатель3Завершения,Валюта3Завершения,Показатель4Завершения,Валюта4Завершения,Показатель5Завершения,Валюта5Завершения,Показатель6Завершения,Валюта6Завершения";
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоСтрокамДокумента,СтрокаРесурсов);
	
КонецПроцедуры // ДобавитьСтрокуПлановыхУдержаний()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Если документ перенесен - движения не делаем
	Если ДанныеПрошлойВерсии Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата начала отпуска!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата окончания отпуска!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		// Получим реквизиты шапки из запроса
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
			Движения.СостояниеРаботниковОрганизаций.мВыполнятьСписаниеФактическогоОтпуска = Истина;
			
			//Надо позвать проверку заполнения реквизитов шапки
			ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
			
			// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
			Если НЕ Отказ Тогда
				
				Движения.ОсновныеНачисленияРаботниковОрганизаций.мВыполнятьСписаниеФактическогоОтпуска = Истина;
				
				УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации");
				
				КонтрольКоличестваСтавокШтатногоРасписания	= ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(УчетнаяПолитикаПоПерсоналуОрганизации, Организация, "КонтрольКоличестваСтавокШтатногоРасписания");
				КонтрольРазмераСтавокШтатногоРасписания		= ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(УчетнаяПолитикаПоПерсоналуОрганизации, Организация, "КонтрольРазмераСтавокШтатногоРасписания");
				ПроверятьВалюту = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(УчетнаяПолитикаПоПерсоналуОрганизации, Организация, "ИспользуютсяНачисленияВВалюте");
				
				Если ВыборкаПоШапкеДокумента.ВыплачиватьПособиеДоПолутораЛет Тогда
					
					Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
					
					// Свойства
					Движение.Период                     = ВыборкаПоШапкеДокумента.ДатаНачала;
					
					// Измерения
					Движение.Сотрудник                  = ВыборкаПоШапкеДокумента.Сотрудник;
					Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ВидРасчетаИзмерение    	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет;
					
					// Ресурсы
					Движение.Действие					= Перечисления.ВидыДействияСНачислением.Начать;
					Движение.ВидРасчета           		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет;
					
					Движение.Показатель1				= ВыборкаПоШапкеДокумента.СреднедневнойЗаработок;
					Движение.Показатель2				= ВыборкаПоШапкеДокумента.КоличествоДетей;
					Движение.Показатель3				= ВыборкаПоШапкеДокумента.КоличествоПервыхДетей;
					Движение.Показатель4				= ?(ВыборкаПоШапкеДокумента.ПрименятьЛьготыПриНачисленииПособия,2,1);
					Движение.Показатель5				= ?(ВыборкаПоШапкеДокумента.ПрименятьЛьготыПриНачисленииПособия,0.5,0);
					Движение.Показатель6				= ВыборкаПоШапкеДокумента.ДополнительныйСреднедневнойЗаработок;
					
					Движение.ПериодЗавершения			= Мин(ВыборкаПоШапкеДокумента.ДатаОкончания,ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоПолутораЛет) + мДлинаСуток;
					Движение.ДействиеЗавершения			= Перечисления.ВидыДействияСНачислением.Прекратить;
					Движение.ВидРасчетаЗавершения		= Движение.ВидРасчета;
					
					// Реквизиты
					Если ВыборкаПоШапкеДокумента.ДатаНачала >= ПроведениеРасчетов.ДатаНачалаРеформыСоцСтрахования() Тогда
						Если ЕстьРасчетыПоКалендарнымГодам() Тогда
							Движение.ДатаНачалаСобытия = ВыборкаПоШапкеДокумента.ДатаНачала;
						Иначе	
							Движение.ДатаНачалаСобытия = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
						КонецЕсли;
					Иначе
						Движение.ДатаНачалаСобытия = ВыборкаПоШапкеДокумента.ДатаНачала;
					КонецЕсли;
					
				КонецЕсли;
				
				Если ВыборкаПоШапкеДокумента.ВыплачиватьПособиеДоТрехЛет Тогда
					
					Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
					
					// Свойства
					Движение.Период						= ВыборкаПоШапкеДокумента.ДатаНачала;
					
					// Измерения
					Движение.Сотрудник					= ВыборкаПоШапкеДокумента.Сотрудник;
					Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ВидРасчетаИзмерение		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет;
					
					// Ресурсы
					Движение.Действие					= Перечисления.ВидыДействияСНачислением.Начать;
					Движение.ВидРасчета					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет;
					Движение.Показатель1				= РегистрыСведений.ГосударственныеПособия.ПолучитьПоследнее(Дата, Новый Структура("ВидПособия", Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДо3хЛет)).Размер;
					
					Движение.ПериодЗавершения			= Мин(ВыборкаПоШапкеДокумента.ДатаОкончания,ВыборкаПоШапкеДокумента.ДатаОкончанияПособияДоТрехЛет) + мДлинаСуток;
					Движение.ДействиеЗавершения			= Перечисления.ВидыДействияСНачислением.Прекратить;
					Движение.ВидРасчетаЗавершения		= Движение.ВидРасчета;
					
				КонецЕсли;
				
				// провести в регистр "состояние сотрудников организаций"
				
				ВыборкаПоМестамРаботы = СформироватьЗапросПоРабочимМестам(ВыборкаПоШапкеДокумента).Выбрать();
				Пока ВыборкаПоМестамРаботы.Следующий() Цикл
					ДобавитьСтрокуОтпуска(ВыборкаПоШапкеДокумента, ВыборкаПоМестамРаботы);
					//Blik 290817 67118 н 
					ПроверитьДобавитьСтрокуВДвиженияПоРегиструНакопленияЗамещениеСотрудников(ВыборкаПоШапкеДокумента, ВыборкаПоМестамРаботы);
					//Blik 290817 67118 к
				КонецЦикла;
				
				// получим реквизиты табличной части
				ВыборкаПоНачислениям = СформироватьЗапросПоОсновнымНачислениям(ВыборкаПоШапкеДокумента, КонтрольКоличестваСтавокШтатногоРасписания, КонтрольРазмераСтавокШтатногоРасписания).Выбрать();
				Пока ВыборкаПоНачислениям.Следующий() Цикл
					
					// проверим очередную строку табличной части
					ПроверитьЗаполнениеСтрокиОсновныеНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, Отказ, Заголовок, КонтрольРазмераСтавокШтатногоРасписания, ПроверятьВалюту, СоответствиеВалютныеСпособыРасчета, Организация);
					
					Если НЕ Отказ Тогда
						ДобавитьСтрокуОсновныеНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям);
					КонецЕсли;
					
				КонецЦикла;
				
				// получим реквизиты табличной части
				ВыборкаПоУдержаниям = СформироватьЗапросПоПлановымУдержаниям(ВыборкаПоШапкеДокумента).Выбрать();
				Пока ВыборкаПоУдержаниям.Следующий() Цикл
					
					// проверим очередную строку табличной части
					ПроверитьЗаполнениеСтрокиПлановыхУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоУдержаниям, Отказ, Заголовок);
					
					Если НЕ Отказ Тогда
						ДобавитьСтрокуПлановыхУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоУдержаниям);
					КонецЕсли;
					
				КонецЦикла;
				
				// получим реквизиты табличной части
				ВыборкаПоРасчетСреднего = СформироватьЗапросПоРасчетСреднего().Выбрать();
				Пока ВыборкаПоРасчетСреднего.Следующий() Цикл
					
					// проверим очередную строку табличной части
					ПроверитьЗаполнениеСтрокиРасчетСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоРасчетСреднего, Отказ, Заголовок);
					
					Если НЕ Отказ Тогда
						ОтпускПоУходуЗаРебенкомПереопределяемый.ДобавитьСтрокуРасчетаСреднего(ВыборкаПоШапкеДокумента, ВыборкаПоРасчетСреднего, Движения.РасчетСреднегоЗаработка);
					КонецЕсли;
					
				КонецЦикла;
				
				// пропишем дату начала события для отражения в учетах
				Для каждого Движение Из Движения.РасчетСреднегоЗаработка Цикл
					Движение.ДатаНачалаСобытия = ВыборкаПоШапкеДокумента.ДатаНачала;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЕстьРасчетыПоКалендарнымГодам() Тогда
		РасчетСреднего.Очистить();
		Для каждого СтрокаТЧ Из РасчетСреднего2011 Цикл
			Если СтрокаТЧ.РасчетныйГод <> 0 Тогда
				СтрокаТЧ.БазовыйПериодНачало = Дата(СтрокаТЧ.РасчетныйГод, 1, 1)
			Иначе 
				СтрокаТЧ.БазовыйПериодНачало = '00010101';
			КонецЕсли;
		КонецЦикла;
	Иначе 	
		ГодыРасчетаСреднего2011.Очистить();
		РасчетСреднего2011.Очистить();
	КонецЕсли;
	
	ПроведениеРасчетов.ИсправлениеКадровогоДокументаПередЗаписью(Отказ, РежимЗаписи, РежимПроведения, ЭтотОбъект, мВосстанавливатьДвижения, мИсправляемыйДокумент, мСоответствиеДвижений);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеРасчетов.ИсправлениеКадровогоДокументаПриЗаписи(Отказ, мВосстанавливатьДвижения, мИсправляемыйДокумент, мСоответствиеДвижений);
	
КонецПроцедуры

//Blik 290817 67118 н 
Процедура ПроверитьДобавитьСтрокуВДвиженияПоРегиструНакопленияЗамещениеСотрудников(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)
	Если ВыборкаПоШапкеДокумента.ОсвобождатьСтавку  Тогда
		//получим данные по ше должности и подразделению
		Формируем = Истина;
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник,
		|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
		|	РаботникиОрганизацийСрезПоследних.Должность,
		|	РаботникиОрганизацийСрезПоследних.AVTШтатноеРасписание
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаДок, ) КАК РаботникиОрганизацийСрезПоследних
		|ГДЕ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник = &Сотрудник";
		Запрос.УстановитьПараметр("ДатаДок",		       ВыборкаПоШапкеДокумента.ДатаНачала);
		Запрос.УстановитьПараметр("Сотрудник",	ВыборкаПоСтрокамДокумента.Сотрудник);
		РезШЕ = Запрос.Выполнить().Выбрать();
		Если РезШЕ.Следующий() тогда
			Подразделение = РезШЕ.ПодразделениеОрганизации;
			Должность = РезШЕ.Должность;
			ШЕ = РезШЕ.AVTШтатноеРасписание;
		Иначе
			Формируем = Ложь;
			Сообщить("Недостаточно данных для формирования движений по замещению!");
		КонецЕсли;
		Если Формируем Тогда
			//добавим движение расход и приход по ше, если был приход  ранее
			Запрос = Новый Запрос;
			
			// Установим параметры запроса
			Запрос.УстановитьПараметр("ДатаУвольнения",		        ВыборкаПоШапкеДокумента.ДатаНачала);
			Запрос.УстановитьПараметр("ПодразделениеОрганизации",	Подразделение);
			Запрос.УстановитьПараметр("Должность",	                Должность);
			Запрос.УстановитьПараметр("AVTШтатноеРасписание",	    ШЕ);
			
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПРГ_ЗамещениеСотрудниковОстатки.ПодразделениеОрганизации,
			|	ПРГ_ЗамещениеСотрудниковОстатки.Должность,
			|	ПРГ_ЗамещениеСотрудниковОстатки.AVTШтатноеРасписание,
			|	ПРГ_ЗамещениеСотрудниковОстатки.КоличествоСтавокОстаток,
			|	ПРГ_ЗамещениеСотрудников.ТекстЗамещения,
			|	ПРГ_ЗамещениеСотрудников.Период КАК Период
			|ИЗ
			|	РегистрНакопления.ПРГ_ЗамещениеСотрудников.Остатки(&ДатаУвольнения, ) КАК ПРГ_ЗамещениеСотрудниковОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПРГ_ЗамещениеСотрудников КАК ПРГ_ЗамещениеСотрудников
			|		ПО ПРГ_ЗамещениеСотрудниковОстатки.AVTШтатноеРасписание = ПРГ_ЗамещениеСотрудников.AVTШтатноеРасписание
			|			И ПРГ_ЗамещениеСотрудниковОстатки.ПодразделениеОрганизации = ПРГ_ЗамещениеСотрудников.ПодразделениеОрганизации
			|			И ПРГ_ЗамещениеСотрудниковОстатки.Должность = ПРГ_ЗамещениеСотрудников.Должность
			|ГДЕ
			|	ПРГ_ЗамещениеСотрудниковОстатки.ПодразделениеОрганизации = &ПодразделениеОрганизации
			|	И ПРГ_ЗамещениеСотрудниковОстатки.Должность = &Должность
			|	И ПРГ_ЗамещениеСотрудниковОстатки.AVTШтатноеРасписание = &AVTШтатноеРасписание
			|
			|УПОРЯДОЧИТЬ ПО
			|	Период УБЫВ";
			
			Результат = Запрос.Выполнить().Выбрать();
			
			Если Результат.Следующий() Тогда
				Если Результат.КоличествоСтавокОстаток > 0 тогда
					//расход на дату начала отпуска
					Движение = Движения.ПРГ_ЗамещениеСотрудников.Добавить();
					
					// Свойства
					Движение.Период						= ВыборкаПоШапкеДокумента.ДатаНачала;
					Движение.ВидДвижения				= ВидДвиженияНакопления.Расход;
					
					// Измерения
					Движение.ПодразделениеОрганизации	= Подразделение;
					Движение.Должность					= Должность;
					Движение.AVTШтатноеРасписание		= ШЕ;
					
					// Ресурсы
					Движение.КоличествоСтавок			= Результат.КоличествоСтавокОстаток;
					
					// Реквизиты
					Движение.Сотрудник					= ВыборкаПоСтрокамДокумента.Сотрудник;
					Движение.ТекстЗамещения				= "";
					
					//приход на завершение отпуска
					// ЗанятыеШтатныеЕдиницыОрганизаций";
					Движение = Движения.ПРГ_ЗамещениеСотрудников.Добавить();
					
					// Свойства
					Движение.Период							= ВыборкаПоШапкеДокумента.ДатаОкончания + мДлинаСуток;
					Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
					
					// Измерения
					Движение.ПодразделениеОрганизации		= Подразделение;
					Движение.Должность						= Должность; 
					Движение.AVTШтатноеРасписание			= ШЕ;
					
					// Ресурсы
					Движение.КоличествоСтавок				= 1;
					
					// Реквизиты
					Движение.Сотрудник						= ВыборкаПоСтрокамДокумента.Сотрудник;
					Движение.ТекстЗамещения					= Результат.ТекстЗамещения;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 
//Blik 290817 67118 к


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток = 86400;

мВосстанавливатьДвижения = Ложь;
