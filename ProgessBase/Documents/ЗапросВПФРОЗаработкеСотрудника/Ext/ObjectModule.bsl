////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
// Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//	НазваниеМакета	- строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат Неопределено;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если ИмяМакета = "Запрос" Тогда
		ТабДокумент = ПечатьЗапроса();
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект,Метаданные().Синоним) + " (расчет среднего заработка)");
	КонецЕсли;
	
КонецФункции // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//	Структура, каждая строка которой соответствует одному из вариантов печати
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура;
	СтруктураПечатныхФорм.Вставить("Запрос", "Запрос");
	
	Возврат СтруктураПечатныхФорм;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ЗаполнитьДанныеОрганизации()

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбщегоНазначенияЗК.ПолучитьЗначенияРеквизитов(Организация,"НаименованиеТерриториальногоОрганаПФР"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаСрезПоследних.Должность КАК ДолжностьРуководителя,
	|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо,
	|	ФизическиеЛица.Комментарий
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|			&Дата,
	|			ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|				И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФизическиеЛица.Ссылка";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	
		Руководитель = Выборка.ФизическоеЛицо;
		ДолжностьРуководителя = Выборка.ДолжностьРуководителя;
	
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ЭтоЮрЛицо", ОбщегоНазначенияЗКПереопределяемый.ЭтоЮрЛицо(Организация));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА &ЭтоЮрЛицо
	|			ТОГДА "","" + АдресЮрЛица.Поле1 + "","" + АдресЮрЛица.Поле2 + "","" + АдресЮрЛица.Поле3 + "","" + АдресЮрЛица.Поле4 + "","" + АдресЮрЛица.Поле5 + "","" + АдресЮрЛица.Поле6 + "","" + АдресЮрЛица.Поле7 + "","" + АдресЮрЛица.Поле8 + "","" + АдресЮрЛица.Поле9 + "","" + ВЫБОР
	|					КОГДА АдресЮрЛица.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|						ТОГДА ""дом""
	|					ИНАЧЕ ""владение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресЮрЛица.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|						ТОГДА ""корпус""
	|					ИНАЧЕ ""строение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресЮрЛица.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|						ТОГДА ""кв.""
	|					ИНАЧЕ ""оф.""
	|				КОНЕЦ
	|		КОГДА АдресаФактические.Поле1 ЕСТЬ NULL 
	|			ТОГДА "","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9 + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|						ТОГДА ""дом""
	|					ИНАЧЕ ""владение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|						ТОГДА ""корпус""
	|					ИНАЧЕ ""строение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|						ТОГДА ""кв.""
	|					ИНАЧЕ ""оф.""
	|				КОНЕЦ
	|		ИНАЧЕ "","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9 + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|					ТОГДА ""дом""
	|				ИНАЧЕ ""владение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|					ТОГДА ""корпус""
	|				ИНАЧЕ ""строение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|					ТОГДА ""кв.""
	|				ИНАЧЕ ""оф.""
	|			КОНЕЦ
	|	КОНЕЦ КАК АдресОрганизации,
	|	ВЫРАЗИТЬ(Телефон.Представление КАК СТРОКА(300)) КАК ТелефонОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаФактические
	|		ПО Организация.ИндивидуальныйПредприниматель = АдресаФактические.Объект
	|			И (АдресаФактические.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))
	|			И (АдресаФактические.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаРегистрации
	|		ПО Организация.ИндивидуальныйПредприниматель = АдресаРегистрации.Объект
	|			И (АдресаРегистрации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|			И (АдресаРегистрации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресЮрЛица
	|		ПО Организация.Ссылка = АдресЮрЛица.Объект
	|			И (АдресЮрЛица.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|			И (АдресЮрЛица.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК Телефон
	|		ПО Организация.Ссылка = Телефон.Объект
	|			И (Телефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации))
	|			И (Телефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|ГДЕ
	|	Организация.Ссылка = &Организация";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		АдресОрганизации = СокрЛП(Выборка.АдресОрганизации);
		ТелефонОрганизации = СокрЛП(Выборка.ТелефонОрганизации);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеСотрудника()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиОрганизаций.Физлицо
	|ПОМЕСТИТЬ ВТФизлицо
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизическиеЛица.СтраховойНомерПФР,
	|	ФизическиеЛица.ДатаРождения,
	|	ФизическиеЛица.Наименование,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ВЫБОР
	|		КОГДА АдресаФактические.Поле1 ЕСТЬ NULL 
	|			ТОГДА "","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9 + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|						ТОГДА ""дом""
	|					ИНАЧЕ ""владение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|						ТОГДА ""корпус""
	|					ИНАЧЕ ""строение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|						ТОГДА ""кв.""
	|					ИНАЧЕ ""оф.""
	|				КОНЕЦ
	|		ИНАЧЕ "","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9 + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|					ТОГДА ""дом""
	|				ИНАЧЕ ""владение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|					ТОГДА ""корпус""
	|				ИНАЧЕ ""строение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|					ТОГДА ""кв.""
	|				ИНАЧЕ ""оф.""
	|			КОНЕЦ
	|	КОНЕЦ КАК Адрес,
	|	ВЫРАЗИТЬ(Телефоны.Представление КАК СТРОКА(300)) КАК Телефон,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид КАК ВидДокумента,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия КАК СерияДокумента,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер КАК НомерДокумента,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи КАК ДатаВыдачиДокумента,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан КАК КемВыданДокумент
	|ИЗ
	|	ВТФизлицо КАК Физлица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО Физлица.Физлицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК Телефоны
	|		ПО Физлица.Физлицо = Телефоны.Объект
	|			И (Телефоны.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизЛица))
	|			И (Телефоны.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаФактические
	|		ПО Физлица.Физлицо = АдресаФактические.Объект
	|			И (АдресаФактические.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))
	|			И (АдресаФактические.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаРегистрации
	|		ПО Физлица.Физлицо = АдресаРегистрации.Объект
	|			И (АдресаРегистрации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|			И (АдресаРегистрации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(
	|				&Дата,
	|				Физлицо В
	|					(ВЫБРАТЬ
	|						Физлица.Физлицо
	|					ИЗ
	|						ВТФизлицо КАК Физлица)) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО Физлица.Физлицо = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&Дата,
	|				Физлицо В
	|					(ВЫБРАТЬ
	|						Физлица.Физлицо
	|					ИЗ
	|						ВТФизлицо КАК Физлица)) КАК ФИОФизЛицСрезПоследних
	|		ПО Физлица.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо";
	Запрос.УстановитьПараметр("Ссылка", Сотрудник);
	Запрос.УстановитьПараметр("Дата", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,Выборка);
	КонецЕсли;
	
КонецПроцедуры

Процедура Автозаполнение(Режим = Неопределено) Экспорт
	
	Если Режим = "ДанныеСотрудника" Тогда
		ЗаполнитьДанныеСотрудника()
	ИначеЕсли Режим = "ДанныеСтрахователя" Тогда
		ЗаполнитьДанныеОрганизации()
	Иначе	
		ЗаполнитьДанныеОрганизации();
		ЗаполнитьДанныеСотрудника();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Функция формирует табличный документ с печатной формой справки
//
// Возвращаемое значение:
//	Табличный документ - печатная форма
//
Функция ПечатьЗапроса()
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// получаем данные для печати
	Выборка = СформироватьЗапросДляПечати().Выбрать();
	
	Отказ = Ложь;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗапросВПФРОЗаработкеСотрудника";
	
	// запоминаем области макета
	Макет = ПолучитьМакет("Запрос");
	
	Если Выборка.Следующий() Тогда 
		
		ПроверитьЗаполнениеШапки(Выборка, Отказ, Заголовок);
		
		Если НЕ Отказ Тогда
			
			Макет.Параметры.Заполнить(Выборка);
			Макет.Параметры.НазваниеОрганизации = СокрЛП(Макет.Параметры.НазваниеОрганизации);
			Макет.Параметры.НазваниеСтрахователя = СокрЛП(Макет.Параметры.НазваниеСтрахователя);
			Макет.Параметры.КемВыданДокумент = СокрЛП(Макет.Параметры.КемВыданДокумент);
			Макет.Параметры.ДатаВыдачиДокумента = Формат(Макет.Параметры.ДатаВыдачиДокумента,"ДЛФ=DD");
			Макет.Параметры.Адрес = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(Выборка.Адрес);
			Макет.Параметры.АдресОрганизации = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(Выборка.АдресОрганизации);
			
			ТабДокумент.Вывести(Макет);
			
			Возврат ТабДокумент;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбработкаКомментариев.ПоказатьСообщения();
	
	Возврат Неопределено;
	
КонецФункции // ПечатьЗапроса()

// Формирует запрос по шапке документа
//
//
// Возвращаемое значение:
//	Результат запроса
//
Функция СформироватьЗапросДляПечати()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументЗапрос.Дата,
	|	ДокументЗапрос.Номер,
	|	ДокументЗапрос.Организация,
	|	ДокументЗапрос.Ссылка,
	|	ДокументЗапрос.Сотрудник,
	|	ДокументЗапрос.Руководитель,
	|	ДокументЗапрос.ДолжностьРуководителя,
	|	ДокументЗапрос.СтраховойНомерПФР,
	|	ДокументЗапрос.Фамилия,
	|	ДокументЗапрос.Имя,
	|	ДокументЗапрос.Отчество,
	|	ДокументЗапрос.Адрес,
	|	ДокументЗапрос.АдресОрганизации,
	|	ВЫБОР
	|		КОГДА ДокументЗапрос.Сотрудник.Организация = ВЫБОР
	|				КОГДА ДокументЗапрос.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ДокументЗапрос.Организация
	|				ИНАЧЕ ДокументЗапрос.Организация.ГоловнаяОрганизация
	|			КОНЕЦ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	ВЫБОР
	|		КОГДА ДокументЗапрос.Сотрудник.ВидЗанятости В (ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство), ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаВидаЗанятости,
	|	ДокументЗапрос.ГодС,
	|	ДокументЗапрос.ГодПо,
	|	ДокументЗапрос.НаименованиеТерриториальногоОрганаПФР,
	|	ДокументЗапрос.ТелефонОрганизации,
	|	ДокументЗапрос.ДатаРождения,
	|	ДокументЗапрос.СерияДокумента,
	|	ДокументЗапрос.НомерДокумента,
	|	ДокументЗапрос.ДатаВыдачиДокумента,
	|	ДокументЗапрос.КемВыданДокумент,
	|	ДокументЗапрос.Страхователь
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.ЗапросВПФРОЗаработкеСотрудника КАК ДокументЗапрос
	|ГДЕ
	|	ДокументЗапрос.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.Фамилия + "" "" + ДанныеДокумента.Имя + "" "" + ДанныеДокумента.Отчество КАК ФИО,
	|	ДанныеДокумента.Адрес,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.НаименованиеТерриториальногоОрганаПФР,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Страхователь,
	|	ДанныеДокумента.Страхователь.НаименованиеПолное КАК НазваниеСтрахователя,
	|	ДанныеДокумента.ГодС,
	|	ДанныеДокумента.ГодПо,
	|	ДанныеДокумента.Организация.ИНН КАК ИНН,
	|	ДанныеДокумента.Организация.НаименованиеПолное КАК НазваниеОрганизации,
	|	ДанныеДокумента.Организация.КПП КАК КПП,
	|	ДанныеДокумента.Организация.РегистрационныйНомерПФР КАК РегистрационныйНомерПФР,
	|	ДанныеДокумента.СтраховойНомерПФР,
	|	ДанныеДокумента.АдресОрганизации,
	|	ДанныеДокумента.ТелефонОрганизации,
	|	ЕСТЬNULL(ФИОРуководителя.Фамилия + "" "" + ФИОРуководителя.Имя + "" "" + ФИОРуководителя.Отчество, ДанныеДокумента.Руководитель.Наименование) КАК ФИОРуководителя,
	|	ДанныеДокумента.ДолжностьРуководителя.Наименование КАК Должность,
	|	ДанныеДокумента.ОшибкаВидаЗанятости,
	|	ДанныеДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	ДанныеДокумента.ДатаРождения,
	|	ДанныеДокумента.СерияДокумента,
	|	ДанныеДокумента.НомерДокумента,
	|	ДанныеДокумента.ДатаВыдачиДокумента,
	|	ДанныеДокумента.КемВыданДокумент
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&Дата,
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						ДанныеДокумента.Руководитель
	|					ИЗ
	|						ВТДанныеДокумента КАК ДанныеДокумента)) КАК ФИОРуководителя
	|		ПО ДанныеДокумента.Руководитель = ФИОРуководителя.ФизЛицо";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//	ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//	Отказ 					- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок = "")

	//  Организация
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;
	
	//  Страхователь
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Страхователь) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан другой страхователь!", Отказ, Заголовок);
	КонецЕсли;
	
	// Сотрудник
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не выбран сотрудник!", Отказ, Заголовок);
	Иначе
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ФИО) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано ФИО сотрудника!", Отказ, Заголовок);
		КонецЕсли;
	
		Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаРождения) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указана дата рождения!", Отказ, Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрЗаменить(ВыборкаПоШапкеДокумента.СтраховойНомерПФР,"-","")) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан страховой номер ПФР!", Отказ, Заголовок);
		КонецЕсли;
		Если ВыборкаПоШапкеДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Указанный сотрудник оформлен на другую организацию!"), Отказ, Заголовок);
		КонецЕсли;
		Если ВыборкаПоШапкеДокумента.ОшибкаВидаЗанятости Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Запросы формируются по сотрудникам, имеющим основное место работы или работавшим по внешнему совместительству!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ГодС) Или Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ГодПо) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан период работы у другого страхователя!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоШапкеДокумента.ГодС > ВыборкаПоШапкеДокумента.ГодПо Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Неверно указан период работы у другого страхователя!", Отказ, Заголовок);
	КонецЕсли;
	
	//  ФСС
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.НаименованиеТерриториальногоОрганаПФР) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указано наименование территориального органа ПФР!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(Основание)
	ТипОснования = ТипЗнч(Основание);
	Если ТипОснования = Тип("ДокументСсылка.ЗаявлениеОНаправленииЗапросаВПФР") Тогда
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
		ДанныеОснования = ОбщегоНазначенияЗК.ПолучитьЗначенияРеквизитов(Основание,"Страхователь,ПериодРаботыС,ПериодРаботыПо,Сотрудник,СтраховойНомерПФР,ДатаРождения,Фамилия,Имя,Отчество,Адрес,ВидДокумента,СерияДокумента,НомерДокумента,ДатаВыдачиДокумента,КемВыданДокумент");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеОснования);
		ГодС = Год(ДанныеОснования.ПериодРаботыС);
		ГодПо = Год(ДанныеОснования.ПериодРаботыПо);
		Автозаполнение("ДанныеСтрахователя");
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

