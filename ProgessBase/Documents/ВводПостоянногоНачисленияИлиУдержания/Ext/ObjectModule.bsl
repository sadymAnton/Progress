////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мДлинаСуток;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура;
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по таблице "Начисления" документа
//
// Параметры:
//	Режим - режим проведения
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДокументСсылка",		Ссылка);
	Запрос.УстановитьПараметр("ДатаДействия",		ДатаДействия);
	
	Если Действие = 0 Или Действие = 1 Тогда
		Плановые = "ПлановыеНачисленияРаботников";
	Иначе
		Плановые = "ПлановыеУдержанияРаботников";
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.НомерСтроки,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Сотрудник,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Сотрудник.Наименование,
	|	ПлановыеНачисленияРаботников.Регистратор.Представление КАК КонфликтныйДокумент,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Физлицо,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ДокументОснование,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель1,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель2,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель3,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель4,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель5,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель6,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта1,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта2,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта3,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта4,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта5,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта6,
	|	ВЫБОР КОГДА НачисленияДоНазначения.ДействиеЗавершения ЕСТЬ NULL ТОГДА Значение(Перечисление.ВидыДействияСНачислением.Прекратить) ИНАЧЕ Значение(Перечисление.ВидыДействияСНачислением.Изменить) КОНЕЦ КАК ДействиеЗавершения,
	|	НачисленияДоНазначения.Показатель1Завершения,
	|	НачисленияДоНазначения.Показатель2Завершения,
	|	НачисленияДоНазначения.Показатель3Завершения,
	|	НачисленияДоНазначения.Показатель4Завершения,
	|	НачисленияДоНазначения.Показатель5Завершения,
	|	НачисленияДоНазначения.Показатель6Завершения,
	|	НачисленияДоНазначения.Валюта1Завершения,
	|	НачисленияДоНазначения.Валюта2Завершения,
	|	НачисленияДоНазначения.Валюта3Завершения,
	|	НачисленияДоНазначения.Валюта4Завершения,
	|	НачисленияДоНазначения.Валюта5Завершения,
	|	НачисленияДоНазначения.Валюта6Завершения,";
		Если Плановые = "ПлановыеНачисленияРаботников" Тогда
		Запрос.Текст = Запрос.Текст + "
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд1,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд2,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд3,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд4,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд5,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд6,
	|	НачисленияДоНазначения.ТарифныйРазряд1Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд2Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд3Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд4Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд5Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд6Завершения,";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
	|	МАКСИМУМ(ВводПостоянногоНачисленияИлиУдержанияНачисления1.НомерСтроки) КАК КонфликтнаяСтрокаНомер
	|ИЗ
	|	Документ.ВводПостоянногоНачисленияИлиУдержания.Начисления КАК ВводПостоянногоНачисленияИлиУдержанияНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений."+Плановые+" КАК ПлановыеНачисленияРаботников
	|		ПО ВводПостоянногоНачисленияИлиУдержанияНачисления.Ссылка.ДатаДействия = ПлановыеНачисленияРаботников.Период
	|			И ВводПостоянногоНачисленияИлиУдержанияНачисления.Ссылка.ВидРасчета = ПлановыеНачисленияРаботников.ВидРасчета
	|			И (ПлановыеНачисленияРаботников.Регистратор <> &ДокументСсылка)
	|			И ВводПостоянногоНачисленияИлиУдержанияНачисления.Физлицо = ПлановыеНачисленияРаботников.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПостоянногоНачисленияИлиУдержания.Начисления КАК ВводПостоянногоНачисленияИлиУдержанияНачисления1
	|		ПО ВводПостоянногоНачисленияИлиУдержанияНачисления.Ссылка = ВводПостоянногоНачисленияИлиУдержанияНачисления1.Ссылка
	|			И ВводПостоянногоНачисленияИлиУдержанияНачисления.НомерСтроки < ВводПостоянногоНачисленияИлиУдержанияНачисления1.НомерСтроки
	|			И ВводПостоянногоНачисленияИлиУдержанияНачисления.Сотрудник = ВводПостоянногоНачисленияИлиУдержанияНачисления1.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДатыПоследнихДвиженийНачисленийРаботников.ФизЛицо КАК ФизЛицо,
	|			ПлановыеНачисленияРаботников.Действие КАК ДействиеЗавершения,
	|			ПлановыеНачисленияРаботников.ВидРасчета КАК ВидРасчета,
	|			ПлановыеНачисленияРаботников.Показатель1 КАК Показатель1Завершения,
	|			ПлановыеНачисленияРаботников.Показатель2 КАК Показатель2Завершения,
	|			ПлановыеНачисленияРаботников.Показатель3 КАК Показатель3Завершения,
	|			ПлановыеНачисленияРаботников.Показатель4 КАК Показатель4Завершения,
	|			ПлановыеНачисленияРаботников.Показатель5 КАК Показатель5Завершения,
	|			ПлановыеНачисленияРаботников.Показатель6 КАК Показатель6Завершения,";
				Если Плановые = "ПлановыеНачисленияРаботников" Тогда
				Запрос.Текст = Запрос.Текст + "
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд1 КАК ТарифныйРазряд1Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд2 КАК ТарифныйРазряд2Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд3 КАК ТарифныйРазряд3Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд4 КАК ТарифныйРазряд4Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд5 КАК ТарифныйРазряд5Завершения,
	|			ПлановыеНачисленияРаботников.ТарифныйРазряд6 КАК ТарифныйРазряд6Завершения,";
				КонецЕсли;
				Запрос.Текст = Запрос.Текст + "
	|			ПлановыеНачисленияРаботников.Валюта1 КАК Валюта1Завершения,
	|			ПлановыеНачисленияРаботников.Валюта2 КАК Валюта2Завершения,
	|			ПлановыеНачисленияРаботников.Валюта3 КАК Валюта3Завершения,
	|			ПлановыеНачисленияРаботников.Валюта4 КАК Валюта4Завершения,
	|			ПлановыеНачисленияРаботников.Валюта5 КАК Валюта5Завершения,
	|			ПлановыеНачисленияРаботников.Валюта6 КАК Валюта6Завершения
		
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(НачисленияРаботников.Период) КАК ДатаДвижения,
	|				ТЧРаботники.Сотрудник КАК Сотрудник,
	|				НачисленияРаботников.ФизЛицо КАК ФизЛицо,
	|				НачисленияРаботников.ВидРасчета КАК ВидРасчета
	|			ИЗ
	|				Документ.ВводПостоянногоНачисленияИлиУдержания.Начисления КАК ТЧРаботники
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений."+Плановые+" КАК НачисленияРаботников
	|					ПО ТЧРаботники.Сотрудник.Физлицо = НачисленияРаботников.ФизЛицо
	|						И (НачисленияРаботников.Период < &ДатаДействия)
	|			ГДЕ
	|				ТЧРаботники.Ссылка = &ДокументСсылка
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТЧРаботники.Сотрудник,
	|				НачисленияРаботников.ФизЛицо,
	|				НачисленияРаботников.ВидРасчета) КАК ДатыПоследнихДвиженийНачисленийРаботников
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений."+Плановые+" КАК ПлановыеНачисленияРаботников
	|				ПО ДатыПоследнихДвиженийНачисленийРаботников.ФизЛицо = ПлановыеНачисленияРаботников.ФизЛицо
	|					И ДатыПоследнихДвиженийНачисленийРаботников.ДатаДвижения = ПлановыеНачисленияРаботников.Период
	|					И ДатыПоследнихДвиженийНачисленийРаботников.ВидРасчета = ПлановыеНачисленияРаботников.ВидРасчета) КАК НачисленияДоНазначения
	|		ПО ВводПостоянногоНачисленияИлиУдержанияНачисления.Сотрудник.Физлицо = НачисленияДоНазначения.ФизЛицо
	|			И ВводПостоянногоНачисленияИлиУдержанияНачисления.Ссылка.ВидРасчета = НачисленияДоНазначения.ВидРасчета
	|ГДЕ
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.НомерСтроки,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Сотрудник,
	|	ПлановыеНачисленияРаботников.Регистратор.Представление,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Ссылка.ВидРасчета.ЗачетОтработанногоВремени,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Физлицо,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ДокументОснование,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель1,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель2,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель3,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель4,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель5,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Показатель6,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта1,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта2,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта3,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта4,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта5,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Валюта6,
	|	НачисленияДоНазначения.ДействиеЗавершения,
	|	НачисленияДоНазначения.Показатель1Завершения,
	|	НачисленияДоНазначения.Показатель2Завершения,
	|	НачисленияДоНазначения.Показатель3Завершения,
	|	НачисленияДоНазначения.Показатель4Завершения,
	|	НачисленияДоНазначения.Показатель5Завершения,
	|	НачисленияДоНазначения.Показатель6Завершения,
	|	НачисленияДоНазначения.Валюта1Завершения,
	|	НачисленияДоНазначения.Валюта2Завершения,
	|	НачисленияДоНазначения.Валюта3Завершения,
	|	НачисленияДоНазначения.Валюта4Завершения,
	|	НачисленияДоНазначения.Валюта5Завершения,
	|	НачисленияДоНазначения.Валюта6Завершения,";
	Если Плановые = "ПлановыеНачисленияРаботников" Тогда
		Запрос.Текст = Запрос.Текст + "
	|	НачисленияДоНазначения.ТарифныйРазряд1Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд2Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд3Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд4Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд5Завершения,
	|	НачисленияДоНазначения.ТарифныйРазряд6Завершения,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд1,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд2,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд3,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд4,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд5,
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.ТарифныйРазряд6,";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|	ВводПостоянногоНачисленияИлиУдержанияНачисления.Сотрудник.Наименование";
	
	Возврат Запрос.Выполнить();

КонецФункции //СформироватьЗапросПоНачисления

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",		Ссылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация",	Справочники.Организации.ПустаяСсылка());
	
	Запрос.Текст = 
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",		Ссылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация",	Справочники.Организации.ПустаяСсылка());
	
	Если Действие = 0 Или Действие = 1 Тогда
		ТаблицаВР = "УправленческиеНачисления";
	Иначе
		ТаблицаВР = "УправленческиеУдержания";
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВводПостоянногоНачисленияИлиУдержания.ВидРасчета КАК ВидРасчета,
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
	|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
	|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
	|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
	|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный,
	|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
	|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.ТарифнаяСтавка КАК Показатель1ТарифнаяСтавка,
	|	Показатели2.Показатель.ТарифнаяСтавка КАК Показатель2ТарифнаяСтавка,
	|	Показатели3.Показатель.ТарифнаяСтавка КАК Показатель3ТарифнаяСтавка,
	|	Показатели4.Показатель.ТарифнаяСтавка КАК Показатель4ТарифнаяСтавка,
	|	Показатели5.Показатель.ТарифнаяСтавка КАК Показатель5ТарифнаяСтавка,
	|	Показатели6.Показатель.ТарифнаяСтавка КАК Показатель6ТарифнаяСтавка,
	|	Показатели1.Показатель.Валюта КАК Валюта1,
	|	Показатели2.Показатель.Валюта КАК Валюта2,
	|	Показатели3.Показатель.Валюта КАК Валюта3,
	|	Показатели4.Показатель.Валюта КАК Валюта4,
	|	Показатели5.Показатель.Валюта КАК Валюта5,
	|	Показатели6.Показатель.Валюта КАК Валюта6

	|ПОМЕСТИТЬ ВТПоказатели
	|ИЗ
	|	Документ.ВводПостоянногоНачисленияИлиУдержания КАК ВводПостоянногоНачисленияИлиУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета."+ТаблицаВР+".Показатели КАК Показатели
	|		ПО ВводПостоянногоНачисленияИлиУдержания.ВидРасчета = Показатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета."+ТаблицаВР+".Показатели КАК Показатели1
	|		ПО ВводПостоянногоНачисленияИлиУдержания.ВидРасчета = Показатели1.Ссылка
	|			И (Показатели1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета."+ТаблицаВР+".Показатели КАК Показатели2
	|		ПО ВводПостоянногоНачисленияИлиУдержания.ВидРасчета = Показатели2.Ссылка
	|			И (Показатели2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета."+ТаблицаВР+".Показатели КАК Показатели3
	|		ПО ВводПостоянногоНачисленияИлиУдержания.ВидРасчета = Показатели3.Ссылка
	|			И (Показатели3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета."+ТаблицаВР+".Показатели КАК Показатели4
	|		ПО ВводПостоянногоНачисленияИлиУдержания.ВидРасчета = Показатели4.Ссылка
	|			И (Показатели4.НомерСтроки = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета."+ТаблицаВР+".Показатели КАК Показатели5
	|		ПО ВводПостоянногоНачисленияИлиУдержания.ВидРасчета = Показатели5.Ссылка
	|			И (Показатели5.НомерСтроки = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета."+ТаблицаВР+".Показатели КАК Показатели6
	|		ПО ВводПостоянногоНачисленияИлиУдержания.ВидРасчета = Показатели6.Ссылка
	|			И (Показатели6.НомерСтроки = 6)
	|ГДЕ
	|	ВводПостоянногоНачисленияИлиУдержания.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВводПостоянногоНачисленияИлиУдержания.ВидРасчета,
	|	Показатели1.Показатель,
	|	Показатели2.Показатель,
	|	Показатели3.Показатель,
	|	Показатели4.Показатель,
	|	Показатели5.Показатель,
	|	Показатели6.Показатель,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный,
	|	Показатели1.Показатель.Наименование,
	|	Показатели1.Показатель.ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный,
	|	Показатели2.Показатель.Наименование,
	|	Показатели2.Показатель.ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный,
	|	Показатели3.Показатель.Наименование,
	|	Показатели3.Показатель.ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный,
	|	Показатели4.Показатель.Наименование,
	|	Показатели4.Показатель.ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный,
	|	Показатели5.Показатель.Наименование,
	|	Показатели5.Показатель.ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный,
	|	Показатели6.Показатель.Наименование,
	|	Показатели6.Показатель.ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения,
	|	Показатели1.Показатель.ТарифнаяСтавка,
	|	Показатели2.Показатель.ТарифнаяСтавка,
	|	Показатели3.Показатель.ТарифнаяСтавка,
	|	Показатели4.Показатель.ТарифнаяСтавка,
	|	Показатели5.Показатель.ТарифнаяСтавка,
	|	Показатели6.Показатель.ТарифнаяСтавка,
	|	Показатели1.Показатель.Валюта,
	|	Показатели2.Показатель.Валюта,
	|	Показатели3.Показатель.Валюта,
	|	Показатели4.Показатель.Валюта,
	|	Показатели5.Показатель.Валюта,
	|	Показатели6.Показатель.Валюта

	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВводПостоянногоНачисленияИлиУдержания.Дата,
	|	ЕСТЬNULL(ПоказателиНачисления.КоличествоПоказателей, 0) КАК КоличествоПоказателейНачисления,
	|	ВводПостоянногоНачисленияИлиУдержания.ВидРасчета.ЗачетОтработанногоВремени КАК ОсновноеНачисление,
	|	ПоказателиНачисления.Показатель1Предопределенный,
	|	ПоказателиНачисления.Показатель1Наименование,
	|	ПоказателиНачисления.Показатель1ТипПоказателя,
	|	ПоказателиНачисления.Показатель1ВозможностьИзменения,
	|	ПоказателиНачисления.Показатель2Предопределенный,
	|	ПоказателиНачисления.Показатель2Наименование,
	|	ПоказателиНачисления.Показатель2ТипПоказателя,
	|	ПоказателиНачисления.Показатель2ВозможностьИзменения,
	|	ПоказателиНачисления.Показатель3Предопределенный,
	|	ПоказателиНачисления.Показатель3Наименование,
	|	ПоказателиНачисления.Показатель3ТипПоказателя,
	|	ПоказателиНачисления.Показатель3ВозможностьИзменения,
	|	ПоказателиНачисления.Показатель4Предопределенный,
	|	ПоказателиНачисления.Показатель4Наименование,
	|	ПоказателиНачисления.Показатель4ТипПоказателя,
	|	ПоказателиНачисления.Показатель4ВозможностьИзменения,
	|	ПоказателиНачисления.Показатель5Предопределенный,
	|	ПоказателиНачисления.Показатель5Наименование,
	|	ПоказателиНачисления.Показатель5ТипПоказателя,
	|	ПоказателиНачисления.Показатель5ВозможностьИзменения,
	|	ПоказателиНачисления.Показатель6Предопределенный,
	|	ПоказателиНачисления.Показатель6Наименование,
	|	ПоказателиНачисления.Показатель6ТипПоказателя,
	|	ПоказателиНачисления.Показатель6ВозможностьИзменения,
	|	ПоказателиНачисления.Показатель1ТарифнаяСтавка,
	|	ПоказателиНачисления.Показатель2ТарифнаяСтавка,
	|	ПоказателиНачисления.Показатель3ТарифнаяСтавка,
	|	ПоказателиНачисления.Показатель4ТарифнаяСтавка,
	|	ПоказателиНачисления.Показатель5ТарифнаяСтавка,
	|	ПоказателиНачисления.Показатель6ТарифнаяСтавка,
	
	|	ПоказателиНачисления.Валюта1 КАК Валюта1,
	|	ПоказателиНачисления.Валюта2 КАК Валюта2,
	|	ПоказателиНачисления.Валюта3 КАК Валюта3,
	|	ПоказателиНачисления.Валюта4 КАК Валюта4,
	|	ПоказателиНачисления.Валюта5 КАК Валюта5,
	|	ПоказателиНачисления.Валюта6 КАК Валюта6,

	|	ПоказателиНачисления.Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	ПоказателиНачисления.Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	ПоказателиНачисления.Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	ПоказателиНачисления.Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	ПоказателиНачисления.Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	ПоказателиНачисления.Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	ВводПостоянногоНачисленияИлиУдержания.ВидРасчета.ПроизвольнаяФормулаРасчета КАК ПроизвольнаяФормулаРасчетаНачисления,
	|	ВводПостоянногоНачисленияИлиУдержания.Ссылка,
	|	ВводПостоянногоНачисленияИлиУдержания.ВидРасчета,
	|	ВводПостоянногоНачисленияИлиУдержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВЫБОР КОГДА ВводПостоянногоНачисленияИлиУдержания.Действие = 1 Или ВводПостоянногоНачисленияИлиУдержания.Действие = 3 ТОГДА Значение(Перечисление.ВидыДействияСНачислением.Прекратить) ИНАЧЕ Значение(Перечисление.ВидыДействияСНачислением.Изменить) КОНЕЦ КАК Действие,
	|	ВводПостоянногоНачисленияИлиУдержания.ДатаДействия,
	|	ВводПостоянногоНачисленияИлиУдержания.ДатаДействияКонец
	|ИЗ
	|	Документ.ВводПостоянногоНачисленияИлиУдержания КАК ВводПостоянногоНачисленияИлиУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК ПоказателиНачисления
	|		ПО ВводПостоянногоНачисленияИлиУдержания.ВидРасчета = ПоказателиНачисления.ВидРасчета
	|ГДЕ
	|	ВводПостоянногоНачисленияИлиУдержания.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции //СформироватьЗапросПоШапке

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры:
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)
	
	// Вид расчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ВидРасчета) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не задан вид расчета!", Отказ, Заголовок);
	КонецЕсли;
	
	// ДатаДействия
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаДействия) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не задана дата действия!", Отказ, Заголовок);
	КонецЕсли;
	
	// Период действия
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаДействияКонец) И ВыборкаПоШапкеДокумента.ДатаДействия > ВыборкаПоШапкеДокумента.ДатаДействияКонец Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Дата окончания действия не должна быть меньше даты начала!", Отказ, Заголовок);
	КонецЕсли; 
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "ОсновныеНачисления" документа.
// Если какой-то из реквизитов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса
//  Отказ						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, СоответствиеВалютныеСпособыРасчета)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Начисления"": ";
									
	ЭтоНачисление = (Действие = 0 Или Действие = 1);
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Действие) Тогда
		Если ВыборкаПоШапкеДокумента.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
			Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаДействия) Тогда
				Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КонфликтныйДокумент) Тогда
					// Движения в регистре на дату из документа
					Расшифровки = Новый Массив;
					Расшифровки.Добавить(Новый Структура("Представление, Расшифровка", ВыборкаПоСтрокамДокумента.КонфликтныйДокумент, ВыборкаПоСтрокамДокумента.КонфликтныйДокумент));
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("На дату "+ ВыборкаПоШапкеДокумента.ДатаДействия + " начисление уже зарегистрировано документом ", Отказ, Заголовок, , Расшифровки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
				
				
	// Одинаковые строки
	Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Один и тот же отрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " введен дважды (см. строку " + ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер + ")!", Отказ, Заголовок); 
	КонецЕсли;
	
	//Док основание
	Если ВыборкаПоШапкеДокумента.Действие = Перечисления.ВидыДействияСНачислением.Прекратить И (Не ЭтоНачисление) И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументОснование) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не выбран документ-основание в строке " + ВыборкаПоСтрокамДокумента.НомерСтроки + " !", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать или ВыборкаПоШапкеДокумента.Действие = Перечисления.ВидыДействияСНачислением.Изменить Тогда
		ИспользуютсяНачисленияВВалюте = Истина;
		
		Если ВыборкаПоШапкеДокумента.ПроизвольнаяФормулаРасчетаНачисления Тогда
			Для СчПоказателя = 1 По Мин(ВыборкаПоШапкеДокумента.КоличествоПоказателейНачисления, 6) Цикл
				ТипПоказателя = ВыборкаПоШапкеДокумента["Показатель" + СчПоказателя + "ТипПоказателя"];
				ВозможностьИзменения = ВыборкаПоШапкеДокумента["Показатель" + СчПоказателя + "ВозможностьИзменения"];
				ЗапрашиватьПриКадровыхПеремещениях = ВыборкаПоШапкеДокумента["Показатель" + СчПоказателя + "ЗапрашиватьПриКадровыхПеремещениях"];
				Если ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется И ЗапрашиватьПриКадровыхПеремещениях Тогда
					
					// проверка постоянных показателей
					Если ВыборкаПоСтрокамДокумента["Показатель" + СчПоказателя] = 0 Тогда
						// размер 
						Если Не ВыборкаПоШапкеДокумента["Показатель" + СчПоказателя + "Предопределенный"]
							и ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная
							и ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая
							и ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд Тогда
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + " не указан размер показателя " + ВыборкаПоШапкеДокумента["Показатель" + СчПоказателя+"Наименование"], Отказ, Заголовок);
						КонецЕсли;
					КонецЕсли;
					Если ЭтоНачисление Тогда
						Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента["ТарифныйРазряд" + СчПоказателя])
							и ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд Тогда
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан размер тарифа " + ВыборкаПоШапкеДокумента["Показатель" + СчПоказателя+"Наименование"], Отказ, Заголовок);
						КонецЕсли;
					КонецЕсли;
					// валюта (для денежного показателя)
					Если ИспользуютсяНачисленияВВалюте Тогда
						Если ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Денежный 
							и НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента["Валюта" + СчПоказателя]) И НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента["Валюта" + СчПоказателя])
							и ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд Тогда
							ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке +  "не указана валюта!", Отказ, Заголовок);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если ИспользуютсяНачисленияВВалюте Тогда
				// Валюта
				Если ВыборкаПоШапкеДокумента.КоличествоПоказателейНачисления > 0 
					И Не ВыборкаПоШапкеДокумента.ТребуетВводаТарифногоРазряда
					И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Валюта1)  И НЕ ВыборкаПоШапкеДокумента["Валюта1"]
					И СоответствиеВалютныеСпособыРасчета[ВыборкаПоСтрокамДокумента.СпособРасчета] 
					И ПроведениеРасчетов.СпособРасчетаТребуетРазмер(ВыборкаПоСтрокамДокумента.СпособРасчета) Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не задана валюта!", Отказ, Заголовок);
				КонецЕсли;
			КонецЕсли;
			
			// Размер оплаты
			Если ВыборкаПоШапкеДокумента.КоличествоПоказателейНачисления > 0 И ВыборкаПоШапкеДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить И ПроведениеРасчетов.СпособРасчетаТребуетРазмер(ВыборкаПоШапкеДокумента.СпособРасчета) Тогда
				Если ВыборкаПоСтрокамДокумента.Показатель1 = 0 и Не ВыборкаПоСтрокамДокумента.ТребуетВводаТарифногоРазряда Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан размер начисления!", Отказ, Заголовок);
					
				ИначеЕсли ВыборкаПоСтрокамДокумента.ТарифныйРазряд1.Пустая() И ВыборкаПоСтрокамДокумента.ТребуетВводаТарифногоРазряда Тогда
					ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан разряд!", Отказ, Заголовок);
					
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли;

		
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

Процедура ДобавитьСтрокуВДвиженияПоНачислениям(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям)
	
	ЭтоНачисление = (Действие = 0 Или Действие = 1);
	
	Если ЭтоНачисление Тогда
		Движение = Движения.ПлановыеНачисленияРаботников.Добавить();
	Иначе
		Движение = Движения.ПлановыеУдержанияРаботников.Добавить();
	КонецЕсли;
	
	// Свойства
	Движение.Период						= ВыборкаПоШапкеДокумента.ДатаДействия;
	
	// Измерения
	Движение.ФизЛицо					= ВыборкаПоНачислениям.ФизЛицо;
	
	Если ЭтоНачисление Тогда
		Если НЕ ВыборкаПоШапкеДокумента.ОсновноеНачисление Тогда
			Движение.ВидРасчетаИзмерение	= ВыборкаПоШапкеДокумента.ВидРасчета;
		КонецЕсли;
	КонецЕсли;
	
	// Ресурсы
	Движение.Действие					= ВыборкаПоШапкеДокумента.Действие;
	Движение.ВидРасчета					= ВыборкаПоШапкеДокумента.ВидРасчета;
	
	Если ВыборкаПоШапкеДокумента.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		Для Сч = 1 По 6 Цикл
			Движение["Показатель"+Сч]			= 0;
			Движение["Валюта"+Сч]				= Справочники.Валюты.ПустаяСсылка();
			Если ЭтоНачисление Тогда
				Движение["ТарифныйРазряд"+Сч]	= Справочники.ТарифныеРазряды.ПустаяСсылка();
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Сч = 1 По 6 Цикл
			Если ВыборкаПоШапкеДокумента.ПроизвольнаяФормулаРасчетаНачисления Тогда
				Если Сч <= ВыборкаПоШапкеДокумента.КоличествоПоказателейНачисления Тогда
					Если ВыборкаПоШапкеДокумента["Показатель" + Сч + "ЗапрашиватьПриКадровыхПеремещениях"] Тогда
						Движение["Показатель"+Сч]			= ВыборкаПоНачислениям["Показатель"+Сч];
						Если ЗначениеЗаполнено(ВыборкаПоНачислениям["Валюта"+Сч]) Тогда
							Движение["Валюта"+Сч]				= ВыборкаПоНачислениям["Валюта"+Сч];
						Иначе
							Движение["Валюта"+Сч]				= ВыборкаПоШапкеДокумента["Валюта" + Сч];
						КонецЕсли;
						Если ЭтоНачисление Тогда
							Движение["ТарифныйРазряд"+Сч]		= ВыборкаПоНачислениям["ТарифныйРазряд"+Сч];
						КонецЕсли;
					Иначе
						Движение["Показатель"+Сч]			= 0;
						Движение["Валюта"+Сч]				= Справочники.Валюты.ПустаяСсылка();
						Если ЭтоНачисление Тогда
							Движение["ТарифныйРазряд"+Сч]		= Справочники.ТарифныеРазряды.ПустаяСсылка();
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Движение["Показатель"+Сч]			= ВыборкаПоНачислениям["Показатель"+Сч];
				Если ЗначениеЗаполнено(ВыборкаПоНачислениям["Валюта"+Сч]) Тогда
					Движение["Валюта"+Сч]				= ВыборкаПоНачислениям["Валюта"+Сч];
				Иначе
					Движение["Валюта"+Сч]				= ВыборкаПоШапкеДокумента["Валюта" + Сч];
				КонецЕсли;
				Если ЭтоНачисление Тогда
					Движение["ТарифныйРазряд"+Сч]		= ВыборкаПоНачислениям["ТарифныйРазряд"+Сч];
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить 
		И ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаДействияКонец) Тогда
		Движение.ПериодЗавершения		= ВыборкаПоШапкеДокумента.ДатаДействияКонец + мДлинаСуток;
		Движение.ДействиеЗавершения		= ВыборкаПоНачислениям.ДействиеЗавершения;
		
		Для Сч = 1 По 6 Цикл
			Если Сч <= ВыборкаПоШапкеДокумента.КоличествоПоказателейНачисления Тогда
				
				Движение["Показатель"+Сч+"Завершения"]				= ВыборкаПоНачислениям["Показатель"+Сч+"Завершения"];
				Если ЗначениеЗаполнено(ВыборкаПоНачислениям["Валюта"+Сч]) Тогда
					Движение["Валюта"+Сч+"Завершения"]				= ВыборкаПоНачислениям["Валюта"+Сч+"Завершения"];
				Иначе
					Движение["Валюта"+Сч+"Завершения"]				= ВыборкаПоШапкеДокумента["Валюта" + Сч];
				КонецЕсли;
				Если ЭтоНачисление Тогда
					Движение["ТарифныйРазряд"+Сч+"Завершения"]		= ВыборкаПоНачислениям["ТарифныйРазряд"+Сч+"Завершения"];
				КонецЕсли;
			Иначе
				Движение["Показатель"+Сч+"Завершения"]			= 0;
				Движение["Валюта"+Сч+"Завершения"]				= Справочники.Валюты.ПустаяСсылка();
				Если ЭтоНачисление Тогда
					Движение["ТарифныйРазряд"+Сч+"Завершения"]	= Справочники.ТарифныеРазряды.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла
		
	КонецЕсли;
	
	Если Не ЭтоНачисление Тогда
		Если ВыборкаПоШапкеДокумента.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
			Движение.ДокументОснование = ВыборкаПоНачислениям.ДокументОснование;
		Иначе
			Движение.ДокументОснование = Ссылка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);

	СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
		
		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда

			// получим реквизиты табличной части "ОсновныеНачисления"
			РезультатЗапросаПоНачислениям = СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента);
			ВыборкаПоНачислениям = РезультатЗапросаПоНачислениям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоНачислениям.Следующий() Цикл
				
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, Отказ, Заголовок, СоответствиеВалютныеСпособыРасчета);

				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоНачислениям(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;

	КонецЕсли;
	
	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Начисления);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток = 86400;