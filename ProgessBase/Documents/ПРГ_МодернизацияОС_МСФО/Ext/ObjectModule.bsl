
Перем мУдалятьДвижения Экспорт;

Перем мТЗИнформация Экспорт;


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.МодернизацияОС") Тогда
		ДокументМодернизацииРСБУ = ДанныеЗаполнения;
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ДвиженияОснования = ДокументМодернизацииРСБУ.ПолучитьОбъект().Движения;
	
	ДвиженияПоРегиструБухгалтерииМеждународный(Отказ, ДвиженияОснования);
	
	ДвиженияПоРегиструОсновныеСредстваМеждународный(Отказ, ДвиженияОснования);
		
КонецПроцедуры


Процедура ДвиженияПоРегиструОсновныеСредстваМеждународный(Отказ, ДвиженияОснования)
	
	ДвиженияОснованияПараметрыАмортизации 	= ДвиженияОснования.ПараметрыАмортизацииОСБухгалтерскийУчет;
	ДвиженияОснованияСтоимость 				= ДвиженияОснования.СтоимостьОСБухгалтерскийУчет;
	ДвиженияОснованияПараметрыАмортизации	.Прочитать();
	ДвиженияОснованияСтоимость				.Прочитать();
	
	ДвиженияОснованияПараметрыАмортизации 	= ДвиженияОснованияПараметрыАмортизации.Выгрузить();
	ДвиженияОснованияСтоимость 				= ДвиженияОснованияСтоимость.Выгрузить();
	
	Движения.ОсновныеСредстваМеждународныйУчет.Записывать = Истина;
	
	Для Каждого ОССтрока Из ДокументМодернизацииРСБУ.ОС Цикл
		
		ОС = ОССтрока.ОсновноеСредство;
		
		СтоимостьМодернизации = 0;
		СтоимостьСтрока = ДвиженияОснованияСтоимость.Найти(ОС, "ОсновноеСредство");
		Если СтоимостьСтрока <> Неопределено Тогда
			СтоимостьМодернизации = ? (СтоимостьСтрока.ВидДвижения = ВидДвиженияНакопления.Приход, СтоимостьСтрока.Стоимость, - СтоимостьСтрока.Стоимость);
		КонецЕсли;
		
		ДатаДвижения = ДокументМодернизацииРСБУ.Дата;
		ДанныеРегистра = РегистрыСведений.ОсновныеСредстваМеждународныйУчет.ПолучитьПоследнее(ДатаДвижения, Новый Структура("ОсновноеСредство", ОС));
		
		Движение = Движения.ОсновныеСредстваМеждународныйУчет.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ДанныеРегистра);
		Движение.Период 					= ДатаДвижения;
		Движение.ОсновноеСредство 			= ОС;
		Движение.ПервоначальнаяСтоимость 	= Движение.ПервоначальнаяСтоимость + СтоимостьМодернизации;
		Движение.СправедливаяСтоимость 		= Движение.СправедливаяСтоимость + СтоимостьМодернизации;
		
		НовыйСрок = ДанныеРегистра.СрокПолезногоИспользования + ОССтрока.СрокПолезногоИспользованияБУ - ОССтрока.ФактСрокИспользованияБУ;
		Если ТипЗнч(мТЗИнформация) = Тип("ТаблицаЗначений") И мТЗИнформация.Количество() > 0 Тогда
			СтрокаТЗ = мТЗИнформация.Найти(ОС, "ОС");
			Если СтрокаТЗ <> Неопределено И СтрокаТЗ.СПИСтал <> НовыйСрок Тогда
				НовыйСрок = СтрокаТЗ.СПИСтал;
			КонецЕсли;
		КонецЕсли;
		
		Движение.СрокПолезногоИспользования = НовыйСрок;
		
	КонецЦикла;
	
КонецПроцедуры


Процедура ДвиженияПоРегиструБухгалтерииМеждународный(Отказ, ДвиженияОснования)
	
	ДвиженияОснованияХозрасчетный = ДвиженияОснования.Хозрасчетный;
	ДвиженияОснованияХозрасчетный.Прочитать();
	
	Движения.Международный.Записывать = Истина;
	
	Для Каждого ДвижениеРСБУ Из ДвиженияОснованияХозрасчетный Цикл
		
		Движение = Движения.Международный.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение, ДвижениеРСБУ, "Период, Организация, Содержание, НомерЖурнала, КоличествоДт, КоличествоКт, Сумма");
		
		СтруктураМСФО = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(ДвижениеРСБУ.СчетДт, ДвижениеРСБУ.СубконтоДт[0], ДвижениеРСБУ.СубконтоДт[1], ДвижениеРСБУ.СубконтоДт[2], Дата, , Истина);
		Если Не ЗначениеЗаполнено(СтруктураМСФО.Счет) Тогда
			Движение.СчетДт = ПланыСчетов.Международный.НайтиПоКоду(ДвижениеРСБУ.СчетДт.Код);
		Иначе
			Движение.СчетДт = СтруктураМСФО.Счет;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Движение.СчетДт) Тогда
			Для Каждого КлючЗначение Из ДвижениеРСБУ.СубконтоДт Цикл
				Для Н = 0 По Движение.СчетДт.ВидыСубконто.Количество()-1 Цикл
					ВидСубконто = Движение.СчетДт.ВидыСубконто[Н].ВидСубконто;
					Если ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(КлючЗначение.Значение)) Тогда
						Движение.СубконтоДт[ВидСубконто] = КлючЗначение.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("В строке %1 не определено соответствие для счета дебета %2", ДвижениеРСБУ.НомерСтроки, ДвижениеРСБУ.СчетДт);
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
		
		СтруктураМСФО = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(ДвижениеРСБУ.СчетКт, ДвижениеРСБУ.СубконтоКт[0], ДвижениеРСБУ.СубконтоКт[1], ДвижениеРСБУ.СубконтоКт[2], Дата, , Истина);
		Если Не ЗначениеЗаполнено(СтруктураМСФО.Счет) Тогда
			Движение.СчетКт = ПланыСчетов.Международный.НайтиПоКоду(ДвижениеРСБУ.СчетКт.Код);
		Иначе
			Движение.СчетКт = СтруктураМСФО.Счет;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Движение.СчетКт) Тогда
			Для Каждого КлючЗначение Из ДвижениеРСБУ.СубконтоКт Цикл
				Для Н = 0 По Движение.СчетКт.ВидыСубконто.Количество()-1 Цикл
					ВидСубконто = Движение.СчетКт.ВидыСубконто[Н].ВидСубконто;
					Если ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(КлючЗначение.Значение)) Тогда
						Движение.СубконтоКт[ВидСубконто] = КлючЗначение.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("В строке %1 не определено соответствие для счета кредита %2", ДвижениеРСБУ.НомерСтроки, ДвижениеРСБУ.СчетДт);
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения);
			Отказ = Истина;			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры
