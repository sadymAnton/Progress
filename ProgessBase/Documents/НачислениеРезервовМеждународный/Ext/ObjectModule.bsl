Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()


Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;	

	// is ЯннуровВФ нач 20140707 0И-001407
	//Для Каждого Стр Из Резервы Цикл
	//	СформироватьДвижения(Стр, Ложь);
	//КонецЦикла;
	//
	//Для Каждого Стр Из РезервыПрошлыхПериодов Цикл
	//	СформироватьДвижения(Стр, Истина);
	//	//СформироватьДвижения(Стр, Ложь); 
	//КонецЦикла;
	Для Каждого Стр Из Резервы Цикл
		Движение = Движения.Международный.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Стр);
		Движение.Период		 = Дата;
		Движение.Организация = Организация;
		БухгалтерскийУчет.УстановитьСубконто(Стр.СчетДт, Движение.СубконтоДт, 1, Стр.СубконтоДт1); 
		БухгалтерскийУчет.УстановитьСубконто(Стр.СчетДт, Движение.СубконтоДт, 2, Стр.СубконтоДт2); 
		БухгалтерскийУчет.УстановитьСубконто(Стр.СчетДт, Движение.СубконтоДт, 3, Стр.СубконтоДт3); 
		БухгалтерскийУчет.УстановитьСубконто(Стр.СчетКт, Движение.СубконтоКт, 1, Стр.СубконтоКт1); 
		БухгалтерскийУчет.УстановитьСубконто(Стр.СчетКт, Движение.СубконтоКт, 2, Стр.СубконтоКт2); 
		БухгалтерскийУчет.УстановитьСубконто(Стр.СчетКт, Движение.СубконтоКт, 3, Стр.СубконтоКт3); 
	КонецЦикла;
	// is ЯннуровВФ кон 20140707

	Движения.Международный.Записать();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью

Процедура СформироватьДвижения(Стр, Сторно)
	
	Движение = Движения.Международный.Добавить();
	ЗаполнитьЗначенияСвойств(Движение, Стр);
	Движение.Период		 = ?(Сторно = Истина, Дата, ДатаРеверсирования);
	Движение.Сумма		 = ?(Сторно = Истина, -Стр.Сумма, Стр.Сумма);
	Движение.Организация = Организация;
	БухгалтерскийУчет.УстановитьСубконто(Стр.СчетДт, Движение.СубконтоДт, 1, Стр.СубконтоДт1); 
	БухгалтерскийУчет.УстановитьСубконто(Стр.СчетДт, Движение.СубконтоДт, 2, Стр.СубконтоДт2); 
	БухгалтерскийУчет.УстановитьСубконто(Стр.СчетДт, Движение.СубконтоДт, 3, Стр.СубконтоДт3); 
	БухгалтерскийУчет.УстановитьСубконто(Стр.СчетКт, Движение.СубконтоКт, 1, Стр.СубконтоКт1); 
	БухгалтерскийУчет.УстановитьСубконто(Стр.СчетКт, Движение.СубконтоКт, 2, Стр.СубконтоКт2); 
	БухгалтерскийУчет.УстановитьСубконто(Стр.СчетКт, Движение.СубконтоКт, 3, Стр.СубконтоКт3); 
	
КонецПроцедуры	

