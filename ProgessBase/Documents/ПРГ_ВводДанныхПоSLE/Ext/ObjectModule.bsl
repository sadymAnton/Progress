Перем мУдалятьДвижения Экспорт;
Перем ПериодРегистрации Экспорт;

// Таблицы движений по регистрам
Перем мТаблицаДвиженийДанныеSLE;			

// Наборы движений по регистрам
Перем мДвиженияДанныеSLE;		
//#Если Клиент Тогда

//// Процедура осуществляет печать документа. Можно направить печать на 
//// экран или принтер, а также распечатать необходимое количество копий.
////
////  Название макета печати передается в качестве параметра,
//// по переданному названию находим имя макета в соответствии.
////
//// Параметры:
////  НазваниеМакета - строка, название макета.
////
//Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
//	
//	Если ЭтоНовый() Тогда
//		Предупреждение(НСтр("ru = 'Документ можно распечатать только после его записи'"));
//		Возврат;
//	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
//		Предупреждение(НСтр("ru = Недостаточно полномочий для печати непроведенного документа!'"));
//		Возврат;
//	КонецЕсли;
//	
//	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
//		Возврат;
//	КонецЕсли;
//	
//	// Получить экземпляр документа на печать
//	//Если ИмяМакета = "Информация" Тогда
//		//ТабДокумент = ПечатьИнформации();
//	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда
//		
//		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
//		
//		Если ТабДокумент = Неопределено Тогда
//			Возврат
//		КонецЕсли; 
//	КонецЕсли;
//	
//	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);
//	
//КонецПроцедуры // Печать

//// Возвращает доступные варианты печати документа
////
//// Возвращаемое значение:
////  Структура, каждая строка которой соответствует одному из вариантов печати
////  
//Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
//	
//	СтруктПечатныхФорм = Новый Структура;
//	//СтруктПечатныхФорм.Вставить("Информация",          "Информация о переходящих отгрузках");
//	
//	Возврат СтруктПечатныхФорм;
//	
//КонецФункции // ПолучитьСтруктуруПечатныхФорм()

//#КонецЕсли

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	мУдалятьДвижения = НЕ ЭтоНовый();
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	Если ВидОперации = Перечисления.ПРГ_ВидыОперацийSLE.ВводПлана Тогда	
		РежимПроведения = Перечисления.ПРГ_ВидЗначенияSLE.ПлановоеЗначениеSLE;	
	ИначеЕсли ВидОперации = Перечисления.ПРГ_ВидыОперацийSLE.ВводФакта Тогда
		РежимПроведения = Перечисления.ПРГ_ВидЗначенияSLE.ФактическоеЗначениеSLE;	
	ИначеЕсли ВидОперации = Перечисления.ПРГ_ВидыОперацийSLE.ВВодПоРезультатуРабот Тогда
		РежимПроведения = Перечисления.ПРГ_ВидЗначенияSLE.РезультатРаботПоSLE;	
	ИначеЕсли ВидОперации = Перечисления.ПРГ_ВидыОперацийSLE.ВводОсобыхУсловий Тогда
		РежимПроведения = Перечисления.ПРГ_ВидЗначенияSLE.ОсобыеУсловияSLE;	
	КонецЕсли;

	ДвиженияПоРегиструДанныеSLE(РежимПроведения);

			
КонецПроцедуры

// Формируем движения по регистру ПартииТоваровНаСкладахМеждународныйУчет
//
Процедура ДвиженияПоРегиструДанныеSLE(РежимПроведения)

	
    НаборЗаписей       = РегистрыСведений.ПРГ_ДанныеSLE.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
    //НоваяЗапись        = НаборЗаписей.Добавить();
	Для Каждого ТекСтрока Из ЗначенияSLE Цикл
		Если РежимПроведения = Перечисления.ПРГ_ВидЗначенияSLE.ПлановоеЗначениеSLE Тогда
			НоваяЗапись        = НаборЗаписей.Добавить();
			НоваяЗапись.Регистратор  = Ссылка;        
			НоваяЗапись.Период       = Ссылка.Дата;
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.Линия = ТекСтрока.Линия;
			НоваяЗапись.ПлановоеЗначениеSLE = ТекСтрока.ПлановоеЗначениеSLE;
			НоваяЗапись.ВидЗначенияSLE = РежимПроведения;
			НоваяЗапись.Подразделение = Подразделение;
		ИначеЕсли РежимПроведения = Перечисления.ПРГ_ВидЗначенияSLE.ФактическоеЗначениеSLE Тогда	
			НоваяЗапись        = НаборЗаписей.Добавить();
			НоваяЗапись.Регистратор  = Ссылка;        
			НоваяЗапись.Период       = Ссылка.Дата;
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.Линия = ТекСтрока.Линия;
			НоваяЗапись.График = ТекСтрока.графикРабот;
			НоваяЗапись.ФактическоеЗначениеSLE = ТекСтрока.ФактическоеЗначениеSLE;
			НоваяЗапись.ВидЗначенияSLE = РежимПроведения;
			НоваяЗапись.Подразделение = Подразделение;
			НоваяЗапись.ПроцентНагрузки = ТекСтрока.ПроцентНагрузки;
		ИначеЕсли РежимПроведения = Перечисления.ПРГ_ВидЗначенияSLE.ОсобыеУсловияSLE Тогда  
			НоваяЗапись        = НаборЗаписей.Добавить();
			НоваяЗапись.Регистратор  = Ссылка;  
			НоваяЗапись.ВидЗначенияSLE = РежимПроведения;
			НоваяЗапись.Период       = Ссылка.Дата; 
			НоваяЗапись.Организация = Организация;
            НоваяЗапись.График = ТекСтрока.графикРабот;
			НоваяЗапись.Подразделение = ТекСтрока.подразделение;
			НоваяЗапись.Сотрудник = ТекСтрока.сотрудник;
			НоваяЗапись.Должность = ТекСтрока.Должность;
            НоваяЗапись.ПроцентВыполненияSLE = ТекСтрока.ПроцентВыполненияSLE;
		ИначеЕсли РежимПроведения = Перечисления.ПРГ_ВидЗначенияSLE.РезультатРаботПоSLE Тогда
			НоваяЗапись        = НаборЗаписей.Добавить();
			НоваяЗапись.Регистратор  = Ссылка;        
			НоваяЗапись.Период       = Ссылка.Дата; 
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.ВидЗначенияSLE = РежимПроведения;
			НоваяЗапись.Линия = ТекСтрока.Линия;
			НоваяЗапись.График = ТекСтрока.графикРабот;
			НоваяЗапись.Подразделение = ТекСтрока.подразделение;
			НоваяЗапись.Сотрудник = ТекСтрока.сотрудник;
			НоваяЗапись.Должность = ТекСтрока.Должность;
			НоваяЗапись.ФактическоеЗначениеSLE = ТекСтрока.ФактическоеЗначениеSLE;
			НоваяЗапись.ПлановоеЗначениеSLE = ТекСтрока.ПлановоеЗначениеSLE;
			НоваяЗапись.ПроцентВыполненияSLE = ТекСтрока.ПроцентВыполненияSLE;
			НоваяЗапись.НачисленоПоSLE = ТекСтрока.СуммаПоSLE;
			НоваяЗапись.ПроцентНагрузки = ТекСтрока.ПроцентНагрузки;

		КонецЕсли;
    КонецЦикла;
    НаборЗаписей.Записать(); 
КонецПроцедуры // ДвиженияПоРегиструПартийТоваров()

