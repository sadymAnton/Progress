
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если ТолстыйКлиентОбычноеПриложение Тогда

Функция ПечатьСправки()
	
	СтруктураДанныхНА = СправкиПоНДФЛ.ДанныеНалоговогоАгентаДля2НДФЛ(Организация, НалоговыйПериод, "", ОКТМО_КПП, КодИФНС, Дата, Телефон, , СправкуПодписал, Истина);
	СтруктураДанныхНА.Признак = ?(СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуСводно,"СводнаяСправка","");
	
	ТаблицаДанныхСотрудников = Новый ТаблицаЗначений;
	Для каждого Реквизит Из Метаданные.Документы.СправкаПоНДФЛВНалоговыйОрганС2015.ТабличныеЧасти.СотрудникиОрганизации.Реквизиты Цикл
		Если Реквизит.Имя = "НомерСправки" Тогда // номер справки в этом документе - строковый
			Продолжить;
		КонецЕсли;
		ТаблицаДанныхСотрудников.Колонки.Добавить(Реквизит.Имя,Реквизит.Тип);
	КонецЦикла;
	ТаблицаДанныхСотрудников.Колонки.Добавить("НомерСправки", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	СтрокаДанных = ТаблицаДанныхСотрудников.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаДанных,ЭтотОбъект);
	СтрокаДанных.НомерСправки = ОбщегоНазначенияЗК.ПолучитьНомерНаПечать(ЭтотОбъект);
	
	ТаблицаДанныхОДоходах = СведенияОДоходах.Выгрузить();
	ТаблицаДанныхОДоходах.Колонки.Добавить("НомерСправки", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	ТаблицаДанныхОДоходах.ЗаполнитьЗначения(СтрокаДанных.НомерСправки,"НомерСправки");
	
	ТаблицаДанныхОВычетах = СведенияОВычетах.Выгрузить();
	ТаблицаДанныхОВычетах.Колонки.Добавить("НомерСправки", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	ТаблицаДанныхОВычетах.ЗаполнитьЗначения(СтрокаДанных.НомерСправки,"НомерСправки");
	
	ТаблицаИтоговыхДанных = СуммыНалогов.Выгрузить();
	ТаблицаИтоговыхДанных.Колонки.Добавить("НомерСправки", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	ТаблицаИтоговыхДанных.ЗаполнитьЗначения(СтрокаДанных.НомерСправки,"НомерСправки");
	
	Возврат СправкиПоНДФЛ.ПечатьСправок2НДФЛ(Ссылка, СтруктураДанныхНА, ТаблицаДанныхСотрудников, ТаблицаДанныхОДоходах, ТаблицаДанныхОВычетах, ТаблицаИтоговыхДанных)	

КонецФункции // ПечатьСправки()
	
	
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	ТабДокумент = Неопределено;
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Справка" Тогда
		ТабДокумент = ПечатьСправки();
	КонецЕсли;

	ОбработкаКомментариев.ПоказатьСообщения();
	
	Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначенияЗК.СформироватьЗаголовокДокумента(ЭтотОбъект,"Справка о доходах (2-НДФЛ) "));
	
КонецФункции // Печать

#КонецЕсли

Процедура ЗаполнитьРеквизитыЗначениямиПоУмолчанию() Экспорт
	
	ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
	КонецЕсли;
	
	Если НалоговыйПериод = 0 Тогда 
		НалоговыйПериод = Макс(Год(Дата) - ?(Месяц(Дата) = 1, 1, 0), 2015);
		Если ЗначениеЗаполнено(Организация) Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СправкиПоНДФЛ.ДанныеПодписывающихЛиц(Организация, Дата));
		КонецЕсли;
		СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуВРазрезеКодовОКАТО;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура("Справка", "2-НДФЛ");
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НалоговыйПериод = 0 Тогда // документ без налогового периода неконсистентен
		НалоговыйПериод = Макс(Год(Дата),2015);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		
		Дата = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
		
		ДанныеСотрудника = ОбщегоНазначенияЗК.ПолучитьЗначенияРеквизитов(Основание, "Физлицо, Организация");
		ЭтотОбъект.Сотрудник = ДанныеСотрудника.Физлицо;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеСотрудника);
		
		ЗаполнитьРеквизитыЗначениямиПоУмолчанию();
		
		СправкиПоНДФЛ.ПрочитатьДанныеСотрудника(ЭтотОбъект, Дата, НалоговыйПериод);
		
		ГодПереходаНаКодыОКТМО = Год(ПроведениеРасчетов.ДатаПереходаНаКодыОКТМО());
		
		СписокОКТМОиКПП = СправкиПоНДФЛ.СписокОКТМОиКПП(Организация);
		ОКТМО_КПП = ?(СписокОКТМОиКПП.Количество() > 0, СписокОКТМОиКПП[0].Значение, "");
		КодИФНС = СправкиПоНДФЛ.КодНалоговогоОрганаПоОКАТО_КППиОрганизации(Организация, ОбщегоНазначенияЗКПереопределяемый.ЭтоЮрЛицо(Организация), ОКТМО_КПП);
		СправкиПоНДФЛ.ПрочитатьДанныеСправки(ЭтотОбъект, СведенияОДоходах, СведенияОВычетах, СуммыНалогов, НалоговыйПериод, Организация, ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация), ?(СпособФормирования = Перечисления.ПорядокФормированияСправкиОДоходахФизлица.ФизлицуВРазрезеКодовОКАТО, ОКТМО_КПП, Неопределено), КонецМесяца(Дата) + 1, Истина)
		
	КонецЕсли;
	
КонецПроцедуры


