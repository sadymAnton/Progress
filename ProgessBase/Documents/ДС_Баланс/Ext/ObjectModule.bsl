Процедура ЗаполнитьПоказатели() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДС_ПоказателиБаланса.Ссылка КАК Показатель,
	|	ДС_ПоказателиБаланса.Порядок КАК Порядок
	|ИЗ
	|	Справочник.ДС_ПоказателиБаланса КАК ДС_ПоказателиБаланса
	|ГДЕ
	|	НЕ ДС_ПоказателиБаланса.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Результат = Запрос.Выполнить();
	Баланс.Загрузить(Результат.Выгрузить());
КонецПроцедуры //ЗаполнитьПоказатели()

Функция РасчетСуммыСУсловием(Счет, Субконто1, Субконто2, Субконто3, Организация, Сумма, Условие, Показатель)
	Попытка
		Выполнить Условие;
	Исключение
		Сообщить("Ошибка при вычислении условия [" + Условие + "] в показателе [" + Показатель + "]: " + ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
	Возврат Сумма;
КонецФункции //РасчетСуммыСУсловием()

Процедура ДобавитьПоказатель(СтрокаТЧ, Показатель, Множитель = 1)
	Для каждого СтрокаСчета Из Показатель.Остатки Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МеждународныйОстаткиИОбороты.Счет,
		|	МеждународныйОстаткиИОбороты.Организация,
		|	МеждународныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Международный.ОстаткиИОбороты(&ПериодНач, &ПериодКон, Период, , Счет В ИЕРАРХИИ (&Счет), , ) КАК МеждународныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ПериодНач", 	ПериодНач);
		Запрос.УстановитьПараметр("ПериодКон", 	ПериодКон);
		Запрос.УстановитьПараметр("Счет", 		СтрокаСчета.СчетУчета);
		
		Если СтрокаСчета.ВидОстатков = Перечисления.ДС_ВариантыРасчетаСальдо.СальдоНачальноеДебетовое Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "СуммаКонечныйОстатокДт", "СуммаНачальныйОстатокДт");
			
		ИначеЕсли СтрокаСчета.ВидОстатков = Перечисления.ДС_ВариантыРасчетаСальдо.СальдоНачальноеКредитовое Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "СуммаКонечныйОстатокДт", "СуммаНачальныйОстатокКт");
			
		ИначеЕсли СтрокаСчета.ВидОстатков = Перечисления.ДС_ВариантыРасчетаСальдо.СальдоКонечноеКредитовое Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "СуммаКонечныйОстатокДт", "СуммаКонечныйОстатокКт");
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаТЧ.Сумма 	= СтрокаТЧ.Сумма + Выборка.Сумма * СтрокаСчета.Множитель * Множитель;
		КонецЦикла;
		
	КонецЦикла; 
КонецПроцедуры //ДобавитьПоказатель()

Процедура Рассчитать() Экспорт
	Для каждого СтрокаТЧ Из Баланс Цикл
		СтрокаТЧ.Сумма 	= 0;
		ДобавитьПоказатель(СтрокаТЧ, СтрокаТЧ.Показатель);
	КонецЦикла; 
КонецПроцедуры //Рассчитать()

Процедура Печать() Экспорт
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.ДС_Баланс.ПолучитьМакет("Баланс");
	
	// Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(Область);
	
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Заполнить(ЭтотОбъект);
	ТабДок.Вывести(Шапка);
	
	// Баланс
	Область = Макет.ПолучитьОбласть("БалансШапка");
	ТабДок.Вывести(Область);
	ОбластьБаланс = Макет.ПолучитьОбласть("Баланс");
	Для Каждого ТекСтрокаБаланс Из Баланс Цикл
		ОбластьБаланс.Параметры.Заполнить(ТекСтрокаБаланс);
		ТабДок.Вывести(ОбластьБаланс);
	КонецЦикла;

	ТабДок.ОтображатьСетку 		= Ложь;
	ТабДок.Защита 				= Ложь;
	ТабДок.ТолькоПросмотр 		= Ложь;
	ТабДок.ОтображатьЗаголовки 	= Ложь;
	ТабДок.Показать();
КонецПроцедуры //Печать() 
