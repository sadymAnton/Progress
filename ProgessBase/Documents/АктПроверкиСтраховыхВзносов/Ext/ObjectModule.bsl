////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктПроверкиСтраховыхВзносов.Дата,
	|	АктПроверкиСтраховыхВзносов.Организация,
	|	ВЫБОР
	|		КОГДА АктПроверкиСтраховыхВзносов.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА АктПроверкиСтраховыхВзносов.Организация
	|		ИНАЧЕ АктПроверкиСтраховыхВзносов.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	АктПроверкиСтраховыхВзносов.Ссылка,
	|	АктПроверкиСтраховыхВзносов.ПериодРегистрации,
	|	АктПроверкиСтраховыхВзносов.ОснованиеДляДоначисления
	|ИЗ
	|	Документ.АктПроверкиСтраховыхВзносов КАК АктПроверкиСтраховыхВзносов
	|ГДЕ
	|	АктПроверкиСтраховыхВзносов.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 		 - флаг отказа в проведении,
//	Заголовок	 - Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан месяц регистрации акта!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОснованиеДляДоначисления) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан вид проверки!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ПроверитьЗаполнениеСтрокиСтраховыеВзносыСведенияОДоходах(ВыборкаПоТЧ, Отказ, Заголовок)

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
	""" табл. части ""Учет доходов по страховым взносам"": ";
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцРасчетногоПериода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ВидДохода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан вид дохода!", Отказ, Заголовок);
	КонецЕсли;
		
КонецПроцедуры 

Процедура ПроверитьЗаполнениеСтрокиСтраховыеВзносы(ВыборкаПоТЧ, Отказ, Заголовок)

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
	""" табл. части ""Исчислено взносов в ПФР, ФСС и ФОМС"": ";
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцРасчетногоПериода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан месяц расчетного периода!", Отказ, Заголовок);
		
	КонецЕсли;
		
КонецПроцедуры 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);	
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			Движения.СтраховыеВзносыИсчисленные.мВыполнятьДополнительныеДвижения	= Истина;
			
			Для каждого СтрокаТЧ Из ДоначисленныеВзносы Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиСтраховыеВзносы(СтрокаТЧ, Отказ, Заголовок);
				Если Не Отказ Тогда
					Движение = Движения.СтраховыеВзносыИсчисленные.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
					Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
					Движение.ДатаПолученияДохода = НачалоДня(КонецМесяца(СтрокаТЧ.МесяцРасчетногоПериода));
					Движение.Организация = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ОбособленноеПодразделение = ВыборкаПоШапкеДокумента.Организация;
					Движение.ОснованиеДляДоначисления = ВыборкаПоШапкеДокумента.ОснованиеДляДоначисления;
				КонецЕсли;
			КонецЦикла; 
			
			Для каждого СтрокаТЧ Из СведенияОДоходах Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиСтраховыеВзносыСведенияОДоходах(СтрокаТЧ, Отказ, Заголовок);
				Если Не Отказ Тогда
					Движение = Движения.СтраховыеВзносыСведенияОДоходах.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
					Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
					Движение.ДатаПолученияДохода = НачалоДня(КонецМесяца(СтрокаТЧ.МесяцРасчетногоПериода));
					Движение.Организация = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ОбособленноеПодразделение = ВыборкаПоШапкеДокумента.Организация;
					Движение.ПоАктуПроверки = Истина;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;

	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(СведенияОДоходах);
	МассивТЧ.Добавить(ДоначисленныеВзносы);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");
	
	ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР = РасчетСтраховыхВзносов.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР();
	ДатаВыделенияВзносовНаОПСсСуммПревышенияПредельнойВеличины = РасчетСтраховыхВзносов.ДатаВыделенияВзносовНаОПСсСуммПревышенияПредельнойВеличины();
	Для каждого СтрокаТЧ Из ДоначисленныеВзносы Цикл
		
		Если СтрокаТЧ.МесяцРасчетногоПериода < ДатаВыделенияВзносовНаОПСсСуммПревышенияПредельнойВеличины Тогда
			СтрокаТЧ.ПФРДоПредельнойВеличины = 0;
			СтрокаТЧ.ПФРДоПредельнойВеличиныЕНВД = 0;
			СтрокаТЧ.ПФРСПревышения = 0;
			СтрокаТЧ.ПФРСПревышенияЕНВД = 0;
			Если СтрокаТЧ.МесяцРасчетногоПериода < ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР Тогда
				СтрокаТЧ.ПФРПоСуммарномуТарифу = 0;
				СтрокаТЧ.ПФРПоСуммарномуТарифуЕНВД = 0;
				СтрокаТЧ.ПФРПоСуммарномуТарифуСПревышения = 0;
			Иначе
				СтрокаТЧ.ПФРСтраховая = 0;
				СтрокаТЧ.ПФРСтраховаяЕНВД = 0;
				СтрокаТЧ.ПФРСтраховаяСПревышения = 0;
				СтрокаТЧ.ПФРНакопительная = 0;
				СтрокаТЧ.ПФРНакопительнаяЕНВД = 0;
			КонецЕсли;	
		Иначе
			СтрокаТЧ.ПФРПоСуммарномуТарифу = 0;
			СтрокаТЧ.ПФРПоСуммарномуТарифуЕНВД = 0;
			СтрокаТЧ.ПФРПоСуммарномуТарифуСПревышения = 0;
			СтрокаТЧ.ПФРСтраховая = 0;
			СтрокаТЧ.ПФРСтраховаяЕНВД = 0;
			СтрокаТЧ.ПФРСтраховаяСПревышения = 0;
			СтрокаТЧ.ПФРНакопительная = 0;
			СтрокаТЧ.ПФРНакопительнаяЕНВД = 0;
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

