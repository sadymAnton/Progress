Перем мУдалятьДвижения;

//начало изменений Ожиганов А. 15.05.2017 добавление тестового механизма 
Перем мМассивТестовыхНоменклатур Экспорт;
//конец изменений 

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Проверяет, что счет является субсчетом
//
// Параметры:
//	Проверяемый счет, Счет-родитель, общая структура параметров.
//
// Возвращаемое значение:
//	
//
Функция СчетВИерархииЛок(ПроверяемыйСчет, СчетРодитель, СтруктураПараметров)
	
	Перем СоотвИерархияСчетов;
	
	Если НЕ ЗначениеЗаполнено(ПроверяемыйСчет) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// В свойстве СоотвИерархияСчетов кэшируются данные об иерархии счетов
	Если НЕ СтруктураПараметров.Свойство("СоотвИерархияСчетов", СоотвИерархияСчетов) Тогда
		СоотвИерархияСчетов = Новый Соответствие;
		СтруктураПараметров.Вставить("СоотвИерархияСчетов", СоотвИерархияСчетов);
	КонецЕсли;
	
	// Иерархия для каждого отдельного счета
	СоотвИерархия = СоотвИерархияСчетов[СчетРодитель];
	
	Если ТипЗнч(СоотвИерархия) <> Тип("Соответствие") Тогда
		СоотвИерархия = Новый Соответствие;
		
		// Определим иерархию счетов
		ИмяПланаСчетов = ПроверяемыйСчет.Метаданные().Имя;
		
		ЗапросСчета = Новый Запрос(
		"ВЫБРАТЬ
		|	ПланСчетовРегистра.Ссылка КАК Ссылка
		|ИЗ
		|	ПланСчетов."+ИмяПланаСчетов+" КАК ПланСчетовРегистра
		|
		|ГДЕ
		|	ПланСчетовРегистра.Ссылка В ИЕРАРХИИ (&Ссылка)
		|");
		
		ЗапросСчета.УстановитьПараметр("Ссылка", СчетРодитель);
		
		ВыборкаСчета = ЗапросСчета.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		Пока ВыборкаСчета.Следующий() Цикл
			СоотвИерархия.Вставить(ВыборкаСчета.Ссылка, ВыборкаСчета.Ссылка);
		КонецЦикла;
		
		СоотвИерархияСчетов.Вставить(СчетРодитель, СоотвИерархия);
	КонецЕсли;
	
	// Собственно проверка
	Возврат НЕ (СоотвИерархия[ПроверяемыйСчет] = Неопределено);
	
КонецФункции // СчетВИерархииЛок()

// Процедура считывает контрагента договора по ссылке без чтения всего объекта
//
Функция ПолучитьКонтрагентаИзДоговораЛок(ДоговорКонтрагента);
	
	Если ТипЗнч(ДоговорКонтрагента) = Тип("СправочникСсылка.ДоговорыКонтрагентов")
		И ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ Владелец КАК Контрагент ИЗ Справочник.ДоговорыКонтрагентов ГДЕ Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", ДоговорКонтрагента);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Контрагент;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Процедура считывает контрагента из документа по ссылке без чтения всего объекта
//
Функция ПолучитьКонтрагентаИзДокументаОприходованияЛок(ДокументОприходования)
	
	// Получаем контрагента из документа партии
	Если ЗначениеЗаполнено(ДокументОприходования) Тогда
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ДокументОприходования));
		
		Если МетаданныеДокумента <> Неопределено Тогда
			Если МетаданныеДокумента.Реквизиты.Найти("Контрагент")<>Неопределено Тогда
				
				Запрос = Новый Запрос("Выбрать Контрагент Из Документ."+МетаданныеДокумента.Имя+" ГДЕ Ссылка = &Ссылка");
				Запрос.УстановитьПараметр("Ссылка", ДокументОприходования);
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					
					Возврат Выборка.Контрагент;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ЗаполнитьСубконтоПоРеквизитамЛок(ВидСубконто, Субконто, ЗначениеСубконто1, ЗначениеСубконто2=Неопределено, ЗначениеСубконто3=Неопределено, ЗаполнятьТолькоПустые = Ложь)
	
	Если ЗаполнятьТолькоПустые Тогда // в этом режиме заполняются только пустые
		Если ЗначениеЗаполнено(Субконто[ВидСубконто.Видсубконто]) Тогда
			
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначениеСубконто1) И ВидСубконто.ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЗначениеСубконто1)) Тогда
		
		Субконто.Вставить(ВидСубконто.ВидСубконто, ЗначениеСубконто1);
		
	ИначеЕсли ЗначениеЗаполнено(ЗначениеСубконто2) И ВидСубконто.ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЗначениеСубконто2)) Тогда
		
		Субконто.Вставить(ВидСубконто.ВидСубконто, ЗначениеСубконто2);
		
	ИначеЕсли ЗначениеЗаполнено(ЗначениеСубконто3) И ВидСубконто.ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЗначениеСубконто3)) Тогда
		
		Субконто.Вставить(ВидСубконто.ВидСубконто, ЗначениеСубконто3);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает субконто на счете. Если такое субконто не счете
// отсутствует, то ничего не делается.
//
// Параметры:
//		Счет - Счет, к которому относится субконто
//      Субконто - вид субконто
//		Номер или имя установливаемого субконто
//      Значение субконто - значение устанавливаемого субконто
//
Процедура ЗаполнитьСубконтоПоСписаниюТоваровЛок(Проводка, СтрокаДокумента, Движение, СтруктураПараметров)
	
	ЗаполнитьСубконтоПоСписаниюТоваровРеглЛок(Проводка, СтрокаДокумента, Движение, СтруктураПараметров);
	ЗаполнитьСубконтоПоСписаниюТоваровМеждЛок(Проводка, СтрокаДокумента, Движение, СтруктураПараметров);
	
КонецПроцедуры // ЗаполнитьСубконтоПоСписаниюТоваров()

Процедура ЗаполнитьСубконтоПоСписаниюТоваровРеглЛок(Проводка, СтрокаДокумента, Движение, СтруктураПараметров)
	
	// По бухгалтерскому учету и налоговому учету - одинаково - используются одни и те же виды субконто
	Если СтрокаДокумента.ОтражатьВБухгалтерскомУчете
		ИЛИ СтрокаДокумента.ОтражатьВНалоговомУчете
		
		Тогда
		
		ВидСубконтоНоменклатура = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
		ВидСубконтоНоменклатурныеГруппы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы;
		ВидСубконтоСклады       = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
		ВидСубконтоПодразделения= ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения;
		ВидСубконтоСтатьиЗатрат = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
		ВидСубконтоДоговоры     = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
		ВидСубконтоКонтрагенты  = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
		ВидСубконтоКомиссионеры = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Комиссионеры;
		ВидСубконтоОбъектыСтроительства = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства;
		ВидСубконтоОсновныеСредства = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
		
		Если СтрокаДокумента.ОтражатьВБухгалтерскомУчете Тогда
			//СчетТоварыОтгруженные = ПланыСчетов.Хозрасчетный.ТоварыОтгруженные;
			СчетТоварыПринятые    = ПланыСчетов.Хозрасчетный.ТоварыПринятыеНаКомиссию;
		ИначеЕсли СтрокаДокумента.ОтражатьВНалоговомУчете Тогда
			//СчетТоварыОтгруженные = ПланыСчетов.Налоговый.ТоварыОтгруженные;
			СчетТоварыПринятые    = ПланыСчетов.Налоговый.ТоварыПринятыеНаКомиссию;
		КонецЕсли;
		
		// Заполняем дебет:
		Если ЗначениеЗаполнено(Проводка.СчетДт) Тогда
			
			Для каждого ВидСубконто Из Проводка.СчетДт.ВидыСубконто Цикл
				
				Если ВидСубконто.ВидСубконто = ВидСубконтоНоменклатура Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.Номенклатура);
					
					Если ЗначениеЗаполнено(СтрокаДокумента.НоменклатураНовая) Тогда
						
						Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.НоменклатураНовая);
						
					КонецЕсли;
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоПодразделения Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.ПодразделениеОрганизации);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоСклады Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.Склад);
					
					Если ЗначениеЗаполнено(СтрокаДокумента.СкладПолучатель) ИЛИ СтрокаДокумента.ИзменитьСклад Тогда
						
						Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.СкладПолучатель);
						
					КонецЕсли;
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоСтатьиЗатрат Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.СтатьяЗатрат);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоНоменклатурныеГруппы Тогда
					
					Если ЗначениеЗаполнено(СтрокаДокумента.НоменклатурнаяГруппа) Тогда
						
						Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.НоменклатурнаяГруппа);
						
					КонецЕсли;
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоДоговоры Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.ДоговорКонтрагента);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоКонтрагенты Тогда
					
					Контрагент = Неопределено;
					
					// Для товаров принятых субконто Контрагент - это комитент
					Если СчетВИерархииЛок(Проводка.СчетДт, СчетТоварыПринятые, СтруктураПараметров) Тогда
						
						Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
							Если Движение<>Неопределено Тогда
								Контрагент = ПолучитьКонтрагентаИзДокументаОприходованияЛок(Движение.ДокументОприходования);
							КонецЕсли;
						КонецЕсли;
						
					Иначе
						
						Если ЗначениеЗаполнено(СтрокаДокумента.ДоговорКонтрагента) Тогда
							Контрагент = ПолучитьКонтрагентаИзДоговораЛок(СтрокаДокумента.ДоговорКонтрагента);
						КонецЕсли;
						
					КонецЕсли;
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, Контрагент);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоКомиссионеры Тогда
					
					Комиссионер = Неопределено;
					
					Если ЗначениеЗаполнено(СтрокаДокумента.ДоговорКонтрагента) Тогда
						Комиссионер = ПолучитьКонтрагентаИзДоговораЛок(СтрокаДокумента.ДоговорКонтрагента);
					КонецЕсли;
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, Комиссионер);
					
				КонецЕсли;
				
				Если Метаданные.НайтиПоТипу(ТипЗнч(Проводка.СчетДт)) = Метаданные.ПланыСчетов.Хозрасчетный 
					ИЛИ Метаданные.НайтиПоТипу(ТипЗнч(Проводка.СчетДт)) = Метаданные.ПланыСчетов.Налоговый Тогда
					
					ЗаполнитьСубконтоПоРеквизитамЛок(ВидСубконто, Проводка.СубконтоДт, СтрокаДокумента.КорСубконтоБУ1, СтрокаДокумента.КорСубконтоБУ2, СтрокаДокумента.КорСубконтоБУ3);
					
				КонецЕсли;
				
			КонецЦикла; 
			
		КонецЕсли;
		
		// Заполняем кредит
		Если ЗначениеЗаполнено(Проводка.СчетКт) Тогда
			
			Для каждого ВидСубконто Из Проводка.СчетКт.ВидыСубконто Цикл
				
				Если ВидСубконто.ВидСубконто = ВидСубконтоНоменклатура Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.Номенклатура);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоПодразделения Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.ПодразделениеОрганизации);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоСклады Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.Склад);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоСтатьиЗатрат Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.СтатьяЗатрат);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоДоговоры Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.ДоговорКонтрагента);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоКонтрагенты Тогда
					
					Контрагент = Неопределено;
					
					// Для товаров принятых субконто Контрагент - это комитент
					Если СчетВИерархииЛок(Проводка.СчетКт, СчетТоварыПринятые, СтруктураПараметров) Тогда
						
						Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
							Если Движение<>Неопределено Тогда
								Контрагент = ПолучитьКонтрагентаИзДокументаОприходованияЛок(Движение.ДокументОприходования);
							КонецЕсли;
						КонецЕсли;
						
					Иначе
						
						Если ЗначениеЗаполнено(СтрокаДокумента.ДоговорКонтрагента) Тогда
							Контрагент = ПолучитьКонтрагентаИзДоговораЛок(СтрокаДокумента.ДоговорКонтрагента);
						КонецЕсли;
						
					КонецЕсли;
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, Контрагент);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоКомиссионеры Тогда
					
					Комиссионер = Неопределено;
					
					Если ЗначениеЗаполнено(СтрокаДокумента.ДоговорКонтрагента) Тогда
						Комиссионер = ПолучитьКонтрагентаИзДоговораЛок(СтрокаДокумента.ДоговорКонтрагента);
					КонецЕсли;
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, Комиссионер);
					
				КонецЕсли;
				
				Если Метаданные.НайтиПоТипу(ТипЗнч(Проводка.СчетКт)) = Метаданные.ПланыСчетов.Хозрасчетный 
					ИЛИ Метаданные.НайтиПоТипу(ТипЗнч(Проводка.СчетКт)) = Метаданные.ПланыСчетов.Налоговый Тогда
					
					ЗаполнитьСубконтоПоРеквизитамЛок(ВидСубконто, Проводка.СубконтоКт, СтрокаДокумента.КорСубконтоБУ1, СтрокаДокумента.КорСубконтоБУ2, СтрокаДокумента.КорСубконтоБУ3, Истина);
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
		
КонецПроцедуры

Процедура ЗаполнитьСубконтоПоСписаниюТоваровмеждЛок(Проводка, СтрокаДокумента, Движение, СтруктураПараметров)
	
	Если СтрокаДокумента.ОтражатьВМеждународномУчете
		
		Тогда
		
		ВидСубконтоНоменклатура         = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Номенклатура;
		ВидСубконтоНоменклатурныеГруппы = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НоменклатурныеГруппы;
		ВидСубконтоСклады       = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Склады;
		ВидСубконтоПодразделения= ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Подразделения;
		ВидСубконтоСтатьиЗатрат = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиЗатрат;
		ВидСубконтоДоговоры     = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Договоры;
		ВидСубконтоКонтрагенты  = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Контрагенты;
		ВидСубконтоОбъектыСтроительства = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.ОбъектыСтроительства;
		ВидСубконтоОсновныеСредства = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.ОсновныеСредства;
		
		// Заполняем дебет:
		Если ЗначениеЗаполнено(Проводка.СчетДт) Тогда
			
			Для каждого ВидСубконто Из Проводка.СчетДт.ВидыСубконто Цикл
				
				Если ВидСубконто.ВидСубконто = ВидСубконтоНоменклатура Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.Номенклатура);
					
					Если ЗначениеЗаполнено(СтрокаДокумента.НоменклатураНовая) Тогда
						
						Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.НоменклатураНовая);
						
					КонецЕсли;
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоПодразделения Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.ПодразделениеОрганизации);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоСклады Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.Склад);
					
					Если ЗначениеЗаполнено(СтрокаДокумента.СкладПолучатель) Тогда
						
						Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.СкладПолучатель);
						
					КонецЕсли;
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоСтатьиЗатрат Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.СтатьяЗатрат);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоНоменклатурныеГруппы Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.НоменклатурнаяГруппа);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоДоговоры Тогда
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.ДоговорКонтрагента);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоКонтрагенты Тогда
					
					Контрагент = Неопределено;
					
					Если ЗначениеЗаполнено(СтрокаДокумента.ДоговорКонтрагента) Тогда
						Контрагент = ПолучитьКонтрагентаИзДоговораЛок(СтрокаДокумента.ДоговорКонтрагента);
					КонецЕсли;
					
					Проводка.СубконтоДт.Вставить(ВидСубконто.ВидСубконто, Контрагент);
					
				КонецЕсли;
				
				Если Метаданные.НайтиПоТипу(ТипЗнч(Проводка.СчетДт)) = Метаданные.ПланыСчетов.Международный Тогда
					
					ЗаполнитьСубконтоПоРеквизитамЛок(ВидСубконто, Проводка.СубконтоДт, СтрокаДокумента.КорСубконтоМУ1, СтрокаДокумента.КорСубконтоМУ2, СтрокаДокумента.КорСубконтоМУ3);
					
				КонецЕсли;
				
			КонецЦикла; 
			
		КонецЕсли;
		
		// Заполняем кредит
		Если ЗначениеЗаполнено(Проводка.СчетКт) Тогда
			
			Для каждого ВидСубконто Из Проводка.СчетКт.ВидыСубконто Цикл
				
				Если ВидСубконто.ВидСубконто = ВидСубконтоНоменклатура Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.Номенклатура);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоПодразделения Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.ПодразделениеОрганизации);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоСклады Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.Склад);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоСтатьиЗатрат Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.СтатьяЗатрат);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоДоговоры Тогда
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, СтрокаДокумента.ДоговорКонтрагента);
					
				ИначеЕсли ВидСубконто.ВидСубконто = ВидСубконтоКонтрагенты Тогда
					
					Контрагент = Неопределено;
					
					Если ЗначениеЗаполнено(СтрокаДокумента.ДоговорКонтрагента) Тогда
						Контрагент = ПолучитьКонтрагентаИзДоговораЛок(СтрокаДокумента.ДоговорКонтрагента);
					КонецЕсли;
					
					Проводка.СубконтоКт.Вставить(ВидСубконто.ВидСубконто, Контрагент);
					
				КонецЕсли;
				
				Если Метаданные.НайтиПоТипу(ТипЗнч(Проводка.СчетКт)) = Метаданные.ПланыСчетов.Международный Тогда
					
					ЗаполнитьСубконтоПоРеквизитамЛок(ВидСубконто, Проводка.СубконтоКт, СтрокаДокумента.КорСубконтоМУ1, СтрокаДокумента.КорСубконтоМУ2, СтрокаДокумента.КорСубконтоМУ3, Истина);
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	Запрос = Новый Запрос;
	
	Запрос.Текст =
	//>>121115 Степанов 45757 получаем также данные из регистра сведений ПРГ_СписанныеТоварыДополнительный
	//////"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//////|	СписанныеТовары.Регистратор КАК Регистратор,
	//////|	СписанныеТовары.НомерСтроки КАК НомерСтроки,
	//////|	СписанныеТовары.Номенклатура КАК Номенклатура,
	//////|	СписанныеТовары.ХарактеристикаНоменклатуры,
	//////|	СписанныеТовары.СерияНоменклатуры,
	//////|	СписанныеТовары.НоменклатурнаяГруппа,
	//////|	СписанныеТовары.ПодразделениеОрганизации,
	//////|	СписанныеТовары.КодОперацииПартииТоваров,
	//////|	СписанныеТовары.Склад,
	//////|	СписанныеТовары.СкладПолучатель,
	//////|	СписанныеТовары.ФизЛицо,
	//////|	СписанныеТовары.НазначениеИспользования,
	//////|	СписанныеТовары.ДоговорКонтрагента,
	//////|	СписанныеТовары.ДокументПередачи,
	//////|	СписанныеТовары.ЗаказПартии,
	//////|	СписанныеТовары.ЗаказСписания,
	//////|	СписанныеТовары.Качество,
	//////|	СписанныеТовары.СписыватьТолькоПоЗаказу,
	//////|	СписанныеТовары.СтатьяЗатрат,
	//////|	СписанныеТовары.ОсновноеСредство,
	//////|	СписанныеТовары.СчетУчетаБУ,
	//////|	СписанныеТовары.КорСчетБУ,
	//////|	СписанныеТовары.КорСубконтоБУ1,
	//////|	СписанныеТовары.КорСубконтоБУ2,
	//////|	СписанныеТовары.КорСубконтоБУ3,
	//////|	СписанныеТовары.Период КАК Период,
	//////|	ВЫБОР
	//////|		КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	//////|			ТОГДА СписанныеТовары.ДокументПартии
	//////|		КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.Реализация)
	//////|			ТОГДА СписанныеТовары.Регистратор
	//////|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	//////|	КОНЕЦ КАК ДокументПартии,
	//////|	СписанныеТовары.ДокументОприходованияНовый,
	//////|	СписанныеТовары.НоменклатураНовая,
	//////|	СписанныеТовары.ХарактеристикаНоменклатурыНовая,
	//////|	СписанныеТовары.СерияНоменклатурыНовая,
	//////|	СписанныеТовары.КачествоНовое,
	//////|	СписанныеТовары.КоличествоПоступление
	//////|ПОМЕСТИТЬ втСписанныеТовары
	//////|ИЗ
	//////|	РегистрСведений.СписанныеТовары КАК СписанныеТовары
	//////|ГДЕ
	//////|	СписанныеТовары.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	////////|	И СписанныеТовары.Номенклатура.Код = ""501516      ""
	//////|
	//////|ИНДЕКСИРОВАТЬ ПО
	//////|	Регистратор,
	//////|	НомерСтроки,
	//////|	Номенклатура
	//////|;
	
	
	//>>010316 Степанов б/н партии с операцими по сторно возвратов тоже надо обработать
	////////////////////"ВЫБРАТЬ
	////////////////////|	ВложенныйЗапрос.Регистратор КАК Регистратор,
	////////////////////|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	////////////////////|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	////////////////////|	ВложенныйЗапрос.ХарактеристикаНоменклатуры,
	////////////////////|	ВложенныйЗапрос.СерияНоменклатуры,
	////////////////////|	ВложенныйЗапрос.НоменклатурнаяГруппа,
	////////////////////|	ВложенныйЗапрос.ПодразделениеОрганизации,
	////////////////////|	ВложенныйЗапрос.КодОперацииПартииТоваров,
	////////////////////|	ВложенныйЗапрос.Склад,
	////////////////////|	ВложенныйЗапрос.СкладПолучатель,
	////////////////////|	ВложенныйЗапрос.ФизЛицо,
	////////////////////|	ВложенныйЗапрос.НазначениеИспользования,
	////////////////////|	ВложенныйЗапрос.ДоговорКонтрагента,
	////////////////////|	ВложенныйЗапрос.ДокументПередачи,
	////////////////////|	ВложенныйЗапрос.ЗаказПартии,
	////////////////////|	ВложенныйЗапрос.ЗаказСписания,
	////////////////////|	ВложенныйЗапрос.Качество,
	////////////////////|	ВложенныйЗапрос.СписыватьТолькоПоЗаказу,
	////////////////////|	ВложенныйЗапрос.СтатьяЗатрат,
	////////////////////|	ВложенныйЗапрос.ОсновноеСредство,
	////////////////////|	ВложенныйЗапрос.СчетУчетаБУ,
	////////////////////|	ВложенныйЗапрос.КорСчетБУ,
	////////////////////|	ВложенныйЗапрос.КорСубконтоБУ1,
	////////////////////|	ВложенныйЗапрос.КорСубконтоБУ2,
	////////////////////|	ВложенныйЗапрос.КорСубконтоБУ3,
	////////////////////|	ВложенныйЗапрос.Период,
	////////////////////|	ВложенныйЗапрос.ДокументПартии,
	////////////////////|	ВложенныйЗапрос.ДокументОприходованияНовый,
	////////////////////|	ВложенныйЗапрос.НоменклатураНовая,
	////////////////////|	ВложенныйЗапрос.ХарактеристикаНоменклатурыНовая,
	////////////////////|	ВложенныйЗапрос.СерияНоменклатурыНовая,
	////////////////////|	ВложенныйЗапрос.КачествоНовое,
	////////////////////|	ВложенныйЗапрос.КоличествоПоступление
	////////////////////|ПОМЕСТИТЬ втСписанныеТовары
	////////////////////|ИЗ
	////////////////////|	(ВЫБРАТЬ
	////////////////////|		СписанныеТовары.Регистратор КАК Регистратор,
	////////////////////|		СписанныеТовары.НомерСтроки КАК НомерСтроки,
	////////////////////|		СписанныеТовары.Номенклатура КАК Номенклатура,
	////////////////////|		СписанныеТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	////////////////////|		СписанныеТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	////////////////////|		СписанныеТовары.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	////////////////////|		СписанныеТовары.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	////////////////////|		СписанныеТовары.КодОперацииПартииТоваров КАК КодОперацииПартииТоваров,
	////////////////////|		СписанныеТовары.Склад КАК Склад,
	////////////////////|		СписанныеТовары.СкладПолучатель КАК СкладПолучатель,
	////////////////////|		СписанныеТовары.ФизЛицо КАК ФизЛицо,
	////////////////////|		СписанныеТовары.НазначениеИспользования КАК НазначениеИспользования,
	////////////////////|		СписанныеТовары.ДоговорКонтрагента КАК ДоговорКонтрагента,
	////////////////////|		СписанныеТовары.ДокументПередачи КАК ДокументПередачи,
	////////////////////|		СписанныеТовары.ЗаказПартии КАК ЗаказПартии,
	////////////////////|		СписанныеТовары.ЗаказСписания КАК ЗаказСписания,
	////////////////////|		СписанныеТовары.Качество КАК Качество,
	////////////////////|		СписанныеТовары.СписыватьТолькоПоЗаказу КАК СписыватьТолькоПоЗаказу,
	////////////////////|		СписанныеТовары.СтатьяЗатрат КАК СтатьяЗатрат,
	////////////////////|		СписанныеТовары.ОсновноеСредство КАК ОсновноеСредство,
	////////////////////|		СписанныеТовары.СчетУчетаБУ КАК СчетУчетаБУ,
	////////////////////|		СписанныеТовары.КорСчетБУ КАК КорСчетБУ,
	////////////////////|		СписанныеТовары.КорСубконтоБУ1 КАК КорСубконтоБУ1,
	////////////////////|		СписанныеТовары.КорСубконтоБУ2 КАК КорСубконтоБУ2,
	////////////////////|		СписанныеТовары.КорСубконтоБУ3 КАК КорСубконтоБУ3,
	////////////////////|		СписанныеТовары.Период КАК Период,
	////////////////////|		ВЫБОР
	////////////////////|			КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	////////////////////|				ТОГДА СписанныеТовары.ДокументПартии
	////////////////////|			КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.Реализация)
	////////////////////|				ТОГДА СписанныеТовары.Регистратор
	////////////////////|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	////////////////////|		КОНЕЦ КАК ДокументПартии,
	////////////////////|		СписанныеТовары.ДокументОприходованияНовый КАК ДокументОприходованияНовый,
	////////////////////|		СписанныеТовары.НоменклатураНовая КАК НоменклатураНовая,
	////////////////////|		СписанныеТовары.ХарактеристикаНоменклатурыНовая КАК ХарактеристикаНоменклатурыНовая,
	////////////////////|		СписанныеТовары.СерияНоменклатурыНовая КАК СерияНоменклатурыНовая,
	////////////////////|		СписанныеТовары.КачествоНовое КАК КачествоНовое,
	////////////////////|		СписанныеТовары.КоличествоПоступление КАК КоличествоПоступление
	////////////////////|	ИЗ
	////////////////////|		РегистрСведений.СписанныеТовары КАК СписанныеТовары
	////////////////////|	ГДЕ
	////////////////////|		СписанныеТовары.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	////////////////////|	
	////////////////////|	ОБЪЕДИНИТЬ ВСЕ
	////////////////////|	
	////////////////////|	ВЫБРАТЬ
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.Регистратор,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.НомерСтроки,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.Номенклатура,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ХарактеристикаНоменклатуры,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.СерияНоменклатуры,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.НоменклатурнаяГруппа,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ПодразделениеОрганизации,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.КодОперацииПартииТоваров,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.Склад,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.СкладПолучатель,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ФизЛицо,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.НазначениеИспользования,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ДоговорКонтрагента,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ДокументПередачи,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ЗаказПартии,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ЗаказСписания,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.Качество,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.СписыватьТолькоПоЗаказу,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.СтатьяЗатрат,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ОсновноеСредство,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.СчетУчетаБУ,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.КорСчетБУ,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.КорСубконтоБУ1,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.КорСубконтоБУ2,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.КорСубконтоБУ3,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.Период,
	////////////////////|		ВЫБОР
	////////////////////|			КОГДА ПРГ_СписанныеТоварыДополнительный.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	////////////////////|				ТОГДА ПРГ_СписанныеТоварыДополнительный.ДокументПартии
	////////////////////|			КОГДА ПРГ_СписанныеТоварыДополнительный.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.Реализация)
	////////////////////|				ТОГДА ПРГ_СписанныеТоварыДополнительный.Регистратор
	////////////////////|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	////////////////////|		КОНЕЦ,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ДокументОприходованияНовый,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.НоменклатураНовая,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.ХарактеристикаНоменклатурыНовая,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.СерияНоменклатурыНовая,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.КачествоНовое,
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.КоличествоПоступление
	////////////////////|	ИЗ
	////////////////////|		РегистрСведений.ПРГ_СписанныеТоварыДополнительный КАК ПРГ_СписанныеТоварыДополнительный
	////////////////////|	ГДЕ
	////////////////////|		ПРГ_СписанныеТоварыДополнительный.Период МЕЖДУ &ПериодНачало И &ПериодКонец) КАК ВложенныйЗапрос
	////////////////////|
	////////////////////|ИНДЕКСИРОВАТЬ ПО
	////////////////////|	Регистратор,
	////////////////////|	НомерСтроки,
	////////////////////|	Номенклатура
	////////////////////|;
	////////////////////|
	////////////////////|////////////////////////////////////////////////////////////////////////////////
	////////////////////|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор КАК Регистратор,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура КАК Номенклатура,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Склад,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Качество,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Организация,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет,
	////////////////////|	СУММА(ПартииТоваровНаСкладахБухгалтерскийУчет.Количество) КАК Количество
	////////////////////|ПОМЕСТИТЬ втПартииНаСкладах
	////////////////////|ИЗ
	////////////////////|	РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет КАК ПартииТоваровНаСкладахБухгалтерскийУчет
	////////////////////|ГДЕ
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	////////////////////|	И ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета.Забалансовый = ЛОЖЬ
	////////////////////|	И ПартииТоваровНаСкладахБухгалтерскийУчет.Организация = &Организация
	////////////////////|	И (ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	////////////////////|			ИЛИ ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	////////////////////|				И ПартииТоваровНаСкладахБухгалтерскийУчет.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя))
	////////////////////|
	////////////////////|СГРУППИРОВАТЬ ПО
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Склад,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Качество,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.Организация,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета,
	////////////////////|	ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет
	////////////////////|
	////////////////////|ИНДЕКСИРОВАТЬ ПО
	////////////////////|	Регистратор,
	////////////////////|	НомерСтрокиСписанныхТоваров,
	////////////////////|	Номенклатура
	////////////////////|;
	////////////////////|
	////////////////////|////////////////////////////////////////////////////////////////////////////////
	////////////////////|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.Регистратор КАК Регистратор,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.Номенклатура КАК Номенклатура,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.Организация,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.ДоговорКонтрагента,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументПередачи,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументОприходования,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.СчетУчета,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.КорСчет,
	////////////////////|	СУММА(ПартииТоваровПереданныеБухгалтерскийУчет.Количество) КАК Количество
	////////////////////|ПОМЕСТИТЬ втПартииПереданные
	////////////////////|ИЗ
	////////////////////|	РегистрНакопления.ПартииТоваровПереданныеБухгалтерскийУчет КАК ПартииТоваровПереданныеБухгалтерскийУчет
	////////////////////|ГДЕ
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	////////////////////|	И ПартииТоваровПереданныеБухгалтерскийУчет.СчетУчета.Забалансовый = ЛОЖЬ
	////////////////////|	И ПартииТоваровПереданныеБухгалтерскийУчет.Организация = &Организация
	////////////////////|	И ПартииТоваровПереданныеБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	////////////////////|
	////////////////////|СГРУППИРОВАТЬ ПО
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.Регистратор,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.НомерСтрокиСписанныхТоваров,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.Номенклатура,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.Организация,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.ДоговорКонтрагента,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументПередачи,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументОприходования,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.СчетУчета,
	////////////////////|	ПартииТоваровПереданныеБухгалтерскийУчет.КорСчет
	////////////////////|
	////////////////////|ИНДЕКСИРОВАТЬ ПО
	////////////////////|	Регистратор,
	////////////////////|	НомерСтрокиСписанныхТоваров,
	////////////////////|	Номенклатура
	////////////////////|;
	////////////////////|
	////////////////////|////////////////////////////////////////////////////////////////////////////////
	////////////////////|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	////////////////////|	втСписанныеТовары.Период КАК Период,
	////////////////////|	втСписанныеТовары.Регистратор КАК Регистратор,
	////////////////////|	втСписанныеТовары.Номенклатура,
	////////////////////|	втСписанныеТовары.ХарактеристикаНоменклатуры,
	////////////////////|	втПартииНаСкладах.СерияНоменклатуры,
	////////////////////|	втСписанныеТовары.НоменклатурнаяГруппа,
	////////////////////|	втСписанныеТовары.ПодразделениеОрганизации,
	////////////////////|	втСписанныеТовары.КодОперацииПартииТоваров,
	////////////////////|	втПартииНаСкладах.Склад,
	////////////////////|	втСписанныеТовары.СкладПолучатель,
	////////////////////|	втСписанныеТовары.ФизЛицо,
	////////////////////|	втСписанныеТовары.НазначениеИспользования,
	////////////////////|	втСписанныеТовары.ДокументПередачи,
	////////////////////|	втПартииНаСкладах.ДокументОприходования,
	////////////////////|	втПартииНаСкладах.Качество,
	////////////////////|	втПартииНаСкладах.Заказ,
	////////////////////|	втПартииНаСкладах.Количество,
	////////////////////|	втПартииНаСкладах.Организация,
	////////////////////|	втСписанныеТовары.ДоговорКонтрагента,
	////////////////////|	втПартииНаСкладах.СчетУчета КАК СчетУчетаБУ,
	////////////////////|	втПартииНаСкладах.КорСчет КАК КорСчетБУ,
	////////////////////|	втСписанныеТовары.СтатьяЗатрат,
	////////////////////|	втСписанныеТовары.ОсновноеСредство,
	////////////////////|	втСписанныеТовары.КорСубконтоБУ1 КАК Субконто1,
	////////////////////|	втСписанныеТовары.КорСубконтоБУ2 КАК Субконто2,
	////////////////////|	втСписанныеТовары.КорСубконтоБУ3 КАК Субконто3,
	////////////////////|	втСписанныеТовары.ДокументПартии,
	////////////////////|	втСписанныеТовары.ДокументОприходованияНовый,
	////////////////////|	втСписанныеТовары.НоменклатураНовая,
	////////////////////|	втСписанныеТовары.ХарактеристикаНоменклатурыНовая,
	////////////////////|	втСписанныеТовары.СерияНоменклатурыНовая,
	////////////////////|	втСписанныеТовары.КачествоНовое,
	////////////////////|	втСписанныеТовары.КоличествоПоступление
	////////////////////|ИЗ
	////////////////////|	втСписанныеТовары КАК втСписанныеТовары
	////////////////////|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПартииНаСкладах КАК втПартииНаСкладах
	////////////////////|		ПО втСписанныеТовары.Регистратор = втПартииНаСкладах.Регистратор
	////////////////////|			И втСписанныеТовары.НомерСтроки = втПартииНаСкладах.НомерСтрокиСписанныхТоваров
	////////////////////|			И втСписанныеТовары.Номенклатура = втПартииНаСкладах.Номенклатура
	////////////////////|			И втСписанныеТовары.ХарактеристикаНоменклатуры = втПартииНаСкладах.ХарактеристикаНоменклатуры
	////////////////////|
	////////////////////|ОБЪЕДИНИТЬ ВСЕ
	////////////////////|
	////////////////////|ВЫБРАТЬ
	////////////////////|	втСписанныеТовары.Период,
	////////////////////|	втСписанныеТовары.Регистратор,
	////////////////////|	втСписанныеТовары.Номенклатура,
	////////////////////|	втСписанныеТовары.ХарактеристикаНоменклатуры,
	////////////////////|	втСписанныеТовары.СерияНоменклатуры,
	////////////////////|	втСписанныеТовары.НоменклатурнаяГруппа,
	////////////////////|	втСписанныеТовары.ПодразделениеОрганизации,
	////////////////////|	втСписанныеТовары.КодОперацииПартииТоваров,
	////////////////////|	втСписанныеТовары.Склад,
	////////////////////|	втСписанныеТовары.СкладПолучатель,
	////////////////////|	втСписанныеТовары.ФизЛицо,
	////////////////////|	втСписанныеТовары.НазначениеИспользования,
	////////////////////|	втПартииПереданные.ДокументПередачи,
	////////////////////|	втПартииПереданные.ДокументОприходования,
	////////////////////|	втСписанныеТовары.Качество,
	////////////////////|	&ПустойЗаказ,
	////////////////////|	втПартииПереданные.Количество,
	////////////////////|	втПартииПереданные.Организация,
	////////////////////|	втПартииПереданные.ДоговорКонтрагента,
	////////////////////|	втПартииПереданные.СчетУчета,
	////////////////////|	втПартииПереданные.КорСчет,
	////////////////////|	втСписанныеТовары.СтатьяЗатрат,
	////////////////////|	втСписанныеТовары.ОсновноеСредство,
	////////////////////|	втСписанныеТовары.КорСубконтоБУ1,
	////////////////////|	втСписанныеТовары.КорСубконтоБУ2,
	////////////////////|	втСписанныеТовары.КорСубконтоБУ3,
	////////////////////|	втСписанныеТовары.ДокументПартии,
	////////////////////|	втСписанныеТовары.ДокументОприходованияНовый,
	////////////////////|	втСписанныеТовары.НоменклатураНовая,
	////////////////////|	втСписанныеТовары.ХарактеристикаНоменклатурыНовая,
	////////////////////|	втСписанныеТовары.СерияНоменклатурыНовая,
	////////////////////|	втСписанныеТовары.КачествоНовое,
	////////////////////|	втСписанныеТовары.КоличествоПоступление
	////////////////////|ИЗ
	////////////////////|	втСписанныеТовары КАК втСписанныеТовары
	////////////////////|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПартииПереданные КАК втПартииПереданные
	////////////////////|		ПО втСписанныеТовары.Регистратор = втПартииПереданные.Регистратор
	////////////////////|			И втСписанныеТовары.НомерСтроки = втПартииПереданные.НомерСтрокиСписанныхТоваров
	////////////////////|			И втСписанныеТовары.Номенклатура = втПартииПереданные.Номенклатура
	////////////////////|			И втСписанныеТовары.ХарактеристикаНоменклатуры = втПартииПереданные.ХарактеристикаНоменклатуры
	////////////////////|
	////////////////////|УПОРЯДОЧИТЬ ПО
	////////////////////|	Период";
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Регистратор КАК Регистратор,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры,
	|	ВложенныйЗапрос.СерияНоменклатуры,
	|	ВложенныйЗапрос.НоменклатурнаяГруппа,
	|	ВложенныйЗапрос.ПодразделениеОрганизации,
	|	ВложенныйЗапрос.КодОперацииПартииТоваров,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.СкладПолучатель,
	|	ВложенныйЗапрос.ФизЛицо,
	|	ВложенныйЗапрос.НазначениеИспользования,
	|	ВложенныйЗапрос.ДоговорКонтрагента,
	|	ВложенныйЗапрос.ДокументПередачи,
	|	ВложенныйЗапрос.ЗаказПартии,
	|	ВложенныйЗапрос.ЗаказСписания,
	|	ВложенныйЗапрос.Качество,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.СписыватьТолькоПоЗаказу,
	|	ВложенныйЗапрос.СтатьяЗатрат,
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВложенныйЗапрос.СчетУчетаБУ,
	|	ВложенныйЗапрос.КорСчетБУ,
	|	ВложенныйЗапрос.КорСубконтоБУ1,
	|	ВложенныйЗапрос.КорСубконтоБУ2,
	|	ВложенныйЗапрос.КорСубконтоБУ3,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ДокументПартии,
	|	ВложенныйЗапрос.ДокументОприходованияНовый,
	|	ВложенныйЗапрос.НоменклатураНовая,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатурыНовая,
	|	ВложенныйЗапрос.СерияНоменклатурыНовая,
	|	ВложенныйЗапрос.КачествоНовое,
	|	ВложенныйЗапрос.КоличествоПоступление
	|ПОМЕСТИТЬ втСписанныеТовары
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписанныеТовары.Регистратор КАК Регистратор,
	|		СписанныеТовары.НомерСтроки КАК НомерСтроки,
	|		СписанныеТовары.Номенклатура КАК Номенклатура,
	|		СписанныеТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		СписанныеТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|		СписанныеТовары.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|		СписанныеТовары.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|		СписанныеТовары.КодОперацииПартииТоваров КАК КодОперацииПартииТоваров,
	|		СписанныеТовары.Склад КАК Склад,
	|		СписанныеТовары.СкладПолучатель КАК СкладПолучатель,
	|		СписанныеТовары.ФизЛицо КАК ФизЛицо,
	|		СписанныеТовары.НазначениеИспользования КАК НазначениеИспользования,
	|		СписанныеТовары.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		СписанныеТовары.ДокументПередачи КАК ДокументПередачи,
	|		СписанныеТовары.ЗаказПартии КАК ЗаказПартии,
	|		СписанныеТовары.ЗаказСписания КАК ЗаказСписания,
	|		СписанныеТовары.Качество КАК Качество,
	|		СписанныеТовары.Количество КАК Количество,
	|		СписанныеТовары.СписыватьТолькоПоЗаказу КАК СписыватьТолькоПоЗаказу,
	|		СписанныеТовары.СтатьяЗатрат КАК СтатьяЗатрат,
	|		СписанныеТовары.ОсновноеСредство КАК ОсновноеСредство,
	|		СписанныеТовары.СчетУчетаБУ КАК СчетУчетаБУ,
	|		СписанныеТовары.КорСчетБУ КАК КорСчетБУ,
	|		СписанныеТовары.КорСубконтоБУ1 КАК КорСубконтоБУ1,
	|		СписанныеТовары.КорСубконтоБУ2 КАК КорСубконтоБУ2,
	|		СписанныеТовары.КорСубконтоБУ3 КАК КорСубконтоБУ3,
	|		СписанныеТовары.Период КАК Период,
	|		ВЫБОР
	|			КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	|				ТОГДА СписанныеТовары.ДокументПартии
	|			КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.Реализация)
	|				ТОГДА СписанныеТовары.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументПартии,
	|		СписанныеТовары.ДокументОприходованияНовый КАК ДокументОприходованияНовый,
	|		СписанныеТовары.НоменклатураНовая КАК НоменклатураНовая,
	|		СписанныеТовары.ХарактеристикаНоменклатурыНовая КАК ХарактеристикаНоменклатурыНовая,
	|		СписанныеТовары.СерияНоменклатурыНовая КАК СерияНоменклатурыНовая,
	|		СписанныеТовары.КачествоНовое КАК КачествоНовое,
	|		СписанныеТовары.КоличествоПоступление КАК КоличествоПоступление
	|	ИЗ
	|		РегистрСведений.СписанныеТовары КАК СписанныеТовары
	|	ГДЕ
	|		СписанныеТовары.Период МЕЖДУ &ПериодНачало И &ПериодКонец
//начало изменений Ожиганов А. 15.05.2017 добавление тестового механизма 
	|"+?(мМассивТестовыхНоменклатур=Неопределено,""," И СписанныеТовары.Номенклатура в (&мМассивТестовыхНоменклатур)")+"
	|
//конец изменений 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПРГ_СписанныеТоварыДополнительный.Регистратор,
	|		ПРГ_СписанныеТоварыДополнительный.НомерСтроки,
	|		ПРГ_СписанныеТоварыДополнительный.Номенклатура,
	|		ПРГ_СписанныеТоварыДополнительный.ХарактеристикаНоменклатуры,
	|		ПРГ_СписанныеТоварыДополнительный.СерияНоменклатуры,
	|		ПРГ_СписанныеТоварыДополнительный.НоменклатурнаяГруппа,
	|		ПРГ_СписанныеТоварыДополнительный.ПодразделениеОрганизации,
	|		ПРГ_СписанныеТоварыДополнительный.КодОперацииПартииТоваров,
	|		ПРГ_СписанныеТоварыДополнительный.Склад,
	|		ПРГ_СписанныеТоварыДополнительный.СкладПолучатель,
	|		ПРГ_СписанныеТоварыДополнительный.ФизЛицо,
	|		ПРГ_СписанныеТоварыДополнительный.НазначениеИспользования,
	|		ПРГ_СписанныеТоварыДополнительный.ДоговорКонтрагента,
	|		ПРГ_СписанныеТоварыДополнительный.ДокументПередачи,
	|		ПРГ_СписанныеТоварыДополнительный.ЗаказПартии,
	|		ПРГ_СписанныеТоварыДополнительный.ЗаказСписания,
	|		ПРГ_СписанныеТоварыДополнительный.Качество,
	|		ПРГ_СписанныеТоварыДополнительный.Количество,
	|		ПРГ_СписанныеТоварыДополнительный.СписыватьТолькоПоЗаказу,
	|		ПРГ_СписанныеТоварыДополнительный.СтатьяЗатрат,
	|		ПРГ_СписанныеТоварыДополнительный.ОсновноеСредство,
	|		ПРГ_СписанныеТоварыДополнительный.СчетУчетаБУ,
	|		ПРГ_СписанныеТоварыДополнительный.КорСчетБУ,
	|		ПРГ_СписанныеТоварыДополнительный.КорСубконтоБУ1,
	|		ПРГ_СписанныеТоварыДополнительный.КорСубконтоБУ2,
	|		ПРГ_СписанныеТоварыДополнительный.КорСубконтоБУ3,
	|		ПРГ_СписанныеТоварыДополнительный.Период,
	|		ВЫБОР
	|			КОГДА ПРГ_СписанныеТоварыДополнительный.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	|				ТОГДА ПРГ_СписанныеТоварыДополнительный.ДокументПартии
	|			КОГДА ПРГ_СписанныеТоварыДополнительный.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.Реализация)
	|				ТОГДА ПРГ_СписанныеТоварыДополнительный.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		ПРГ_СписанныеТоварыДополнительный.ДокументОприходованияНовый,
	|		ПРГ_СписанныеТоварыДополнительный.НоменклатураНовая,
	|		ПРГ_СписанныеТоварыДополнительный.ХарактеристикаНоменклатурыНовая,
	|		ПРГ_СписанныеТоварыДополнительный.СерияНоменклатурыНовая,
	|		ПРГ_СписанныеТоварыДополнительный.КачествоНовое,
	|		ПРГ_СписанныеТоварыДополнительный.КоличествоПоступление
	|	ИЗ
	|		РегистрСведений.ПРГ_СписанныеТоварыДополнительный КАК ПРГ_СписанныеТоварыДополнительный
	|	ГДЕ
	|		ПРГ_СписанныеТоварыДополнительный.Период МЕЖДУ &ПериодНачало И &ПериодКонец
//начало изменений Ожиганов А. 15.05.2017 добавление тестового механизма 
	|"+?(мМассивТестовыхНоменклатур=Неопределено,""," И ПРГ_СписанныеТоварыДополнительный.Номенклатура в (&мМассивТестовыхНоменклатур)")+"
	|
//конец изменений 
	|) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Регистратор КАК Регистратор,
	|	ВложенныйЗапрос.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВложенныйЗапрос.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.ДокументОприходования КАК ДокументОприходования,
	|	ВложенныйЗапрос.Заказ КАК Заказ,
	|	ВложенныйЗапрос.Качество КАК Качество,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.СчетУчета КАК СчетУчета,
	|	ВложенныйЗапрос.КорСчет КАК КорСчет,
	|	ВложенныйЗапрос.ПризнакСторноВозвратаПокупателя КАК ПризнакСторноВозвратаПокупателя,
	|	ВложенныйЗапрос.Количество КАК Количество
	|ПОМЕСТИТЬ втПартииНаСкладах
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор КАК Регистратор,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура КАК Номенклатура,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры КАК СерияНоменклатуры,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Склад КАК Склад,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования КАК ДокументОприходования,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ КАК Заказ,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Качество КАК Качество,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Организация КАК Организация,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета КАК СчетУчета,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет КАК КорСчет,
	|		0 КАК ПризнакСторноВозвратаПокупателя,
	|		СУММА(ПартииТоваровНаСкладахБухгалтерскийУчет.Количество) КАК Количество
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет КАК ПартииТоваровНаСкладахБухгалтерскийУчет
	|	ГДЕ
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|		И ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета.Забалансовый = ЛОЖЬ
	|		И ПартииТоваровНаСкладахБухгалтерскийУчет.Организация = &Организация
	|		И (ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И НЕ ПартииТоваровНаСкладахБухгалтерскийУчет.КодОперации В (&КодыВозвратов)
	|				ИЛИ ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И ПартииТоваровНаСкладахБухгалтерскийУчет.КодОперации В (&КодыВозвратов)
	|					И ПартииТоваровНаСкладахБухгалтерскийУчет.Количество < 0
	|				ИЛИ ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И ПартииТоваровНаСкладахБухгалтерскийУчет.КодОперации В (&КодыВозвратов)
	|					И ПартииТоваровНаСкладахБухгалтерскийУчет.Количество > 0)
	|		И ПартииТоваровНаСкладахБухгалтерскийУчет.Активность
//начало изменений Ожиганов А. 15.05.2017 добавление тестового механизма 
	|"+?(мМассивТестовыхНоменклатур=Неопределено,""," И ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура в (&мМассивТестовыхНоменклатур)")+"
	|
//конец изменений 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Склад,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Качество,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Организация,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Склад,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Качество,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Организация,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет,
	|		1,
	|		СУММА(ПартииТоваровНаСкладахБухгалтерскийУчет.Количество)
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет КАК ПартииТоваровНаСкладахБухгалтерскийУчет
	|	ГДЕ
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|		И ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета.Забалансовый = ЛОЖЬ
	|		И ПартииТоваровНаСкладахБухгалтерскийУчет.Организация = &Организация
	|		И ПартииТоваровНаСкладахБухгалтерскийУчет.КодОперации В(&КодыВозвратов)
	|		И (ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И ПартииТоваровНаСкладахБухгалтерскийУчет.Количество > 0
	|				ИЛИ ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И ПартииТоваровНаСкладахБухгалтерскийУчет.Количество < 0)
	|		И ПартииТоваровНаСкладахБухгалтерскийУчет.Активность
//начало изменений Ожиганов А. 15.05.2017 добавление тестового механизма 
	|"+?(мМассивТестовыхНоменклатур=Неопределено,""," И ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура в (&мМассивТестовыхНоменклатур)")+"
	|
//конец изменений 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Склад,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Качество,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.Организация,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета,
	|		ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиСписанныхТоваров,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Регистратор КАК Регистратор,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Номенклатура КАК Номенклатура,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Организация,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДоговорКонтрагента,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументПередачи,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументОприходования,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.СчетУчета,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.КорСчет,
	|	СУММА(ПартииТоваровПереданныеБухгалтерскийУчет.Количество) КАК Количество
	|ПОМЕСТИТЬ втПартииПереданные
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеБухгалтерскийУчет КАК ПартииТоваровПереданныеБухгалтерскийУчет
	|ГДЕ
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И ПартииТоваровПереданныеБухгалтерскийУчет.СчетУчета.Забалансовый = ЛОЖЬ
	|	И ПартииТоваровПереданныеБухгалтерскийУчет.Организация = &Организация
	|	И ПартииТоваровПереданныеБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПартииТоваровПереданныеБухгалтерскийУчет.Активность
//начало изменений Ожиганов А. 15.05.2017 добавление тестового механизма 
	|"+?(мМассивТестовыхНоменклатур=Неопределено,""," И ПартииТоваровПереданныеБухгалтерскийУчет.Номенклатура в (&мМассивТестовыхНоменклатур)")+"
	|
//конец изменений 
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Регистратор,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.НомерСтрокиСписанныхТоваров,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Номенклатура,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Организация,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДоговорКонтрагента,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументПередачи,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументОприходования,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.СчетУчета,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.КорСчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиСписанныхТоваров,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втСписанныеТовары.Период КАК Период,
	|	втСписанныеТовары.Регистратор КАК Регистратор,
	|	втСписанныеТовары.Номенклатура,
	|	втСписанныеТовары.ХарактеристикаНоменклатуры,
	|	втПартииНаСкладах.СерияНоменклатуры,
	|	втСписанныеТовары.НоменклатурнаяГруппа,
	|	втСписанныеТовары.ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА втПартииНаСкладах.ПризнакСторноВозвратаПокупателя = 1
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ПРГ_СторноВозвратовПокупателейМСФО)
	|		ИНАЧЕ втСписанныеТовары.КодОперацииПартииТоваров
	|	КОНЕЦ КАК КодОперацииПартииТоваров,
	|	втПартииНаСкладах.Склад,
	|	втСписанныеТовары.СкладПолучатель,
	|	втСписанныеТовары.ФизЛицо,
	|	втСписанныеТовары.НазначениеИспользования,
	|	втСписанныеТовары.ДокументПередачи,
	|	втПартииНаСкладах.ДокументОприходования,
	|	втПартииНаСкладах.Качество,
	|	втПартииНаСкладах.Заказ,
	|	втПартииНаСкладах.Количество,
	|	втПартииНаСкладах.Организация,
	|	втСписанныеТовары.ДоговорКонтрагента,
	|	втПартииНаСкладах.СчетУчета КАК СчетУчетаБУ,
	|	втПартииНаСкладах.КорСчет КАК КорСчетБУ,
	|	втСписанныеТовары.СтатьяЗатрат,
	|	втСписанныеТовары.ОсновноеСредство,
	|	втСписанныеТовары.КорСубконтоБУ1 КАК Субконто1,
	|	втСписанныеТовары.КорСубконтоБУ2 КАК Субконто2,
	|	втСписанныеТовары.КорСубконтоБУ3 КАК Субконто3,
	|	втСписанныеТовары.ДокументПартии,
	|	втСписанныеТовары.ДокументОприходованияНовый,
	|	втСписанныеТовары.НоменклатураНовая,
	|	втСписанныеТовары.ХарактеристикаНоменклатурыНовая,
	|	втСписанныеТовары.СерияНоменклатурыНовая,
	|	втСписанныеТовары.КачествоНовое,
	|	втСписанныеТовары.КоличествоПоступление
	|ИЗ
	|	втСписанныеТовары КАК втСписанныеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПартииНаСкладах КАК втПартииНаСкладах
	|		ПО втСписанныеТовары.Регистратор = втПартииНаСкладах.Регистратор
	|			И втСписанныеТовары.НомерСтроки = втПартииНаСкладах.НомерСтрокиСписанныхТоваров
	|			И втСписанныеТовары.Номенклатура = втПартииНаСкладах.Номенклатура
	|			И втСписанныеТовары.ХарактеристикаНоменклатуры = втПартииНаСкладах.ХарактеристикаНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСписанныеТовары.Период,
	|	втСписанныеТовары.Регистратор,
	|	втСписанныеТовары.Номенклатура,
	|	втСписанныеТовары.ХарактеристикаНоменклатуры,
	|	втСписанныеТовары.СерияНоменклатуры,
	|	втСписанныеТовары.НоменклатурнаяГруппа,
	|	втСписанныеТовары.ПодразделениеОрганизации,
	|	втСписанныеТовары.КодОперацииПартииТоваров,
	|	втСписанныеТовары.Склад,
	|	втСписанныеТовары.СкладПолучатель,
	|	втСписанныеТовары.ФизЛицо,
	|	втСписанныеТовары.НазначениеИспользования,
	|	втПартииПереданные.ДокументПередачи,
	|	втПартииПереданные.ДокументОприходования,
	|	втСписанныеТовары.Качество,
	|	&ПустойЗаказ,
	|	втПартииПереданные.Количество,
	|	втПартииПереданные.Организация,
	|	втПартииПереданные.ДоговорКонтрагента,
	|	втПартииПереданные.СчетУчета,
	|	втПартииПереданные.КорСчет,
	|	втСписанныеТовары.СтатьяЗатрат,
	|	втСписанныеТовары.ОсновноеСредство,
	|	втСписанныеТовары.КорСубконтоБУ1,
	|	втСписанныеТовары.КорСубконтоБУ2,
	|	втСписанныеТовары.КорСубконтоБУ3,
	|	втСписанныеТовары.ДокументПартии,
	|	втСписанныеТовары.ДокументОприходованияНовый,
	|	втСписанныеТовары.НоменклатураНовая,
	|	втСписанныеТовары.ХарактеристикаНоменклатурыНовая,
	|	втСписанныеТовары.СерияНоменклатурыНовая,
	|	втСписанныеТовары.КачествоНовое,
	|	втСписанныеТовары.КоличествоПоступление
	|ИЗ
	|	втСписанныеТовары КАК втСписанныеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПартииПереданные КАК втПартииПереданные
	|		ПО втСписанныеТовары.Регистратор = втПартииПереданные.Регистратор
	|			И втСписанныеТовары.НомерСтроки = втПартииПереданные.НомерСтрокиСписанныхТоваров
	|			И втСписанныеТовары.Номенклатура = втПартииПереданные.Номенклатура
	|			И втСписанныеТовары.ХарактеристикаНоменклатуры = втПартииПереданные.ХарактеристикаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	// is ЯннуровВФ кон 20141008
	
	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("ПериодКонец", ПериодКонец);
	Запрос.УстановитьПараметр("ПустаяСерияНоменклатуры", Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойЗаказ", Документы.ЗаказПокупателя.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеКачество", Справочники.Качество.ПустаяСсылка());
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РезервированиеПодЗаказ", Перечисления.КодыОперацийПартииТоваров.РезервированиеПодЗаказ);
	Запрос.УстановитьПараметр("СнятиеРезерваПодЗаказ", Перечисления.КодыОперацийПартииТоваров.СнятиеРезерваПодЗаказ);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Расход);
	
	//начало изменений Ожиганов А. 15.05.2017 добавление тестового механизма 		
	Запрос.УстановитьПараметр("мМассивТестовыхНоменклатур", мМассивТестовыхНоменклатур);
	//конец изменений 
	//>>010316 Степанов б/н 
	СписокКодовОпераций = Новый Массив;
    СписокКодовОпераций.Добавить(Перечисления.КодыОперацийПартииТоваров.ВозвратОтПокупателя);
    СписокКодовОпераций.Добавить(Перечисления.КодыОперацийПартииТоваров.ВозвратОтПокупателяТекущийМесяц);
    Запрос.УстановитьПараметр("КодыВозвратов", СписокКодовОпераций);	
	//<<
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Ном = 0;
	
	// is ЯннуровВФ нач 20150216 
	//СписанныеТовары = Движения.СписанныеТовары;
	СписанныеТовары = Движения.ис_СписанныеТоварыМеждународныйУчет;
	// is ЯннуровВФ кон 20150216
	
	//AAA 20150621+
	Если ис_МеждународныйУчет.ИспользоватьНовыйРежимТрансляцииВМСФО() Тогда
		УсловияТрансляции = ОбработкаПроведения_ОпределитьПараметрыТрансляции(Результат.Выгрузить().ВыгрузитьКолонку("Период"));
		
		ОбработкаПроведения_ПодготовитьПустыеСубконто();
	КонецЕсли;
	//AAA 20150621-
	
	Пока Выборка.Следующий() Цикл
		Ном = Ном + 1;
		Движение = СписанныеТовары.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение,Выборка);
		
		Движение.НомерСтрокиДокумента = Ном;
		
		Движение.ОтражатьВМеждународномУчете = Истина;
		Движение.ОтражатьВБухгалтерскомУчете = Ложь;
		Движение.ОтражатьВНалоговомУчете = Ложь;
		Движение.ОтражатьВУправленческомУчете = Ложь;
		
		// Повтор процедуры формирования проводок в бух.учете
		// is ЯннуровВФ нач 20141008
		//Проводка.СчетКт        = Движение.СчетУчетаБУ;
		СчетКт        = Движение.СчетУчетаБУ;
		// is ЯннуровВФ кон 20141008
		
		// Не заполняем счет кредита, если дебет и кредит балансовый и забалансовый
		// is ЯннуровВФ нач 20141008
		//Если ЗначениеЗаполнено(Движение.КорСчетБУ)
		//	И Проводка.СчетКт.Забалансовый = Движение.КорСчетБУ.Забалансовый Тогда
		СчетДт    = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		Если ЗначениеЗаполнено(Движение.КорСчетБУ)
			И СчетКт.Забалансовый = Движение.КорСчетБУ.Забалансовый Тогда
			// is ЯннуровВФ кон 20141008
			
			// is ЯннуровВФ нач 20141008
			//Проводка.СчетДт    = Движение.КорСчетБУ;
			СчетДт    = Движение.КорСчетБУ;
			// is ЯннуровВФ кон 20141008
			
			// Для перемещения счет кредита не задается
		ИначеЕсли НЕ ЗначениеЗаполнено(Движение.КорСчетБУ)
			И УправлениеЗапасамиПартионныйУчет.ПолучитьНаправлениеСписанияПоКодуОперации(Движение.КодОперацииПартииТоваров) = "НаСкладах" Тогда
			
			// is ЯннуровВФ нач 20141008
			//Проводка.СчетДт    = Проводка.СчетКт;
			СчетДт    = СчетКт;
			// is ЯннуровВФ кон 20141008
			
		КонецЕсли;
		
		// Перемещение комиссионных товаров
		// is ЯннуровВФ нач 20141008
		//Если Проводка.СчетКт.Забалансовый
		Если СчетКт.Забалансовый
			// is ЯннуровВФ кон 20141008
			И (ЗначениеЗаполнено(Движение.ПринятыеКорСчетБУ)) Тогда
			
			// is ЯннуровВФ нач 20141008
			//Проводка.СчетДт    = Движение.ПринятыеКорСчетБУ;
			СчетДт    = Движение.ПринятыеКорСчетБУ;
			// is ЯннуровВФ нач 20141008
			
		КонецЕсли;
		
		//СтруктураПоискаМСФО = Новый Структура("Период, СчетБУ, Субконто1, Субконто2, Субконто3", Выборка.Период, Проводка.СчетКт, СубконтоКт1, СубконтоКт2, СубконтоКт3);
		//РезультатПоиска = ТаблицаСчетовМСФО.НайтиСтроки(СтруктураПоискаМСФО);
		//ЕСли РезультатПоиска.Количество() = 0 Тогда
		
		Субконто1 = Неопределено;
		Субконто2 = Неопределено;
		Субконто3 = Неопределено;
		// is ЯннуровВФ нач 20141008
		//Для каждого стр Из Проводка.СчетКт.ВидыСубконто Цикл
		Для каждого стр Из СчетКт.ВидыСубконто Цикл
			// is ЯннуровВФ кон 20141008
			// is ЯннуровВФ нач 20141003
			ТипСубконто = стр.ВидСубконто.ТипЗначения.Типы()[0];
			// is ЯннуровВФ кон 20141003
			Для каждого Колонка из Результат.Колонки Цикл
				// is ЯннуровВФ нач 20141003
				//Если Колонка.ТипЗначения.СодержитТип(стр.ВидСубконто.ТипЗначения.Типы()[0]) и ЗначениеЗаполнено(Выборка[Колонка.Имя]) Тогда
				//	Выполнить("Субконто" + стр.НомерСтроки + " = Выборка[Колонка.Имя]");  						
				Если ТипЗнч(Выборка[Колонка.Имя]) = ТипСубконто И ЗначениеЗаполнено(Выборка[Колонка.Имя]) Тогда 
					Если стр.НомерСтроки = 1 Тогда 
						Субконто1 = Выборка[Колонка.Имя];
					ИначеЕсли стр.НомерСтроки = 2 Тогда 
						Субконто2 = Выборка[Колонка.Имя];
					ИначеЕсли стр.НомерСтроки = 3 Тогда 
						Субконто3 = Выборка[Колонка.Имя];
					КонецЕсли;
					// is ЯннуровВФ кон 20141003
				КонецЕсли;					
			КонецЦикла;	
		КонецЦикла;	
		//-ДС 
		
		// is ЯннуровВФ нач 20141008
		//Структура = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(Проводка.СчетКт, Субконто1, Субконто2, Субконто3, Выборка.Период);
		// AAA 20150621+
		//Структура = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(СчетКт, Субконто1, Субконто2, Субконто3, Выборка.Период);
		Если ис_МеждународныйУчет.ИспользоватьНовыйРежимТрансляцииВМСФО() <> Истина Тогда
			Структура = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(СчетКт, Субконто1, Субконто2, Субконто3, Выборка.Период);
		Иначе			
			
			ОбработкаПроведения_ОптимизироватьСубконто(УсловияТрансляции,
													   СчетКт,
													   Субконто1,
													   Субконто2,
													   Субконто3,
													   Ложь);
														 
			Структура = ис_МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(СчетКт,
																		   Субконто1,
																		   Субконто2,
																		   Субконто3,
																		   НачалоДня(Выборка.Период),
																		   ,
																		   Ложь);
																		   
		КонецЕсли;
        // AAA 20150621-
		
		Движение.СчетУчетаМУ = Структура.Счет;

		Если Структура.Счет = Неопределено Тогда
			// is ЯннуровВФ нач 20141008
			//Сообщить("Не найден счет МСФО, соответствующй счету " + Проводка.СчетКт);
			//>>090316 Степанов б/н для серверного проведения
			#Если Клиент Тогда
			Сообщить("Не найден счет МСФО, соответствующй счету " + СчетКт);
		    #КонецЕсли
		    //<<090316
			// is ЯннуровВФ кон 20141008
			СписанныеТовары.Удалить(Движение);
			Продолжить;
		КонецЕсли;
			
		//СтруктураПоискаМСФО = Новый Структура("Период, СчетБУ, Субконто1, Субконто2, Субконто3", Выборка.Период, Проводка.СчетКт, СубконтоКт1, СубконтоКт2, СубконтоКт3);
		//РезультатПоиска = ТаблицаСчетовМСФО.НайтиСтроки(СтруктураПоискаМСФО);
		//ЕСли РезультатПоиска.Количество() = 0 Тогда
			
		Субконто1 = Неопределено;
		Субконто2 = Неопределено;
		Субконто3 = Неопределено;
		// is ЯннуровВФ нач 20141008
		//Для каждого стр Из Проводка.СчетДт.ВидыСубконто Цикл
		Для каждого стр Из СчетДт.ВидыСубконто Цикл
		// is ЯннуровВФ кон 20141008
			// is ЯннуровВФ нач 20141003
			ТипСубконто = стр.ВидСубконто.ТипЗначения.Типы()[0];
			// is ЯннуровВФ кон 20141003
			Для каждого Колонка из Результат.Колонки Цикл
				// is ЯннуровВФ нач 20141003
				//Если Колонка.ТипЗначения.СодержитТип(стр.ВидСубконто.ТипЗначения.Типы()[0]) и ЗначениеЗаполнено(Выборка[Колонка.Имя]) Тогда
				//	Выполнить("Субконто" + стр.НомерСтроки + " = Выборка[Колонка.Имя]");  						
				Если ТипЗнч(Выборка[Колонка.Имя]) = ТипСубконто И ЗначениеЗаполнено(Выборка[Колонка.Имя]) Тогда 
					Если стр.НомерСтроки = 1 Тогда 
						Субконто1 = Выборка[Колонка.Имя];
					ИначеЕсли стр.НомерСтроки = 2 Тогда 
						Субконто2 = Выборка[Колонка.Имя];
					ИначеЕсли стр.НомерСтроки = 3 Тогда 
						Субконто3 = Выборка[Колонка.Имя];
					КонецЕсли;
				// is ЯннуровВФ кон 20141003
				КонецЕсли;					
			КонецЦикла;	
		КонецЦикла;	
		//-ДС

		// is ЯннуровВФ нач 20141008
		//Структура = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(Проводка.СчетДт, Субконто1, Субконто2, Субконто3, Выборка.Период);
		
		//AAA 20150621+
		//Структура = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(СчетДт, Субконто1, Субконто2, Субконто3, Выборка.Период);
		
		СтруктураСубконто = Неопределено;
		Если ис_МеждународныйУчет.ИспользоватьНовыйРежимТрансляцииВМСФО() <> Истина Тогда
			Структура = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(СчетДт, Субконто1, Субконто2, Субконто3, Выборка.Период);
		Иначе
			
			СохранитьСубконто(СтруктураСубконто, Субконто1, Субконто2, Субконто3);
			
			ОбработкаПроведения_ОптимизироватьСубконто(УсловияТрансляции,
													   СчетДт,
													   Субконто1,
													   Субконто2,
													   Субконто3,
													   Истина);
													   
			Структура = ис_МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(СчетДт,
																		   Субконто1,
																		   Субконто2,
																		   Субконто3,
																		   НачалоДня(Выборка.Период),
																		   ,
																		   Истина);
																		   
		КонецЕсли;
		// AAA 20150621-

		Движение.КорСчетМУ = Структура.Счет;
		Движение.КорСубконтоМУ1 = Структура.Субконто1;
		Движение.КорСубконтоМУ2 = Структура.Субконто2;
		Движение.КорСубконтоМУ3 = Структура.Субконто3;
		ВосстановитьКорСубконто(СтруктураСубконто, Движение);

		Если Структура.Счет = Неопределено Тогда
			// is ЯннуровВФ нач 20141008
			//Сообщить("Не найден счет МСФО, соответствующй счету " + Проводка.СчетДт);
			//>>090316 Степанов б/н для серверного проведения
			#Если Клиент Тогда
			Сообщить("Не найден счет МСФО, соответствующй счету " + СчетДт);
		    #КонецЕсли
		    //<<090316
			// is ЯннуровВФ кон 20141008
			СписанныеТовары.Удалить(Движение);
			Продолжить;
		КонецЕсли;
			
	КонецЦикла;
		
	//+ДС 10.01.14
	//Меняем статью затрат по мэпингу
	Для каждого стр Из Движения.ис_СписанныеТоварыМеждународныйУчет Цикл
		Для а = 1 по 3 Цикл
			// is ЯннуровВФ нач 20141008
			//Выполнить("Если ТипЗнч(стр.КорСубконтоМУ" + а + ") = ТипЗнч(стр.СтатьяЗатрат) Тогда
			//			|		стр.СтатьяЗатрат = стр.КорСубконтоМУ" + а + ";
			//			|	КонецЕсли;");
			КорСубконто = стр["КорСубконтоМУ"+а];
			Если ТипЗнч(КорСубконто) = ТипЗнч(стр.СтатьяЗатрат) Тогда
				стр.СтатьяЗатрат = КорСубконто;
			КонецЕсли;;
			// is ЯннуровВФ кон 20141008
		КонецЦикла;
	КонецЦикла;	
	//-ДС
	
	// записываем движения регистров
	// is ЯннуровВФ нач 20150216
	//Движения.СписанныеТовары.Записать();
	//ТаблицаСписания = Движения.СписанныеТовары.Выгрузить();
	Движения.ис_СписанныеТоварыМеждународныйУчет.Записать();
	ТаблицаСписания = Движения.ис_СписанныеТоварыМеждународныйУчет.Выгрузить();
	// is ЯннуровВФ кон 20150216
	
	УправлениеЗапасамиПартионныйУчет.ДвижениеПартийТоваров(Ссылка, ТаблицаСписания,, Ложь, Ложь, Ложь, Ложь, Ложь, ПериодКонец);
	
	// is ЯннуровВФ нач 20140703
	//ЗаполнениеПродукцииВБраке();
	// is ЯннуровВФ кон 20140703
	
	// is ЯннуровВФ нач 20140801
	//ОбнулениеСуммПартий();
	// is ЯннуровВФ кон 20140801
	
КонецПроцедуры

//AAA 20150621+
Функция   ОбработкаПроведения_ОпределитьПараметрыТрансляции(МассивПериодов)
	Начало = Неопределено;
	Окончание = Неопределено;
	
	Для Каждого ПериодСписания из МассивПериодов Цикл
		Если     Начало = Неопределено
			 ИЛИ ПериодСписания < Начало Тогда
			 
			Начало = ПериодСписания;
		КонецЕсли;
		
		Если	 Окончание = Неопределено
			 ИЛИ ПериодСписания > Окончание Тогда
			 
			Окончание = ПериодСписания;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	СоответствиеСчетовБУиМСФО.Период,
	               |	СоответствиеСчетовБУиМСФО.СчетХозрасчетный КАК Счет,
	               |	ВЫБОР
	               |		КОГДА СоответствиеСчетовБУиМСФО.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийБухгалтерии.Кредит)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК Приход,
	               |	СоответствиеСчетовБУиМСФО.СубконтоХозр1 КАК Субконто1,
	               |	СоответствиеСчетовБУиМСФО.СубконтоХозр2 КАК Субконто2,
	               |	СоответствиеСчетовБУиМСФО.СубконтоХозр3 КАК Субконто3,
	               |	СоответствиеСчетовБУиМСФО.Реквизит // is ЯннуровВФ 20150730
	               |ИЗ
	               |	РегистрСведений.СоответствиеСчетовБУиМСФО КАК СоответствиеСчетовБУиМСФО
	               |ГДЕ
	               |	СоответствиеСчетовБУиМСФО.Учитывается
	               |	И СоответствиеСчетовБУиМСФО.Период МЕЖДУ &П1 И &П2";
				   
	ДопЗапрос =    "ВЫБРАТЬ
	               |	&П1 КАК Период,
	               |	СоответствиеСчетовБУиМСФО.СчетХозрасчетный КАК Счет,
	               |	ВЫБОР
	               |		КОГДА СоответствиеСчетовБУиМСФО.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийБухгалтерии.Кредит)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК Приход,
	               |	СоответствиеСчетовБУиМСФО.СубконтоХозр1 КАК Субконто1,
	               |	СоответствиеСчетовБУиМСФО.СубконтоХозр2 КАК Субконто2,
	               |	СоответствиеСчетовБУиМСФО.СубконтоХозр3 КАК Субконто3,
	               |	СоответствиеСчетовБУиМСФО.Реквизит // is ЯннуровВФ 20150730
	               |ИЗ
	               |	РегистрСведений.СоответствиеСчетовБУиМСФО.СрезПоследних(&П1, ) КАК СоответствиеСчетовБУиМСФО
	               |ГДЕ
	               |	СоответствиеСчетовБУиМСФО.Учитывается";
				   
	УсловияТрансляции = Новый Соответствие;
	
	ОбработкаПроведения_ОпределитьПараметрыТрансляции_ДляТаблицы(Запрос,
																 Начало,
																 Окончание,
																 "СоответствиеСчетовБУиМСФО",
																 ДопЗапрос,
																 УсловияТрансляции);
				   
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ДС_ИсключениеСчетов.Период,
	               |	ДС_ИсключениеСчетов.Счет,
	               |	ВЫБОР
	               |		КОГДА ДС_ИсключениеСчетов.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийБухгалтерии.Кредит)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК Приход,
	               |	ДС_ИсключениеСчетов.Субконто1,
	               |	ДС_ИсключениеСчетов.Субконто2,
	               |	ДС_ИсключениеСчетов.Субконто3,
	               |	ДС_ИсключениеСчетов.Реквизит // is ЯннуровВФ 20150730
	               |ИЗ
	               |	РегистрСведений.ДС_ИсключениеСчетов КАК ДС_ИсключениеСчетов
	               |ГДЕ
	               |	ДС_ИсключениеСчетов.Учитывается
	               |	И ДС_ИсключениеСчетов.Период МЕЖДУ &П1 И &П2";
				   
	ДопЗапрос =    "ВЫБРАТЬ
	               |	&П1 КАК Период,
	               |	ДС_ИсключениеСчетов.Счет,
	               |	ВЫБОР
	               |		КОГДА ДС_ИсключениеСчетов.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийБухгалтерии.Кредит)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК Приход,
	               |	ДС_ИсключениеСчетов.Субконто1,
	               |	ДС_ИсключениеСчетов.Субконто2,
	               |	ДС_ИсключениеСчетов.Субконто3,
	               |	ДС_ИсключениеСчетов.Реквизит // is ЯннуровВФ 20150730
	               |ИЗ
	               |	РегистрСведений.ДС_ИсключениеСчетов.СрезПоследних(&П1, ) КАК ДС_ИсключениеСчетов
	               |ГДЕ
	               |	ДС_ИсключениеСчетов.Учитывается";
				
	ОбработкаПроведения_ОпределитьПараметрыТрансляции_ДляТаблицы(Запрос,
																 Начало,
																 Окончание,
																 "ДС_ИсключениеСчетов",
																 ДопЗапрос,
																 УсловияТрансляции);
																					 
	возврат УсловияТрансляции;
КонецФункции
Функция   ОбработкаПроведения_ОпределитьПараметрыТрансляции_ДляТаблицы(Запрос,
																	   Начало,
																	   Окончание,
																	   НаименованиеТаблицы,
																	   ДопЗапрос,
																	   Соответствие_Результат)
	
	Если   ЗначениеЗаполнено(Начало)
		 И ЗначениеЗаполнено(Окончание) Тогда
		 
		Запрос.УстановитьПараметр("П1", Начало);
		Запрос.УстановитьПараметр("П2", Окончание);
								   
		Запрос.Текст = Запрос.Текст + Символы.ПС + Символы.ПС +
					   "ОБЪЕДИНИТЬ ВСЕ" +
					   Символы.ПС + Символы.ПС +
					   ДопЗапрос;
		
	ИначеЕсли ЗначениеЗаполнено(Начало) Тогда
		
		Запрос.УстановитьПараметр("П1", Начало);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
								   НаименованиеТаблицы+".Период МЕЖДУ &П1 И &П2",
								   НаименованиеТаблицы+".Период > &П1");
								   
		Запрос.Текст = Запрос.Текст + Символы.ПС + Символы.ПС +
					   "ОБЪЕДИНИТЬ ВСЕ" +
					   Символы.ПС + Символы.ПС +
					   ДопЗапрос;
			
	ИначеЕсли ЗначениеЗаполнено(Окончание) Тогда
		
		Запрос.УстановитьПараметр("П2", Окончание);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
								   НаименованиеТаблицы+".Период МЕЖДУ &П1 И &П2",
								   НаименованиеТаблицы+".Период <= &П2");
			
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
								   НаименованиеТаблицы+".Период МЕЖДУ &П1 И &П2",
								   "ИСТИНА");// Веснина 2015.07.09 было  "");
	КонецЕсли;

	Для Каждого ЗначенияНастроек из Запрос.Выполнить().Выгрузить() Цикл
		Если   ЗначениеЗаполнено(ЗначенияНастроек.Субконто1) = Ложь
			 И ЗначениеЗаполнено(ЗначенияНастроек.Субконто2) = Ложь
			 И ЗначениеЗаполнено(ЗначенияНастроек.Субконто3) = Ложь
			 И ЗначениеЗаполнено(ЗначенияНастроек.Реквизит) = Ложь Тогда // is ЯннуровВФ 20150730
			продолжить;
		КонецЕсли;
		
		Результат = Соответствие_Результат.Получить(ЗначенияНастроек.Счет);
		Если Результат = Неопределено Тогда
			Результат = Новый Структура("Субконто1Приход,Субконто2Приход,Субконто3Приход,Субконто1Расход,Субконто2Расход,Субконто3Расход",Ложь,Ложь,Ложь,Ложь,Ложь,Ложь);
		КонецЕсли;
		
		НаименованиеРеквизита = ?(ЗначенияНастроек.Приход,"Приход","Расход");
		
		Если ЗначениеЗаполнено(ЗначенияНастроек.Субконто1) 
		 Или ЗначениеЗаполнено(ЗначенияНастроек.Реквизит) Тогда  // is ЯннуровВФ 20150730
			Результат["Субконто1"+НаименованиеРеквизита] = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЗначенияНастроек.Субконто2)
		 Или ЗначениеЗаполнено(ЗначенияНастроек.Реквизит) Тогда  // is ЯннуровВФ 20150730
			Результат["Субконто2"+НаименованиеРеквизита] = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЗначенияНастроек.Субконто3)
		 Или ЗначениеЗаполнено(ЗначенияНастроек.Реквизит) Тогда  // is ЯннуровВФ 20150730
			Результат["Субконто3"+НаименованиеРеквизита] = Истина;
		КонецЕсли;
		
		Соответствие_Результат.Вставить(ЗначенияНастроек.Счет,Результат);
	КонецЦикла;
	
	возврат Соответствие_Результат;
КонецФункции
Процедура ОбработкаПроведения_ОптимизироватьСубконто(УсловияТрансляции,
													 Счет,
													 Субконто1,
													 Субконто2,
													 Субконто3,
													 Приход)
													 
	Результат = УсловияТрансляции.Получить(Счет);
	Если Результат = Неопределено Тогда
		ОбработкаПроведения_ОптимизироватьСубконто_КонвертацияЗначения(Субконто1);
		ОбработкаПроведения_ОптимизироватьСубконто_КонвертацияЗначения(Субконто2);
		ОбработкаПроведения_ОптимизироватьСубконто_КонвертацияЗначения(Субконто3);
	Иначе
		НаименованиеРеквизита = ?(Приход,"Приход","Расход");
		
		Если Результат["Субконто1"+НаименованиеРеквизита] = Ложь Тогда
			ОбработкаПроведения_ОптимизироватьСубконто_КонвертацияЗначения(Субконто1);
		КонецЕсли;
		Если Результат["Субконто2"+НаименованиеРеквизита] = Ложь Тогда
			ОбработкаПроведения_ОптимизироватьСубконто_КонвертацияЗначения(Субконто2);
		КонецЕсли;
		Если Результат["Субконто3"+НаименованиеРеквизита] = Ложь Тогда
			ОбработкаПроведения_ОптимизироватьСубконто_КонвертацияЗначения(Субконто3);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
Процедура ОбработкаПроведения_ОптимизироватьСубконто_КонвертацияЗначения(ЗначениеСубконто)
	Если ЗначениеЗаполнено(ЗначениеСубконто) Тогда
		ЗначениеСубконто = Новый(ТипЗнч(ЗначениеСубконто));
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения_ПодготовитьПустыеСубконто()
	НЗ = РегистрыСведений.ис_ПустыеСубконто.СоздатьНаборЗаписей();
	Для Каждого ПустоеЗначение из ис_МеждународныйУчет.ПолучитьСписокПустыхСубконто() Цикл
		Запись = НЗ.Добавить();
		Запись.ЗначениеПустогоСубконто = ПустоеЗначение;
	КонецЦикла;
	НЗ.Записать();
КонецПроцедуры
//AAA 20150621-

Процедура ОбработкаПроведения_(Отказ, Режим)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	Запрос = Новый Запрос;
	
	// is ЯннуровВФ нач 20141008
	//Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//			  |	СписанныеТовары.Регистратор КАК Регистратор,
	//			  |	ПартииТоваровНаСкладах.ДокументОприходования КАК ДокументОприходования,
	//			  |	ПартииТоваровНаСкладах.Номенклатура,
	//			  |	СписанныеТовары.НоменклатурнаяГруппа,
	//			  |	СписанныеТовары.ПодразделениеОрганизации,
	//			  |	СписанныеТовары.КодОперацииПартииТоваров,
	//			  |	СписанныеТовары.Склад,
	//			  |	СписанныеТовары.СкладПолучатель,
	//			  |	СписанныеТовары.ФизЛицо,
	//			  |	СписанныеТовары.НазначениеИспользования,
	//			  |	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры,
	//			  |	ПартииТоваровНаСкладах.СерияНоменклатуры,
	//			  |	ПартииТоваровНаСкладах.Качество,
	//			  |	ПартииТоваровНаСкладах.Заказ,
	//			  |	ПартииТоваровНаСкладах.Количество,
	//			  |	ПартииТоваровНаСкладах.СчетУчета КАК СчетУчетаБУ,
	//			  |	ПартииТоваровНаСкладах.Организация,
	//			  |	СписанныеТовары.Период КАК Период,
	//			  |	ПартииТоваровНаСкладах.КорСчет КАК КорСчетБУ,
	//			  |	СписанныеТовары.СтатьяЗатрат КАК СтатьяЗатрат,
	//			  |	СписанныеТовары.ОсновноеСредство КАК ОсновноеСредство,
	//			  |	СписанныеТовары.КорСубконтоБУ1 КАК Субконто1,
	//			  |	СписанныеТовары.КорСубконтоБУ2 КАК Субконто2,
	//			  |	СписанныеТовары.КорСубконтоБУ3 КАК Субконто3,
	//			  // is ЯннуровВФ нач 20140731
	//			  |	СписанныеТовары.ДокументПартии КАК ДокументПартии,
	//			  // is ЯннуровВФ кон 20140731
	//			  // is ЯннуровВФ нач 20141007
	//			  |	СписанныеТовары.ДокументОприходованияНовый,
	//			  |	СписанныеТовары.НоменклатураНовая,
	//			  |	СписанныеТовары.ХарактеристикаНоменклатурыНовая,
	//			  |	СписанныеТовары.СерияНоменклатурыНовая,
	//			  |	СписанныеТовары.КачествоНовое,
	//			  |	СписанныеТовары.КоличествоПоступление
	//			  // is ЯннуровВФ кон 20141007
	//			  |ИЗ
	//			  |	(ВЫБРАТЬ
	//			  |		СписанныеТовары.Регистратор КАК Регистратор,
	//			  |		СписанныеТовары.Номенклатура КАК Номенклатура,
	//			  |		СписанныеТовары.НоменклатурнаяГруппа,
	//			  |		СписанныеТовары.ПодразделениеОрганизации,
	//			  |		СписанныеТовары.КодОперацииПартииТоваров,
	//			  |		СписанныеТовары.Склад,
	//			  |		СписанныеТовары.СкладПолучатель,
	//			  |		СписанныеТовары.ФизЛицо,
	//			  |		СписанныеТовары.НазначениеИспользования,
	//			  |		СписанныеТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	//			  |		СписанныеТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//			  |		СписанныеТовары.ЗаказПартии КАК ЗаказПартии,
	//			  |		СписанныеТовары.ЗаказСписания КАК ЗаказСписания,
	//			  |		СписанныеТовары.Качество КАК Качество,
	//			  // is ЯннуровВФ нач 20140703 Задвоение реквизита
	//			  //|		СписанныеТовары.КодОперацииПартииТоваров КАК КодОперацииПартииТоваров,
	//			  // is ЯннуровВФ кон 20140703
	//			  |		СписанныеТовары.СписыватьТолькоПоЗаказу КАК СписыватьТолькоПоЗаказу,
	//			  |		СписанныеТовары.СтатьяЗатрат,
	//			  |		СписанныеТовары.ОсновноеСредство,
	//			  // is ЯннуровВФ нач 20140703 Доп. сравнение по счету, корсчету и номеру строки
	//			  |		СписанныеТовары.СчетУчетаБУ,
	//			  |		СписанныеТовары.КорСчетБУ,
	//			  |		СписанныеТовары.НомерСтроки,
	//			  // is ЯннуровВФ кон 20140703
	//			  |		СписанныеТовары.КорСубконтоБУ1,
	//			  |		СписанныеТовары.КорСубконтоБУ2,
	//			  |		СписанныеТовары.КорСубконтоБУ3,
	//			  |		СписанныеТовары.Период КАК Период,
	//			  // is ЯннуровВФ нач 20140731
	//			  |		ВЫБОР
	//			  |			КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	//			  |				ТОГДА СписанныеТовары.ДокументПартии
	//			  |			КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.Реализация)
	//			  |				ТОГДА СписанныеТовары.Регистратор
	//			  |			ИНАЧЕ НЕОПРЕДЕЛЕНО
	//			  |		КОНЕЦ КАК ДокументПартии,
	//			  // is ЯннуровВФ кон 20140731
	//			  // is ЯннуровВФ нач 20141007
	//			  |		СписанныеТовары.ДокументОприходованияНовый,
	//			  |		СписанныеТовары.НоменклатураНовая,
	//			  |		СписанныеТовары.ХарактеристикаНоменклатурыНовая,
	//			  |		СписанныеТовары.СерияНоменклатурыНовая,
	//			  |		СписанныеТовары.КачествоНовое,
	//			  |		СписанныеТовары.КоличествоПоступление
	//			  // is ЯннуровВФ кон 20141007
	//			  |	ИЗ
	//			  |		РегистрСведений.СписанныеТовары КАК СписанныеТовары
	//			  |	ГДЕ
	//			  |		СписанныеТовары.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	//			  |	
	//			  |	СГРУППИРОВАТЬ ПО
	//			  |		СписанныеТовары.Регистратор,
	//			  |		СписанныеТовары.Номенклатура,
	//			  |		СписанныеТовары.НоменклатурнаяГруппа,
	//			  |		СписанныеТовары.ПодразделениеОрганизации,
	//			  |		СписанныеТовары.КодОперацииПартииТоваров,
	//			  |		СписанныеТовары.СерияНоменклатуры,
	//			  |		СписанныеТовары.ХарактеристикаНоменклатуры,
	//			  |		СписанныеТовары.ЗаказПартии,
	//			  |		СписанныеТовары.ЗаказСписания,
	//			  |		СписанныеТовары.Качество,
	//			  |		СписанныеТовары.КодОперацииПартииТоваров,
	//			  |		СписанныеТовары.Склад,
	//			  |		СписанныеТовары.СкладПолучатель,
	//			  |		СписанныеТовары.ФизЛицо,
	//			  |		СписанныеТовары.НазначениеИспользования,
	//			  |		СписанныеТовары.СписыватьТолькоПоЗаказу,
	//			  |		СписанныеТовары.СтатьяЗатрат,
	//			  |		СписанныеТовары.ОсновноеСредство,
	//			  // is ЯннуровВФ нач 20140703 Доп. сравнение по счету, корсчету и номеру строки
	//			  |		СписанныеТовары.СчетУчетаБУ,
	//			  |		СписанныеТовары.КорСчетБУ,
	//			  |		СписанныеТовары.НомерСтроки,
	//			  // is ЯннуровВФ кон 20140703
	//			  |		СписанныеТовары.КорСубконтоБУ1,
	//			  |		СписанныеТовары.КорСубконтоБУ2,
	//			  |		СписанныеТовары.КорСубконтоБУ3,				  
	//			  |		СписанныеТовары.Период,
	//			  // is ЯннуровВФ нач 20140731
	//			  |		ВЫБОР
	//			  |			КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	//			  |				ТОГДА СписанныеТовары.ДокументПартии
	//			  |			КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.Реализация)
	//			  |				ТОГДА СписанныеТовары.Регистратор
	//			  |			ИНАЧЕ НЕОПРЕДЕЛЕНО
	//			  |		КОНЕЦ,
	//			  // is ЯннуровВФ кон 20140731
	//			  // is ЯннуровВФ нач 20141007
	//			  |		СписанныеТовары.ДокументОприходованияНовый,
	//			  |		СписанныеТовары.НоменклатураНовая,
	//			  |		СписанныеТовары.ХарактеристикаНоменклатурыНовая,
	//			  |		СписанныеТовары.СерияНоменклатурыНовая,
	//			  |		СписанныеТовары.КачествоНовое,
	//			  |		СписанныеТовары.КоличествоПоступление
	//			  // is ЯннуровВФ кон 20141007
	//			  |		) КАК СписанныеТовары
	//			  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор КАК Регистратор,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура КАК Номенклатура,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Склад КАК Склад,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры КАК СерияНоменклатуры,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования КАК ДокументОприходования,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ КАК Заказ,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Качество КАК Качество,
	//			  |			СУММА(ПартииТоваровНаСкладахБухгалтерскийУчет.Количество) КАК Количество,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета КАК СчетУчета,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Организация КАК Организация,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет КАК КорСчет,
	//			  // is ЯннуровВФ нач 20140703 Доп. сравнение по счету, корсчету и номеру строки
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров
	//			  // is ЯннуровВФ кон 20140703
	//			  |		ИЗ
	//			  |			РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет КАК ПартииТоваровНаСкладахБухгалтерскийУчет
	//			  |		ГДЕ
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	//			  |			И ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета.Забалансовый = ЛОЖЬ
	//			  |			И ПартииТоваровНаСкладахБухгалтерскийУчет.Организация = &Организация
	//			  // is ЯннуровВФ нач 20140731
	//			  //|			И ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = &ВидДвижения
	//			  |			И (ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	//			  |				ИЛИ ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И ПартииТоваровНаСкладахБухгалтерскийУчет.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя))
	//			  // is ЯннуровВФ кон 20140731
	//			  |		
	//			  |		СГРУППИРОВАТЬ ПО
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Склад,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Качество,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.Организация,
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет,
	//			  // is ЯннуровВФ нач 20140703 Доп. сравнение по счету, корсчету и номеру строки
	//			  |			ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров) КАК ПартииТоваровНаСкладах
	//			  // is ЯннуровВФ кон 20140703
	//			  |		ПО ПартииТоваровНаСкладах.Регистратор = СписанныеТовары.Регистратор
	//			  |			И ПартииТоваровНаСкладах.Номенклатура = СписанныеТовары.Номенклатура
	//			  |			И ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры = СписанныеТовары.ХарактеристикаНоменклатуры
	//			  // is ЯннуровВФ нач 20140703 Доп. сравнение по счету, корсчету и номеру строки
	//			  |			И ПартииТоваровНаСкладах.СчетУчета = СписанныеТовары.СчетУчетаБУ
	//			  |			И ПартииТоваровНаСкладах.КорСчет = СписанныеТовары.КорСчетБУ
	//			  |			И ПартииТоваровНаСкладах.НомерСтрокиСписанныхТоваров = СписанныеТовары.НомерСтроки
	//			  // is ЯннуровВФ кон 20140703
	//			  |			И (ПартииТоваровНаСкладах.Качество = СписанныеТовары.Качество
	//			  |				ИЛИ СписанныеТовары.Качество = &ПустоеКачество)
	//			  |			И (ВЫБОР
	//			  |				КОГДА СписанныеТовары.КодОперацииПартииТоваров <> &РезервированиеПодЗаказ
	//			  |						И СписанныеТовары.КодОперацииПартииТоваров <> &СнятиеРезерваПодЗаказ
	//			  |					ТОГДА ПартииТоваровНаСкладах.СерияНоменклатуры = СписанныеТовары.СерияНоменклатуры
	//			  |							ИЛИ ПартииТоваровНаСкладах.СерияНоменклатуры = &ПустаяСерияНоменклатуры
	//			  |				ИНАЧЕ ИСТИНА
	//			  |			КОНЕЦ)
	//			  |			И (ВЫБОР
	//			  |				КОГДА СписанныеТовары.СписыватьТолькоПоЗаказу = ИСТИНА
	//			  |					ТОГДА ВЫБОР
	//			  |							КОГДА ПартииТоваровНаСкладах.Заказ <> СписанныеТовары.ЗаказПартии
	//			  |								ТОГДА ВЫБОР
	//			  |										КОГДА (НЕ СписанныеТовары.ЗаказПартии = НЕОПРЕДЕЛЕНО)
	//			  |											ТОГДА ЛОЖЬ
	//			  |										ИНАЧЕ ПартииТоваровНаСкладах.Заказ = &ПустойЗаказ
	//			  |									КОНЕЦ
	//			  |							ИНАЧЕ ИСТИНА
	//			  |						КОНЕЦ
	//			  |				ИНАЧЕ ВЫБОР
	//			  |						КОГДА ПартииТоваровНаСкладах.Заказ <> СписанныеТовары.ЗаказПартии
	//			  |							ТОГДА ПартииТоваровНаСкладах.Заказ = &ПустойЗаказ
	//			  |						ИНАЧЕ ИСТИНА
	//			  |					КОНЕЦ
	//			  |			КОНЕЦ)
	//			  |			И (СписанныеТовары.СерияНоменклатуры = ПартииТоваровНаСкладах.СерияНоменклатуры
	//			  |				ИЛИ ПартииТоваровНаСкладах.СерияНоменклатуры = &ПустаяСерияНоменклатуры)
	//			  |
	//			  |УПОРЯДОЧИТЬ ПО
	//			  |	Период";
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписанныеТовары.Регистратор КАК Регистратор,
	|	СписанныеТовары.НомерСтроки КАК НомерСтроки,
	|	СписанныеТовары.Номенклатура КАК Номенклатура,
	|	СписанныеТовары.ХарактеристикаНоменклатуры,
	|	СписанныеТовары.СерияНоменклатуры,
	|	СписанныеТовары.НоменклатурнаяГруппа,
	|	СписанныеТовары.ПодразделениеОрганизации,
	|	СписанныеТовары.КодОперацииПартииТоваров,
	|	СписанныеТовары.Склад,
	|	СписанныеТовары.СкладПолучатель,
	|	СписанныеТовары.ФизЛицо,
	|	СписанныеТовары.НазначениеИспользования,
	|	СписанныеТовары.ДоговорКонтрагента,
	|	СписанныеТовары.ДокументПередачи,
	|	СписанныеТовары.ЗаказПартии,
	|	СписанныеТовары.ЗаказСписания,
	|	СписанныеТовары.Качество,
	|	СписанныеТовары.СписыватьТолькоПоЗаказу,
	|	СписанныеТовары.СтатьяЗатрат,
	|	СписанныеТовары.ОсновноеСредство,
	|	СписанныеТовары.СчетУчетаБУ,
	|	СписанныеТовары.КорСчетБУ,
	|	СписанныеТовары.КорСубконтоБУ1,
	|	СписанныеТовары.КорСубконтоБУ2,
	|	СписанныеТовары.КорСубконтоБУ3,
	|	СписанныеТовары.Период КАК Период,
	|	ВЫБОР
	|		КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	|			ТОГДА СписанныеТовары.ДокументПартии
	|		КОГДА СписанныеТовары.КодОперацииПартииТоваров = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.Реализация)
	|			ТОГДА СписанныеТовары.Регистратор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПартии,
	|	СписанныеТовары.ДокументОприходованияНовый,
	|	СписанныеТовары.НоменклатураНовая,
	|	СписанныеТовары.ХарактеристикаНоменклатурыНовая,
	|	СписанныеТовары.СерияНоменклатурыНовая,
	|	СписанныеТовары.КачествоНовое,
	|	СписанныеТовары.КоличествоПоступление
	|ПОМЕСТИТЬ втСписанныеТовары
	|ИЗ
	|	РегистрСведений.СписанныеТовары КАК СписанныеТовары
	|ГДЕ
	|	СписанныеТовары.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	//|	И СписанныеТовары.Номенклатура.Код = ""501516      ""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор КАК Регистратор,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура КАК Номенклатура,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Склад,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Качество,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Организация,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет,
	|	СУММА(ПартииТоваровНаСкладахБухгалтерскийУчет.Количество) КАК Количество
	|ПОМЕСТИТЬ втПартииНаСкладах
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет КАК ПартииТоваровНаСкладахБухгалтерскийУчет
	|ГДЕ
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета.Забалансовый = ЛОЖЬ
	|	И ПартииТоваровНаСкладахБухгалтерскийУчет.Организация = &Организация
	|	И (ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИЛИ ПартииТоваровНаСкладахБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И ПартииТоваровНаСкладахБухгалтерскийУчет.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Регистратор,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.НомерСтрокиСписанныхТоваров,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Номенклатура,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Склад,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Заказ,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Качество,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.Организация,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.СчетУчета,
	|	ПартииТоваровНаСкладахБухгалтерскийУчет.КорСчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиСписанныхТоваров,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Регистратор КАК Регистратор,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.НомерСтрокиСписанныхТоваров КАК НомерСтрокиСписанныхТоваров,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Номенклатура КАК Номенклатура,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Организация,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДоговорКонтрагента,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументПередачи,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументОприходования,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.СчетУчета,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.КорСчет,
	|	СУММА(ПартииТоваровПереданныеБухгалтерскийУчет.Количество) КАК Количество
	|ПОМЕСТИТЬ втПартииПереданные
	|ИЗ
	|	РегистрНакопления.ПартииТоваровПереданныеБухгалтерскийУчет КАК ПартииТоваровПереданныеБухгалтерскийУчет
	|ГДЕ
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И ПартииТоваровПереданныеБухгалтерскийУчет.СчетУчета.Забалансовый = ЛОЖЬ
	|	И ПартииТоваровПереданныеБухгалтерскийУчет.Организация = &Организация
	|	И ПартииТоваровПереданныеБухгалтерскийУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Регистратор,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.НомерСтрокиСписанныхТоваров,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Номенклатура,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.Организация,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДоговорКонтрагента,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументПередачи,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.ДокументОприходования,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.СчетУчета,
	|	ПартииТоваровПереданныеБухгалтерскийУчет.КорСчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиСписанныхТоваров,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втСписанныеТовары.Период КАК Период,
	|	втСписанныеТовары.Регистратор КАК Регистратор,
	|	втСписанныеТовары.Номенклатура,
	|	втСписанныеТовары.ХарактеристикаНоменклатуры,
	|	втПартииНаСкладах.СерияНоменклатуры,
	|	втСписанныеТовары.НоменклатурнаяГруппа,
	|	втСписанныеТовары.ПодразделениеОрганизации,
	|	втСписанныеТовары.КодОперацииПартииТоваров,
	|	втПартииНаСкладах.Склад,
	|	втСписанныеТовары.СкладПолучатель,
	|	втСписанныеТовары.ФизЛицо,
	|	втСписанныеТовары.НазначениеИспользования,
	|	втСписанныеТовары.ДокументПередачи,
	|	втПартииНаСкладах.ДокументОприходования,
	|	втПартииНаСкладах.Качество,
	|	втПартииНаСкладах.Заказ,
	|	втПартииНаСкладах.Количество,
	|	втПартииНаСкладах.Организация,
	|	втСписанныеТовары.ДоговорКонтрагента,
	|	втПартииНаСкладах.СчетУчета КАК СчетУчетаБУ,
	|	втПартииНаСкладах.КорСчет КАК КорСчетБУ,
	|	втСписанныеТовары.СтатьяЗатрат,
	|	втСписанныеТовары.ОсновноеСредство,
	|	втСписанныеТовары.КорСубконтоБУ1 КАК Субконто1,
	|	втСписанныеТовары.КорСубконтоБУ2 КАК Субконто2,
	|	втСписанныеТовары.КорСубконтоБУ3 КАК Субконто3,
	|	втСписанныеТовары.ДокументПартии,
	|	втСписанныеТовары.ДокументОприходованияНовый,
	|	втСписанныеТовары.НоменклатураНовая,
	|	втСписанныеТовары.ХарактеристикаНоменклатурыНовая,
	|	втСписанныеТовары.СерияНоменклатурыНовая,
	|	втСписанныеТовары.КачествоНовое,
	|	втСписанныеТовары.КоличествоПоступление
	|ИЗ
	|	втСписанныеТовары КАК втСписанныеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПартииНаСкладах КАК втПартииНаСкладах
	|		ПО втСписанныеТовары.Регистратор = втПартииНаСкладах.Регистратор
	|			И втСписанныеТовары.НомерСтроки = втПартииНаСкладах.НомерСтрокиСписанныхТоваров
	|			И втСписанныеТовары.Номенклатура = втПартииНаСкладах.Номенклатура
	|			И втСписанныеТовары.ХарактеристикаНоменклатуры = втПартииНаСкладах.ХарактеристикаНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСписанныеТовары.Период,
	|	втСписанныеТовары.Регистратор,
	|	втСписанныеТовары.Номенклатура,
	|	втСписанныеТовары.ХарактеристикаНоменклатуры,
	|	втСписанныеТовары.СерияНоменклатуры,
	|	втСписанныеТовары.НоменклатурнаяГруппа,
	|	втСписанныеТовары.ПодразделениеОрганизации,
	|	втСписанныеТовары.КодОперацииПартииТоваров,
	|	втСписанныеТовары.Склад,
	|	втСписанныеТовары.СкладПолучатель,
	|	втСписанныеТовары.ФизЛицо,
	|	втСписанныеТовары.НазначениеИспользования,
	|	втПартииПереданные.ДокументПередачи,
	|	втПартииПереданные.ДокументОприходования,
	|	втСписанныеТовары.Качество,
	|	&ПустойЗаказ,
	|	втПартииПереданные.Количество,
	|	втПартииПереданные.Организация,
	|	втПартииПереданные.ДоговорКонтрагента,
	|	втПартииПереданные.СчетУчета,
	|	втПартииПереданные.КорСчет,
	|	втСписанныеТовары.СтатьяЗатрат,
	|	втСписанныеТовары.ОсновноеСредство,
	|	втСписанныеТовары.КорСубконтоБУ1,
	|	втСписанныеТовары.КорСубконтоБУ2,
	|	втСписанныеТовары.КорСубконтоБУ3,
	|	втСписанныеТовары.ДокументПартии,
	|	втСписанныеТовары.ДокументОприходованияНовый,
	|	втСписанныеТовары.НоменклатураНовая,
	|	втСписанныеТовары.ХарактеристикаНоменклатурыНовая,
	|	втСписанныеТовары.СерияНоменклатурыНовая,
	|	втСписанныеТовары.КачествоНовое,
	|	втСписанныеТовары.КоличествоПоступление
	|ИЗ
	|	втСписанныеТовары КАК втСписанныеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПартииПереданные КАК втПартииПереданные
	|		ПО втСписанныеТовары.Регистратор = втПартииПереданные.Регистратор
	|			И втСписанныеТовары.НомерСтроки = втПартииПереданные.НомерСтрокиСписанныхТоваров
	|			И втСписанныеТовары.Номенклатура = втПартииПереданные.Номенклатура
	|			И втСписанныеТовары.ХарактеристикаНоменклатуры = втПартииПереданные.ХарактеристикаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	// is ЯннуровВФ кон 20141008

	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("ПериодКонец", ПериодКонец);
	Запрос.УстановитьПараметр("ПустаяСерияНоменклатуры", Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойЗаказ", Документы.ЗаказПокупателя.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеКачество", Справочники.Качество.ПустаяСсылка());
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РезервированиеПодЗаказ", Перечисления.КодыОперацийПартииТоваров.РезервированиеПодЗаказ);
	Запрос.УстановитьПараметр("СнятиеРезерваПодЗаказ", Перечисления.КодыОперацийПартииТоваров.СнятиеРезерваПодЗаказ);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Расход);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	Ном = 0;
	
	// is ЯннуровВФ нач 20141008
	//ОперацияХоз = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	//Проводка = ОперацияХоз.Добавить();
	//
	//ТаблицаСчетовМСФО = Новый ТаблицаЗначений;
	//ТаблицаСчетовМСФО.Колонки.Добавить("Период");
	//ТаблицаСчетовМСФО.Колонки.Добавить("СчетБУ");	
	//ТаблицаСчетовМСФО.Колонки.Добавить("Субконто1");
	//ТаблицаСчетовМСФО.Колонки.Добавить("Субконто2");
	//ТаблицаСчетовМСФО.Колонки.Добавить("Субконто3");	
	//ТаблицаСчетовМСФО.Колонки.Добавить("СчетМСФО");
	// is ЯннуровВФ кон 20141008
	
	// is ЯннуровВФ нач 20150216 
	//СписанныеТовары = Движения.СписанныеТовары;
	СписанныеТовары = Движения.ис_СписанныеТоварыМеждународныйУчет;
	// is ЯннуровВФ кон 20150216 
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Счет");
	ТЗ.Колонки.Добавить("Субконто1");
	ТЗ.Колонки.Добавить("Субконто2");
	ТЗ.Колонки.Добавить("Субконто3");
	ТЗ.Колонки.Добавить("Период");
	
	Пока Выборка.Следующий() Цикл
		
		Ном = Ном + 1;
		Движение = СписанныеТовары.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение,Выборка);
		
		Движение.НомерСтрокиДокумента = Ном;
		
		Движение.ОтражатьВМеждународномУчете = Истина;
	    Движение.ОтражатьВБухгалтерскомУчете = Ложь;
	    Движение.ОтражатьВНалоговомУчете = Ложь;
	    Движение.ОтражатьВУправленческомУчете = Ложь;
		
		// Повтор процедуры формирования проводок в бух.учете
		// is ЯннуровВФ нач 20141008
		//Проводка.СчетКт        = Движение.СчетУчетаБУ;
		СчетКт        = Движение.СчетУчетаБУ;
		// is ЯннуровВФ кон 20141008
		
		// Не заполняем счет кредита, если дебет и кредит балансовый и забалансовый
		// is ЯннуровВФ нач 20141008
		//Если ЗначениеЗаполнено(Движение.КорСчетБУ)
		//	И Проводка.СчетКт.Забалансовый = Движение.КорСчетБУ.Забалансовый Тогда
		СчетДт    = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		Если ЗначениеЗаполнено(Движение.КорСчетБУ)
			И СчетКт.Забалансовый = Движение.КорСчетБУ.Забалансовый Тогда
		// is ЯннуровВФ кон 20141008
			
			// is ЯннуровВФ нач 20141008
			//Проводка.СчетДт    = Движение.КорСчетБУ;
			СчетДт    = Движение.КорСчетБУ;
			// is ЯннуровВФ кон 20141008
			
			// Для перемещения счет кредита не задается
		ИначеЕсли НЕ ЗначениеЗаполнено(Движение.КорСчетБУ)
			И УправлениеЗапасамиПартионныйУчет.ПолучитьНаправлениеСписанияПоКодуОперации(Движение.КодОперацииПартииТоваров) = "НаСкладах" Тогда
			
			// is ЯннуровВФ нач 20141008
			//Проводка.СчетДт    = Проводка.СчетКт;
			СчетДт    = СчетКт;
			// is ЯннуровВФ кон 20141008
			
		КонецЕсли;
		
		// Перемещение комиссионных товаров
		// is ЯннуровВФ нач 20141008
		//Если Проводка.СчетКт.Забалансовый
		Если СчетКт.Забалансовый
		// is ЯннуровВФ кон 20141008
			И (ЗначениеЗаполнено(Движение.ПринятыеКорСчетБУ)) Тогда
			
			// is ЯннуровВФ нач 20141008
			//Проводка.СчетДт    = Движение.ПринятыеКорСчетБУ;
			СчетДт    = Движение.ПринятыеКорСчетБУ;
			// is ЯннуровВФ нач 20141008
			
		КонецЕсли;
		
		// is ЯннуровВФ нач 20141008
		//СтруктураПараметров = Новый Структура;
		//
		//ЗаполнитьСубконтоПоСписаниюТоваровЛок(Проводка, Движение, Неопределено, СтруктураПараметров);
		// is ЯннуровВФ кон 20141008
		
		// Повтор процедуры формирования проводок в бух.учете
		
		// is ЯннуровВФ нач 20141008
		//ВидыСубконтоКт = Проводка.СчетКт.ВидыСубконто;
		//
		//СубконтоКт1 = ?(ВидыСубконтоКт.Количество()>0, ВидыСубконтоКт[0].ВидСубконто, Неопределено);
		//СубконтоКт2 = ?(ВидыСубконтоКт.Количество()>1, ВидыСубконтоКт[1].ВидСубконто, Неопределено);
		//СубконтоКт3 = ?(ВидыСубконтоКт.Количество()>2, ВидыСубконтоКт[2].ВидСубконто, Неопределено);
		// is ЯннуровВФ кон 20141008
		
		//+ДС 10.01.14

		//СтруктураПоискаМСФО = Новый Структура("Период, СчетБУ, Субконто1, Субконто2, Субконто3", Выборка.Период, Проводка.СчетКт, СубконтоКт1, СубконтоКт2, СубконтоКт3);
		//РезультатПоиска = ТаблицаСчетовМСФО.НайтиСтроки(СтруктураПоискаМСФО);
		//ЕСли РезультатПоиска.Количество() = 0 Тогда
			
		Субконто1 = Неопределено;
		Субконто2 = Неопределено;
		Субконто3 = Неопределено;
		// is ЯннуровВФ нач 20141008
		//Для каждого стр Из Проводка.СчетКт.ВидыСубконто Цикл
		Для каждого стр Из СчетКт.ВидыСубконто Цикл
		// is ЯннуровВФ кон 20141008
			// is ЯннуровВФ нач 20141003
			ТипСубконто = стр.ВидСубконто.ТипЗначения.Типы()[0];
			// is ЯннуровВФ кон 20141003
			Для каждого Колонка из Результат.Колонки Цикл
				// is ЯннуровВФ нач 20141003
				//Если Колонка.ТипЗначения.СодержитТип(стр.ВидСубконто.ТипЗначения.Типы()[0]) и ЗначениеЗаполнено(Выборка[Колонка.Имя]) Тогда
				//	Выполнить("Субконто" + стр.НомерСтроки + " = Выборка[Колонка.Имя]");  						
				Если ТипЗнч(Выборка[Колонка.Имя]) = ТипСубконто И ЗначениеЗаполнено(Выборка[Колонка.Имя]) Тогда 
					Если стр.НомерСтроки = 1 Тогда 
						Субконто1 = Выборка[Колонка.Имя];
					ИначеЕсли стр.НомерСтроки = 2 Тогда 
						Субконто2 = Выборка[Колонка.Имя];
					ИначеЕсли стр.НомерСтроки = 3 Тогда 
						Субконто3 = Выборка[Колонка.Имя];
					КонецЕсли;
				// is ЯннуровВФ кон 20141003
				КонецЕсли;					
			КонецЦикла;	
		КонецЦикла;	
		//-ДС 
		
		// is ЯннуровВФ нач 20141008
		//Структура = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(Проводка.СчетКт, Субконто1, Субконто2, Субконто3, Выборка.Период);
		Структура = ис_МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(СчетКт,
																	 Субконто1,
																	 Субконто2,
																	 Субконто3,
																	 НачалоДня(Выборка.Период),
																	 ,
																	 Ложь);

		// is ЯннуровВФ кон 20141008
		// is ЯннуровВФ нач 20141008
		//СтрокаСчетаМСФО = ТаблицаСчетовМСФО.Добавить();
		//СтрокаСчетаМСФО.Период = Выборка.Период;
		//СтрокаСчетаМСФО.СчетБУ = Проводка.СчетКт;
		//СтрокаСчетаМСФО.Субконто1 = Структура.Субконто1;
		//СтрокаСчетаМСФО.Субконто2 = Структура.Субконто2;
		//СтрокаСчетаМСФО.Субконто3 = Структура.Субконто3;
		//СтрокаСчетаМСФО.СчетМСФО = Структура.Счет;
		// is ЯннуровВФ кон 20141008

		Движение.СчетУчетаМУ = Структура.Счет;
		// is ЯннуровВФ нач 20141016
		//Движение.КорСубконтоМУ1 = Структура.Субконто1;
		//Движение.КорСубконтоМУ2 = Структура.Субконто2;
		//Движение.КорСубконтоМУ3 = Структура.Субконто3;
		// is ЯннуровВФ кон 20141016

		Если Структура.Счет = Неопределено Тогда
			// is ЯннуровВФ нач 20141008
			//Сообщить("Не найден счет МСФО, соответствующй счету " + Проводка.СчетКт);
			//>>090316 Степанов б/н для серверного проведения
			#Если Клиент Тогда
			Сообщить("Не найден счет МСФО, соответствующй счету " + СчетКт);
		    #КонецЕсли
		    //<<090316
			// is ЯннуровВФ кон 20141008
			СписанныеТовары.Удалить(Движение);
			Продолжить;
		КонецЕсли;
			
		//+ДС 10.01.14
		//Иначе
		//	Движение.СчетУчетаМУ = РезультатПоиска[0].СчетМСФО;
		//	Движение.КорСубконтоМУ1 = РезультатПоиска[0].Субконто1;
		//	Движение.КорСубконтоМУ2 = РезультатПоиска[0].Субконто2;
		//	Движение.КорСубконтоМУ3 = РезультатПоиска[0].Субконто3;
		//КонецЕсли;
		//-ДС
		
		// is ЯннуровВФ нач 20141008
		//ВидыСубконтоДт = Проводка.СчетДт.ВидыСубконто;
		//
		//СубконтоДт1 = ?(ВидыСубконтоДт.Количество()>0, ВидыСубконтоДт[0].ВидСубконто, Неопределено);
		//СубконтоДт2 = ?(ВидыСубконтоДт.Количество()>1, ВидыСубконтоДт[1].ВидСубконто, Неопределено);
		//СубконтоДт3 = ?(ВидыСубконтоДт.Количество()>2, ВидыСубконтоДт[2].ВидСубконто, Неопределено);
		// is ЯннуровВФ кон 20141008
		
		//+ДС 10.01.14

		//СтруктураПоискаМСФО = Новый Структура("Период, СчетБУ, Субконто1, Субконто2, Субконто3", Выборка.Период, Проводка.СчетКт, СубконтоКт1, СубконтоКт2, СубконтоКт3);
		//РезультатПоиска = ТаблицаСчетовМСФО.НайтиСтроки(СтруктураПоискаМСФО);
		//ЕСли РезультатПоиска.Количество() = 0 Тогда
			
		Субконто1 = Неопределено;
		Субконто2 = Неопределено;
		Субконто3 = Неопределено;
		// is ЯннуровВФ нач 20141008
		//Для каждого стр Из Проводка.СчетДт.ВидыСубконто Цикл
		Для каждого стр Из СчетДт.ВидыСубконто Цикл
		// is ЯннуровВФ кон 20141008
			// is ЯннуровВФ нач 20141003
			ТипСубконто = стр.ВидСубконто.ТипЗначения.Типы()[0];
			// is ЯннуровВФ кон 20141003
			Для каждого Колонка из Результат.Колонки Цикл
				// is ЯннуровВФ нач 20141003
				//Если Колонка.ТипЗначения.СодержитТип(стр.ВидСубконто.ТипЗначения.Типы()[0]) и ЗначениеЗаполнено(Выборка[Колонка.Имя]) Тогда
				//	Выполнить("Субконто" + стр.НомерСтроки + " = Выборка[Колонка.Имя]");  						
				Если ТипЗнч(Выборка[Колонка.Имя]) = ТипСубконто И ЗначениеЗаполнено(Выборка[Колонка.Имя]) Тогда 
					Если стр.НомерСтроки = 1 Тогда 
						Субконто1 = Выборка[Колонка.Имя];
					ИначеЕсли стр.НомерСтроки = 2 Тогда 
						Субконто2 = Выборка[Колонка.Имя];
					ИначеЕсли стр.НомерСтроки = 3 Тогда 
						Субконто3 = Выборка[Колонка.Имя];
					КонецЕсли;
				// is ЯннуровВФ кон 20141003
				КонецЕсли;					
			КонецЦикла;	
		КонецЦикла;	
		//-ДС

		// is ЯннуровВФ нач 20141008
		//Структура = МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(Проводка.СчетДт, Субконто1, Субконто2, Субконто3, Выборка.Период);
		Структура = ис_МеждународныйУчет.ПреобразоватьСчетаБУвСчетМСФО(СчетДт,
																	 Субконто1,
																	 Субконто2,
																	 Субконто3,
																	 НачалоДня(Выборка.Период),
																	 ,
																	 Истина);
		// is ЯннуровВФ кон 20141008
		// is ЯннуровВФ нач 20141008
		//СтрокаСчетаМСФО = ТаблицаСчетовМСФО.Добавить();
		//СтрокаСчетаМСФО.Период = Выборка.Период;
		//СтрокаСчетаМСФО.СчетБУ = Проводка.СчетДт;
		//СтрокаСчетаМСФО.Субконто1 = Структура.Субконто1;
		//СтрокаСчетаМСФО.Субконто2 = Структура.Субконто2;
		//СтрокаСчетаМСФО.Субконто3 = Структура.Субконто3;
		//СтрокаСчетаМСФО.СчетМСФО = Структура.Счет;
		// is ЯннуровВФ кон 20141008

		Движение.КорСчетМУ = Структура.Счет;
		Движение.КорСубконтоМУ1 = Структура.Субконто1;
		Движение.КорСубконтоМУ2 = Структура.Субконто2;
		Движение.КорСубконтоМУ3 = Структура.Субконто3;

		Если Структура.Счет = Неопределено Тогда
			// is ЯннуровВФ нач 20141008
			//Сообщить("Не найден счет МСФО, соответствующй счету " + Проводка.СчетДт);
			//>>090316 Степанов б/н для серверного проведения
			#Если Клиент Тогда
			Сообщить("Не найден счет МСФО, соответствующй счету " + СчетДт);
		    #КонецЕсли
		    //<<090316
			// is ЯннуровВФ кон 20141008
			СписанныеТовары.Удалить(Движение);
			Продолжить;
		КонецЕсли;
			
		//+ДС 10.01.14
		//Иначе
		//	Движение.СчетУчетаМУ = РезультатПоиска[0].СчетМСФО;
		//	Движение.КорСубконтоМУ1 = РезультатПоиска[0].Субконто1;
		//	Движение.КорСубконтоМУ2 = РезультатПоиска[0].Субконто2;
		//	Движение.КорСубконтоМУ3 = РезультатПоиска[0].Субконто3;
		//КонецЕсли;
		//-ДС

			
		
	КонецЦикла;
		
	// is ЯннуровВФ нач 20141008
	//ОперацияХоз.Очистить();
	// is ЯннуровВФ кон 20141008
	
	//+ДС 10.01.14
	//Меняем статью затрат по мэпингу
	Для каждого стр Из Движения.СписанныеТовары Цикл
		Для а = 1 по 3 Цикл
			// is ЯннуровВФ нач 20141008
			//Выполнить("Если ТипЗнч(стр.КорСубконтоМУ" + а + ") = ТипЗнч(стр.СтатьяЗатрат) Тогда
			//			|		стр.СтатьяЗатрат = стр.КорСубконтоМУ" + а + ";
			//			|	КонецЕсли;");
			КорСубконто = стр["КорСубконтоМУ"+а];
			Если ТипЗнч(КорСубконто) = ТипЗнч(стр.СтатьяЗатрат) Тогда
				стр.СтатьяЗатрат = КорСубконто;
			КонецЕсли;;
			// is ЯннуровВФ кон 20141008
		КонецЦикла;				
	КонецЦикла;	
	//-ДС
	
	// записываем движения регистров
	// is ЯннуровВФ нач 20150216
	//Движения.СписанныеТовары.Записать();
	//ТаблицаСписания = Движения.СписанныеТовары.Выгрузить();
	Движения.ис_СписанныеТоварыМеждународныйУчет.Записать();
	ТаблицаСписания = Движения.ис_СписанныеТоварыМеждународныйУчет.Выгрузить();
	// is ЯннуровВФ кон 20150216
	
	УправлениеЗапасамиПартионныйУчет.ДвижениеПартийТоваров(Ссылка, ТаблицаСписания,, Ложь, Ложь, Ложь, Ложь, Ложь, ПериодКонец);
	
	// is ЯннуровВФ нач 20140703
	//ЗаполнениеПродукцииВБраке();
	// is ЯннуровВФ кон 20140703
	
	// is ЯннуровВФ нач 20140801
	//ОбнулениеСуммПартий();
	// is ЯннуровВФ кон 20140801
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
	//>>301115 Степанов 46464 нужно удалить корректировки по досписаниям
	#Если Клиент тогда
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаЗаписейРегистров.Ссылка
	|ИЗ
	|	Документ.КорректировкаЗаписейРегистров КАК КорректировкаЗаписейРегистров
	|ГДЕ
	|	КорректировкаЗаписейРегистров.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И КорректировкаЗаписейРегистров.ДокМСФО";
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Дата));
	Рез = Запрос.Выполнить().Выбрать();
	Пока Рез.Следующий() цикл
		Докссылка = Рез.Ссылка;
		Если Найти(Докссылка.Комментарий, "Выгружено обработкой досписания")>0 тогда
			Ответ = Вопрос("Найден документ корректировки досписания. Удалить?",РежимДиалогаВопрос.ДаНет);
			Если Ответ=КодВозвратаДиалога.Да тогда
				
				Набор = РегистрыБухгалтерии.Международный.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(Докссылка);
				Набор.Прочитать();
				Набор.Очистить();
				Набор.ОбменДанными.Загрузка = Истина;
				Набор.Записать(ИСТИНА);
				
				Набор = РегистрыНакопления.ПартииТоваровНаСкладахМеждународныйУчет.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(Докссылка);
				Набор.Прочитать();
				Набор.Очистить();
				Набор.ОбменДанными.Загрузка = Истина;
				Набор.Записать(ИСТИНА);
				
				Набор = РегистрыНакопления.ПартииТоваровПереданныеМеждународныйУчет.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(Докссылка);
				Набор.Прочитать();
				Набор.Очистить();
				Набор.ОбменДанными.Загрузка = Истина;
				Набор.Записать(ИСТИНА);
				
				Набор = РегистрыНакопления.НезавершенноеПроизводствоМеждународныйУчет.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(Докссылка);
				Набор.Прочитать();
				Набор.Очистить();
				Набор.ОбменДанными.Загрузка = Истина;
				Набор.Записать(ИСТИНА);
				
				Набор = РегистрыНакопления.ЗатратыМеждународныйУчет.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(Докссылка);
				Набор.Прочитать();
				Набор.Очистить();
				Набор.ОбменДанными.Загрузка = Истина;
				Набор.Записать(ИСТИНА);
				
				Набор = РегистрыНакопления.БракВПроизводствеМеждународныйУчет.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(Докссылка);
				Набор.Прочитать();
				Набор.Очистить();
				Набор.ОбменДанными.Загрузка = Истина;
				Набор.Записать(ИСТИНА);
				
				ДокОбъект = Докссылка.ПолучитьОбъект();
				ДокОбъект.ОбменДанными.Загрузка = Истина;
				ДокОбъект.Удалить();
				
			Иначе
				Отказ = Истина;
				Сообщить("Документ не может быть записан, так как есть корректировка досписания!",СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;
			
		Конецесли;
	КонецЦикла;	
	#КонецЕсли
	//<<301115
	
КонецПроцедуры // ПередЗаписью

// is ЯннуровВФ 20140703
Процедура ЗаполнениеПродукцииВБраке()
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БракВПроизводствеМеждународныйУчет.Период,
	|	БракВПроизводствеМеждународныйУчет.Регистратор,
	|	БракВПроизводствеМеждународныйУчет.НомерСтроки КАК НомерСтроки,
	|	БракВПроизводствеМеждународныйУчет.Активность,
	|	БракВПроизводствеМеждународныйУчет.ВидДвижения,
	|	БракВПроизводствеМеждународныйУчет.Организация,
	|	БракВПроизводствеМеждународныйУчет.Подразделение,
	|	БракВПроизводствеМеждународныйУчет.СчетУчета,
	|	БракВПроизводствеМеждународныйУчет.СтатьяЗатрат,
	|	БракВПроизводствеМеждународныйУчет.НоменклатурнаяГруппа,
	|	БракВПроизводствеМеждународныйУчет.Заказ,
	|	БракВПроизводствеМеждународныйУчет.Сумма,
	|	БракВПроизводствеМеждународныйУчет.СписаниеПартий,
	|	БракВПроизводствеМеждународныйУчет.КодОперации,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура КАК Продукция,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры КАК ХарактеристикаПродукции,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СерияНоменклатуры КАК СерияПродукции
	|ИЗ
	|	РегистрНакопления.БракВПроизводствеМеждународныйУчет КАК БракВПроизводствеМеждународныйУчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК ПартииТоваровНаСкладахМеждународныйУчет
	|		ПО БракВПроизводствеМеждународныйУчет.Регистратор = ПартииТоваровНаСкладахМеждународныйУчет.Регистратор
	|			И БракВПроизводствеМеждународныйУчет.НомерСтроки = ПартииТоваровНаСкладахМеждународныйУчет.НомерКорСтроки
	|			И БракВПроизводствеМеждународныйУчет.СчетУчета = ПартииТоваровНаСкладахМеждународныйУчет.КорСчет
	|ГДЕ
	|	БракВПроизводствеМеждународныйУчет.Регистратор = &Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|АВТОУПОРЯДОЧИВАНИЕ";
	лЗапрос.УстановитьПараметр("Регистратор", Ссылка);
	Движения.БракВПроизводствеМеждународныйУчет.Загрузить(лЗапрос.Выполнить().Выгрузить());
	Движения.БракВПроизводствеМеждународныйУчет.Записать();
	
КонецПроцедуры

// is ЯннуровВФ 20140801
Процедура ОбнулениеСуммПартий()
	
	Если ПериодКонец <> КонецМесяца(ПериодКонец) Тогда 
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписаниеМПЗМеждународный.Ссылка
	|ИЗ
	|	Документ.СписаниеМПЗМеждународный КАК СписаниеМПЗМеждународный
	|ГДЕ
	|	СписаниеМПЗМеждународный.Проведен = ИСТИНА
	|	И СписаниеМПЗМеждународный.Организация = &Организация
	|	И СписаниеМПЗМеждународный.ПериодКонец МЕЖДУ &НачалоПериода И &ОкончаниеПериода";
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодКонец));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодКонец));
	лСсылки = лЗапрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	лКодыОпераций = Новый Массив;
	лКодыОпераций.Добавить(Перечисления.КодыОперацийПартииТоваров.Реализация);
	лКодыОпераций.Добавить(Перечисления.КодыОперацийПартииТоваров.РеализацияКомиссия);
	лКодыОпераций.Добавить(Перечисления.КодыОперацийПартииТоваров.РеализацияРозница);
	лКодыОпераций.Добавить(Перечисления.КодыОперацийПартииТоваров.ВозвратОтПокупателя);
	лКодыОпераций.Добавить(Перечисления.КодыОперацийПартииТоваров.ВозвратОтПокупателяТекущийМесяц);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Период,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Регистратор,
	|	ПартииТоваровНаСкладахМеждународныйУчет.НомерСтроки КАК НомерСтроки,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Активность,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ВидДвижения,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Организация,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Склад,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Заказ,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Качество,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Количество,
	|	ВЫБОР
	|		КОГДА ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета В (ЗНАЧЕНИЕ(ПланСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки), ЗНАЧЕНИЕ(ПланСчетов.Международный._ПолуфабрикатыСобственногоПроизводства))
	|			ТОГДА 0
	|		ИНАЧЕ ПартииТоваровНаСкладахМеждународныйУчет.Стоимость
	|	КОНЕЦ КАК Стоимость,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3,
	|	ПартииТоваровНаСкладахМеждународныйУчет.НомерКорСтроки,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СписаниеПартий,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КодОперации,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументДвижения,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументДвиженияПериод,
	|	ПартииТоваровНаСкладахМеждународныйУчет.НомерСтрокиСписанныхТоваров
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК ПартииТоваровНаСкладахМеждународныйУчет
	|ГДЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Регистратор = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|АВТОУПОРЯДОЧИВАНИЕ";
	лЗапрос.УстановитьПараметр("КодыОпераций", лКодыОпераций);
	Для Каждого лСсылка Из лСсылки Цикл 
		лЗапрос.УстановитьПараметр("Ссылка", лСсылка);
		лНаборЗаписей = РегистрыНакопления.ПартииТоваровНаСкладахМеждународныйУчет.СоздатьНаборЗаписей();
		лНаборЗаписей.Загрузить(лЗапрос.Выполнить().Выгрузить());
		лНаборЗаписей.Отбор.Регистратор.Установить(лСсылка);
		лНаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

// is ЯннуровВФ 20150721
Процедура СохранитьСубконто(СтруктураСубконто, Субконто1, Субконто2, Субконто3)
	
	СтруктураСубконто = Новый Структура("Субконто1, Субконто2, Субконто3", Субконто1, Субконто2, Субконто3);
	
КонецПроцедуры

// is ЯннуровВФ 20150721
Процедура ВосстановитьКорСубконто(СтруктураСубконто, Движение)
	
	Если СтруктураСубконто <> Неопределено 
	 И ЗначениеЗаполнено(Движение.КорСчетМУ) Тогда 
		Для Каждого лВидСубконто Из Движение.КорСчетМУ.ВидыСубконто Цикл 
			Если Не ЗначениеЗаполнено(Движение["КорСубконтоМУ"+лВидСубконто.НомерСтроки]) Тогда 
				лТипСубконто = ТипЗнч(Движение["КорСубконтоМУ"+лВидСубконто.НомерСтроки]);
				Для лНомерСубконто=1 По 3 Цикл 
					Если ТипЗнч(СтруктураСубконто["Субконто"+лНомерСубконто]) = лТипСубконто Тогда 
						Движение["КорСубконтоМУ"+лВидСубконто.НомерСтроки] = СтруктураСубконто["Субконто"+лНомерСубконто];
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
