
// Функция получает суммы начислений и удержаний по сотруднику предприятия
Функция ПолучитьНачисленияУдержания() Экспорт
	
	Состояние("Выполнение запроса...");
	
	Запрос = Новый Запрос;
	
	Если НачалоПериода = '00010101000000' Тогда
		Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
	Иначе
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачалоПериода));
	КонецЕсли;
	
	Если КонецПериода = '00010101000000' Тогда
		Запрос.УстановитьПараметр("ДатаКон", КонецПериода);
	Иначе
		Запрос.УстановитьПараметр("ДатаКон",КонецДня(КонецПериода));
	КонецЕсли;
	
	// Устанавливаем параметры запроса
	Запрос.УстановитьПараметр("ПериодРегистрации", 	  		НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", 	КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ВидСтроки",                  Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление);
	Запрос.УстановитьПараметр("ВозвратНалога",              Перечисления.НДФЛРасчетыСБюджетомВидСтроки.ВозвратНалога);
	Запрос.УстановитьПараметр("Расход", 					ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	Запрос.УстановитьПараметр("ЗанятостьНеУказана",		    Перечисления.ВидыЗанятостиВОрганизации.ПустаяСсылка());
	
	Авансы = Новый Массив;
	Авансы.Добавить(Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца);
	Авансы.Добавить(Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс);
	
	Запрос.УстановитьПараметр("Аванс",			  Авансы);
	Запрос.УстановитьПараметр("Расчет",		      Перечисления.ХарактерВыплатыЗарплаты.Зарплата);
	Запрос.УстановитьПараметр("ХарактерНеУказан", Перечисления.ХарактерВыплатыЗарплаты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЧерезКассу",	      Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу);
	Запрос.УстановитьПараметр("ЧерезБанк",		  Перечисления.СпособыВыплатыЗарплаты.ЧерезБанк);
	Запрос.УстановитьПараметр("Общая",			  Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	Запрос.УстановитьПараметр("Дивиденды",		  Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	Запрос.УстановитьПараметр("ПустаяКатегория",  Перечисления.КатегорииДолжностейДляСтатистическогоУчета.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяДолжность",  Справочники.ДолжностиОрганизаций.ПустаяСсылка());
                                          
    МассивКодыМатвыгоды = Новый Массив;
	МассивКодыМатвыгоды.Добавить(Справочники.ДоходыНДФЛ.Код2610ПоСтавке13);
	МассивКодыМатвыгоды.Добавить(Справочники.ДоходыНДФЛ.Код2610ПоСтавке35);
	
	Запрос.УстановитьПараметр("КодыМатвыгоды",		  МассивКодыМатвыгоды);
	Запрос.УстановитьПараметр("Организация", 		  Организация);
	Запрос.УстановитьПараметр("РаботникиОрганизации", Сотрудник.Физлицо);
			
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачисленияУдержания.ВидДвижения,
	|	НачисленияУдержания.Организация,
	|	НачисленияУдержания.ПериодРегистрации КАК ПериодРегистрации,
	|	НачисленияУдержания.ФизЛицо,
	|	СУММА(НачисленияУдержания.Результат) КАК Результат,
	|	НачисленияУдержания.ОтработаноДней,
	|	НачисленияУдержания.НормаДнейПоПятидневке
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА ""ДоходыВНатуральнойФорме""
	|			ИНАЧЕ ""Начислено""
	|		КОНЕЦ КАК ВидДвижения,
	|		ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение КАК Организация,
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации КАК ПериодРегистрации,
	|		ОсновныеНачисленияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|		ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование + ВЫБОР
	|			КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|				ТОГДА """"
	|			ИНАЧЕ "" (по внутр. совмест-ву)""
	|		КОНЕЦ КАК ВидРасчета,
	|		""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Код КАК ПорядокВидаРасчета,
	|		СУММА(ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней) КАК ОтработаноДней,
	|		СУММА(ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов) КАК ОтработаноЧасов,
	|		СУММА(ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизации.ОплаченоДнейЧасов
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ОплаченоДней,
	|		СУММА(ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидУчетаВремени <> ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизации.ОплаченоДнейЧасов
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ОплаченоЧасов,
	|		СУММА(ОсновныеНачисленияРаботниковОрганизации.Результат) КАК Результат,
	|		СУММА(ОсновныеНачисленияРаботниковОрганизации.НормаДнейПоПятидневке) КАК НормаДнейПоПятидневке
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизации
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|		И ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение = &Организация
	|		И ОсновныеНачисленияРаботниковОрганизации.ФизЛицо = &РаботникиОрганизации
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА ""ДоходыВНатуральнойФорме""
	|			ИНАЧЕ ""Начислено""
	|		КОНЕЦ,
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации,
	|		ОсновныеНачисленияРаботниковОрганизации.ФизЛицо,
	|		ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование + ВЫБОР
	|			КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|				ТОГДА """"
	|			ИНАЧЕ "" (по внутр. совмест-ву)""
	|		КОНЕЦ,
	|		""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Код,
	|		ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА ""ДоходыВНатуральнойФорме""
	|			ИНАЧЕ ""Начислено""
	|		КОНЕЦ,
	|		ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение,
	|		НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации, МЕСЯЦ),
	|		ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо,
	|		ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование + ВЫБОР
	|			КОГДА ЕСТЬNULL(ДополнительныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|				ТОГДА """"
	|			ИНАЧЕ "" (по внутр. совмест-ву)""
	|		КОНЕЦ,
	|		""Б"" + ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.Код,
	|		0,
	|		0,
	|		СУММА(ВЫБОР
	|				КОГДА ДополнительныеНачисленияРаботниковОрганизации.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|					ТОГДА ДополнительныеНачисленияРаботниковОрганизации.ОплаченоДнейЧасов
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ВЫБОР
	|				КОГДА ДополнительныеНачисленияРаботниковОрганизации.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам)
	|					ТОГДА ДополнительныеНачисленияРаботниковОрганизации.ОплаченоДнейЧасов
	|				ИНАЧЕ 0
	|			КОНЕЦ),
	|		СУММА(ДополнительныеНачисленияРаботниковОрганизации.Результат),
	|		NULL
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизации
	|	ГДЕ
	|		ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|		И (НЕ ДополнительныеНачисленияРаботниковОрганизации.Результат = 0)
	|		И ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение = &Организация
	|		И ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо = &РаботникиОрганизации
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА ""ДоходыВНатуральнойФорме""
	|			ИНАЧЕ ""Начислено""
	|		КОНЕЦ,
	|		НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации, МЕСЯЦ),
	|		ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо,
	|		ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование + ВЫБОР
	|			КОГДА ЕСТЬNULL(ДополнительныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|				ТОГДА """"
	|			ИНАЧЕ "" (по внутр. совмест-ву)""
	|		КОНЕЦ,
	|		""Б"" + ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.Код,
	|		ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""ДоходыВНатуральнойФорме"",
	|		НДФЛСведенияОДоходах.ОбособленноеПодразделение,
	|		НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ),
	|		НДФЛСведенияОДоходах.ФизЛицо,
	|		""Мат. выгода по займам (кредитам)"",
	|		""Б9"",
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СУММА(НДФЛСведенияОДоходах.СуммаДохода),
	|		NULL
	|	ИЗ
	|		РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|	ГДЕ
	|		НДФЛСведенияОДоходах.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|		И НДФЛСведенияОДоходах.КодДохода В(&КодыМатвыгоды)
	|		И НДФЛСведенияОДоходах.ИсчисленоИзЗарплаты
	|		И НДФЛСведенияОДоходах.СуммаДохода <> 0
	|		И НДФЛСведенияОДоходах.ОбособленноеПодразделение = &Организация
	|		И НДФЛСведенияОДоходах.ФизЛицо = &РаботникиОрганизации
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ),
	|		НДФЛСведенияОДоходах.ФизЛицо,
	|		НДФЛСведенияОДоходах.ОбособленноеПодразделение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""Удержано"",
	|		НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|		НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ),
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = &ВозвратНалога
	|				ТОГДА ""НДФЛ возврат налога""
	|			ИНАЧЕ ""НДФЛ исчисленный ""
	|		КОНЕЦ,
	|		""Б"",
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СУММА(НДФЛРасчетыСБюджетом.Налог),
	|		NULL
	|	ИЗ
	|		РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
	|		И НДФЛРасчетыСБюджетом.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|		И НДФЛРасчетыСБюджетом.ВидСтроки В(&ВидСтроки)
	|		И НДФЛРасчетыСБюджетом.Налог <> 0
	|		И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &Организация
	|		И НДФЛРасчетыСБюджетом.ФизЛицо = &РаботникиОрганизации
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ),
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|		НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.ВидСтроки = &ВозвратНалога
	|				ТОГДА ""НДФЛ возврат налога""
	|			ИНАЧЕ ""НДФЛ исчисленный ""
	|		КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""Удержано"",
	|		ПогашениеЗаймовРаботникамиОрганизаций.Организация,
	|		НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботникамиОрганизаций.Период, МЕСЯЦ),
	|		ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо,
	|		""Погашение займа"",
	|		""В"",
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		СУММА(ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг + ПогашениеЗаймовРаботникамиОрганизаций.Проценты),
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций
	|	ГДЕ
	|		ПогашениеЗаймовРаботникамиОрганизаций.ВидДвижения = &Расход
	|		И ПогашениеЗаймовРаботникамиОрганизаций.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|		И ПогашениеЗаймовРаботникамиОрганизаций.УдержаноИзЗарплаты
	|		И ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг + ПогашениеЗаймовРаботникамиОрганизаций.Проценты <> 0
	|		И ПогашениеЗаймовРаботникамиОрганизаций.Организация = &Организация
	|		И ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо = &РаботникиОрганизации
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПогашениеЗаймовРаботникамиОрганизаций.ДоговорЗайма,
	|		НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботникамиОрганизаций.Период, МЕСЯЦ),
	|		ПогашениеЗаймовРаботникамиОрганизаций.Организация,
	|		ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо) КАК НачисленияУдержания
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияУдержания.ВидДвижения,
	|	НачисленияУдержания.Организация,
	|	НачисленияУдержания.ПериодРегистрации,
	|	НачисленияУдержания.ФизЛицо,
	|	НачисленияУдержания.ОтработаноДней,
	|	НачисленияУдержания.НормаДнейПоПятидневке
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации
	|ИТОГИ ПО
	|	ПериодРегистрации";
	
	Запрос.Текст = ТекстЗапроса;                   
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Процедура 
//
Процедура ПечатьСправка() Экспорт
	
	Если ЭтотОбъект.Модифицированность() Тогда
		Ответ = Вопрос("Печать возможна только после записи документа. Записать документ?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
		Иначе
			Возврат;
		КонецЕсли 
	КонецЕсли;
	 	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
    Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Организация не заполнена");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		Сообщить("Не выбран сотрудник");
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент.Очистить();
	
	Если ДляПособия Тогда
		МакетЗарплата = ПолучитьМакет("Макет2");
	Иначе
		МакетЗарплата = ПолучитьМакет("Макет3");
		Если Не ВыводитьНДФЛ Тогда
			МакетЗарплата.УдалитьОбласть(МакетЗарплата.Область("НДФЛ"), ТипСмещенияТабличногоДокумента.ПоВертикали);
		КонецЕсли;
	КонецЕсли;
	
	// Область реквизиты
	ОбластьРеквизиты = МакетЗарплата.ПолучитьОбласть("Реквизиты");
	ОбластьРеквизиты.Параметры.НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата), "ПолноеНаименование");
	ОбластьРеквизиты.Параметры.ИНН 				   = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата), "ИНН");
	ОбластьРеквизиты.Параметры.АдресОрганизации    = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата), "ЮридическийАдрес");
	ОбластьРеквизиты.Параметры.Телефоны		       = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата), "Телефоны");

	ТабличныйДокумент.Вывести(ОбластьРеквизиты);
	
	// Шапка справки
	ОбластьШапка = МакетЗарплата.ПолучитьОбласть("ШапкаСправки");
	
	ФИО = Сотрудник.Физлицо.Наименование;
	Если ДляПособия Тогда
		ОбластьШапка.Параметры.НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата), "ПолноеНаименование");
		УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ФИО, 3, , ФИО);
	Иначе
		ОбластьШапка.Параметры.НачалоПериода = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.КонецПериода  = Формат(КонецПериода , "ДФ=dd.MM.yyyy");
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения >= &Период
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения.Наименование
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность.Наименование
		|	КОНЕЦ КАК ДолжностьНаименование
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И Сотрудник = &Сотрудник) КАК РаботникиОрганизацийСрезПоследних";
		Запрос.УстановитьПараметр("Организация", Организация );
		Запрос.УстановитьПараметр("Сотрудник"  , Сотрудник   );
		Запрос.УстановитьПараметр("Период"     , КонецПериода);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ОбластьШапка.Параметры.Должность = Выборка.ДолжностьНаименование;
		КонецЕсли;
	КонецЕсли;
    ОбластьШапка.Параметры.Сотрудник = ФИО;
	
	ЧислоМесяцев = РассчитатьЧислоМесяцев();
	Если ДляПособия Тогда
		ОбластьШапка.Параметры.КоличествоМесяцев = ЧислоМесяцев;
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	// Строки таблицы
	Если Не ДляПособия Тогда
		ОбластьСтрока   = МакетЗарплата.ПолучитьОбласть("СтрокаТаблицы");
		СтрокаПараметры = ОбластьСтрока.Параметры;
	КонецЕсли;
	
	ИтогоЗарплата 	  = 0;
	ИтогоНДФЛ         = 0;
	КолДнейЧасов	  = 0;
	КолДнейЧасовНорма = 0;
	
	ИтогоПодоходныйНалог = 0;
	ЧислоМесяцевСтрока   = 0;
	
	Для Каждого СтрНачислений Из НачисленияЗаПериод Цикл
		
		Если ДляПособия Тогда
			
			ИтогоЗарплата 	  = ИтогоЗарплата     + СтрНачислений.Сумма;
			КолДнейЧасов      = КолДнейЧасов      + СтрНачислений.ОтработаноДней;
			КолДнейЧасовНорма = КолДнейЧасовНорма + СтрНачислений.НормаДней;
			
		Иначе
			
			СтрокаПараметры.Месяц            = Формат(СтрНачислений.Месяц, "ДФ='MMMM yyyy'");
			СтрокаПараметры.Отработано       = СтрНачислений.Отработано;
			СтрокаПараметры.ЗарплатаИПособия = СтрНачислений.ЗарплатаИПособия;
			СтрокаПараметры.Премии           = СтрНачислений.Премии;
			СтрокаПараметры.Вознаграждения   = СтрНачислений.Вознаграждения;
			СтрокаПараметры.ДругиеВыплаты    = СтрНачислений.ДругиеВыплаты;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			КолДнейЧасов  = КолДнейЧасов  + СтрНачислений.ОтработаноДней;
			
			ИтогоЗарплата = ИтогоЗарплата + СтрНачислений.ЗарплатаИПособия
			                              + СтрНачислений.Премии
			                              + СтрНачислений.Вознаграждения
			                              + СтрНачислений.ДругиеВыплаты;
			
			ИтогоНДФЛ     = ИтогоНДФЛ     + СтрНачислений.НДФЛ;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Итоговые суммы
	ОбластьСуммы = МакетЗарплата.ПолучитьОбласть("Суммы");
	
	ФормСтрока  = "Л = ru_RU; ДП = Ложь";
	ПарПредмета = "рубль,рубля,рублей,м,копейка,копейки,копеек,м,2";
	
	Если ДляПособия Тогда
		
		СреднеДневнойЗаработок = Окр(?(КолДнейЧасов = 0, 0, ИтогоЗарплата / КолДнейЧасов), 2); 
	    
		КолДнейЧасовНорма = ?(ЧислоМесяцев = 0, 0, Окр(КолДнейЧасовНорма / ЧислоМесяцев, 7));
		СредняяЗарплата   = ?(КолДнейЧасов = 0 , 0, Формат(СреднеДневнойЗаработок * КолДнейЧасовНорма, "ЧДЦ=2"));
		
		Если СредняяЗарплата <> "" Тогда 
			ПрописьЧисла = ЧислоПрописью(СредняяЗарплата, ФормСтрока, ПарПредмета);
		КонецЕсли;
		
		ОбластьСуммы.Параметры.СуммаЗаработка		  = "" + Цел(СредняяЗарплата) + " руб. " + (СредняяЗарплата - Цел(СредняяЗарплата)) * 100 + " коп."; 
		ОбластьСуммы.Параметры.СуммаЗаработкаПрописью = ПрописьЧисла;
		
	Иначе
		
		СредняяЗарплата   = ?(ЧислоМесяцев = 0 , 0, ИтогоЗарплата / ЧислоМесяцев);
		
		ОбластьСуммы.Параметры.КоличествоМесяцев = ?(ЧислоМесяцев = 0, "___", ЧислоМесяцев);
		ОбластьСуммы.Параметры.ИтогоЗарплата     = Формат(ИтогоЗарплата  , "ЧДЦ=2");
		ОбластьСуммы.Параметры.СредняяЗарплата   = Формат(СредняяЗарплата, "ЧДЦ=2");
		Если ВыводитьНДФЛ Тогда
			ОбластьСуммы.Параметры.ИтогоНДФЛ = Формат(ИтогоНДФЛ, "ЧДЦ=2");
		КонецЕсли;
		Если ИтогоЗарплата > 0 Тогда
			ОбластьСуммы.Параметры.ИтогоЗарплатаПрописью =
			ЧислоПрописью(ИтогоЗарплата, ФормСтрока, ПарПредмета);
		КонецЕсли;
		Если ИтогоЗарплата > 0 Тогда
			ОбластьСуммы.Параметры.СредняяЗарплатаПрописью =
			ЧислоПрописью(СредняяЗарплата, ФормСтрока, ПарПредмета);
		КонецЕсли;
		Если ВыводитьНДФЛ И ИтогоНДФЛ > 0 Тогда
			ОбластьСуммы.Параметры.ИтогоНДФЛ_Прописью =
			ЧислоПрописью(ИтогоНДФЛ, ФормСтрока, ПарПредмета);
		КонецЕсли;
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьСуммы);
	
	// Выводим подвал
	Подвал = МакетЗарплата.ПолучитьОбласть("Подвал");
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	Подвал.Параметры.Руководитель   = Руководители.Руководитель;
	Подвал.Параметры.ГлБухгалтер    = Руководители.ГлавныйБухгалтер;
	Если ДляПособия Тогда
		Подвал.Параметры.НомерДокумента = Номер;
	Иначе
		Подвал.Параметры.РабочаяДата = РабочаяДата;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Подвал);

	ТабличныйДокумент.ОтображатьСетку 	  = Ложь;
	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	
	ТабличныйДокумент.Показать();
	
КонецПроцедуры // ПечатьСправка()

// Процедура 
//
Процедура ПечатьРасчетСреднего() Экспорт
	
	Если ЭтотОбъект.Модифицированность() Тогда
		Ответ = Вопрос("Печать возможна только после записи документа. Записать документ?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
		Иначе
			Возврат;
		КонецЕсли 
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
    Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Организация не заполнена");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		Сообщить("Не выбран сотрудник");
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент.Очистить();
	МакетЗарплата = ПолучитьМакет("Макет");
	
	// Область реквизиты
	ОбластьРеквизиты = МакетЗарплата.ПолучитьОбласть("Шапка");
	ОбластьРеквизиты.Параметры.НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата), "ПолноеНаименование");
    ОбластьРеквизиты.Параметры.Сотрудник		   = Сотрудник;
	ОбластьРеквизиты.Параметры.ТабНомер 		   = Сотрудник.Код;
	ОбластьРеквизиты.Параметры.НачалоПериода    = НачалоПериода;
	ОбластьРеквизиты.Параметры.ОкончаниеПериода = КонецПериода;
	
	ТабличныйДокумент.Вывести(ОбластьРеквизиты);
    	
	ОбластьШапка = МакетЗарплата.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ИтогоЗарплата 	  = 0;
	КолДнейЧасов	  = 0;
	КолДнейЧасовНорма = 0;

	ИтогоПодоходныйНалог = 0;
	ЧислоМесяцевСтрока   = 0;
	
	Для Каждого СтрНачислений Из НачисленияЗаПериод Цикл
		
		// Выводим строку таблицы
		СтрокаТаблицы = МакетЗарплата.ПолучитьОбласть("СтрокаТаблицы");
		
		ИтогоЗарплата     = ИтогоЗарплата + СтрНачислений.Сумма;
		КолДнейЧасов      = КолДнейЧасов + СтрНачислений.ОтработаноДней;
		КолДнейЧасовНорма = КолДнейЧасовНорма + СтрНачислений.НормаДней;
		
		СтрокаТаблицы.Параметры.ПечатьМесяц    = Формат(СтрНачислений.Месяц, "ДФ='MMMM yyyy'");
		СтрокаТаблицы.Параметры.Сумма          = СтрНачислений.Сумма;
		СтрокаТаблицы.Параметры.ДнейЧасов      = СтрНачислений.ОтработаноДней;
		СтрокаТаблицы.Параметры.НормаДнейЧасов = СтрНачислений.НормаДней;
		
		ТабличныйДокумент.Вывести(СтрокаТаблицы);

	КонецЦикла;
	
	ИтогТаблицы = МакетЗарплата.ПолучитьОбласть("ИтогТаблицы");
	
	ИтогТаблицы.Параметры.ИтогоСумма          = ИтогоЗарплата;
	ИтогТаблицы.Параметры.ВсегоДнейОтработано = КолДнейЧасов;
	ИтогТаблицы.Параметры.ВсегоНормаДнейЧасов = КолДнейЧасовНорма;
	ИтогТаблицы.Параметры.ДоляВременни 		  = ?(КолДнейЧасовНорма = 0, 0, Формат(КолДнейЧасов / КолДнейЧасовНорма, "ЧЦ=7; ЧДЦ=6; ЧРД=.; ЧН=0")); 	
	
	ТабличныйДокумент.Вывести(ИтогТаблицы);
	
	РасчетСреднего = МакетЗарплата.ПолучитьОбласть("РасчетСреднеДневного");
	
	ЧислоМесяцев = РассчитатьЧислоМесяцев();
    СреднеМесячноеКолДней  = ?(ЧислоМесяцев = 0, 0, Окр(КолДнейЧасовНорма / ЧислоМесяцев, 7));
	СреднеДневнойЗаработок = Окр(?(КолДнейЧасов = 0, 0, ИтогоЗарплата / КолДнейЧасов), 2); 
	
	РасчетСреднего.Параметры.ИтогоСумма             	  = ИтогоЗарплата;
	РасчетСреднего.Параметры.ВсегоДнейОтработано          = КолДнейЧасов;
    РасчетСреднего.Параметры.СреднеДневнойЗаработок 	  = СреднеДневнойЗаработок; 
	РасчетСреднего.Параметры.СреднеМесячноеКоличествоДней = СреднеМесячноеКолДней ; 	
	РасчетСреднего.Параметры.СреднеМесячныйЗаработок	  = ?(КолДнейЧасов = 0, 0, Формат(СреднеДневнойЗаработок * СреднеМесячноеКолДней, "ЧДЦ=2"));
	
	ТабличныйДокумент.Вывести(РасчетСреднего);
	
	// Выводим подвал
	Подвал = МакетЗарплата.ПолучитьОбласть("Подвал");
	//Подвал.Параметры.ПечДатаВыдачи = Формат(ДатаОтчета, "ДФ=dd.MM.yyyy");
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	Подвал.Параметры.ФИОГлБухгалтера = Руководители.ГлавныйБухгалтер;
	ТабличныйДокумент.Вывести(Подвал);

	ТабличныйДокумент.ОтображатьСетку 	  = Ложь;
	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	
	ТабличныйДокумент.Показать();
	
КонецПроцедуры // ПечатьРасчетСреднего()
      
// Функция расчитывает число месяцев за которые выводится справка
//
Функция РассчитатьЧислоМесяцев()
	
	МесяцыФормированияСправки = 0;
	
	ОбщегоНазначения.РазобратьРазностьДат(КонецПериода, НачалоПериода,, МесяцыФормированияСправки);

	Возврат ?(МесяцыФормированияСправки = 0, 1, МесяцыФормированияСправки + 1);
	
КонецФункции // РассчитатьЧислоМесяцев()

// Процедура заполняет таблицу среднедневного заработка
//
Процедура РасчитатьСреднедневнойЗаработок() Экспорт
	
	НачатьТранзакцию();
	
	мРассчитываемыеТаблицы = Новый Структура("Начисления, РасчетСреднего");

	// Создаем вспомогательный документ
	ДокОбъект = Документы.ОплатаПоСреднемуЗаработку.СоздатьДокумент();
	
	// Заполняем документ
	ДокОбъект.Сотрудник 		= Сотрудник;
	
	ДокОбъект.Дата				= НачалоМесяца(Дата);
	ДокОбъект.ПериодРегистрации = НачалоМесяца(Дата);
	ДокОбъект.Организация		= Организация;
	ДокОбъект.Физлицо			= Сотрудник.Физлицо;
	ДокОбъект.ВидРасчета		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднему;
	ДокОбъект.ПроцентОплаты		= 100;
	ДокОбъект.ДатаНачала		= НачалоДня(Дата);
	ДокОбъект.ДатаОкончания		= КонецДня(Дата);
	ДокОбъект.СпособРегистрацииВремени = Перечисления.СпособыРегистрацииВремени.РегистрацияДляЦелойСмены;
	ДокОбъект.ДатаНачалаСобытия 	   = НачалоДня(Дата);
	ДокОбъект.ПериодРасчетаСреднегоЗаработкаНачало 	  = НачалоМесяца(НачалоПериода);
	ДокОбъект.ПериодРасчетаСреднегоЗаработкаОкончание = КонецМесяца(КонецПериода);

	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	мРассчитываемыеТаблицы.Начисления     = Ложь;
	мРассчитываемыеТаблицы.РасчетСреднего = Истина;
	ДокОбъект.Рассчитать(мРассчитываемыеТаблицы);
	
	// Получаем суммы для расчета среднедневного
	ТЗРасчетСреднего = ДокОбъект.РасчетСреднего.Выгрузить(,"БазовыйПериодНачало, БазовыйПериодКонец, Результат, ОтработаноДней, ОтработаноЧасов");
	ТЗРасчетСреднего.Свернуть("БазовыйПериодНачало", "Результат, ОтработаноДней, ОтработаноЧасов");
	
	Для Каждого СтрокаСред ИЗ ТЗРасчетСреднего Цикл
		
		НовСтрокаНачисления = НачисленияЗаПериод.Добавить();
		НовСтрокаНачисления.Месяц 		 	= СтрокаСред.БазовыйПериодНачало;
		НовСтрокаНачисления.ОтработаноДней = СтрокаСред.ОтработаноДней; 
		НовСтрокаНачисления.Сумма			= СтрокаСред.Результат; 
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Месяц,
	|	ВложенныйЗапрос.ВидРасчетаБезГруппы,
	|	ВложенныйЗапрос.Отработано,
	|	ВложенныйЗапрос.ЗарплатаИПособия,
	|	ВложенныйЗапрос.Премии,
	|	ВложенныйЗапрос.Вознаграждения,
	|	ВложенныйЗапрос.ДругиеВыплаты,
	|	НДФЛРасчетыСБюджетомОбороты.НалогПриход КАК НДФЛ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Месяц КАК Месяц,
	|		ВложенныйЗапрос.ВидРасчетаБезГруппы КАК ВидРасчетаБезГруппы,
	|		СУММА(ВложенныйЗапрос.Отработано) КАК Отработано,
	|		СУММА(ВложенныйЗапрос.ЗарплатаИПособия) КАК ЗарплатаИПособия,
	|		СУММА(ВложенныйЗапрос.Премии) КАК Премии,
	|		СУММА(ВложенныйЗапрос.Вознаграждения) КАК Вознаграждения,
	|		СУММА(ВложенныйЗапрос.ДругиеВыплаты) КАК ДругиеВыплаты
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета <> ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.ПустаяСсылка)
	|					ТОГДА НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	|			КОНЕЦ КАК Месяц,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.ПустаяСсылка)
	|						ИЛИ Авт_ГруппыВидовРасчета.ГруппаРасчета ЕСТЬ NULL 
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
	|			КОНЕЦ КАК ВидРасчетаБезГруппы,
	|			ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней КАК Отработано,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.ЗарплатаИПособия)
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЗарплатаИПособия,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.Премии)
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК Премии,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.Вознаграждения)
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК Вознаграждения,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.ДругиеВыплаты)
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ДругиеВыплаты
	|		ИЗ
	|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Авт_ГруппыВидовРасчета КАК Авт_ГруппыВидовРасчета
	|				ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = Авт_ГруппыВидовРасчета.ВидРасчета
	|		ГДЕ
	|			ОсновныеНачисленияРаботниковОрганизаций.Организация = &Организация
	|			И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &Сотрудник
	|			И ОсновныеНачисленияРаботниковОрганизаций.Активность = ИСТИНА
	|			И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета <> ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.ПустаяСсылка)
	|					ТОГДА НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	|			КОНЕЦ,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.ПустаяСсылка)
	|						ИЛИ Авт_ГруппыВидовРасчета.ГруппаРасчета ЕСТЬ NULL 
	|					ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета
	|			КОНЕЦ,
	|			0,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.ЗарплатаИПособия)
	|					ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.Премии)
	|					ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.Вознаграждения)
	|					ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ,
	|			ВЫБОР
	|				КОГДА Авт_ГруппыВидовРасчета.ГруппаРасчета = ЗНАЧЕНИЕ(Перечисление.Авт_ГруппыВидовРасчета.ДругиеВыплаты)
	|					ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|		ИЗ
	|			РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Авт_ГруппыВидовРасчета КАК Авт_ГруппыВидовРасчета
	|				ПО ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета = Авт_ГруппыВидовРасчета.ВидРасчета
	|		ГДЕ
	|			ДополнительныеНачисленияРаботниковОрганизаций.Организация = &Организация
	|			И ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник = &Сотрудник
	|			И ДополнительныеНачисленияРаботниковОрганизаций.Активность = ИСТИНА
	|			И ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Месяц,
	|		ВложенныйЗапрос.ВидРасчетаБезГруппы) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛРасчетыСБюджетом.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Месяц,
	|				Организация = &Организация
	|					И ФизЛицо = ВЫРАЗИТЬ(&Сотрудник КАК Справочник.СотрудникиОрганизаций).Физлицо) КАК НДФЛРасчетыСБюджетомОбороты
	|		ПО ВложенныйЗапрос.Месяц = НДФЛРасчетыСБюджетомОбороты.Период";
	
	Запрос.УстановитьПараметр("Организация"  , Организация  );
	Запрос.УстановитьПараметр("Сотрудник"    , Сотрудник    );
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода" , КонецПериода );
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Месяц <> Null Тогда
			нов =НачисленияЗаПериод.Найти(Выборка.Месяц, "Месяц");
			Если не нов=Неопределено тогда
				ЗаполнитьЗначенияСвойств(нов, Выборка);
			КонецЕсли;	
		Иначе
			Сообщить("Для вида расчта (" + ТипЗнч(Выборка.ВидРасчетаБезГруппы) + ") не указа группа: " + Выборка.ВидРасчетаБезГруппы);
		КонецЕсли;
	КонецЦикла;
	
	ОтменитьТранзакцию();
	
КонецПроцедуры // РасчитатьСреднедневнойЗаработок()
