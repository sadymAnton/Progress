

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура;
	СтруктураПечатныхФорм.Вставить("Приказ",	"Приказ");
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Приказ" Тогда
		ТабДокумент = ПечатьПриказа(ИмяМакета);
		
	КонецЕсли;

	Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,"Работа в сверхурочные часы "));

КонецФункции // Печать()

// Функция формирует табличный документ с печатной формой "Приказ о смене фамилии",
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриказа(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	Макет = ЭтотОбъект.ПолучитьМакет(ИмяМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Область");
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Руководитель", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	AVT_ПриказОСменеФамилии.Номер,
	               |	AVT_ПриказОСменеФамилии.Дата,
	               |	AVT_ПриказОСменеФамилии.ФизЛицо,
	               |	AVT_ПриказОСменеФамилии.Фамилия,
	               |	AVT_ПриказОСменеФамилии.Имя,
	               |	AVT_ПриказОСменеФамилии.Отчество,
	               |	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо КАК Руководитель,
	               |	ОтветственныеЛицаОрганизацийСрезПоследних.Должность,
	               |	AVT_ПриказОСменеФамилии.Организация.НаименованиеПолное КАК ОрганизацияПолноеНаименование,
	               |	AVT_ПриказОСменеФамилии.Основание
	               |ПОМЕСТИТЬ ВТ_Документ
	               |ИЗ
	               |	Документ.AVT_ПриказОСменеФамилии КАК AVT_ПриказОСменеФамилии
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	               |				&Дата,
	               |				СтруктурнаяЕдиница = &Организация
	               |					И ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	               |		ПО AVT_ПриказОСменеФамилии.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
	               |ГДЕ
	               |	AVT_ПриказОСменеФамилии.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Документ.ФизЛицо,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СотрудникиОрганизаций.Ссылка) КАК Количество,
	               |	МАКСИМУМ(СотрудникиОрганизаций.Ссылка) КАК Ссылка
	               |ПОМЕСТИТЬ ВТ_Сотрудник
	               |ИЗ
	               |	ВТ_Документ КАК ВТ_Документ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	               |		ПО ВТ_Документ.ФизЛицо = СотрудникиОрганизаций.Физлицо
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Документ.ФизЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ФИОФизЛиц.Период) КАК Период,
	               |	ВТ_Документ.ФизЛицо
	               |ПОМЕСТИТЬ ВТ_ПоследнееИзменение
	               |ИЗ
	               |	ВТ_Документ КАК ВТ_Документ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц КАК ФИОФизЛиц
	               |		ПО ВТ_Документ.ФизЛицо = ФИОФизЛиц.ФизЛицо
	               |			И ВТ_Документ.Дата > ФИОФизЛиц.Период
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Документ.ФизЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Документ.Номер,
	               |	ВТ_Документ.Дата,
	               |	ВТ_Документ.ФизЛицо,
	               |	ВТ_Документ.Фамилия + "" "" + ВТ_Документ.Имя + "" "" + ВТ_Документ.Отчество КАК НовыеФИО,
	               |	ВТ_Документ.Должность КАК ДолжностьРуководителя,
	               |	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, """") КАК ФамилияРуководителя,
	               |	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Имя, """") КАК ИмяРуководителя,
	               |	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Отчество, """") КАК ОтчествоРуководителя,
	               |	ВТ_Документ.ОрганизацияПолноеНаименование,
	               |	ВТ_Документ.ФизЛицо.Наименование КАК ФИО,
	               |	ВТ_Документ.Руководитель,
	               |	ВТ_Документ.Основание,
	               |	СотрудникиОрганизаций.Код КАК ТабельныйНомер,
	               |	СотрудникиОрганизаций.ПодразделениеОрганизации КАК Подразделение,
	               |	ФИОФизЛицСрезПоследних1.Фамилия + "" "" + ФИОФизЛицСрезПоследних1.Имя + "" "" + ФИОФизЛицСрезПоследних1.Отчество КАК СтарыеФИО
	               |ИЗ
	               |	ВТ_Документ КАК ВТ_Документ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	               |				&Дата,
	               |				ФизЛицо В
	               |					(ВЫБРАТЬ
	               |						ВТ_Документ.Руководитель
	               |					ИЗ
	               |						ВТ_Документ)) КАК ФИОФизЛицСрезПоследних
	               |		ПО ВТ_Документ.Руководитель = ФИОФизЛицСрезПоследних.ФизЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследнееИзменение КАК ВТ_ПоследнееИзменение
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц КАК ФИОФизЛиц
	               |			ПО ВТ_ПоследнееИзменение.ФизЛицо = ФИОФизЛиц.ФизЛицо
	               |				И ВТ_ПоследнееИзменение.Период = ФИОФизЛиц.Период
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(ДОБАВИТЬКДАТЕ(&дата, ДЕНЬ, -1), ) КАК ФИОФизЛицСрезПоследних1
	               |			ПО ВТ_ПоследнееИзменение.ФизЛицо = ФИОФизЛицСрезПоследних1.ФизЛицо
	               |		ПО ВТ_Документ.ФизЛицо = ВТ_ПоследнееИзменение.ФизЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сотрудник КАК ВТ_Сотрудник
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	               |			ПО ВТ_Сотрудник.Ссылка = СотрудникиОрганизаций.Ссылка
	               |		ПО ВТ_Документ.ФизЛицо = ВТ_Сотрудник.ФизЛицо";
				   
				   
	Выборка = Запрос.Выполнить().Выбрать();
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("Свойство",	 ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Филиал"));
	Запрос.УстановитьПараметр("Свойство2",	 ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Город"));
	Запрос.Текст = "ВЫБРАТЬ
		               |	ПодразделенияОрганизаций.Ссылка КАК Подразделение,
		               |	ПодразделенияОрганизаций1.Ссылка КАК Родитель,
		               |	ВложенныйЗапрос.Значение КАК Филиал,
		               |	ВложенныйЗапрос1.Значение КАК Город
		               |ИЗ
		               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций1
		               |		ПО ПодразделенияОрганизаций.Родитель.Ссылка = ПодразделенияОрганизаций1.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ЗначенияСвойствОбъектов.Объект КАК Объект,
		               |			ЗначенияСвойствОбъектов.Значение КАК Значение
		               |		ИЗ
		               |			РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		               |		ГДЕ
		               |			ЗначенияСвойствОбъектов.Свойство = &Свойство) КАК ВложенныйЗапрос
		               |		ПО ПодразделенияОрганизаций.Ссылка = ВложенныйЗапрос.Объект
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ЗначенияСвойствОбъектов.Объект КАК Объект,
		               |			ЗначенияСвойствОбъектов.Значение КАК Значение
		               |		ИЗ
		               |			РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		               |		ГДЕ
		               |			ЗначенияСвойствОбъектов.Свойство = &Свойство2) КАК ВложенныйЗапрос1
		               |		ПО ПодразделенияОрганизаций.Ссылка = ВложенныйЗапрос1.Объект";
					   
	ВыборкаФилиалы = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьМакета.Параметры.Заполнить(Выборка);
		ОбластьМакета.Параметры.ОрганизацияПолноеНаименование = Врег(СокрЛП(Строка(ОбластьМакета.Параметры.ОрганизацияПолноеНаименование))); //Blik 111116 58593
		Если Выборка.ФамилияРуководителя <> "" Тогда
			ОбластьМакета.Параметры.Руководитель = Выборка.ФамилияРуководителя + " " + Лев(Выборка.ИмяРуководителя, 1) + "." + Лев(Выборка.ОтчествоРуководителя, 1) + ".";
		КонецЕсли;
		ОбластьМакета.Параметры.ДолжностьРуководителя=ПРГ_Обработки.ПолучитьДолжностьРуководителя(Ссылка);
		ОбластьМакета.Параметры.Руководитель=ПРГ_Обработки.ПолучитьПодписьРуководителя(Ссылка);
		Остановка = Ложь;
		Подразделение = Выборка.Подразделение;
		СтуктураПоиска = Новый Структура("Подразделение");		
		n = 0;
		Пока Не(Остановка) И n < 256 Цикл			
			СтуктураПоиска.Подразделение = Подразделение;
			ВыборкаФилиалы.Сбросить();
			ВыборкаФилиалы.НайтиСледующий(СтуктураПоиска);
			Если ВыборкаФилиалы.Филиал = Истина Тогда
				Остановка = Истина;
			ИначеЕсли (ВыборкаФилиалы.Родитель = NULL) Тогда
				Остановка = Истина;
			Иначе
				Подразделение = ВыборкаФилиалы.Родитель;
			КонецЕсли;
			n = n + 1;
		КонецЦикла;
		Если ВыборкаФилиалы.Филиал = Истина Тогда
			ОбластьМакета.Параметры.Филиал = ВыборкаФилиалы.Подразделение;
		Иначе
			ОбластьМакета.Параметры.Филиал = "";
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Возврат(ТабДок);
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если Не Дата = ДатаПред Тогда
		НаборЗаписей = РегистрыСведений.ФИОФизЛиц.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизЛицо.Значение = ФизЛицо;
	    НаборЗаписей.Отбор.ФизЛицо.Использование = Истина;
		НаборЗаписей.Отбор.Период.Значение = НачалоДня(ДатаПред);
		НаборЗаписей.Отбор.Период.Использование = Истина;
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЕсли;

	НаборЗаписей = РегистрыСведений.ФИОФизЛиц.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ФизЛицо.Значение = ФизЛицо;
    НаборЗаписей.Отбор.ФизЛицо.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = НачалоДня(Дата);
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Прочитать();
	ЭтоНоваяЗапись = Истина;
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.Фамилия = Фамилия;
		Запись.Имя = Имя;
		Запись.Отчество = Отчество;
		ЭтоНоваяЗапись = Ложь;
	КонецЦикла;
	
	Если ЭтоНоваяЗапись Тогда	
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ФизЛицо = ФизЛицо;
		НоваяЗапись.Период = Дата;
		НоваяЗапись.Фамилия = Фамилия;
		НоваяЗапись.Имя = Имя;
		НоваяЗапись.Отчество = Отчество;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
	ПредлагаемоеНаименование = Фамилия + " " + Имя + " " + Отчество;
	Если ФизЛицо.Наименование <> ПредлагаемоеНаименование Тогда
		ТекстВопроса = "Вы сменили ФИО физического лица. Изменить наименование на " + ПредлагаемоеНаименование + "?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
			Запрос.Текст = "ВЫБРАТЬ
			               |	СотрудникиОрганизаций.Ссылка
			               |ИЗ
			               |	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			               |ГДЕ
			               |	СотрудникиОрганизаций.Физлицо = &ФизЛицо";
						   
			Выборка = Запрос.Выполнить().Выбрать();
			ОбъектФизЛицо = ФизЛицо.ПолучитьОбъект();
			ОбъектФизЛицо.Наименование = ПредлагаемоеНаименование;
			ОбъектФизЛицо.Записать();
			Пока Выборка.Следующий() Цикл
				ОбъектСотрудник = Выборка.Ссылка.ПолучитьОбъект();
				ОбъектСотрудник.Наименование = ПредлагаемоеНаименование;
				ОбъектСотрудник.Записать();
			КонецЦикла;
		КонецЕсли;		
	КонецЕсли;
	ЭтотОбъект.ДатаПред = Дата;
	ЭтотОбъект.Записать();

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	НаборЗаписей = РегистрыСведений.ФИОФизЛиц.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ФизЛицо.Значение = ФизЛицо;
    НаборЗаписей.Отбор.ФизЛицо.Использование = Истина;
	НаборЗаписей.Отбор.Период.Значение = НачалоДня(Дата);
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
КонецПроцедуры
