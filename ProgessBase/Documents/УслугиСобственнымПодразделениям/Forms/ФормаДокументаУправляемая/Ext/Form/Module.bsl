////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		// Это существующий документ. 
		// Проверим, что его можно менять.
		
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(РеквизитФормыВЗначение("Объект"), ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

// СОХРАНЕНИЕ И ВОССТАНОВЛЕНИЕ ДАННЫХ ИЗ НАСТРОЕК

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ХранилищаНастроек.ДанныеФорм.ДобавитьДополнительныеДанныеВНастройку(Объект, Настройки, Документы.УслугиСобственнымПодразделениям.СтруктураДополнительныхДанныхФормы());
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ХранилищаНастроек.ДанныеФорм.ЗаполнитьОбъектДополнительнымиДанными(Объект, Настройки, Документы.УслугиСобственнымПодразделениям.СтруктураДополнительныхДанныхФормы());
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПОВТОРЯЮЩИЕСЯ ДЕЙСТВИЯ ПРИ ИЗМЕНЕНИИ РАЗНЫХ РЕКВИЗИТОВ

&НаКлиенте
Процедура ОповеститьНеЗаданыПараметрыУчетаНоменклатуры(ЗначенияДляЗаполнения)
	
	Если НЕ ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначенияДляЗаполнения.Свойство("Подразделение") Тогда
		// Подразделение заполняется из параметров учета номенклатуры
		Возврат;
	КонецЕсли;
	
	// Оповестим о том, что не заполнены параметры учета номенклатуры
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ТекстОповещения = Нстр("ru = 'Данные об исполнителе не изменены'");
	Иначе
		ТекстОповещения = Нстр("ru = 'Данные об исполнителе не заполнены'");
	КонецЕсли;
	
	Пояснение = Нстр("ru = 'Не выполнена настройка параметров учета для услуги &Услуга'");
	Пояснение = СтрЗаменить(Пояснение, "&Услуга", "" + Объект.Номенклатура);
	
	ПоказатьОповещениеПользователя(ТекстОповещения, , Пояснение);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ ДАННЫХ В ШАПКЕ

&НаСервереБезКонтекста
Функция ПараметрыУчетаНоменклатуры(ДанныеДляЗаполнения)
	
	Возврат Документы.УслугиСобственнымПодразделениям.ПараметрыУчетаНоменклатуры(ДанныеДляЗаполнения);
	
КонецФункции

&НаСервереБезКонтекста
Функция ИзменениеОрганизацииСервер(ДанныеДляЗаполнения)
	
	ЗначенияДляЗаполнения = Новый Структура;
	
	Если ЗначениеЗаполнено(ДанныеДляЗаполнения.Номенклатура) Тогда
		
		ЗначенияДляЗаполнения = ПараметрыУчетаНоменклатуры(ДанныеДляЗаполнения);
		
	КонецЕсли;
	
	Возврат ЗначенияДляЗаполнения;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	// Получаем данные с сервера
	ДанныеОбменаССервером = Новый Структура("Дата, Организация, Номенклатура");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, Объект);
	
	ЗначенияДляЗаполнения = ПараметрыУчетаНоменклатуры(ДанныеОбменаССервером);
	ЗаполнитьЗначенияСвойств(Объект,   ЗначенияДляЗаполнения);
	
	// Оповещаем, если не заданы параметры учета номенклатуры
	ОповеститьНеЗаданыПараметрыУчетаНоменклатуры(ЗначенияДляЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	// Получаем данные с сервера
	ДанныеОбменаССервером = Новый Структура("Дата, Организация, Подразделение, Номенклатура");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, Объект);
	
	ЗначенияДляЗаполнения = ИзменениеОрганизацииСервер(ДанныеОбменаССервером);
	ЗаполнитьЗначенияСвойств(Объект, ЗначенияДляЗаполнения);
	
	// Оповещаем, если не заданы параметры учета номенклатуры
	ОповеститьНеЗаданыПараметрыУчетаНоменклатуры(ЗначенияДляЗаполнения);
		
	Если НЕ ПустаяСтрока(Объект.Номер) Тогда
		ПрефиксацияОбъектовСобытия.ОчиститьНомерОбъекта(Объект.Номер, Объект.Организация);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		// Могли поменяться параметры учета

		ДанныеДляОбменаССервером = Новый Структура("Номенклатура, Дата, Организация");
		ЗаполнитьЗначенияСвойств(ДанныеДляОбменаССервером, Объект);

		ЗначенияДляЗаполнения = ПараметрыУчетаНоменклатуры(ДанныеДляОбменаССервером);

		ОповеститьНеЗаданыПараметрыУчетаНоменклатуры(ЗначенияДляЗаполнения);

		// Заполним шапку
		ЗаполнитьЗначенияСвойств(Объект, ЗначенияДляЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	РаботаСДиалогамиКлиент.ЗаполнитьПодразделениеОрганизации(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетЗатратПриИзменении(Элемент)
	
	Объект.СчетЗатратНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Объект.СчетЗатрат));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыСчетПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Затраты.ТекущиеДанные;
	
	СтрокаТабличнойЧасти.СчетНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", СтрокаТабличнойЧасти.Счет));

КонецПроцедуры

