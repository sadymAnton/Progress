// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыУпрУчета Экспорт; // (Упр)
Перем мСтрокаРеквизитыБухУчета Экспорт; // (Регл)
Перем мСтрокаРеквизитыНалУчета Экспорт; // (Регл)

Перем мВалютаУправленческогоУчета 	  Экспорт;
Перем мВалютаРегламентированногоУчета Экспорт;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
// Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли НЕ УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если НЕ РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда
		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(
		ТабДокумент,
		КоличествоЭкземпляров,
		НаПринтер,
		ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект),
		Ссылка);

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()


////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для определенного вида учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета() Экспорт
	
	// Упр. учет
	мСтрокаРеквизитыУпрУчета = "ЗатратыПоБракуВПроизводстве.Сумма";
	
	// Регл. учет
	мСтрокаРеквизитыБухУчета = "ПодразделениеОрганизации, НадписьПодразделениеОрганизации,
							   |ЗатратыПоБракуВПроизводстве.СчетЗатрат,
							   |ЗатратыПоБракуВПроизводстве.СуммаРегл";
	
	мСтрокаРеквизитыНалУчета = "ЗатратыПоБракуВПроизводстве.СчетЗатратНУ,
							   |ЗатратыПоБракуВПроизводстве.СуммаНал";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета()


// Функция возвращает перечень проверяемых реквизитов шапки в зависимости от установленных видов учета
//
Функция ПолучитьПроверяемыеРеквизитыШапки()
	
	Реквизиты = "Организация,Подразделение";
	
	Возврат Реквизиты;
	
КонецФункции // ПолучитьПроверяемыеРеквизитыШапки()

// Функция возвращает перечень проверяемых реквизитов табличной части в зависимости от установленных видов учета
//
Функция ПолучитьПроверяемыеРеквизитыТабличнойЧасти()
	
	Реквизиты = "Продукция";
	
	Возврат Реквизиты;
	
КонецФункции  // ПолучитьПроверяемыеРеквизитыТабличнойЧасти()

// Процедура проверяет правильность заполнения реквизитов документа
//
Процедура ПроверкаРеквизитов(Отказ, Заголовок) Экспорт
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Документ должен принадлежать хотя бы к одному виду учета (управленческий, бухгалтерский, налоговый)
	ОбщегоНазначения.ПроверитьПринадлежностьКВидамУчета(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	РеквизитыШапки = ПолучитьПроверяемыеРеквизитыШапки();
	РеквизитыТЧ    = ПолучитьПроверяемыеРеквизитыТабличнойЧасти();
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(
		ЭтотОбъект,
		Новый Структура(РеквизитыШапки),
		Отказ,
		Заголовок);
		
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(
		ЭтотОбъект,
		"ЗатратыПоБракуВПроизводстве",
		Новый Структура(РеквизитыТЧ),
		Отказ,
		Заголовок);
	
КонецПроцедуры // ПроверкаРеквизитов()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка ИЛИ ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПроверкаРеквизитов(Отказ, Заголовок);
	
КонецПроцедуры // ПередЗаписью()

мВалютаУправленческогоУчета     = глЗначениеПеременной("ВалютаУправленческогоУчета");
мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
