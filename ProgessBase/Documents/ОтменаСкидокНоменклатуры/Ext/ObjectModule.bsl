Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Выполняет действия при вводе на основании
//
Процедура ЗаполнитьПоОснованию(Основание) Экспорт
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.УстановкаСкидокНоменклатуры") Тогда

		Если Документы.Найти(Основание) = Неопределено Тогда
			СтрокаДокумента = Документы.Добавить();
			СтрокаДокумента.УстановкаСкидокНоменклатуры = Основание;
		КонецЕсли;

	КонецЕсли;
КонецПроцедуры //ЗаполнитьПоОснованию()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Возвращает таблицу движений документов "УстановкаСкидокНоменклатуры",
// указанных в списке отмены, по номенклатуре
//
Функция ПодготовитьТаблицуДвиженийНоменклатура(СписокДокументов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистраторы", СписокДокументов);
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	СкидкиНаценкиНоменклатуры.ПолучательСкидки,
	//bolshevykh@a-prof.ru 24.04.2015
	|	СкидкиНаценкиНоменклатуры.ПЦ_ДивизионАдрес,
	//-----bolshevykh@a-prof.ru 24.04.2015
	|	СкидкиНаценкиНоменклатуры.Номенклатура,
	|	СкидкиНаценкиНоменклатуры.ХарактеристикаНоменклатуры,
	|	СкидкиНаценкиНоменклатуры.Качество,
	|	СкидкиНаценкиНоменклатуры.Условие,
	|	СкидкиНаценкиНоменклатуры.ЗначениеУсловия,
	|	СкидкиНаценкиНоменклатуры.ОграничениеСкидкиНаценки,
	|	СкидкиНаценкиНоменклатуры.Валюта
	|ИЗ
	|	РегистрСведений.СкидкиНаценкиНоменклатуры КАК СкидкиНаценкиНоменклатуры
	|
	|ГДЕ
	|	СкидкиНаценкиНоменклатуры.Регистратор В(&Регистраторы)";

	Запрос.Текст = ТекстЗапроса;
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();

	//>>120516 Степанов б/н исправление ошибки записи по нескольким приказам в строках табличной части
	ТаблицаДвижений.Свернуть("ПолучательСкидки,ПЦ_ДивизионАдрес,Номенклатура,ХарактеристикаНоменклатуры,Качество,Условие,ЗначениеУсловия,ОграничениеСкидкиНаценки,Валюта");
	//<<
	
	Возврат ТаблицаДвижений;

КонецФункции //ПодготовитьТаблицуДвиженийНоменклатура()

// Возвращает таблицу движений документов "УстановкаСкидокНоменклатуры",
// указанных в списке отмены, по ценовым группам
//
Функция ПодготовитьТаблицуДвиженийЦеновыеГруппы(СписокДокументов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистраторы", СписокДокументов);
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	СкидкиНаценкиПоЦеновымГруппам.ПолучательСкидки,
	|	СкидкиНаценкиПоЦеновымГруппам.ЦеноваяГруппа,
	|	СкидкиНаценкиПоЦеновымГруппам.Качество,
	|	СкидкиНаценкиПоЦеновымГруппам.Условие,
	|	СкидкиНаценкиПоЦеновымГруппам.ЗначениеУсловия,
	|	СкидкиНаценкиПоЦеновымГруппам.ОграничениеСкидкиНаценки,
	|	СкидкиНаценкиПоЦеновымГруппам.Валюта
	|ИЗ
	|	РегистрСведений.СкидкиНаценкиПоЦеновымГруппам КАК СкидкиНаценкиПоЦеновымГруппам
	|
	|ГДЕ
	|	СкидкиНаценкиПоЦеновымГруппам.Регистратор В(&Регистраторы)";

	Запрос.Текст = ТекстЗапроса;
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();

	Возврат ТаблицаДвижений;

КонецФункции //ПодготовитьТаблицуДвиженийЦеновыеГруппы()

// Возвращает таблицу движений документов "УстановкаСкидокНоменклатуры",
// указанных в списке отмены, по бонусам
//
Функция ПодготовитьТаблицуДвиженийБонусы(СписокДокументов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистраторы", СписокДокументов);
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	СкидкиНоменклатурыНатуральные.ПолучательСкидки,
	|	СкидкиНоменклатурыНатуральные.Номенклатура,
	|	СкидкиНоменклатурыНатуральные.ХарактеристикаНоменклатуры,
	|	СкидкиНоменклатурыНатуральные.Количество,
	|	СкидкиНоменклатурыНатуральные.Качество
	|ИЗ
	|	РегистрСведений.СкидкиНоменклатурыНатуральные КАК СкидкиНоменклатурыНатуральные
	|
	|ГДЕ
	|	СкидкиНоменклатурыНатуральные.Регистратор В(&Регистраторы)";

	Запрос.Текст = ТекстЗапроса;
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();

	Возврат ТаблицаДвижений;

КонецФункции //ПодготовитьТаблицуДвиженийЦеновыеГруппы()

//>>Степанов 12.05.16 подготовка движений для закрытия остатков по ПЦ_ОграниченияПоПредоставленнымСкидкам
Функция ПодготовитьТаблицуПЦ_ОграниченияПоПредоставленнымСкидкам(СписокДокументов, СписокКонтрагентов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Приказы", 		СписокДокументов);
	Запрос.УстановитьПараметр("Контрагенты", 	СписокКонтрагентов);
	//>>Запрос.УстановитьПараметр("ДатаОстатков", Дата);
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.УстановкаСкидокНоменклатуры,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ПолучательСкидки,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.Контрагент,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ДоговорКонтрагента,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.Дивизион,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.АдресПоставки,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ОбъектСкидки,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.Номенклатура,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ХарактеристикаНоменклатуры,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ТоварнаяКатегория,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.Брендообъем,
	               |	СУММА(ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.КоличествоОстаток) КАК Количество,
	               |	СУММА(ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.СуммаСкидкиОстаток) КАК СуммаСкидки
	               |ИЗ
	               |	РегистрНакопления.ПЦ_ОграничениеПоПредоставленнымСкидкам.Остатки(, УстановкаСкидокНоменклатуры В (&Приказы) И Контрагент В (&Контрагенты)) КАК ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.Брендообъем,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ТоварнаяКатегория,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ХарактеристикаНоменклатуры,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.Номенклатура,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ДоговорКонтрагента,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.Контрагент,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.УстановкаСкидокНоменклатуры,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ПолучательСкидки,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.Дивизион,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.АдресПоставки,
	               |	ПЦ_ОграничениеПоПредоставленнымСкидкамОстатки.ОбъектСкидки";

	Запрос.Текст = ТекстЗапроса;
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();

	Возврат ТаблицаДвижений;
	
КонецФункции //ПодготовитьТаблицуПЦ_ОграниченияПоПредоставленнымСкидкам()	

 // Выполняет движения по регистрам 
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоДокументамНоменклатура, ТаблицаПоДокументамЦеновыеГруппы, ТаблицаПоДокументамБонусы, ТаблицаПоПЦ_ОграниченияПоПредоставленнымСкидкам, Отказ, Заголовок)
	
	// Заполним таблицу движений по номенклатуре
	НаборДвижений   = Движения.СкидкиНаценкиНоменклатуры;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоДокументамНоменклатура, ТаблицаДвижений);

	НаборДвижений.мПериод          = СтруктураШапкиДокумента.Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	
	Если (Не Отказ) Тогда
		Движения.СкидкиНаценкиНоменклатуры.ВыполнитьДвижения();
	КонецЕсли;
	
	// Заполним таблицу движений по ценовым группам
	НаборДвижений   = Движения.СкидкиНаценкиПоЦеновымГруппам;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоДокументамЦеновыеГруппы, ТаблицаДвижений);
	
	НаборДвижений.мПериод          = СтруктураШапкиДокумента.Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	
	Если (Не Отказ) Тогда
		Движения.СкидкиНаценкиПоЦеновымГруппам.ВыполнитьДвижения();
	КонецЕсли;
	
	// Заполним таблицу движений по бонусам
	НаборДвижений   = Движения.СкидкиНоменклатурыНатуральные;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоДокументамБонусы, ТаблицаДвижений);
	
	НаборДвижений.мПериод          = СтруктураШапкиДокумента.Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	
	Если (Не Отказ) Тогда
		Движения.СкидкиНоменклатурыНатуральные.ВыполнитьДвижения();
	КонецЕсли;
	
	//>>120516 Степанов Заполнение таблицы движений по ПЦ_ОграниченияПоПредоставленнымСкидкам
	НаборДвижений   = Движения.ПЦ_ОграничениеПоПредоставленнымСкидкам;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоПЦ_ОграниченияПоПредоставленнымСкидкам, ТаблицаДвижений);
	
	НаборДвижений.мПериод          = СтруктураШапкиДокумента.Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	
	Если (Не Отказ) Тогда
		Движения.ПЦ_ОграничениеПоПредоставленнымСкидкам.ВыполнитьРасход();
	КонецЕсли;
	//<<
	
КонецПроцедуры // ДвиженияПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, Режим)

	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Заполним по шапке документа дерево параметров, нужных при проведении.
	ДеревоПолейЗапросаПоШапке = УправлениеЗапасами.СформироватьДеревоПолейЗапросаПоШапке();

	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа
	СтруктураШапкиДокумента = УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, "");
	
	СтруктураОбязательныхПолей = Новый Структура("УстановкаСкидокНоменклатуры");
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Документы", СтруктураОбязательныхПолей, Отказ, Заголовок);

	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("УстановкаСкидокНоменклатуры", "УстановкаСкидокНоменклатуры");
	СтруктураПолей.Вставить("Контрагент", "Контрагент");

	РезультатЗапросаПоДокументам = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Документы", СтруктураПолей);
	ТаблицаПоДокументамНоменклатура = ПодготовитьТаблицуДвиженийНоменклатура(РезультатЗапросаПоДокументам.Выгрузить().ВыгрузитьКолонку("УстановкаСкидокНоменклатуры"));
	ТаблицаПоДокументамЦеновыеГруппы = ПодготовитьТаблицуДвиженийЦеновыеГруппы(РезультатЗапросаПоДокументам.Выгрузить().ВыгрузитьКолонку("УстановкаСкидокНоменклатуры"));
	ТаблицаПоДокументамБонусы = ПодготовитьТаблицуДвиженийБонусы(РезультатЗапросаПоДокументам.Выгрузить().ВыгрузитьКолонку("УстановкаСкидокНоменклатуры"));
	
	/// Кунов О.В., 14.11.2017 - 72646
	//>>Степанов 12.05.16 подготовка движений для закрытия осткатков по ПЦ_ОграниченияПоПредоставленнымСкидкам
	//ТаблицаПоПЦ_ОграниченияПоПредоставленнымСкидкам = ПодготовитьТаблицуПЦ_ОграниченияПоПредоставленнымСкидкам(РезультатЗапросаПоДокументам.Выгрузить().ВыгрузитьКолонку("УстановкаСкидокНоменклатуры"));
	//<<
	РезультатЗапросаПоДокументамТЗ = РезультатЗапросаПоДокументам.Выгрузить();
	ТаблицаПоПЦ_ОграниченияПоПредоставленнымСкидкам = ПодготовитьТаблицуПЦ_ОграниченияПоПредоставленнымСкидкам(
		РезультатЗапросаПоДокументамТЗ.ВыгрузитьКолонку("УстановкаСкидокНоменклатуры"),
		РезультатЗапросаПоДокументамТЗ.ВыгрузитьКолонку("Контрагент")
	);

	//Если ТаблицаПоДокументамНоменклатура.Количество() = 0
	//   И ТаблицаПоДокументамЦеновыеГруппы.Количество() = 0
	//   И ТаблицаПоДокументамБонусы.Количество() = 0 Тогда
	//   ОбщегоНазначения.СообщитьОбОшибке("Не найдены движения по документам, указанным для отмены", Отказ, Заголовок);
	//КонецЕсли;
	///
	
	Если Не Отказ Тогда
		//>>Степанов 12.05.16 ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоДокументамНоменклатура, ТаблицаПоДокументамЦеновыеГруппы, ТаблицаПоДокументамБонусы, Отказ, Заголовок);
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоДокументамНоменклатура, ТаблицаПоДокументамЦеновыеГруппы, ТаблицаПоДокументамБонусы, ТаблицаПоПЦ_ОграниченияПоПредоставленнымСкидкам, Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры	// ОбработкаПроведения()

// Обработчик события "ОбработкаЗаполнения"
//
Процедура ОбработкаЗаполнения(Основание)

	ТипОснования = ТипЗнч(Основание);
	Если ТипОснования <> Тип("ДокументСсылка.УстановкаСкидокНоменклатуры") Тогда
		возврат;
	КонецЕсли;

	ЗаполнитьПоОснованию(Основание);

КонецПроцедуры //ОбработкаЗаполнения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	//>>250516 Степанов 
	Если НачалоДня(Дата)<НачалоДня(ТекущаяДата()) тогда
		Если РольДоступна("АП_Администратор") Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Запрещено проведение документа задним числом!", Ложь, "Отмена записи приказа на установку скидки");
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Запрещено проведение документа задним числом!", Отказ, "Отмена записи приказа на установку скидки");
		КонецЕсли;
	КонецЕсли;				

	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью





