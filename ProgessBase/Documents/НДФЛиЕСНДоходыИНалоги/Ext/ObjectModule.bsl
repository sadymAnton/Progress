////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мДатаОтменыЕСН;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛиЕСНДоходыИНалоги.Дата,
	|	НДФЛиЕСНДоходыИНалоги.Организация,
	|	ВЫБОР
	|		КОГДА НДФЛиЕСНДоходыИНалоги.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НДФЛиЕСНДоходыИНалоги.Организация
	|		ИНАЧЕ НДФЛиЕСНДоходыИНалоги.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	НДФЛиЕСНДоходыИНалоги.Ссылка,
	|	НДФЛиЕСНДоходыИНалоги.НалоговыйПериод
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги КАК НДФЛиЕСНДоходыИНалоги
	|ГДЕ
	|	НДФЛиЕСНДоходыИНалоги.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоПособияСоциальномуСтрахованию()
	
	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("РегистрироватьЕНВД" , НалоговыйПериод < Год(ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов()));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПособияСоциальномуСтрахованию.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования,
	|	ВЫБОР
	|		КОГДА &РегистрироватьЕНВД
	|			ТОГДА ПособияСоциальномуСтрахованию.ОблагаетсяЕНВД
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	СУММА(ПособияСоциальномуСтрахованию.ОплаченныеДни) КАК ОплаченныеДни,
	|	ВЫБОР
	|		КОГДА (НЕ ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|		КОГДА ПособияСоциальномуСтрахованию.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗанятости,
	|	СУММА(ВЫБОР
	|			КОГДА ПособияСоциальномуСтрахованию.УчитыватьКакНовыйСтраховойСлучай
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтраховыеСлучаи,
	|	СУММА(ПособияСоциальномуСтрахованию.СуммаВсего) КАК СуммаВсего,
	|	СУММА(ПособияСоциальномуСтрахованию.СуммаСверхНорм) КАК СуммаСверхНорм,
	|	ПособияСоциальномуСтрахованию.Сотрудник,
	|	ПособияСоциальномуСтрахованию.ДатаСтраховогоСлучая,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ПособияСоциальномуСтрахованию КАК ПособияСоциальномуСтрахованию
	|ГДЕ
	|	ПособияСоциальномуСтрахованию.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования,
	|	ПособияСоциальномуСтрахованию.Сотрудник,
	|	ПособияСоциальномуСтрахованию.ДатаСтраховогоСлучая,
	|	НАЧАЛОПЕРИОДА(ПособияСоциальномуСтрахованию.ПериодРегистрации, МЕСЯЦ),
	|	ВЫБОР
	|		КОГДА (НЕ ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.Нетрудоспособность), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.БеременностьРоды), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай)))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|		КОГДА ПособияСоциальномуСтрахованию.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПособияСоциальномуСтрахованию.ВыплатаЗаСчетФедеральногоБюджета,
	|	ВЫБОР
	|		КОГДА &РегистрироватьЕНВД
	|			ТОГДА ПособияСоциальномуСтрахованию.ОблагаетсяЕНВД
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ";
	
	Возврат Запрос.Выполнить();

КонецФункции

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоПособияПоУходуЗаРебенкомДоПолутораЛет()
	
	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("РегистрироватьЕНВД" , НалоговыйПериод < Год(ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов()));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА &РегистрироватьЕНВД
	|			ТОГДА ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД,
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗанятости,
	|	ИСТИНА КАК УходЗаПервымРебенком,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком <> 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтраховыеСлучаи,
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком) КАК СуммаВсего,
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенкомСверхНорм) КАК СуммаСверхНорм,
	|	ПособияПоУходуЗаРебенком.Сотрудник КАК Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало КАК ДатаСтраховогоСлучая,
	|	ПособияПоУходуЗаРебенком.ВыплатаЗаСчетФедеральногоБюджета
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияПоУходуЗаРебенком
	|ГДЕ
	|	ПособияПоУходуЗаРебенком.Ссылка = &ДокументСсылка
	|	И (ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком <> 0
	|			ИЛИ ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенкомСверхНорм <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияПоУходуЗаРебенком.Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало,
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.ПериодРегистрации, МЕСЯЦ),
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаПервымРебенком <> 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ПособияПоУходуЗаРебенком.ВыплатаЗаСчетФедеральногоБюджета,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &РегистрироватьЕНВД
	|			ТОГДА ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.ПериодРегистрации, МЕСЯЦ),
	|	ВЫБОР
	|		КОГДА &РегистрироватьЕНВД
	|			ТОГДА ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком <> 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком),
	|	СУММА(ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенкомСверхНорм),
	|	ПособияПоУходуЗаРебенком.Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало,
	|	ПособияПоУходуЗаРебенком.ВыплатаЗаСчетФедеральногоБюджета
	|ИЗ
	|	Документ.НДФЛиЕСНДоходыИНалоги.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПособияПоУходуЗаРебенком
	|ГДЕ
	|	ПособияПоУходуЗаРебенком.Ссылка = &ДокументСсылка
	|	И (ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком <> 0
	|			ИЛИ ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенкомСверхНорм <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПособияПоУходуЗаРебенком.ОблагаетсяЕНВД,
	|	ПособияПоУходуЗаРебенком.Сотрудник,
	|	ПособияПоУходуЗаРебенком.ПериодДействияНачало,
	|	НАЧАЛОПЕРИОДА(ПособияПоУходуЗаРебенком.ПериодРегистрации, МЕСЯЦ),
	|	ПособияПоУходуЗаРебенком.Сотрудник.Физлицо,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.ПособиеПоУходуЗаВторымРебенком <> 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ПособияПоУходуЗаРебенком.ВыплатаЗаСчетФедеральногоБюджета,
	|	ВЫБОР
	|		КОГДА ПособияПоУходуЗаРебенком.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ПустаяСсылка)
	|	КОНЕЦ";
	
	Возврат Запрос.Выполнить();

КонецФункции

// Формирует запрос по табличным частям документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет()
	
	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаработкиПолучателей.Физлицо,
	|	ЗаработкиПолучателей.Период,
	|	ЗаработкиПолучателей.ОблагаетсяЕНВД,
	|	ЗаработкиПолучателей.РазмерСреднегоЗаработка,
	|	ЗаработкиПолучателей.ДокументОснование,
	|	МАКСИМУМ(ПолучателиПособийПоУходу.Сотрудник) КАК Сотрудник
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПолучателиПособийПоУходу.Сотрудник.Физлицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ПолучателиПособийПоУходу.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|		ПолучателиПособийПоУходу.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		МАКСИМУМ(ПолучателиПособийПоУходу.СреднийДневнойЗаработок) КАК РазмерСреднегоЗаработка,
	|		ПолучателиПособийПоУходу.Ссылка КАК ДокументОснование
	|	ИЗ
	|		Документ.НДФЛиЕСНДоходыИНалоги.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПолучателиПособийПоУходу
	|	ГДЕ
	|		ПолучателиПособийПоУходу.Ссылка = &ДокументСсылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ПолучателиПособийПоУходу.ПериодРегистрации, МЕСЯЦ),
	|		ПолучателиПособийПоУходу.Сотрудник.Физлицо,
	|		ПолучателиПособийПоУходу.ОблагаетсяЕНВД,
	|		ПолучателиПособийПоУходу.Ссылка) КАК ЗаработкиПолучателей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НДФЛиЕСНДоходыИНалоги.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК ПолучателиПособийПоУходу
	|		ПО ЗаработкиПолучателей.Физлицо = ПолучателиПособийПоУходу.Сотрудник.Физлицо
	|			И (ЗаработкиПолучателей.Период = НАЧАЛОПЕРИОДА(ПолучателиПособийПоУходу.ПериодРегистрации, МЕСЯЦ))
	|			И ЗаработкиПолучателей.ОблагаетсяЕНВД = ПолучателиПособийПоУходу.ОблагаетсяЕНВД
	|			И ЗаработкиПолучателей.РазмерСреднегоЗаработка = ПолучателиПособийПоУходу.СреднийДневнойЗаработок
	|ГДЕ
	|	ПолучателиПособийПоУходу.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаработкиПолучателей.Физлицо,
	|	ЗаработкиПолучателей.Период,
	|	ЗаработкиПолучателей.ОблагаетсяЕНВД,
	|	ЗаработкиПолучателей.РазмерСреднегоЗаработка,
	|	ЗаработкиПолучателей.ДокументОснование";
	
	Возврат Запрос.Выполнить();

КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 		 - флаг отказа в проведении,
//	Заголовок	 - Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.НалоговыйПериод) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан налоговый (расчетный) период!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строки документа.
Процедура ПроверитьЗаполнениеСтрокиТЧ(ВыборкаПоТЧ, Отказ, Заголовок)

	Если ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛСведенияОДоходах" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""НДФЛ: доходы и налоги"": ";
									
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указана дата получения дохода!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан период регистрации дохода!", Отказ, Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.КодДохода) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан код дохода!", Отказ, Заголовок);
		КонецЕсли;
	
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛИсчисленный13" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""НДФЛ по ставке 13% - Исчислено налога"": ";
									
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан период регистрации!", Отказ, Заголовок);
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛУдержанный" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""НДФЛ удержанный"": ";
									
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан период регистрации!", Отказ, Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.СтавкаНалогообложенияРезидента) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указана ставка налога!", Отказ, Заголовок);
			
		ИначеЕсли ЗначениеЗаполнено(ВыборкаПоТЧ.КодДохода) И ВыборкаПоТЧ.ОшибкаУказанияКодаДохода Тогда	
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "неверно указан код дохода, для которого зарегистрирован налог!", Отказ, Заголовок);
			
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "ЕСНСведенияОДоходах" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
							""" табл. части ""ЕСН: доходы"": ";
		
		Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
			
		ИначеЕсли НачалоМесяца(ВыборкаПоТЧ.МесяцНалоговогоПериода) > мДатаОтменыЕСН Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "неверно указан месяц налогового периода, ЕСН с 2010 года отменен!", Отказ, Заголовок);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.КодДохода) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан код дохода!", Отказ, Заголовок);
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "ЕСННалоги" Тогда
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
							""" табл. части ""ЕСН: налоги"": ";
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
			
		ИначеЕсли НачалоМесяца(ВыборкаПоТЧ.МесяцНалоговогоПериода) > мДатаОтменыЕСН Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "неверно указан месяц налогового периода, ЕСН с 2010 года отменен!", Отказ, Заголовок);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧ()

Процедура ПроверитьЗаполнениеСтрокиСтраховыеВзносыСведенияОДоходах(ВыборкаПоТЧ, Отказ, Заголовок)

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
	""" табл. части ""Учет доходов по страховым взносам"": ";
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцРасчетногоПериода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
		
	ИначеЕсли НачалоМесяца(ВыборкаПоТЧ.МесяцРасчетногоПериода) < мДатаОтменыЕСН Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "неверно указан месяц расчетного периода, страховые взносы заменят ЕСН только с 2010 года!", Отказ, Заголовок);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ВидДохода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан вид дохода!", Отказ, Заголовок);
	КонецЕсли;
		
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧ()

Процедура ПроверитьЗаполнениеСтрокиСтраховыеВзносы(ВыборкаПоТЧ, Отказ, Заголовок)

	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
	""" табл. части ""Исчислено взносов в ПФР, ФСС и ФОМС"": ";
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцРасчетногоПериода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан месяц расчетного периода!", Отказ, Заголовок);
		
	ИначеЕсли НачалоМесяца(ВыборкаПоТЧ.МесяцРасчетногоПериода) < мДатаОтменыЕСН Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "неверно указан месяц расчетного периода, страховые взносы заменят ЕСН только с 2010 года!", Отказ, Заголовок);
		
	КонецЕсли;
		
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧ()

Процедура ПроверитьЗаполнениеСтрокиВычетов(ВыборкаПоТЧ, Отказ, Заголовок)
	
	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
	""" табл. части ""НДФЛ по ставке 13% - Предоставлено вычетов"": ";
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ФизЛицо) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.МесяцНалоговогоПериода) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан месяц налогового периода!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.КодВычета) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан код предоставленного вычета!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан период регистрации!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиВычетов()

Процедура ПроверитьЗаполнениеСтрокиПособия(ВыборкаПоТЧ, Отказ, Заголовок)
	
	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""ФСС: расходы"": ";
									
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.ВидПособияСоциальногоСтрахования) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан вид пособия!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указана дата регистрации пособия!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ДатаСтраховогоСлучая) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указана дата страхового случая!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиПособия()

Процедура ПроверитьЗаполнениеСтрокиПособияПоУходу(ВыборкаПоТЧ, Отказ, Заголовок)
	
	НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
									""" табл. части ""ФСС: по уходу за ребенком"": ";
									
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.Сотрудник) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указан сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодРегистрации) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указана дата регистрации пособия!", Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоТЧ.ПериодДействияНачало) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указана дата начала периода выплаты пособия!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиПособияПоУходу()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//  СтруктураПараметров                      - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ)

	Если ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛСведенияОДоходах" Тогда
		
		Движение = Движения.НДФЛСведенияОДоходах.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоТЧ);
		
		// Свойства
		Движение.Период             = ВыборкаПоТЧ.МесяцНалоговогоПериода;
		
		// Измерения
		Движение.Организация		= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
		Движение.ПериодРегистрации	= ВыборкаПоТЧ.ПериодРегистрации;
		
		// Реквизиты
		
		Если ВыборкаПоТЧ.СуммаНалога <>0 Тогда
			
			Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
			
			// Свойства
			Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
			
			ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоТЧ);

			Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
			Движение.МесяцНалоговогоПериода		= ВыборкаПоТЧ.ДатаПолученияДохода;
			Движение.Период                 = ВыборкаПоТЧ.ПериодРегистрации;
			Движение.Налог					= ВыборкаПоТЧ.СуммаНалога; 
			Движение.ВидСтроки				= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление;
			
		КонецЕсли; 
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛИсчисленный13" Тогда
		
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		
		// Свойства
		Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
		
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоТЧ);
		
		// Налог с оплаты труда рассчитывается последним днём месяца
		Движение.Организация			= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
		Движение.Период                 = КонецМесяца(ВыборкаПоТЧ.ПериодРегистрации);
		Движение.Налог					= ВыборкаПоТЧ.СуммаНалога; 
		Движение.ВидСтроки				= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Начисление;			
		//Blik 150316 50110 н
		ТекФЛ = Движение.ФизЛицо;
		Подразделение = ПолучитьПодразделениеФЛ(ТекФЛ);
		Если не Подразделение = неопределено Тогда
			 Движение.ПодразделениеОрганизации = Подразделение;
		КонецЕсли;
		//Blik 150316 50110 к

	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "НДФЛУдержанный" Тогда
		
		
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоТЧ);
		
		// Свойства
		Движение.ВидДвижения			= ВидДвиженияНакопления.Расход;
		Движение.Период                 = ВыборкаПоТЧ.ПериодРегистрации;
		
		Движение.Организация			= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ОбособленноеПодразделение = ВыборкаПоШапкеДокумента.Организация;
		Движение.Налог					= ВыборкаПоТЧ.СуммаНалога; 
		Движение.ВидСтроки				= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;		
		//Blik 150316 50110 н
		ТекФЛ = Движение.ФизЛицо;
		Подразделение = ПолучитьПодразделениеФЛ(ТекФЛ);
		Если не Подразделение = неопределено Тогда
			 Движение.ПодразделениеОрганизации = Подразделение;
		КонецЕсли;
		//Blik 150316 50110 к
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "ЕСНСведенияОДоходах" Тогда
		
		Движение = Движения.ЕСНСведенияОДоходах.Добавить();
		
		// Свойства
		Движение.Период                 = ВыборкаПоТЧ.МесяцНалоговогоПериода;
		
		// Измерения
		Движение.Организация			= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо                = ВыборкаПоТЧ.ФизЛицо;
		
		// Ресурсы
		
		// для договоров подряда доход запишем за минусом скидки (не облагается ЕСН)
		Если ВыборкаПоТЧ.КодДохода = Справочники.ДоходыЕСН.ДоговораАвторские
			Или ВыборкаПоТЧ.КодДохода = Справочники.ДоходыЕСН.ДоговораГПХ  Тогда
			Движение.Результат				= ВыборкаПоТЧ.СуммаДохода - ВыборкаПоТЧ.СуммаВычета; 
			Движение.Скидка					= 0; 
		Иначе			
			Движение.Результат				= ВыборкаПоТЧ.СуммаДохода; 
			Движение.Скидка					= ВыборкаПоТЧ.СуммаВычета; 
		КонецЕсли; 
		
		// Реквизиты
		Движение.КодДоходаЕСН           = ВыборкаПоТЧ.КодДохода;
		Движение.ОблагаетсяЕНВД         = ВыборкаПоТЧ.ОблагаетсяЕНВД;
		Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
		
	ИначеЕсли ВыборкаПоТЧ.ВидСтрокиЗапроса = "ЕСННалоги" Тогда
		
		
		Движение = Движения.ЕСНИсчисленный.Добавить();
		
		// Свойства
		Движение.Период 					= ВыборкаПоТЧ.МесяцНалоговогоПериода;
		
		// Измерения
		Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо               		= ВыборкаПоТЧ.ФизЛицо;
		
		// Ресурсы
		Движение.ФедеральныйБюджет          = ВыборкаПоТЧ.ФедеральныйБюджет;
		Движение.ФСС       					= ВыборкаПоТЧ.ФСС;
		Движение.ФФОМС       				= ВыборкаПоТЧ.ФФОМС;
		Движение.ТФОМС       				= ВыборкаПоТЧ.ТФОМС;
		Движение.ПФРНакопительная       	= ВыборкаПоТЧ.ПФРНакопительная;
		Движение.ПФРСтраховая       		= ВыборкаПоТЧ.ПФРСтраховая;
		Движение.ПФРНакопительнаяЕНВД       = ВыборкаПоТЧ.ПФРНакопительнаяЕНВД;
		Движение.ПФРСтраховаяЕНВД       	= ВыборкаПоТЧ.ПФРСтраховаяЕНВД;
		Движение.ПримененнаяЛьготаФБ       	= ВыборкаПоТЧ.ПримененнаяЛьготаФБ;
		Движение.ПримененнаяЛьготаФСС       = ВыборкаПоТЧ.ПримененнаяЛьготаФСС;
		Движение.ПримененнаяЛьготаФОМС      = ВыборкаПоТЧ.ПримененнаяЛьготаФОМС;
		
		// Реквизиты
		Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
		
	КонецЕсли;		  

КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);	
	мДатаОтменыЕСН = ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами();
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			Движения.ПособияСоциальномуСтрахованию.мВыполнятьДополнительныеДвижения	= Истина;
			Движения.ПособияПоУходуЗаРебенкомДоПолутораЛет.мВыполнятьДополнительныеДвижения	= Истина;
			Движения.СтраховыеВзносыИсчисленные.мВыполнятьДополнительныеДвижения	= Истина;
			
			// получим реквизиты табличной части
			ВыборкаПоТабличнымЧастям = НДФЛиЕСНДоходыИНалогиПереопределяемый.СформироватьЗапросПоТабличнымЧастям(Режим, ЭтотОбъект).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоТабличнымЧастям.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиТЧ(ВыборкаПоТабличнымЧастям, Отказ, Заголовок);
				
				Если НЕ Отказ Тогда
					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТабличнымЧастям);
				КонецЕсли; 
				
			КонецЦикла;
			
			Если Движения.НДФЛРасчетыСБюджетом.Количество() > 0 Тогда
				Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Загрузить(ПроведениеРасчетов.РасчетыНалоговогоАгентаПоУдержанномуНДФЛ(Движения.НДФЛРасчетыСБюджетом.Выгрузить()))
			КонецЕсли;
			
			Для каждого СтрокаТЧ Из НДФЛПредоставленныеВычеты  Цикл
				
				ПроверитьЗаполнениеСтрокиВычетов(СтрокаТЧ, Отказ, Заголовок);
				Если НЕ Отказ И СтрокаТЧ.ПримененныйВычет <> 0 Тогда
					Если СправкиПоНДФЛПовтИсп.СвойстваВычета(СтрокаТЧ.КодВычета).ПредоставляетсяПоУведомлениюНО Тогда
						
						Движение = Движения.НДФЛИмущественныеВычетыФизлиц.Добавить();
						ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
						
						Движение.Период						= КонецМесяца(СтрокаТЧ.МесяцНалоговогоПериода);
						Движение.ВидДвижения				= ВидДвиженияНакопления.Расход;
						Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
						Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
						Движение.Год			    		= Год(СтрокаТЧ.МесяцНалоговогоПериода);
						Движение.Размер						= СтрокаТЧ.ПримененныйВычет; 
						Движение.КодВычетаИмущественный		= СтрокаТЧ.КодВычета; 
						Движение.МесяцРегистрации			= НачалоМесяца(СтрокаТЧ.ПериодРегистрации);
						
					Иначе
						
						Движение = Движения.НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Добавить();
						ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
						
						Движение.Период						= КонецМесяца(СтрокаТЧ.ПериодРегистрации);
						Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
						Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			Для каждого СтрокаТЧ Из ПособияСоциальномуСтрахованию Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиПособия(СтрокаТЧ, Отказ, Заголовок);
			КонецЦикла; 
			
			Если НЕ Отказ Тогда
				Выборка = СформироватьЗапросПоПособияСоциальномуСтрахованию().Выбрать();
				Пока Выборка.Следующий() Цикл 
					
					Движение = Движения.ПособияСоциальномуСтрахованию.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Организация");
					ЗаполнитьЗначенияСвойств(Движение,Выборка);
					
				КонецЦикла;
			КонецЕсли; 
			
			Для каждого СтрокаТЧ Из ПособияПоУходуЗаРебенкомДоПолутораЛет Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиПособияПоУходу(СтрокаТЧ, Отказ, Заголовок);
			КонецЦикла; 
			
			Если НЕ Отказ Тогда
				Выборка = СформироватьЗапросПоПособияПоУходуЗаРебенкомДоПолутораЛет().Выбрать();
				Пока Выборка.Следующий() Цикл 
					Движение = Движения.ПособияПоУходуЗаРебенкомДоПолутораЛет.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Организация");
					ЗаполнитьЗначенияСвойств(Движение,Выборка);
				КонецЦикла;
				
				Если ВыборкаПоШапкеДокумента.НалоговыйПериод < Год(мДатаОтменыЕСН) Тогда
					Выборка = СформироватьЗапросЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет().Выбрать();
					Пока Выборка.Следующий() Цикл 
						
						Движение = Движения.ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.Добавить();
						ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Организация");
						ЗаполнитьЗначенияСвойств(Движение,Выборка);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли; 
			
			Для каждого СтрокаТЧ Из СтраховыеВзносы Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиСтраховыеВзносы(СтрокаТЧ, Отказ, Заголовок);
				Если Не Отказ Тогда
					Движение = Движения.СтраховыеВзносыИсчисленные.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
					Движение.Период = СтрокаТЧ.МесяцРасчетногоПериода;
					Движение.Организация = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ОбособленноеПодразделение = ВыборкаПоШапкеДокумента.Организация;
				КонецЕсли;
			КонецЦикла; 
			
			Для каждого СтрокаТЧ Из СтраховыеВзносыСведенияОДоходах Цикл
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиСтраховыеВзносыСведенияОДоходах(СтрокаТЧ, Отказ, Заголовок);
				Если Не Отказ Тогда
					Движение = Движения.СтраховыеВзносыСведенияОДоходах.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
					Движение.Период = СтрокаТЧ.МесяцРасчетногоПериода;
					Движение.Организация = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ОбособленноеПодразделение = ВыборкаПоШапкеДокумента.Организация;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;

	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(НДФЛСведенияОДоходах);
	МассивТЧ.Добавить(ЕСНСведенияОДоходах);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");

	Если НалоговыйПериод < Год(ПроведениеРасчетов.ДатаПереходаНаКодыОКТМО()) - 1 Тогда
		Для Каждого СтрокаТЧ Из НДФЛИсчисленный13 Цикл
			СтрокаТЧ.КодПоОКТМО = "";
		КонецЦикла;
		Для Каждого СтрокаТЧ Из НДФЛПредоставленныеВычеты Цикл
			СтрокаТЧ.КодПоОКТМО = "";
		КонецЦикла;
		Для Каждого СтрокаТЧ Из НДФЛСведенияОДоходах Цикл
			СтрокаТЧ.КодПоОКТМО = "";
		КонецЦикла;
		Для Каждого СтрокаТЧ Из НДФЛУдержанный Цикл
			СтрокаТЧ.КодПоОКТМО = "";
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеестрДСВ3") Тогда
		
		// Заполним реквизиты из стандартного набора.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
		
		Если Основание.Проведен Тогда
			
			Если Организация.Пустая() Тогда
				ТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
				Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОсновнаяОрганизация")
			КонецЕсли;
			
			Запрос = Новый Запрос;
			
			МесяцНалоговогоПериода = Основание.ПериодРегистрации;
			НалоговыйПериод = Год(МесяцНалоговогоПериода);
			
			Запрос.УстановитьПараметр("Регистратор", Основание);
			Запрос.УстановитьПараметр("НачалоНП", НачалоГода(МесяцНалоговогоПериода));
			Запрос.УстановитьПараметр("КонецНП", МесяцНалоговогоПериода - 1);
			Запрос.УстановитьПараметр("НеоблагаемаяСумма", 12000);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Работники.ФизЛицо КАК ФизЛицо,
			|	Работники.ВзносыРаботодателя,
			|	ВЫБОР
			|		КОГДА Работники.Ссылка.ДатаИсполненияПлатежногоПоручения = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА Работники.Ссылка.Дата
			|		ИНАЧЕ Работники.Ссылка.ДатаИсполненияПлатежногоПоручения
			|	КОНЕЦ КАК ДатаДохода,
			|	Работники.НомерСтроки
			|ПОМЕСТИТЬ ВТФизлица
			|ИЗ
			|	Документ.РеестрДСВ3.РаботникиОрганизации КАК Работники
			|ГДЕ
			|	Работники.Ссылка = &Регистратор
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Работники.ФизЛицо КАК ФизЛицо,
			|	СУММА(Работники.ВзносыРаботодателя) КАК ВзносыРаботодателя
			|ПОМЕСТИТЬ ВТВЗносыСНачалаГода
			|ИЗ
			|	Документ.РеестрДСВ3.РаботникиОрганизации КАК Работники
			|ГДЕ
			|	Работники.Ссылка.ПериодРегистрации МЕЖДУ &НачалоНП И &КонецНП
			|	И Работники.ФизЛицо В
			|			(ВЫБРАТЬ
			|				Физлица.ФизЛицо
			|			ИЗ
			|				ВТФизлица КАК Физлица)
			|	И Работники.Ссылка.Проведен
			|
			|СГРУППИРОВАТЬ ПО
			|	Работники.ФизЛицо
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Физлица.ФизЛицо,
			|	Физлица.ДатаДохода,
			|	НАЧАЛОПЕРИОДА(Физлица.ДатаДохода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|	НАЧАЛОПЕРИОДА(Физлица.ДатаДохода, МЕСЯЦ) КАК МесяцРасчетногоПериода,
			|	Физлица.ДатаДохода КАК ПериодРегистрации,
			|	ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1211) КАК КодДохода,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыНДФЛ.Код607) КАК КодВычета,
			|	ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ОблагаетсяЦеликом) КАК КодДоходаЕСН,
			|	ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом) КАК ВидДохода,
			|	Физлица.ВзносыРаботодателя,
			|	Физлица.ВзносыРаботодателя - ВЫБОР
			|		КОГДА Физлица.ВзносыРаботодателя + ЕСТЬNULL(ВзносыСНачалаГода.ВзносыРаботодателя, 0) < &НеоблагаемаяСумма
			|			ТОГДА 0
			|		ИНАЧЕ Физлица.ВзносыРаботодателя + ЕСТЬNULL(ВзносыСНачалаГода.ВзносыРаботодателя, 0) - &НеоблагаемаяСумма
			|	КОНЕЦ КАК НеОблагается,
			|	Физлица.НомерСтроки КАК НомерСтроки
			|ИЗ
			|	ВТФизлица КАК Физлица
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВЗносыСНачалаГода КАК ВзносыСНачалаГода
			|		ПО Физлица.ФизЛицо = ВзносыСНачалаГода.ФизЛицо
			|ГДЕ
			|	Физлица.ВзносыРаботодателя > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			СуммыПревышения = Запрос.Выполнить().Выбрать();
			
			Пока СуммыПревышения.Следующий() Цикл
				
				СтрокаНДФЛ = НДФЛСведенияОДоходах.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНДФЛ,СуммыПревышения);
				СтрокаНДФЛ.СуммаДохода = СуммыПревышения.ВзносыРаботодателя;
				СтрокаНДФЛ.СуммаВычета = СуммыПревышения.НеОблагается;
				
				Если СуммыПревышения.ВзносыРаботодателя > СуммыПревышения.НеОблагается Тогда
					
					Если НачалоГода(МесяцНалоговогоПериода) < ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами() Тогда
						СтрокаЕСН = ЕСНСведенияОДоходах.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаЕСН,СуммыПревышения);
						СтрокаЕСН.СуммаДохода = СуммыПревышения.ВзносыРаботодателя - СуммыПревышения.НеОблагается;
					Иначе
						СтрокаВзносов = СтраховыеВзносыСведенияОДоходах.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаВзносов,СуммыПревышения);
						СтрокаВзносов.Результат = СуммыПревышения.ВзносыРаботодателя - СуммыПревышения.НеОблагается;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			

		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ЗарплатаКВыплатеОрганизаций") Тогда	
		
		// Заполним реквизиты из стандартного набора.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
		
		Если Основание.Проведен Тогда
			
			ПериодРегистрации = НачалоМесяца(Основание.ПериодРегистрации);
			НалоговыйПериод = Год(ПериодРегистрации);
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачалоПериода", ПериодРегистрации);
			Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("Ссылка", Основание);
			ТекстЗапроса = "
			|////////////////////////////////////////////////////////////////////////////////
			|//ТАБЛИЦАРАБОТНИКОВ
			|//КОНЕЦ ТАБЛИЦАРАБОТНИКОВ";
			УправлениеОтчетамиЗК.ПолучитьТаблицуРаботников(, ТекстЗапроса, "ВТДанныеДокумента", Истина);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо,
			|	ЗарплатаКВыплатеОрганизацийЗарплата.КомпенсацияЗаЗадержкуЗарплаты,
			|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.Дата,
			|	ВЫБОР
			|		КОГДА ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|			ТОГДА ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.Организация
			|		ИНАЧЕ ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка.Организация.ГоловнаяОрганизация
			|	КОНЕЦ КАК ГоловнаяОрганизация
			|ПОМЕСТИТЬ ВТДанныеДокумента
			|ИЗ
			|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
			|ГДЕ
			|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = &Ссылка
			|	И ЗарплатаКВыплатеОрганизацийЗарплата.КомпенсацияЗаЗадержкуЗарплаты <> 0" + "
			|;
			|" + ТекстЗапроса + Символы.ПС + 
            "ВЫБРАТЬ
            |	ДанныеДокумента.Физлицо,
            |	НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК МесяцРасчетногоПериода,
            |	ВЫБОР
            |		КОГДА РаботникиПредприятия.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
            |			ТОГДА ВЫБОР
            |					КОГДА РаботникиПредприятия.Сотрудник.ЯвляетсяСтудентомРаботающимВСтудотряде
            |						ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору)
            |					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом)
            |				КОНЕЦ
            |		КОГДА РаботникиПредприятия.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.Подряда)
            |			ТОГДА ВЫБОР
            |					КОГДА РаботникиПредприятия.Договор.ЗаключенСоСтудентомРаботающимВСтудотряде
            |						ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоГражданскоПравовомуДоговору)
            |					ИНАЧЕ РаботникиПредприятия.Договор.ВидРасчета.КодДоходаСтраховыеВзносы
            |				КОНЕЦ
            |		КОГДА РаботникиПредприятия.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.Авторский)
            |			ТОГДА РаботникиПредприятия.Договор.ВидРасчета.КодДоходаСтраховыеВзносы
            |		ИНАЧЕ НЕОПРЕДЕЛЕНО
            |	КОНЕЦ КАК ВидДохода,
            |	РаботникиПредприятия.ВидДоговора,
            |	РаботникиПредприятия.Сотрудник,
            |	ДанныеДокумента.КомпенсацияЗаЗадержкуЗарплаты КАК Результат,
            |	ЕСТЬNULL(РаботникиПредприятия.Должность.ЯвляетсяДолжностьюЛетногоЭкипажа, ЛОЖЬ) КАК ОблагаетсяПоДополнительномуТарифу,
            |	ЕСТЬNULL(РаботникиПредприятия.Должность.ЯвляетсяШахтерскойДолжностью, ЛОЖЬ) КАК ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
            |	ЕСТЬNULL(РаботникиПредприятия.Должность.ЯвляетсяФармацевтическойДолжностью, ЛОЖЬ) КАК ЯвляетсяДоходомФармацевта,
            |	РаботникиПредприятия.Должность.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
            |	КлассыУсловийТрудаПоДолжностямСрезПоследних.КлассУсловийТруда
            |ИЗ
            |	ВТДанныеДокумента КАК ДанныеДокумента
            |		ЛЕВОЕ СОЕДИНЕНИЕ РаботникиПредприятия КАК РаботникиПредприятия
            |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КлассыУсловийТрудаПоДолжностям.СрезПоследних(&КонецПериода, ) КАК КлассыУсловийТрудаПоДолжностямСрезПоследних
            |			ПО РаботникиПредприятия.Должность = КлассыУсловийТрудаПоДолжностямСрезПоследних.Должность
            |		ПО ДанныеДокумента.Физлицо = РаботникиПредприятия.Физлицо";
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				СтрокаТЧ = СтраховыеВзносыСведенияОДоходах.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
				Если Выборка.ВидДохода = Неопределено Тогда
					СтрокаТЧ.ВидДохода = НДФЛиЕСНДоходыИНалогиПереопределяемый.ВидДоходаПоСтраховымВзносамПоУмолчанию(Выборка.ВидДоговора, Выборка.Сотрудник);
				КонецЕсли;
			КонецЦикла;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//Blik 150316 50110 н
Функция ПолучитьПодразделениеФЛ(ТекФЛ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации как Подр
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(КонецПериода(&НаДату,Месяц), ) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо = &Физлицо";
	
    Запрос.УстановитьПараметр("Физлицо",ТекФЛ);
	Запрос.УстановитьПараметр("НаДату",Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.подр;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//Blik 150316 50110 