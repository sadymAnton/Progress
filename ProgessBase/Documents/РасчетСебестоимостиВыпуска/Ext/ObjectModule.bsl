Перем мУдалятьДвижения Экспорт;

// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт;
Перем мСтрокаРеквизитыУпрУчета Экспорт;
Перем мСтрокаРеквизитыНалУчета Экспорт;

//начало изменений БП 14 
Перем мУчетнаяПолитика  Экспорт;// Хранит параметры учетной политики на момент проведения документа
//конец изменений БП 14
Перем мБазыКоэффициентов; 

Перем мРасчетПоПеределамВспомогательноеПроизводство;
Перем мРасчетПоПеределамОсновноеПроизводство;
Перем мВидыПодразделенийДляРасчетаПоПеределам;
Перем мВидыПодразделенийДляРасчетаПоПодразделениям;
Перем мТекНомПередела;     // Текущий номер передела
Перем мТабПеределовОбщая; // Таблица переделов

// Период построения запросов. равный началу и концу месяца, с включением границ
// Для виртуальных таблиц регистров используются границы,
// для таблиц движений регистров - даты
Перем мНачГраница;
Перем мКонГраница;
Перем мНачДата;
Перем мКонДата;

// Таблицы движений по регистрам
Перем мТаблицаДвиженийВыпуск;   		 // По регистру "ВыпускПродукции"           упр/бух
Перем мТаблицаДвиженийНЗП;   			 // По регистру "НезавершенноеПроизводство" упр/бух
Перем мТаблицаДвиженийЗатраты;           // По регистру "Затраты"                   упр/бух
Перем мТаблицаДвиженийЗатратыОбороты;    // По регистру "Затраты (обороты)"         упр
Перем мТаблицаДвиженийЗатратыНаВыпуск;   // По регистру "ЗатратыНаВыпускПродукции"  упр/бух
Перем мТаблицаДвиженийЗатратыНаВыпускНаработка; // По регистру "ЗатратыНаВыпускПродукцииНаработка"  упр/бух
Перем мТаблицаДвиженийБракВПроизводстве; // По регистру "БракВПроизводстве"  	   упр/бух
Перем мТаблицаДвиженийПартии;			 // По регистру партии товаров на складе
Перем мТаблицаДвиженийПродажиСебестоимость;	// По регитсру "Продажи себестоимость" упр.

// Наборы движений по регистрам
Перем мДвиженияВыпуск;                   // По регистру "ВыпускПродукции"           упр/бух
Перем мДвиженияНЗП;                      // По регистру "НезавершенноеПроизводство" упр/бух
Перем мДвиженияЗатраты;                  // По регистру "Затраты"                   упр/бух
Перем мДвиженияЗатратыОбороты;           // По регистру "Затраты (обороты)"         упр
Перем мДвиженияЗатратыНаВыпуск;          // По регистру "ЗатратыНаВыпускПродукции"  упр/бух
Перем мДвиженияЗатратыНаВыпускНаработка; // По регистру "ЗатратыНаВыпускПродукцииНаработка"  упр/бух
Перем мДвиженияБракВПроизводстве;        // По регистру "БракВПроизводстве"  	   упр/бух
Перем мДвиженияПартии;			         // По регистру партии товаров на складе
Перем мДвиженияПродажиСебестоимость;	 // По регитсру "Продажи себестоимость" упр.
Перем мДвиженияБазаРаспределенияЗатрат;  // По регистру сведений "База распределения затрат" (по всем видам учета)
Перем мОперация;                         // По регистру бухгалтерии "Хозрасчетный"
Перем мСуффиксИмениРегистра;             // Суффикс имени регистра. для бух. учета = "БухгалтерскийУчет"
								         // для упр. учета = "", для налог. учете = "НалоговыйУчет"
Перем мСуффиксСчета;                     // Суффикс счета. для бух. учета = "СчетУчетаБУ"
								         // для нал. учета = "СчетУчетаНУ"
										 
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для определенного вида учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета() Экспорт
	
	мСтрокаРеквизитыБухУчета = "Организация, НадписьОрганизация";
	мСтрокаРеквизитыНалУчета = "";
	мСтрокаРеквизитыУпрУчета = "";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета()

// Процедура проверяет правильность заполнения реквизитов документа
//
Процедура ПроверкаРеквизитов(Отказ, Заголовок, СтруктураШапкиДокумента) Экспорт
	
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета();
	
	РеквизитыШапки = "Организация";
	УправлениеЗатратами.НепроверятьРеквизитыПоТипуУчета(ЭтотОбъект, РеквизитыШапки, СтруктураШапкиДокумента, мСтрокаРеквизитыУпрУчета, мСтрокаРеквизитыБухУчета, мСтрокаРеквизитыНалУчета);
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, Новый Структура(РеквизитыШапки), Отказ, Заголовок);
	
КонецПроцедуры // ПроверкаРеквизитов()

// Процедура проверяет не были ли уже ранее выполенны действия, указанные в документе
//
Процедура ПроверитьСписокДействий(Отказ)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДокРасчетСебестоимости.ВыполняемоеДействие КАК Действие,
	|	ДокРасчетСебестоимости.Ссылка
	|ИЗ
	|	Документ.РасчетСебестоимостиВыпуска.ВыполняемыеДействия КАК ДокРасчетСебестоимости
	|ГДЕ
	|	ДокРасчетСебестоимости.Ссылка.Проведен
	|	И ДокРасчетСебестоимости.Ссылка.Ссылка <> &ТекДок
	|	И ДокРасчетСебестоимости.Ссылка.ОтражатьВБухгалтерскомУчете  = &ФлагБухУчет
	|	И ДокРасчетСебестоимости.Ссылка.ОтражатьВМеждународномУчете  = &ФлагМСФО
	|	И ДокРасчетСебестоимости.Ссылка.ОтражатьВНалоговомУчете      = &ФлагНалУчет
	|	И ДокРасчетСебестоимости.Ссылка.ОтражатьВУправленческомУчете = &ФлагУпрУчет
	|	И ДокРасчетСебестоимости.Ссылка.ПериодРегистрации            = &МесяцРасчета
	|	И ДокРасчетСебестоимости.ВыполняемоеДействие В(&МассивДействий)";
	
	Запрос = Новый Запрос;
	Если НЕ ОтражатьВУправленческомУчете Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И ДокРасчетСебестоимости.Ссылка.Организация = &Орг";
		Запрос.УстановитьПараметр( "Орг", Организация);
	КонецЕсли;
	
	МассивДействий = Новый Массив; // Массив действий которые нельзя выполнять дважды за расчетный период
	Если НЕ ВыполняемыеДействия.Найти( Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеПродукцииИЗатратПоПеределам, "ВыполняемоеДействие") = Неопределено Тогда
		МассивДействий.Добавить( Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеПродукцииИЗатратПоПеределам);
	КонецЕсли;
	
	Если МассивДействий.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр( "МассивДействий", МассивДействий);
	Запрос.УстановитьПараметр( "МесяцРасчета",   ПериодРегистрации);
	Запрос.УстановитьПараметр( "ТекДок",         Ссылка);
	Запрос.УстановитьПараметр( "ФлагБухУчет",    ОтражатьВБухгалтерскомУчете);
	Запрос.УстановитьПараметр( "ФлагНалУчет",    ОтражатьВНалоговомУчете);
	Запрос.УстановитьПараметр( "ФлагУпрУчет",    ОтражатьВУправленческомУчете);
	Запрос.УстановитьПараметр( "ФлагМСФО",       ОтражатьВМеждународномУчете);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
#Если Клиент Тогда
		Обход = РезультатЗапроса.Выбрать();
		Пока Обход.Следующий() Цикл
			ОбщегоНазначения.Сообщение("Действие: """ + Обход.Действие + """ в расчетном периоде выполнено документом " + Обход.Ссылка, СтатусСообщения.Внимание);
		КонецЦикла;
#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры // ПроверитьСписокДействий()

// Процедура заполняет табличную часть "Выполняемые действия".
//
Процедура ЗаполнитьВыполняемыеДействия(ПоКнопке = Ложь) Экспорт
	
	ВыполняемыеДействия.Очистить();
	
	МассивДействий = ПроцедурыРасчетаСебестоимостиВыпуска.ПолучитьМассивВыполняемыхДействий(ПериодРегистрации, Организация, ОтражатьВУправленческомУчете, ОтражатьВНалоговомУчете, ПоКнопке);
	
	Для Каждого ВыполняемоеДействие Из МассивДействий Цикл
		
		НоваяСтрока = ВыполняемыеДействия.Добавить();
		НоваяСтрока.ВыполняемоеДействие = ВыполняемоеДействие;
		
	КонецЦикла;
		
КонецПроцедуры // ЗаполнитьВыполняемыеДействия()

// Функция получения признака использования расширенной аналитики учета.
//
// Параметры:
//	ПолучитьНовоеЗначение - Булево - признак необходимости получения нового значения параметра
//
// Возвращаемое значение:
//	Булево - признак использования расширенной аналитики учета
//
Функция ПолучитьИспользованиеРасширеннойАналитики(
	ПолучитьНовоеЗначение = Ложь
	) Экспорт
	
	Перем ИспользоватьРасширеннуюАналитику;
	
	Если ПолучитьНовоеЗначение
	 ИЛИ Не ДополнительныеСвойства.Свойство("ИспользоватьРасширеннуюАналитику", ИспользоватьРасширеннуюАналитику)
	Тогда
		ИспользоватьРасширеннуюАналитику = глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") 
			И (глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат") <= ПериодРегистрации);
		ДополнительныеСвойства.Вставить("ИспользоватьРасширеннуюАналитику", ИспользоватьРасширеннуюАналитику);
	КонецЕсли;
	
	Возврат ИспользоватьРасширеннуюАналитику;
		
КонецФункции // ПолучитьИспользованиеРасширеннойАналитики()

// Функция получения режима использования расширенной аналитики учета.
//
// Параметры:
//	ПолучитьНовоеЗначение - Булево - признак необходимости получения нового значения параметра
//
// Возвращаемое значение:
//	Булево - признак использования расширенной аналитики учета
//
Функция ПолучитьРежимИспользованияРасширеннойАналитики(
	ПолучитьНовоеЗначение = Ложь
	) Экспорт
	
	Перем РежимИспользованияРасширеннойАналитики;
	
	Если ПолучитьНовоеЗначение
	 ИЛИ Не ДополнительныеСвойства.Свойство("РежимИспользованияРасширеннойАналитики", РежимИспользованияРасширеннойАналитики)
	Тогда
		РежимИспользованияРасширеннойАналитики = глЗначениеПеременной("РежимИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат");
		ДополнительныеСвойства.Вставить("РежимИспользованияРасширеннойАналитики", РежимИспользованияРасширеннойАналитики);
	КонецЕсли;
	
	Возврат РежимИспользованияРасширеннойАналитики;
		
КонецФункции // ПолучитьРежимИспользованияРасширеннойАналитики()

///////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ РАБОТЫ С ЕНВД И УСН

Процедура ДвиженияПоРегистрамУСНРегл(РежимПроведения, СтруктураШапкиДокумента,Отказ, Заголовок)
	
	Если НЕ СтруктураШапкиДокумента.ОтражатьВНалоговомУчетеУСН Тогда
		Возврат;
	КонецЕсли;
	
	НалоговыйУчетУСН.ДвиженияУСН(Ссылка, РежимПроведения);
		
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Процедура формирует структуру шапки документа и дополнительных полей.
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//	Отказ - Булево - Признак отказа от проведения документа
//	Заголовок - Строка - Текст представления документа 
//
//
Процедура ПодготовитьСтруктуруШапкиДокумента(
	СтруктураШапкиДокумента, 
	Отказ, 
	Заголовок
	)  Экспорт
	
	// Период построения запросов
	мНачГраница = Новый Граница( НачалоМесяца(ПериодРегистрации), ВидГраницы.Включая);
	мКонГраница = Новый Граница( КонецМесяца(ПериодРегистрации), ВидГраницы.Включая);
	мНачДата    = НачалоМесяца(ПериодРегистрации);
	мКонДата    = КонецМесяца(ПериодРегистрации);

	ИспользоватьРасширеннуюАналитику = ПолучитьИспользованиеРасширеннойАналитики();
	
	Если ИспользоватьРасширеннуюАналитику Тогда
		// В режиме РА не используются параметры учетной политики
		// - мРасчетПоПеределамОсновноеПроизводство 
		// - мРасчетПоПеределамВспомогательноеПроизводство
		// Инициализируем булевые переменные.
		мРасчетПоПеределамОсновноеПроизводство        = Ложь;
		мРасчетПоПеределамВспомогательноеПроизводство = Ложь;
	Иначе
		Если мУчетнаяПолитика.СпособРасчетаСебестоимостиОсновногоПроизводства 
				= Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПодразделениям Тогда
			мРасчетПоПеределамОсновноеПроизводство = Ложь;
			
		ИначеЕсли мУчетнаяПолитика.СпособРасчетаСебестоимостиОсновногоПроизводства 
					= Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам Тогда
			мРасчетПоПеределамОсновноеПроизводство = Истина;
			
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Не указан параметр ""Способ расчета себестоимости основного производства"" учетной политики!", Отказ, Заголовок);
		КонецЕсли;
		
		Если мУчетнаяПолитика.СпособРасчетаСебестоимостиВспомогательногоПроизводства 
				= Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПодразделениям Тогда
			мРасчетПоПеределамВспомогательноеПроизводство = Ложь;
			
		ИначеЕсли мУчетнаяПолитика.СпособРасчетаСебестоимостиВспомогательногоПроизводства 
					= Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам Тогда
			мРасчетПоПеределамВспомогательноеПроизводство = Истина;
			
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Не указан параметр ""Способ расчета себестоимости вспомогательного производства"" учетной политики!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
	ДетализацияКосвенныхЗатратВСебестоимости = мУчетнаяПолитика.ДетализацияКосвенныхЗатратВСебестоимости;
	ДетализацияПоФиксированнойСтатьеЗатрат = (ДетализацияКосвенныхЗатратВСебестоимости = Перечисления.ДетализацияКосвенныхЗатратВСебестоимости.ПоФиксированнойСтатьеЗатрат);
	
	СтатьяБракВПроизводстве 		  = мУчетнаяПолитика.СтатьяБракВПроизводстве;
	СтатьяОбщепроизводственныеРасходы = мУчетнаяПолитика.СтатьяОбщепроизводственныеРасходы;
	СтатьяОбщехозяйственныеРасходы 	  = мУчетнаяПолитика.СтатьяОбщехозяйственныеРасходы;
	
	Если ОтражатьВУправленческомУчете ИЛИ ОтражатьВМеждународномУчете Тогда
		ВариантУчетаВыпускаГотовойПродукции = Перечисления.ВариантыУчетаВыпускаГотовойПродукции.БезИспользованияСчета40;
	Иначе
		ВариантУчетаВыпускаГотовойПродукции = мУчетнаяПолитика.ВариантУчетаВыпускаГотовойПродукции;
	КонецЕсли;
	
	Если ДетализацияПоФиксированнойСтатьеЗатрат Тогда
		Если НЕ ЗначениеЗаполнено(СтатьяБракВПроизводстве) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан параметр ""Статья брак в производстве"" учетной политики!", Отказ, Заголовок);
		ИначеЕсли НЕ ЗначениеЗаполнено(СтатьяОбщепроизводственныеРасходы) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан параметр ""Статья общепроизводственных расходов"" учетной политики!", Отказ, Заголовок);
		ИначеЕсли НЕ ЗначениеЗаполнено(СтатьяОбщехозяйственныеРасходы) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан параметр ""Статья общехозяйственных расходов"" учетной политики!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат; // Прервать расчет
	КонецЕсли;

	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	 ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете
	Тогда
		ПоддержкаПБУ18 = мУчетнаяПолитика.ПоддержкаПБУ18;
	Иначе
		ПоддержкаПБУ18 = Ложь;
	КонецЕсли;
	
	мВидыПодразделенийДляРасчетаПоПеределам = Новый Массив;
	мВидыПодразделенийДляРасчетаПоПодразделениям = Новый Массив;
	Если мРасчетПоПеределамВспомогательноеПроизводство Тогда
		мВидыПодразделенийДляРасчетаПоПеределам.Добавить(Перечисления.ВидыПодразделений.ВспомогательноеПроизводство);
	Иначе
		мВидыПодразделенийДляРасчетаПоПодразделениям.Добавить(Перечисления.ВидыПодразделений.ВспомогательноеПроизводство);
	КонецЕсли;
	Если мРасчетПоПеределамОсновноеПроизводство Тогда
		мВидыПодразделенийДляРасчетаПоПеределам.Добавить(Перечисления.ВидыПодразделений.ОсновноеПроизводство);
	Иначе
		мВидыПодразделенийДляРасчетаПоПодразделениям.Добавить(Перечисления.ВидыПодразделений.ОсновноеПроизводство);
	КонецЕсли;
	
	УчетПоСредней = (мУчетнаяПолитика.СпособОценкиМПЗ = Перечисления.СпособыОценки.ПоСредней);
	СтруктураШапкиДокумента.Вставить("УчетПоСредней", УчетПоСредней);
	СтруктураШапкиДокумента.Вставить("Дата",                 КонецМесяца(ПериодРегистрации));
	СтруктураШапкиДокумента.Вставить("Период",       		 КонецМесяца(ПериодРегистрации));
	СтруктураШапкиДокумента.Вставить("УчетнаяПолитика",      мУчетнаяПолитика);
	СтруктураШапкиДокумента.Вставить("ТабПеределовОбщая",    Неопределено);
	СтруктураШапкиДокумента.Вставить("СуффиксИмениРегистра", мСуффиксИмениРегистра);
	СтруктураШапкиДокумента.Вставить("ОтражатьВУправленческомУчете", ОтражатьВУправленческомУчете);
	СтруктураШапкиДокумента.Вставить("ОтражатьВБухгалтерскомУчете",  ОтражатьВБухгалтерскомУчете);
	СтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчете",      ОтражатьВНалоговомУчете);
	СтруктураШапкиДокумента.Вставить("ОтражатьВМеждународномУчете",  ОтражатьВМеждународномУчете);
	СтруктураШапкиДокумента.Вставить("РасчетПоПеределамОсновноеПроизводство",        мРасчетПоПеределамОсновноеПроизводство);
	СтруктураШапкиДокумента.Вставить("РасчетПоПеределамВспомогательноеПроизводство", мРасчетПоПеределамВспомогательноеПроизводство);
	СтруктураШапкиДокумента.Вставить("ВариантУчетаВыпускаГотовойПродукции", ВариантУчетаВыпускаГотовойПродукции);
	
	СтруктураШапкиДокумента.Вставить("ВидыПодразделенийДляРасчетаПоПеределам", 		 мВидыПодразделенийДляРасчетаПоПеределам);
	СтруктураШапкиДокумента.Вставить("ВидыПодразделенийДляРасчетаПоПодразделениям",  мВидыПодразделенийДляРасчетаПоПодразделениям);
	СтруктураШапкиДокумента.Вставить("мВидыПодразделенийДляРасчетаПоПеределам", 	 мВидыПодразделенийДляРасчетаПоПеределам);
	СтруктураШапкиДокумента.Вставить("мВидыПодразделенийДляРасчетаПоПодразделениям", мВидыПодразделенийДляРасчетаПоПодразделениям);
	
	СтруктураШапкиДокумента.Вставить("ДетализацияПоФиксированнойСтатьеЗатрат",  ДетализацияПоФиксированнойСтатьеЗатрат);
	Если ДетализацияПоФиксированнойСтатьеЗатрат Тогда
		СтруктураШапкиДокумента.Вставить("СтатьяОбщепроизводственныеРасходы", СтатьяОбщепроизводственныеРасходы);
		СтруктураШапкиДокумента.Вставить("СтатьяОбщехозяйственныеРасходы",	  СтатьяОбщехозяйственныеРасходы);
		СтруктураШапкиДокумента.Вставить("СтатьяБракВПроизводстве", 		  СтатьяБракВПроизводстве);
	Иначе
		СтруктураШапкиДокумента.Вставить("СтатьяОбщепроизводственныеРасходы");
		СтруктураШапкиДокумента.Вставить("СтатьяОбщехозяйственныеРасходы");
		СтруктураШапкиДокумента.Вставить("СтатьяБракВПроизводстве");
	КонецЕсли;
	
	СтруктураШапкиДокумента.Вставить("ИтерационныйРасчетЗатратВстречногоВыпуска", мУчетнаяПолитика.ИспользоватьИтерационныйРасчетЗатратВстречногоВыпуска);
	
	СтруктураШапкиДокумента.Вставить("БезСтатейЗатрат",  Истина);
	
	СтруктураШапкиДокумента.Вставить("мСуффиксИмениРегистра", мСуффиксИмениРегистра);
	СтруктураШапкиДокумента.Вставить("мНачГраница", мНачГраница);
	СтруктураШапкиДокумента.Вставить("мКонГраница", мКонГраница);
	СтруктураШапкиДокумента.Вставить("мНачДата",  	мНачДата);
	СтруктураШапкиДокумента.Вставить("мКонДата",  	мКонДата);
	СтруктураШапкиДокумента.Вставить("ПоддержкаПБУ18", ПоддержкаПБУ18);
	СтруктураШапкиДокумента.Вставить("ДиректКостинг", мУчетнаяПолитика.ДиректКостинг);
	СтруктураШапкиДокумента.Вставить("ВедениеУчетаПоПроектам", УправлениеПроектами.ВедениеУчетаПоПроектам());
	СтруктураШапкиДокумента.Вставить("ВедениеУчетаЗатратПоПроектам", УправлениеПроектами.ВедениеУчетаЗатратПоПроектам());

	СпособыВеденияПартионногоУчетаПоОрганизациям = УправлениеЗапасамиПартионныйУчет.ПодготовитьСоответствиеСпособыВеденияПартионногоУчетаПоОрганизациям(СтруктураШапкиДокумента);
	СтруктураШапкиДокумента.Вставить("СпособыВеденияПартионногоУчетаПоОрганизациям", СпособыВеденияПартионногоУчетаПоОрганизациям);

	ВидОтраженияВУчете = ПроцедурыРасчетаСебестоимостиВыпуска.ПолучитьВидОтраженияВУчете(СтруктураШапкиДокумента);
	СтруктураШапкиДокумента.Вставить("ВидОтраженияВУчете", ВидОтраженияВУчете);
	
	Если ОтражатьВМеждународномУчете Тогда
		СтруктураШапкиДокумента.Вставить("ИспользоватьРасширеннуюАналитику", Ложь);
	Иначе
		СтруктураШапкиДокумента.Вставить("ИспользоватьРасширеннуюАналитику", ИспользоватьРасширеннуюАналитику);
		Если ИспользоватьРасширеннуюАналитику Тогда
			СтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчете", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	РежимИспользованияРасширеннойАналитики = ПолучитьРежимИспользованияРасширеннойАналитики();
	СтруктураШапкиДокумента.Вставить("ОтражатьЗатратыВУпрУчете", (РежимИспользованияРасширеннойАналитики = Перечисления.РежимыИспользованияРасширеннойАналитики.УправленческийИРегламентированныйУчет));

	Если ОтражатьВУправленческомУчете Тогда
		СтруктураШапкиДокумента.Вставить("ОтноситьТЗРНаОтдельныйСчет", Ложь);
	Иначе
		СтруктураШапкиДокумента.Вставить("ОтноситьТЗРНаОтдельныйСчет", мУчетнаяПолитика.ВидУчетаТЗР = Перечисления.ВариантыУчетаТЗР.ОтнесениеНаОтдельныйСчет);
	КонецЕсли;
	
	СтруктураШапкиДокумента.Вставить("ПростоеРаспределение", УчетЗатрат.ИспользоватьПростоеРаспределение(НастройкаЗакрытияМесяца));
	
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете 
		 И СтруктураШапкиДокумента.ПростоеРаспределение Тогда
		 
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"Настройку закрытия месяца ""%1"" можно использовать только при проведении документа по регламентированному учету.",
			СтруктураШапкиДокумента.НастройкаЗакрытияМесяца);
			
		ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, Заголовок);
	КонецЕсли;
	
	//начало изменений оптим р/с
	Если ОтражатьВБухгалтерскомУчете или ОтражатьВНалоговомУчете Тогда
		НайдЗнчРасчетПрямыхЗатратПоПеределам 			 = ВыполняемыеДействия.Найти(Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПеределам,"ВыполняемоеДействие");
		НайдЗнчРаспределениеКосвенныхРасходовПоПеределам = ВыполняемыеДействия.Найти(Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПеределам,"ВыполняемоеДействие");
		Если НайдЗнчРасчетПрямыхЗатратПоПеределам <> Неопределено 
		 и 	НайдЗнчРаспределениеКосвенныхРасходовПоПеределам <> Неопределено Тогда
		 	Если ВыполняемыеДействия.Индекс(НайдЗнчРасчетПрямыхЗатратПоПеределам) < ВыполняемыеДействия.Индекс(НайдЗнчРаспределениеКосвенныхРасходовПоПеределам) Тогда
				  СтруктураШапкиДокумента.Вставить("ПРГ_ТолькоНаЗатратыВлНаСеб",Истина); 
				///	  возврат;
			КонецЕсли;  
		КонецЕсли; 
	КонецЕсли;	
	//конец изменений
	
	// По умолчанию "отладочный режим" выключен.
	//
	// Для его включения необходимо в режиме отладки выполнить функцию 
	// РасширеннаяАналитикаУчета.ВключитьОтладочныйРежим().
	//
	// Включение "отладочного режима" позволит просматривать данные временных таблиц - 
	// см. РасширеннаяАналитика.ПоказатьВременнуюТаблицу()
	РасширеннаяАналитикаУчета.ВключитьОтладочныйРежим(СтруктураШапкиДокумента, Ложь);
	
	//начало изменений Ожиганов 30.05.2016 выравнивание копеек по НУ, приведение остатков к БУ 
	Если ПРГ_ПопытатьсяПриравнятьНУкБУ_ПФ или ПРГ_ПопытатьсяПриравнятьНУкБУ_ГП Тогда
		Если ОтражатьВНалоговомУчете Тогда
			НайдЗнчРасчетПрямыхЗатратПоПеределам 			 = ВыполняемыеДействия.Найти(Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПеределам,"ВыполняемоеДействие");
			НайдЗнчРаспределениеКосвенныхРасходовПоПеределам = ВыполняемыеДействия.Найти(Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПеределам,"ВыполняемоеДействие");
			НайдЗнчРасчетЗатратВстречногоВыпускаПоПеределам  = ВыполняемыеДействия.Найти(Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетЗатратВстречногоВыпускаПоПеределам,"ВыполняемоеДействие");
			
			Если НайдЗнчРасчетПрямыхЗатратПоПеределам <> Неопределено
			   и НайдЗнчРаспределениеКосвенныхРасходовПоПеределам <>  Неопределено 
			    и ВыполняемыеДействия.Индекс(НайдЗнчРасчетПрямыхЗатратПоПеределам)< ВыполняемыеДействия.Индекс(НайдЗнчРаспределениеКосвенныхРасходовПоПеределам)
			   Тогда
			   СтруктураШапкиДокумента.Вставить("ПРГ_ПриравнятьОстаткиНУкБУГП",Истина); 
		   КонецЕслИ; 
		   
			Если НайдЗнчРасчетПрямыхЗатратПоПеределам <> Неопределено
			   и НайдЗнчРаспределениеКосвенныхРасходовПоПеределам <>  Неопределено 
			   и  НайдЗнчРасчетЗатратВстречногоВыпускаПоПеределам <> Неопределено
			   и  ВыполняемыеДействия.Индекс(НайдЗнчРасчетПрямыхЗатратПоПеределам) < ВыполняемыеДействия.Индекс(НайдЗнчРаспределениеКосвенныхРасходовПоПеределам)
			   и  ВыполняемыеДействия.Индекс(НайдЗнчРаспределениеКосвенныхРасходовПоПеределам) <  ВыполняемыеДействия.Индекс(НайдЗнчРасчетЗатратВстречногоВыпускаПоПеределам)
			   Тогда
			   	СтруктураШапкиДокумента.Вставить("ПРГ_ПриравнятьОстаткиНУкБУПФ",Истина); 
			КонецЕслИ; 
		КонецЕсли;	
	КонецЕсли;	
	//конец изменений 
	
КонецПроцедуры // ПодготовитьСтруктуруШапкиДокумента()

// Функция формирует структуру таблиц движений регистров.
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
// Возвращаемое значение:
//   Структура – Структура таблиц движений регистров
//
Функция ПолучитьСтруктуруТаблицДвиженийРегистров(
	СтруктураШапкиДокумента
	)
	
	// Наборы движений по регистрам
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		
		мСуффиксИмениРегистра             = "";
		
		мДвиженияВыпуск                   = Движения.ВыпускПродукции;
		мДвиженияЗатраты                  = Движения.Затраты;
		мДвиженияЗатратыОбороты           = Движения.ЗатратыОбороты;
		мДвиженияЗатратыНаВыпуск          = Движения.ЗатратыНаВыпускПродукции;
		мДвиженияЗатратыНаВыпускНаработка = Движения.ЗатратыНаВыпускПродукцииНаработка;
		мДвиженияБракВПроизводстве        = Движения.БракВПроизводстве;
		мДвиженияНЗП		              = Движения.НезавершенноеПроизводство;
		мДвиженияПартии			          = Движения.ПартииТоваровНаСкладах;
		мДвиженияПродажиСебестоимость	  = Движения.ПродажиСебестоимость;
		мДвиженияБазаРаспределенияЗатрат  = Движения.БазаРаспределенияЗатрат;
		
	ИначеЕсли СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
		
		мСуффиксИмениРегистра             = "БухгалтерскийУчет";
		
		мДвиженияВыпуск                   = Движения.ВыпускПродукцииБухгалтерскийУчет;
		мДвиженияЗатраты                  = Движения.ЗатратыБухгалтерскийУчет;
		мДвиженияЗатратыНаВыпуск          = Движения.ЗатратыНаВыпускПродукцииБухгалтерскийУчет;
		мДвиженияЗатратыНаВыпускНаработка = Движения.ЗатратыНаВыпускПродукцииНаработкаБухгалтерскийУчет;
		мДвиженияБракВПроизводстве        = Движения.БракВПроизводствеБухгалтерскийУчет;
		мДвиженияНЗП		              = Движения.НезавершенноеПроизводствоБухгалтерскийУчет;
		мДвиженияПартии			          = Движения.ПартииТоваровНаСкладахБухгалтерскийУчет;
		мДвиженияБазаРаспределенияЗатрат  = Движения.БазаРаспределенияЗатратБухгалтерскийУчет;
		
		мОперация                         = Движения.Хозрасчетный;
		мСуффиксСчета                     = "СчетУчетаБУ";
		
	ИначеЕсли СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		
		мСуффиксИмениРегистра             = "НалоговыйУчет";
		
		мДвиженияВыпуск                   = Движения.ВыпускПродукцииНалоговыйУчет;
		мДвиженияЗатраты                  = Движения.ЗатратыНалоговыйУчет;
		мДвиженияЗатратыНаВыпуск          = Движения.ЗатратыНаВыпускПродукцииНалоговыйУчет;
		мДвиженияЗатратыНаВыпускНаработка = Движения.ЗатратыНаВыпускПродукцииНаработкаНалоговыйУчет;
		мДвиженияБракВПроизводстве        = Движения.БракВПроизводствеНалоговыйУчет;
		мДвиженияНЗП		              = Движения.НезавершенноеПроизводствоНалоговыйУчет;
		мДвиженияПартии			          = Движения.ПартииТоваровНаСкладахНалоговыйУчет;
		мДвиженияБазаРаспределенияЗатрат  = Движения.БазаРаспределенияЗатратНалоговыйУчет;
		
		мОперация                         = Движения.Налоговый;
		мСуффиксСчета                     = "СчетУчетаНУ";
		
	ИначеЕсли СтруктураШапкиДокумента.ОтражатьВМеждународномУчете Тогда
		
		мСуффиксИмениРегистра      = "МеждународныйУчет";
		
		мДвиженияВыпуск            = Движения.ВыпускПродукцииМеждународныйУчет;
		мДвиженияЗатраты           = Движения.ЗатратыМеждународныйУчет;
		мДвиженияЗатратыНаВыпуск   = Движения.ЗатратыНаВыпускПродукцииМеждународныйУчет;
		мДвиженияБракВПроизводстве = Движения.БракВПроизводствеМеждународныйУчет;
		мДвиженияНЗП		       = Движения.НезавершенноеПроизводствоМеждународныйУчет;
		мДвиженияПартии			   = Движения.ПартииТоваровНаСкладахМеждународныйУчет;
		мДвиженияБазаРаспределенияЗатрат  = Движения.БазаРаспределенияЗатратМеждународныйУчет;
		
		мОперация                  = Движения.Международный;
		мСуффиксСчета              = "СчетУчетаМСФО";
		
	КонецЕсли;
	
	мТаблицаДвиженийЗатратыНаВыпуск = мДвиженияЗатратыНаВыпуск.Выгрузить();
	мТаблицаДвиженийВыпуск			= мДвиженияВыпуск.Выгрузить();
	мТаблицаДвиженийНЗП				= мДвиженияНЗП.Выгрузить();
	мТаблицаДвиженийЗатраты			= мДвиженияЗатраты.Выгрузить();
	мТаблицаДвиженийБракВПроизводстве = мДвиженияБракВПроизводстве.Выгрузить();
	мТаблицаДвиженийПартии			= мДвиженияПартии.Выгрузить();
	
	Если ОтражатьВУправленческомУчете Тогда
		мТаблицаДвиженийЗатратыОбороты = мДвиженияЗатратыОбороты.Выгрузить();
		мТаблицаДвиженийПродажиСебестоимость = мДвиженияПродажиСебестоимость.Выгрузить();
	КонецЕсли;
	Если Не ОтражатьВМеждународномУчете Тогда
		мТаблицаДвиженийЗатратыНаВыпускНаработка = мДвиженияЗатратыНаВыпускНаработка.Выгрузить();
	КонецЕсли;
	
	СтруктураТаблицДвижений = Новый Структура;
	СтруктураТаблицДвижений.Вставить("ТаблицаДвиженийЗатратыНаВыпуск", 	мТаблицаДвиженийЗатратыНаВыпуск);
	СтруктураТаблицДвижений.Вставить("ТаблицаДвиженийВыпуск", 			мТаблицаДвиженийВыпуск);
	СтруктураТаблицДвижений.Вставить("ТаблицаДвиженийНЗП", 				мТаблицаДвиженийНЗП);
	СтруктураТаблицДвижений.Вставить("ТаблицаДвиженийЗатраты", 			мТаблицаДвиженийЗатраты);
	СтруктураТаблицДвижений.Вставить("ТаблицаДвиженийБракВПроизводстве",мТаблицаДвиженийБракВПроизводстве);
	СтруктураТаблицДвижений.Вставить("ТаблицаДвиженийПартии", 			мТаблицаДвиженийПартии);
	Если ОтражатьВУправленческомУчете Тогда
		СтруктураТаблицДвижений.Вставить("ТаблицаДвиженийЗатратыОбороты", 	мТаблицаДвиженийЗатратыОбороты);
		СтруктураТаблицДвижений.Вставить("ТаблицаДвиженийПродажиСебестоимость", мТаблицаДвиженийПродажиСебестоимость);
	КонецЕсли;
	Если Не ОтражатьВМеждународномУчете Тогда
		СтруктураТаблицДвижений.Вставить("ТаблицаДвиженийЗатратыНаВыпускНаработка", мТаблицаДвиженийЗатратыНаВыпускНаработка);
	КонецЕсли;
	
	Возврат СтруктураТаблицДвижений;
	
КонецФункции // ПолучитьСтруктуруТаблицДвиженийРегистров()

Процедура ЗаполнитьСпособыРаспределенияЗатрат(СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

	Если СтруктураШапкиДокумента.ПростоеРаспределение Тогда
		// "Простое распределение" обходится без регистра сведений
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСпособыРаспределенияЗатрат = ВыполняемыеДействия.Найти(Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияРасходов, "ВыполняемоеДействие") <> Неопределено
											ИЛИ ВыполняемыеДействия.Найти(Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеРасходовПоБазе, "ВыполняемоеДействие") <> Неопределено;
											
	Если ЗаполнитьСпособыРаспределенияЗатрат Тогда
		Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
			ПроцедурыРасчетаСебестоимостиРасширеннаяАналитика.ЗаполнитьСпособыРаспределенияЗатратУпр(СтруктураШапкиДокумента, Отказ, Заголовок);
		КонецЕсли; 
		
		Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете 
			ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
			
			ПроцедурыРасчетаСебестоимостиРасширеннаяАналитика.ЗаполнитьСпособыРаспределенияЗатратРегл(СтруктураШапкиДокумента, Отказ, Заголовок);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры //

// Процедура производит регистрацию документа в последовательностях партионного учета.
//
// Параметры
//  СтруктураШапкиДокумента – Структура – Реквизиты документа "Расчет себестоимости"
//
Процедура ЗарегистрироватьДокументВПоследовательностях(СтруктураШапкиДокумента)
	
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		
		ТаблицаОрганизаций = Новый ТаблицаЗначений;
		ТаблицаОрганизаций.Колонки.Добавить("Организация");
		
		СпособыВеденияПартионногоУчетаПоОрганизациям = СтруктураШапкиДокумента.СпособыВеденияПартионногоУчетаПоОрганизациям;
		Для Каждого Элемент Из СпособыВеденияПартионногоУчетаПоОрганизациям Цикл
			
			ОрганизацияУпр = УправлениеЗапасами.ПолучитьОрганизациюВСоответствииСоСпособомВеденияПартионногоУчетаПоОрганизациям(
				Элемент.Ключ, // Организация 
				Элемент.Значение // СпособВеденияПартионногоУчетаПоОрганизации
			);
			
			НоваяСтрока = ТаблицаОрганизаций.Добавить();
			НоваяСтрока.Организация = ОрганизацияУпр;
			
		КонецЦикла;
		
		ТаблицаОрганизаций.Свернуть("Организация", "");
		
		Для Каждого Строка Из ТаблицаОрганизаций Цикл
			
			ЗаписьРегистрации = ПринадлежностьПоследовательностям.ПартионныйУчет.Добавить();
			ЗаписьРегистрации.Период = КонецМесяца(ПериодРегистрации);
			ЗаписьРегистрации.Регистратор = Ссылка;
			ЗаписьРегистрации.Организация = Строка.Организация;
			
		КонецЦикла;
		
	ИначеЕсли СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
		  ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		  
		УправлениеЗапасами.ЗарегистрироватьДокументВПоследовательностяхПартионногоУчета(
			ЭтотОбъект, 
			КонецМесяца(ПериодРегистрации), 
			СтруктураШапкиДокумента.Организация,
			Ложь, // ОтражатьВУправленческомУчете
			ОтражатьВБухгалтерскомУчете,
			ОтражатьВНалоговомУчете
		);
	КонецЕсли;
	
КонецПроцедуры // ЗарегистрироватьДокументВПоследовательностях()

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ВЫПОЛНЕНИЯ ЗАДАННЫХ В ДОКУМЕНТЕ ДЕЙСТВИЙ

// Процедура выполнения действия "Расчет базы распределения производственных расходов".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//	СтруктураТаблицДвижений - Структура - Структура таблиц движений по регистрам
//
Процедура ВыполняемоеДействиеРасчетБазыРаспределенияПроизводственныхРасходов(
	СтруктураШапкиДокумента,
	СтруктураТаблицДвижений
	)
	
	// is ЯннуровВФ нач 20141128
	Если ОтражатьВМеждународномУчете Тогда
		// Перенос затрат на другое подразделение
		ПереносЗатратНаДругоеПодразделение();
		// Расчет стоимости 
		//РасчетСтоимостиВозвратов();
		ПодготовкаРасчетаСебестоимости();
	КонецЕсли;
	// is ЯннуровВФ кон 20141128
	
	// Списание затрат по наработке.
	Если Не ОтражатьВМеждународномУчете Тогда
		ПроцедурыРасчетаСебестоимостиВыпуска.СписаниеЗатратНаВыпускНаработка(СтруктураШапкиДокумента);
	КонецЕсли;
	
	Если ОтражатьВНалоговомУчете Тогда
		ПроцедурыРасчетаСебестоимостиВыпуска.ЗакрытиеСчетовКосвенныхРасходовПроизводство(СтруктураШапкиДокумента, СтруктураТаблицДвижений);
	КонецЕсли;
	
	ПроцедурыРасчетаБазыРаспределенияЗатрат.РасчетБазыРаспределенияЗатрат(
		СтруктураШапкиДокумента,
		Ложь // КосвенныеЗатраты
	);
	
КонецПроцедуры // ВыполняемоеДействиеРасчетБазыРаспределенияПроизводственныхРасходов()

// Процедура выполнения действия "Расчет базы распределения производственных расходов".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
Процедура ВыполняемоеДействиеРаспределениеПроизводственныхРасходов(
	СтруктураШапкиДокумента,
	СтруктураТаблицДвижений
	)
	
	//+ДС Добавлено условие для МСФО
	Если ОтражатьВМеждународномУчете Тогда
		ДС_РасчетСебестоимостиМСФО.РаспеределитьТЭРЫ(СтруктураШапкиДокумента,Неопределено);
		ДС_РасчетСебестоимостиМСФО.КорректировкаЗатрат(СтруктураШапкиДокумента, СтруктураТаблицДвижений);
	Иначе
		//начало изменений БП 04 
		ПРГ_РасчетСебестоимости.РаспеределитьТЭРЫ(СтруктураШапкиДокумента,Неопределено);
		ПРГ_РасчетСебестоимости.КорректировкаЗатрат(СтруктураШапкиДокумента, СтруктураТаблицДвижений);
		////начало изменений БП 04 
		//МояОбработка = ВнешниеОбработки.Создать("E:\Work\Aozhiganov\1С\Проект УПП\Себестоимость\ПРГ_РасчетСебестоимости.epf");
		//МояОбработка.РаспеределитьТЭРЫ(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
		//МояОбработка = Неопределено;
		////конец изменений БП 04 
		
		//конец изменений БП 04
	КонецЕсли;	
	//-ДС
	
	ПроцедурыРасчетаСебестоимостиВыпуска.РаспределениеПрямыхПроизводственныхРасходов(СтруктураШапкиДокумента);
	
КонецПроцедуры // ВыполняемоеДействиеРасчетБазыРаспределенияПроизводственныхРасходов()

// Процедура выполнения действия "Распределение продукции и затрат по переделам".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//	СтруктураТаблицДвижений - Структура - Структура таблиц движений по регистрам
//
Процедура ВыполняемоеДействиеРаспределениеПродукцииИЗатратПоПеределам(
	СтруктураШапкиДокумента,
	СтруктураТаблицДвижений
	)
	
			
	// Списание затрат по наработке.
	Если Не ОтражатьВМеждународномУчете Тогда
		ПроцедурыРасчетаСебестоимостиВыпуска.СписаниеЗатратНаВыпускНаработка(СтруктураШапкиДокумента);
	КонецЕсли;
			
	Если ОтражатьВНалоговомУчете Тогда
		ПроцедурыРасчетаСебестоимостиВыпуска.ЗакрытиеСчетовКосвенныхРасходовПроизводство(СтруктураШапкиДокумента, СтруктураТаблицДвижений);
	КонецЕсли;
	
	РасчетСебестоимостиВыпускаРаспределениеПоПеределам.РаспределениеПродукцииИЗатратПоПеределам(СтруктураШапкиДокумента);
			
	ПроцедурыРасчетаСебестоимостиВыпуска.ПроверитьПрямыеЗатраты(СтруктураШапкиДокумента);
			
	ПроцедурыРасчетаСебестоимостиВыпуска.ЗаполнениеКорректировкиВстречногоВыпускаПродукции(СтруктураШапкиДокумента);
			
	
КонецПроцедуры // ВыполняемоеДействиеРаспределениеПродукцииИЗатратПоПеределам()

// Процедура выполнения действия "Расчет прямых затрат по подразделениям".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//	СтруктураТаблицДвижений - Структура - Структура таблиц движений по регистрам
//
Процедура ВыполняемоеДействиеРасчетПрямыхЗатратПоПодразделениям(
	СтруктураШапкиДокумента,
	СтруктураТаблицДвижений
	)
	
	ПроцедурыРасчетаСебестоимостиВыпуска.РасчетПрямыхЗатрат(СтруктураШапкиДокумента, СтруктураТаблицДвижений, Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПодразделениям);
			
	
КонецПроцедуры // ВыполняемоеДействиеРасчетПрямыхЗатратПоПодразделениям()

// Процедура выполнения действия "Расчет прямых затрат по переделам".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//	СтруктураТаблицДвижений - Структура - Структура таблиц движений по регистрам
//
Процедура ВыполняемоеДействиеРасчетПрямыхЗатратПоПеределам(
	СтруктураШапкиДокумента,
	СтруктураТаблицДвижений,
	СтрокаДействия = Неопределено
	)
	
	ПроцедурыРасчетаСебестоимостиВыпуска.РасчетПрямыхЗатрат(
		СтруктураШапкиДокумента, 
		СтруктураТаблицДвижений, 
		Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам,
		,
		СтрокаДействия
	);
	
	
КонецПроцедуры // ВыполняемоеДействиеРасчетПрямыхЗатратПоПеределам()

// Процедура выполнения действия "Определение продукции, исключаемой из базы распределения".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
Процедура ВыполняемоеДействиеОпределениеПродукцииИсключаемойИзБазыРаспределения(
	СтруктураШапкиДокумента
	)
	
	ПроцедурыРасчетаСебестоимостиВыпуска.ОпределитьНоменклатуруИсключаемуюИзБазыРаспределения(СтруктураШапкиДокумента);
	ПроцедурыРасчетаСебестоимостиВыпуска.ОпределитьНоменклатуруСписаннуюНаРаспределяемыеЗатраты(СтруктураШапкиДокумента);
	
КонецПроцедуры // ВыполняемоеДействиеОпределениеПродукцииИсключаемойИзБазыРаспределения()

// Процедура выполнения действия "Расчет базы распределения косвенных расходов".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
Процедура ВыполняемоеДействиеРасчетБазыРаспределенияКосвенныхРасходов(
	СтруктураШапкиДокумента
	)
	
	ПроцедурыРасчетаБазыРаспределенияЗатрат.РасчетБазыРаспределенияЗатрат(
		СтруктураШапкиДокумента,
		Истина // КосвенныеЗатраты
	);
		
КонецПроцедуры // ВыполняемоеДействиеРаспределениеКосвенныхРасходовПоПодразделениям()

// Процедура выполнения действия "Распределение косвенных расходов по подразделениям".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//	СтруктураТаблицДвижений - Структура - Структура таблиц движений по регистрам
//
Процедура ВыполняемоеДействиеРаспределениеКосвенныхРасходовПоПодразделениям(
	СтруктураШапкиДокумента,
	ДиректКостинг,
	СтруктураТаблицДвижений
	)
	
			
	ПроцедурыРасчетаСебестоимостиВыпуска.ЗакрытиеСчетовКосвенныхРасходов(
		СтруктураШапкиДокумента, 
		ДиректКостинг, 
		СтруктураТаблицДвижений
		);
			
	ПроцедурыРасчетаСебестоимостиВыпуска.РаспределениеКосвенныхРасходов(
		СтруктураШапкиДокумента, 
		СтруктураТаблицДвижений, 
		ДиректКостинг, 
		Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПодразделениям
		);
			
		
КонецПроцедуры // ВыполняемоеДействиеРаспределениеКосвенныхРасходовПоПодразделениям()

// Процедура выполнения действия "Распределение косвенных расходов по переделам".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//	СтруктураТаблицДвижений - Структура - Структура таблиц движений по регистрам
//
Процедура ВыполняемоеДействиеРаспределениеКосвенныхРасходовПоПеределам(
	СтруктураШапкиДокумента,
	ДиректКостинг,
	СтруктураТаблицДвижений
	)
	
	
  //начало изменений БП 04
  // ОбработкаЗам = ВнешниеОбработки.Создать("E:\Work\Aozhiganov\1С\Проект УПП\Себестоимость\ПроцедурыРасчетаСебестоимости.epf");
  // ОбработкаЗам.ЗакрытиеСчетовКосвенныхРасходов(
  //  	СтруктураШапкиДокумента, 
  //  	ДиректКостинг, 
  //  	СтруктураТаблицДвижений
  //  	);
  //  	
  //  ОбработкаЗам.РаспределениеКосвенныхРасходов(
  //  	СтруктураШапкиДокумента, 
  //  	СтруктураТаблицДвижений, 
  //  	ДиректКостинг, 
  //  	Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам
  //  	);		
  //  	
  //  	
  //  	ОбработкаЗам = неопределено;
  //возврат;
  ////конец изменений БП 04 
	
			
	ПроцедурыРасчетаСебестоимостиВыпуска.ЗакрытиеСчетовКосвенныхРасходов(
		СтруктураШапкиДокумента, 
		ДиректКостинг, 
		СтруктураТаблицДвижений
		);
		
    
	Если  СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		ПРГ_РасчетСебестоимости.КорректировкаКосвенныхРасходов(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
		ПРГ_РасчетСебестоимости.КорректировкаКосвенныхРасходовНаПодразделение(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
	КонецЕсли;	

			
	ПроцедурыРасчетаСебестоимостиВыпуска.РаспределениеКосвенныхРасходов(
		СтруктураШапкиДокумента, 
		СтруктураТаблицДвижений, 
		ДиректКостинг, 
		Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам
		);
		
		
 	//начало изменений
	// Списание остатки общепроизводственных и общехозяйственных расходов на расходы будущих периодов.
	//ПРГ_РасчетСебестоимости.ОтнесениеПрямыхНаРБП(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
	Если Не СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		ПроцедурыРасчетаСебестоимостиВыпуска.СписаниеОбщепроизводственныхИОбщехозяйственныхРасходовНаРБП(
			СтруктураШапкиДокумента
			);
	КонецЕсли;
	//конец изменений 
		
КонецПроцедуры // ВыполняемоеДействиеРаспределениеКосвенныхРасходовПоПеределам()

// Процедура выполнения действия "Списание коммерческих расходов".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
Процедура ВыполняемоеДействиеСписаниеКосвенныхРасходовНаРБП(
	СтруктураШапкиДокумента
	)
	
	// Списание остатки общепроизводственных и общехозяйственных расходов на расходы будущих периодов.
	ПроцедурыРасчетаСебестоимостиВыпуска.СписаниеОбщепроизводственныхИОбщехозяйственныхРасходовНаРБП(
		СтруктураШапкиДокумента
		);
			
КонецПроцедуры // ВыполняемоеДействиеСписаниеКосвенныхРасходовНаРБП()

// Процедура выполнения действия "Расчет затрат встречного выпуска по подразделениям".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//	СтруктураТаблицДвижений - Структура - Структура таблиц движений по регистрам
//
Процедура ВыполняемоеДействиеРасчетЗатратВстречногоВыпускаПоПодразделениям(
	СтруктураШапкиДокумента,
	СтруктураТаблицДвижений
	)
	
			
	ПроцедурыРасчетаСебестоимостиВыпуска.РасчетПрямыхЗатрат(
		СтруктураШапкиДокумента, 
		СтруктураТаблицДвижений, 
		Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПодразделениям, 
		Истина
		);
			
				
КонецПроцедуры // ВыполняемоеДействиеРасчетЗатратВстречногоВыпускаПоПодразделениям()

// Процедура выполнения действия "Расчет затрат встречного выпуска по переделам".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//	СтруктураТаблицДвижений - Структура - Структура таблиц движений по регистрам
//
Процедура ВыполняемоеДействиеРасчетЗатратВстречногоВыпускаПоПеределам(
	СтруктураШапкиДокумента,
	СтруктураТаблицДвижений
	)
	
			
	ПроцедурыРасчетаСебестоимостиВыпуска.РасчетПрямыхЗатрат(
		СтруктураШапкиДокумента, 
		СтруктураТаблицДвижений, 
		Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПеределам, 
		Истина
		);
			
КонецПроцедуры // ВыполняемоеДействиеРасчетЗатратВстречногоВыпускаПоПеределам()

// Процедура выполнения действия "Списание общехоз. расходов по методу директ-костинг".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
Процедура ВыполняемоеДействиеСписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг(
	СтруктураШапкиДокумента
	)
	

	ПроцедурыРасчетаСебестоимостиВыпуска.РаспределениеРасходовПоПродажам(
		СтруктураШапкиДокумента,
		Перечисления.ХарактерЗатрат.ОбщехозяйственныеРасходы
	);
			
			
КонецПроцедуры // ВыполняемоеДействиеСписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг()

// Процедура выполнения действия "Списание коммерческих расходов".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
Процедура ВыполняемоеДействиеСписаниеКоммерческихРасходов(
	СтруктураШапкиДокумента
	)
	
			
	ПроцедурыРасчетаСебестоимостиВыпуска.РаспределениеРасходовПоПродажам(
		СтруктураШапкиДокумента,
		Перечисления.ХарактерЗатрат.КоммерческиеРасходы
	);
			
КонецПроцедуры // ВыполняемоеДействиеСписаниеКоммерческихРасходов()

// Процедура выполнения действия "Списание коммерческих расходов".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
Процедура ВыполняемоеДействиеСписаниеИздержекОбращения(
	СтруктураШапкиДокумента
	)
	
			
	ПроцедурыРасчетаСебестоимостиВыпуска.РаспределениеРасходовПоПродажам(
		СтруктураШапкиДокумента,
		Перечисления.ХарактерЗатрат.ИздержкиОбращения
	);
	
	// is ЯннуровВФ нач 20141128
	Если ОтражатьВМеждународномУчете Тогда 
		// Расчет себестоимости на единицу продукции 
		//РасчетСебестоимостиНаЕдиницу();
		// Себестоимость
		РасчетСебестоимости();
	КонецЕсли;
	// is ЯннуровВФ кон 20141128

			
КонецПроцедуры // ВыполняемоеДействиеСписаниеИздержекОбращения()

// Процедура выполнения действия "Списание прочих затрат".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости"
//
Процедура ВыполняемоеДействиеСписаниеПрочихЗатрат(
	СтруктураШапкиДокумента
	)
	
	ПроцедурыРасчетаСебестоимостиВыпуска.РаспределениеРасходовПоПродажам(
		СтруктураШапкиДокумента,
		Перечисления.ХарактерЗатрат.Прочие
	);
					
КонецПроцедуры // ВыполняемоеДействиеСписаниеПрочихЗатрат()

// Процедура осуществляет выполнение заданных в документе действий.
//
Процедура ВыполнениеДействийДокумента(
	СтруктураШапкиДокумента,
	СтруктураТаблицДвижений
	)
	
	ДиректКостинг = мУчетнаяПолитика.ДиректКостинг;
	
	//начало изменений БП 14
	//МояОбработка = ВнешниеОбработки.Создать("E:\Work\Aozhiganov\1С\Проект УПП\Себестоимость\РасчетПоЗапросам.epf");
	//МояОбработка.РаспеределитьТЭРЫ(СтруктураШапкиДокумента, СтруктураТаблицДвижений);
	//МояОбработка = Неопределено;
	//конец изменений БП 14 
	
	//МояОбработка = ВнешниеОбработки.Создать("E:\Work\Aozhiganov\1С\Проект УПП\Себестоимость\КорректировкаСтоимости.epf");
	//МояОбработка.КорректировкаЗатрат(СтруктураШапкиДокумента, СтруктураТаблицДвижений);
	//МояОбработка = Неопределено;
	
	  //МояОбработка = ВнешниеОбработки.Создать("E:\Work\Aozhiganov\1С\Проект УПП\Себестоимость\КорректировкаСтоимости.epf");
	  //МояОбработка.ОтнесениеПрямыхНаРБП(СтруктураШапкиДокумента, СтруктураТаблицДвижений);
	  //МояОбработка = Неопределено;
	//конец изменений БП 14 
	
	//конец изменений БП 14 
	
	
	Для Каждого СтрокаДействия Из ВыполняемыеДействия Цикл
		
		Если СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияПроизводственныхРасходов Тогда
				
			ВыполняемоеДействиеРасчетБазыРаспределенияПроизводственныхРасходов(
				СтруктураШапкиДокумента,
				СтруктураТаблицДвижений
				);
				
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеПроизводственныхРасходов Тогда
				
			ВыполняемоеДействиеРаспределениеПроизводственныхРасходов(
				СтруктураШапкиДокумента,
				СтруктураТаблицДвижений
				);
		
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеПродукцииИЗатратПоПеределам Тогда
				
			ВыполняемоеДействиеРаспределениеПродукцииИЗатратПоПеределам(
				СтруктураШапкиДокумента,
				СтруктураТаблицДвижений
				);
						
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПодразделениям Тогда
				
			ВыполняемоеДействиеРасчетПрямыхЗатратПоПодразделениям(
				СтруктураШапкиДокумента,
				СтруктураТаблицДвижений
				);
						
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетПрямыхЗатратПоПеределам Тогда
				
			////начало изменений БП 04
			//МояОбработка = ВнешниеОбработки.Создать("E:\Work\Aozhiganov\1С\Проект УПП\Себестоимость\РасчетПоЗапросам.epf");
			//МояОбработка.ПросмотрРезЗапроса(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
			//МояОбработка = Неопределено;
			
			//начало изменений БП 04    
			
			//+ДС 10.01.14
			ВыполняемоеДействиеРасчетПрямыхЗатратПоПеределам(
				СтруктураШапкиДокумента,
				СтруктураТаблицДвижений,
				СтрокаДействия.ВыполняемоеДействие
				);
			//-ДС
			
			//ВыполняемоеДействиеРасчетПрямыхЗатратПоПеределам(
			//	СтруктураШапкиДокумента,
			//	СтруктураТаблицДвижений
			//	);
				
				Если Не ОтражатьВМеждународномУчете Тогда
				 ПРГ_РасчетСебестоимости.СформироватьБазуПрямыхЗатрат(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
				////начало изменений БП 04 
				//МояОбработка = ВнешниеОбработки.Создать("E:\Work\Aozhiganov\1С\Проект УПП\Себестоимость\ПРГ_РасчетСебестоимости.epf");
				//МояОбработка.СформироватьБазуПрямыхЗатрат(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
				//МояОбработка = Неопределено;
				////конец изменений БП 04 
				 
				 
				Иначе
					ДС_РасчетСебестоимостиМСФО.СформироватьБазуПрямыхЗатрат(СтруктураШапкиДокумента,СтруктураТаблицДвижений);
				КонецЕсли;
				
				
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.ОпределениеПродукцииИсключаемойИзБазыРаспределения Тогда
				
			ВыполняемоеДействиеОпределениеПродукцииИсключаемойИзБазыРаспределения(
				СтруктураШапкиДокумента
				);
				
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетБазыРаспределенияКосвенныхРасходов Тогда
				
			ВыполняемоеДействиеРасчетБазыРаспределенияКосвенныхРасходов(
				СтруктураШапкиДокумента
				);
				
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПодразделениям Тогда
				
			ВыполняемоеДействиеРаспределениеКосвенныхРасходовПоПодразделениям(
				СтруктураШапкиДокумента,
				ДиректКостинг,
				СтруктураТаблицДвижений
				);
				

			
						
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РаспределениеКосвенныхРасходовПоПеределам Тогда
				
			ВыполняемоеДействиеРаспределениеКосвенныхРасходовПоПеределам(
				СтруктураШапкиДокумента,
				ДиректКостинг,
				СтруктураТаблицДвижений
				);
				
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеКосвенныхРасходовНаРБП Тогда
				
			ВыполняемоеДействиеСписаниеКосвенныхРасходовНаРБП(
				СтруктураШапкиДокумента
				);
			
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг Тогда
				
			ВыполняемоеДействиеСписаниеОбщехозяйственныхРасходовПоМетодуДиректКостинг(
				СтруктураШапкиДокумента
				);
						
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеКоммерческихРасходов Тогда
				
			ВыполняемоеДействиеСписаниеКоммерческихРасходов(
				СтруктураШапкиДокумента
				);
						
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеИздержекОбращения Тогда
				
			ВыполняемоеДействиеСписаниеИздержекОбращения(
				СтруктураШапкиДокумента
				);
				
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетЗатратВстречногоВыпускаПоПодразделениям Тогда
				
			ВыполняемоеДействиеРасчетЗатратВстречногоВыпускаПоПодразделениям(
				СтруктураШапкиДокумента,
				СтруктураТаблицДвижений
				);
						
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие 
				= Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.РасчетЗатратВстречногоВыпускаПоПеределам Тогда
				
			ВыполняемоеДействиеРасчетЗатратВстречногоВыпускаПоПеределам(
				СтруктураШапкиДокумента,
				СтруктураТаблицДвижений
				);

			
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеПрочихЗатрат Тогда
			
			ВыполняемоеДействиеСписаниеПрочихЗатрат(
				СтруктураШапкиДокумента
				);
			                                                                                                    
		ИначеЕсли СтрокаДействия.ВыполняемоеДействие = Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СверткаДвиженийПоРегистрам Тогда
			
			ОбщегоНазначения.Сообщение("Сворачивание движений регистров...");
			ПроцедурыРасчетаСебестоимостиВыпуска.СвернутьДвиженияПоРегистрам(СтруктураШапкиДокумента);
			
		КонецЕсли;
		
	КонецЦикла;

	ПРГ_РасчетСебестоимости.ПРГ_ДоРаспределитьБрак(СтруктураШапкиДокумента,,СтруктураТаблицДвижений);
	
	//начало изменений Ожиганов 30.05.2016 выравнивание копеек по НУ, приведение остатков к БУ 
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		ПРГ_ПриравнятьОстаткиНУкБУГП = Ложь;
		Если СтруктураШапкиДокумента.Свойство("ПРГ_ПриравнятьОстаткиНУкБУГП",ПРГ_ПриравнятьОстаткиНУкБУГП)
		   и ПРГ_ПриравнятьОстаткиНУкБУГП Тогда
		   
					Таблица = Новый ТаблицаЗначений;
					Таблица.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
					Таблица.Колонки.Добавить("ДокументОприходования");
				
					КорректировкаСтоимости.ПРГ_ПопытатьсяПриравнятьНУкБУПоТМЦ(НачалоДня(СтруктураШапкиДокумента.мНачДата),КонецДня(СтруктураШапкиДокумента.мКонДата),
					СтруктураШапкиДокумента.Организация,
					Таблица,
					"НалоговыйУчет",
					СтруктураШапкиДокумента.Ссылка,
					Неопределено,
					Неопределено,
					2); //выпускаемые пф
		   
					
				  ПроцедурыРасчетаСебестоимостиВыпуска.ПРГ_ЗакрытиеКосвенныхОбщехозяйственных(
					СтруктураШапкиДокумента, 
					ДиректКостинг, 
					СтруктураТаблицДвижений
					);
					
					
				Если ВыполняемыеДействия.Найти(Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеИздержекОбращения) <>  Неопределено Тогда
						ВыполняемоеДействиеСписаниеИздержекОбращения(
							СтруктураШапкиДокумента);
				КонецЕсли;	
				
				Если ВыполняемыеДействия.Найти(Перечисления.ВыполняемыеОперацииРасчетСебестоимостиВыпуска.СписаниеКоммерческихРасходов) <>  Неопределено Тогда
						ВыполняемоеДействиеСписаниеКоммерческихРасходов(
							СтруктураШапкиДокумента);		
				КонецЕсли;					
		   
		КонецЕсли; 
	КонецЕсли;	
	//конец изменений 
	
КонецПроцедуры // ВыполнениеДействийДокумента()

// is ЯннуровВФ нач 20150120
Процедура ВозвратКорректировокСтоимостиИзЗатрат() Экспорт 
	
	Если Не ОтражатьВМеждународномУчете Тогда 
		Возврат;
	КонецЕсли;
	
	лДата = КонецМесяца(ПериодРегистрации);
	
	Если Движения.НезавершенноеПроизводствоМеждународныйУчет.Количество() > 0 Тогда 
		Движения.НезавершенноеПроизводствоМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ПартииТоваровНаСкладахМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.Международный.Количество() > 0 Тогда 
		Движения.Международный.Записать(Ложь);
	КонецЕсли;
	
	лСчетаОстатков = Новый Массив;
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПолуфабрикатыСобственногоПроизводства);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки);
	
	лСчетаЗатрат = Новый Массив;
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный._ОсновноеПроизводство);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.ВспомогательныеПроизводства);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.ОбслуживающиеПроизводства);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.Подразделение КАК Подразделение,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.СчетУчета КАК СчетУчета,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.Заказ,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.Затрата КАК Затрата,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.ХарактеристикаЗатраты,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.СерияЗатраты,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.КоличествоОстаток КАК Количество,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.СтоимостьОстаток КАК Стоимость
	|ИЗ
	|	РегистрНакопления.НезавершенноеПроизводствоМеждународныйУчет.Остатки(
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И Затрата ССЫЛКА Справочник.Номенклатура) КАК НезавершенноеПроизводствоМеждународныйУчетОстатки
	|ГДЕ
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.КоличествоОстаток = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 100
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура КАК Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Склад,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Заказ,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Качество,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчет.Количество) КАК Количество,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчет.Стоимость) КАК Стоимость,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет КАК КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1 КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2 <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|	КОНЕЦ КАК КорСубконто2,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3 КАК КорСубконто3
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК ПартииТоваровНаСкладахМеждународныйУчет
	|ГДЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Активность = ИСТИНА
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Организация = &Организация
	|	И ПартииТоваровНаСкладахМеждународныйУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета В(&СчетаОстатков)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.КорСчет В(&СчетаЗатрат)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Склад,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Заказ,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Качество,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1,
	|	ВЫБОР
	|		КОГДА ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2 <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчет.Стоимость) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(МАКСИМУМ(НезавершенноеПроизводствоМеждународныйУчет.НомерСтроки), 0) КАК НомерСтроки
	|ИЗ
	|	РегистрНакопления.НезавершенноеПроизводствоМеждународныйУчет КАК НезавершенноеПроизводствоМеждународныйУчет
	|ГДЕ
	|	НезавершенноеПроизводствоМеждународныйУчет.Регистратор = &Регистратор";
	лЗапрос.УстановитьПараметр("Регистратор", Ссылка);
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("СчетаОстатков", лСчетаОстатков);
	лЗапрос.УстановитьПараметр("СчетаЗатрат", лСчетаЗатрат);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации),ВидГраницы.Включая));
	лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
	
	лВыборкаПоЗатратам = лРезультатыЗапроса[0].Выбрать();
	
	лОбороты = лРезультатыЗапроса[1].Выгрузить();
	лОбороты.Индексы.Добавить("Номенклатура, КорСчет, КорСубконто1, КорСубконто2, КорСубконто3");
	
	лНомерСтроки = 1;
	лВыборка = лРезультатыЗапроса[2].Выбрать();
	Если лВыборка.Следующий() Тогда 
		лНомерСтроки = лВыборка.НомерСтроки + 1;
	КонецЕсли;
	
	Пока лВыборкаПоЗатратам.Следующий() Цикл 
		
		лОтбор = Новый Структура;
		лОтбор.Вставить("Номенклатура", лВыборкаПоЗатратам.Затрата);
		лОтбор.Вставить("КорСчет", лВыборкаПоЗатратам.СчетУчета);
		лОтбор.Вставить("КорСубконто1", лВыборкаПоЗатратам.Подразделение);
		лОтбор.Вставить("КорСубконто2", лВыборкаПоЗатратам.НоменклатурнаяГруппа);
		лОтбор.Вставить("КорСубконто3", лВыборкаПоЗатратам.СтатьяЗатрат);
		лСтрокиОборотов = лОбороты.НайтиСтроки(лОтбор);
		Если лСтрокиОборотов.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		лСуммаБаза = 0;
		Для Каждого лСтрокаОборота Из лСтрокиОборотов Цикл 
			лСуммаБаза = лСуммаБаза + лСтрокаОборота.Стоимость;
		КонецЦикла;
		Если лСуммаБаза = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		лСуммаОстаток = лВыборкаПоЗатратам.Стоимость;
		Для Каждого лСтрокаОборота Из лСтрокиОборотов Цикл 
			
			лСумма = Окр(лСтрокаОборота.Стоимость/лСуммаБаза * лВыборкаПоЗатратам.Стоимость, 2);
			
			лДвижениеЗатрат = Движения.НезавершенноеПроизводствоМеждународныйУчет.Добавить();
			ЗаполнитьЗначенияСвойств(лДвижениеЗатрат, лВыборкаПоЗатратам);
			лДвижениеЗатрат.Период = лДата;
			лДвижениеЗатрат.ВидДвижения = ВидДвиженияНакопления.Приход;
			лДвижениеЗатрат.Организация = Организация;
			лДвижениеЗатрат.Количество = 0;
			лДвижениеЗатрат.Стоимость = -лСумма;
			
			лДвижениеПартий = Движения.ПартииТоваровНаСкладахМеждународныйУчет.Добавить();
			ЗаполнитьЗначенияСвойств(лДвижениеПартий, лСтрокаОборота);
			лДвижениеПартий.Период = лДата;
			лДвижениеПартий.ВидДвижения = ВидДвиженияНакопления.Расход;
			лДвижениеПартий.Организация = Организация;
			лДвижениеПартий.Количество = 0;
			лДвижениеПартий.Стоимость = -лСумма;
			лДвижениеПартий.НомерКорСтроки = лНомерСтроки;
			
			лПроводка = Движения.Международный.Добавить();
			лПроводка.Период = лДата;
			лПроводка.Организация = Организация;
			лПроводка.СчетДт = лСтрокаОборота.КорСчет;
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 1, лСтрокаОборота.КорСубконто1);
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 2, лСтрокаОборота.КорСубконто2);
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 3, лСтрокаОборота.КорСубконто3);
			лПроводка.СчетКт = лСтрокаОборота.СчетУчета;
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, 1, лСтрокаОборота.Номенклатура);
			лПроводка.Сумма = -лСумма;
			
			лСуммаОстаток = лСуммаОстаток - лСумма;
			лНомерСтроки = лНомерСтроки + 1;
		КонецЦикла;
		Если лСуммаОстаток <> 0 Тогда 
			лДвижениеЗатрат.Стоимость = лДвижениеЗатрат.Стоимость - лСуммаОстаток;
			лДвижениеПартий.Стоимость = лДвижениеПартий.Стоимость - лСуммаОстаток;
			лПроводка.Сумма = лПроводка.Сумма - лСуммаОстаток;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Движения.НезавершенноеПроизводствоМеждународныйУчет.Количество() > 0 Тогда 
		Движения.НезавершенноеПроизводствоМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ПартииТоваровНаСкладахМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.Международный.Количество() > 0 Тогда 
		Движения.Международный.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры

// is ЯннуровВФ нач 20150120
Процедура ВозвратКорректировокСтоимостиИзБрака() Экспорт 
	
	Если Не ОтражатьВМеждународномУчете Тогда 
		Возврат;
	КонецЕсли;
	
	лДата = КонецМесяца(ПериодРегистрации);
	
	Если Движения.БракВПроизводствеМеждународныйУчет.Количество() > 0 Тогда 
		Движения.БракВПроизводствеМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ПартииТоваровНаСкладахМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.Международный.Количество() > 0 Тогда 
		Движения.Международный.Записать(Ложь);
	КонецЕсли;
	
	лСчетаОстатков = Новый Массив;
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПолуфабрикатыСобственногоПроизводства);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки);
	
	лСчетаЗатрат = Новый Массив;
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.БракВПроизводстве);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БракВПроизводствеМеждународныйУчетОстатки.Подразделение КАК Подразделение,
	|	БракВПроизводствеМеждународныйУчетОстатки.СчетУчета КАК СчетУчета,
	|	БракВПроизводствеМеждународныйУчетОстатки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	БракВПроизводствеМеждународныйУчетОстатки.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	БракВПроизводствеМеждународныйУчетОстатки.Заказ,
	|	БракВПроизводствеМеждународныйУчетОстатки.Продукция,
	|	БракВПроизводствеМеждународныйУчетОстатки.ХарактеристикаПродукции,
	|	БракВПроизводствеМеждународныйУчетОстатки.СерияПродукции,
	|	БракВПроизводствеМеждународныйУчетОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.БракВПроизводствеМеждународныйУчет.Остатки(
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И Продукция ССЫЛКА Справочник.Номенклатура) КАК БракВПроизводствеМеждународныйУчетОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 100
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура КАК Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Склад,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Заказ,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Качество,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчет.Количество) КАК Количество,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчет.Стоимость) КАК Стоимость,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет КАК КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1 КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2 <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|	КОНЕЦ КАК КорСубконто2,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3 КАК КорСубконто3
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК ПартииТоваровНаСкладахМеждународныйУчет
	|ГДЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Активность = ИСТИНА
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Организация = &Организация
	|	И ПартииТоваровНаСкладахМеждународныйУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета В(&СчетаОстатков)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.КорСчет В(&СчетаЗатрат)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Склад,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Заказ,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Качество,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1,
	|	ВЫБОР
	|		КОГДА ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2 <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|	КОНЕЦ,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчет.Стоимость) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(МАКСИМУМ(БракВПроизводствеМеждународныйУчет.НомерСтроки), 0) КАК НомерСтроки
	|ИЗ
	|	РегистрНакопления.БракВПроизводствеМеждународныйУчет КАК БракВПроизводствеМеждународныйУчет
	|ГДЕ
	|	БракВПроизводствеМеждународныйУчет.Регистратор = &Регистратор";
	лЗапрос.УстановитьПараметр("Регистратор", Ссылка);
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("СчетаОстатков", лСчетаОстатков);
	лЗапрос.УстановитьПараметр("СчетаЗатрат", лСчетаЗатрат);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации),ВидГраницы.Включая));
	лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
	
	лВыборкаПоЗатратам = лРезультатыЗапроса[0].Выбрать();
	
	лОбороты = лРезультатыЗапроса[1].Выгрузить();
	лОбороты.Индексы.Добавить("Номенклатура, КорСчет, КорСубконто1, КорСубконто2, КорСубконто3");
	
	лНомерСтроки = 1;
	лВыборка = лРезультатыЗапроса[2].Выбрать();
	Если лВыборка.Следующий() Тогда 
		лНомерСтроки = лВыборка.НомерСтроки + 1;
	КонецЕсли;
	
	Пока лВыборкаПоЗатратам.Следующий() Цикл 
		
		лОтбор = Новый Структура;
		лОтбор.Вставить("Номенклатура", лВыборкаПоЗатратам.Продукция);
		лОтбор.Вставить("КорСчет", лВыборкаПоЗатратам.СчетУчета);
		лОтбор.Вставить("КорСубконто1", лВыборкаПоЗатратам.Подразделение);
		лОтбор.Вставить("КорСубконто2", лВыборкаПоЗатратам.НоменклатурнаяГруппа);
		лОтбор.Вставить("КорСубконто3", лВыборкаПоЗатратам.СтатьяЗатрат);
		лСтрокиОборотов = лОбороты.НайтиСтроки(лОтбор);
		Если лСтрокиОборотов.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		лСуммаБаза = 0;
		Для Каждого лСтрокаОборота Из лСтрокиОборотов Цикл 
			лСуммаБаза = лСуммаБаза + лСтрокаОборота.Стоимость;
		КонецЦикла;
		Если лСуммаБаза = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		лСуммаОстаток = лВыборкаПоЗатратам.Сумма;
		Для Каждого лСтрокаОборота Из лСтрокиОборотов Цикл 
			
			лСумма = Окр(лСтрокаОборота.Стоимость/лСуммаБаза * лВыборкаПоЗатратам.Сумма, 2);
			
			лДвижениеЗатрат = Движения.БракВПроизводствеМеждународныйУчет.Добавить();
			ЗаполнитьЗначенияСвойств(лДвижениеЗатрат, лВыборкаПоЗатратам);
			лДвижениеЗатрат.Период = лДата;
			лДвижениеЗатрат.ВидДвижения = ВидДвиженияНакопления.Приход;
			лДвижениеЗатрат.Организация = Организация;
			лДвижениеЗатрат.Сумма = -лСумма;
			
			лДвижениеПартий = Движения.ПартииТоваровНаСкладахМеждународныйУчет.Добавить();
			ЗаполнитьЗначенияСвойств(лДвижениеПартий, лСтрокаОборота);
			лДвижениеПартий.Период = лДата;
			лДвижениеПартий.ВидДвижения = ВидДвиженияНакопления.Расход;
			лДвижениеПартий.Организация = Организация;
			лДвижениеПартий.Количество = 0;
			лДвижениеПартий.Стоимость = -лСумма;
			лДвижениеПартий.НомерКорСтроки = лНомерСтроки;
			
			лПроводка = Движения.Международный.Добавить();
			лПроводка.Период = лДата;
			лПроводка.Организация = Организация;
			лПроводка.СчетДт = лСтрокаОборота.КорСчет;
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 1, лСтрокаОборота.КорСубконто1);
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 2, лСтрокаОборота.КорСубконто2);
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, 3, лСтрокаОборота.КорСубконто3);
			лПроводка.СчетКт = лСтрокаОборота.СчетУчета;
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, 1, лСтрокаОборота.Номенклатура);
			лПроводка.Сумма = -лСумма;
			
			лСуммаОстаток = лСуммаОстаток - лСумма;
			лНомерСтроки = лНомерСтроки + 1;
		КонецЦикла;
		Если лСуммаОстаток <> 0 Тогда 
			лДвижениеЗатрат.Сумма = лДвижениеЗатрат.Сумма - лСуммаОстаток;
			лДвижениеПартий.Стоимость = лДвижениеПартий.Стоимость - лСуммаОстаток;
			лПроводка.Сумма = лПроводка.Сумма - лСуммаОстаток;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Движения.БракВПроизводствеМеждународныйУчет.Количество() > 0 Тогда 
		Движения.БракВПроизводствеМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ПартииТоваровНаСкладахМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.Международный.Количество() > 0 Тогда 
		Движения.Международный.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры

// is ЯннуровВФ нач 20150604
Процедура РасчетСебестоимости(Номенклатура=Неопределено) Экспорт 
	
	Если Не ОтражатьВМеждународномУчете Тогда 
		Возврат;
	КонецЕсли;
	
	Если Движения.ПартииТоваровНаСкладахМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.НезавершенноеПроизводствоМеждународныйУчет.Количество() > 0 Тогда 
		Движения.НезавершенноеПроизводствоМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ЗатратыМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ЗатратыМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.БракВПроизводствеМеждународныйУчет.Количество() > 0 Тогда 
		Движения.БракВПроизводствеМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ВыпускПродукцииМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ВыпускПродукцииМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ЗатратыНаВыпускПродукцииМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ЗатратыНаВыпускПродукцииМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.Международный.Количество() > 0 Тогда 
		Движения.Международный.Записать(Ложь);
	КонецЕсли;
	
	лСчетаОстатков = Новый Массив;
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПолуфабрикатыСобственногоПроизводства);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПокупныеИзделия);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Международный.Ссылка
	|ИЗ
	|	ПланСчетов.Международный КАК Международный
	|ГДЕ
	|	Международный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Международный.СырьеИМатериалы))";
	лСчетаОстатковДоп = лЗапрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	лКомплектыПродукции = ис_Международный.ПолучитьКомплектыПродукции(Организация, ПериодРегистрации);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура) КАК НоменклатураДт,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотДт) КАК КоличествоДт,
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура) КАК НоменклатураКт,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотКт) КАК КоличествоКт,
	|	СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК Сумма
	|ПОМЕСТИТЬ втВсеКомплектации
	|ИЗ
	|	РегистрБухгалтерии.Международный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			СчетДт В (&СчетаОстатков, &СчетаОстатковДоп),
	|			,
	|			СчетКт В (&СчетаОстатков, &СчетаОстатковДоп),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 <> СубконтоКт1) КАК МеждународныйОборотыДтКт
	|ГДЕ
	|	(МеждународныйОборотыДтКт.СчетДт В ИЕРАРХИИ (&СчетаОстатков)
	|			ИЛИ МеждународныйОборотыДтКт.СчетКт В ИЕРАРХИИ (&СчетаОстатков))
	|	И (МеждународныйОборотыДтКт.СубконтоДт1 В (&КомплектыПродукции)
	|			ИЛИ МеждународныйОборотыДтКт.СубконтоКт1 В (&КомплектыПродукции))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура),
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураДт,
	|	НоменклатураКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрямыеКомплектации.НоменклатураДт КАК НоменклатураДт,
	|	ПрямыеКомплектации.КоличествоДт - ОбратныеКомплектации.КоличествоКт КАК КоличествоДт,
	|	ПрямыеКомплектации.НоменклатураКт КАК НоменклатураКт,
	|	ПрямыеКомплектации.КоличествоКт - ОбратныеКомплектации.КоличествоДт КАК КоличествоКт,
	|	ПрямыеКомплектации.Сумма - ОбратныеКомплектации.Сумма КАК Сумма
	|ИЗ
	|	втВсеКомплектации КАК ПрямыеКомплектации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеКомплектации КАК ОбратныеКомплектации
	|		ПО ПрямыеКомплектации.НоменклатураДт = ОбратныеКомплектации.НоменклатураКт
	|			И ПрямыеКомплектации.НоменклатураКт = ОбратныеКомплектации.НоменклатураДт
	|ГДЕ
	|	ПрямыеКомплектации.КоличествоДт - ОбратныеКомплектации.КоличествоКт > 0
	|	И ПрямыеКомплектации.КоличествоКт - ОбратныеКомплектации.КоличествоДт <> 0
	|	И (ПрямыеКомплектации.НоменклатураДт = &Номенклатура
	|			ИЛИ &Номенклатура = НЕОПРЕДЕЛЕНО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрямыеКомплектации.НоменклатураДт,
	|	ПрямыеКомплектации.КоличествоДт,
	|	ПрямыеКомплектации.НоменклатураКт,
	|	ПрямыеКомплектации.КоличествоКт,
	|	ПрямыеКомплектации.Сумма
	|ИЗ
	|	втВсеКомплектации КАК ПрямыеКомплектации
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВсеКомплектации КАК ОбратныеКомплектации
	|		ПО ПрямыеКомплектации.НоменклатураДт = ОбратныеКомплектации.НоменклатураКт
	|			И ПрямыеКомплектации.НоменклатураКт = ОбратныеКомплектации.НоменклатураДт
	|ГДЕ
	|	ОбратныеКомплектации.КоличествоКт ЕСТЬ NULL 
	|	И (ПрямыеКомплектации.НоменклатураДт = &Номенклатура
	|			ИЛИ &Номенклатура = НЕОПРЕДЕЛЕНО)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураДт,
	|	НоменклатураКт
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОбороты.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Регистратор,
	|			Организация = &Организация
	|				И СчетУчета В (&СчетаОстатков)
	|				И (Номенклатура = &Номенклатура
	|					ИЛИ &Номенклатура = НЕОПРЕДЕЛЕНО)) КАК ПартииТоваровНаСкладахМеждународныйУчетОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчетОбороты.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("СчетаОстатков", лСчетаОстатков);
	лЗапрос.УстановитьПараметр("СчетаОстатковДоп", лСчетаОстатковДоп);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
	лЗапрос.УстановитьПараметр("КомплектыПродукции", лКомплектыПродукции);
	лЗапрос.УстановитьПараметр("Номенклатура", Номенклатура);
	лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
	
	// Полные списки комплектаций и номенклатуры
	лКомплектации = лРезультатыЗапроса[1].Выгрузить();
	лКомплектации.Колонки.Добавить("КтРассчитан");
	лКомплектации.ЗаполнитьЗначения(Ложь, "КтРассчитан");
	лНоменклатура = лРезультатыЗапроса[2].Выгрузить();
	
	// Для частичных расчетов считать комплектующие уже рассчитанными
	Если ЗначениеЗаполнено(Номенклатура) Тогда 
		лКомплектации.ЗаполнитьЗначения(Истина, "КтРассчитан");
	КонецЕсли;
	
	// Циклическая обработка комплектаций
	лНоменклатураЭтапов = Новый Массив;
	Пока лНоменклатура.Количество() > 0
	 Или лКомплектации.Количество() > 0 Цикл 
		
		// Определение списка номенклатуры для расчета
		// В качестве номенклатуры считать комплекты с рассчитанными комплектующими
		лСтрокиКомплектаций = лКомплектации.НайтиСтроки(Новый Структура("КтРассчитан", Истина));
		Для Каждого лСтрокаКомплектации Из лСтрокиКомплектаций Цикл 
			лСтрокаНоменклатуры = лНоменклатура.Добавить();
			лСтрокаНоменклатуры.Номенклатура = лСтрокаКомплектации.НоменклатураДт;
		КонецЦикла;
		лНоменклатура.Свернуть("Номенклатура");
		// Исключить комплекты с нерассчитанными комплектующими из списка номенклатуры
		лСтрокиКомплектаций = лКомплектации.НайтиСтроки(Новый Структура("КтРассчитан", Ложь));
		Для Каждого лСтрокаКомплектации Из лСтрокиКомплектаций Цикл 
			лСтрокаНоменклатуры = лНоменклатура.Найти(лСтрокаКомплектации.НоменклатураДт, "Номенклатура");
			Если лСтрокаНоменклатуры <> Неопределено Тогда 
				лНоменклатура.Удалить(лСтрокаНоменклатуры);
			КонецЕсли;
		КонецЦикла;
		
		// Определение цикла комплектаций
		Если лНоменклатура.Количество() = 0 Тогда 
			лКопияКомплектаций = лКомплектации.Скопировать();
			лКопияКомплектаций.Сортировать("КоличествоДт, КоличествоКт");
			лСтрокаКомплектации = лКопияКомплектаций[0];
			лСтрокаНоменклатуры = лНоменклатура.Добавить();
			лСтрокаНоменклатуры.Номенклатура = лСтрокаКомплектации.НоменклатураДт;
			Сообщить("При расчете себестоимости обнаружен цикл комплектаций. В качестве жертвы выбрана номенклатура <"+лСтрокаНоменклатуры.Номенклатура+"> с кодом <"+СокрЛП(лСтрокаНоменклатуры.Номенклатура.Код)+">", СтатусСообщения.Информация);
		КонецЕсли;
		
		// Сохранение списка номенклатуры
		лНоменклатураЭтапов.Добавить(лНоменклатура.ВыгрузитьКолонку("Номенклатура"));
		
		// Удаление комплектаций с рассчитанными комплектующими
		Для Каждого лСтрокаНоменклатуры Из лНоменклатура Цикл 
			лСтрокиКомплектации = лКомплектации.НайтиСтроки(Новый Структура("НоменклатураДт", лСтрокаНоменклатуры.Номенклатура));
			Для Каждого лСтрокаКомплектации Из лСтрокиКомплектации Цикл 
				лКомплектации.Удалить(лСтрокаКомплектации);
			КонецЦикла;
		КонецЦикла;
		// Пометка рассчитанных комплектующих
		Для Каждого лСтрокаНоменклатуры Из лНоменклатура Цикл 
			лСтрокиКомплектации = лКомплектации.НайтиСтроки(Новый Структура("НоменклатураКт", лСтрокаНоменклатуры.Номенклатура));
			Для Каждого лСтрокаКомплектации Из лСтрокиКомплектации Цикл 
				лСтрокаКомплектации.КтРассчитан = Истина;
			КонецЦикла;
		КонецЦикла;
		лНоменклатура.Очистить();
		
	КонецЦикла;
	
	//>>160516 Степанов обработка ошибки по встречным затратам со счета 25
	ЗапросВВ = Новый Запрос;
	ЗапросВВ.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(КорректировкаВстречногоВыпускаПродукции.Затрата КАК Справочник.Номенклатура) КАК Номенклатура
	|ИЗ
	|	РегистрСведений.КорректировкаВстречногоВыпускаПродукции КАК КорректировкаВстречногоВыпускаПродукции
	|ГДЕ
	|	КорректировкаВстречногоВыпускаПродукции.Период МЕЖДУ &ПериодНачало И &ПериодКонец
	|	И КорректировкаВстречногоВыпускаПродукции.СчетУчета = &СчетУчета25БУ
	|	И КорректировкаВстречногоВыпускаПродукции.ОтражатьВБухгалтерскомУчете";	
	ЗапросВВ.УстановитьПараметр("ПериодНачало",НачалоМесяца(Дата));
	ЗапросВВ.УстановитьПараметр("ПериодКонец",КонецМесяца(Дата));
	ЗапросВВ.УстановитьПараметр("СчетУчета25БУ",ПланыСчетов.Хозрасчетный.НайтиПоКоду("25.01"));
	РезВВ = ЗапросВВ.Выполнить().Выгрузить();
	
	Для Каждого ТекСтрокаВВ из РезВВ цикл
		лИндексСтрокиКомплектации = лКомплектыПродукции.Найти(ТекСтрокаВВ.Номенклатура);
		лКомплектыПродукции.Удалить(лИндексСтрокиКомплектации);
	КонецЦикла;
	//<<
	
	// Повтор расчета себестоимости при изменение стоимости выпуска
	лНомерИтерации = 0;
	лВыпускИзменен = Истина;
	Пока лВыпускИзменен Цикл 
		лНомерИтерации = лНомерИтерации + 1;
		//Сообщить("Итерация №"+лНомерИтерации+" баллансировки себестоимости");
		
		//>>160516 Степанов обработка ошибки по встречным затратам со счета 25
		Если лНомерИтерации = 2 тогда
			Для Каждого ТекСтрокаВВ из РезВВ цикл
				Для Каждого лНоменклатура Из лНоменклатураЭтапов Цикл
					лСтрокаНоменклатуры = лНоменклатура.Найти(ТекСтрокаВВ.Номенклатура);
					Если лСтрокаНоменклатуры <> Неопределено Тогда 
						лНоменклатура.Удалить(лСтрокаНоменклатуры);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;	
		КонецЕсли;	
		//<<
		
		лВыпускИзменен = Ложь;
		
		// Расчет себестоимости по списку номенклатуры
		Для Каждого лНоменклатура Из лНоменклатураЭтапов Цикл 
			РасчетСебестоимостиПоНоменклатуре(лКомплектыПродукции, лНоменклатура, лВыпускИзменен);
		КонецЦикла;
		
	КонецЦикла;
	
	// Расчет постатейной себестоимости по списку номенклатуры
	РасчетСебестоимостиНаЕдиницу();
	Для Каждого лНоменклатура Из лНоменклатураЭтапов Цикл 
		РасчетПостатейнойСебестоимостиПоНоменклатуре(лКомплектыПродукции, лНоменклатура);
	КонецЦикла;
	
КонецПроцедуры

// is ЯннуровВФ нач 20150118
Процедура РасчетСебестоимостиПоНоменклатуре(КомплектыПродукции, Номенклатура, ВыпускИзменен) 
	
	лДата = КонецМесяца(ПериодРегистрации);
	
	лСчетаОстатков = Новый Массив;
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПолуфабрикатыСобственногоПроизводства);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПокупныеИзделия);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Международный.Ссылка
	|ИЗ
	|	ПланСчетов.Международный КАК Международный
	|ГДЕ
	|	Международный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Международный.СырьеИМатериалы))";
	лСчетаОстатковДоп = лЗапрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	лСчетаЗатрат = Новый Массив;
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный._ОсновноеПроизводство);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.ВспомогательныеПроизводства);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.ОбщепроизводственныеРасходы);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.АдминистративныеРасходы);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.БракВПроизводстве);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.ОбслуживающиеПроизводства);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный._КоммерческиеРасходы);
	
	лСчетаЗатратПеремещений = Новый Массив;
	лСчетаЗатратПеремещений.Добавить(ПланыСчетов.Международный._ОсновноеПроизводство);
	лСчетаЗатратПеремещений.Добавить(ПланыСчетов.Международный.ВспомогательныеПроизводства);
	лСчетаЗатратПеремещений.Добавить(ПланыСчетов.Международный.ОбщепроизводственныеРасходы);
	лСчетаЗатратПеремещений.Добавить(ПланыСчетов.Международный.БракВПроизводстве);
	лСчетаЗатратПеремещений.Добавить(ПланыСчетов.Международный.ОбслуживающиеПроизводства);
	
	лВидНоменклатуры43 = Справочники.ВидыНоменклатуры.НайтиПоКоду("000000003");
	лВидНоменклатуры21 = Справочники.ВидыНоменклатуры.НайтиПоКоду("000000004");
	/// Кунов О.В., 24.11.2016 - 
	лВидНоменклатуры21М = Справочники.ВидыНоменклатуры.НайтиПоКоду("000000043");
	///
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.СтоимостьОстаток) КАК Сумма
	|ПОМЕСТИТЬ втНачальныйОстаток
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)
	|				И СчетУчета В (&СчетаОстатков)) КАК ПартииТоваровНаСкладахМеждународныйУчетОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.СтоимостьОстаток) КАК Сумма
	|ПОМЕСТИТЬ втКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)
	|				И СчетУчета В (&СчетаОстатков)) КАК ПартииТоваровНаСкладахМеждународныйУчетОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МеждународныйОстатки.Субконто1 КАК Номенклатура,
	|	СУММА(МеждународныйОстатки.СуммаОстаток) КАК Сумма
	|ПОМЕСТИТЬ втКонечныйОстатокПоПроводкам
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&ОкончаниеПериодаСГраницей,
	|			Счет В (&СчетаОстатков),
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&Номенклатура)) КАК МеждународныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйОстатки.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВыпускПродукцииМеждународныйУчетОбороты.Продукция КАК Номенклатура,
	|	СУММА(ВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот) КАК Количество,
	|	СУММА(ВыпускПродукцииМеждународныйУчетОбороты.СтоимостьОборот) КАК Сумма
	|ПОМЕСТИТЬ втВыпускПродукции
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			Организация = &Организация
	|				И Продукция В (&Номенклатура)) КАК ВыпускПродукцииМеждународныйУчетОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукцииМеждународныйУчетОбороты.Продукция
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотДт) КАК Количество,
	|	СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК Сумма
	|ПОМЕСТИТЬ втПокупки
	|ИЗ
	|	РегистрБухгалтерии.Международный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			СчетДт В (&СчетаОстатков),
	|			,
	|			СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Международный.РасчетыСПоставщикамиИПодрядчикамиТекущие)),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 В (&Номенклатура)) КАК МеждународныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура КАК Номенклатура,
	|	НАЧАЛОПЕРИОДА(ПартииТоваровНаСкладахМеждународныйУчет.ДокументДвиженияПериод, МЕСЯЦ) КАК МесяцРеализации,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета КАК СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет КАК КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1 КАК КорСубконто1,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2 КАК КорСубконто2,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3 КАК КорСубконто3,
	|	СУММА(-ПартииТоваровНаСкладахМеждународныйУчет.Количество) КАК Количество,
	|	СУММА(-ПартииТоваровНаСкладахМеждународныйУчет.Стоимость) КАК Сумма
	|ПОМЕСТИТЬ втВозвраты
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК ПартииТоваровНаСкладахМеждународныйУчет
	|ГДЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Активность = ИСТИНА
	|	И ПартииТоваровНаСкладахМеждународныйУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Организация = &Организация
	|	И ПартииТоваровНаСкладахМеждународныйУчет.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура,
	|	НАЧАЛОПЕРИОДА(ПартииТоваровНаСкладахМеждународныйУчет.ДокументДвиженияПериод, МЕСЯЦ),
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотДт) КАК Количество,
	|	СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК Сумма
	|ПОМЕСТИТЬ втИзлишки
	|ИЗ
	|	РегистрБухгалтерии.Международный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			СчетДт В (&СчетаОстатков),
	|			,
	|			СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Международный.ПрочиеВнереализационныеДоходы)),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 В (&Номенклатура)) КАК МеждународныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура) КАК НоменклатураДт,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотДт) КАК КоличествоДт,
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура) КАК НоменклатураКт,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотКт) КАК КоличествоКт,
	|	СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК Сумма
	|ПОМЕСТИТЬ втВсеКомплектации
	|ИЗ
	|	РегистрБухгалтерии.Международный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			СчетДт В (&СчетаОстатков, &СчетаОстатковДоп),
	|			,
	|			СчетКт В (&СчетаОстатков, &СчетаОстатковДоп),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 <> СубконтоКт1
	|				И (СубконтоДт1 В (&КомплектыПродукции)
	|					ИЛИ СубконтоКт1 В (&КомплектыПродукции))) КАК МеждународныйОборотыДтКт
	|ГДЕ
	|	(МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков)
	|			ИЛИ МеждународныйОборотыДтКт.СчетКт В (&СчетаОстатков))
	|	И (МеждународныйОборотыДтКт.СубконтоДт1 В (&КомплектыПродукции)
	|			ИЛИ МеждународныйОборотыДтКт.СубконтоКт1 В (&КомплектыПродукции))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура),
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураДт,
	|	НоменклатураКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрямыеКомплектации.НоменклатураДт КАК НоменклатураДт,
	|	ПрямыеКомплектации.КоличествоДт - ОбратныеКомплектации.КоличествоКт КАК КоличествоДт,
	|	ПрямыеКомплектации.НоменклатураКт КАК НоменклатураКт,
	|	ПрямыеКомплектации.КоличествоКт - ОбратныеКомплектации.КоличествоДт КАК КоличествоКт,
	|	ПрямыеКомплектации.Сумма - ОбратныеКомплектации.Сумма КАК Сумма
	|ПОМЕСТИТЬ втКомплектации
	|ИЗ
	|	втВсеКомплектации КАК ПрямыеКомплектации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеКомплектации КАК ОбратныеКомплектации
	|		ПО ПрямыеКомплектации.НоменклатураДт = ОбратныеКомплектации.НоменклатураКт
	|			И ПрямыеКомплектации.НоменклатураКт = ОбратныеКомплектации.НоменклатураДт
	|ГДЕ
	|	ПрямыеКомплектации.НоменклатураДт В(&Номенклатура)
	|	И ПрямыеКомплектации.КоличествоДт - ОбратныеКомплектации.КоличествоКт > 0
	|	И ПрямыеКомплектации.КоличествоКт - ОбратныеКомплектации.КоличествоДт <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрямыеКомплектации.НоменклатураДт,
	|	ПрямыеКомплектации.КоличествоДт,
	|	ПрямыеКомплектации.НоменклатураКт,
	|	ПрямыеКомплектации.КоличествоКт,
	|	ПрямыеКомплектации.Сумма
	|ИЗ
	|	втВсеКомплектации КАК ПрямыеКомплектации
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВсеКомплектации КАК ОбратныеКомплектации
	|		ПО ПрямыеКомплектации.НоменклатураДт = ОбратныеКомплектации.НоменклатураКт
	|			И ПрямыеКомплектации.НоменклатураКт = ОбратныеКомплектации.НоменклатураДт
	|ГДЕ
	|	ПрямыеКомплектации.НоменклатураДт В(&Номенклатура)
	|	И ОбратныеКомплектации.КоличествоКт ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	втКомплектации.НоменклатураКт КАК НоменклатураКт
	|ПОМЕСТИТЬ втКомплектующие
	|ИЗ
	|	втКомплектации КАК втКомплектации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.СтоимостьОстаток) КАК СтоимостьОстаток
	|ПОМЕСТИТЬ втОстаткиКомплектующих
	|ИЗ
	|	втКомплектующие КАК втКомплектующие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(&ОкончаниеПериодаСГраницей, Организация = &Организация) КАК ПартииТоваровНаСкладахМеждународныйУчетОстатки
	|		ПО втКомплектующие.НоменклатураКт = ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОбороты.КоличествоРасход) КАК КоличествоРасход,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОбороты.СтоимостьРасход) КАК СтоимостьРасход
	|ПОМЕСТИТЬ втОборотыКомплектующих
	|ИЗ
	|	втКомплектующие КАК втКомплектующие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Обороты(&НачалоПериода, &ОкончаниеПериода, Период, Организация = &Организация) КАК ПартииТоваровНаСкладахМеждународныйУчетОбороты
	|		ПО втКомплектующие.НоменклатураКт = ПартииТоваровНаСкладахМеждународныйУчетОбороты.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчетОбороты.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МеждународныйОборотыДтКт.СубконтоКт1 КАК Номенклатура,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотКт) КАК Количество,
	|	СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК Сумма
	|ПОМЕСТИТЬ втЗатраты
	|ИЗ
	|	РегистрБухгалтерии.Международный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			СчетДт В (&СчетаЗатрат),
	|			,
	|			СчетКт В (&СчетаОстатков),
	|			,
	|			Организация = &Организация
	|				И СубконтоКт1 В (&Номенклатура)) КАК МеждународныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйОборотыДтКт.СубконтоКт1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Движения.Номенклатура КАК Номенклатура,
	|	СУММА(Движения.Количество) КАК Количество,
	|	СУММА(Движения.Сумма) КАК Сумма,
	|	СУММА(Движения.КоличествоБезЗатрат) КАК КоличествоБезЗатрат,
	|	СУММА(Движения.СуммаБезЗатрат) КАК СуммаБезЗатрат,
	|	СУММА(Движения.КоличествоКонечное) КАК КоличествоКонечное,
	|	СУММА(Движения.СуммаКонечное) КАК СуммаКонечное,
	|	СУММА(Движения.СуммаКонечноеПоПроводкам) КАК СуммаКонечноеПоПроводкам
	|ПОМЕСТИТЬ втОбщийПриход
	|ИЗ
	|	(ВЫБРАТЬ
	|		втНачальныйОстаток.Номенклатура КАК Номенклатура,
	|		втНачальныйОстаток.Количество КАК Количество,
	|		втНачальныйОстаток.Сумма КАК Сумма,
	|		втНачальныйОстаток.Количество КАК КоличествоБезЗатрат,
	|		втНачальныйОстаток.Сумма КАК СуммаБезЗатрат,
	|		0 КАК КоличествоКонечное,
	|		0 КАК СуммаКонечное,
	|		0 КАК СуммаКонечноеПоПроводкам
	|	ИЗ
	|		втНачальныйОстаток КАК втНачальныйОстаток
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втВыпускПродукции.Номенклатура,
	|		втВыпускПродукции.Количество,
	|		втВыпускПродукции.Сумма,
	|		втВыпускПродукции.Количество,
	|		втВыпускПродукции.Сумма,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		втВыпускПродукции КАК втВыпускПродукции
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втПокупки.Номенклатура,
	|		втПокупки.Количество,
	|		втПокупки.Сумма,
	|		втПокупки.Количество,
	|		втПокупки.Сумма,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		втПокупки КАК втПокупки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втВозвраты.Номенклатура,
	|		втВозвраты.Количество,
	|		втВозвраты.Сумма,
	|		втВозвраты.Количество,
	|		втВозвраты.Сумма,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		втВозвраты КАК втВозвраты
	|	ГДЕ
	|		втВозвраты.МесяцРеализации < &НачалоПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втИзлишки.Номенклатура,
	|		втИзлишки.Количество,
	|		втИзлишки.Сумма,
	|		втИзлишки.Количество,
	|		втИзлишки.Сумма,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		втИзлишки КАК втИзлишки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втКомплектации.НоменклатураДт,
	|		втКомплектации.КоличествоДт,
	|		ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА втОстаткиКомплектующих.КоличествоОстаток <> 0
	|					ТОГДА втОстаткиКомплектующих.СтоимостьОстаток / втОстаткиКомплектующих.КоличествоОстаток
	|				КОГДА втОборотыКомплектующих.КоличествоРасход <> 0
	|					ТОГДА втОборотыКомплектующих.СтоимостьРасход / втОборотыКомплектующих.КоличествоРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ * втКомплектации.КоличествоКт КАК ЧИСЛО(15, 2)),
	|		втКомплектации.КоличествоДт,
	|		ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА втОстаткиКомплектующих.КоличествоОстаток <> 0
	|					ТОГДА втОстаткиКомплектующих.СтоимостьОстаток / втОстаткиКомплектующих.КоличествоОстаток
	|				КОГДА втОборотыКомплектующих.КоличествоРасход <> 0
	|					ТОГДА втОборотыКомплектующих.СтоимостьРасход / втОборотыКомплектующих.КоличествоРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ * втКомплектации.КоличествоКт КАК ЧИСЛО(15, 2)),
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		втКомплектации КАК втКомплектации
	|			ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиКомплектующих КАК втОстаткиКомплектующих
	|			ПО втКомплектации.НоменклатураКт = втОстаткиКомплектующих.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ втОборотыКомплектующих КАК втОборотыКомплектующих
	|			ПО втКомплектации.НоменклатураКт = втОборотыКомплектующих.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втЗатраты.Номенклатура,
	|		0,
	|		0,
	|		-втЗатраты.Количество,
	|		-втЗатраты.Сумма,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		втЗатраты КАК втЗатраты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втКонечныйОстаток.Номенклатура,
	|		0,
	|		0,
	|		0,
	|		0,
	|		втКонечныйОстаток.Количество,
	|		втКонечныйОстаток.Сумма,
	|		0
	|	ИЗ
	|		втКонечныйОстаток КАК втКонечныйОстаток
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втКонечныйОстатокПоПроводкам.Номенклатура,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		втКонечныйОстатокПоПроводкам.Сумма
	|	ИЗ
	|		втКонечныйОстатокПоПроводкам КАК втКонечныйОстатокПоПроводкам) КАК Движения
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втОбщийПриход.Номенклатура КАК Номенклатура,
	|	втОбщийПриход.Количество,
	|	втОбщийПриход.Сумма,
	|	втОбщийПриход.КоличествоБезЗатрат,
	|	втОбщийПриход.СуммаБезЗатрат,
	|	втОбщийПриход.КоличествоКонечное,
	|	втОбщийПриход.СуммаКонечное,
	|	втОбщийПриход.СуммаКонечноеПоПроводкам
	|ИЗ
	|	втОбщийПриход КАК втОбщийПриход
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Организация,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Склад,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.ДокументОприходования,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Заказ,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Качество,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.КоличествоОстаток,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.СтоимостьОстаток,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.СтоимостьОстаток КАК НоваяСтоимостьОстаток
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И СчетУчета В (&СчетаОстатков, &СчетаОстатковДоп)
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						втОбщийПриход.Номенклатура
	|					ИЗ
	|						втОбщийПриход КАК втОбщийПриход)) КАК ПартииТоваровНаСкладахМеждународныйУчетОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МеждународныйОборотыДтКт.СчетДт КАК СчетДт,
	|	МеждународныйОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
	|	МеждународныйОборотыДтКт.СубконтоДт2 КАК СубконтоДт2,
	|	МеждународныйОборотыДтКт.СубконтоДт3 КАК СубконтоДт3,
	|	МеждународныйОборотыДтКт.СчетКт,
	|	МеждународныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|	МеждународныйОборотыДтКт.СубконтоКт2,
	|	МеждународныйОборотыДтКт.СубконтоКт3,
	|	МеждународныйОборотыДтКт.Порядок,
	|	МеждународныйОборотыДтКт.Перемещение,
	|	МеждународныйОборотыДтКт.КоличествоДт,
	|	МеждународныйОборотыДтКт.КоличествоКт,
	|	МеждународныйОборотыДтКт.Сумма,
	|	МеждународныйОборотыДтКт.НоваяСумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		МеждународныйОборотыДтКт.СчетДт КАК СчетДт,
	|		ЕСТЬNULL(МеждународныйОборотыДтКт.СубконтоДт1, НЕОПРЕДЕЛЕНО) КАК СубконтоДт1,
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков, &СчетаОстатковДоп)
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				КОГДА МеждународныйОборотыДтКт.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Международный.ПрочиеВнереализационныеДоходы), ЗНАЧЕНИЕ(ПланСчетов.Международный.ПрочиеВнереализационныеРасходы))
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				ИНАЧЕ МеждународныйОборотыДтКт.СубконтоДт2
	|			КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК СубконтоДт2,
	|		ЕСТЬNULL(МеждународныйОборотыДтКт.СубконтоДт3, НЕОПРЕДЕЛЕНО) КАК СубконтоДт3,
	|		МеждународныйОборотыДтКт.СчетКт КАК СчетКт,
	|		МеждународныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СубконтоКт2,
	|		НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|		ВЫБОР
	|			КОГДА МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков, &СчетаОстатковДоп)
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ КАК Порядок,
	|		ВЫБОР
	|			КОГДА МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков, &СчетаОстатковДоп)
	|					И МеждународныйОборотыДтКт.СубконтоДт1 = МеждународныйОборотыДтКт.СубконтоКт1
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК Перемещение,
	|		СУММА(МеждународныйОборотыДтКт.КоличествоОборотДт) КАК КоличествоДт,
	|		СУММА(МеждународныйОборотыДтКт.КоличествоОборотКт) КАК КоличествоКт,
	|		СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК Сумма,
	|		СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК НоваяСумма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МеждународныйОборотыДтКт.СчетДт КАК СчетДт,
	|			МеждународныйОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
	|			МеждународныйОборотыДтКт.СубконтоДт2 КАК СубконтоДт2,
	|			МеждународныйОборотыДтКт.СубконтоДт3 КАК СубконтоДт3,
	|			МеждународныйОборотыДтКт.СчетКт КАК СчетКт,
	|			МеждународныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|			ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СубконтоКт2,
	|			НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|			МеждународныйОборотыДтКт.КоличествоОборотДт КАК КоличествоОборотДт,
	|			МеждународныйОборотыДтКт.КоличествоОборотКт КАК КоличествоОборотКт,
	|			МеждународныйОборотыДтКт.СуммаОборот КАК СуммаОборот
	|		ИЗ
	|			РегистрБухгалтерии.Международный.ОборотыДтКт(
	|					&НачалоПериода,
	|					&ОкончаниеПериода,
	|					Период,
	|					,
	|					,
	|					СчетКт В (&СчетаОстатков, &СчетаОстатковДоп),
	|					,
	|					Организация = &Организация
	|						И СубконтоКт1 В
	|							(ВЫБРАТЬ
	|								втОбщийПриход.Номенклатура
	|							ИЗ
	|								втОбщийПриход КАК втОбщийПриход)) КАК МеждународныйОборотыДтКт
	|		ГДЕ
	|			(МеждународныйОборотыДтКт.СчетДт <> МеждународныйОборотыДтКт.СчетКт
	|					ИЛИ МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков, &СчетаОстатковДоп)
	|						И МеждународныйОборотыДтКт.СубконтоДт1 <> МеждународныйОборотыДтКт.СубконтоКт1)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			МеждународныйОборотыДтКт.СчетКт,
	|			МеждународныйОборотыДтКт.СубконтоКт1,
	|			МеждународныйОборотыДтКт.СубконтоКт2,
	|			МеждународныйОборотыДтКт.СубконтоКт3,
	|			МеждународныйОборотыДтКт.СчетДт,
	|			МеждународныйОборотыДтКт.СубконтоДт1,
	|			ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО,
	|			-МеждународныйОборотыДтКт.КоличествоОборотКт,
	|			-МеждународныйОборотыДтКт.КоличествоОборотДт,
	|			-МеждународныйОборотыДтКт.СуммаОборот
	|		ИЗ
	|			РегистрБухгалтерии.Международный.ОборотыДтКт(
	|					&НачалоПериода,
	|					&ОкончаниеПериода,
	|					Период,
	|					СчетДт В (&СчетаОстатков, &СчетаОстатковДоп),
	|					,
	|					СчетКт В (&СчетаОстатков, &СчетаОстатковДоп),
	|					,
	|					Организация = &Организация
	|						И СубконтоДт1 В
	|							(ВЫБРАТЬ
	|								втОбщийПриход.Номенклатура
	|							ИЗ
	|								втОбщийПриход КАК втОбщийПриход)) КАК МеждународныйОборотыДтКт
	|		ГДЕ
	|			МеждународныйОборотыДтКт.СубконтоДт1 <> МеждународныйОборотыДтКт.СубконтоКт1
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			втВозвраты.КорСчет,
	|			втВозвраты.КорСубконто1,
	|			втВозвраты.КорСубконто2,
	|			втВозвраты.КорСубконто3,
	|			втВозвраты.СчетУчета,
	|			втВозвраты.Номенклатура,
	|			ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО,
	|			0,
	|			втВозвраты.Количество,
	|			втВозвраты.Сумма
	|		ИЗ
	|			втВозвраты КАК втВозвраты) КАК МеждународныйОборотыДтКт
	|			ЛЕВОЕ СОЕДИНЕНИЕ втВыпускПродукции КАК втВыпускПродукции
	|			ПО МеждународныйОборотыДтКт.СубконтоКт1 = втВыпускПродукции.Номенклатура
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МеждународныйОборотыДтКт.СчетДт,
	|		ЕСТЬNULL(МеждународныйОборотыДтКт.СубконтоДт1, НЕОПРЕДЕЛЕНО),
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков, &СчетаОстатковДоп)
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				КОГДА МеждународныйОборотыДтКт.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Международный.ПрочиеВнереализационныеДоходы), ЗНАЧЕНИЕ(ПланСчетов.Международный.ПрочиеВнереализационныеРасходы))
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				ИНАЧЕ МеждународныйОборотыДтКт.СубконтоДт2
	|			КОНЕЦ, НЕОПРЕДЕЛЕНО),
	|		ЕСТЬNULL(МеждународныйОборотыДтКт.СубконтоДт3, НЕОПРЕДЕЛЕНО),
	|		МеждународныйОборотыДтКт.СчетКт,
	|		МеждународныйОборотыДтКт.СубконтоКт1,
	|		ВЫБОР
	|			КОГДА МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков, &СчетаОстатковДоп)
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков, &СчетаОстатковДоп)
	|					И МеждународныйОборотыДтКт.СубконтоДт1 = МеждународныйОборотыДтКт.СубконтоКт1
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК МеждународныйОборотыДтКт
	|ГДЕ
	|	(МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков, &СчетаОстатковДоп)
	|				И МеждународныйОборотыДтКт.СубконтоДт1 <> МеждународныйОборотыДтКт.СубконтоКт1
	|				И МеждународныйОборотыДтКт.КоличествоКт > 0
	|			ИЛИ НЕ МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков, &СчетаОстатковДоп)
	|			ИЛИ МеждународныйОборотыДтКт.СубконтоДт1 = МеждународныйОборотыДтКт.СубконтоКт1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СубконтоКт1,
	|	СчетДт,
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВыпускПродукцииМеждународныйУчетОбороты.Подразделение КАК Подразделение,
	|	ВыпускПродукцииМеждународныйУчетОбороты.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВыпускПродукцииМеждународныйУчетОбороты.Продукция КАК Продукция,
	|	ВыпускПродукцииМеждународныйУчетОбороты.Продукция.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции,
	|	ВыпускПродукцииМеждународныйУчетОбороты.СерияПродукции,
	|	ВыпускПродукцииМеждународныйУчетОбороты.Спецификация,
	|	ВыпускПродукцииМеждународныйУчетОбороты.Заказ,
	|	ВыпускПродукцииМеждународныйУчетОбороты.ДокументВыпуска,
	|	ВыпускПродукцииМеждународныйУчетОбороты.Качество,
	|	ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка) КАК СчетУчета,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СтатьяЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК Затрата,
	|	ВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот КАК Количество,
	|	ВыпускПродукцииМеждународныйУчетОбороты.СтоимостьОборот КАК Сумма,
	|	ВыпускПродукцииМеждународныйУчетОбороты.СтоимостьОборот КАК НоваяСумма
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			,
	|			Организация = &Организация
	|				И Продукция.ВидНоменклатуры В (&ВидНоменклатуры43, &ВидНоменклатуры21, &ВидНоменклатуры21М)) КАК ВыпускПродукцииМеждународныйУчетОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.Подразделение,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.НоменклатурнаяГруппа,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.Продукция,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.Продукция.ВидНоменклатуры,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.СерияПродукции,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.Спецификация,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.Заказ,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.ДокументВыпуска,
	|	ЗНАЧЕНИЕ(Справочник.Качество.Новый),
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.СчетУчета,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.СтатьяЗатрат,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.Затрата,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.СуммаОборот,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.СуммаОборот
	|ИЗ
	|	РегистрНакопления.ЗатратыНаВыпускПродукцииМеждународныйУчет.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			,
	|			Организация = &Организация
	/// Кунов О.В., 24.11.2016 - 
	|				И Продукция.ВидНоменклатуры В (&ВидНоменклатуры43, &ВидНоменклатуры21, &ВидНоменклатуры21М)
	///
	|				И Затрата <> НЕОПРЕДЕЛЕНО) КАК ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Подразделение,
	|	НоменклатурнаяГруппа,
	|	Продукция
	|АВТОУПОРЯДОЧИВАНИЕ";
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("СчетаОстатков", лСчетаОстатков);
	лЗапрос.УстановитьПараметр("СчетаОстатковДоп", лСчетаОстатковДоп);
	лЗапрос.УстановитьПараметр("СчетаЗатрат", лСчетаЗатрат);
	лЗапрос.УстановитьПараметр("СчетаЗатратПеремещений", лСчетаЗатратПеремещений);
	лЗапрос.УстановитьПараметр("Номенклатура", Номенклатура);
	лЗапрос.УстановитьПараметр("КомплектыПродукции", КомплектыПродукции);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации),ВидГраницы.Включая));
	лЗапрос.УстановитьПараметр("ВидНоменклатуры43", лВидНоменклатуры43);
	лЗапрос.УстановитьПараметр("ВидНоменклатуры21", лВидНоменклатуры21);
	/// Кунов О.В., 24.11.2016 - 
	лЗапрос.УстановитьПараметр("ВидНоменклатуры21М", лВидНоменклатуры21М);
	///
	лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
	
	лВсеПартии = лРезультатыЗапроса[15].Выгрузить();
	лВсеПартии.Индексы.Добавить("Номенклатура");
	
	лВсеПроводки = лРезультатыЗапроса[16].Выгрузить();
	лВсеПроводки.Индексы.Добавить("СубконтоКт1");
	
	лВсеВыпуск = лРезультатыЗапроса[17].Выгрузить();
	лВсеВыпуск.Индексы.Добавить("Продукция");
	лВсеВыпуск.Индексы.Добавить("Подразделение, НоменклатурнаяГруппа");
	лВсеВыпуск.Индексы.Добавить("НоменклатурнаяГруппа");
	
	лПартии = Новый ТаблицаЗначений;
	Для Каждого лКолонка Из лВсеПартии.Колонки Цикл 
		лПартии.Колонки.Добавить(лКолонка.Имя);
	КонецЦикла;
	лПартииНаСкладах = Новый ТаблицаЗначений;
	лПартииНаСкладах.Колонки.Добавить("Номенклатура");
	лПартииНаСкладах.Колонки.Добавить("СчетУчета");
	лПартииНаСкладах.Колонки.Добавить("Склад");
	лПартииНаСкладах.Колонки.Добавить("Качество");
	лПартииНаСкладах.Колонки.Добавить("СтатьяЗатрат");
	лПартииНаСкладах.Колонки.Добавить("КорСчет");
	лПартииНаСкладах.Колонки.Добавить("КорСубконто1");
	лПартииНаСкладах.Колонки.Добавить("КорСубконто2");
	лПартииНаСкладах.Колонки.Добавить("КорСубконто3");
	лПартииНаСкладах.Колонки.Добавить("Количество");
	лПартииНаСкладах.Колонки.Добавить("Сумма");
	лПартииНаСкладах.Колонки.Добавить("НоваяСумма");
	лНЗП = Новый ТаблицаЗначений;
	лНЗП.Колонки.Добавить("Подразделение");
	лНЗП.Колонки.Добавить("СчетУчета");
	лНЗП.Колонки.Добавить("СтатьяЗатрат");
	лНЗП.Колонки.Добавить("НоменклатурнаяГруппа");
	лНЗП.Колонки.Добавить("Затрата");
	лНЗП.Колонки.Добавить("Количество");
	лНЗП.Колонки.Добавить("Сумма");
	лНЗП.Колонки.Добавить("НоваяСумма");
	лЗатраты = Новый ТаблицаЗначений;
	лЗатраты.Колонки.Добавить("Подразделение");
	лЗатраты.Колонки.Добавить("СчетУчета");
	лЗатраты.Колонки.Добавить("СтатьяЗатрат");
	лЗатраты.Колонки.Добавить("НоменклатурнаяГруппа");
	лЗатраты.Колонки.Добавить("Сумма");
	лЗатраты.Колонки.Добавить("НоваяСумма");
	лБрак = Новый ТаблицаЗначений;
	лБрак.Колонки.Добавить("Подразделение");
	лБрак.Колонки.Добавить("СчетУчета");
	лБрак.Колонки.Добавить("СтатьяЗатрат");
	лБрак.Колонки.Добавить("НоменклатурнаяГруппа");
	лБрак.Колонки.Добавить("Продукция");
	лБрак.Колонки.Добавить("Сумма");
	лБрак.Колонки.Добавить("НоваяСумма");
	лВыпуск = Новый ТаблицаЗначений;
	Для Каждого лКолонка Из лВсеВыпуск.Колонки Цикл 
		лВыпуск.Колонки.Добавить(лКолонка.Имя);
	КонецЦикла;
	лПроводки = Новый ТаблицаЗначений;
	Для Каждого лКолонка Из лВсеПроводки.Колонки Цикл 
		лПроводки.Колонки.Добавить(лКолонка.Имя);
	КонецЦикла;
	
	лВыборка = лРезультатыЗапроса[14].Выбрать();
	Пока лВыборка.Следующий() Цикл 
		Если лВыборка.Количество <> 0 Тогда 
			лСебестоимость = лВыборка.Сумма / лВыборка.Количество;
		ИначеЕсли лВыборка.КоличествоБезЗатрат <> 0 Тогда 
			лСебестоимость = лВыборка.СуммаБезЗатрат / лВыборка.КоличествоБезЗатрат;
		ИначеЕсли лВыборка.КоличествоКонечное <> 0 Тогда 
			лСебестоимость = лВыборка.СуммаКонечное / лВыборка.КоличествоКонечное;
		Иначе
			лСебестоимость = 0;
		КонецЕсли;
		лНоваяСуммаКонечное = Окр(лВыборка.КоличествоКонечное*лСебестоимость, 2);
		лСуммаРазница = лНоваяСуммаКонечное - лВыборка.СуммаКонечное;
		лСуммаРазницаПоПроводкам = лНоваяСуммаКонечное - лВыборка.СуммаКонечноеПоПроводкам;
		
		лПартии.Очистить();
		лСтрокиПартий = лВсеПартии.НайтиСтроки(Новый Структура("Номенклатура", лВыборка.Номенклатура));
		Для Каждого лСтрокаПартии Из лСтрокиПартий Цикл 
			ЗаполнитьЗначенияСвойств(лПартии.Добавить(), лСтрокаПартии);
		КонецЦикла;
		лПроводки.Очистить();
		лСтрокиПроводок = лВсеПроводки.НайтиСтроки(Новый Структура("СубконтоКт1", лВыборка.Номенклатура));
		Для Каждого лСтрокаПроводки Из лСтрокиПроводок Цикл 
			ЗаполнитьЗначенияСвойств(лПроводки.Добавить(), лСтрокаПроводки);
		КонецЦикла;
		
		// Партии товаров на складах
		лСуммаОстаток = лСуммаРазница;
		Для Каждого лСтрокаПартии Из лПартии Цикл 
			лСтрокаПартии.НоваяСтоимостьОстаток = Окр(лСтрокаПартии.КоличествоОстаток*лСебестоимость, 2);
			лСуммаОстаток = лСуммаОстаток - (лСтрокаПартии.НоваяСтоимостьОстаток-лСтрокаПартии.СтоимостьОстаток);
		КонецЦикла;
		лПослСтрокаПартии = Неопределено;
		Если лСуммаОстаток <> 0 Тогда 
			лСуммаОстаток1 = лСуммаОстаток;
			лСуммаБаза = лПартии.Итог("НоваяСтоимостьОстаток");
			Если лСуммаБаза <> 0 Тогда 
				Для Каждого лСтрокаПартии Из лПартии Цикл 
					Если лСтрокаПартии.НоваяСтоимостьОстаток <> 0 Тогда 
						лСумма = Окр(лСтрокаПартии.НоваяСтоимостьОстаток/лСуммаБаза*лСуммаОстаток, 2);
						лПослСтрокаПартии = лСтрокаПартии;
					Иначе
						лСумма = 0;
					КонецЕсли;
					лСтрокаПартии.НоваяСтоимостьОстаток = лСтрокаПартии.НоваяСтоимостьОстаток + лСумма;
					лСуммаОстаток1 = лСуммаОстаток1 - лСумма;
				КонецЦикла;
			КонецЕсли;
			лСуммаОстаток = лСуммаОстаток1;
		КонецЕсли;
		Если лСуммаОстаток <> 0 Тогда 
			Если лПослСтрокаПартии <> Неопределено Тогда 
				лПослСтрокаПартии.НоваяСтоимостьОстаток = лПослСтрокаПартии.НоваяСтоимостьОстаток + лСуммаОстаток;
				лСуммаОстаток = 0;
			КонецЕсли;
		КонецЕсли;
		//Если лСуммаОстаток <> 0 Тогда 
		//	Сообщить("Не удалось распределить сумму по <"+лВыборка.Номенклатура+">");
		//	Продолжить;
		//КонецЕсли;
		
		// Проводки
		лСуммаОстаток = -лСуммаРазницаПоПроводкам;
		Для Каждого лСтрокаПроводки Из лПроводки Цикл 
			лСтрокаПроводки.НоваяСумма = Окр(лСтрокаПроводки.КоличествоКт*лСебестоимость, 2);
			Если Не лСтрокаПроводки.Перемещение Тогда 
				лСуммаОстаток = лСуммаОстаток - (лСтрокаПроводки.НоваяСумма-лСтрокаПроводки.Сумма);
			КонецЕсли;
		КонецЦикла;
		// Этап 1
		лПослСтрокаПроводки = Неопределено;
		Если лСуммаОстаток <> 0 Тогда 
			лСуммаОстаток1 = лСуммаОстаток;
			лСтрокиПроводок = лПроводки.НайтиСтроки(Новый Структура("Порядок", 2));
			лСуммаБаза = 0;
			Для Каждого лСтрокаПроводки Из лСтрокиПроводок Цикл 
				лСуммаБаза = лСуммаБаза + лСтрокаПроводки.НоваяСумма;
			КонецЦикла;
			Если лСуммаБаза <> 0 Тогда 
				Для Каждого лСтрокаПроводки Из лСтрокиПроводок Цикл 
					лСумма = Окр(лСтрокаПроводки.НоваяСумма/лСуммаБаза*лСуммаОстаток, 2);
					Если лСумма <> 0 Тогда 
						лСтрокаПроводки.НоваяСумма = лСтрокаПроводки.НоваяСумма + лСумма;
						Если Не лСтрокаПроводки.Перемещение Тогда 
							лСуммаОстаток1 = лСуммаОстаток1 - лСумма;
							лПослСтрокаПроводки = лСтрокаПроводки;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			лСуммаОстаток = лСуммаОстаток1;
		КонецЕсли;
		Если лСуммаОстаток <> 0 Тогда 
			Если лПослСтрокаПроводки <> Неопределено Тогда 
				лПослСтрокаПроводки.НоваяСумма = лПослСтрокаПроводки.НоваяСумма + лСуммаОстаток;
				лСуммаОстаток = 0;
			КонецЕсли;
		КонецЕсли;
		// Этап 2
		лПослСтрокаПроводки = Неопределено;
		Если лСуммаОстаток <> 0 Тогда 
			лСуммаОстаток1 = лСуммаОстаток;
			лСтрокиПроводок = лПроводки.НайтиСтроки(Новый Структура("Перемещение", Ложь));
			лСуммаБаза = 0;
			Для Каждого лСтрокаПроводки Из лСтрокиПроводок Цикл 
				лСуммаБаза = лСуммаБаза + лСтрокаПроводки.НоваяСумма;
			КонецЦикла;
			Если лСуммаБаза <> 0 Тогда 
				Для Каждого лСтрокаПроводки Из лСтрокиПроводок Цикл 
					лСумма = Окр(лСтрокаПроводки.НоваяСумма/лСуммаБаза*лСуммаОстаток, 2);
					Если лСумма <> 0 Тогда 
						лСтрокаПроводки.НоваяСумма = лСтрокаПроводки.НоваяСумма + лСумма;
						Если Не лСтрокаПроводки.Перемещение Тогда 
							лСуммаОстаток1 = лСуммаОстаток1 - лСумма;
							лПослСтрокаПроводки = лСтрокаПроводки;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			лСуммаОстаток = лСуммаОстаток1;
		КонецЕсли;
		Если лСуммаОстаток <> 0 Тогда 
			Если лПослСтрокаПроводки <> Неопределено Тогда 
				лПослСтрокаПроводки.НоваяСумма = лПослСтрокаПроводки.НоваяСумма + лСуммаОстаток;
				лСуммаОстаток = 0;
			КонецЕсли;
		КонецЕсли;
		// Этап 3
		лПослСтрокаПроводки = Неопределено;
		Если лСуммаОстаток <> 0 Тогда 
			лСуммаОстаток1 = лСуммаОстаток;
			лСуммаБаза = лПроводки.Итог("НоваяСумма");
			Если лСуммаБаза <> 0 Тогда 
				Для Каждого лСтрокаПроводки Из лПроводки Цикл 
					лСумма = Окр(лСтрокаПроводки.НоваяСумма/лСуммаБаза*лСуммаОстаток, 2);
					Если лСумма <> 0 Тогда 
						лСтрокаПроводки.НоваяСумма = лСтрокаПроводки.НоваяСумма + лСумма;
						Если Не лСтрокаПроводки.Перемещение Тогда 
							лСуммаОстаток1 = лСуммаОстаток1 - лСумма;
							лПослСтрокаПроводки = лСтрокаПроводки;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			лСуммаОстаток = лСуммаОстаток1;
		КонецЕсли;
		Если лСуммаОстаток <> 0 Тогда 
			Если лПослСтрокаПроводки = Неопределено Тогда 
				лСтрокиПроводок = лПроводки.НайтиСтроки(Новый Структура("Перемещение", Ложь));
				Если лСтрокиПроводок.Количество() > 0 Тогда 
					лПослСтрокаПроводки = лСтрокиПроводок[0];
				КонецЕсли;
			КонецЕсли;
			Если лПослСтрокаПроводки <> Неопределено Тогда 
				лПослСтрокаПроводки.НоваяСумма = лПослСтрокаПроводки.НоваяСумма + лСуммаОстаток;
				лСуммаОстаток = 0;
			КонецЕсли;
		КонецЕсли;
		//Если лСуммаОстаток <> 0 Тогда 
		//	Сообщить("Не удалось распределить сумму по <"+лВыборка.Номенклатура+">");
		//	Продолжить;
		//КонецЕсли;
		
		// Исправление проводок по затратам
		лПартииНаСкладах.Очистить();
		лНЗП.Очистить();
		лЗатраты.Очистить();
		лБрак.Очистить();
		лВыпуск.Очистить();
		лКоличествоСубконто = Метаданные.ПланыСчетов.Международный.МаксКоличествоСубконто;
		лКоличествоВПроводок = лПроводки.Количество();
		Для лИндекс=0 По лКоличествоВПроводок-1 Цикл  
			лСтрокаПроводки = лПроводки[лИндекс];
			
			Если ЗначениеЗаполнено(лСтрокаПроводки.НоваяСумма)
			 И лСтрокаПроводки.НоваяСумма <> лСтрокаПроводки.Сумма Тогда 
			 	Если лСчетаОстатковДоп.Найти(лСтрокаПроводки.СчетДт) <> Неопределено Тогда 
				 
					// + Регистр партии на складах
					лНовоеДвижение2 = лПартииНаСкладах.Добавить();
					лНовоеДвижение2.Номенклатура = лСтрокаПроводки.СубконтоДт1;
					лНовоеДвижение2.СчетУчета = лСтрокаПроводки.СчетДт;
					лНовоеДвижение2.Склад = Справочники.Склады.ПустаяСсылка();
					лНовоеДвижение2.Качество = Справочники.Качество.Новый;
					лНовоеДвижение2.Количество = 0;
					лНовоеДвижение2.Сумма = лСтрокаПроводки.Сумма;
					лНовоеДвижение2.НоваяСумма = лСтрокаПроводки.НоваяСумма;
				 
				ИначеЕсли лСтрокаПроводки.СчетДт = ПланыСчетов.Международный.АдминистративныеРасходы
				 Или лСтрокаПроводки.СчетДт = ПланыСчетов.Международный._КоммерческиеРасходы Тогда 
				 
					// + Регистр затрат
					лНовоеДвижение = лЗатраты.Добавить();
					лНовоеДвижение.СчетУчета = лСтрокаПроводки.СчетДт;
					Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
						Если ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда 
							лНовоеДвижение.Подразделение = лСтрокаПроводки["СубконтоДт"+лНомерСубконто];
						ИначеЕсли ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда 
							лНовоеДвижение.НоменклатурнаяГруппа = лСтрокаПроводки["СубконтоДт"+лНомерСубконто];
						ИначеЕсли ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда 
							лНовоеДвижение.СтатьяЗатрат = лСтрокаПроводки["СубконтоДт"+лНомерСубконто];
						КонецЕсли;
					КонецЦикла;
					лНовоеДвижение.Сумма = лСтрокаПроводки.Сумма;
					лНовоеДвижение.НоваяСумма = лСтрокаПроводки.НоваяСумма;
				 
				 	// + Проводка Дт 90.07,90.08 Кт 26,44.02
					лНоваяСтрокаПроводки = лПроводки.Добавить();
					Если лСтрокаПроводки.СчетДт = ПланыСчетов.Международный.АдминистративныеРасходы Тогда 
						лНоваяСтрокаПроводки.СчетДт = ПланыСчетов.Международный._УправленческиеРасходы;
					Иначе
						лНоваяСтрокаПроводки.СчетДт = ПланыСчетов.Международный._РасходыНаПродажу;
					КонецЕсли;
					Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
						Если лНомерСубконто <= лНоваяСтрокаПроводки.СчетДт.ВидыСубконто.Количество() Тогда 
							лОписаниеТипов = лНоваяСтрокаПроводки.СчетДт.ВидыСубконто[лНомерСубконто-1].ВидСубконто.ТипЗначения;
							лНоваяСтрокаПроводки["СубконтоДт"+лНомерСубконто] = лОписаниеТипов.ПривестиЗначение(Неопределено);
							Для лНомерСубконтоИсточника=1 По лКоличествоСубконто Цикл 
								Если лОписаниеТипов.СодержитТип(ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконтоИсточника])) Тогда 
									лНоваяСтрокаПроводки["СубконтоДт"+лНомерСубконто] = лСтрокаПроводки["СубконтоДт"+лНомерСубконтоИсточника];
									Прервать;
								КонецЕсли;
							КонецЦикла;
						Иначе
							лНоваяСтрокаПроводки["СубконтоДт"+лНомерСубконто] = Неопределено;
						КонецЕсли;
					КонецЦикла;				
					лНоваяСтрокаПроводки.КоличествоДт = 0;
					лНоваяСтрокаПроводки.СчетКт = лСтрокаПроводки.СчетДт;
					Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
						лНоваяСтрокаПроводки["СубконтоКт"+лНомерСубконто] = лСтрокаПроводки["СубконтоДт"+лНомерСубконто];
					КонецЦикла;
					лНоваяСтрокаПроводки.КоличествоКт = 0;
					лНоваяСтрокаПроводки.Сумма = лСтрокаПроводки.Сумма;
					лНоваяСтрокаПроводки.НоваяСумма = лСтрокаПроводки.НоваяСумма;
					лНоваяСтрокаПроводки.Порядок = лСтрокаПроводки.Порядок;
					лНоваяСтрокаПроводки.Перемещение = лСтрокаПроводки.Перемещение;
					
				ИначеЕсли лСчетаЗатрат.Найти(лСтрокаПроводки.СчетДт) <> Неопределено Тогда 
					
					// + Регистр НЗП, брака
					Если лСтрокаПроводки.СчетДт = ПланыСчетов.Международный.БракВПроизводстве Тогда 
						лНоваяСтрокаДвижения = лБрак.Добавить();
						лНоваяСтрокаДвижения.Продукция = лСтрокаПроводки.СубконтоКт1;
					ИначеЕсли лСтрокаПроводки.СчетДт = ПланыСчетов.Международный.ОбщепроизводственныеРасходы
					 Или лСтрокаПроводки.СчетДт = ПланыСчетов.Международный.АдминистративныеРасходы 
					 Или лСтрокаПроводки.СчетДт = ПланыСчетов.Международный._КоммерческиеРасходы Тогда 
						лНоваяСтрокаДвижения = лЗатраты.Добавить();
					Иначе
						лНоваяСтрокаДвижения = лНЗП.Добавить();
						лНоваяСтрокаДвижения.Затрата = лСтрокаПроводки.СубконтоКт1;
						лНоваяСтрокаДвижения.Количество = 0;
					КонецЕсли;
					лНоваяСтрокаДвижения.СчетУчета = лСтрокаПроводки.СчетДт;
					Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
						Если ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда 
							лНоваяСтрокаДвижения.Подразделение = лСтрокаПроводки["СубконтоДт"+лНомерСубконто];
						ИначеЕсли ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда 
							лНоваяСтрокаДвижения.НоменклатурнаяГруппа = лСтрокаПроводки["СубконтоДт"+лНомерСубконто];
						ИначеЕсли ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда 
							лНоваяСтрокаДвижения.СтатьяЗатрат = лСтрокаПроводки["СубконтоДт"+лНомерСубконто];
						КонецЕсли;
					КонецЦикла;
					лНоваяСтрокаДвижения.Сумма = лСтрокаПроводки.Сумма;
					лНоваяСтрокаДвижения.НоваяСумма = лСтрокаПроводки.НоваяСумма;
				 
				 	// + Проводка Дт 20.01 Кт 23,25,28,29
					Если лСтрокаПроводки.СчетДт <> ПланыСчетов.Международный._ОсновноеПроизводство Тогда 
						
						лНоваяСтрокаДвижения1 = лНЗП.Добавить();
						лНоваяСтрокаДвижения1.СчетУчета = ПланыСчетов.Международный._ОсновноеПроизводство;
						лНоваяСтрокаДвижения1.Подразделение = лНоваяСтрокаДвижения.Подразделение;
						лНоваяСтрокаДвижения1.НоменклатурнаяГруппа = лНоваяСтрокаДвижения.НоменклатурнаяГруппа;
						лНоваяСтрокаДвижения1.СтатьяЗатрат = лНоваяСтрокаДвижения.СтатьяЗатрат;
						//лНоваяСтрокаДвижения1.Затрата = лНоваяСтрокаДвижения.Затрата;
						//лНоваяСтрокаДвижения1.Количество = лНоваяСтрокаДвижения.Количество;
						лНоваяСтрокаДвижения1.Сумма = лНоваяСтрокаДвижения.Сумма;
						лНоваяСтрокаДвижения1.НоваяСумма = лНоваяСтрокаДвижения.НоваяСумма;
						
						лНоваяСтрокаПроводки1 = лПроводки.Добавить();
						лНоваяСтрокаПроводки1.СчетДт = ПланыСчетов.Международный._ОсновноеПроизводство;
						Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
							Если лНомерСубконто <= лНоваяСтрокаПроводки1.СчетДт.ВидыСубконто.Количество() Тогда 
								лОписаниеТипов = лНоваяСтрокаПроводки1.СчетДт.ВидыСубконто[лНомерСубконто-1].ВидСубконто.ТипЗначения;
								лНоваяСтрокаПроводки1["СубконтоДт"+лНомерСубконто] = лОписаниеТипов.ПривестиЗначение(Неопределено);
								Для лНомерСубконтоИсточника=1 По лКоличествоСубконто Цикл 
									Если лОписаниеТипов.СодержитТип(ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконтоИсточника])) Тогда 
										лНоваяСтрокаПроводки1["СубконтоДт"+лНомерСубконто] = лСтрокаПроводки["СубконтоДт"+лНомерСубконтоИсточника];
										Прервать;
									КонецЕсли;
								КонецЦикла;
							Иначе
								лНоваяСтрокаПроводки1["СубконтоДт"+лНомерСубконто] = Неопределено;
							КонецЕсли;
						КонецЦикла;				
						лНоваяСтрокаПроводки1.КоличествоДт = 0;
						лНоваяСтрокаПроводки1.СчетКт = лСтрокаПроводки.СчетДт;
						Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
							лНоваяСтрокаПроводки1["СубконтоКт"+лНомерСубконто] = лСтрокаПроводки["СубконтоДт"+лНомерСубконто];
						КонецЦикла;
						лНоваяСтрокаПроводки1.КоличествоКт = 0;
						лНоваяСтрокаПроводки1.Сумма = лСтрокаПроводки.Сумма;
						лНоваяСтрокаПроводки1.НоваяСумма = лСтрокаПроводки.НоваяСумма;
						лНоваяСтрокаПроводки1.Порядок = лСтрокаПроводки.Порядок;
						лНоваяСтрокаПроводки1.Перемещение = лСтрокаПроводки.Перемещение;
						
					Иначе
						лНоваяСтрокаДвижения1 = лНоваяСтрокаДвижения;
						лНоваяСтрокаПроводки1 = лСтрокаПроводки;
					КонецЕсли;
					
					// Затраты на выпуск
					лБаза = 0;
					лСтрокиВыпуска = Новый Массив;
					Если лСтрокаПроводки.СчетДт = ПланыСчетов.Международный.БракВПроизводстве Тогда 
						лОтбор = Новый Структура;
						лОтбор.Вставить("Продукция", лСтрокаПроводки.СубконтоКт1);
						лОтбор.Вставить("Затрата", Неопределено);
						лСтрокиВыпуска = лВсеВыпуск.НайтиСтроки(лОтбор);
						Для Каждого лСтрокаВыпуска Из лСтрокиВыпуска Цикл 
							лБаза = лБаза + лСтрокаВыпуска.Количество;
						КонецЦикла;
					ИначеЕсли лСтрокаПроводки.СчетДт = ПланыСчетов.Международный._ОсновноеПроизводство Тогда 
						лОтбор = Новый Структура;
						Если лСтрокаПроводки.СчетКт = ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки Тогда 
							лОтбор.Вставить("ВидНоменклатуры", лВидНоменклатуры43);
						КонецЕсли;
						Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
							Если ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда 
								лОтбор.Вставить("Подразделение", лСтрокаПроводки["СубконтоДт"+лНомерСубконто]);
							ИначеЕсли ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда 
								лОтбор.Вставить("НоменклатурнаяГруппа", лСтрокаПроводки["СубконтоДт"+лНомерСубконто]);
							КонецЕсли;
						КонецЦикла;
						лОтбор.Вставить("Затрата", лСтрокаПроводки.СубконтоКт1);
						лСтрокиВыпуска = лВсеВыпуск.НайтиСтроки(лОтбор);
						Для Каждого лСтрокаВыпуска Из лСтрокиВыпуска Цикл 
							лБаза = лБаза + лСтрокаВыпуска.Количество;
						КонецЦикла;
					КонецЕсли;
					Если лСтрокиВыпуска.Количество() = 0 Или лБаза = 0 Тогда 
						лОтбор = Новый Структура;
						Если лСтрокаПроводки.СчетКт = ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки Тогда 
							лОтбор.Вставить("ВидНоменклатуры", лВидНоменклатуры43);
						КонецЕсли;
						Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
							Если ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда 
								лОтбор.Вставить("Подразделение", лСтрокаПроводки["СубконтоДт"+лНомерСубконто]);
							ИначеЕсли ТипЗнч(лСтрокаПроводки["СубконтоДт"+лНомерСубконто]) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда 
								лОтбор.Вставить("НоменклатурнаяГруппа", лСтрокаПроводки["СубконтоДт"+лНомерСубконто]);
							КонецЕсли;
						КонецЦикла;
						лОтбор.Вставить("Затрата", Неопределено);
						лСтрокиВыпуска = лВсеВыпуск.НайтиСтроки(лОтбор);
						Для Каждого лСтрокаВыпуска Из лСтрокиВыпуска Цикл 
							лБаза = лБаза + лСтрокаВыпуска.Количество;
						КонецЦикла;
					КонецЕсли;
					Если лСтрокиВыпуска.Количество() = 0 Или лБаза = 0 Тогда 
						лБаза = 0;
						лОтбор = Новый Структура;
						Если лСтрокаПроводки.СчетКт = ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки Тогда 
							лОтбор.Вставить("ВидНоменклатуры", лВидНоменклатуры43);
						КонецЕсли;
						лОтбор.Вставить("НоменклатурнаяГруппа", лВыборка.Номенклатура.НоменклатурнаяГруппа);
						лОтбор.Вставить("Затрата", Неопределено);
						лСтрокиВыпуска = лВсеВыпуск.НайтиСтроки(лОтбор);
						Для Каждого лСтрокаВыпуска Из лСтрокиВыпуска Цикл 
							лБаза = лБаза + лСтрокаВыпуска.Количество;
						КонецЦикла;
					КонецЕсли;
					Если лСтрокиВыпуска.Количество() = 0 Или лБаза = 0 Тогда 
						лБаза = 0;
						лОтбор = Новый Структура;
						Если лСтрокаПроводки.СчетКт = ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки Тогда 
							лОтбор.Вставить("ВидНоменклатуры", лВидНоменклатуры43);
						КонецЕсли;
						лОтбор.Вставить("Затрата", Неопределено);
						лСтрокиВыпуска = лВсеВыпуск.НайтиСтроки(лОтбор);
						Для Каждого лСтрокаВыпуска Из лСтрокиВыпуска Цикл 
							лБаза = лБаза + лСтрокаВыпуска.Количество;
						КонецЦикла;
					КонецЕсли;
					Если лСтрокиВыпуска.Количество() > 0 И лБаза <> 0 Тогда 
						лСуммаРазницаПоВыпуску = лСтрокаПроводки.НоваяСумма - лСтрокаПроводки.Сумма;
						лСуммаОстаток = лСуммаРазницаПоВыпуску;
						лНоваяСтрокаПроводки2 = Неопределено;
						Для Каждого лСтрокаВыпуска Из лСтрокиВыпуска Цикл 
							лСумма = Окр(лСтрокаВыпуска.Количество/лБаза*лСуммаРазницаПоВыпуску, 2);
							Если лСумма <> 0 Тогда 
								
								лНоваяСтрокаВыпуска = лВыпуск.Добавить();
								ЗаполнитьЗначенияСвойств(лНоваяСтрокаВыпуска, лСтрокаВыпуска);
								лНоваяСтрокаВыпуска.СчетУчета = лНоваяСтрокаДвижения1.СчетУчета;
								лНоваяСтрокаВыпуска.СтатьяЗатрат = лНоваяСтрокаДвижения1.СтатьяЗатрат;
								лНоваяСтрокаВыпуска.НоваяСумма = лНоваяСтрокаВыпуска.НоваяСумма + лСумма;
								
								лНоваяСтрокаПроводки2 = лПроводки.Добавить();
								//лНоваяСтрокаПроводки2.СчетДт = лСтрокаПроводки.СчетКт;
								/// Кунов О.В., 24.11.2016 - 
								Если лСтрокаВыпуска.ВидНоменклатуры = лВидНоменклатуры21 Или лСтрокаВыпуска.ВидНоменклатуры = лВидНоменклатуры21М Тогда 
								///
									лНоваяСтрокаПроводки2.СчетДт = ПланыСчетов.Международный._ПолуфабрикатыСобственногоПроизводства;
								Иначе
									лНоваяСтрокаПроводки2.СчетДт = ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки;
								КонецЕсли;
								//Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
								//	лНоваяСтрокаПроводки2["СубконтоДт"+лНомерСубконто] = лСтрокаПроводки["СубконтоКт"+лНомерСубконто];
								//КонецЦикла;
								лНоваяСтрокаПроводки2.СубконтоДт1 = лНоваяСтрокаВыпуска.Продукция;
								лНоваяСтрокаПроводки2.КоличествоДт = 0;
								лНоваяСтрокаПроводки2.СчетКт = лНоваяСтрокаПроводки1.СчетДт;
								Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
									лНоваяСтрокаПроводки2["СубконтоКт"+лНомерСубконто] = лНоваяСтрокаПроводки1["СубконтоДт"+лНомерСубконто];
								КонецЦикла;
								лНоваяСтрокаПроводки2.КоличествоКт = 0;
								лНоваяСтрокаПроводки2.Сумма = лСтрокаПроводки.Сумма;
								лНоваяСтрокаПроводки2.НоваяСумма = лСтрокаПроводки.Сумма + лСумма;
								лНоваяСтрокаПроводки2.Порядок = лСтрокаПроводки.Порядок;
								лНоваяСтрокаПроводки2.Перемещение = лСтрокаПроводки.Перемещение;
								
								лСуммаОстаток = лСуммаОстаток - лСумма;
							КонецЕсли;
						КонецЦикла;
						Если лСуммаОстаток <> 0 Тогда 
							Если лВыпуск.Количество() = 0 
							 Или лНоваяСтрокаПроводки2 = Неопределено Тогда 
								
								лНоваяСтрокаВыпуска = лВыпуск.Добавить();
								ЗаполнитьЗначенияСвойств(лНоваяСтрокаВыпуска, лСтрокиВыпуска[0]);
								лНоваяСтрокаВыпуска.СчетУчета = лНоваяСтрокаДвижения1.СчетУчета;
								лНоваяСтрокаВыпуска.СтатьяЗатрат = лНоваяСтрокаДвижения1.СтатьяЗатрат;
								
								лНоваяСтрокаПроводки2 = лПроводки.Добавить();
								//лНоваяСтрокаПроводки2.СчетДт = лСтрокаПроводки.СчетКт;
								/// Кунов О.В., 24.11.2016 - 
								Если лСтрокаВыпуска.ВидНоменклатуры = лВидНоменклатуры21 Или лСтрокаВыпуска.ВидНоменклатуры = лВидНоменклатуры21М Тогда
								///
									лНоваяСтрокаПроводки2.СчетДт = ПланыСчетов.Международный._ПолуфабрикатыСобственногоПроизводства;
								Иначе
									лНоваяСтрокаПроводки2.СчетДт = ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки;
								КонецЕсли;
								//Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
								//	лНоваяСтрокаПроводки2["СубконтоДт"+лНомерСубконто] = лСтрокаПроводки["СубконтоКт"+лНомерСубконто];
								//КонецЦикла;				
								лНоваяСтрокаПроводки2.СубконтоДт1 = лНоваяСтрокаВыпуска.Продукция;
								лНоваяСтрокаПроводки2.КоличествоДт = 0;
								лНоваяСтрокаПроводки2.СчетКт = лНоваяСтрокаПроводки1.СчетДт;
								Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
									лНоваяСтрокаПроводки2["СубконтоКт"+лНомерСубконто] = лНоваяСтрокаПроводки1["СубконтоДт"+лНомерСубконто];
								КонецЦикла;
								лНоваяСтрокаПроводки2.КоличествоКт = 0;
								лНоваяСтрокаПроводки2.Сумма = лСтрокаПроводки.Сумма;
								лНоваяСтрокаПроводки2.НоваяСумма = лСтрокаПроводки.Сумма;
								лНоваяСтрокаПроводки2.Порядок = лСтрокаПроводки.Порядок;
								лНоваяСтрокаПроводки2.Перемещение = лСтрокаПроводки.Перемещение;
								
							Иначе
								лНоваяСтрокаВыпуска = лВыпуск[лВыпуск.Количество()-1];
								лНоваяСтрокаПроводки2 = лПроводки[лПроводки.Количество()-1];
							КонецЕсли;
							
							лНоваяСтрокаВыпуска.НоваяСумма = лНоваяСтрокаВыпуска.НоваяСумма + лСуммаОстаток;
							лНоваяСтрокаПроводки2.НоваяСумма = лНоваяСтрокаПроводки2.НоваяСумма + лСуммаОстаток;
							лСуммаОстаток = 0;
							
						КонецЕсли;
					Иначе
						Сообщить("Не удалось рапределелить затраты на выпуск по <"+лВыборка.Номенклатура+">", СтатусСообщения.ОченьВажное);
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		лПартииНаСкладах.Свернуть("Номенклатура, СчетУчета, Склад, Качество, КорСчет, КорСубконто1, КорСубконто2, КорСубконто3", "Количество, Сумма, НоваяСумма");
		лНЗП.Свернуть("Подразделение, СчетУчета, НоменклатурнаяГруппа, СтатьяЗатрат, Затрата", "Количество, Сумма, НоваяСумма");
		лЗатраты.Свернуть("Подразделение, СчетУчета, НоменклатурнаяГруппа, СтатьяЗатрат", "Сумма, НоваяСумма");
		лБрак.Свернуть("Подразделение, СчетУчета, НоменклатурнаяГруппа, СтатьяЗатрат, Продукция", "Сумма, НоваяСумма");
		лВыпуск.Свернуть("Подразделение, НоменклатурнаяГруппа, Продукция, ХарактеристикаПродукции, СерияПродукции, Спецификация, Заказ, ДокументВыпуска, Качество, 
			|СчетУчета, СтатьяЗатрат, Затрата", "Количество, Сумма, НоваяСумма");
		лПроводки.Свернуть("СчетДт, СубконтоДт1, СубконтоДт2, СубконтоДт3, СчетКт, СубконтоКт1, СубконтоКт2, СубконтоКт3, Порядок, Перемещение", "КоличествоДт, КоличествоКт, Сумма, НоваяСумма");
		
		Для Каждого лСтрокаПартии Из лПартии Цикл 
			Если лСтрокаПартии.НоваяСтоимостьОстаток <> лСтрокаПартии.СтоимостьОстаток Тогда 
				лДвижение = Движения.ПартииТоваровНаСкладахМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаПартии);
				лДвижение.Период = лДата;
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
				лДвижение.Организация = Организация;
				лДвижение.Количество = 0;
				лДвижение.Стоимость = -(лСтрокаПартии.НоваяСтоимостьОстаток-лСтрокаПартии.СтоимостьОстаток);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого лСтрокаПартии Из лПартииНаСкладах Цикл 
			Если лСтрокаПартии.НоваяСумма <> лСтрокаПартии.Сумма Тогда 
				лДвижение = Движения.ПартииТоваровНаСкладахМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаПартии);
				лДвижение.Период = лДата;
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
				лДвижение.Организация = Организация;
				лДвижение.Стоимость = (лСтрокаПартии.НоваяСумма-лСтрокаПартии.Сумма);
			КонецЕсли;
		КонецЦикла;
		Для Каждого лСтрокаНЗП Из лНЗП Цикл 
			Если лСтрокаНЗП.НоваяСумма <> лСтрокаНЗП.Сумма Тогда 
				// Приход
				лДвижение = Движения.НезавершенноеПроизводствоМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаНЗП);
				лДвижение.Период = лДата;
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
				лДвижение.Организация = Организация;
				//Если лСтрокаНЗП.Сумма <> 0 Тогда 
					лДвижение.Количество = 0;
				//КонецЕсли;
				лДвижение.Стоимость = (лСтрокаНЗП.НоваяСумма-лСтрокаНЗП.Сумма);
				// Расход
				лДвижение = Движения.НезавершенноеПроизводствоМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаНЗП);
				лДвижение.Период = лДата;
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
				лДвижение.Организация = Организация;
				Если лСтрокаНЗП.Сумма <> 0 Тогда 
					лДвижение.Количество = 0;
				КонецЕсли;
				лДвижение.Стоимость = (лСтрокаНЗП.НоваяСумма-лСтрокаНЗП.Сумма);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого лСтрокаЗатрат Из лЗатраты Цикл 
			Если лСтрокаЗатрат.НоваяСумма <> лСтрокаЗатрат.Сумма Тогда 
				// Приход
				лДвижение = Движения.ЗатратыМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаЗатрат);
				лДвижение.Период = лДата;
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
				лДвижение.Организация = Организация;
				лДвижение.Сумма = (лСтрокаЗатрат.НоваяСумма-лСтрокаЗатрат.Сумма);
				// Расход
				лДвижение = Движения.ЗатратыМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаЗатрат);
				лДвижение.Период = лДата;
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
				лДвижение.Организация = Организация;
				лДвижение.Сумма = (лСтрокаЗатрат.НоваяСумма-лСтрокаЗатрат.Сумма);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого лСтрокаБрака Из лБрак Цикл 
			Если лСтрокаБрака.НоваяСумма <> лСтрокаБрака.Сумма Тогда 
				// Приход
				лДвижение = Движения.БракВПроизводствеМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаБрака);
				лДвижение.Период = лДата;
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
				лДвижение.Организация = Организация;
				лДвижение.Сумма = (лСтрокаБрака.НоваяСумма-лСтрокаБрака.Сумма);
				// Расход
				лДвижение = Движения.БракВПроизводствеМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаБрака);
				лДвижение.Период = лДата;
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
				лДвижение.Организация = Организация;
				лДвижение.Сумма = (лСтрокаБрака.НоваяСумма-лСтрокаБрака.Сумма);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого лСтрокаВыпуска Из лВыпуск Цикл 
			Если лСтрокаВыпуска.НоваяСумма <> лСтрокаВыпуска.Сумма Тогда 
				// Выпуск
				лДвижение = Движения.ВыпускПродукцииМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаВыпуска);
				лДвижение.Период = лДата;
				лДвижение.Организация = Организация;
				лДвижение.Количество = 0;
				лДвижение.Стоимость = (лСтрокаВыпуска.НоваяСумма-лСтрокаВыпуска.Сумма);
				// Затраты
				лДвижение = Движения.ЗатратыНаВыпускПродукцииМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаВыпуска);
				лДвижение.Период = лДата;
				лДвижение.Организация = Организация;
				лДвижение.ПодразделениеНЗП = лДвижение.Подразделение;
				лДвижение.НоменклатурнаяГруппаНЗП = лДвижение.НоменклатурнаяГруппа;
				лДвижение.ЗаказНЗП = лДвижение.Заказ;
				лДвижение.Количество = 0;
				лДвижение.Сумма = (лСтрокаВыпуска.НоваяСумма-лСтрокаВыпуска.Сумма);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого лСтрокаПроводки Из лПроводки Цикл 
			Если лСтрокаПроводки.НоваяСумма <> лСтрокаПроводки.Сумма Тогда 
				лПроводка = Движения.Международный.Добавить();
				лПроводка.Период = лДата;
				лПроводка.Организация = Организация;
				лПроводка.СчетДт = лСтрокаПроводки.СчетДт;
				Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
					БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лНомерСубконто, лСтрокаПроводки["СубконтоДт"+лНомерСубконто]);
				КонецЦикла;
				лПроводка.СчетКт = лСтрокаПроводки.СчетКт;
				Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
					БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лНомерСубконто, лСтрокаПроводки["СубконтоКт"+лНомерСубконто]);
				КонецЦикла;
				лПроводка.Сумма = лСтрокаПроводки.НоваяСумма-лСтрокаПроводки.Сумма;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Если Движения.ЗатратыНаВыпускПродукцииМеждународныйУчет.Количество() > 0 Тогда 
		ВыпускИзменен = Истина;
	КонецЕсли;
	
	Если Движения.ПартииТоваровНаСкладахМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.НезавершенноеПроизводствоМеждународныйУчет.Количество() > 0 Тогда 
		Движения.НезавершенноеПроизводствоМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ЗатратыМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ЗатратыМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.БракВПроизводствеМеждународныйУчет.Количество() > 0 Тогда 
		Движения.БракВПроизводствеМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ВыпускПродукцииМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ВыпускПродукцииМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ЗатратыНаВыпускПродукцииМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ЗатратыНаВыпускПродукцииМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.Международный.Количество() > 0 Тогда 
		Движения.Международный.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры

// is ЯннуровВФ 20140603 
Процедура РасчетСебестоимостиНаЕдиницу() Экспорт 
	
	Если Не ОтражатьВМеждународномУчете Тогда 
		Возврат;
	КонецЕсли;
	
	Если Движения.ВыпускПродукцииМеждународныйУчет.Модифицированность() Тогда 
		Движения.ВыпускПродукцииМеждународныйУчет.Записать();
	КонецЕсли;
	Если Движения.ЗатратыНаВыпускПродукцииМеждународныйУчет.Модифицированность() Тогда 
		Движения.ЗатратыНаВыпускПродукцииМеждународныйУчет.Записать();
	КонецЕсли;
	
	Движения.ис_СебестоимостьВыпускаМеждународный.Очистить();
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВыпускПродукцииМеждународныйУчетОбороты.Продукция КАК Номенклатура,
	|	ВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот) КАК Количество,
	|	СУММА(ВыпускПродукцииМеждународныйУчетОбороты.СтоимостьОборот) КАК Стоимость
	|ПОМЕСТИТЬ втВыпускПродукции
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(&НачалоПериода, &ОкончаниеПериодаСГраницей, Период, Организация = &Организация) КАК ВыпускПродукцииМеждународныйУчетОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукцииМеждународныйУчетОбороты.Продукция,
	|	ВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.Продукция КАК Номенклатура,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции КАК ХарактеристикаНоменклатуры,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.СтатьяЗатрат КАК СтатьяЗатрат,
	|	СУММА(ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот) КАК Количество,
	|	СУММА(ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.СуммаОборот) КАК Сумма
	|ПОМЕСТИТЬ втЗатратыНаВыпуск
	|ИЗ
	|	РегистрНакопления.ЗатратыНаВыпускПродукцииМеждународныйУчет.Обороты(&НачалоПериода, &ОкончаниеПериодаСГраницей, Период, Организация = &Организация) КАК ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.Продукция,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции,
	|	ЗатратыНаВыпускПродукцииМеждународныйУчетОбороты.СтатьяЗатрат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&Организация КАК Организация,
	|	втВыпускПродукции.Номенклатура,
	|	втВыпускПродукции.ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(втЗатратыНаВыпуск.СтатьяЗатрат, ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)) КАК СтатьяЗатрат,
	|	&НачалоПериода КАК МесяцВыпуска,
	|	ВЫБОР
	|		КОГДА втВыпускПродукции.Количество > 0
	|			ТОГДА ЕСТЬNULL(втЗатратыНаВыпуск.Сумма, 0) / втВыпускПродукции.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНаЕдиницу
	|ИЗ
	|	втВыпускПродукции КАК втВыпускПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗатратыНаВыпуск КАК втЗатратыНаВыпуск
	|		ПО втВыпускПродукции.Номенклатура = втЗатратыНаВыпуск.Номенклатура
	|			И втВыпускПродукции.ХарактеристикаНоменклатуры = втЗатратыНаВыпуск.ХарактеристикаНоменклатуры";
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации),ВидГраницы.Включая));
	Движения.ис_СебестоимостьВыпускаМеждународный.Загрузить(лЗапрос.Выполнить().Выгрузить());
	Движения.ис_СебестоимостьВыпускаМеждународный.Записать();
	
КонецПроцедуры

// is ЯннуровВФ 20140715
Процедура РасчетПостатейнойСебестоимостиПоНоменклатуре(КомплектыПродукции, Номенклатура)   
	
	Если Не ОтражатьВМеждународномУчете Тогда 
		Возврат;
	КонецЕсли;
	
	лДата = КонецМесяца(ПериодРегистрации);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.ХарактеристикаНоменклатуры,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СтатьяЗатрат,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Возврат,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СуммаПриход,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СуммаРасход
	|ИЗ
	|	РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)) КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты
	|ГДЕ
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СуммаРасход <> 0";
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("Номенклатура", Номенклатура);
	лВыборка = лЗапрос.Выполнить().Выбрать();
	Пока лВыборка.Следующий() Цикл 
		// Сторно расхода
		лДвижение = Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Добавить();
		лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
		лДвижение.Период = лДата;
		лДвижение.Организация = Организация;
		лДвижение.Номенклатура = лВыборка.Номенклатура;
		лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
		лДвижение.СтатьяЗатрат = лВыборка.СтатьяЗатрат;
		лДвижение.Возврат = лВыборка.Возврат;
		лДвижение.Сумма = -лВыборка.СуммаРасход;
		// Приход с минусом
		лДвижение = Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Добавить();
		лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
		лДвижение.Период = лДата;
		лДвижение.Организация = Организация;
		лДвижение.Номенклатура = лВыборка.Номенклатура;
		лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
		лДвижение.СтатьяЗатрат = лВыборка.СтатьяЗатрат;
		лДвижение.Возврат = лВыборка.Возврат;
		лДвижение.Сумма = -лВыборка.СуммаРасход;
	КонецЦикла;
	Если Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Количество() > 0 Тогда 
		ЗаменитьПустуюСтатьюЗатратВСебестоимости(ВидДвиженияНакопления.Приход);
		Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	
	лСчетаОстатков = Новый Массив;
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПолуфабрикатыСобственногоПроизводства);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПокупныеИзделия);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки);
	
	лСчетаОстатковДоп = Новый Массив;
	лСчетаОстатковДоп.Добавить(ПланыСчетов.Международный.СырьеИМатериалы);
	
	лСчетаЗатрат = Новый Массив;
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный._ОсновноеПроизводство);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.ВспомогательныеПроизводства);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.ОбщепроизводственныеРасходы);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.АдминистративныеРасходы);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.БракВПроизводстве);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.ОбслуживающиеПроизводства);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный._КоммерческиеРасходы);
	
	лЗапросПоСтатьям = Новый Запрос;
	лЗапросПоСтатьям.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.Номенклатура,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.ХарактеристикаНоменклатуры,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.СтатьяЗатрат,
	|	СУММА(ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.СуммаОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Остатки(
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)) КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки
	|ГДЕ
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.СуммаОстаток <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.Номенклатура,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.ХарактеристикаНоменклатуры,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.ХарактеристикаНоменклатуры,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СтатьяЗатрат,
	|	СУММА(ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СуммаОборот) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериодаСГраницей,
	|			ПЕРИОД,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)) КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты
	|ГДЕ
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СуммаОборот <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.Номенклатура,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.ХарактеристикаНоменклатуры,
	|	ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ис_СтатьиЗатратНоменклатурыСрезПоследних.Номенклатура,
	|	ис_СтатьиЗатратНоменклатурыСрезПоследних.ХарактеристикаНоменклатуры,
	|	ис_СтатьиЗатратНоменклатурыСрезПоследних.СтатьяЗатрат,
	|	ис_СтатьиЗатратНоменклатурыСрезПоследних.Сумма КАК Сумма
	|ИЗ
	|	РегистрСведений.ис_СтатьиЗатратНоменклатуры.СрезПоследних(
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)) КАК ис_СтатьиЗатратНоменклатурыСрезПоследних
	|ГДЕ
	|	ис_СтатьиЗатратНоменклатурыСрезПоследних.Сумма <> 0";
	лЗапросПоСтатьям.УстановитьПараметр("Организация", Организация);
	
	// Выпуск
	лЗапрос = Новый Запрос;
	лЗапрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура КАК Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.СтоимостьОстаток) КАК Сумма
	|ПОМЕСТИТЬ втНачальныйОстаток
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)
	|				И СчетУчета В (&СчетаОстатков)) КАК ПартииТоваровНаСкладахМеждународныйУчетОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.ХарактеристикаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура КАК Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.СтоимостьОстаток) КАК Сумма
	|ПОМЕСТИТЬ втКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И Номенклатура В (&Номенклатура)
	|				И СчетУчета В (&СчетаОстатков)) КАК ПартииТоваровНаСкладахМеждународныйУчетОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.ХарактеристикаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВыпускПродукцииМеждународныйУчетОбороты.Продукция КАК Номенклатура,
	|	ВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот) КАК Количество,
	|	СУММА(ВыпускПродукцииМеждународныйУчетОбороты.СтоимостьОборот) КАК Сумма
	|ПОМЕСТИТЬ втВыпускПродукции
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			Организация = &Организация
	|				И Продукция В (&Номенклатура)) КАК ВыпускПродукцииМеждународныйУчетОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукцииМеждународныйУчетОбороты.Продукция,
	|	ВыпускПродукцииМеждународныйУчетОбороты.ХарактеристикаПродукции
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотДт) КАК Количество,
	|	СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК Сумма
	|ПОМЕСТИТЬ втПокупки
	|ИЗ
	|	РегистрБухгалтерии.Международный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			СчетДт В (&СчетаОстатков),
	|			,
	|			СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Международный.РасчетыСПоставщикамиИПодрядчикамиТекущие)),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 В (&Номенклатура)) КАК МеждународныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура КАК Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	НАЧАЛОПЕРИОДА(ПартииТоваровНаСкладахМеждународныйУчет.ДокументДвиженияПериод, МЕСЯЦ) КАК МесяцРеализации,
	|	СУММА(-ПартииТоваровНаСкладахМеждународныйУчет.Количество) КАК Количество,
	|	СУММА(-ПартииТоваровНаСкладахМеждународныйУчет.Стоимость) КАК Сумма
	|ПОМЕСТИТЬ втВозвраты
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК ПартииТоваровНаСкладахМеждународныйУчет
	|ГДЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Активность = ИСТИНА
	|	И ПартииТоваровНаСкладахМеждународныйУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Организация = &Организация
	|	И ПартииТоваровНаСкладахМеждународныйУчет.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета В(&СчетаОстатков)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура В(&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры,
	|	НАЧАЛОПЕРИОДА(ПартииТоваровНаСкладахМеждународныйУчет.ДокументДвиженияПериод, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотДт) КАК Количество,
	|	СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК Сумма
	|ПОМЕСТИТЬ втИзлишки
	|ИЗ
	|	РегистрБухгалтерии.Международный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			СчетДт В (&СчетаОстатков),
	|			,
	|			СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Международный.ПрочиеВнереализационныеДоходы)),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 В (&Номенклатура)) КАК МеждународныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура) КАК НоменклатураДт,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотДт) КАК КоличествоДт,
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура) КАК НоменклатураКт,
	|	СУММА(МеждународныйОборотыДтКт.КоличествоОборотКт) КАК КоличествоКт,
	|	СУММА(МеждународныйОборотыДтКт.СуммаОборот) КАК Сумма
	|ПОМЕСТИТЬ втВсеКомплектации
	|ИЗ
	|	РегистрБухгалтерии.Международный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Период,
	|			СчетДт В (&СчетаОстатков, &СчетаОстатковДоп),
	|			,
	|			СчетКт В (&СчетаОстатков, &СчетаОстатковДоп),
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 <> СубконтоКт1
	|				И (СубконтоДт1 В (&КомплектыПродукции)
	|					ИЛИ СубконтоКт1 В (&КомплектыПродукции))) КАК МеждународныйОборотыДтКт
	|ГДЕ
	|	(МеждународныйОборотыДтКт.СчетДт В (&СчетаОстатков)
	|			ИЛИ МеждународныйОборотыДтКт.СчетКт В (&СчетаОстатков))
	|	И (МеждународныйОборотыДтКт.СубконтоДт1 В (&КомплектыПродукции)
	|			ИЛИ МеждународныйОборотыДтКт.СубконтоКт1 В (&КомплектыПродукции))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура),
	|	ВЫРАЗИТЬ(МеждународныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураДт,
	|	НоменклатураКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрямыеКомплектации.НоменклатураДт КАК НоменклатураДт,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатурыДт,
	|	ПрямыеКомплектации.КоличествоДт - ОбратныеКомплектации.КоличествоКт КАК КоличествоДт,
	|	ПрямыеКомплектации.НоменклатураКт КАК НоменклатураКт,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатурыКт,
	|	ПрямыеКомплектации.КоличествоКт - ОбратныеКомплектации.КоличествоДт КАК КоличествоКт,
	|	ПрямыеКомплектации.Сумма - ОбратныеКомплектации.Сумма КАК Сумма
	|ПОМЕСТИТЬ втКомплектации
	|ИЗ
	|	втВсеКомплектации КАК ПрямыеКомплектации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеКомплектации КАК ОбратныеКомплектации
	|		ПО ПрямыеКомплектации.НоменклатураДт = ОбратныеКомплектации.НоменклатураКт
	|			И ПрямыеКомплектации.НоменклатураКт = ОбратныеКомплектации.НоменклатураДт
	|ГДЕ
	|	ПрямыеКомплектации.НоменклатураДт В(&Номенклатура)
	|	И ПрямыеКомплектации.КоличествоДт - ОбратныеКомплектации.КоличествоКт > 0
	|	И ПрямыеКомплектации.КоличествоКт - ОбратныеКомплектации.КоличествоДт <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрямыеКомплектации.НоменклатураДт,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ПрямыеКомплектации.КоличествоДт,
	|	ПрямыеКомплектации.НоменклатураКт,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ПрямыеКомплектации.КоличествоКт,
	|	ПрямыеКомплектации.Сумма
	|ИЗ
	|	втВсеКомплектации КАК ПрямыеКомплектации
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВсеКомплектации КАК ОбратныеКомплектации
	|		ПО ПрямыеКомплектации.НоменклатураДт = ОбратныеКомплектации.НоменклатураКт
	|			И ПрямыеКомплектации.НоменклатураКт = ОбратныеКомплектации.НоменклатураДт
	|ГДЕ
	|	ПрямыеКомплектации.НоменклатураДт В(&Номенклатура)
	|	И ОбратныеКомплектации.КоличествоКт ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	втКомплектации.НоменклатураКт КАК НоменклатураКт
	|ПОМЕСТИТЬ втКомплектующие
	|ИЗ
	|	втКомплектации КАК втКомплектации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.СтоимостьОстаток) КАК СтоимостьОстаток
	|ПОМЕСТИТЬ втОстаткиКомплектующих
	|ИЗ
	|	втКомплектующие КАК втКомплектующие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(&ОкончаниеПериодаСГраницей, Организация = &Организация) КАК ПартииТоваровНаСкладахМеждународныйУчетОстатки
	|		ПО втКомплектующие.НоменклатураКт = ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчетОстатки.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчетОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОбороты.КоличествоРасход) КАК КоличествоРасход,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОбороты.СтоимостьРасход) КАК СтоимостьРасход
	|ПОМЕСТИТЬ втОборотыКомплектующих
	|ИЗ
	|	втКомплектующие КАК втКомплектующие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Обороты(&НачалоПериода, &ОкончаниеПериода, Период, Организация = &Организация) КАК ПартииТоваровНаСкладахМеждународныйУчетОбороты
	|		ПО втКомплектующие.НоменклатураКт = ПартииТоваровНаСкладахМеждународныйУчетОбороты.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчетОбороты.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Движения.Номенклатура КАК Номенклатура,
	|	Движения.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(Движения.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	|	СУММА(Движения.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|	СУММА(Движения.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(Движения.СуммаПриход) КАК СуммаПриход,
	|	СУММА(Движения.КоличествоРасход) КАК КоличествоРасход,
	|	СУММА(Движения.СуммаРасход) КАК СуммаРасход,
	|	СУММА(Движения.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
	|	СУММА(Движения.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток
	|ПОМЕСТИТЬ втРасходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		втНачальныйОстаток.Номенклатура КАК Номенклатура,
	|		втНачальныйОстаток.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		втНачальныйОстаток.Количество КАК КоличествоНачальныйОстаток,
	|		втНачальныйОстаток.Сумма КАК СуммаНачальныйОстаток,
	|		втНачальныйОстаток.Количество КАК КоличествоПриход,
	|		втНачальныйОстаток.Сумма КАК СуммаПриход,
	|		втНачальныйОстаток.Количество КАК КоличествоРасход,
	|		втНачальныйОстаток.Сумма КАК СуммаРасход,
	|		0 КАК КоличествоКонечныйОстаток,
	|		0 КАК СуммаКонечныйОстаток
	|	ИЗ
	|		втНачальныйОстаток КАК втНачальныйОстаток
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втВыпускПродукции.Номенклатура,
	|		втВыпускПродукции.ХарактеристикаНоменклатуры,
	|		0,
	|		0,
	|		втВыпускПродукции.Количество,
	|		втВыпускПродукции.Сумма,
	|		втВыпускПродукции.Количество,
	|		втВыпускПродукции.Сумма,
	|		0,
	|		0
	|	ИЗ
	|		втВыпускПродукции КАК втВыпускПродукции
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втПокупки.Номенклатура,
	|		втПокупки.ХарактеристикаНоменклатуры,
	|		0,
	|		0,
	|		втПокупки.Количество,
	|		втПокупки.Сумма,
	|		втПокупки.Количество,
	|		втПокупки.Сумма,
	|		0,
	|		0
	|	ИЗ
	|		втПокупки КАК втПокупки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втВозвраты.Номенклатура,
	|		втВозвраты.ХарактеристикаНоменклатуры,
	|		0,
	|		0,
	|		втВозвраты.Количество,
	|		втВозвраты.Сумма,
	|		втВозвраты.Количество,
	|		втВозвраты.Сумма,
	|		0,
	|		0
	|	ИЗ
	|		втВозвраты КАК втВозвраты
	|	ГДЕ
	|		втВозвраты.МесяцРеализации < &НачалоПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втИзлишки.Номенклатура,
	|		втИзлишки.ХарактеристикаНоменклатуры,
	|		0,
	|		0,
	|		втИзлишки.Количество,
	|		втИзлишки.Сумма,
	|		втИзлишки.Количество,
	|		втИзлишки.Сумма,
	|		0,
	|		0
	|	ИЗ
	|		втИзлишки КАК втИзлишки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втКомплектации.НоменклатураДт,
	|		втКомплектации.ХарактеристикаНоменклатурыДт,
	|		0,
	|		0,
	|		втКомплектации.КоличествоДт,
	|		ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА втОстаткиКомплектующих.КоличествоОстаток <> 0
	|					ТОГДА втОстаткиКомплектующих.СтоимостьОстаток / втОстаткиКомплектующих.КоличествоОстаток
	|				КОГДА втОборотыКомплектующих.КоличествоРасход <> 0
	|					ТОГДА втОборотыКомплектующих.СтоимостьРасход / втОборотыКомплектующих.КоличествоРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ * втКомплектации.КоличествоКт КАК ЧИСЛО(15, 2)),
	|		втКомплектации.КоличествоДт,
	|		ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА втОстаткиКомплектующих.КоличествоОстаток <> 0
	|					ТОГДА втОстаткиКомплектующих.СтоимостьОстаток / втОстаткиКомплектующих.КоличествоОстаток
	|				КОГДА втОборотыКомплектующих.КоличествоРасход <> 0
	|					ТОГДА втОборотыКомплектующих.СтоимостьРасход / втОборотыКомплектующих.КоличествоРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ * втКомплектации.КоличествоКт КАК ЧИСЛО(15, 2)),
	|		0,
	|		0
	|	ИЗ
	|		втКомплектации КАК втКомплектации
	|			ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиКомплектующих КАК втОстаткиКомплектующих
	|			ПО втКомплектации.НоменклатураКт = втОстаткиКомплектующих.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ втОборотыКомплектующих КАК втОборотыКомплектующих
	|			ПО втКомплектации.НоменклатураКт = втОборотыКомплектующих.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втКонечныйОстаток.Номенклатура,
	|		втКонечныйОстаток.ХарактеристикаНоменклатуры,
	|		0,
	|		0,
	|		0,
	|		0,
	|		-втКонечныйОстаток.Количество,
	|		-втКонечныйОстаток.Сумма,
	|		втКонечныйОстаток.Количество,
	|		втКонечныйОстаток.Сумма
	|	ИЗ
	|		втКонечныйОстаток КАК втКонечныйОстаток) КАК Движения
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения.Номенклатура,
	|	Движения.ХарактеристикаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втРасходы.Номенклатура КАК Номенклатура,
	|	втРасходы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ИЗ
	|	втРасходы КАК втРасходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втКомплектации.НоменклатураКт,
	|	втКомплектации.ХарактеристикаНоменклатурыКт
	|ИЗ
	|	втКомплектации КАК втКомплектации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втВыпускПродукции.Номенклатура КАК Номенклатура,
	|	втВыпускПродукции.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ис_СебестоимостьВыпускаМеждународный.СтатьяЗатрат, ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)) КАК СтатьяЗатрат,
	|	СУММА(втВыпускПродукции.Количество * ЕСТЬNULL(ис_СебестоимостьВыпускаМеждународный.СуммаНаЕдиницу, 1)) КАК Сумма
	|ИЗ
	|	втВыпускПродукции КАК втВыпускПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ис_СебестоимостьВыпускаМеждународный КАК ис_СебестоимостьВыпускаМеждународный
	|		ПО втВыпускПродукции.Номенклатура = ис_СебестоимостьВыпускаМеждународный.Номенклатура
	|			И втВыпускПродукции.ХарактеристикаНоменклатуры = ис_СебестоимостьВыпускаМеждународный.ХарактеристикаНоменклатуры
	|			И (ис_СебестоимостьВыпускаМеждународный.МесяцВыпуска МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
	|
	|СГРУППИРОВАТЬ ПО
	|	втВыпускПродукции.Номенклатура,
	|	втВыпускПродукции.ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ис_СебестоимостьВыпускаМеждународный.СтатьяЗатрат, ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втВозвраты.Номенклатура КАК Номенклатура,
	|	втВозвраты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	втВозвраты.Количество КАК Количество,
	|	втВозвраты.Сумма КАК Сумма,
	|	втВозвраты.МесяцРеализации,
	|	""Возврат"" КАК Операция,
	|	NULL КАК НоменклатураКт,
	|	NULL КАК ХарактеристикаНоменклатурыКт,
	|	0 КАК КоличествоКт
	|ИЗ
	|	втВозвраты КАК втВозвраты
	|ГДЕ
	|	втВозвраты.МесяцРеализации < &НачалоПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втИзлишки.Номенклатура,
	|	втИзлишки.ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(втИзлишки.Количество),
	|	МАКСИМУМ(втИзлишки.Сумма),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	""Излишки"",
	|	NULL,
	|	NULL,
	|	0
	|ИЗ
	|	втИзлишки КАК втИзлишки
	|
	|СГРУППИРОВАТЬ ПО
	|	втИзлишки.Номенклатура,
	|	втИзлишки.ХарактеристикаНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПокупки.Номенклатура,
	|	втПокупки.ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(втПокупки.Количество),
	|	МАКСИМУМ(втПокупки.Сумма),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	""Покупки"",
	|	NULL,
	|	NULL,
	|	0
	|ИЗ
	|	втПокупки КАК втПокупки
	|
	|СГРУППИРОВАТЬ ПО
	|	втПокупки.Номенклатура,
	|	втПокупки.ХарактеристикаНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втКомплектации.НоменклатураДт,
	|	втКомплектации.ХарактеристикаНоменклатурыДт,
	|	МАКСИМУМ(втКомплектации.КоличествоДт),
	|	МАКСИМУМ(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА втОстаткиКомплектующих.КоличествоОстаток <> 0
	|					ТОГДА втОстаткиКомплектующих.СтоимостьОстаток / втОстаткиКомплектующих.КоличествоОстаток
	|				КОГДА втОборотыКомплектующих.КоличествоРасход <> 0
	|					ТОГДА втОборотыКомплектующих.СтоимостьРасход / втОборотыКомплектующих.КоличествоРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ * втКомплектации.КоличествоКт КАК ЧИСЛО(15, 2))),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	""Комплектация"",
	|	втКомплектации.НоменклатураКт,
	|	втКомплектации.ХарактеристикаНоменклатурыКт,
	|	МАКСИМУМ(втКомплектации.КоличествоКт)
	|ИЗ
	|	втКомплектации КАК втКомплектации
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиКомплектующих КАК втОстаткиКомплектующих
	|		ПО втКомплектации.НоменклатураКт = втОстаткиКомплектующих.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОборотыКомплектующих КАК втОборотыКомплектующих
	|		ПО втКомплектации.НоменклатураКт = втОборотыКомплектующих.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	втКомплектации.НоменклатураДт,
	|	втКомплектации.ХарактеристикаНоменклатурыДт,
	|	втКомплектации.НоменклатураКт,
	|	втКомплектации.ХарактеристикаНоменклатурыКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры";
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("Номенклатура", Номенклатура);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации),ВидГраницы.Включая));
	лЗапрос.УстановитьПараметр("СчетаОстатков", лСчетаОстатков);
	лЗапрос.УстановитьПараметр("СчетаОстатковДоп", лСчетаОстатковДоп);
	лЗапрос.УстановитьПараметр("СчетаЗатрат", лСчетаЗатрат);
	лЗапрос.УстановитьПараметр("КомплектыПродукции", КомплектыПродукции);
	лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
	// Начальная средневзешенная по статьям
	лНоменклатураДвижений = лРезультатыЗапроса[12].Выгрузить();
	лЗапросПоСтатьям.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапросПоСтатьям.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации),ВидГраницы.Включая));
	лЗапросПоСтатьям.УстановитьПараметр("Номенклатура", лНоменклатураДвижений.ВыгрузитьКолонку("Номенклатура"));
	лРезультатыЗапросаПоСтатьям = лЗапросПоСтатьям.ВыполнитьПакет();
	лСтатьиЗатратВсейНоменклатуры1 = лРезультатыЗапросаПоСтатьям[0].Выгрузить();
	лСтатьиЗатратВсейНоменклатуры1.Индексы.Добавить("Номенклатура, ХарактеристикаНоменклатуры");
	лСтатьиЗатратВсейНоменклатуры2 = лРезультатыЗапросаПоСтатьям[1].Выгрузить();
	лСтатьиЗатратВсейНоменклатуры2.Индексы.Добавить("Номенклатура, ХарактеристикаНоменклатуры");
	лСтатьиЗатратВсейНоменклатуры3 = лРезультатыЗапросаПоСтатьям[2].Выгрузить();
	лСтатьиЗатратВсейНоменклатуры3.Индексы.Добавить("Номенклатура, ХарактеристикаНоменклатуры");
	// Выпуск
	лВыборка = лРезультатыЗапроса[13].Выбрать();
	Пока лВыборка.Следующий() Цикл 
		Если ЗначениеЗаполнено(лВыборка.Сумма) Тогда 
			лДвижение = Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Добавить();
			лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
			лДвижение.Период = лДата;
			лДвижение.Организация = Организация;
			лДвижение.Номенклатура = лВыборка.Номенклатура;
			лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
			лДвижение.СтатьяЗатрат = лВыборка.СтатьяЗатрат;
			лДвижение.Сумма = лВыборка.Сумма;
		КонецЕсли;
	КонецЦикла;
	//Если Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Количество() > 0 Тогда 
	//	ЗаменитьПустуюСтатьюЗатратВСебестоимости();
	//	Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Записать(Ложь);
	//КонецЕсли;
	// Возвраты, излишки и комплектации
	лВыборка = лРезультатыЗапроса[14].Выбрать();
	Пока лВыборка.Следующий() Цикл 
		// Получение статей затрат
		Если лВыборка.Операция = "Возврат" Тогда 
			лЗапросПоСтатьям.УстановитьПараметр("НачалоПериода", НачалоМесяца(лВыборка.МесяцРеализации));
			лЗапросПоСтатьям.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(лВыборка.МесяцРеализации),ВидГраницы.Включая));
			лЗапросПоСтатьям.УстановитьПараметр("Номенклатура", лВыборка.Номенклатура);
			лРезультатыЗапросаПоСтатьям = лЗапросПоСтатьям.ВыполнитьПакет();
			лСтатьиЗатратНоменклатуры1 = лРезультатыЗапросаПоСтатьям[0].Выгрузить();
			лСтатьиЗатратНоменклатуры2 = лРезультатыЗапросаПоСтатьям[1].Выгрузить();
			лСтатьиЗатратНоменклатуры3 = лРезультатыЗапросаПоСтатьям[2].Выгрузить();
		Иначе
			Если лВыборка.Операция = "Комплектация" Тогда 
				лОтбор = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", лВыборка.НоменклатураКт, лВыборка.ХарактеристикаНоменклатурыКт);
			Иначе
				лОтбор = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", лВыборка.Номенклатура, лВыборка.ХарактеристикаНоменклатуры);
			КонецЕсли;
			лСтатьиЗатратНоменклатуры1 = лСтатьиЗатратВсейНоменклатуры1.Скопировать(лОтбор);
			лСтатьиЗатратНоменклатуры2 = лСтатьиЗатратВсейНоменклатуры2.Скопировать(лОтбор);
			лСтатьиЗатратНоменклатуры3 = лСтатьиЗатратВсейНоменклатуры3.Скопировать(лОтбор);
		КонецЕсли;
		лСтатьиЗатратНоменклатуры = лСтатьиЗатратНоменклатуры1;
		Если лСтатьиЗатратНоменклатуры.Количество() = 0 Тогда 
			лСтатьиЗатратНоменклатуры = лСтатьиЗатратНоменклатуры2;
			Если лСтатьиЗатратНоменклатуры.Количество() = 0 Тогда 
				лСтатьиЗатратНоменклатуры = лСтатьиЗатратНоменклатуры3;
				Если лСтатьиЗатратНоменклатуры.Количество() = 0 Тогда 
					лСтатьиЗатратНоменклатуры = Неопределено;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		// Расчет
		лСуммаОстаток = лВыборка.Сумма;
		Если лСтатьиЗатратНоменклатуры <> Неопределено Тогда 
			// Разброс суммы по статьям затрат
			лБаза = лСтатьиЗатратНоменклатуры.Итог("Сумма");
			Если ЗначениеЗаполнено(лБаза) Тогда  
				лДвижение = Неопределено;
				Для Каждого лСтрокаСтатьяЗатрат Из лСтатьиЗатратНоменклатуры Цикл 
					лСумма = Окр(лСтрокаСтатьяЗатрат.Сумма/лБаза*лВыборка.Сумма, 10);
					Если лСумма = 0 Тогда 
						Продолжить;
					КонецЕсли;
					лДвижение = Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Добавить();
					лДвижение.ВидДвижения = ?(лВыборка.Операция="Возврат", ВидДвиженияНакопления.Расход, ВидДвиженияНакопления.Приход);
					лДвижение.Период = лДата;
					лДвижение.Организация = Организация;
					лДвижение.Номенклатура = лВыборка.Номенклатура;
					лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
					лДвижение.СтатьяЗатрат = лСтрокаСтатьяЗатрат.СтатьяЗатрат;
					лДвижение.Возврат = ?(лВыборка.Операция="Возврат", Истина, Ложь);
					лДвижение.Сумма = ?(лВыборка.Операция="Возврат", -лСумма, лСумма);
					лСуммаОстаток = лСуммаОстаток - лСумма;
				КонецЦикла;
				Если лСуммаОстаток <> 0 
				 И лДвижение <> Неопределено Тогда 
					лДвижение.Сумма = лДвижение.Сумма + ?(лВыборка.Операция="Возврат", -лСуммаОстаток, лСуммаОстаток);
					лСуммаОстаток = 0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(лСуммаОстаток) Тогда 
			лСтатьяЗатрат = лВыборка.Номенклатура.СтатьяЗатрат;
			лДвижение = Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Добавить();
			лДвижение.ВидДвижения = ?(лВыборка.Операция="Возврат", ВидДвиженияНакопления.Расход, ВидДвиженияНакопления.Приход);
			лДвижение.Период = лДата;
			лДвижение.Организация = Организация;
			лДвижение.Номенклатура = лВыборка.Номенклатура;
			лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
			лДвижение.СтатьяЗатрат = лСтатьяЗатрат;
			лДвижение.Возврат = ?(лВыборка.Операция="Возврат", Истина, Ложь);
			лДвижение.Сумма = ?(лВыборка.Операция="Возврат", -лСуммаОстаток, лСуммаОстаток);
			лСуммаОстаток = 0;
			Если Не ЗначениеЗаполнено(лСтатьяЗатрат) Тогда 
				Если лВыборка.Операция = "Возврат" Тогда 
					Сообщить("При расчете средневзвешенной себестоимости при возврате для <"+лВыборка.Номенклатура+"> не найдены данные по статьям затрат на "+Формат(лВыборка.МесяцРеализации, "ДФ=MM.yyyy"));
				ИначеЕсли лВыборка.Операция = "Излишки" Тогда 
					Сообщить("При расчете средневзвешенной себестоимости при оприходование излишков для <"+лВыборка.Номенклатура+"> не найдены данные по статьям затрат");
				ИначеЕсли лВыборка.Операция = "Комплектация" Тогда 
					Сообщить("При расчете средневзвешенной себестоимости при комплектации для <"+лВыборка.Номенклатура+"> не найдены данные по статьям затрат");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Количество() > 0 Тогда 
		ЗаменитьПустуюСтатьюЗатратВСебестоимости();
		Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	
	// Средневзешенная по статьям при прочем приходе
	лЗапросПоСтатьям.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапросПоСтатьям.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации),ВидГраницы.Включая));
	лЗапросПоСтатьям.УстановитьПараметр("Номенклатура", лНоменклатураДвижений.ВыгрузитьКолонку("Номенклатура"));
	лРезультатыЗапросаПоСтатьям = лЗапросПоСтатьям.ВыполнитьПакет();
	лСтатьиЗатратВсейНоменклатуры1 = лРезультатыЗапросаПоСтатьям[0].Выгрузить();
	лСтатьиЗатратВсейНоменклатуры1.Индексы.Добавить("Номенклатура, ХарактеристикаНоменклатуры");
	лСтатьиЗатратВсейНоменклатуры2 = лРезультатыЗапросаПоСтатьям[1].Выгрузить();
	лСтатьиЗатратВсейНоменклатуры2.Индексы.Добавить("Номенклатура, ХарактеристикаНоменклатуры");
	лСтатьиЗатратВсейНоменклатуры3 = лРезультатыЗапросаПоСтатьям[2].Выгрузить();
	лСтатьиЗатратВсейНоменклатуры3.Индексы.Добавить("Номенклатура, ХарактеристикаНоменклатуры");
	
	// Прочий приход
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втРасходы.Номенклатура КАК Номенклатура,
	|	втРасходы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(втРасходы.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	|	МАКСИМУМ(втРасходы.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|	МАКСИМУМ(втРасходы.КоличествоПриход) КАК КоличествоПриход,
	|	МАКСИМУМ(втРасходы.СуммаПриход) КАК СуммаПриход,
	|	МАКСИМУМ(втРасходы.КоличествоРасход) КАК КоличествоРасход,
	|	МАКСИМУМ(втРасходы.СуммаРасход) КАК СуммаРасход,
	|	МАКСИМУМ(втРасходы.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
	|	МАКСИМУМ(втРасходы.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток,
	|	ЕСТЬNULL(СУММА(ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.СуммаОстаток), 0) КАК СуммаПоСтатьям
	|ИЗ
	|	втРасходы КАК втРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Остатки(&ОкончаниеПериодаСГраницей, Организация = &Организация) КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки
	|		ПО втРасходы.Номенклатура = ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.Номенклатура
	|			И втРасходы.ХарактеристикаНоменклатуры = ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.ХарактеристикаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	втРасходы.Номенклатура,
	|	втРасходы.ХарактеристикаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры";
	лВыборка = лЗапрос.Выполнить().Выбрать();
	Пока лВыборка.Следующий() Цикл 
		лСуммаПрочийПриход = лВыборка.СуммаПриход - лВыборка.СуммаПоСтатьям;
		Если лСуммаПрочийПриход <> 0 Тогда 
			лОтбор = Новый Структура("Номенклатура", лВыборка.Номенклатура);
			лСтатьиЗатратНоменклатуры1 = лСтатьиЗатратВсейНоменклатуры1.Скопировать(лОтбор);
			лСтатьиЗатратНоменклатуры2 = лСтатьиЗатратВсейНоменклатуры2.Скопировать(лОтбор);
			лСтатьиЗатратНоменклатуры3 = лСтатьиЗатратВсейНоменклатуры3.Скопировать(лОтбор);
			лСтатьиЗатратНоменклатуры = лСтатьиЗатратНоменклатуры1;
			Если лСтатьиЗатратНоменклатуры.Количество() = 0 Тогда 
				лСтатьиЗатратНоменклатуры = лСтатьиЗатратНоменклатуры2;
				Если лСтатьиЗатратНоменклатуры.Количество() = 0 Тогда 
					лСтатьиЗатратНоменклатуры = лСтатьиЗатратНоменклатуры3;
					Если лСтатьиЗатратНоменклатуры.Количество() = 0 Тогда 
						лСтатьиЗатратНоменклатуры = Неопределено;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			// Расчет
			лСуммаОстаток = лСуммаПрочийПриход;
			Если лСтатьиЗатратНоменклатуры <> Неопределено Тогда 
				// Разброс суммы по статьям затрат
				лБаза = лСтатьиЗатратНоменклатуры.Итог("Сумма");
				Если ЗначениеЗаполнено(лБаза) Тогда  
					лДвижение = Неопределено;
					Для Каждого лСтрокаСтатьяЗатрат Из лСтатьиЗатратНоменклатуры Цикл 
						лСумма = Окр(лСтрокаСтатьяЗатрат.Сумма/лБаза*лСуммаПрочийПриход, 10);
						Если лСумма = 0 Тогда 
							Продолжить;
						КонецЕсли;
						лДвижение = Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Добавить();
						лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
						лДвижение.Период = лДата;
						лДвижение.Организация = Организация;
						лДвижение.Номенклатура = лВыборка.Номенклатура;
						лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
						лДвижение.СтатьяЗатрат = лСтрокаСтатьяЗатрат.СтатьяЗатрат;
						лДвижение.Сумма = лСумма;
						лСуммаОстаток = лСуммаОстаток - лДвижение.Сумма;
					КонецЦикла;
					Если лСуммаОстаток <> 0 
					 И лДвижение <> Неопределено Тогда 
						лДвижение.Сумма = лДвижение.Сумма + лСуммаОстаток;
						лСуммаОстаток = 0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если ЗначениеЗаполнено(лСуммаОстаток) Тогда 
				лСтатьяЗатрат = лВыборка.Номенклатура.СтатьяЗатрат;
				лДвижение = Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Добавить();
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
				лДвижение.Период = лДата;
				лДвижение.Организация = Организация;
				лДвижение.Номенклатура = лВыборка.Номенклатура;
				лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
				лДвижение.СтатьяЗатрат = лСтатьяЗатрат;
				лДвижение.Сумма = лСуммаОстаток;
				лСуммаОстаток = 0;
				Если Не ЗначениеЗаполнено(лСтатьяЗатрат) Тогда 
					Сообщить("При расчете средневзвешенной себестоимости для <"+лВыборка.Номенклатура+"> не найдены данные по статьям затрат");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Количество() > 0 Тогда 
		ЗаменитьПустуюСтатьюЗатратВСебестоимости();
		Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	
	// Средневзешенная по статьям при расходе
	лЗапросПоСтатьям.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапросПоСтатьям.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации),ВидГраницы.Включая));
	лЗапросПоСтатьям.УстановитьПараметр("Номенклатура", лНоменклатураДвижений.ВыгрузитьКолонку("Номенклатура"));
	лРезультатыЗапросаПоСтатьям = лЗапросПоСтатьям.ВыполнитьПакет();
	лСтатьиЗатратВсейНоменклатуры1 = лРезультатыЗапросаПоСтатьям[0].Выгрузить();
	лСтатьиЗатратВсейНоменклатуры1.Индексы.Добавить("Номенклатура, ХарактеристикаНоменклатуры");
	лСтатьиЗатратВсейНоменклатуры2 = лРезультатыЗапросаПоСтатьям[1].Выгрузить();
	лСтатьиЗатратВсейНоменклатуры2.Индексы.Добавить("Номенклатура, ХарактеристикаНоменклатуры");
	лСтатьиЗатратВсейНоменклатуры3 = лРезультатыЗапросаПоСтатьям[2].Выгрузить();
	лСтатьиЗатратВсейНоменклатуры3.Индексы.Добавить("Номенклатура, ХарактеристикаНоменклатуры");
	
	// Реализации и прочий расход
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втРасходы.Номенклатура КАК Номенклатура,
	|	втРасходы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	втРасходы.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
	|	втРасходы.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	втРасходы.КоличествоПриход КАК КоличествоПриход,
	|	втРасходы.СуммаПриход КАК СуммаПриход,
	|	втРасходы.КоличествоРасход КАК КоличествоРасход,
	|	втРасходы.СуммаРасход КАК СуммаРасход,
	|	втРасходы.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	|	втРасходы.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток
	|ИЗ
	|	втРасходы КАК втРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры";
	лВыборка = лЗапрос.Выполнить().Выбрать();
	Пока лВыборка.Следующий() Цикл 
		лСуммаРасход = лВыборка.СуммаРасход;
		Если лСуммаРасход <> 0 Тогда 
			лОтбор = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", лВыборка.Номенклатура, лВыборка.ХарактеристикаНоменклатуры);
			лСтатьиЗатратНоменклатуры1 = лСтатьиЗатратВсейНоменклатуры1.Скопировать(лОтбор);
			лСтатьиЗатратНоменклатуры2 = лСтатьиЗатратВсейНоменклатуры2.Скопировать(лОтбор);
			лСтатьиЗатратНоменклатуры3 = лСтатьиЗатратВсейНоменклатуры3.Скопировать(лОтбор);
			лСтатьиЗатратНоменклатуры = лСтатьиЗатратНоменклатуры1;
			Если лСтатьиЗатратНоменклатуры.Количество() = 0 Тогда 
				лСтатьиЗатратНоменклатуры = лСтатьиЗатратНоменклатуры2;
				Если лСтатьиЗатратНоменклатуры.Количество() = 0 Тогда 
					лСтатьиЗатратНоменклатуры = лСтатьиЗатратНоменклатуры3;
					Если лСтатьиЗатратНоменклатуры.Количество() = 0 Тогда 
						лСтатьиЗатратНоменклатуры = Неопределено;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			// Расчет
			лСуммаОстаток = лСуммаРасход;
			Если лСтатьиЗатратНоменклатуры <> Неопределено Тогда 
				// Разброс суммы по статьям затрат
				лБаза = лСтатьиЗатратНоменклатуры.Итог("Сумма");
				Если ЗначениеЗаполнено(лБаза) Тогда  
					лДвижение = Неопределено;
					Для Каждого лСтрокаСтатьяЗатрат Из лСтатьиЗатратНоменклатуры Цикл 
						лСумма = Окр(лСтрокаСтатьяЗатрат.Сумма/лБаза*лСуммаРасход, 10);
						Если лСумма = 0 Тогда 
							Продолжить;
						КонецЕсли;
						лДвижение = Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Добавить();
						лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
						лДвижение.Период = лДата;
						лДвижение.Организация = Организация;
						лДвижение.Номенклатура = лВыборка.Номенклатура;
						лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
						лДвижение.СтатьяЗатрат = лСтрокаСтатьяЗатрат.СтатьяЗатрат;
						лДвижение.Сумма = лСумма;
						лСуммаОстаток = лСуммаОстаток - лДвижение.Сумма;
					КонецЦикла;
					Если лСуммаОстаток <> 0 
					 И лДвижение <> Неопределено Тогда 
						лДвижение.Сумма = лДвижение.Сумма + лСуммаОстаток;
						лСуммаОстаток = 0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если ЗначениеЗаполнено(лСуммаОстаток) Тогда 
				лСтатьяЗатрат = лВыборка.Номенклатура.СтатьяЗатрат;
				лДвижение = Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Добавить();
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
				лДвижение.Период = лДата;
				лДвижение.Организация = Организация;
				лДвижение.Номенклатура = лВыборка.Номенклатура;
				лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
				лДвижение.СтатьяЗатрат = лСтатьяЗатрат;
				лДвижение.Сумма = лСуммаОстаток;
				лСуммаОстаток = 0;
				Если Не ЗначениеЗаполнено(лСтатьяЗатрат) Тогда 
					Сообщить("При расчете средневзвешенной себестоимости для <"+лВыборка.Номенклатура+"> не найдены данные по статьям затрат");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Количество() > 0 Тогда 
		ЗаменитьПустуюСтатьюЗатратВСебестоимости();
		Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	
	лЗапрос.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// is ЯннуровВФ 20150721
Процедура ЗаменитьПустуюСтатьюЗатратВСебестоимости(ВидДвижения=Неопределено)
	
	лПустаяСтатьяЗатрат = Справочники.СтатьиЗатрат.НайтиПоКоду("000010849");
	
	Для Каждого лЗапись Из Движения.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет Цикл 
		Если Не ЗначениеЗаполнено(лЗапись.СтатьяЗатрат) 
		 И (лЗапись.ВидДвижения=ВидДвижения Или ВидДвижения=Неопределено) Тогда 
			лЗапись.СтатьяЗатрат = лПустаяСтатьяЗатрат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// is ЯннуровВФ 20140715
Процедура РасчетСтоимостиВозвратов() Экспорт 
	
	Если Не ОтражатьВМеждународномУчете Тогда 
		Возврат;
	КонецЕсли;
	
	лДата = КонецМесяца(ПериодРегистрации);
	
	Движения.ПартииТоваровНаСкладахМеждународныйУчет.Очистить();
	Движения.Международный.Очистить();
	
	лЗапросВнеВыпуска = Новый Запрос;
	лЗапросВнеВыпуска.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОстатки.КоличествоОстаток) КАК Количество
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И Номенклатура = &Номенклатура
	|				И СчетУчета В (ЗНАЧЕНИЕ(ПланСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки), ЗНАЧЕНИЕ(ПланСчетов.Международный._ПолуфабрикатыСобственногоПроизводства))) КАК ПартииТоваровНаСкладахМеждународныйУчетОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки.СуммаОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Остатки(
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И Номенклатура = &Номенклатура) КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчетОбороты.КоличествоОборот) КАК Количество
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериодаСГраницей,
	|			ПЕРИОД,
	|			Организация = &Организация
	|				И Номенклатура = &Номенклатура
	|				И СчетУчета В (ЗНАЧЕНИЕ(ПланСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки), ЗНАЧЕНИЕ(ПланСчетов.Международный._ПолуфабрикатыСобственногоПроизводства))) КАК ПартииТоваровНаСкладахМеждународныйУчетОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты.СуммаОборот) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ис_СредневзвешеннаяСебестоимостьМеждународныйУчет.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериодаСГраницей,
	|			ПЕРИОД,
	|			Организация = &Организация
	|				И Номенклатура = &Номенклатура) КАК ис_СредневзвешеннаяСебестоимостьМеждународныйУчетОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Активность,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ВидДвижения,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Организация,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Склад,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Заказ,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Качество,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Количество,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Стоимость,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СписаниеПартий,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КодОперации,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументДвижения,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументДвиженияПериод
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК ПартииТоваровНаСкладахМеждународныйУчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СписанныеТовары КАК СписанныеТовары
	|		ПО ПартииТоваровНаСкладахМеждународныйУчет.Регистратор = СписанныеТовары.Регистратор
	|			И ПартииТоваровНаСкладахМеждународныйУчет.Период = СписанныеТовары.Период
	|			И ПартииТоваровНаСкладахМеждународныйУчет.НомерСтрокиСписанныхТоваров = СписанныеТовары.НомерСтрокиДокумента
	|ГДЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Период МЕЖДУ &НачалоПериодаРасчета И &ОкончаниеПериодаРасчета
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Активность = ИСТИНА
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Организация = &Организация
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура = &Номенклатура
	|	И ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета = &СчетУчета
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Количество < 0
	|	И ПартииТоваровНаСкладахМеждународныйУчет.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийПартииТоваров.ВозвратОтПокупателя)
	|	И СписанныеТовары.ДокументПартии = &ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МеждународныйДвиженияССубконто.Сумма,
	|	МеждународныйДвиженияССубконто.СчетДт,
	|	МеждународныйДвиженияССубконто.СубконтоДт1,
	|	МеждународныйДвиженияССубконто.СубконтоДт2,
	|	МеждународныйДвиженияССубконто.СубконтоДт3,
	|	МеждународныйДвиженияССубконто.ВалютаДт,
	|	МеждународныйДвиженияССубконто.ВалютнаяСуммаДт,
	|	МеждународныйДвиженияССубконто.КоличествоДт,
	|	МеждународныйДвиженияССубконто.СчетКт,
	|	МеждународныйДвиженияССубконто.СубконтоКт1,
	|	МеждународныйДвиженияССубконто.СубконтоКт2,
	|	МеждународныйДвиженияССубконто.СубконтоКт3,
	|	МеждународныйДвиженияССубконто.Организация,
	|	МеждународныйДвиженияССубконто.ВалютаКт,
	|	МеждународныйДвиженияССубконто.ВалютнаяСуммаКт,
	|	МеждународныйДвиженияССубконто.КоличествоКт,
	|	МеждународныйДвиженияССубконто.Содержание,
	|	МеждународныйДвиженияССубконто.ПервичныйДокумент,
	|	МеждународныйДвиженияССубконто.НомерЖурнала
	|ИЗ
	|	РегистрБухгалтерии.Международный.ДвиженияССубконто(
	|			&НачалоПериодаРасчета,
	|			&ОкончаниеПериодаРасчета,
	|			Активность = ИСТИНА
	|				И Организация = &Организация
	|				И СчетДт = &КорСчет
	|				И СчетКт = &СчетУчета
	|				И СубконтоКт1 = &Номенклатура
	|				И КоличествоКт < 0
	|				И ПервичныйДокумент ССЫЛКА Документ.КорректировкаРеализации
	|				И ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации ССЫЛКА Документ.РеализацияТоваровУслуг
	|						ТОГДА ВЫРАЗИТЬ(ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации = &ДокументРеализации
	|					КОГДА ВЫРАЗИТЬ(ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
	|						ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации КАК Документ.КорректировкаРеализации).ДокументРеализации = &ДокументРеализации
	|					КОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации КАК Документ.КорректировкаРеализации).ДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
	|						ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(ВЫРАЗИТЬ(ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации КАК Документ.КорректировкаРеализации).ДокументРеализации КАК Документ.КорректировкаРеализации).ДокументРеализации = &ДокументРеализации
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ,
	|			,
	|			) КАК МеждународныйДвиженияССубконто";
	лЗапросВнеВыпуска.УстановитьПараметр("Организация", Организация);
	лЗапросВнеВыпуска.УстановитьПараметр("НачалоПериодаРасчета", НачалоМесяца(ПериодРегистрации));
	лЗапросВнеВыпуска.УстановитьПараметр("ОкончаниеПериодаРасчета", КонецМесяца(ПериодРегистрации));
	
	// Выпуск
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МеждународныйДвиженияССубконто.СчетДт КАК КорСчет,
	|	МеждународныйДвиженияССубконто.СчетКт КАК СчетУчета,
	|	МеждународныйДвиженияССубконто.СубконтоКт1 КАК Номенклатура,
	|	ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации КАК ДокументРеализации,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА МеждународныйДвиженияССубконто.ПервичныйДокумент ССЫЛКА Документ.КорректировкаРеализации
	|				ТОГДА ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации.Дата
	|			КОГДА МеждународныйДвиженияССубконто.ПервичныйДокумент ССЫЛКА Документ.КорректировкаРеализации
	|					И ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
	|					И ВЫРАЗИТЬ(ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации КАК Документ.КорректировкаРеализации).ДокументРеализации ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации КАК Документ.КорректировкаРеализации).ДокументРеализации.Дата
	|			ИНАЧЕ МеждународныйДвиженияССубконто.Период
	|		КОНЕЦ, МЕСЯЦ) КАК МесяцРеализации,
	|	СУММА(-МеждународныйДвиженияССубконто.КоличествоКт) КАК Количество,
	|	СУММА(-МеждународныйДвиженияССубконто.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втВозвраты
	|ИЗ
	|	РегистрБухгалтерии.Международный.ДвиженияССубконто(
	|			&НачалоПериода,
	|			&ОкончаниеПериодаСГраницей,
	|			Организация = &Организация
	|				И СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Международный.СебестоимостьПродаж), ЗНАЧЕНИЕ(ПланСчетов.Международный._КорректировкаТоваровПрошлогоПериода))
	|				И СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки), ЗНАЧЕНИЕ(ПланСчетов.Международный._ПолуфабрикатыСобственногоПроизводства))
	|				И (СубконтоКт1 = &Номенклатура ИЛИ &Номенклатура = НЕОПРЕДЕЛЕНО)
	|				И КоличествоКт < 0
	|				И ПервичныйДокумент ССЫЛКА Документ.КорректировкаРеализации
	|				И Активность = ИСТИНА,
	|			,
	|			) КАК МеждународныйДвиженияССубконто
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйДвиженияССубконто.СчетДт,
	|	МеждународныйДвиженияССубконто.СчетКт,
	|	МеждународныйДвиженияССубконто.СубконтоКт1,
	|	ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА МеждународныйДвиженияССубконто.ПервичныйДокумент ССЫЛКА Документ.КорректировкаРеализации
	|				ТОГДА ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации.Дата
	|			КОГДА МеждународныйДвиженияССубконто.ПервичныйДокумент ССЫЛКА Документ.КорректировкаРеализации
	|					И ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
	|					И ВЫРАЗИТЬ(ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации КАК Документ.КорректировкаРеализации).ДокументРеализации ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ВЫРАЗИТЬ(МеждународныйДвиженияССубконто.ПервичныйДокумент КАК Документ.КорректировкаРеализации).ДокументРеализации КАК Документ.КорректировкаРеализации).ДокументРеализации.Дата
	|			ИНАЧЕ МеждународныйДвиженияССубконто.Период
	|		КОНЕЦ, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втВозвраты.КорСчет КАК КорСчет,
	|	втВозвраты.СчетУчета КАК СчетУчета,
	|	втВозвраты.Номенклатура КАК Номенклатура,
	|	втВозвраты.ДокументРеализации,
	|	втВозвраты.Количество КАК Количество,
	|	втВозвраты.Сумма КАК Сумма,
	|	втВозвраты.МесяцРеализации
	|ИЗ
	|	втВозвраты КАК втВозвраты
	|ГДЕ
	|	втВозвраты.МесяцРеализации < &НачалоПериода";
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("Номенклатура", Неопределено);
	//лЗапрос.УстановитьПараметр("Номенклатура", Справочники.Номенклатура.НайтиПоКоду("500501      "));
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации),ВидГраницы.Включая));
	лВыборка = лЗапрос.Выполнить().Выбрать();
	Пока лВыборка.Следующий() Цикл 
		лЗапросВнеВыпуска.УстановитьПараметр("НачалоПериода", НачалоМесяца(лВыборка.МесяцРеализации));
		лЗапросВнеВыпуска.УстановитьПараметр("ОкончаниеПериода", Новый Граница(КонецМесяца(лВыборка.МесяцРеализации),ВидГраницы.Включая));
		лЗапросВнеВыпуска.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(лВыборка.МесяцРеализации),ВидГраницы.Включая));
		лЗапросВнеВыпуска.УстановитьПараметр("Номенклатура", лВыборка.Номенклатура);
		лЗапросВнеВыпуска.УстановитьПараметр("СчетУчета", лВыборка.СчетУчета);
		лЗапросВнеВыпуска.УстановитьПараметр("КорСчет", лВыборка.КорСчет);
		лЗапросВнеВыпуска.УстановитьПараметр("ДокументРеализации", лВыборка.ДокументРеализации);
		лРезультатыЗапросаВозвраты = лЗапросВнеВыпуска.ВыполнитьПакет();
		// Получение
		лВыборкаКоличество = лРезультатыЗапросаВозвраты[0].Выбрать();
		лВыборкаСумма = лРезультатыЗапросаВозвраты[1].Выбрать();
		Если Не лВыборкаКоличество.Следующий() 
		 Или Не ЗначениеЗаполнено(лВыборкаКоличество.Количество) Тогда 
			лВыборкаКоличество = лРезультатыЗапросаВозвраты[2].Выбрать();
			лВыборкаСумма = лРезультатыЗапросаВозвраты[3].Выбрать();
			Если Не лВыборкаКоличество.Следующий() 
			 Или Не ЗначениеЗаполнено(лВыборкаКоличество.Количество) Тогда 
				лВыборкаКоличество = Неопределено;
				лВыборкаСумма = Неопределено;
			КонецЕсли;
		КонецЕсли;
		// Расчет
		Если лВыборкаКоличество <> Неопределено Тогда 
			Если лВыборкаСумма.Следующий() Тогда 
				лСуммаЗаЕдиницу = лВыборкаСумма.Сумма / лВыборкаКоличество.Количество;
				лВыборкаПартии = лРезультатыЗапросаВозвраты[4].Выбрать();
			 	Пока лВыборкаПартии.Следующий() Цикл 
					лДвижение = Движения.ПартииТоваровНаСкладахМеждународныйУчет.Добавить();
					лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
					ЗаполнитьЗначенияСвойств(лДвижение, лВыборкаПартии);
					лДвижение.Период = лДата;
					лДвижение.Количество = 0;
					лДвижение.Стоимость = лСуммаЗаЕдиницу * лВыборкаПартии.Количество;
				КонецЦикла;
				лВыборкаПроводки = лРезультатыЗапросаВозвраты[5].Выбрать();
				Пока лВыборкаПроводки.Следующий() Цикл 
					лПроводка = Движения.Международный.Добавить();
					ЗаполнитьЗначенияСвойств(лПроводка, лВыборкаПроводки);
					Для лНомерСубконто=1 По лПроводка.СчетДт.ВидыСубконто.Количество() Цикл 
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лНомерСубконто, лВыборкаПроводки["СубконтоДт"+лНомерСубконто]);
					КонецЦикла;
					Для лНомерСубконто=1 По лПроводка.СчетКт.ВидыСубконто.Количество() Цикл 
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лНомерСубконто, лВыборкаПроводки["СубконтоКт"+лНомерСубконто]);
					КонецЦикла;
					лПроводка.Период = лДата;
					Если лПроводка.СчетДт.Валютный Тогда 
						лПроводка.ВалютнаяСуммаДт = 0;
					КонецЕсли;
					Если лПроводка.СчетДт.Количественный Тогда 
						лПроводка.КоличествоДт = 0;
					КонецЕсли;
					Если лПроводка.СчетКт.Валютный Тогда 
						лПроводка.ВалютнаяСуммаКт = 0;
					КонецЕсли;
					Если лПроводка.СчетКт.Количественный Тогда 
						лПроводка.КоличествоКт = 0;
					КонецЕсли;
					лПроводка.Сумма = лСуммаЗаЕдиницу * лВыборкаПроводки.КоличествоКт;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать(Ложь);
	Движения.Международный.Записать(Ложь);
	
КонецПроцедуры

// is ЯннуровВФ 20141114
Процедура ПереносЗатратНаДругоеПодразделение()
	
	Если Не ОтражатьВМеждународномУчете Тогда 
		Возврат;
	КонецЕсли;
	
	лПериод = КонецМесяца(ПериодРегистрации);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ис_ПереносЗатратНаДругиеПодразделенияМеждународныйУчетСрезПоследних.Подразделение КАК Подразделение,
	|	ис_ПереносЗатратНаДругиеПодразделенияМеждународныйУчетСрезПоследних.НовоеПодразделение,
	|	ис_ПереносЗатратНаДругиеПодразделенияМеждународныйУчетСрезПоследних.Коэффициент
	|ПОМЕСТИТЬ втПереносЗатратНаДругиеПодразделения
	|ИЗ
	|	РегистрСведений.ис_ПереносЗатратНаДругиеПодразделенияМеждународныйУчет.СрезПоследних(&НачалоПериода, ) КАК ис_ПереносЗатратНаДругиеПодразделенияМеждународныйУчетСрезПоследних
	|ГДЕ
	|	ис_ПереносЗатратНаДругиеПодразделенияМеждународныйУчетСрезПоследних.Отключено = ЛОЖЬ
	|	И ис_ПереносЗатратНаДругиеПодразделенияМеждународныйУчетСрезПоследних.Коэффициент > 0
	|	И ис_ПереносЗатратНаДругиеПодразделенияМеждународныйУчетСрезПоследних.Подразделение <> ис_ПереносЗатратНаДругиеПодразделенияМеждународныйУчетСрезПоследних.НовоеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	втПереносЗатратНаДругиеПодразделения.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ втПодразделенияИсточники
	|ИЗ
	|	втПереносЗатратНаДругиеПодразделения КАК втПереносЗатратНаДругиеПодразделения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВыпускПродукцииМеждународныйУчетОбороты.Подразделение КАК ПодразделениеВыпуска,
	|	СУММА(ВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот) КАК КоличествоВыпуска
	|ПОМЕСТИТЬ втВыпускПодразделений
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииМеждународныйУчет.Обороты(&НачалоПериода, &ОкончаниеПериода, Период, Организация = &Организация) КАК ВыпускПродукцииМеждународныйУчетОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукцииМеждународныйУчетОбороты.Подразделение
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВыпускПродукцииМеждународныйУчетОбороты.КоличествоОборот) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодразделениеВыпуска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.Подразделение,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.СчетУчета,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.СтатьяЗатрат,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.НоменклатурнаяГруппа,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.Заказ,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.Затрата,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.ХарактеристикаЗатраты,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.СерияЗатраты,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.КоличествоОстаток КАК Количество,
	|	НезавершенноеПроизводствоМеждународныйУчетОстатки.СтоимостьОстаток КАК Стоимость
	|ИЗ
	|	РегистрНакопления.НезавершенноеПроизводствоМеждународныйУчет.Остатки(&ОкончаниеПериодаСГраницей, Организация = &Организация) КАК НезавершенноеПроизводствоМеждународныйУчетОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПодразделенияИсточники КАК втПодразделенияИсточники
	|		ПО НезавершенноеПроизводствоМеждународныйУчетОстатки.Подразделение = втПодразделенияИсточники.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗатратыМеждународныйУчетОстатки.Подразделение,
	|	ЗатратыМеждународныйУчетОстатки.СчетУчета,
	|	ЗатратыМеждународныйУчетОстатки.СтатьяЗатрат,
	|	ЗатратыМеждународныйУчетОстатки.НоменклатурнаяГруппа,
	|	ЗатратыМеждународныйУчетОстатки.Заказ,
	|	ЗатратыМеждународныйУчетОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ЗатратыМеждународныйУчет.Остатки(&ОкончаниеПериодаСГраницей, Организация = &Организация) КАК ЗатратыМеждународныйУчетОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПодразделенияИсточники КАК втПодразделенияИсточники
	|		ПО ЗатратыМеждународныйУчетОстатки.Подразделение = втПодразделенияИсточники.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	втПереносЗатратНаДругиеПодразделения.Подразделение КАК Подразделение,
	|	втПереносЗатратНаДругиеПодразделения.НовоеПодразделение КАК НовоеПодразделение,
	|	втПереносЗатратНаДругиеПодразделения.Коэффициент
	|ИЗ
	|	втПереносЗатратНаДругиеПодразделения КАК втПереносЗатратНаДругиеПодразделения
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВыпускПодразделений КАК втВыпускПодразделений
	|		ПО (втПереносЗатратНаДругиеПодразделения.Подразделение = втВыпускПодразделений.ПодразделениеВыпуска
	|				ИЛИ втПереносЗатратНаДругиеПодразделения.Подразделение = втВыпускПодразделений.ПодразделениеВыпуска.Родитель
	|				ИЛИ втПереносЗатратНаДругиеПодразделения.Подразделение = втВыпускПодразделений.ПодразделениеВыпуска.Родитель
	|				ИЛИ втПереносЗатратНаДругиеПодразделения.Подразделение = втВыпускПодразделений.ПодразделениеВыпуска.Родитель.Родитель
	|				ИЛИ втПереносЗатратНаДругиеПодразделения.Подразделение = втВыпускПодразделений.ПодразделениеВыпуска.Родитель.Родитель.Родитель
	|				ИЛИ втПереносЗатратНаДругиеПодразделения.Подразделение = втВыпускПодразделений.ПодразделениеВыпуска.Родитель.Родитель.Родитель.Родитель
	|				ИЛИ втПереносЗатратНаДругиеПодразделения.Подразделение = втВыпускПодразделений.ПодразделениеВыпуска.Родитель.Родитель.Родитель.Родитель.Родитель
	|				ИЛИ втПереносЗатратНаДругиеПодразделения.Подразделение = втВыпускПодразделений.ПодразделениеВыпуска.Родитель.Родитель.Родитель.Родитель.Родитель.Родитель)
	|ГДЕ
	|	втВыпускПодразделений.ПодразделениеВыпуска ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Подразделение,
	|	НовоеПодразделение
	|ИТОГИ ПО
	|	Подразделение
	|АВТОУПОРЯДОЧИВАНИЕ";
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериодаСГраницей", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
	лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
	
	лНЗП = лРезультатыЗапроса[3].Выгрузить();
	лЗатраты = лРезультатыЗапроса[4].Выгрузить();
	
	лВыборкаПодразделение = лРезультатыЗапроса[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока лВыборкаПодразделение.Следующий() Цикл 
		
		// Затраты
		лОтбор = Новый Структура("Подразделение", лВыборкаПодразделение.Подразделение);
		лСтрокиНЗП = лНЗП.НайтиСтроки(лОтбор);
		лСтрокиЗатрат = лЗатраты.НайтиСтроки(лОтбор);
		
		// Расчет базы
		лБазаКоэффициентов = 0;
		лВыборка = лВыборкаПодразделение.Выбрать();
		Пока лВыборка.Следующий() Цикл 
			лБазаКоэффициентов = лБазаКоэффициентов + лВыборка.Коэффициент;
		КонецЦикла;
		
		// Распределение затрат
		лВыборка.Сбросить();
		Пока лВыборка.Следующий() Цикл 
			
			Сообщить("Перенос затрат с подразделения <"+лВыборка.Подразделение+"> на <"+лВыборка.НовоеПодразделение+">");
			
			лКоэффициент = лВыборка.Коэффициент / лБазаКоэффициентов;
			лБазаКоэффициентов = лБазаКоэффициентов - лВыборка.Коэффициент;
			
			// Незавершенное производство
			Для Каждого лСтрокаНЗП Из лСтрокиНЗП Цикл 
				
				// Расчет ресурсов
				лКоличество = Окр(лСтрокаНЗП.Количество*лКоэффициент, 3);
				лСтоимость = Окр(лСтрокаНЗП.Стоимость*лКоэффициент, 2);
				лСтрокаНЗП.Количество = лСтрокаНЗП.Количество - лКоличество;
				лСтрокаНЗП.Стоимость = лСтрокаНЗП.Стоимость - лСтоимость;
				
				// Расход
				лДвижение = Движения.НезавершенноеПроизводствоМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаНЗП);
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
				лДвижение.Период = лПериод;
				лДвижение.Организация = Организация;
				лДвижение.Количество = лКоличество;
				лДвижение.Стоимость = лСтоимость;
				
				// Приход
				лДвижение = Движения.НезавершенноеПроизводствоМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаНЗП);
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
				лДвижение.Период = лПериод;
				лДвижение.Организация = Организация;
				лДвижение.Подразделение = лВыборка.НовоеПодразделение;
				лДвижение.Количество = лКоличество;
				лДвижение.Стоимость = лСтоимость;
				
				// Проводка
				лПроводка = Движения.Международный.Добавить();
				лПроводка.Период = лПериод;
				лПроводка.Организация = Организация;
				лПроводка.Сумма = лСтоимость;
				лПроводка.Содержание = "Перенос затрат на новое подразделение";
				лПроводка.СчетДт = лСтрокаНЗП.СчетУчета;
				лПроводка.СчетКт = лСтрокаНЗП.СчетУчета;
				Для Каждого лВидСубконто Из лСтрокаНЗП.СчетУчета.ВидыСубконто Цикл 
					лТип = лВидСубконто.ВидСубконто.ТипЗначения.Типы()[0];
					Если лТип = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда 
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лВидСубконто.НомерСтроки, лВыборка.НовоеПодразделение);
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лВидСубконто.НомерСтроки, лВыборка.Подразделение);
					ИначеЕсли лТип = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда 
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лВидСубконто.НомерСтроки, лСтрокаНЗП.НоменклатурнаяГруппа);
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лВидСубконто.НомерСтроки, лСтрокаНЗП.НоменклатурнаяГруппа);
					ИначеЕсли лТип = Тип("СправочникСсылка.СтатьиЗатрат") Тогда 
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лВидСубконто.НомерСтроки, лСтрокаНЗП.СтатьяЗатрат);
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лВидСубконто.НомерСтроки, лСтрокаНЗП.СтатьяЗатрат);
					КонецЕсли;
				КонецЦикла;
				Если лПроводка.СчетДт.Количественный Тогда 
					лПроводка.КоличествоДт = лКоличество;
				КонецЕсли;
				Если лПроводка.СчетКт.Количественный Тогда 
					лПроводка.КоличествоКт = лКоличество;
				КонецЕсли;
				
			КонецЦикла;
			
			// Затраты
			Для Каждого лСтрокаЗатраты Из лСтрокиЗатрат Цикл 
				
				// Расчет ресурсов
				лСумма = Окр(лСтрокаЗатраты.Сумма*лКоэффициент, 2);
				лСтрокаЗатраты.Сумма = лСтрокаЗатраты.Сумма - лСумма;
				
				// Расход
				лДвижение = Движения.ЗатратыМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаЗатраты);
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
				лДвижение.Период = лПериод;
				лДвижение.Организация = Организация;
				лДвижение.Сумма = лСумма;
				
				// Приход
				лДвижение = Движения.ЗатратыМеждународныйУчет.Добавить();
				ЗаполнитьЗначенияСвойств(лДвижение, лСтрокаЗатраты);
				лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
				лДвижение.Период = лПериод;
				лДвижение.Организация = Организация;
				лДвижение.Подразделение = лВыборка.НовоеПодразделение;
				лДвижение.Сумма = лСумма;
				
				// Проводка
				лПроводка = Движения.Международный.Добавить();
				лПроводка.Период = лПериод;
				лПроводка.Организация = Организация;
				лПроводка.Сумма = лСумма;
				лПроводка.Содержание = "Перенос затрат на новое подразделение";
				лПроводка.СчетДт = лСтрокаЗатраты.СчетУчета;
				лПроводка.СчетКт = лСтрокаЗатраты.СчетУчета;
				Для Каждого лВидСубконто Из лСтрокаЗатраты.СчетУчета.ВидыСубконто Цикл 
					лТип = лВидСубконто.ВидСубконто.ТипЗначения.Типы()[0];
					Если лТип = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда 
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лВидСубконто.НомерСтроки, лВыборка.НовоеПодразделение);
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лВидСубконто.НомерСтроки, лВыборка.Подразделение);
					ИначеЕсли лТип = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда 
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лВидСубконто.НомерСтроки, лСтрокаЗатраты.НоменклатурнаяГруппа);
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лВидСубконто.НомерСтроки, лСтрокаЗатраты.НоменклатурнаяГруппа);
					ИначеЕсли лТип = Тип("СправочникСсылка.СтатьиЗатрат") Тогда 
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лВидСубконто.НомерСтроки, лСтрокаЗатраты.СтатьяЗатрат);
						БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лВидСубконто.НомерСтроки, лСтрокаЗатраты.СтатьяЗатрат);
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если Движения.НезавершенноеПроизводствоМеждународныйУчет.Модифицированность() Тогда 
		Движения.НезавершенноеПроизводствоМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.Затраты.Модифицированность() Тогда 
		Движения.Затраты.Записать(Ложь);
	КонецЕсли;
	Если Движения.Международный.Модифицированность() Тогда 
		Движения.Международный.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры

// is ЯннуровВФ 20150619
Процедура ПодготовкаРасчетаСебестоимости() Экспорт 
	
	Если Движения.ПартииТоваровНаСкладахМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.НезавершенноеПроизводствоМеждународныйУчет.Количество() > 0 Тогда 
		Движения.НезавершенноеПроизводствоМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ЗатратыМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ЗатратыМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.БракВПроизводствеМеждународныйУчет.Количество() > 0 Тогда 
		Движения.БракВПроизводствеМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.Международный.Количество() > 0 Тогда 
		Движения.Международный.Записать(Ложь);
	КонецЕсли;
	
	лСчетаОстатков = Новый Массив;
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПолуфабрикатыСобственногоПроизводства);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный._ПокупныеИзделия);
	лСчетаОстатков.Добавить(ПланыСчетов.Международный.ГотоваяПродукцияЗаВычетомПереоценки);
	
	лСчетаНЗП = Новый Массив;
	лСчетаНЗП.Добавить(ПланыСчетов.Международный._ОсновноеПроизводство);
	лСчетаНЗП.Добавить(ПланыСчетов.Международный.ВспомогательныеПроизводства);
	лСчетаНЗП.Добавить(ПланыСчетов.Международный.ОбслуживающиеПроизводства);
	
	лСчетаЗатрат = Новый Массив;
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.ОбщепроизводственныеРасходы);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный.АдминистративныеРасходы);
	лСчетаЗатрат.Добавить(ПланыСчетов.Международный._КоммерческиеРасходы);
	
	лСчетаБрака = Новый Массив;
	лСчетаБрака.Добавить(ПланыСчетов.Международный.БракВПроизводстве);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Склад,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Качество,
	|	СУММА(ПартииТоваровНаСкладахМеждународныйУчет.Стоимость) КАК Стоимость,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.Подразделение ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.Подразделение
	|		КОГДА ЗатратыМеждународныйУчет.Подразделение ЕСТЬ НЕ NULL 
	|			ТОГДА ЗатратыМеждународныйУчет.Подразделение
	|		КОГДА БракВПроизводствеМеждународныйУчет.Подразделение ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.СтатьяЗатрат ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.СтатьяЗатрат
	|		КОГДА ЗатратыМеждународныйУчет.СтатьяЗатрат ЕСТЬ НЕ NULL 
	|			ТОГДА ЗатратыМеждународныйУчет.СтатьяЗатрат
	|		КОГДА БракВПроизводствеМеждународныйУчет.СтатьяЗатрат ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.СтатьяЗатрат
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.НоменклатурнаяГруппа ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.НоменклатурнаяГруппа
	|		КОГДА ЗатратыМеждународныйУчет.НоменклатурнаяГруппа ЕСТЬ НЕ NULL 
	|			ТОГДА ЗатратыМеждународныйУчет.НоменклатурнаяГруппа
	|		КОГДА БракВПроизводствеМеждународныйУчет.НоменклатурнаяГруппа ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.Затрата ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.Затрата
	|		КОГДА БракВПроизводствеМеждународныйУчет.Продукция ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.Продукция
	|	КОНЕЦ КАК Затрата,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.ХарактеристикаЗатраты ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.ХарактеристикаЗатраты
	|		КОГДА БракВПроизводствеМеждународныйУчет.ХарактеристикаПродукции ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.ХарактеристикаПродукции
	|	КОНЕЦ КАК ХарактеристикаЗатраты,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.СерияЗатраты ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.СерияЗатраты
	|		КОГДА БракВПроизводствеМеждународныйУчет.СерияПродукции ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.СерияПродукции
	|	КОНЕЦ КАК СерияЗатраты
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет КАК ПартииТоваровНаСкладахМеждународныйУчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НезавершенноеПроизводствоМеждународныйУчет КАК НезавершенноеПроизводствоМеждународныйУчет
	|		ПО ПартииТоваровНаСкладахМеждународныйУчет.Регистратор = НезавершенноеПроизводствоМеждународныйУчет.Регистратор
	|			И ПартииТоваровНаСкладахМеждународныйУчет.НомерКорСтроки = НезавершенноеПроизводствоМеждународныйУчет.НомерСтроки
	|			И (ПартииТоваровНаСкладахМеждународныйУчет.КорСчет В (&СчетаНЗП))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыМеждународныйУчет КАК ЗатратыМеждународныйУчет
	|		ПО ПартииТоваровНаСкладахМеждународныйУчет.Регистратор = ЗатратыМеждународныйУчет.Регистратор
	|			И ПартииТоваровНаСкладахМеждународныйУчет.НомерКорСтроки = ЗатратыМеждународныйУчет.НомерСтроки
	|			И (ПартииТоваровНаСкладахМеждународныйУчет.КорСчет В (&СчетаЗатрат))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БракВПроизводствеМеждународныйУчет КАК БракВПроизводствеМеждународныйУчет
	|		ПО ПартииТоваровНаСкладахМеждународныйУчет.Регистратор = БракВПроизводствеМеждународныйУчет.Регистратор
	|			И ПартииТоваровНаСкладахМеждународныйУчет.НомерКорСтроки = БракВПроизводствеМеждународныйУчет.НомерСтроки
	|			И (ПартииТоваровНаСкладахМеждународныйУчет.КорСчет В (&СчетаБрака))
	|ГДЕ
	|	ПартииТоваровНаСкладахМеждународныйУчет.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета В(&СчетаОстатков)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.КорСчет В (&СчетаНЗП, &СчетаЗатрат, &СчетаБрака)
	|	И ПартииТоваровНаСкладахМеждународныйУчет.Организация = &Организация
	|	И (НезавершенноеПроизводствоМеждународныйУчет.СчетУчета ЕСТЬ НЕ NULL 
	|			ИЛИ ЗатратыМеждународныйУчет.СчетУчета ЕСТЬ НЕ NULL 
	|			ИЛИ БракВПроизводствеМеждународныйУчет.СчетУчета ЕСТЬ НЕ NULL )
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахМеждународныйУчет.Номенклатура,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СчетУчета,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Склад,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ДокументОприходования,
	|	ПартииТоваровНаСкладахМеждународныйУчет.ХарактеристикаНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.СерияНоменклатуры,
	|	ПартииТоваровНаСкладахМеждународныйУчет.Качество,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСчет,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто1,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто2,
	|	ПартииТоваровНаСкладахМеждународныйУчет.КорСубконто3,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.Подразделение ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.Подразделение
	|		КОГДА ЗатратыМеждународныйУчет.Подразделение ЕСТЬ НЕ NULL 
	|			ТОГДА ЗатратыМеждународныйУчет.Подразделение
	|		КОГДА БракВПроизводствеМеждународныйУчет.Подразделение ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.Подразделение
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.СтатьяЗатрат ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.СтатьяЗатрат
	|		КОГДА ЗатратыМеждународныйУчет.СтатьяЗатрат ЕСТЬ НЕ NULL 
	|			ТОГДА ЗатратыМеждународныйУчет.СтатьяЗатрат
	|		КОГДА БракВПроизводствеМеждународныйУчет.СтатьяЗатрат ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.СтатьяЗатрат
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.НоменклатурнаяГруппа ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.НоменклатурнаяГруппа
	|		КОГДА ЗатратыМеждународныйУчет.НоменклатурнаяГруппа ЕСТЬ НЕ NULL 
	|			ТОГДА ЗатратыМеждународныйУчет.НоменклатурнаяГруппа
	|		КОГДА БракВПроизводствеМеждународныйУчет.НоменклатурнаяГруппа ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.НоменклатурнаяГруппа
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.Затрата ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.Затрата
	|		КОГДА БракВПроизводствеМеждународныйУчет.Продукция ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.Продукция
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.ХарактеристикаЗатраты ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.ХарактеристикаЗатраты
	|		КОГДА БракВПроизводствеМеждународныйУчет.ХарактеристикаПродукции ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.ХарактеристикаПродукции
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НезавершенноеПроизводствоМеждународныйУчет.СерияЗатраты ЕСТЬ НЕ NULL 
	|			ТОГДА НезавершенноеПроизводствоМеждународныйУчет.СерияЗатраты
	|		КОГДА БракВПроизводствеМеждународныйУчет.СерияПродукции ЕСТЬ НЕ NULL 
	|			ТОГДА БракВПроизводствеМеждународныйУчет.СерияПродукции
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МеждународныйОборотыДтКт.СчетДт,
	|	МеждународныйОборотыДтКт.СубконтоДт1,
	|	МеждународныйОборотыДтКт.СубконтоДт2,
	|	МеждународныйОборотыДтКт.СубконтоДт3,
	|	МеждународныйОборотыДтКт.СчетКт,
	|	МеждународныйОборотыДтКт.СубконтоКт1,
	|	МеждународныйОборотыДтКт.СубконтоКт2,
	|	МеждународныйОборотыДтКт.СубконтоКт3,
	|	МеждународныйОборотыДтКт.СуммаОборот
	|ИЗ
	|	РегистрБухгалтерии.Международный.ОборотыДтКт(&НачалоПериода, &ОкончаниеПериода, Период, СчетДт В (&СчетаНЗП, &СчетаЗатрат, &СчетаБрака), , СчетКт В (&СчетаОстатков), , Организация = &Организация) КАК МеждународныйОборотыДтКт";
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("СчетаОстатков", лСчетаОстатков);
	лЗапрос.УстановитьПараметр("СчетаНЗП", лСчетаНЗП);
	лЗапрос.УстановитьПараметр("СчетаЗатрат", лСчетаЗатрат);
	лЗапрос.УстановитьПараметр("СчетаБрака", лСчетаБрака);
	лЗапрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	лЗапрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(ПериодРегистрации));
	лРезультатыЗапроса = лЗапрос.ВыполнитьПакет();
	
	лДата = КонецМесяца(ПериодРегистрации);
	лКоличествоСубконто = Метаданные.ПланыСчетов.Международный.МаксКоличествоСубконто;
	
	лВыборка = лРезультатыЗапроса[0].Выбрать();
	Пока лВыборка.Следующий() Цикл 
		лДвижение = Движения.ПартииТоваровНаСкладахМеждународныйУчет.Добавить();
		лДвижение.Период = лДата;
		лДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;
		лДвижение.Номенклатура = лВыборка.Номенклатура;
		лДвижение.СчетУчета = лВыборка.СчетУчета;
		лДвижение.Организация = Организация;
		лДвижение.Склад = лВыборка.Склад;
		лДвижение.ДокументОприходования = лВыборка.ДокументОприходования;
		лДвижение.ХарактеристикаНоменклатуры = лВыборка.ХарактеристикаНоменклатуры;
		лДвижение.СерияНоменклатуры = лВыборка.СерияНоменклатуры;
		лДвижение.Качество = лВыборка.Качество;
		лДвижение.Стоимость = -лВыборка.Стоимость;
		лДвижение.КорСчет = лВыборка.КорСчет;
		лДвижение.КорСубконто1 = лВыборка.КорСубконто1;
		лДвижение.КорСубконто2 = лВыборка.КорСубконто2;
		лДвижение.КорСубконто3 = лВыборка.КорСубконто3;
		Если лСчетаНЗП.Найти(лВыборка.КорСчет) <> Неопределено Тогда 
			лДвижение = Движения.НезавершенноеПроизводствоМеждународныйУчет.Добавить();
			лДвижение.Период = лДата;
			лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
			лДвижение.Организация = Организация;
			лДвижение.Подразделение = лВыборка.Подразделение;
			лДвижение.СчетУчета = лВыборка.КорСчет;
			лДвижение.СтатьяЗатрат = лВыборка.СтатьяЗатрат;
			лДвижение.НоменклатурнаяГруппа = лВыборка.НоменклатурнаяГруппа;
			лДвижение.Затрата = лВыборка.Затрата;
			лДвижение.ХарактеристикаЗатраты = лВыборка.ХарактеристикаЗатраты;
			лДвижение.СерияЗатраты = лВыборка.СерияЗатраты;
			лДвижение.Стоимость = -лВыборка.Стоимость;
		ИначеЕсли лСчетаЗатрат.Найти(лВыборка.КорСчет) <> Неопределено Тогда 
			лДвижение = Движения.ЗатратыМеждународныйУчет.Добавить();
			лДвижение.Период = лДата;
			лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
			лДвижение.Организация = Организация;
			лДвижение.Подразделение = лВыборка.Подразделение;
			лДвижение.СчетУчета = лВыборка.КорСчет;
			лДвижение.СтатьяЗатрат = лВыборка.СтатьяЗатрат;
			лДвижение.НоменклатурнаяГруппа = лВыборка.НоменклатурнаяГруппа;
			лДвижение.Сумма = -лВыборка.Стоимость;
		ИначеЕсли лСчетаБрака.Найти(лВыборка.КорСчет) <> Неопределено Тогда 
			лДвижение = Движения.БракВПроизводствеМеждународныйУчет.Добавить();
			лДвижение.Период = лДата;
			лДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
			лДвижение.Организация = Организация;
			лДвижение.Подразделение = лВыборка.Подразделение;
			лДвижение.СчетУчета = лВыборка.КорСчет;
			лДвижение.СтатьяЗатрат = лВыборка.СтатьяЗатрат;
			лДвижение.НоменклатурнаяГруппа = лВыборка.НоменклатурнаяГруппа;
			лДвижение.Продукция = лВыборка.Затрата;
			лДвижение.ХарактеристикаПродукции = лВыборка.ХарактеристикаЗатраты;
			лДвижение.СерияПродукции = лВыборка.СерияЗатраты;
			лДвижение.Сумма = -лВыборка.Стоимость;
		КонецЕсли;
	КонецЦикла;
	
	лВыборка = лРезультатыЗапроса[1].Выбрать();
	Пока лВыборка.Следующий() Цикл 
		лПроводка = Движения.Международный.Добавить();
		лПроводка.Период = лДата;
		лПроводка.Организация = Организация;
		лПроводка.СчетДт = лВыборка.СчетДт;
		Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетДт, лПроводка.СубконтоДт, лНомерСубконто, лВыборка["СубконтоДт"+лНомерСубконто]);
		КонецЦикла;
		лПроводка.СчетКт = лВыборка.СчетКт;
		Для лНомерСубконто=1 По лКоличествоСубконто Цикл 
			БухгалтерскийУчет.УстановитьСубконто(лПроводка.СчетКт, лПроводка.СубконтоКт, лНомерСубконто, лВыборка["СубконтоКт"+лНомерСубконто]);
		КонецЦикла;
		лПроводка.Сумма = -лВыборка.СуммаОборот;
	КонецЦикла;
	
	Если Движения.ПартииТоваровНаСкладахМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.НезавершенноеПроизводствоМеждународныйУчет.Количество() > 0 Тогда 
		Движения.НезавершенноеПроизводствоМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.ЗатратыМеждународныйУчет.Количество() > 0 Тогда 
		Движения.ЗатратыМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.БракВПроизводствеМеждународныйУчет.Количество() > 0 Тогда 
		Движения.БракВПроизводствеМеждународныйУчет.Записать(Ложь);
	КонецЕсли;
	Если Движения.Международный.Количество() > 0 Тогда 
		Движения.Международный.Записать(Ложь);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	// Заполнить реквизиты значениями по умолчанию.
	Если НЕ ТипЗНЧ(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
		ОтражатьВУправленческомУчете = Истина;
		ОтражатьВБухгалтерскомУчете  = Ложь;
		ОтражатьВНалоговомУчете      = Ложь;
		
		Если ВыполняемыеДействия.Количество() = 0 Тогда
			ЗаполнитьВыполняемыеДействия();
		КонецЕсли;
   КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	//Признак отражения в МУ должен быть установлен явно
	ОтражатьВМеждународномУчете = Ложь;
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,,ОбъектКопирования.Ссылка);
	ОтражатьВУправленческомУчете = Истина;
	ОтражатьВБухгалтерскомУчете  = Ложь;
	ОтражатьВНалоговомУчете      = Ложь;
	Организация = "";
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтражатьВУправленческомУчете Тогда
		Организация = Неопределено;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ПериодРегистрации = НачалоМесяца(Дата);
	КонецЕсли;		
	
	Если УправлениеЗапасами.ИспользуетсяРасширеннаяАналитикаУчета(ПериодРегистрации) Тогда
		ОтражатьВНалоговомУчете     = ОтражатьВБухгалтерскомУчете;
		ОтражатьВМеждународномУчете = Ложь;
	КонецЕсли;
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	//начало изменений 
	Если Не РольДоступна("ПолныеПрава") Тогда
		ПРГ_БезКорректировкиСтоимости = Ложь;
	КонецЕслИ;	
	//конец изменений 
	
	//начало изменений Ожиганов 30.05.2016 выравнивание копеек по НУ, приведение остатков к БУ 
	Если ЭтоНовый() и Дата > '20160501' Тогда
		ПРГ_ПопытатьсяПриравнятьНУкБУ_ПФ = истина;
		ПРГ_ПопытатьсяПриравнятьНУкБУ_ГП = истина;
	КонецЕсли;	
	//конец изменений 
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения) Экспорт
	
	// is ЯннуровВФ нач 20140605 Необходима роль БухгалтерМСФО
	Если ОтражатьВМеждународномУчете 
	 И (Не РольДоступна("БухгалтерМСФО") И Не РольДоступна("ПолныеПрава")) Тогда 
		Отказ = Истина;
		Сообщить("Проведение отменено. Для проведения по МСФО необходимо иметь роль <Бухгалтер МСФО>", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецЕсли;
	// is ЯннуровВФ кон 20140605		
	
#Если Клиент ИЛИ Сервер Тогда
	// ОценкаПроизводительности
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ПредопределенноеЗначение("Перечисление.КлючевыеОперации.ПроведениеДокументаРасчетСебестоимостиВыпуска"));
	// Конец ОценкаПроизводительности
#КонецЕсли

	//>>051015 Степанов
	Если ОтражатьВМеждународномУчете тогда
		Если РегистрыБухгалтерии.Международный.ПолучитьИспользованиеТекущихИтогов() Тогда
			РегистрыБухгалтерии.Международный.УстановитьИспользованиеТекущихИтогов(Ложь);
		КонецЕсли;
		Если РегистрыБухгалтерии.Международный.ПолучитьПериодРассчитанныхИтогов() > НачалоМесяца(Дата)-1 Тогда
			Сообщить("Выполняется сдвиг границы рассчитанных итогов...");
			
			РегистрыБухгалтерии.Международный.УстановитьПериодРассчитанныхИтогов(НачалоМесяца(Дата)-1);
		КонецЕсли;
	КонецЕсли;
	//<<
	
	Сообщить("Время начала: "+ТекущаяДата());

	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	// is ЯннуровВФ нач 20150123
	Если ОтражатьВМеждународномУчете Тогда 
		СтруктураШапкиДокумента.Вставить("ПРГ_БезКорректировкиСтоимости", Истина);
	КонецЕсли;
	// is ЯннуровВФ кон 20150123
	
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Документ должен принадлежать хотя бы к одному виду учета (управленческий, бухгалтерский, налоговый)
	Если Не ОтражатьВУправленческомУчете И Не ОтражатьВБухгалтерскомУчете И Не ОтражатьВНалоговомУчете И Не ОтражатьВМеждународномУчете Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Документ должен принадлежать хотя бы одному из видов учета: ""Управленческий"", ""Бухгалтерский"", ""Налоговый"" или ""Международный"""".", Отказ, Заголовок);
	КонецЕсли;
	
	ДвиженияПоРегистрамУСНРегл(РежимПроведения, СтруктураШапкиДокумента,Отказ, Заголовок);
	
	Если НЕ УправлениеЗапасами.ИспользуетсяРасширеннаяАналитикаУчета(ПериодРегистрации)
	   И (СтруктураШапкиДокумента.ОтражатьВНалоговомУчетеУСН ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчетеУСНДоходы) Тогда
	   // Флаги ОтражатьВНалоговомУчетеУСН и ОтражатьВНалоговомУчетеУСНДоходы устанавливаются, если документ отражается в налоговом учете.
	   // При РАУЗ документ одновременно проводится в бухгалтерском и налоговом учете. При применении УСН в этом случае 
	   // нужно сформировать движения по бухгалтерскому учету
		Возврат;
	КонецЕсли;
	
	ПроверкаРеквизитов(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	Если ОтражатьВУправленческомУчете Тогда
		мУчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиУпр(КонецМесяца(ПериодРегистрации),истина);
	Иначе
		мУчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(КонецМесяца(ПериодРегистрации), Организация,истина);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(мУчетнаяПолитика) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ПроверитьСписокДействий(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураТаблицДвижений = ПолучитьСтруктуруТаблицДвиженийРегистров(СтруктураШапкиДокумента);
	
	// Добавим дополнительные поля в структуру шапки документа.
	ПодготовитьСтруктуруШапкиДокумента(
		СтруктураШапкиДокумента,
		Отказ, 
		Заголовок
		);
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику Тогда
		
		// При использовании расширенной аналитики документ проводить только по налоговому учету не требуется.
		Если Не ОтражатьВБухгалтерскомУчете
		   И ОтражатьВНалоговомУчете
		Тогда
			Возврат;
		КонецЕсли;
		
		Если ОтражатьВУправленческомУчете
		   И Не СтруктураШапкиДокумента.ОтражатьЗатратыВУпрУчете
		Тогда
			Возврат;
		КонецЕсли;
	
	КонецЕсли;
	
	ОбщегоНазначения.Сообщение(
		Заголовок,
		Перечисления.ВидыСообщений.Раздел,
		//Перечисления.ВидыСообщений.ВажнаяИнформация,
		, // Заголовок
		Ссылка
	);
	
	// is ЯннуровВФ нач 20141128
	//// is ЯннуровВФ нач 20141114 
	//// Перенос затрат на другое подразделение
	//ПереносЗатратНаДругоеПодразделение();
	//// Расчет стоимости возвратов
	//РасчетСтоимостиВозвратов();
	//// is ЯннуровВФ кон 20141114
	// is ЯннуровВФ кон 20141128

		
	// Выполнение заданных в документе действий.
	Если СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику Тогда
		
		ТаблицаОшибок = УправлениеЗатратами.СформироватьТаблицуОшибок();
		
		ЗаполнитьСпособыРаспределенияЗатрат(СтруктураШапкиДокумента, Отказ, Заголовок);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		// Выполнение заданных в документе действий (на сервере)
		ПроцедурыРасчетаСебестоимостиРасширеннаяАналитика.ВыполнитьДействияДокумента(
			СтруктураШапкиДокумента, 
			ТаблицаОшибок);
			
		УправлениеЗатратами.ВывестиСообщенияОбОшибках(
			СтруктураШапкиДокумента,
			ТаблицаОшибок,
			"" // Заголовок
		);
	Иначе
		ВыполнениеДействийДокумента(
			СтруктураШапкиДокумента,
			СтруктураТаблицДвижений
			);
		КонецЕсли;
		
	// is ЯннуровВФ нач 20141128
	//// is ЯннуровВФ нач 20141114 
	//// Расчет себестоимости на единицу продукции 
	//РасчетСебестоимостиНаЕдиницу();
	//// Расчет средневзвешенной себестоимости 
	//РасчетСредневзвешеннойСебестоимости();
	//// is ЯннуровВФ кон 20141114
	// is ЯннуровВФ кон 20141128

	
	ОбщегоНазначения.Сообщение("Расчет себестоимости завершен.", Перечисления.ВидыСообщений.Раздел);
	
	// Зарегистрируем документ в последовательности.
	ЗарегистрироватьДокументВПоследовательностях(СтруктураШапкиДокумента);
	
#Если Сервер Тогда
	// ОценкаПроизводительности
	ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ПредопределенноеЗначение("Перечисление.КлючевыеОперации.ПроведениеДокументаРасчетСебестоимостиВыпуска"));
	// Конец ОценкаПроизводительности
#КонецЕсли

КонецПроцедуры // ОбработкаПроведения()
