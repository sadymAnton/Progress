Перем мУдалятьДвижения Экспорт;

Процедура ПроверитьШапкуДокумента(СтруктураШапкиДокумента, Отказ, Заголовок)
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект,  СтруктураОбязательныхПолей, Отказ, Заголовок);
КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличнойЧастиНДС(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	СтруктураОбязательныхПолей = Новый Структура("Контрагент,Реализациия,Состояние,ВидЦенности,СчетФактура");
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "НДС", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры



Процедура ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, РежимПроведения = Неопределено,Отказ=ложь) Экспорт
	
	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;
	
	Если РежимПроведения = Неопределено Тогда
		РежимПроведения = РежимПроведенияДокумента.Неоперативный;
	КонецЕсли;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = "Проведение документа """ + СокрЛП(Ссылка) + """: ";
	
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокументаИПроверитьОтражениеВУчете(ЭтотОбъект, Отказ, Заголовок);
	СтруктураШапкиДокумента.Вставить("РежимПроведения", РежимПроведения);

КонецПроцедуры // ПодготовитьСтруктуруШапкиДокумента()

Процедура ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента,Отказ,ТаблНДСПредъявл) Экспорт
	Если Отказ Тогда
		возврат;
	КонецЕсли;	
	
	//ТаблНДСПредъявл0 = Движения.НДСПредъявленныйРеализация0.Выгрузить();
	ТаблНДСПредъявл  = Движения.НДСПредъявленный.Выгрузить();
	//ТаблКнигаПродаж  = Движения.НДСЗаписиКнигиПродаж.Выгрузить();
	
	//ТаблКнигаПродаж.Очистить();
	ТаблНДСПредъявл.Очистить();
	ТаблНДСПредъявл.Колонки.Добавить("Покупатель");
	ТаблНДСПредъявл.Колонки.Добавить("ДокументОтгрузки");
	ТаблНДСПредъявл.Колонки.Добавить("ВидЦенностиКП");
	ТаблНДСПредъявл.Колонки.Добавить("Состояние");
	//ТаблНДСПредъявл0.Очистить();
	Сч19 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.07");
	
	Для Каждого ТекСтрока Из НДС Цикл
		
		Если ТекСтрока.СуммаСНДС18 > 0 или ТекСтрока.НДС18 > 0 Тогда
			НовСтр = ТаблНДСПредъявл.Добавить();
			НовСтр.Период 			= Дата;
			НовСтр.ВидДвижения      = ВидДвиженияНакопления.Приход;
			НовСтр.Активность 	    = Истина;
			НовСтр.Регистратор	    = Ссылка;
			НовСтр.Организация  	= Организация;
			НовСтр.СчетФактура  	= ТекСтрока.СчетФактура;
			НовСтр.ВидЦенности  	= Перечисления.ВидыЦенностей.Товары;
			НовСтр.ВидЦенностиКП	= ТекСтрока.ВидЦенности;
			НовСтр.СтавкаНДС    	= Перечисления.СтавкиНДС.НДС18;
			НовСтр.СчетУчетаНДС 	= Сч19;
			НовСтр.Поставщик    	= ТекСтрока.Контрагент;
			НовСтр.Покупатель		= ТекСтрока.Контрагент;
			НовСтр.СуммаБезНДС  	= ТекСтрока.СуммаСНДС18 - ТекСтрока.НДС18;
			НовСтр.НДС  			= ТекСтрока.НДС18;
			НовСтр.ДокументОтгрузки = ТекСтрока.Реализациия;
			НовСтр.ДатаСобытия      = Дата;
			НовСтр.Состояние		= ТекСтрока.Состояние;
			
			//НовСтр.Событие		= Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком;
			
		КонецЕсли;	
		
		Если ТекСтрока.СуммаСНДС10 > 0 или ТекСтрока.НДС10 > 0 Тогда
			НовСтр = ТаблНДСПредъявл.Добавить();
			НовСтр.Период 			= Дата;
			НовСтр.ВидДвижения 		= ВидДвиженияНакопления.Приход;
			НовСтр.Активность 	    = Истина;
			НовСтр.Регистратор	    = Ссылка;
			НовСтр.Организация  	= Организация;
			НовСтр.СчетФактура  	= ТекСтрока.СчетФактура;
			НовСтр.ВидЦенности  	= Перечисления.ВидыЦенностей.Товары;
			НовСтр.ВидЦенностиКП	= ТекСтрока.ВидЦенности;
			НовСтр.СтавкаНДС    	= Перечисления.СтавкиНДС.НДС10;
			НовСтр.СчетУчетаНДС 	= Сч19;
			НовСтр.Поставщик    	= ТекСтрока.Контрагент;
			НовСтр.Покупатель		= ТекСтрока.Контрагент;
			НовСтр.СуммаБезНДС  	= ТекСтрока.СуммаСНДС10 - ТекСтрока.НДС10;
			НовСтр.НДС  			= ТекСтрока.НДС10;
			НовСтр.ДокументОтгрузки = ТекСтрока.Реализациия;
			НовСтр.ДатаСобытия      = Дата;
			НовСтр.Состояние		= ТекСтрока.Состояние;
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры // СформироватьТаблицыДокумента()

Процедура ДвижениеПоРегистрам(Заголовок,ТаблНДСПредъявл)
	//ТаблНДСПредъявл0 = Движения.НДСПредъявленныйРеализация0.Выгрузить();
	//ТаблНДСПредъявл  = Движения.НДСПредъявленный.Выгрузить();
	//ТаблКнигаПродаж  = Движения.НДСЗаписиКнигиПродаж.Выгрузить();
	
	ТаблНДСПредъявл.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком,"Событие");
	
	Движения.НДСПредъявленный.Загрузить(ТаблНДСПредъявл);
	
	ТаблНДСПредъявл.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПокупки.ПредполагаетсяСтавка0,"Событие");
	
	Движения.НДСПредъявленныйРеализация0.Загрузить(ТаблНДСПредъявл);
	Движения.НДСЗаписиКнигиПродаж.Загрузить(ТаблНДСПредъявл);
	
	Сч68  = ПланыСчетов.Хозрасчетный.НДС;
	
	Проводки = Движения.Хозрасчетный;
	Для Каждого ТекСтрока Из ТаблНДСПредъявл Цикл
		
		НоваяПроводка = Проводки.Добавить();
		НоваяПроводка.Организация    = Организация;
		НоваяПроводка.Активность	 = Истина;
		НоваяПроводка.Период		 = Дата;
		НоваяПроводка.Содержание 	 = "Восстановление НДС";
		
		НоваяПроводка.Сумма = ТекСтрока.НДС;

		НоваяПроводка.СчетДт = ТекСтрока.СчетУчетаНДС;

		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Контрагенты", ТекСтрока.Покупатель);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СФПолученные", ТекСтрока.СчетФактура);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "ДокументыРеализации", ТекСтрока.ДокументОтгрузки);
											
		НоваяПроводка.СчетКт = Сч68;
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "ВидыПлатежейВГосБюджет", Перечисления.ВидыПлатежейВГосБюджет.Налог);
		
	КонецЦикла;	
	
КонецПроцедуры	


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// Вставить содержимое обработчика.
	Перем Заголовок,СтруктураШапкиДокумента;
	Перем ТаблНДСПредъявл;
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, Истина, РежимПроведения);
	КонецЕсли;
	
	//ВнОбработка = ВнешниеОбработки.Создать("E:\Обработки 1С\НДС Книга продаж покупок\ПровПРГРАспр.epf");
	//ВнОбработка.ОбработкаПроведения(ЭтотОбъект,Ссылка,Отказ, РежимПроведения);
	//ВнОбработка = Неопределено;
	ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента, РежимПроведения,Отказ);	
	ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента,Отказ,ТаблНДСПредъявл);
	
	
	Если Не Отказ Тогда
		ДвижениеПоРегистрам(Заголовок,ТаблНДСПредъявл);
	КонецЕслИ;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// Вставить содержимое обработчика.
	Если ОбменДанными.Загрузка = Истина Тогда
		возврат;
	КонецЕслИ;
	
	Если ПометкаУдаления или РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		УдалитьСчетаФактуры(РежимЗаписи);
	КонецЕсли;	
	
КонецПроцедуры

Процедура УдалитьСчетаФактуры(РежимЗаписи)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВложенныйЗапрос.СчетФактура КАК ОражениеНачисления
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		ПРГ_РаспределениеНДС0СтавкаНДС.СчетФактура КАК СчетФактура
	                      |	ИЗ
	                      |		Документ.ПРГ_РаспределениеНДС0Ставка.НДС КАК ПРГ_РаспределениеНДС0СтавкаНДС
	                      |	ГДЕ
	                      |		ПРГ_РаспределениеНДС0СтавкаНДС.Ссылка = &Ссылка
	                      |	
	                      |	СГРУППИРОВАТЬ ПО
	                      |		ПРГ_РаспределениеНДС0СтавкаНДС.СчетФактура
	                      |	
	                      |	ОБЪЕДИНИТЬ ВСЕ
	                      |	
	                      |	ВЫБРАТЬ
	                      |		ОтражениеРеализацииТоваровИУслугНДС.Ссылка
	                      |	ИЗ
	                      |		Документ.ОтражениеРеализацииТоваровИУслугНДС КАК ОтражениеРеализацииТоваровИУслугНДС
	                      |	ГДЕ
	                      |		ОтражениеРеализацииТоваровИУслугНДС.РасчетныйДокумент = &Ссылка
	                      |	
	                      |	СГРУППИРОВАТЬ ПО
	                      |		ОтражениеРеализацииТоваровИУслугНДС.Ссылка) КАК ВложенныйЗапрос
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВложенныйЗапрос.СчетФактура");
						  
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	ТаблОтражений = Запрос.Выполнить().Выгрузить();	
	для каждого ТекСтрока Из ТаблОтражений Цикл
		Если ЗначениеЗаполнено(ТекСтрока.ОражениеНачисления) Тогда
			Объект = ТекСтрока.ОражениеНачисления.ПолучитьОбъект();
			Если ПометкаУдаления Тогда
				Если Не Объект.ПометкаУдаления Тогда
					Объект.УстановитьПометкуУдаления(Истина);
				КонецЕсли;	
			Иначе
				Если Объект.Проведен и РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
					Объект.Проведен = ложь;
					Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры	
