////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет перерасчет налога для указанного списка физлиц 
Процедура Рассчитать() Экспорт

	// Используем временную таблицу для исбежания моргания в форме документа
	ВременнаяТаблицаНДФЛ = РаботникиОрганизации.ВыгрузитьКолонки();
	ВременнаяТаблицаНДФЛ.Индексы.Добавить("ФизЛицо");
	
	// определим месяц налогового периода, по который будем рассчитывать налог с начала года 						 
	Если Год(Дата) = НалоговыйПериод Тогда
		МесяцНалоговогоПериода = НачалоМесяца(Дата);
	Иначе	
		// последний месяц налогового периода
		МесяцНалоговогоПериода = Дата(НалоговыйПериод, 12, 1);
	КонецЕсли; 		
	
	// дата, по которую будем учитывать зарегистрированные доходы и начисленные налоги 
	ПериодРегистрации = КонецМесяца(Дата);
	
	ГоловнаяОрганизация = ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация);
	
	//------------------------------------------------------------------------------------------------------
	// Расчет налога по ставке 13% (30% для нерезидентов)
	
	// Составим текст запроса для выбора списка физлиц, по которым надо считать НДФЛ
	СписокФизЛицТекст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрганизации.ФизЛицо
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &парамРегистратор";
	
	// получение результата НДФЛ по ставке 13 процентов
	// для него передается Организация, период и ссылка на регистратор
	ДанныеНДФЛ = ПроведениеРасчетов.ПолучитьДанныеНДФЛПоРегистратору(НачалоГода(МесяцНалоговогоПериода), КонецМесяца(МесяцНалоговогоПериода), ПериодРегистрации, Организация, ГоловнаяОрганизация, Ссылка, СписокФизлицТекст,,Истина);
	
	// Перепишем данные расчета в табличную часть документа
	// Учитывая, что в выборке данные расчета отсортированы по месяцам налогового периода и все значения 
	// хранятся нарастающим итогом, то для каждого физлица просто возьмем данные за последний рассчитанный месяц  
	Если ДанныеНДФЛ <> НеОпределено Тогда
		
		ДанныеНДФЛ.Свернуть("ФизЛицо, МесяцНалоговогоПериода, ПодразделениеОрганизации", "Налог,ЗачтеноАвансовыхПлатежей,ПримененныйВычетЛичный" +
				",ПримененныйВычетНаДетей,ПримененныйВычетНаДетейДвойной,ПримененныйВычетНаДетейДвойнойВторой" +
				",ПримененныйВычетНаТретьегоРебенка,ПримененныйВычетНаТретьегоРебенкаДвойной,ПримененныйВычетНаТретьегоРебенкаДвойнойВторой" +
				",ПримененныйВычетНаВторогоРебенка,ПримененныйВычетНаВторогоРебенкаДвойной,ПримененныйВычетНаВторогоРебенкаДвойнойВторой" +
				",ПримененныйВычетНаДетейИнвалидов,ПримененныйВычетНаДетейИнвалидовДвойной,ПримененныйВычетНаДетейИнвалидовДвойнойВторой" +
				",ПримененныйВычетНаДетейИнвалидовОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов" +
				",ПримененныйВычетРасходыНаСвоеОбучение,ПримененныйВычетРасходыНаОбучениеДетей,ПримененныйВычетРасходыНаЛечение,ПримененныйВычетСтраховыеВзносыНаМедУслуги,ПримененныйВычетРасходыНаДорогостоящееЛечение" +
				",ПримененныйВычетИмущественныйРасход,ПримененныйВычетИмущественныйПроцентыПоКредитам,ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни");
		ДанныеНДФЛ.Колонки.Налог.Имя = "НалогПоСтавке13";
		ДанныеНДФЛ.Колонки.ЗачтеноАвансовыхПлатежей.Имя = "ЗачтеноАвансовыхПлатежейПоСтавке13";
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДанныеНДФЛ", ДанныеНДФЛ);
		Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеНДФЛ.ФизЛицо КАК ФизЛицо,
		|	ДанныеНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	ДанныеНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13,
		|	ДанныеНДФЛ.НалогПоСтавке13,
		|	ДанныеНДФЛ.ПримененныйВычетЛичный,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетей,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаВторогоРебенка,
		|	ДанныеНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаТретьегоРебенка,
		|	ДанныеНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйРасход,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПоКредитам,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовОпекунов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаСвоеОбучение,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаОбучениеДетей,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаЛечение,
		|	ДанныеНДФЛ.ПримененныйВычетСтраховыеВзносыНаМедУслуги,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаДорогостоящееЛечение,
		|	ДанныеНДФЛ.ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни,
		|	ДанныеНДФЛ.ПодразделениеОрганизации
		|ПОМЕСТИТЬ ВТСтрокиНДФЛ
		|ИЗ
		|	&ДанныеНДФЛ КАК ДанныеНДФЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|	МИНИМУМ(ТЧРаботникиОрганизации.НомерСтроки) КАК НомерСтроки,
		|	ДанныеНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13,
		|	ДанныеНДФЛ.НалогПоСтавке13,
		|	ДанныеНДФЛ.ПримененныйВычетЛичный,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетей,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаТретьегоРебенка,
		|	ДанныеНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаВторогоРебенка,
		|	ДанныеНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйРасход,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПоКредитам,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовОпекунов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаСвоеОбучение,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаОбучениеДетей,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаЛечение,
		|	ДанныеНДФЛ.ПримененныйВычетСтраховыеВзносыНаМедУслуги,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаДорогостоящееЛечение,
		|	ДанныеНДФЛ.ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни,
		|	ДанныеНДФЛ.ПодразделениеОрганизации,
		|	ДанныеНДФЛ.МесяцНалоговогоПериода
		|ИЗ
		|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиНДФЛ КАК ДанныеНДФЛ
		|		ПО ТЧРаботникиОрганизации.ФизЛицо = ДанныеНДФЛ.ФизЛицо
		|ГДЕ
		|	ТЧРаботникиОрганизации.Ссылка = &парамРегистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ТЧРаботникиОрганизации.ФизЛицо,
		|	ДанныеНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке13,
		|	ДанныеНДФЛ.НалогПоСтавке13,
		|	ДанныеНДФЛ.ПримененныйВычетЛичный,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетей,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаТретьегоРебенка,
		|	ДанныеНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаВторогоРебенка,
		|	ДанныеНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойной,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйРасход,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПоКредитам,
		|	ДанныеНДФЛ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
		|	ДанныеНДФЛ.ПодразделениеОрганизации,
		|	ДанныеНДФЛ.МесяцНалоговогоПериода,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовОпекунов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,
		|	ДанныеНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаСвоеОбучение,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаОбучениеДетей,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаЛечение,
		|	ДанныеНДФЛ.ПримененныйВычетСтраховыеВзносыНаМедУслуги,
		|	ДанныеНДФЛ.ПримененныйВычетРасходыНаДорогостоящееЛечение,
		|	ДанныеНДФЛ.ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ВременнаяТаблицаНДФЛ.Добавить(),Выборка);
		КонецЦикла;
		
	КонецЕсли;

	//------------------------------------------------------------------------------------------------------
	// Расчет налогов по ставке 9 и 35 %
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамСтавкаРезидента09", ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛотСтавкиНалогообложенияРезидента(Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09));
	Запрос.УстановитьПараметр("парамСтавкаРезидента35", ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛотСтавкиНалогообложенияРезидента(Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35));
	Запрос.УстановитьПараметр("парамСтавкаНеРезидента", ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛСНерезидента());
	Запрос.УстановитьПараметр("парамСтавкаНеРезидентаСДивидендов", ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛСНерезидента(Справочники.ДоходыНДФЛ.Код1010,КонецГода(МесяцНалоговогоПериода)));
	Запрос.УстановитьПараметр("парамСтавкаРезидентаСДивидендов", ПроцедурыУправленияПерсоналом.ЗначениеСтавкиНДФЛотСтавкиНалогообложенияРезидента(Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09, Справочники.ДоходыНДФЛ.Код1010, КонецГода(МесяцНалоговогоПериода)));

	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамКонецМесяцаНалоговогоПериода", КонецМесяца(МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамНачалоГода", НачалоГода(МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецГода", КонецГода(МесяцНалоговогоПериода));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТСписокФизЛиц
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &парамРегистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода,
	|	РасчетыСБюджетом.ПодразделениеОрганизации,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|				ТОГДА РасчетыСБюджетом.Налог
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке09,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|				ТОГДА РасчетыСБюджетом.Налог
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалогПоСтавке35
	|ПОМЕСТИТЬ ВТРанееНачисленныеНалоги
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК РасчетыСБюджетом
	|ГДЕ
	|	РасчетыСБюджетом.Организация = &парамГоловнаяОрганизация
	|	И РасчетыСБюджетом.ФизЛицо В
	|			(ВЫБРАТЬ
	|				СписокФизЛиц.ФизЛицо
	|			ИЗ
	|				ВТСписокФизЛиц КАК СписокФизЛиц)
	|	И РасчетыСБюджетом.Период <= &парамПериодРегистрации
	|	И РасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
	|	И РасчетыСБюджетом.Регистратор <> &парамРегистратор
	|	И РасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСБюджетом.ФизЛицо,
	|	РасчетыСБюджетом.ПодразделениеОрганизации,
	|	РасчетыСБюджетом.МесяцНалоговогоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(НДФЛОбороты.СуммаДохода) КАК СуммаДохода,
	|	СУММА(НДФЛОбороты.СуммаВычета) КАК СуммаВычета,
	|	НДФЛОбороты.ФизЛицо КАК ФизЛицо,
	|	КОНЕЦПЕРИОДА(НДФЛОбороты.Период, МЕСЯЦ) КАК ПериодПолученияДохода,
	|	ВЫБОР
	|		КОГДА НДФЛОбороты.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоДивиденд,
	|	НДФЛОбороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложения,
	|	НДФЛОбороты.ДатаПолученияДохода КАК МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛОбороты
	|ГДЕ
	|	НДФЛОбороты.Период МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
	|	И НАЧАЛОПЕРИОДА(НДФЛОбороты.ПериодРегистрации, МЕСЯЦ) <= &парамПериодРегистрации
	|	И НДФЛОбороты.Организация = &парамГоловнаяОрганизация
	|	И НДФЛОбороты.КодДохода.СтавкаНалогообложенияРезидента <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|	И НДФЛОбороты.ФизЛицо В
	|			(ВЫБРАТЬ
	|				СписокФизЛиц.ФизЛицо
	|			ИЗ
	|				ВТСписокФизЛиц КАК СписокФизЛиц)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛОбороты.ФизЛицо,
	|	НДФЛОбороты.КодДохода.СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА НДФЛОбороты.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	КОНЕЦПЕРИОДА(НДФЛОбороты.Период, МЕСЯЦ),
	|	НДФЛОбороты.ДатаПолученияДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыРегистра.ФизЛицо КАК ФизЛицо,
	|	ПериодыРегистра.МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТСписокФизлицРезидентов
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Физлица.ФизЛицо КАК ФизЛицо,
	|		Физлица.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		МАКСИМУМ(СтатусНалогоплательщика.Период) КАК Период
	|	ИЗ
	|		ВТДоходы КАК Физлица
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	|			ПО Физлица.ФизЛицо = СтатусНалогоплательщика.ФизЛицо
	|				И Физлица.ПериодПолученияДохода >= СтатусНалогоплательщика.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Физлица.ФизЛицо,
	|		Физлица.МесяцНалоговогоПериода) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	|		ПО ПериодыРегистра.ФизЛицо = СтатусНалогоплательщика.ФизЛицо
	|			И ПериодыРегистра.Период = СтатусНалогоплательщика.Период
	|ГДЕ
	|	ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛОбороты.ФизЛицо КАК ФизЛицо,
	|	НДФЛОбороты.МесяцНалоговогоПериода,
	|	СУММА(ВЫРАЗИТЬ((НДФЛОбороты.СуммаДохода - НДФЛОбороты.СуммаВычета) * ВЫБОР
	|				КОГДА НДФЛОбороты.СтавкаНалогообложения = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|					ТОГДА ВЫБОР
	|							КОГДА НДФЛОбороты.ЭтоДивиденд
	|								ТОГДА ВЫБОР
	|										КОГДА СписокФизлицРезидентов.ФизЛицо ЕСТЬ NULL 
	|											ТОГДА &парамСтавкаНеРезидентаСДивидендов
	|										ИНАЧЕ &парамСтавкаРезидентаСДивидендов
	|									КОНЕЦ
	|							КОГДА СписокФизлицРезидентов.ФизЛицо ЕСТЬ NULL 
	|								ТОГДА &парамСтавкаНеРезидента
	|							ИНАЧЕ &парамСтавкаРезидента09
	|						КОНЕЦ / 100
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЧИСЛО(10, 0))) КАК НалогПоСтавке09,
	|	СУММА(ВЫРАЗИТЬ((НДФЛОбороты.СуммаДохода - НДФЛОбороты.СуммаВычета) * ВЫБОР
	|				КОГДА НДФЛОбороты.СтавкаНалогообложения = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|					ТОГДА ВЫБОР
	|							КОГДА СписокФизлицРезидентов.ФизЛицо ЕСТЬ NULL 
	|								ТОГДА &парамСтавкаНеРезидента
	|							ИНАЧЕ &парамСтавкаРезидента35
	|						КОНЕЦ / 100
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЧИСЛО(10, 0))) КАК НалогПоСтавке35
	|ПОМЕСТИТЬ ВТНалоги
	|ИЗ
	|	ВТДоходы КАК НДФЛОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСписокФизлицРезидентов КАК СписокФизлицРезидентов
	|		ПО НДФЛОбороты.ФизЛицо = СписокФизлицРезидентов.ФизЛицо
	|			И НДФЛОбороты.МесяцНалоговогоПериода = СписокФизлицРезидентов.МесяцНалоговогоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛОбороты.ФизЛицо,
	|	НДФЛОбороты.МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Налоги.ФизЛицо КАК ФизЛицо,
	|	Налоги.МесяцНалоговогоПериода,
	|	Налоги.НалогПоСтавке09,
	|	Налоги.НалогПоСтавке35
	|ИЗ
	|	ВТНалоги КАК Налоги
	|ГДЕ
	|	(Налоги.НалогПоСтавке09 <> 0
	|			ИЛИ Налоги.НалогПоСтавке35 <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛОбороты.ФизЛицо КАК ФизЛицо,
	|	НДФЛОбороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	СУММА(НДФЛОбороты.СуммаДохода - НДФЛОбороты.СуммаВычета) КАК СуммаДохода,
	|	НДФЛОбороты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НДФЛОбороты.ДатаПолученияДохода КАК МесяцНалоговогоПериода
	|ИЗ
	|	РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛОбороты
	|ГДЕ
	|	НДФЛОбороты.Период МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
	|	И НАЧАЛОПЕРИОДА(НДФЛОбороты.ПериодРегистрации, МЕСЯЦ) <= &парамПериодРегистрации
	|	И НДФЛОбороты.Организация = &парамГоловнаяОрганизация
	|	И НДФЛОбороты.ФизЛицо В
	|			(ВЫБРАТЬ
	|				СписокФизЛиц.ФизЛицо
	|			ИЗ
	|				ВТСписокФизЛиц КАК СписокФизЛиц)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛОбороты.ФизЛицо,
	|	НДФЛОбороты.КодДохода.СтавкаНалогообложенияРезидента,
	|	НДФЛОбороты.ПодразделениеОрганизации,
	|	НДФЛОбороты.ДатаПолученияДохода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	СтавкаНалогообложенияРезидента,
	|	ПодразделениеОрганизации";
	Результат =	Запрос.ВыполнитьПакет();
	ВсегоРезультатов = Результат.Количество();
	Если Не Результат[ВсегоРезультатов - 2].Пустой() Тогда
		
		ВыборкаРасчетов = Результат[ВсегоРезультатов - 2].Выбрать();
		РаспределениеДоходовПоПодразделениям = Результат[ВсегоРезультатов - 1].Выгрузить();

		СтруктураПоиска = Новый Структура("ФизЛицо, МесяцНалоговогоПериода, СтавкаНалогообложенияРезидента");
		Пока ВыборкаРасчетов.Следующий() Цикл
			
			СтруктураПоиска.ФизЛицо = ВыборкаРасчетов.ФизЛицо;
			СтруктураПоиска.МесяцНалоговогоПериода = ВыборкаРасчетов.МесяцНалоговогоПериода;
			
			Если ВыборкаРасчетов.НалогПоСтавке09 <> 0 Тогда
				СтруктураПоиска.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09;
				Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
				КоэффициентыПодразделений = ПроведениеРасчетов.ВыделитьКоэффициентыРаспределенияИзКоллекцииСтрок(Доходы, "СуммаДохода");
				ПроведениеРасчетов.ВписатьРесурсВРезультатыРасчетовНДФЛ(ВременнаяТаблицаНДФЛ, Неопределено, ВыборкаРасчетов.НалогПоСтавке09, "НалогПоСтавке09", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, "ФизЛицо, МесяцНалоговогоПериода", "ПодразделениеОрганизации");
			КонецЕсли;
			
			Если ВыборкаРасчетов.НалогПоСтавке35 <> 0 Тогда
				СтруктураПоиска.СтавкаНалогообложенияРезидента = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35;
				Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
				КоэффициентыПодразделений = ПроведениеРасчетов.ВыделитьКоэффициентыРаспределенияИзКоллекцииСтрок(Доходы, "СуммаДохода");
				ПроведениеРасчетов.ВписатьРесурсВРезультатыРасчетовНДФЛ(ВременнаяТаблицаНДФЛ, Неопределено, ВыборкаРасчетов.НалогПоСтавке35, "НалогПоСтавке35", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, "ФизЛицо, МесяцНалоговогоПериода", "ПодразделениеОрганизации");
			КонецЕсли;
			
		КонецЦикла;	
	
		ВременнаяТаблицаНДФЛ.Свернуть("ФизЛицо, МесяцНалоговогоПериода, ПодразделениеОрганизации", "НалогПоСтавке09,НалогПоСтавке13,НалогПоСтавке35,ПримененныйВычетЛичный" +
				",ПримененныйВычетНаДетей,ПримененныйВычетНаДетейДвойной,ПримененныйВычетНаДетейДвойнойВторой" +
				",ПримененныйВычетНаТретьегоРебенка,ПримененныйВычетНаТретьегоРебенкаДвойной,ПримененныйВычетНаТретьегоРебенкаДвойнойВторой" +
				",ПримененныйВычетНаВторогоРебенка,ПримененныйВычетНаВторогоРебенкаДвойной,ПримененныйВычетНаВторогоРебенкаДвойнойВторой" +
				",ПримененныйВычетНаДетейИнвалидов,ПримененныйВычетНаДетейИнвалидовДвойной,ПримененныйВычетНаДетейИнвалидовДвойнойВторой" +
				",ПримененныйВычетНаДетейИнвалидовОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов" +
				",ПримененныйВычетРасходыНаСвоеОбучение,ПримененныйВычетРасходыНаОбучениеДетей,ПримененныйВычетРасходыНаЛечение,ПримененныйВычетСтраховыеВзносыНаМедУслуги,ПримененныйВычетРасходыНаДорогостоящееЛечение" +
				",ПримененныйВычетИмущественныйРасход,ПримененныйВычетИмущественныйПроцентыПоКредитам,ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни");
		
	КонецЕсли;
	
	// Загружаем результаты расчета
	РаботникиОрганизации.Загрузить(ВременнаяТаблицаНДФЛ);
	
	НДФЛПерерасчетПереопределяемый.РассчитатьДополнительно(ЭтотОбъект, ГоловнаяОрганизация, МесяцНалоговогоПериода);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация" , Справочники.Организации.ПустаяСсылка());

	Запрос.Текст = 
	"ВЫБРАТЬ
   |	НДФЛПерерасчет.Дата,
   |	НДФЛПерерасчет.Ссылка,
   |	НДФЛПерерасчет.НалоговыйПериод,
   |	НДФЛПерерасчет.ПериодВзаиморасчетов,
   |	НДФЛПерерасчет.Организация,
   |	НДФЛПерерасчет.Ответственный,
   |	ВЫБОР
   |		КОГДА НДФЛПерерасчет.Организация.ГоловнаяОрганизация = &ПустаяОрганизация
   |			ТОГДА НДФЛПерерасчет.Организация
   |		ИНАЧЕ НДФЛПерерасчет.Организация.ГоловнаяОрганизация
   |	КОНЕЦ КАК ГоловнаяОрганизация
   |ИЗ
   |	Документ.НДФЛПерерасчет КАК НДФЛПерерасчет
   |ГДЕ
   |	НДФЛПерерасчет.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 		 - флаг отказа в проведении,
//	Заголовок	 - Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ОбщегоНазначенияЗК.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.НалоговыйПериод) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан налоговый период, за который выполняется перерасчет налога!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодВзаиморасчетов) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан месяц, в котором следует отразить расчеты с сотрудниками!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура СформироватьВычетыПоНДФЛ(ВыборкаПоШапкеДокумента, УпрощенныйУчетНДФЛ, Отказ, Заголовок) Экспорт
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧРаботникиОрганизации.НомерСтроки,
	|	ТЧРаботникиОрганизации.ФизЛицо КАК ФизЛицо,
	|	ТЧРаботникиОрганизации.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ТЧРаботникиОрганизации.ПримененныйВычетЛичный КАК ПримененныйВычетЛичный,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетей КАК ПримененныйВычетНаДетей,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейДвойной КАК ПримененныйВычетНаДетейДвойной,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейДвойнойВторой КАК ПримененныйВычетНаДетейДвойнойВторой,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаТретьегоРебенка КАК ПримененныйВычетНаТретьегоРебенка,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаТретьегоРебенкаДвойной КАК ПримененныйВычетНаТретьегоРебенкаДвойной,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаВторогоРебенка КАК ПримененныйВычетНаВторогоРебенка,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаВторогоРебенкаДвойной КАК ПримененныйВычетНаВторогоРебенкаДвойной,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаВторогоРебенкаДвойнойВторой КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидов КАК ПримененныйВычетНаДетейИнвалидов,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойной КАК ПримененныйВычетНаДетейИнвалидовДвойной,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойнойВторой КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
	|	ТЧРаботникиОрганизации.ПримененныйВычетИмущественныйРасход КАК ПримененныйВычетИмущественныйРасход,
	|	ТЧРаботникиОрганизации.ПримененныйВычетИмущественныйПроцентыПоКредитам КАК ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	ТЧРаботникиОрганизации.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании КАК ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,
	|	ТЧРаботникиОрганизации.ПримененныйВычетНаДетейИнвалидовОпекунов,
	|	ТЧРаботникиОрганизации.ПримененныйВычетРасходыНаСвоеОбучение,
	|	ТЧРаботникиОрганизации.ПримененныйВычетРасходыНаОбучениеДетей,
	|	ТЧРаботникиОрганизации.ПримененныйВычетРасходыНаЛечение,
	|	ТЧРаботникиОрганизации.ПримененныйВычетСтраховыеВзносыНаМедУслуги,
	|	ТЧРаботникиОрганизации.ПримененныйВычетРасходыНаДорогостоящееЛечение,
	|	ТЧРаботникиОрганизации.ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни,
	|	ТЧРаботникиОрганизации.ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТСтрокиНДФЛ
	|ИЗ
	|	Документ.НДФЛПерерасчет.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыРегистра.НомерСтроки,
	|	НДФЛСтандартныеВычетыФизлиц.КодВычетаЛичный
	|ПОМЕСТИТЬ ВТВычетыФизлиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтрокиНДФЛ.НомерСтроки КАК НомерСтроки,
	|		СтрокиНДФЛ.ФизЛицо КАК ФизЛицо,
	|		МАКСИМУМ(ВычетыФизлиц.Период) КАК Период
	|	ИЗ
	|		ВТСтрокиНДФЛ КАК СтрокиНДФЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыФизлиц КАК ВычетыФизлиц
	|			ПО СтрокиНДФЛ.ФизЛицо = ВычетыФизлиц.Физлицо
	|				И СтрокиНДФЛ.МесяцНалоговогоПериода >= ВычетыФизлиц.Период
	|	ГДЕ
	|		СтрокиНДФЛ.ПримененныйВычетЛичный <> 0
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СтрокиНДФЛ.НомерСтроки,
	|		СтрокиНДФЛ.ФизЛицо) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛСтандартныеВычетыФизлиц КАК НДФЛСтандартныеВычетыФизлиц
	|		ПО ПериодыРегистра.Период = НДФЛСтандартныеВычетыФизлиц.Период
	|			И ПериодыРегистра.ФизЛицо = НДФЛСтандартныеВычетыФизлиц.Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиНДФЛ.НомерСтроки КАК НомерСтроки,
	|	СтрокиНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СтрокиНДФЛ.ФизЛицо КАК ФизЛицо,
	|	СтрокиНДФЛ.ПримененныйВычетЛичный КАК ПримененныйВычетЛичный,
	|	ВычетыФизлиц.КодВычетаЛичный,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетей КАК ПримененныйВычетНаДетей,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейДвойной КАК ПримененныйВычетНаДетейДвойной,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейДвойнойВторой КАК ПримененныйВычетНаДетейДвойнойВторой,
	|	СтрокиНДФЛ.ПримененныйВычетНаТретьегоРебенка КАК ПримененныйВычетНаТретьегоРебенка,
	|	СтрокиНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойной КАК ПримененныйВычетНаТретьегоРебенкаДвойной,
	|	СтрокиНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
	|	СтрокиНДФЛ.ПримененныйВычетНаВторогоРебенка КАК ПримененныйВычетНаВторогоРебенка,
	|	СтрокиНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойной КАК ПримененныйВычетНаВторогоРебенкаДвойной,
	|	СтрокиНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойнойВторой КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейИнвалидов КАК ПримененныйВычетНаДетейИнвалидов,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойной КАК ПримененныйВычетНаДетейИнвалидовДвойной,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
	|	СтрокиНДФЛ.ПримененныйВычетИмущественныйРасход КАК ПримененныйВычетИмущественныйРасход,
	|	СтрокиНДФЛ.ПримененныйВычетИмущественныйПроцентыПоКредитам КАК ПримененныйВычетИмущественныйПроцентыПоКредитам,
	|	СтрокиНДФЛ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании КАК ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,
	|	СтрокиНДФЛ.ПримененныйВычетНаДетейИнвалидовОпекунов,
	|	СтрокиНДФЛ.ПримененныйВычетРасходыНаСвоеОбучение,
	|	СтрокиНДФЛ.ПримененныйВычетРасходыНаОбучениеДетей,
	|	СтрокиНДФЛ.ПримененныйВычетРасходыНаЛечение,
	|	СтрокиНДФЛ.ПримененныйВычетСтраховыеВзносыНаМедУслуги,
	|	СтрокиНДФЛ.ПримененныйВычетРасходыНаДорогостоящееЛечение,
	|	СтрокиНДФЛ.ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни,
	|	СтрокиНДФЛ.ПодразделениеОрганизации
	|ИЗ
	|	ВТСтрокиНДФЛ КАК СтрокиНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВычетыФизлиц КАК ВычетыФизлиц
	|		ПО СтрокиНДФЛ.НомерСтроки = ВычетыФизлиц.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	//ВыборкаПоРаботникиОрганизации
	ВыборкаПоТЧ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	// Заполним записи в наборах записей регистров
	Пока ВыборкаПоТЧ.Следующий() Цикл 
		
		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоТЧ.НомерСтроки) +
										""" табл. части ""Сотрудники Организации"": ";
										
		Если ВыборкаПоТЧ.ПримененныйВычетЛичный <> 0 И Не ЗначениеЗаполнено(ВыборкаПоТЧ.КодВычетаЛичный) Тогда
			ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(НачалоСообщения + "для указанного физического лица не зарегистрировано право на предоставление личного вычета!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не Отказ Тогда // формируем движения
			
			// Стандартные вычеты
			
			Если ВыборкаПоТЧ.ПримененныйВычетЛичный <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, ВыборкаПоТЧ.КодВычетаЛичный, ВыборкаПоТЧ.ПримененныйВычетЛичный);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетей <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код101, ВыборкаПоТЧ.ПримененныйВычетНаДетей);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейДвойной <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код102, ВыборкаПоТЧ.ПримененныйВычетНаДетейДвойной);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейДвойнойВторой <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код111, ВыборкаПоТЧ.ПримененныйВычетНаДетейДвойнойВторой);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаТретьегоРебенка <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код116, ВыборкаПоТЧ.ПримененныйВычетНаТретьегоРебенка);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаТретьегоРебенкаДвойной <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код120, ВыборкаПоТЧ.ПримененныйВычетНаТретьегоРебенкаДвойной);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код124, ВыборкаПоТЧ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаВторогоРебенка <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код115, ВыборкаПоТЧ.ПримененныйВычетНаВторогоРебенка);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаВторогоРебенкаДвойной <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код119, ВыборкаПоТЧ.ПримененныйВычетНаВторогоРебенкаДвойной);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаВторогоРебенкаДвойнойВторой <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код123, ВыборкаПоТЧ.ПримененныйВычетНаВторогоРебенкаДвойнойВторой);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидов <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код106, ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидов);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойной <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код107, ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойной);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код113, ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовОпекунов <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код117о, ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовОпекунов);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код121о, ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов);
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов <> 0 Тогда
				ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код125о, ВыборкаПоТЧ.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов);
			КонецЕсли;
			
			// имущественные и социальные вычеты
			
			Если ВыборкаПоТЧ.ПримененныйВычетИмущественныйРасход <> 0 Тогда 
				ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код311, ВыборкаПоТЧ.ПримененныйВычетИмущественныйРасход)
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетИмущественныйПроцентыПоКредитам <> 0 Тогда
				ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код312, ВыборкаПоТЧ.ПримененныйВычетИмущественныйПроцентыПоКредитам)
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании <> 0 Тогда
				ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код318, ВыборкаПоТЧ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании)
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетРасходыНаСвоеОбучение <> 0 Тогда
				ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код320о, ВыборкаПоТЧ.ПримененныйВычетРасходыНаСвоеОбучение)
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетРасходыНаОбучениеДетей <> 0 Тогда
				ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код321, ВыборкаПоТЧ.ПримененныйВычетРасходыНаОбучениеДетей)
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетРасходыНаЛечение <> 0 Тогда
				ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код324, ВыборкаПоТЧ.ПримененныйВычетРасходыНаЛечение)
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетСтраховыеВзносыНаМедУслуги <> 0 Тогда
				ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код325, ВыборкаПоТЧ.ПримененныйВычетСтраховыеВзносыНаМедУслуги)
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетРасходыНаДорогостоящееЛечение <> 0 Тогда
				ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код326, ВыборкаПоТЧ.ПримененныйВычетРасходыНаДорогостоящееЛечение)
			КонецЕсли;
			Если ВыборкаПоТЧ.ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни <> 0 Тогда
				ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоТЧ, ВыборкаПоШапкеДокумента, Справочники.ВычетыНДФЛ.Код326, ВыборкаПоТЧ.ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни)
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// По строке выборок из результатов запроса по документу формируем движения по регистрам вычетов по НДФЛ
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//				  				  из результата запроса к ТЧ документа, 
//  ШапкаДокумента		- выборка по данным шапки документа
//	НаборСтандартныеВычеты		- набор записей для НДФЛПредоставленныеСтандартныеВычетыФизЛиц
//	НаборИмущественныеВычеты	- набор записей для НДФЛИмущественныеВычетыФизлиц
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуСтандартныхВычетовПоНДФЛ(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, КодВычета, ПримененныйВычет)
	
	Движение = Движения.НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Добавить();
	
	// Свойства
	Движение.Период						= ВыборкаПоШапкеДокумента.Дата;
	// Измерения
	Движение.Организация	 	   		= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ФизЛицо	 	 	  		= ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.МесяцНалоговогоПериода		= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериода;
	Движение.КодВычета	 	 	  		= КодВычета;
	
	// Ресурсы
	Движение.ПримененныйВычет			= ПримененныйВычет;
	// Реквизиты 
	Движение.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.Организация;
	Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	
КонецПроцедуры // ДобавитьСтрокуНДФЛВычеты

Процедура ДобавитьСтрокуИмущественныхВычетовПоНДФЛ(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, КодВычета, ПримененныйВычет)
	
	Движение = Движения.НДФЛИмущественныеВычетыФизлиц.Добавить();
	
	// Свойства
	Движение.Период							= КонецМесяца(ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериода);
	Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
	
	// Измерения
	Движение.ФизЛицо	 	 	 			= ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.Год							= ВыборкаПоШапкеДокумента.НалоговыйПериод;
	Движение.КодВычетаИмущественный			= КодВычета;
	
	// Ресурсы
	Движение.Размер							= ПримененныйВычет; 
	
	// Реквизиты
	Движение.ОбособленноеПодразделение		= ВыборкаПоШапкеДокумента.Организация;
	Движение.ПодразделениеОрганизации		= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	Движение.МесяцРегистрации				= ВыборкаПоШапкеДокумента.Дата;
	
КонецПроцедуры // ДобавитьСтрокуНДФЛВычеты

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//				  				  из результата запроса к ТЧ документа, 
//  ВыборкаПоШапкеДокумента		- выборка по данным шапки документа
//	НаборЗаписей				- набор записей для НДФЛРасчетыСБюджетом
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуНДФЛудержанный(ВыборкаСуммКУдержанию, ВыборкаПоНДФЛКЗачету, ВыборкаПоШапкеДокумента) Экспорт
	
	СтруктураПоиска = Новый Структура("ФизЛицо, СтавкаНалогообложенияРезидента");
	
	НДФЛПерерасчетПереопределяемый.ДополнитьСтруктуруПоиска(СтруктураПоиска);
	
	ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаСуммКУдержанию); 
	
	НалогКУдержанию = ВыборкаСуммКУдержанию.Налог; // положительная сумма исчисленного налога
	
	// учтем возможный зачет образовавшейся ранее переплаты налога
	ВыборкаПоНДФЛКЗачету.Сбросить();
	Если ВыборкаПоНДФЛКЗачету.НайтиСледующий(СтруктураПоиска) Тогда
		НалогКУдержанию = НалогКУдержанию - ВыборкаПоНДФЛКЗачету.НДФЛКЗачетуУчтено;
	КонецЕсли;
	
	Если НалогКУдержанию > 0 Тогда
		
		Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение,ВыборкаСуммКУдержанию,,"Налог");
		
		// Свойства
		Движение.Период                 		= ВыборкаПоШапкеДокумента.Дата;
		Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
		// Измерения
		Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		// Ресурсы
		Движение.Налог							= НалогКУдержанию; 
		// Реквизиты
		Движение.ОбособленноеПодразделение  	= ВыборкаПоШапкеДокумента.Организация;
		Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуНДФЛудержанный

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияЗК.ПредставлениеДокументаПриПроведении(Ссылка);
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		НДФЛПерерасчетПереопределяемый.ОбработкаПроведенияДополнительно(ЭтотОбъект, ВыборкаПоШапкеДокумента, Отказ, Режим, Заголовок);
		
		Если Движения.НДФЛРасчетыСБюджетом.Количество() > 0 Тогда
			Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Загрузить(ПроведениеРасчетов.РасчетыНалоговогоАгентаПоУдержанномуНДФЛ(Движения.НДФЛРасчетыСБюджетом.Выгрузить()))
		КонецЕсли;
		
	КонецЕсли;

	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы формы документа

#Если ТолстыйКлиентОбычноеПриложение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ(ЭтаФорма) Экспорт
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭтаФорма.ЭлементыФормы.РаботникиОрганизации,ЭтаФорма.ЭлементыФормы.КоманднаяПанельРаботникиОрганизации);
	
	ЭтаФорма.мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧ(ЭтаФорма.Ссылка, СоответствиеТЧ, ЭтаФорма.мДействиеНажатиеНаДополнительнуюКнопкуЗаполненияТЧ);
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати(ЭтаФорма) Экспорт
	
	ЭтаФорма.мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, Неопределено, ЭтаФорма.мДействиеОсновныеДействияФормыПечать, ЭтаФорма.мДействиеОсновныеДействияФормыУстановитьПечатьПоУмолчанию);

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (ЭтаФорма.мПодменюПечати, ЭтаФорма.ЭлементыФормы.ОсновныеДействияФормы, ЭтаФорма.мДеревоМакетов);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(ЭтаФорма.мПечатьПоУмолчанию, ЭтаФорма.ЭлементыФормы.ОсновныеДействияФормы, ЭтаФорма.мДеревоМакетов, Метаданные().Имя,ЭтаФорма.мДействиеОсновныеДействияФормыПечатьПоУмолчанию);

	Если Не ЭтаФорма.мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(ЭтаФорма.мДеревоМакетов, ЭтаФорма.мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ФормаДокументаПередОткрытием(Отказ, СтандартнаяОбработка, ЭтаФорма) Экспорт
	
	// Установка кнопок печати
	УстановитьКнопкиПечати(ЭтаФорма);
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ(ЭтаФорма);
	
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ФормаДокументаПриОткрытии(ЭтаФорма) Экспорт
	
	ЭлементыФормы = ЭтаФорма.ЭлементыФормы;
	
	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
		
		НалоговыйПериод = Год(Дата);
		
		ПериодВзаиморасчетов = НачалоМесяца(Дата);	
		
	Иначе
		
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогамиЗК.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		
	КонецЕсли;	
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1,ЭлементыФормы.Номер);
	
	// Заполним реквизит формы МесяцСтрока.
	ЭтаФорма.МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодВзаиморасчетов);
	
	КолонкиНДФЛ = ЭлементыФормы.РаботникиОрганизации.Колонки;
	ГодИзмененияНалогообложенияДивидендов = Год(ПроведениеРасчетов.ДатаИзмененияНалогообложенияДивидендов());
	КолонкиНДФЛ.НалогПоСтавке09.ТекстШапки = ?(НалоговыйПериод >= ГодИзмененияНалогообложенияДивидендов,"По ставке 13 (15)% или 9 (30%)", ?(НалоговыйПериод >= 2008,"По ставке 9 (15)%","По ставке 9 (30)%"));
	КолонкиНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке09.ТекстШапки = ?(НалоговыйПериод >= ГодИзмененияНалогообложенияДивидендов,"13%, 9% (15%, 30%)","9% (15%, 30%)");
	РаботаСДиалогамиЗК.ОформитьКолонкиНДФЛ(КолонкиНДФЛ);
	
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	ЭтаФорма.мТекущаяДатаДокумента        = Дата;
	
	// Получим и запомним ссылку на головную организацию
	ЭтаФорма.мГоловнаяОрганизация = ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация);
	
	// Установить активный реквизит.
	Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма) Тогда
		ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.РаботникиОрганизации;
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаДокументаОбновлениеОтображения(ЭтаФорма) Экспорт
	КолонкиНДФЛ = ЭтаФорма.ЭлементыФормы.РаботникиОрганизации.Колонки;
	
	БлокКолонок = Новый Массив;
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаДетей);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаДетейДвойной);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаДетейДвойнойВторой);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаТретьегоРебенка);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойной);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаТретьегоРебенкаДвойнойВторой);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаВторогоРебенка);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойной);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаВторогоРебенкаДвойнойВторой);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаДетейИнвалидов);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойной);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторой);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаДетейИнвалидовОпекунов);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов);
	РаботаСДиалогамиЗК.ПеренестиБлокКолонокЦеликом(КолонкиНДФЛ, КолонкиНДФЛ.КолонкаЗаголовок, БлокКолонок);
	
	БлокКолонок = Новый Массив;
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетИмущественныйРасход);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетИмущественныйПроцентыПоКредитам);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетИмущественныйПроцентыПриПерекредитовании);
	РаботаСДиалогамиЗК.ПеренестиБлокКолонокЦеликом(КолонкиНДФЛ, КолонкиНДФЛ.КолонкаЗаголовокИмущественный, БлокКолонок);
	
	БлокКолонок = Новый Массив;
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетРасходыНаСвоеОбучение);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетРасходыНаОбучениеДетей);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетРасходыНаЛечение);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетСтраховыеВзносыНаМедУслуги);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетРасходыНаДорогостоящееЛечение);
	БлокКолонок.Добавить(КолонкиНДФЛ.ПримененныйВычетВзносыНаДобровольноеСтрахованиеЖизни);
	РаботаСДиалогамиЗК.ПеренестиБлокКолонокЦеликом(КолонкиНДФЛ, КолонкиНДФЛ.ЗаголовокСоциальныхВычетов, БлокКолонок);
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" формы.
//
Процедура ФормаДокументаОбработкаВыбора(ЗначениеВыбора, Источник, ЭтаФорма) Экспорт
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("Структура") Тогда
		Команда = "";
		Если ЗначениеВыбора.Свойство("Команда",Команда) и Команда = "ЗаполнитьСписокРаботников" Тогда
			РаботникиОрганизации.Загрузить(ЗначениеВыбора.Данные.Выгрузить())
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ФормаДокументаПослеЗаписи(ЭтаФорма) Экспорт
    
	// Установка кнопок печати
	УстановитьКнопкиПечати(ЭтаФорма);

	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭтаФорма.ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭтаФорма.ЭлементыФормы.Номер);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события нажатия кнопки "Рассчитать"
Процедура ФормаДокументаДействияФормыРассчитать(Кнопка, ЭтаФорма) Экспорт
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Если НЕ РаботаСДиалогами.ЗаписатьДокументОтменивПроведениеПередВыполнениемДействия(ЭтаФорма.ДокументОбъект, ЭтаФорма, "рассчитать") Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	Рассчитать();
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ФормаДокументаДействияФормыДвиженияДокументаПоРегистрам(Кнопка, ЭтаФорма) Экспорт

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура - вызывается при нажатии на кнопку "Заполнить"
//
Процедура ФормаДокументаДействияФормыЗаполнить(Кнопка, ЭтаФорма) Экспорт
	
	Если РаботникиОрганизации.Количество() > 0 Тогда
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 

	КонецЕсли;
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуОтбораСпискаРаботников(ЭтаФорма, Дата, "РаботникиОрганизаций", Организация, Неопределено, Истина, Ложь,,,,,Истина);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ "КоманднаяПанельРаботникиОрганизации"

// Процедура - вызывается при нажатии на кнопку "Подбор"
//
Процедура ФормаДокументаКоманднаяПанельРаботникиОрганизацииПодбор(Кнопка, ЭтаФорма) Экспорт
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭтаФорма.ЭлементыФормы.РаботникиОрганизации, Ссылка, Ложь, Дата, ЭтаФорма.мГоловнаяОрганизация,,,,, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ФормаДокументаДатаПриИзменении(Элемент, ЭтаФорма) Экспорт

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, ЭтаФорма.мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭтаФорма.ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭтаФорма.ЭлементыФормы.Номер);

	ЭтаФорма.мТекущаяДатаДокумента = Дата;
	
КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ФормаДокументаОрганизацияПриИзменении(Элемент, ЭтаФорма) Экспорт

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭтаФорма.ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭтаФорма.ЭлементыФормы.Номер);
	КонецЕсли;
	
	// Получим и запомним ссылку на головную организацию
	ЭтаФорма.мГоловнаяОрганизация = ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация);

КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода периода, за который производится перерасчет.
//
Процедура ФормаДокументаНалоговыйПериодПриИзменении(Элемент, ЭтаФорма) Экспорт
	КолонкиНДФЛ = ЭтаФорма.ЭлементыФормы.РаботникиОрганизации.Колонки;
	ГодИзмененияНалогообложенияДивидендов = Год(ПроведениеРасчетов.ДатаИзмененияНалогообложенияДивидендов());
	КолонкиНДФЛ.НалогПоСтавке09.ТекстШапки = ?(НалоговыйПериод >= ГодИзмененияНалогообложенияДивидендов,"По ставке 13 (15)% или 9 (30%)", ?(НалоговыйПериод >= 2008,"По ставке 9 (15)%","По ставке 9 (30)%"));
	КолонкиНДФЛ.ЗачтеноАвансовыхПлатежейПоСтавке09.ТекстШапки = ?(НалоговыйПериод >= ГодИзмененияНалогообложенияДивидендов,"13%, 9% (15%, 30%)","9% (15%, 30%)");
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода периода регистрации.
//
Процедура ФормаДокументаПериодВзаиморасчетовПриИзменении(Элемент, ЭтаФорма) Экспорт
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодВзаиморасчетов);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодВзаиморасчетов);
	
КонецПроцедуры

// Процедура - обработчик события "Регулирование" поля ввода периода регистрации.
//
Процедура ФормаДокументаПериодВзаиморасчетовРегулирование(Элемент, Направление, СтандартнаяОбработка, ЭтаФорма) Экспорт
	
	ПериодВзаиморасчетов = ДобавитьМесяц(ПериодВзаиморасчетов, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодВзаиморасчетов);
	
КонецПроцедуры

// Процедура - обработчик события "Очистка" поля ввода периода регистрации.
//
Процедура ФормаДокументаПериодВзаиморасчетовОчистка(Элемент, СтандартнаяОбработка, ЭтаФорма) Экспорт
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода периода регистрации.
//
Процедура ФормаДокументаПериодВзаиморасчетовНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка, ЭтаФорма) Экспорт
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодВзаиморасчетов, ЭтаФорма);
КонецПроцедуры

// Процедура - обработчик события "АвтоПодборТекста" поля ввода периода регистрации.
//
Процедура ФормаДокументаПериодВзаиморасчетовАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ЭтаФорма) Экспорт
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода периода регистрации.
//
Процедура ФормаДокументаПериодВзаиморасчетовОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка, ЭтаФорма) Экспорт
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

// Процедура - обработчик события вывода строки табличной части
Процедура ФормаДокументаРаботникиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки, ЭтаФорма) Экспорт
	ОформлениеСтроки.Ячейки.КолонкаЗаголовок.Видимость = Ложь;	
	ОформлениеСтроки.Ячейки.КолонкаЗаголовокЗачтеноАвансовыхПлатежей.Видимость = Ложь;	
	ОформлениеСтроки.Ячейки.КолонкаЗаголовокИмущественный.Видимость = Ложь;	
	ОформлениеСтроки.Ячейки.ЗаголовокСоциальныхВычетов.Видимость = Ложь;	
КонецПроцедуры

// Процедура - обработчик оповещения о выборе, присланного формой рег-ра сведений
//
Процедура ФормаДокументаРаботникиОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Физлицо = ВыбранноеЗначение;
	
	Если РаботникиОрганизации.НайтиСтроки(Новый Структура("ФизЛицо", ФизЛицо)).Количество() = 0 Тогда
		РаботникиОрганизации.Добавить().Физлицо = Физлицо;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ РаботникиОрганизации

// Процедура - обработчик события "НачалоВыбора" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура ФормаДокументаРаботникиОрганизацииФизЛицоНачалоВыбора(Элемент, СтандартнаяОбработка, ЭтаФорма) Экспорт
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, Ссылка, Истина, Дата, ЭтаФорма.мГоловнаяОрганизация, 6, СтандартнаяОбработка, Элемент.Значение,, Истина);
	
КонецПроцедуры
 
Процедура ФормаДокументаРаботникиОрганизацииФизЛицоОткрытие(Элемент, СтандартнаяОбработка, Форма) Экспорт
	
	ПроцедурыУправленияПерсоналом.ОбработкаОткрытияФизлица(Элемент, Ссылка, Элемент.Значение, Форма.мГоловнаяОрганизация, СтандартнаяОбработка);

КонецПроцедуры

Процедура ФормаДокументаРаботникиОрганизацииФизЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка, ЭтаФорма) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		СтандартнаяОбработка = Ложь;
		Элемент.Значение = ВыбранноеЗначение.Физлицо;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "АвтоПодборТекста" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура ФормаДокументаРаботникиОрганизацииФизЛицоАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ЭтаФорма) Экспорт
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналомПереопределяемый.ПодобратьФИОСотрудника(СтандартнаяОбработка, 6, Текст, Организация, Истина);
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура ФормаДокументаРаботникиОрганизацииФизЛицоОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка, ЭтаФорма) Экспорт
	Значение = ПроцедурыУправленияПерсоналомПереопределяемый.ПодобратьСписокСотрудников(СтандартнаяОбработка, 6, Текст, Организация, Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ФормаДокументаДействияФормыДействиеОткрытьСвойства(Кнопка, ЭтаФорма) Экспорт

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ФормаДокументаДействияФормыДействиеОткрытьКатегории(Кнопка, ЭтаФорма) Экспорт

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ФормаДокументаДействияФормыСтруктураПодчиненностиДокумента(Кнопка, ЭтаФорма) Экспорт
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура ФормаДокументаНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка, ЭтаФорма) Экспорт
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(ЭтаФорма.мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ФормаДокументаОсновныеДействияФормыПечатьПоУмолчанию(Кнопка, ЭтаФорма) Экспорт
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(ЭтаФорма.мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ФормаДокументаОсновныеДействияФормыПечать(Кнопка, ЭтаФорма) Экспорт
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(ЭтаФорма.мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ФормаДокументаОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка, ЭтаФорма) Экспорт
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(ЭтаФорма.мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати(ЭтаФорма);
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ФормаДокументаДействияФормыРедактироватьНомер(Кнопка, ЭтаФорма) Экспорт
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭтаФорма.ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭтаФорма.ЭлементыФормы.Номер);
			
КонецПроцедуры

#КонецЕсли