// В функции описано, какие данные следует сохранять в шаблоне
Функция СтруктураДополнительныхДанныхФормы() Экспорт
	
	Возврат ХранилищаНастроек.ДанныеФорм.СформироватьСтруктуруДополнительныхДанных("Товары,ВозвратнаяТара,Услуги");
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заказ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Заказ", "Счет на оплату поставщика", ПечатьСчетаЗаказа(МассивОбъектов, ОбъектыПечати, "Заказ"));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказПоДаннымПоставщика") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаказПоДаннымПоставщика", "Счет на оплату поставщика (по данным поставщика)", ПечатьСчетаЗаказа(МассивОбъектов, ОбъектыПечати, "ЗаказПоДаннымПоставщика"));
	КонецЕсли;
КонецПроцедуры

// Функция формирует табличный документ с печатной формой заказа или счета,
// разработанного методистами
//
// Возвращаемое значение:
//  Табличный документ - сформированная печатная форма
//
Функция ПечатьСчетаЗаказа(МассивОбъектов, ОбъектыПечати, Тип)
	
	ТабДокумент = Новый ТабличныйДокумент;
	Если Тип = "ЗаказПоДаннымПоставщика" Тогда
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетНаОплатуПоставщика_СчетЗаказПоДаннымПоставщика";
	Иначе
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетНаОплатуПоставщика_СчетЗаказ";
	КонецЕсли;
	Макет = ПолучитьМакет("СчетЗаказ");
	СтрокаВыборкиПоляСодержания = ОбработкаТабличныхЧастей.ПолучитьЧастьЗапросаДляВыбораСодержания("ЗаказПоставщику");

	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Номер,
		|	Дата,
		|	ДатаПоступления,
		|	ДоговорКонтрагента,
		|	Контрагент КАК Поставщик,
		|	Организация,
		|	СуммаДокумента,
		|	ВалютаДокумента,
		|	УчитыватьНДС,
		|	СуммаВключаетНДС
		|ИЗ
		|	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
		|
		|ГДЕ
		|	СчетНаОплатуПоставщика.Ссылка = &ТекущийДокумент";
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		Запрос = Новый Запрос;
		
		// Определим параметры запроса и табличного документа  
		// в зависимости от необходимости отображения артикула поставщика  
		Если Тип = "ЗаказПоДаннымПоставщика" Тогда

			ОбластьШапки  = Макет.ПолучитьОбласть("ШапкаСАртикулом");
			ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаСАртикулом");

			Запрос.УстановитьПараметр("Контрагент", Ссылка.Контрагент);

			ТекстПоляТовараДляТоваров = "
			|	ВЫБОР КОГДА (НаименованиеКонтрагента ЕСТЬ NULL ИЛИ НаименованиеКонтрагента = """") ТОГДА ВЫРАЗИТЬ (ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(100)) ИНАЧЕ НаименованиеКонтрагента КОНЕЦ КАК Товар,";

			ТекстПоляТовараДляУслуг = "
			|	ВЫБОР КОГДА (ВЫРАЗИТЬ (НаименованиеНоменклатурыКонтрагента КАК Строка(100)) ЕСТЬ NULL ИЛИ ВЫРАЗИТЬ (НаименованиеНоменклатурыКонтрагента КАК Строка(100)) = """") ТОГДА ВЫРАЗИТЬ(ЗаказПоставщику.Номенклатура.НаименованиеПолное КАК Строка(100)) ИНАЧЕ ВЫРАЗИТЬ (НаименованиеНоменклатурыКонтрагента КАК Строка(100)) КОНЕЦ КАК Товар,";

			ТекстПоляАртикула = ",
				|	АртикулКонтрагента";

			ТекстВыборкиАртикула = ", 
				|	АртикулНоменклатурыКонтрагента КАК АртикулКонтрагента";

			ТекстВыборкиНоменклатуры = ", 
				|	ВЫРАЗИТЬ(НаименованиеНоменклатурыКонтрагента КАК Строка(100)) КАК НаименованиеКонтрагента";

			ТекстИсточникАртикула = "
				|	ЛЕВОЕ ВНЕШНЕЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
				|	ПО НоменклатураКонтрагентов.Номенклатура = ЗаказПоставщику.Номенклатура
				|	И  НоменклатураКонтрагентов.Контрагент = &Контрагент";

			ТекстГруппировкиАртикулаИНоменклатуры = ", 
				|	АртикулНоменклатурыКонтрагента,
				|	ВЫРАЗИТЬ(НаименованиеНоменклатурыКонтрагента КАК Строка(100))";

		Иначе

			ТекстПоляТовараДляТоваров = "
			|	ВЫРАЗИТЬ (ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(100)) КАК Товар,";

			СтрокаВыборкиПоляСодержания = ОбработкаТабличныхЧастей.ПолучитьЧастьЗапросаДляВыбораСодержания("ЗаказПоставщику");
			
			ТекстПоляТовараДляУслуг = "
			|	" + СтрокаВыборкиПоляСодержания + " КАК Товар,";

			ОбластьШапки  = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ОбластьСтроки = Макет.ПолучитьОбласть("Строка");

			ТекстПоляАртикула                     = "";
			ТекстВыборкиАртикула                  = "";
			ТекстИсточникАртикула                 = "";
			ТекстГруппировкиАртикулаИНоменклатуры = "";

		КонецЕсли;

		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.Текст ="
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,"+ТекстПоляТовараДляТоваров+"
		|	ВложенныйЗапрос.Количество,
		|	ВложенныйЗапрос.НомерСтроки,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.Цена,
		|	ВложенныйЗапрос.Сумма,
		|	ВложенныйЗапрос.СуммаНДС,
		|	(2)                                             КАК Метка,
		|	ВложенныйЗапрос.Характеристика,
		|	NULL КАК Серия" + ТекстПоляАртикула + "
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		ЗаказПоставщику.Номенклатура,
		|		ЗаказПоставщику.ЕдиницаИзмерения,
		|		ЗаказПоставщику.Цена                        КАК Цена,
		|		МИНИМУМ(ЗаказПоставщику.НомерСтроки)        КАК НомерСтроки,
		|		СУММА(ЗаказПоставщику.Количество)           КАК Количество,
		|		СУММА(ЗаказПоставщику.Сумма     )           КАК Сумма,
		|		СУММА(ЗаказПоставщику.СуммаНДС  )           КАК СуммаНДС,
		|		ЗаказПоставщику.ХарактеристикаНоменклатуры  КАК Характеристика"   + ТекстВыборкиАртикула + ТекстВыборкиНоменклатуры + "
		|	ИЗ
		|		Документ.СчетНаОплатуПоставщика.Оборудование КАК ЗаказПоставщику" + ТекстИсточникАртикула + "
		|
		|	ГДЕ
		|		ЗаказПоставщику.Ссылка = &ТекущийДокумент
		|
		|	СГРУППИРОВАТЬ ПО
		|		ЗаказПоставщику.Номенклатура,
		|		ЗаказПоставщику.ЕдиницаИзмерения,
		|		ЗаказПоставщику.Цена,
		|		ЗаказПоставщику.ХарактеристикаНоменклатуры" + ТекстГруппировкиАртикулаИНоменклатуры + "
		|	) КАК ВложенныйЗапрос
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,"+ТекстПоляТовараДляТоваров+"
		|	ВложенныйЗапрос.Количество,
		|   ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.Цена,
		|	ВложенныйЗапрос.Сумма,
		|	ВложенныйЗапрос.СуммаНДС,
		|	(1)                                             КАК Метка,
		|	ВложенныйЗапрос.Характеристика,
		|	NULL КАК Серия" + ТекстПоляАртикула + "
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		ЗаказПоставщику.Номенклатура,
		|		ЗаказПоставщику.ЕдиницаИзмерения,
		|		ЗаказПоставщику.Цена                        КАК Цена,
		|		МИНИМУМ(ЗаказПоставщику.НомерСтроки)        КАК НомерСтроки,
		|		СУММА(ЗаказПоставщику.Количество)           КАК Количество,
		|		СУММА(ЗаказПоставщику.Сумма     )           КАК Сумма,
		|		СУММА(ЗаказПоставщику.СуммаНДС  )           КАК СуммаНДС,
		|		ЗаказПоставщику.ХарактеристикаНоменклатуры  КАК Характеристика" + ТекстВыборкиАртикула + ТекстВыборкиНоменклатуры + "
		|	ИЗ
		|		Документ.СчетНаОплатуПоставщика.Товары КАК ЗаказПоставщику" + ТекстИсточникАртикула + "
		|
		|	ГДЕ
		|		ЗаказПоставщику.Ссылка = &ТекущийДокумент
		|
		|	СГРУППИРОВАТЬ ПО
		|		ЗаказПоставщику.Номенклатура,
		|		ЗаказПоставщику.ЕдиницаИзмерения,
		|		ЗаказПоставщику.Цена,
		|		ЗаказПоставщику.ХарактеристикаНоменклатуры" + ТекстГруппировкиАртикулаИНоменклатуры + "
		|	) КАК ВложенныйЗапрос
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказПоставщику.Номенклатура," + ТекстПоляТовараДляУслуг + "
		|	ЗаказПоставщику.Количество,
		|   ЗаказПоставщику.НомерСтроки КАК НомерСтроки,
		|	ЗаказПоставщику.Номенклатура.ЕдиницаХраненияОстатков,
		|	ЗаказПоставщику.Цена,
		|	ЗаказПоставщику.Сумма,
		|	ЗаказПоставщику.СуммаНДС,
		|	(3)                           КАК Метка,
		|	NULL                          КАК Характеристика,
		|	NULL КАК Серия" + ТекстВыборкиАртикула + "
		|	
		|ИЗ (ВЫБРАТЬ 
		|		Номенклатура 							КАК Номенклатура,
		|		ВЫРАЗИТЬ(Содержание КАК Строка(100)) 	КАК Содержание,
		|		Цена 									КАК Цена,
		|		СтавкаНДС 								КАК СтавкаНДС,
		|		Сумма(Количество) 						КАК Количество,
		|		Сумма(Сумма) 							КАК Сумма,
		|		Сумма(СуммаНДС) 						КАК СуммаНДС,
		|		Минимум(НомерСтроки) 					КАК НомерСтроки
		|	ИЗ  Документ.СчетНаОплатуПоставщика.Услуги 
		|	ГДЕ Ссылка = &ТекущийДокумент
		|	СГРУППИРОВАТЬ ПО Номенклатура, ВЫРАЗИТЬ(Содержание КАК Строка(100)), Цена, СтавкаНДС
		|	) КАК ЗаказПоставщику "+ ТекстИсточникАртикула + "
		//|	Документ.СчетНаОплатуПоставщика.Услуги КАК ЗаказПоставщику" + ТекстИсточникАртикула + "
		|
		//|ГДЕ
		//|	ЗаказПоставщику.Ссылка = &ТекущийДокумент
		|
		|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки
		|
		|";


		ЗапросТовары = Запрос.Выполнить().Выгрузить();


		Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата,);
		Руководитель = Руководители.Руководитель;
		Бухгалтер    = Руководители.ГлавныйБухгалтер;

		// Выводим шапку накладной

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, "Счет на оплату поставщика");
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		ОбластьМакета.Параметры.Получатель = Шапка.Организация;
		ТабДокумент.Вывести(ОбластьМакета);

		// Вывести табличную часть
		ТабДокумент.Вывести(ОбластьШапки);

		Сумма    = 0;
		СуммаНДС = 0;

		Для каждого ВыборкаСтрокТовары Из ЗапросТовары Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			ОбластьСтроки.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьСтроки.Параметры.НомерСтроки = ЗапросТовары.Индекс(ВыборкаСтрокТовары) + 1;
			ОбластьСтроки.Параметры.Товар = СокрЛП(ВыборкаСтрокТовары.Товар) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары);

			ТабДокумент.Вывести(ОбластьСтроки);
			Сумма    = Сумма    + ВыборкаСтрокТовары.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаСтрокТовары.СуммаНДС;

		КонецЦикла;

		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ОбщегоНазначения.ФорматСумм(Сумма);
		ТабДокумент.Вывести(ОбластьМакета);

		// Вывести ИтогоНДС
		Если Шапка.УчитыватьНДС Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
			ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначения.ФорматСумм(ЗапросТовары.Итог("СуммаНДС"));
			ОбластьМакета.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;

		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
		ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ЗапросТовары.Количество()
		+ ", на сумму " + ОбщегоНазначения.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
		ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
		ТабДокумент.Вывести(ОбластьМакета);

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.ФИОРуководителя = "/"+ Руководитель + "/";
		ОбластьМакета.Параметры.ФИОБухгалтера   = "/"+ Бухгалтер    + "/";
		ТабДокумент.Вывести(ОбластьМакета);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	КонецЦикла;

	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()

