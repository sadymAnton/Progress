&НаСервере
Процедура ЗаполнитьЛишения()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Сотрудник,
		|	ВложенныйЗапрос.ПричинаИзмененияСостояния,
		|	ВложенныйЗапрос.ПодразделениеОрганизации
		|ИЗ
		|	(ВЫБРАТЬ
		|		РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		|		РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
		|		РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения КАК ПричинаИзмененияСостоянияЗавершения,
		|		РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации
		|	ИЗ
		|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дата, ) КАК РаботникиОрганизацийСрезПоследних) КАК ВложенныйЗапрос
		|ГДЕ
		|	(НЕ ВложенныйЗапрос.ПричинаИзмененияСостояния = &ПричинаИзмененияСостояния)
		|	И ВложенныйЗапрос.ПодразделениеОрганизации В ИЕРАРХИИ(&ПодразделениеОрганизации)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Сотрудник.Наименование";

	Запрос.УстановитьПараметр("Дата", КонецМесяца(Объект.Период));
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", Объект.ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ПричиныИзмененияСостояния.Увольнение);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Объект.ЛишениеПремии.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.ЛишениеПремии.Добавить(),ВыборкаДетальныеЗаписи);
	КонецЦикла;
 КонецПроцедуры
 &НаСервере
 Процедура ЗаполнитьБонусы(Сотрудник=Неопределено)
	 
	 Если Сотрудник=Неопределено Тогда
		 Сотрудник=Справочники.СотрудникиОрганизаций.ПустаяСсылка();
		 Подразделениевыбор = Объект.ПодразделениеОрганизации;
	 Иначе
		 Подразделениевыбор = справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	 КонецЕсли;
	 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГрафикиРаботыПоВидамВремени.Дата
	|ПОМЕСТИТЬ Периоды
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикиРаботыПоВидамВремени.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РегламентированныйПроизводственныйКалендарь.Пятидневка) КАК Пятидневка
	|ПОМЕСТИТЬ ВТ_КолДнейПоРегКалендарю
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.AVT_ПроизводственныйКалендарь.Наименование = ""Кал-рь служащих - пятидневка""
	|	И РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизацийСрезПоследних.Период,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.ГрафикРаботы,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
	|	РаботникиОрганизацийСрезПоследних.Должность,
	|	РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
	|ПОМЕСТИТЬ ВТ_ГрафикиРабот
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -1), ДЕНЬ), ) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И РаботникиОрганизацийСрезПоследних.Сотрудник В ИЕРАРХИИ(&Сотрудник)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РаботникиОрганизаций.Период,
	|	РаботникиОрганизаций.Сотрудник,
	|	РаботникиОрганизаций.ГрафикРаботы,
	|	РаботникиОрганизаций.ПодразделениеОрганизации,
	|	РаботникиОрганизаций.Должность,
	|	РаботникиОрганизаций.ПричинаИзмененияСостояния
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РаботникиОрганизаций.Сотрудник В ИЕРАРХИИ(&Сотрудник)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Периоды.Дата КАК дата,
	|	ВТ_ГрафикиРабот.Сотрудник,
	|	МАКСИМУМ(ВТ_ГрафикиРабот.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ГрафикиСДатами
	|ИЗ
	|	Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГрафикиРабот КАК ВТ_ГрафикиРабот
	|		ПО Периоды.Дата >= ВТ_ГрафикиРабот.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Дата,
	|	ВТ_ГрафикиРабот.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ГрафикиСДатами.дата КАК дата,
	|	ВТ_ГрафикиСДатами.Сотрудник,
	|	ВТ_ГрафикиСДатами.Период,
	|	ВТ_ГрафикиРабот.ГрафикРаботы,
	|	ВТ_ГрафикиРабот.ПодразделениеОрганизации,
	|	ВТ_ГрафикиРабот.Должность,
	|	ВЫБОР
	|		КОГДА ВТ_ГрафикиРабот.ПричинаИзмененияСостояния ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение)
	|		ИНАЧЕ ВТ_ГрафикиРабот.ПричинаИзмененияСостояния
	|	КОНЕЦ КАК ПричинаИзменения
	|ПОМЕСТИТЬ ВТ_ГрафикиПоДням
	|ИЗ
	|	ВТ_ГрафикиСДатами КАК ВТ_ГрафикиСДатами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГрафикиРабот КАК ВТ_ГрафикиРабот
	|		ПО ВТ_ГрафикиСДатами.Сотрудник = ВТ_ГрафикиРабот.Сотрудник
	|			И ВТ_ГрафикиСДатами.Период = ВТ_ГрафикиРабот.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиОрганизаций.Сотрудник
	|ПОМЕСТИТЬ ВТ_ПРИНЯТУВОЛЕН
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	(РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ИЛИ РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
	|	И РаботникиОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РаботникиОрганизаций.Сотрудник В ИЕРАРХИИ(&Сотрудник)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник,
	|	СостояниеРаботниковОрганизацийСрезПоследних.Состояние,
	|	СостояниеРаботниковОрганизацийСрезПоследних.Период,
	|	СостояниеРаботниковОрганизацийСрезПоследних.ПериодЗавершения
	|ПОМЕСТИТЬ ВТ_СостояниеРаботников
	|ИЗ
	|	РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних(
	|			КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -1), ДЕНЬ),
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТ_ГрафикиРабот.Сотрудник
	|				ИЗ
	|					ВТ_ГрафикиРабот КАК ВТ_ГрафикиРабот
	|				СГРУППИРОВАТЬ ПО
	|							ВТ_ГрафикиРабот.Сотрудник)) КАК СостояниеРаботниковОрганизацийСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник,
	|	СостояниеРаботниковОрганизацийСрезПоследних.Период,
	|	СостояниеРаботниковОрганизацийСрезПоследних.Состояние,
	|	СостояниеРаботниковОрганизацийСрезПоследних.ПериодЗавершения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостояниеРаботниковОрганизаций.Сотрудник,
	|	СостояниеРаботниковОрганизаций.Состояние,
	|	СостояниеРаботниковОрганизаций.Период,
	|	СостояниеРаботниковОрганизаций.ПериодЗавершения
	|ИЗ
	|	РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
	|ГДЕ
	|	СостояниеРаботниковОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СостояниеРаботниковОрганизаций.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_ГрафикиРабот.Сотрудник
	|			ИЗ
	|				ВТ_ГрафикиРабот КАК ВТ_ГрафикиРабот
	|			СГРУППИРОВАТЬ ПО
	|						ВТ_ГрафикиРабот.Сотрудник)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостояниеРаботниковОрганизаций.Сотрудник,
	|	СостояниеРаботниковОрганизаций.Период,
	|	СостояниеРаботниковОрганизаций.Состояние,
	|	СостояниеРаботниковОрганизаций.ПериодЗавершения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.Дата,
	|	ВТ_СостояниеРаботников.Сотрудник,
	|	МАКСИМУМ(ВТ_СостояниеРаботников.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_СостояниеСДатами
	|ИЗ
	|	Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СостояниеРаботников КАК ВТ_СостояниеРаботников
	|		ПО Периоды.Дата >= ВТ_СостояниеРаботников.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Дата,
	|	ВТ_СостояниеРаботников.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СостояниеСДатами.Дата КАК Дата,
	|	ВТ_СостояниеСДатами.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ВТ_СостояниеРаботников.Состояние ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_СостояниеРаботников.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ВТ_СостояниеРаботников.Состояние
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ВТ_СостояниеРаботников.Период <= ВТ_СостояниеСДатами.Дата
	|								И ВТ_СостояниеСДатами.Дата <= ДОБАВИТЬКДАТЕ(ВТ_СостояниеРаботников.ПериодЗавершения, ДЕНЬ, -1)
	|							ТОГДА ВТ_СостояниеРаботников.Состояние
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Состояние,
	|	ВТ_СостояниеРаботников.Период,
	|	ВТ_СостояниеРаботников.ПериодЗавершения,
	|	ВТ_СостояниеРаботников.Состояние КАК СостояниеПоследнее
	|ПОМЕСТИТЬ ВТ_состояниеПоДням
	|ИЗ
	|	ВТ_СостояниеСДатами КАК ВТ_СостояниеСДатами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СостояниеРаботников КАК ВТ_СостояниеРаботников
	|		ПО ВТ_СостояниеСДатами.Сотрудник = ВТ_СостояниеРаботников.Сотрудник
	|			И ВТ_СостояниеСДатами.Период = ВТ_СостояниеРаботников.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_ГрафикиПоДням.дата КАК дата,
	|	ВТ_ГрафикиПоДням.Сотрудник КАК Сотрудник,
	|	ВТ_ГрафикиПоДням.Период,
	|	ВТ_ГрафикиПоДням.ГрафикРаботы,
	|	ВТ_ГрафикиПоДням.ПодразделениеОрганизации,
	|	ВТ_ГрафикиПоДням.Должность,
	|	ВЫБОР
	|		КОГДА ВТ_состояниеПоДням.Состояние ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает)
	|		ИНАЧЕ ВТ_состояниеПоДням.Состояние
	|	КОНЕЦ КАК Состояние,
	|	ВЫБОР
	|		КОГДА ГрафикиРаботыГрафикСотрудника.ДополнительноеЗначение ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ГрафикиРаботыГрафикСотрудника.ДополнительноеЗначение
	|	КОНЕЦ КАК ЧасыГрафикСотрудника,
	|	РегламентированныйПроизводственныйКалендарь.ВидДня,
	|	НАЧАЛОПЕРИОДА(ВТ_ГрафикиПоДням.дата, МЕСЯЦ) КАК Месяц,
	|	ВТ_ГрафикиПоДням.ПричинаИзменения
	|ПОМЕСТИТЬ ВТ_Итоговая
	|ИЗ
	|	ВТ_ГрафикиПоДням КАК ВТ_ГрафикиПоДням
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_состояниеПоДням КАК ВТ_состояниеПоДням
	|		ПО ВТ_ГрафикиПоДням.дата = ВТ_состояниеПоДням.Дата
	|			И ВТ_ГрафикиПоДням.Сотрудник = ВТ_состояниеПоДням.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыГрафикСотрудника
	|		ПО ВТ_ГрафикиПоДням.дата = ГрафикиРаботыГрафикСотрудника.Дата
	|			И ВТ_ГрафикиПоДням.ГрафикРаботы = ГрафикиРаботыГрафикСотрудника.ГрафикРаботы
	|			И (ГрафикиРаботыГрафикСотрудника.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|		ПО ВТ_ГрафикиПоДням.ГрафикРаботы.AVT_ПроизводственныйКалендарь = РегламентированныйПроизводственныйКалендарь.AVT_ПроизводственныйКалендарь
	|			И ВТ_ГрафикиПоДням.дата = РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Итоговая.Сотрудник КАК Сотрудник,
	|	СУММА(ВТ_Итоговая.ЧасыГрафикСотрудника) КАК ЧасыГрафик,
	|	ВТ_Итоговая.Месяц,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Итоговая.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает)
	|				ТОГДА ВТ_Итоговая.ЧасыГрафикСотрудника
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЧасыФакт,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
	|	РаботникиОрганизацийСрезПоследних.Должность
	|ПОМЕСТИТЬ ВТ_НаСвертку
	|ИЗ
	|	ВТ_Итоговая КАК ВТ_Итоговая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонецПериода, ) КАК РаботникиОрганизацийСрезПоследних
	|		ПО ВТ_Итоговая.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|ГДЕ
	|	НЕ ВТ_Итоговая.ПричинаИзменения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И НЕ ВТ_Итоговая.Сотрудник ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Итоговая.Сотрудник,
	|	ВТ_Итоговая.Месяц,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
	|	РаботникиОрганизацийСрезПоследних.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.AVTШтатноеРасписание,
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.ПодразделениеОрганизации,
	|	ВложенныйЗапрос.Должность
	|ПОМЕСТИТЬ ВТ_ЗанятыеШтатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗанятыеШтатныеЕдиницыОрганизаций.AVTШтатноеРасписание КАК AVTШтатноеРасписание,
	|		ЗанятыеШтатныеЕдиницыОрганизаций.Сотрудник КАК Сотрудник,
	|		СУММА(ВЫБОР
	|				КОГДА ЗанятыеШтатныеЕдиницыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ЗанятыеШтатныеЕдиницыОрганизаций.КоличествоСтавок
	|				ИНАЧЕ -ЗанятыеШтатныеЕдиницыОрганизаций.КоличествоСтавок
	|			КОНЕЦ) КАК КоличествоСтавок,
	|		ЗанятыеШтатныеЕдиницыОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|		ЗанятыеШтатныеЕдиницыОрганизаций.Должность КАК Должность
	|	ИЗ
	|		РегистрНакопления.ЗанятыеШтатныеЕдиницыОрганизаций КАК ЗанятыеШтатныеЕдиницыОрганизаций
	|	ГДЕ
	|		ЗанятыеШтатныеЕдиницыОрганизаций.Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТ_ГрафикиРабот.Сотрудник
	|				ИЗ
	|					ВТ_ГрафикиРабот КАК ВТ_ГрафикиРабот
	|				СГРУППИРОВАТЬ ПО
	|							ВТ_ГрафикиРабот.Сотрудник)
	|		И ЗанятыеШтатныеЕдиницыОрганизаций.Период <= &КонецПериода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗанятыеШтатныеЕдиницыОрганизаций.Сотрудник,
	|		ЗанятыеШтатныеЕдиницыОрганизаций.AVTШтатноеРасписание,
	|		ЗанятыеШтатныеЕдиницыОрганизаций.Должность,
	|		ЗанятыеШтатныеЕдиницыОрганизаций.ПодразделениеОрганизации) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.КоличествоСтавок > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ПодразделениеОрганизации,
	|	ВложенныйЗапрос.Должность,
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.AVTШтатноеРасписание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НаСвертку.Месяц КАК Месяц,
	|	ВТ_НаСвертку.Сотрудник,
	|	ВТ_ЗанятыеШтатки.AVTШтатноеРасписание,
	|	ВТ_НаСвертку.ПодразделениеОрганизации,
	|	ВТ_НаСвертку.Должность,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ПРИНЯТУВОЛЕН.Сотрудник ЕСТЬ NULL 
	|				ТОГДА ВТ_НаСвертку.ЧасыГрафик
	|			ИНАЧЕ ВТ_КолДнейПоРегКалендарю.Пятидневка
	|		КОНЕЦ) КАК ЧасГрафик,
	|	СУММА(ВТ_НаСвертку.ЧасыФакт) КАК КолвоРабДней,
	|	СУММА(ВЫБОР
	|			КОГДА НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ВидНадбавки.Наименование = ""Бонус_ежемесячный  суммой""
	|				ТОГДА НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Показатель1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БонусШР,
	|	СУММА(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета.Наименование = ""1_Оклад по часам""
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Оклад
	|ИЗ
	|	ВТ_НаСвертку КАК ВТ_НаСвертку
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗанятыеШтатки КАК ВТ_ЗанятыеШтатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(&КонецПериода, ВидНадбавки.Наименование = ""Бонус_ежемесячный  суммой"") КАК НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних
	|			ПО ВТ_ЗанятыеШтатки.AVTШтатноеРасписание = НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.AVTШтатноеРасписание
	|				И ВТ_ЗанятыеШтатки.ПодразделениеОрганизации = НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.ПодразделениеОрганизации
	|				И ВТ_ЗанятыеШтатки.Должность = НадбавкиПоШтатномуРасписаниюОрганизацийСрезПоследних.Должность
	|		ПО ВТ_НаСвертку.Сотрудник = ВТ_ЗанятыеШтатки.Сотрудник
	|			И ВТ_НаСвертку.ПодразделениеОрганизации = ВТ_ЗанятыеШтатки.ПодразделениеОрганизации
	|			И ВТ_НаСвертку.Должность = ВТ_ЗанятыеШтатки.Должность
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&КонецПериода, ВидРасчета.Наименование = ""1_Оклад по часам"") КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
	|		ПО ВТ_НаСвертку.Сотрудник = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПРИНЯТУВОЛЕН КАК ВТ_ПРИНЯТУВОЛЕН
	|		ПО ВТ_НаСвертку.Сотрудник = ВТ_ПРИНЯТУВОЛЕН.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КолДнейПоРегКалендарю КАК ВТ_КолДнейПоРегКалендарю
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВТ_НаСвертку.ПодразделениеОрганизации В ИЕРАРХИИ(&ПодразделениеОрганизации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НаСвертку.Должность,
	|	ВТ_НаСвертку.ПодразделениеОрганизации,
	|	ВТ_ЗанятыеШтатки.AVTШтатноеРасписание,
	|	ВТ_НаСвертку.Сотрудник,
	|	ВТ_НаСвертку.Месяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_НаСвертку.Сотрудник.Наименование,
	|	Месяц";
		 	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.Период)); 
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник); 
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", Подразделениевыбор); 
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	//Объект.РасчетБонуса.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.КолвоРабДней <> 0 Тогда
			НайденнаяСтрока = Объект.РасчетБонуса.НайтиСтроки(Новый Структура("Сотрудник",ВыборкаДетальныеЗаписи.Сотрудник));
			Если НайденнаяСтрока.Количество()=0 Тогда
				Нов = Объект.РасчетБонуса.Добавить();
			Иначе
				Нов = НайденнаяСтрока[0];
			КонецЕсли;
			//Сообщить(ВыборкаДетальныеЗаписи.БонусШР);
			ЗаполнитьЗначенияСвойств(нов,ВыборкаДетальныеЗаписи); 		
			Нов.БонусКПИ = ВыборкаДетальныеЗаписи.БонусШР/ВыборкаДетальныеЗаписи.ЧасГрафик*ВыборкаДетальныеЗаписи.КолвоРабДней;
			Нов.ИтБонус = Нов.БонусКПИ+Нов.БонусУпр;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

 &НаСервере

Функция ПечатьБонусов() 
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
    ТабДок = Новый ТабличныйДокумент;

	Макет = Документы.ПРГ_Приказ.ПолучитьМакет("ПечатьБонуса");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПРГ_ПриказРасчетБонуса.Сотрудник,
		|	ПРЕДСТАВЛЕНИЕ(ПРГ_ПриказРасчетБонуса.Сотрудник),
		|	ПРГ_ПриказРасчетБонуса.Сотрудник.Физлицо.Код КАК ТН,
		|	ПРГ_ПриказРасчетБонуса.КолвоРабДней,
		|	ПРГ_ПриказРасчетБонуса.Оклад,
		|	ПРГ_ПриказРасчетБонуса.БонусШР,
		|	ПРГ_ПриказРасчетБонуса.БонусКПИ,
		|	ПРГ_ПриказРасчетБонуса.БонусУпр,
		|	ПРГ_ПриказРасчетБонуса.ИтБонус,
		|	ПРГ_ПриказРасчетБонуса.КомментарийУп,
		|	ПРГ_ПриказРасчетБонуса.КоментарийJO,
		|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации КАК Подр,
		|	РаботникиОрганизацийСрезПоследних.Должность КАК Должность,
		|	ЗначенияСвойствОбъектов.Значение КАК Филиал,
		|	ЗначенияСвойствОбъектов1.Значение КАК Дивизион,
		|	ПРГ_ПриказРасчетБонуса.Сотрудник.Физлицо.ДатаРождения КАК ДР
		|ИЗ
		|	Документ.ПРГ_Приказ.РасчетБонуса КАК ПРГ_ПриказРасчетБонуса
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонецПериода, ) КАК РаботникиОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|			ПО РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации = ЗначенияСвойствОбъектов.Объект
		|				И (ЗначенияСвойствОбъектов.Свойство В
		|					(ВЫБРАТЬ
		|						СвойстваОбъектов.Ссылка
		|					ИЗ
		|						ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
		|					ГДЕ
		|						СвойстваОбъектов.Наименование = ""НазваниеФилиала""))
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов1
		|			ПО РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации = ЗначенияСвойствОбъектов1.Объект
		|				И (ЗначенияСвойствОбъектов1.Свойство В
		|					(ВЫБРАТЬ
		|						СвойстваОбъектов.Ссылка
		|					ИЗ
		|						ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
		|					ГДЕ
		|						СвойстваОбъектов.Наименование = ""Дивизион""))
		|		ПО ПРГ_ПриказРасчетБонуса.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
		|ГДЕ
		|	ПРГ_ПриказРасчетБонуса.Ссылка = &Ссылка";
		
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка); 
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.Период)); 

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ИтБонусПроц = ?(ВыборкаДетальныеЗаписи.БонусШР<>0,ВыборкаДетальныеЗаписи.ИтБонус*100/ВыборкаДетальныеЗаписи.БонусШР,0);
		ОбластьДетальныхЗаписей.Параметры.ИтБонусПроц = ИтБонусПроц;
		ИтБонусОткл = ВыборкаДетальныеЗаписи.ИтБонус-ВыборкаДетальныеЗаписи.БонусШР;
		ОбластьДетальныхЗаписей.Параметры.ИтБонусОткл = ИтБонусОткл;
		//Сообщить("ИтБонусПроц"+ИтБонусПроц+"ИтБонусОткл"+ИтБонусОткл);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
    Возврат(Табдок);
	
 КонецФункции

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	объект.Период=НачалоМесяца(объект.Период);
КонецПроцедуры

&НаКлиенте
Процедура заполнить(Команда)
	ЗаполнитьЛишения()
КонецПроцедуры

&НаСервере
Процедура ОчиститтьСервер()
	Объект.ЛишениеПремии.Очистить();
КонецПроцедуры

&НаСервере
Процедура ОчиститьСерверБ()
	Объект.РасчетБонуса.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура Очиститть(Команда)
	ОчиститтьСервер();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьБ(Кнопка)
	НайденныеСтроки = Объект.РасчетБонуса.Количество();
	Если НайденныеСтроки<>0 Тогда
		Если Вопрос("Удалить строки?" ,РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да  Тогда
			 ОчиститьСерверБ();
			 ЗаполнитьБонусы();
		Иначе
			 ЗаполнитьБонусы();
		КонецЕсли;
	Иначе
		ЗаполнитьБонусы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьБ(Команда)
	ОчиститьСерверБ();
КонецПроцедуры

&НаКлиенте
Процедура ПодборБ(Кнопка)
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(ЭтаФорма, Объект.Ссылка, Ложь, КонецМесяца(Объект.Период), Объект.Организация, 0);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ТипВыбранногоЗначения = ТипЗнч(ВыбранноеЗначение);
	Если ТипВыбранногоЗначения = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		ЗаполнитьБонусы(ВыбранноеЗначение); 	
	конецесли;	

КонецПроцедуры

&НаКлиенте
Процедура РасчетБонусаБонусУпрПриИзменении(Элемент)
	Стр = Элементы.РасчетБонуса.ТекущиеДанные;
	Стр.ИтБонус = Стр.БонусКПИ + Стр.БонусУпр;
КонецПроцедуры

&НаКлиенте
Процедура печать(Кнопка)
	Табдок=ПечатьБонусов();
	Табдок.Показать();
КонецПроцедуры



//////////////////////////ЛишениеПремии
&НаСервере

Функция ПолучитьПроцентЛишения(ПричинаЛишения)
	ПричиныЛишенияПремий=Перечисления.ПРГ_ПричиныЛишенияПремий;
	процент=0;
	Если ПричинаЛишения=ПричиныЛишенияПремий.НаличиеПроизводственногоБракаСверхНормыПоКаждомуОтдельномуУчастку тогда
		процент=5;
	ИначеЕсли ПричинаЛишения=ПричиныЛишенияПремий.НарушениеНевыполнениеПропускногоРежима тогда	
		процент=10;
	ИначеЕсли ПричинаЛишения=ПричиныЛишенияПремий.НеисполнениеОрганизационноРаспорядительныхДокументов тогда	
		процент=20;
	ИначеЕсли ПричинаЛишения=ПричиныЛишенияПремий.НарушениеПравилВнутреннегоТрудовогоРаспорядка тогда	
		процент=15;
	ИначеЕсли ПричинаЛишения=ПричиныЛишенияПремий.НарушениеНевыполнениеПравилПромышленнойГигиеныИСанитарныхНорм тогда	
		процент=20;
	ИначеЕсли ПричинаЛишения=ПричиныЛишенияПремий.НеисполнениеВСрокУказанийРуководителяОбУстраненииУпущенийВРаботе тогда	
		процент=30;
	ИначеЕсли ПричинаЛишения=ПричиныЛишенияПремий.НарушениеНевыполнениеТребованийДолжностнойИнструкцииНормативнойДокументацииРегламентовИнструкций тогда	
		процент=50;
	ИначеЕсли ПричинаЛишения=ПричиныЛишенияПремий.НарушениеНевыполнениеТребованийПравилТехникиБезопасностиОхраныОкружающейСредыИОхраныТруда тогда	
		процент=30;
	ИначеЕсли ПричинаЛишения=ПричиныЛишенияПремий.НарушениеТехнологическихОперацийВследствиеХалатностиНедостаточногоПрофессиональногоМастерства тогда	
		процент=70;
	ИначеЕсли ПричинаЛишения=ПричиныЛишенияПремий.ВСвязиС тогда	
		процент=100;	
	Конецесли;
	Возврат процент;
КонецФункции	


&НаКлиенте
Процедура ЛишениеПремииУсловиеЛишенияПремииПриИзменении(Элемент)
	Стр = Элементы.ЛишениеПремии.ТекущиеДанные;
	процентЛишения=ПолучитьПроцентЛишения(стр.УсловиеЛишенияПремии);
	стр.Процент=процентЛишения;
	стр.ИтогоВыплаченоПремии=100-процентЛишения;
	
КонецПроцедуры


&НаКлиенте
Процедура ЛишениеПремииПроцентПриИзменении(Элемент)
	Стр = Элементы.ЛишениеПремии.ТекущиеДанные;
	стр.ИтогоВыплаченоПремии=100-стр.Процент;
КонецПроцедуры


Функция ПЕчатьДепримирование()  экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПРГ_ПриказЛишениеПремии.Сотрудник,
		|	ПРГ_ПриказЛишениеПремии.Процент,
		|	ПРГ_ПриказЛишениеПремии.УсловиеЛишенияПремии,
		|	ПРГ_ПриказЛишениеПремии.ВСвязиС,
		|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
		|	РаботникиОрганизацийСрезПоследних.Должность
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.ПРГ_Приказ.ЛишениеПремии КАК ПРГ_ПриказЛишениеПремии
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дата, ) КАК РаботникиОрганизацийСрезПоследних
		|		ПО ПРГ_ПриказЛишениеПремии.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
		|ГДЕ
		|	ПРГ_ПриказЛишениеПремии.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Сотрудник,
		|	100 - вт.Процент КАК Процент,
		|	вт.УсловиеЛишенияПремии,
		|	вт.ВСвязиС,
		|	вт.ПодразделениеОрганизации,
		|	вт.Должность,
		|	вт.Сотрудник.Код КАК ТабНомер
		|ИЗ
		|	вт КАК вт
		|
		|УПОРЯДОЧИТЬ ПО
		|	вт.Сотрудник.Наименование";
    Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаСотрудник = Результат.Выбрать();
    Макет = Документы.ПРГ_Приказ.ПолучитьМакет("ПечатьУдержаний");
	Табдок=Новый ТабличныйДокумент;
	ТабдокЛишены=Новый ТабличныйДокумент;
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтроки=Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал=Макет.ПолучитьОбласть("Подвал");
	ОбластьПравоНаПремию=Макет.ПолучитьОбласть("ПравоНаПремию");
	ОбластьПравоНаПремиюСтрока=Макет.ПолучитьОбласть("ПравоНаПремиюСтрока");
	ОбластьСПриказомОзнакомлены=Макет.ПолучитьОбласть("СПриказомОзнакомлены");
	ОбластьСПриказомОзнакомленыСтрока=Макет.ПолучитьОбласть("СПриказомОзнакомленыСтрока");
	 
	 
	
	ОбластьШапка.Параметры.Дата=Объект.Дата;
	ОбластьШапка.Параметры.номер=общегоНазначения.ПолучитьНомерНаПечать(Объект.Ссылка);
	ОбластьШапка.Параметры.ТекстШапки="Выплатить премию по результатам работы в "+формат(Объект.Период,"ДФ='MMMM yyyy'")+"г. следующим сотрудникам предприя-тия:";
//	ОбластьШапка.Параметры.город=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "AVT_Город");
	ОбластьШапка.Параметры.Организация ="Открытое акционерное общество «ПРОГРЕСС» г."+УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "AVT_Город");
	
	Табдок.Вывести(ОбластьШапка);
	ТабдокЛишены.Вывести(ОбластьПравоНаПремию);
	прЛишеных=ложь;
	спсОзнакомления=Новый СписокЗначений;
	Пока ВыборкаСотрудник.Следующий() Цикл
		Если ВыборкаСотрудник.процент=0 тогда
		ОбластьПравоНаПремиюСтрока.Параметры.ПравоНаПремиюСтрока="у " +ПРГ_Обработки.проскланятьФИО(ВыборкаСотрудник.Сотрудник,2)+", "+Нрег(ПРГ_Обработки.ПросклонятьПодразделениеДолжность(ВыборкаСотрудник.Должность,2))+" "
			+Нрег(ПРГ_Обработки.ПросклонятьПодразделениеДолжность(ВыборкаСотрудник.ПодразделениеОрганизации,2))+", в связи с "+ВыборкаСотрудник.ВСвязиС;
			ТабдокЛишены.Вывести(ОбластьПравоНаПремиюСтрока);	
	
			прЛишеных=истина;
		Иначе
			ОбластьСтроки.Параметры.Заполнить(ВыборкаСотрудник);
			Табдок.Вывести(ОбластьСтроки);
		Конецесли;
		
		Если спсОзнакомления.НайтиПоЗначению(ВыборкаСотрудник.Сотрудник) = Неопределено Тогда
			спсОзнакомления.Добавить(ВыборкаСотрудник.Сотрудник);
		КонецЕсли;
	КонецЦикла;
	
	Если прЛишеных тогда
		Табдок.Вывести(ТабдокЛишены);
		
	Конецесли;	
	
	ОбластьПодвал.параметры.ДолжностьРуководителя	=ПРГ_Обработки.ПолучитьДолжностьРуководителя(Объект.Ссылка);
	ОбластьПодвал.параметры.ФИОРУковобдителя		=ПРГ_Обработки.ПолучитьПодписьРуководителя(Объект.Ссылка);

    Табдок.Вывести(ОбластьПодвал);
	Табдок.ВывестиГоризонтальныйРазделительСтраниц();
	ОбластьСПриказомОзнакомлены.Параметры.ТекстОзнокомления="С приказом  № "+общегоНазначения.ПолучитьНомерНаПечать(Объект.Ссылка)+" от "+формат(Объект.Дата,"ДФ=dd.MM.yyyy")+"г. ознакомлены и согласны:";
	Табдок.Вывести(ОбластьСПриказомОзнакомлены);
	Для ии=0 по спсОзнакомления.Количество()-1 цикл
		ОбластьСПриказомОзнакомленыСтрока.Параметры.ТекстПодписа="«______» _____________"+формат(Объект.Дата,"ДФ=yyyy")+"     __________________  "+СокрЛП(спсОзнакомления[ии].Значение);
		Табдок.Вывести(ОбластьСПриказомОзнакомленыСтрока);
		
	Конеццикла;	
	
	табдок.АвтоМасштаб=Истина;
	возврат табдок;
	
	
	
	
	
КонецФункции	



&НаКлиенте
Процедура ПечатьУдержаний(Команда)
	табДок=ПЕчатьДепримирование();
	табДок.показать();

КонецПроцедуры

&НаСервере
Процедура ПриОткрытииСервер()
	Для каждого стр из Объект.ЛишениеПремии цикл
		стр.ИтогоВыплаченоПремии=100-стр.Процент;
		
	Конеццикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииСервер();

КонецПроцедуры


 








