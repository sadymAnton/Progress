// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
Функция ПечатьВыпускПродукции(МассивОбъектов, ОбъектыПечати) Экспорт

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыпускПродукции_Накладная";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ВыпускПродукции.ПФ_MXL_Накладная");
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Артикул";
		ТекстКодАртикул = "Артикул";
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Код";
		ТекстКодАртикул = "Код";
	Иначе
		ВыводитьКоды    = Ложь;
		Колонка         = "";
		ТекстКодАртикул = "Код";
	КонецЕсли;

	Если ВыводитьКоды Тогда
		ОбластьШапки  = "ШапкаСКодом";
		ОбластьСтроки = "СтрокаСКодом";
	Иначе
		ОбластьШапки  = "ШапкаТаблицы";
		ОбластьСтроки = "Строка";
	Конецесли;

	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Док.Номер,
		|	Док.Дата,
		|	Док.Организация,
		|	Док.Подразделение.Представление КАК Подразделение,
		|	Док.Склад.Представление КАК Склад,
		|	Док.Продукция.(
		|		НомерСтроки,
		|		Номенклатура,
		|		Номенклатура."+ ТекстКодАртикул + " КАК КодАртикул,
		|		Номенклатура.НаименованиеПолное КАК Товар,
		|		КоличествоМест,
		|		Количество,
		|		ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
		|		ЕдиницаИзмеренияМест.Представление КАК ЕдиницаИзмеренияМест,
		|		ХарактеристикаНоменклатуры КАК Характеристика,
		|		СерияНоменклатуры КАК Серия
		|	)
		|ИЗ
		|	Документ.ВыпускПродукции КАК Док
		|ГДЕ
		|	Док.Ссылка = &ТекущийДокумент
		|	
		|УПОРЯДОЧИТЬ ПО
		|	Док.Продукция.НомерСтроки";

		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		ВыборкаСтрокТовары = Шапка.Продукция.Выбрать();

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, "Выпуск продукции");
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПредставлениеПолучателя    = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.Получатель                 = Шапка.Организация;
		ОбластьМакета.Параметры.ПредставлениеСклада        = Шапка.Склад;
		ОбластьМакета.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
		ТабДокумент.Вывести(ОбластьМакета);

		// Вывести табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ВыводитьКоды Тогда
			ОбластьМакета.Параметры.Колонка = Колонка;
		КонецЕсли;

		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);

		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.Материал = ВыборкаСтрокТовары.Товар + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары);

			Если ВыводитьКоды Тогда
				ОбластьМакета.Параметры.КодАртикул = ВыборкаСтрокТовары.КодАртикул;
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;

		// Вывести Итого
		ОбластьМакета                 = Макет.ПолучитьОбласть("Итого");
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета                          = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + ВыборкаСтрокТовары.Количество();
		ТабДокумент.Вывести(ОбластьМакета);

		МестВсего = Шапка.Продукция.Выгрузить().Итог("КоличествоМест");
		// Вывести подписи
		Если МестВсего = 0 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("Подписи_СМестами");
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);
		
	    Если МестВсего = 0 Тогда
			УниверсальныеМеханизмы.СкрытьКолонкиВТабличномДокументе(ТабДокумент, "Мест",6, ОбластьШапки);
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла; 
	
	Возврат ТабДокумент;

КонецФункции // ПечатьВыпускПродукции()
	
// Функция формирует табличный документ унифицированной формы МХ-18
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме МХ-18 (накладная на передачу продукции).
//
Функция ПечатьМХ18(МассивОбъектов, ОбъектыПечати) Экспорт
	
	Макет = ПолучитьОбщийМакет("МХ18");
	
	ТабДокумент  = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыпускПродукции_МХ18";
	
	// Определяем, что будем выводить - код или артикул
	ВыводитьАртикул      = (глЗначениеПеременной("ДополнительнаяКолонкаПечатныхФормДокументов") = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул);
	ЕдиницаИзмеренияВеса = глЗначениеПеременной("ЕдиницаИзмеренияВеса");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВыпускПродукции.Номер,
		|	ВыпускПродукции.Дата КАК ДатаДокумента,
		|	ВыпускПродукции.Организация,
		|	ВыпускПродукции.Склад КАК Получатель,
		|	ВыпускПродукции.Подразделение.Представление КАК ПредставлениеПодразделения,
		|	ВыпускПродукции.СчетЗатрат КАК КоррСчет
		|ИЗ
		|	Документ.ВыпускПродукции КАК ВыпускПродукции
		|ГДЕ
		|	ВыпускПродукции.Ссылка = &Регистратор";
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Продукция.Номенклатура 																КАК Номенклатура,
		|	ВЫРАЗИТЬ(Продукция.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) 				КАК ТоварНаименование,
		|	Продукция.Номенклатура.Код 															КАК ТоварКод,
		|	Продукция.Номенклатура.Артикул 														КАК ТоварАртикул,
		|	Продукция.ЕдиницаИзмерения.Представление 											КАК БазоваяЕдиницаНаименование,
		|	Продукция.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код 								КАК БазоваяЕдиницаКодПоОКЕИ,
		|	Продукция.ЕдиницаИзмерения 															КАК ЕдиницаИзмерения,
		|	Продукция.ЕдиницаИзмерения.Наименование 											КАК ЕдиницаИзмеренияНаименование,
		|	Продукция.Номенклатура.БазоваяЕдиницаИзмерения.Код 									КАК ЕдиницаИзмеренияКод,
		|	Продукция.ЕдиницаИзмеренияМест.Представление 										КАК ВидУпаковки,
		|	Продукция.ЕдиницаИзмеренияМест.Коэффициент / Продукция.Коэффициент 					КАК КоличествоВОдномМесте,
		|	ВЫБОР
		|		КОГДА Продукция.КоличествоМест > 0 И НЕ Продукция.ЕдиницаИзмеренияМест.Вес ЕСТЬ NULL
		|			ТОГДА Продукция.КоличествоМест * Продукция.ЕдиницаИзмеренияМест.Вес
		|		ИНАЧЕ Продукция.Количество * Продукция.ЕдиницаИзмерения.Вес
		|	КОНЕЦ 																				КАК МассаБрутто,
		|	Продукция.ХарактеристикаНоменклатуры 												КАК Характеристика,
		|	Продукция.СерияНоменклатуры 														КАК Серия,
		|	Продукция.Количество 																КАК Количество,
		|	Продукция.КоличествоМест 															КАК КоличествоМест,
		|	Продукция.НомерСтроки 																КАК НомерСтроки,
		|	0 																					КАК Цена,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаСебестоимостиОбороты.Стоимость, 0) 
		|			 * Продукция.Количество * Продукция.Коэффициент 
		|			 / ЕСТЬNULL(Продукция.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 1)
		|			 / ЕСТЬNULL(ТаблицаСебестоимостиОбороты.Количество, 1) КАК ЧИСЛО(15, 2)) 	КАК Сумма
		|ИЗ 
		|	Документ.ВыпускПродукции.Продукция КАК Продукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСебестоимостиОбороты КАК ТаблицаСебестоимостиОбороты
		|		ПО Продукция.Номенклатура = ТаблицаСебестоимостиОбороты.Номенклатура
		|			И (ТаблицаСебестоимостиОбороты.Регистратор = &Регистратор)
		|			И (Продукция.ХарактеристикаНоменклатуры = ТаблицаСебестоимостиОбороты.ХарактеристикаНоменклатуры
		|				ИЛИ ТаблицаСебестоимостиОбороты.ХарактеристикаНоменклатуры = ""Не используется"")
		|			И (Продукция.СерияНоменклатуры = ТаблицаСебестоимостиОбороты.СерияНоменклатуры
		|				ИЛИ ТаблицаСебестоимостиОбороты.СерияНоменклатуры = ""Не используется"")
		|			И (Продукция.СчетУчетаБУ = ТаблицаСебестоимостиОбороты.СчетУчета
		|				ИЛИ ТаблицаСебестоимостиОбороты.СчетУчета = ""Не используется"")
		|ГДЕ
		|	Продукция.Ссылка = &Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		СтруктраПараметров = Новый Структура();
		СтруктраПараметров.Вставить("Регистратор", 						Ссылка);
		СтруктраПараметров.Вставить("НачГраница", 						Новый Граница(Шапка.ДатаДокумента, ВидГраницы.Включая));
		
		ТаблицаПродукции = УправлениеЗапасами.ПолучитьТаблицуЗатратДляПечатиИЗаполненияДокументов(Ссылка, ТекстЗапроса, СтруктраПараметров);
		
		Если ТаблицаПродукции = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.НомерДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		ОбластьМакета.Параметры.ПредставлениеОрганизации 	= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО			= СведенияОбОрганизации.КодПоОКПО;

		ТабДокумент.Вывести(ОбластьМакета);

		НомерСтраницы   = 1;

		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ЗаголовокТаблицы);

		КоличествоСтрок = ТаблицаПродукции.Количество();
		
		// инициализация итогов по странице
		ИтогоМассаБруттоНаСтранице = 0;
		ИтогоМестНаСтранице        = 0;
		ИтогоКоличествоНаСтранице  = 0;
		ИтогоСуммаНаСтранице  	   = 0;

		// инициализация итогов по документу
		ИтогоМассаБрутто = 0;
		ИтогоМест        = 0;
		ИтогоКоличество  = 0;
		ИтогоСумма  	 = 0;
		Ном              = 0;

		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтого  = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		// Выводим многострочную часть докмента
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Для Каждого СтрокаПродукции Из ТаблицаПродукции Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаПродукции.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Ном = Ном + 1;
			
			// Проверим, помещается ли строка с данными и последняя строка (или итоги) на странице.
			МассивВыводимыхОбластей = Новый Массив;
			МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьИтого);
				МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
			КонецЕсли;
			
			Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда
			
				// очистим итоги по странице
				ИтогоМассаБруттоНаСтранице = 0;
				ИтогоМестНаСтранице        = 0;
				ИтогоКоличествоНаСтранице  = 0;
				ИтогоСуммаНаСтранице  	   = 0;

				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);

			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаПродукции);
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(СтрокаПродукции.ТоварНаименование) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(СтрокаПродукции);
			ОбластьМакета.Параметры.Цена               = ?(СтрокаПродукции.Количество = 0, СтрокаПродукции.Сумма, Окр(СтрокаПродукции.Сумма / СтрокаПродукции.Количество, 2));
			Если ВыводитьАртикул Тогда
				ОбластьМакета.Параметры.ТоварКод      = СтрокаПродукции.ТоварАртикул;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
				МассаБрутто = 0;
			Иначе
				МассаБрутто = СтрокаПродукции.МассаБрутто;
			КонецЕсли;
			
			ОбластьМакета.Параметры.МассаБрутто = МассаБрутто;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			// увеличим итоги по странице
			ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице + МассаБрутто;
			ИтогоМестНаСтранице        = ИтогоМестНаСтранице        + СтрокаПродукции.КоличествоМест;
			ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + СтрокаПродукции.Количество;
			ИтогоСуммаНаСтранице  	   = ИтогоСуммаНаСтранице		+ СтрокаПродукции.Сумма;
			
			// увеличим итоги по дукументу
			ИтогоМассаБрутто = ИтогоМассаБрутто + МассаБрутто;
			ИтогоМест        = ИтогоМест        + СтрокаПродукции.КоличествоМест;
			ИтогоКоличество  = ИтогоКоличество  + СтрокаПродукции.Количество;
			ИтогоСумма  	 = ИтогоСумма		+ СтрокаПродукции.Сумма;
			
		КонецЦикла;
		
		// Выводим итоги по документу в целом
		ОбластьИтого.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
		ОбластьИтого.Параметры.ИтогМест        = ИтогоМест;
		ОбластьИтого.Параметры.ИтогКоличество  = ИтогоКоличество;
		ОбластьИтого.Параметры.ИтогСумма 	   = ИтогоСумма;
		
		ТабДокумент.Вывести(ОбластьИтого);
		
		// Выводим подвал документа
		ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
		ТабДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла; 
		
	Возврат ТабДокумент;

КонецФункции // ПечатьМХ18()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Накладная",
			"Выпуск продукции",
			ПечатьВыпускПродукции(МассивОбъектов, ОбъектыПечати), ,
			"Документ.ВыпускПродукции.ПФ_MXL_Накладная");
			
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МХ18") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"МХ18",
			"МХ-18 (Накладная на передачу готовой продукции)", 
			ПечатьМХ18(МассивОбъектов, ОбъектыПечати));
			
	КонецЕсли;
	
КонецПроцедуры

// В функции описано, какие данные следует сохранять в шаблоне
Функция СтруктураДополнительныхДанныхФормы() Экспорт
	
	Возврат ХранилищаНастроек.ДанныеФорм.СформироватьСтруктуруДополнительныхДанных("Продукция");
	
КонецФункции
