&НаСервере
Функция НайтиНастройкуПоИмени(ИмяСохраняемойНастройки)
	
	Запрос = Новый Запрос;
	Если ХранилищаНастроек.НастройкиФормированияРегулярныхДокументов.ТекущийВладелецЭтоСкладскиеДокументы(КлючОбъекта) Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СписокНастроек.ССылка КАК Ссылка
		|ИЗ
		|	Справочник.НастройкиФормированияДокументовПоОрдерам КАК СписокНастроек
		|ГДЕ
		|	(НЕ СписокНастроек.ПометкаУдаления)
		|	И СписокНастроек.Наименование = &Наименование
		|	И (НЕ СписокНастроек.ЭтоГруппа)";
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НастройкиФормированияДокументовВыпускаПродукции.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НастройкиФормированияДокументовВыпускаПродукции КАК НастройкиФормированияДокументовВыпускаПродукции
		|ГДЕ
		|	(НЕ НастройкиФормированияДокументовВыпускаПродукции.ПометкаУдаления)
		|	И НастройкиФормированияДокументовВыпускаПродукции.Наименование = &Наименование
		|	И (НЕ НастройкиФормированияДокументовВыпускаПродукции.ЭтоГруппа)";
		
	КонецЕсли;	
				   
	Запрос.Параметры.Вставить("Наименование", ИмяСохраняемойНастройки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Строка(Выборка.Ссылка.УникальныйИдентификатор());
	КонецЕсли;
		
КонецФункции


&НаКлиенте
Процедура СохранитьВыполнить()
	
	Если ИмяСохраняемойНастройки = "" тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не задано название настройки.'"),, "НазваниеНастройки");
		Возврат;
	КонецЕсли;
	
	ИдентификаторСохраняемойНастройки = НайтиНастройкуПоИмени(ИмяСохраняемойНастройки);
	
	Если ИдентификаторСохраняемойНастройки <> Неопределено Тогда
		// Уже была настройка с таким именем. Спросим у пользователя, нужно ли перезаписать старую настройку.
		СтрокаВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ru='Заменить настройку %1?'", ИмяСохраняемойНастройки);
		
		Если Вопрос(Нстр(СтрокаВопроса), РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//Зафиксируем в форме журнала ордеров выбранную настройку
	ВладелецФормы.ТекущаяНастройка = ИмяСохраняемойНастройки;
	ВладелецФормы.КлючТекущейНастройки = ИдентификаторСохраняемойНастройки;
	
	Закрыть(Новый ВыборНастроек(ИдентификаторСохраняемойНастройки));
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ 
//                                                         

&НаСервере
Процедура ПриСоздании(Отказ, СтандартнаяОбработка)
	
	Перем КлючТекущихНастроек;
	
	КлючТекущихНастроек = Параметры.КлючТекущихНастроек;
	
	ЗаполнитьСписок();
	
	Элемент = ХранилищаНастроек.НастройкиФормированияРегулярныхДокументов.ПолучитьСсылкуПоКлючуТекущейНастройки(КлючТекущихНастроек, Параметры.КлючОбъекта);
	
	ЭлементСписка = СписокНастроек.НайтиПоЗначению(КлючТекущихНастроек);

	Если ХранилищаНастроек.НастройкиФормированияРегулярныхДокументов.ТекущийВладелецЭтоСкладскиеДокументы(КлючОбъекта) Тогда
		
		Если Элемент <> Справочники.НастройкиФормированияДокументовПоОрдерам.ПустаяСсылка() И ЭлементСписка <> Неопределено Тогда
			ИндексСтроки = СписокНастроек.Индекс(ЭлементСписка);
			Элементы.СписокНастроек.ТекущаяСтрока = ИндексСтроки;
		КонецЕсли;
		
	Иначе
		
		Если Элемент <> Справочники.НастройкиФормированияДокументовВыпускаПродукции.ПустаяСсылка() И ЭлементСписка <> Неопределено Тогда
			ИндексСтроки = СписокНастроек.Индекс(ЭлементСписка);
			Элементы.СписокНастроек.ТекущаяСтрока = ИндексСтроки;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок()
	
	Запрос = Новый Запрос;
	Если ХранилищаНастроек.НастройкиФормированияРегулярныхДокументов.ТекущийВладелецЭтоСкладскиеДокументы(КлючОбъекта) Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СписокНастроек.ССылка КАК Ссылка,
		|	СписокНастроек.Наименование КАК Наименование
		|ИЗ
		|	Справочник.НастройкиФормированияДокументовПоОрдерам КАК СписокНастроек
		|ГДЕ
		|	(НЕ СписокНастроек.ПометкаУдаления)
		|	И (НЕ СписокНастроек.ЭтоГруппа)";
		
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НастройкиФормированияДокументовВыпускаПродукции.Ссылка КАК Ссылка,
		|	НастройкиФормированияДокументовВыпускаПродукции.Наименование КАК Наименование
		|ИЗ
		|	Справочник.НастройкиФормированияДокументовВыпускаПродукции КАК НастройкиФормированияДокументовВыпускаПродукции
		|ГДЕ
		|	(НЕ НастройкиФормированияДокументовВыпускаПродукции.ПометкаУдаления)
		|	И (НЕ НастройкиФормированияДокументовВыпускаПродукции.ЭтоГруппа)";
	КонецЕсли;

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	СписокНастроек.Очистить();
	Пока Выборка.Следующий() Цикл
		СписокНастроек.Добавить(Строка(Выборка.Ссылка.УникальныйИдентификатор()), Выборка.Наименование);
	КонецЦикла;                                                       
	
	СписокНастроек.СортироватьПоПредставлению();
КонецПроцедуры

&НаКлиенте
Процедура СписокНастроекПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ИмяСохраняемойНастройки = Элемент.ТекущиеДанные.Представление;
	Иначе
		ИмяСохраняемойНастройки = "";
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура УдалитьВыполнить()
	ВыполнитьКомандуУдалить();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуУдалить()
	ИдентификаторСохраняемойНастройки = НайтиНастройкуПоИмени(ИмяСохраняемойНастройки);
	Если ИдентификаторСохраняемойНастройки <> Неопределено Тогда
		УдалитьНастройку(ИдентификаторСохраняемойНастройки);
		ЗаполнитьСписок();
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура УдалитьНастройку(КлючНастройки)
	
	ИдентификаторУдаляемойНастройки = Новый УникальныйИдентификатор(КлючНастройки);
	
	Если ХранилищаНастроек.НастройкиФормированияРегулярныхДокументов.ТекущийВладелецЭтоСкладскиеДокументы(КлючОбъекта) Тогда
		Элемент = Справочники.НастройкиФормированияДокументовПоОрдерам.ПолучитьСсылку(ИдентификаторУдаляемойНастройки);
	Иначе
		Элемент = Справочники.НастройкиФормированияДокументовВыпускаПродукции.ПолучитьСсылку(ИдентификаторУдаляемойНастройки);
	КонецЕсли;
	Объект = Элемент.ПолучитьОбъект();
	Объект.Заблокировать();
	Объект.УстановитьПометкуУдаления(Истина);
КонецПроцедуры

&НаКлиенте
Процедура НастройкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СохранитьВыполнить();	
КонецПроцедуры
