&НаСервере
Функция ПолучитьТипНастройки(КлючТекущейНастройки) 
	Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(КлючТекущейНастройки) тогда
		ЗначениеСтруктура1 = Справочники.НастройкиФормированияДокументовОтработанногоВремени.ПолучитьСсылку(Новый УникальныйИдентификатор(КлючТекущейНастройки));			
		ЗначениеСтруктура2 = Справочники.НастройкиФормированияДокументовВыпускаПродукции.ПолучитьСсылку(Новый УникальныйИдентификатор(КлючТекущейНастройки));			
		Если ЗначениеСтруктура1.ПолучитьОбъект() <> Неопределено Тогда
			Возврат "ОтработанноеВремя"
		ИначеЕсли ЗначениеСтруктура2.ПолучитьОбъект() <> Неопределено Тогда
			Возврат "ВыпускПродукции"
		КонецЕсли; 
	КонецЕсли;
	Возврат ""
КонецФункции
	
&НаСервере
Функция ПолучитьСсылкуПоКлючуТекущейНастройки(КлючТекущейНастройки, КлючТекущегоВладельца, ТипНастройки)
	Возврат ХранилищаНастроек.НастройкиФормированияРегулярныхДокументов.ПолучитьСсылкуПоКлючуТекущейНастройки(КлючТекущейНастройки, КлючТекущегоВладельца, ?(ТипНастройки = "ОтработанноеВремя", Истина, Ложь));
КонецФункции

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ТипНастройки = ПолучитьТипНастройки(ПараметрыВыполненияКоманды.Источник.КлючТекущейНастройки);
	ИмяФормы	= ПараметрыВыполненияКоманды.Источник.ИмяФормы;
	Элемент		= ПолучитьСсылкуПоКлючуТекущейНастройки(ПараметрыВыполненияКоманды.Источник.КлючТекущейНастройки, ИмяФормы, ТипНастройки).НастройкаСсылка;
	
	Если НЕ ЗначениеЗаполнено(Элемент) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана настройка");
		Возврат;
	Иначе
		ТекстДокумента = ?(ТипНастройки = "ВыпускПродукции","выпуска продукции ","о составе смены ");
		Ответ = Вопрос("Будет выполнено формирование регулярных документов на основании документов " + ТекстДокумента + Символы.ПС
					 + "в соответствии с настройкой: """ + Строка(Элемент) + """" + Символы.ПС
					 + "После этого будет открыт список сформированных документов." + Символы.ПС
					 + "Продолжить?", РежимДиалогаВопрос.ДаНет,,
					 КодВозвратаДиалога.Нет, "Формирование регулярных документов");
					 
		Если Не Ответ = КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;		
	КонецЕсли;	
	
	ДатаФормированияДокументов = ТекущаяДата();
	
	ДатаНачалаФормированияДокументов = ПараметрыВыполненияКоманды.Источник.Элементы.Список.Период.ДатаНачала;
	Если ЗначениеЗаполнено(ПараметрыВыполненияКоманды.Источник.Элементы.Список.Период.ДатаОкончания) ТОгда
		ДатаОкончанияФормированияДокументов = ПараметрыВыполненияКоманды.Источник.Элементы.Список.Период.ДатаОкончания;
	Иначе
		ДатаОкончанияФормированияДокументов = ТекущаяДата();
	КонецЕсли;	
	
	Если ТипНастройки = "ВыпускПродукции" Тогда
		Состояние("Выполняется формирование регулярных документов выпуска продукции");
	Иначе
		Состояние("Выполняется формирование регулярных документов отработанного времени");
	КонецЕсли; 
	
	СтруктраДокументов = ФормированиеРегулярныхДокументов.СформироватьРегулярныеДокументы(Элемент,ДатаНачалаФормированияДокументов,ДатаОкончанияФормированияДокументов);
	
	СтрокаСообщения = "Формирование регулярных документов завершено";
	
	// Добавим 2 отбора в список документов. По умолчанию отборы не установлены
	
	
	// 1. По обработанным документам
	Если СтруктраДокументов.ОбработанныеДокументы.Количество() > 0 Тогда
		СтруктраПараметров = Новый Структура("МассивСсылок, Представление, Использование",СтруктраДокументов.ОбработанныеДокументы, "Обработанные документы " + Строка(ДатаФормированияДокументов), Ложь);
		РаботаСДиалогамиСервер.УстановитьОтборыВДинамическомСписке(ПараметрыВыполненияКоманды.Источник.Список, Новый Структура("ОтборПоСпискуСсылок", СтруктраПараметров));		
		СтрокаСообщения = СтрокаСообщения + Символы.ПС + "Обработано " + Строка(СтруктраДокументов.ОбработанныеДокументы.Количество()) + " документов";
	КонецЕсли;	
	
	// 2. По необработанным документам
	Если СтруктраДокументов.НеОбработанныеДокументы.Количество() > 0 Тогда
		СтруктраПараметров = Новый Структура("МассивСсылок, Представление, Использование",СтруктраДокументов.НеОбработанныеДокументы, "Не обработанные документы " + Строка(ДатаФормированияДокументов), Ложь);
		РаботаСДиалогамиСервер.УстановитьОтборыВДинамическомСписке(ПараметрыВыполненияКоманды.Источник.Список, Новый Структура("ОтборПоСпискуСсылок", СтруктраПараметров));		
		СтрокаСообщения = СтрокаСообщения + Символы.ПС + "Не удалось обработать " + Строка(СтруктраДокументов.НеОбработанныеДокументы.Количество()) + " документов";
	КонецЕсли;	
	
	// Откроем список регулярных документов
	Если СтруктраДокументов.СозданныеДокументы.Количество() > 0 Тогда
		Состояние(СтрокаСообщения + Символы.ПС + "Создано " + Строка(СтруктраДокументов.СозданныеДокументы.Количество()) + " регулярных документов");
		
		// В списке установим отбор по сформированным документам
		МассивСозданныхДокументов = Новый Массив();
		ПараметрыОткрытия = Новый Структура("ОтборПоСпискуСсылок, НепроведенныеДокументы", Новый Структура("МассивСсылок", СтруктраДокументов.СозданныеДокументы), СтруктраДокументов.НепроведенныеДокументы);
		
		Если ТипНастройки = "ВыпускПродукции" Тогда
			// В КА могут быть сформированы только документы "Выпуск продукции".
			Если ТипЗнч(СтруктраДокументов.СозданныеДокументы[0]) = Тип("ДокументСсылка.ВыпускПродукции") Тогда
				ОткрытьФорму("Документ.ВыпускПродукции.ФормаСписка", ПараметрыОткрытия, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно);
			Иначе // В УПП могут быть также сформированы документы "Отчет производства за смену".
				ОткрытьФорму("ЖурналДокументов.РегламентныеДокументыПроизводство.ФормаСписка", ПараметрыОткрытия, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно);
			КонецЕсли;
		Иначе
			ОткрытьФорму("Документ.ТабельУчетаРабочегоВремениОрганизации.ФормаСписка", ПараметрыОткрытия, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно);
		КонецЕсли;
	
	Иначе
		Состояние("Регулярные документы не созданы");
	КонецЕсли;	
	
КонецПроцедуры
