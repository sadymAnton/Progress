Процедура ОтразитьНеПринимаемыеРасходы(Проводка, СчетУчетаНепринимаемыхРасходов)
	
	Проводка.КоличествоДт  = 0;
	Проводка.СчетДт        =  СчетУчетаНепринимаемыхРасходов;
	Проводка.СубконтоДт.Очистить();	
	Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
	
КонецПроцедуры

Процедура ОтразитьНеПринимаемыеДоходы(Проводка)
	
	Проводка.КоличествоКт = 0;
	Проводка.СчетКт       =  ПланыСчетов.Налоговый.ДоходыНеУчитываемые;
	Проводка.СубконтоКт.Очистить();	
	Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;
	
КонецПроцедуры

Функция ПолучитьПоддержкаПБУ18(Период, Организация, КэшПоддержкаПБУ18)
	
	СтрокиКэша = КэшПоддержкаПБУ18.НайтиСтроки(Новый Структура("Период,Организация", НачалоМесяца(Период), Организация));
	
	Если СтрокиКэша.Количество() = 0 Тогда
		ПараметрыУчетнойПолитикиРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Период, Организация, Ложь);
		СтрокаКэша = КэшПоддержкаПБУ18.Добавить();
		СтрокаКэша.Период = НачалоМесяца(Период);
		СтрокаКэша.Организация = Организация;
		Если ЗначениеЗаполнено(ПараметрыУчетнойПолитикиРегл) Тогда
			СтрокаКэша.ПоддержкаПБУ18 = ПараметрыУчетнойПолитикиРегл.ПоддержкаПБУ18;
		Иначе
			СтрокаКэша.ПоддержкаПБУ18 = Ложь;
		КонецЕсли; 
	Иначе
		СтрокаКэша = СтрокиКэша[0];
	КонецЕсли;
	
	Возврат СтрокаКэша.ПоддержкаПБУ18;
	
КонецФункции // ПолучитьПоддержкаПБУ18
 
//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ
// 

// Обработчик события "ПередЗаписью".
// Проверяет возможность изменения записей регистра.
// Замещает пустные значения субконто составного типа значением Неопределено.
// Проверяет и устанавливает вид учета.
// Отрабатывает ПБУ 18/02.
//
Процедура ПередЗаписью(Отказ)
	Перем ТипРегистратора;
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат; 
	КонецЕсли;
	НалоговыйУчет.СвернутьНаборЗаписейРегистраБухгалтерии(ЭтотОбъект);
	КэшПоддержкаПБУ18 = Новый ТаблицаЗначений;
	КэшПоддержкаПБУ18.Колонки.Добавить("Период");
	КэшПоддержкаПБУ18.Колонки.Добавить("Организация");
	КэшПоддержкаПБУ18.Колонки.Добавить("ПоддержкаПБУ18");
	ТипРегистратора = ТипЗнч(ЭтотОбъект.Отбор.Регистратор.Значение);
	Для Каждого Проводка Из ЭтотОбъект Цикл
		
		// Приведение пустых значений субконто составного типа.
		Для Каждого Субконто Из Проводка.СубконтоДт Цикл
			Если Субконто.Ключ.ТипЗначения.Типы().Количество() > 1
				И НЕ ЗначениеЗаполнено(Субконто.Значение) 
				И НЕ (Субконто.Значение = Неопределено) Тогда
				Проводка.СубконтоДт.Вставить(Субконто.Ключ, Неопределено);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Субконто Из Проводка.СубконтоКт Цикл
			Если Субконто.Ключ.ТипЗначения.Типы().Количество() > 1
				И НЕ ЗначениеЗаполнено(Субконто.Значение) 
				И НЕ (Субконто.Значение = Неопределено) Тогда
				Проводка.СубконтоКт.Вставить(Субконто.Ключ, Неопределено);
			КонецЕсли;
		КонецЦикла;
		
		ПоддержкаПБУ18 = ПолучитьПоддержкаПБУ18(Проводка.Период, Проводка.Организация, КэшПоддержкаПБУ18);
		
		Если НЕ ЗначениеЗаполнено(Проводка.ВидУчетаДт) ИЛИ НЕ ЗначениеЗаполнено(Проводка.ВидУчетаКт)  Тогда
			
			ВидУчетаДт = Проводка.ВидУчетаДт;
			ВидУчетаКт = Проводка.ВидУчетаКт;
			
			НалоговыйУчет.ВидУчетаПоПБУ18(Проводка, , ПоддержкаПБУ18);
			
			Если (ЗначениеЗаполнено(ВидУчетаДт)) И
				(ЗначениеЗаполнено(Проводка.СчетДт)) Тогда
				Проводка.ВидУчетаДт = ВидУчетаДт;
			КонецЕсли;		
			
			Если (ЗначениеЗаполнено(ВидУчетаКт)) И
				(ЗначениеЗаполнено(Проводка.СчетКт))  Тогда
				Проводка.ВидУчетаКт = ВидУчетаКт;
			КонецЕсли;
			
		КонецЕсли;
		
		Если (Не Проводка.СчетКт = ПланыСчетов.Налоговый.ПустаяСсылка() И Проводка.СчетКт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.ПрочиеДоходы))
			И (Не ТипРегистратора = Тип("ДокументСсылка.ОперацияБух"))
            И (Не ТипРегистратора = Тип("ДокументСсылка.КорректировкаЗаписейРегистров")) Тогда
			ОтразитьНеПринимаемыеДоходы = НалоговыйУчет.ОпределитьНеПринимаемыеДоходыРасходы(Проводка);
		Иначе
			ОтразитьНеПринимаемыеДоходы = Ложь;
		КонецЕсли;
		
		Если ОтразитьНеПринимаемыеДоходы ИЛИ ТипРегистратора = Тип("ДокументСсылка.ОперацияБух") Или
			ТипРегистратора = Тип("ДокументСсылка.КорректировкаЗаписейРегистров") Или
			(ТипРегистратора = Тип("ДокументСсылка.АмортизацияОС") И НЕ ЗначениеЗаполнено(Проводка.СубконтоКт.ОсновныеСредства)) Или
			(ТипРегистратора = Тип("ДокументСсылка.АмортизацияНМА") И НЕ ЗначениеЗаполнено(Проводка.СубконтоКт.НематериальныеАктивы)) Или
			(ТипРегистратора = Тип("ДокументСсылка.СписаниеРасходовБудущихПериодов") И НЕ ЗначениеЗаполнено(Проводка.СубконтоКт.РасходыБудущихПериодов)) Или
			(Проводка.ВидУчетаКт <> Перечисления.ВидыУчетаПоПБУ18.НУ И НЕ Лев(Проводка.СчетКт.Код, 2) = "97") Или
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР Тогда
			
			ОтразитьНеПринимаемыеРасходы = Ложь;
			
		Иначе 
			ОтразитьНеПринимаемыеРасходы = НалоговыйУчет.ОпределитьНеПринимаемыеДоходыРасходы(Проводка);
			
		КонецЕсли;
		
		Если ОтразитьНеПринимаемыеРасходы Тогда 
			Если ПоддержкаПБУ18 Тогда
				ПроводкаПоНеПринимаемымРасходам = ЭтотОбъект.Добавить();
				ПроводкаПоНеПринимаемымРасходам.Организация = Проводка.Организация;
				ПроводкаПоНеПринимаемымРасходам.Период      = Проводка.Период;
				ПроводкаПоНеПринимаемымРасходам.Содержание  = Проводка.Содержание;
				ПроводкаПоНеПринимаемымРасходам.Сумма       = Проводка.Сумма;
				ПроводкаПоНеПринимаемымРасходам.СписаниеПартий = Проводка.СписаниеПартий;
			Иначе
				ПроводкаПоНеПринимаемымРасходам = Проводка;
			КонецЕсли;
			
			Если Проводка.СчетДт = ПланыСчетов.Налоговый.ВнереализационныеРасходы Или Проводка.СчетДт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.ВнереализационныеРасходы) Тогда
				СчетУчетаНепринимаемыхРасходов     =   ПланыСчетов.Налоговый.ВнереализационныеРасходыНеУчитываемые;
			ИначеЕсли Проводка.СчетДт = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда Или Проводка.СчетКт = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда Тогда				
				СчетУчетаНепринимаемыхРасходов     =  ПланыСчетов.Налоговый.ВыплатыВпользуФизЛицПоП_1_48;
			Иначе
				СчетУчетаНепринимаемыхРасходов     =  ПланыСчетов.Налоговый.ДругиеВыплатыПоП_1_48;
			КонецЕсли;
			
			ОтразитьНеПринимаемыеРасходы(ПроводкаПоНеПринимаемымРасходам, СчетУчетаНепринимаемыхРасходов);
		КонецЕсли;
		
		Если ОтразитьНеПринимаемыеДоходы Тогда 
			Если ПоддержкаПБУ18 Тогда
				ПроводкаПоНеПринимаемымРасходам = ЭтотОбъект.Добавить();
				ПроводкаПоНеПринимаемымРасходам.Организация = Проводка.Организация;
				ПроводкаПоНеПринимаемымРасходам.Период      = Проводка.Период;
				ПроводкаПоНеПринимаемымРасходам.Содержание  = Проводка.Содержание;
				ПроводкаПоНеПринимаемымРасходам.Сумма       = Проводка.Сумма;
				ПроводкаПоНеПринимаемымРасходам.СписаниеПартий = Проводка.СписаниеПартий;
			Иначе
				ПроводкаПоНеПринимаемымРасходам = Проводка;
			КонецЕсли;
			
			ОтразитьНеПринимаемыеДоходы(ПроводкаПоНеПринимаемымРасходам);
		КонецЕсли;
		
		
		Если Не ПоддержкаПБУ18 И ((Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР Или 
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ВР Или 
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР Или 
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР)) Тогда
			Сообщить("Для организации " + Проводка.Организация + " не применяется ПБУ 18/02, проведение по виду учета ""ПР"" и ""ВР"" некорректно");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПередЗаписью	
