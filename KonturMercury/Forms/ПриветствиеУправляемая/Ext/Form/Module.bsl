&НаСервере
Перем ОбработкаОбъект;

&НаКлиенте
Перем ИмяОбработки;

//******************************* Общие **********************************

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта(ОбновитьКэш=Ложь)

	КэшироватьМодульОбъекта = Истина;
	
	Если ОбработкаОбъект=Неопределено или ОбновитьКэш Тогда
		//TODO перекликается с функцией ПоместитьМОВХранилище()
		Если КэшироватьМодульОбъекта Тогда
			Если Параметры.АдресХранилища<>"" и Не ОбновитьКэш Тогда
				_Структура = ПолучитьИзВременногоХранилища(Параметры.АдресХранилища);
				Если ТипЗнч(_Структура) = Тип("Структура") Тогда
					_Структура.Свойство("ОбработкаОбъект",ОбработкаОбъект);
				КонецЕсли;
			КонецЕсли;
			
			Если ОбработкаОбъект=Неопределено или ОбновитьКэш Тогда //после некоторых действий важно обновлять кэш (например изменение ключевых настроек)
				ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
				//ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
				Параметры.АдресХранилища = ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект",ОбработкаОбъект),УникальныйИдентификатор);
				//ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
			КонецЕсли;
			
		Иначе
			ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
			//ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
			//ОбработкаОбъект.IDОсновнойФормы = Параметры.IDОсновнойФормы;
		КонецЕсли;

	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции


&НаКлиенте
Процедура ПредупреждениеМеркурий_Оповещение(Парам1, Парам2) Экспорт
КонецПроцедуры

&НаКлиенте
Функция ПредупреждениеМеркурий(ТекстПредупреждения)
	
	Кнопки = новый СписокЗначений;
	Кнопки.Добавить("Всё понятно.");
	
	Если Параметры.МодальностьЗапрещена Тогда
		Выполнить("ПоказатьВопрос(Новый ОписаниеОповещения(""ПредупреждениеМеркурий_Оповещение"",ЭтаФорма),ТекстПредупреждения,Кнопки,,,""Контур.Меркурий"")");
	Иначе
		Вопрос(ТекстПредупреждения, Кнопки,,,"Контур.Меркурий");
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МодульОбъекта().ПриветствиеКонтрольМетаданных(Элементы);
	Параметры.МодальностьЗапрещена = МодульОбъекта().МодальностьЗапрещена();
	
КонецПроцедуры

&НаСервере
Функция ПриветствиеПодключитьМодульEDIНаСервере()
	Возврат МодульОбъекта().ПриветствиеПодключитьМодульEDI();
КонецФункции

&НаКлиенте
Процедура ПодключитьМодульEDIНажатие(Элемент)
	
	Если Элемент.Заголовок = "Подключить" Тогда 
		ПерейтиКВводуУчетнойЗаписи();
	Иначе
		ТекстОшибки = ПриветствиеПодключитьМодульEDIНаСервере();		
		Если ТекстОшибки = "" Тогда
			ТекстПредупреждения = "Модуль подключен. Теперь перезапустите модуль EDI и не забудьте ознакомиться с приложенной инструкцией
									|Попытки сэкономить время при изучении инструкции приведут к его серьезной потере в будущем.";
			Элементы.Приветствие.Заголовок = ТекстПредупреждения;
			ПредупреждениеМеркурий(ТекстПредупреждения);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ОтключитьМодульEDIНаСервере()
	Возврат МодульОбъекта().ПриветствиеОтключитьМодульEDI(Элементы.Отключить, Элементы);
КонецФункции

&НаКлиенте
Процедура ОтключитьМодульEDIНажатие(Элемент)
	ТекстПредупреждения = ОтключитьМодульEDIНаСервере();
	ПредупреждениеМеркурий(ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура МнеНужнаПомощьНажатие(Элемент)
	ЗапуститьПриложение("https://kontur.ru/support");
КонецПроцедуры

&НаКлиенте
Процедура ВводУчетнойЗаписиОповещение(Парам1, Парам2) Экспорт
	Если Парам1 = Истина Тогда
		ТекстПредупреждения = "Модуль подключен. Теперь перезапустите модуль EDI и не забудьте ознакомиться с приложенной инструкцией
		|Попытки сэкономить время при изучении инструкции приведут к его серьезной потере в будущем.";
		Элементы.Отключить.Видимость = Истина;
		Элементы.ПодключитьМодульEDI.Видимость = Ложь;
		Элементы.Приветствие.Заголовок = ТекстПредупреждения;
	Иначе
		ТекстПредупреждения = "Вы не сможете работать в интеграции с Меркурием без учетной записи.
		|Получите учетную запись и возвращайтесь...";
	КонецЕсли;
	
	Если ТекстПредупреждения<>"" Тогда
		ПредупреждениеМеркурий(ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПутьКФормам()
	Возврат МодульОбъекта().Метаданные().ПолноеИмя() + ".Форма.";
КонецФункции

&НаКлиенте
Процедура ПерейтиКВводуУчетнойЗаписи()
	
	ИмяФормыРеквизитов = ПутьКФормам()+"Меркурий_ФормаВводаРеквизитовИПроверкиПодключенияУправляемая";
	Если Параметры.МодальностьЗапрещена Тогда
		Выполнить("ОткрытьФорму(ИмяФормыРеквизитов,Новый Структура(""МодальностьЗапрещена"", Истина),ЭтаФорма,,,,Новый ОписаниеОповещения(""ВводУчетнойЗаписиОповещение"", ЭтаФорма),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)");
	Иначе
		ОткрытьФормуМодально(ИмяФормыРеквизитов,Новый Структура("МодальностьЗапрещена", Ложь),ЭтаФорма);
	КонецЕсли;
	
	
КонецПроцедуры

